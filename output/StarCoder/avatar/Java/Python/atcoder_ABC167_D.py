import java.util.* ; public class atcoder_ABC167_D { Scanner sc = new Scanner ( System.in ) ; final int MOD = 1000000007 ; final int MAX = Integer.MAX_VALUE ; final long LMAX = Long.MAX_VALUE ; int len = ( int ) 1e6 + 1 ; void doIt ( ) { int N = sc.nextInt ( ) ; long K = sc.nextLong ( ) ; int A [ ] = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) - 1 ; } Set < Integer > used = new HashSet < > ( ) ; int idx [ ] = new int [ N ] ; int pos [ ] = new int [ N ] ; int next = 0, cur = 0 ; while (! used.contains ( next ) ) { used.add ( next ) ; idx [ next ] = cur ; pos [ cur ] = next ; next = A [ next ] ; cur ++ ; } long a = ( long ) cur - idx [ next ] ; long b = ( long ) idx [ next ] ; int ans = ( int ) ( ( 10000 * a + K - b ) % a + b ) ; if ( b > K ) ans = ( int ) K ; System.out.println ( pos [ ans ] + 1 ) ; } public static void main ( String [ ] args ) { new atcoder_ABC167_D ( ).doIt ( ) ; } }