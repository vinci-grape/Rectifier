import java.util.Scanner ; import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.nio.charset.MalformedInputException ; import java.util.StringTokenizer ; import java.util.Arrays ; import java.util.HashSet ; def main ( ): in = FastScanner ( ) ; sc = Scanner ( System.in ) ; o = PrintWriter ( System.out ) ; n = sc.nextInt ( ) ; s = sc.nextInt ( ) ; max = 0 ; while ( n > 0 ): f = sc.nextInt ( ) ; t = sc.nextInt ( ) ; if ( max < f + t ): max = f + t ; n -= 1 ; o.println ( max ) ; o.close ( ) ; class FastScanner ( ): def __init__ ( self ): self. br = BufferedReader ( InputStreamReader ( System.in ) ) ; self. st = StringTokenizer ( "" ) ; def next ( self ) : while ( not self. st. hasMoreElements ( ) ) : try : self. st = StringTokenizer ( self. br. readLine ( ) ) ; except ( IOException e ) : e. printStackTrace ( ) ; return self. st. nextToken ( ) ; def nextLine ( self ) : String str = "" ; try : str = self. br. readLine ( ) ; except ( IOException e ) : e. printStackTrace ( ) ; return str ; def nextByte ( self ) : return Byte. parseByte ( next ( ) ) ; def nextShort ( self ) : return Short. parseShort ( next ( ) ) ; def nextInt ( self ) : return Integer. parseInt ( next ( ) ) ; def nextLong ( self ) : return java. lang. Long. parseLong ( next ( ) ) ; def nextDouble ( self ) : return Double. parseDouble ( next ( ) ) ; if __name__ == "__main__" : main ( )