#include <bits/stdc++.h> using namespace std ; int main ( ) { int N ; long long x ; cin >> N >> x ; vector < long long > srimeList ; for ( int i = 0 ; i < N ; i ++ ) { long long srime ; cin >> srime ; srimeList.push_back ( srime ) ; } vector < vector < long long > > costList ( N ) ; for ( int i = 0 ; i < N ; i ++ ) { costList [ i ].push_back ( srimeList [ i ] ) ; } for ( int i = 0 ; i < N ; i ++ ) { costList [ i ].push_back ( srimeList [ ( i - 1 + N ) % N ] ) ; } for ( int i = 1 ; i < N ; i ++ ) { for ( int j = 0 ; j < N ; j ++ ) { costList [ i ] [ j ] = min ( costList [ i ] [ j ], costList [ i - 1 ] [ j ] ) ; } } vector < long long > result ; for ( int i = 0 ; i < N ; i ++ ) { result.push_back ( i * x + accumulate ( costList [ i ].begin ( ), costList [ i ].end ( ), 0LL ) ) ; } cout << *min_element ( result.begin ( ), result.end ( ) ) << endl ; }