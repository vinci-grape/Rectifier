import java.util.* ; public class codeforces_7_B { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System.in ) ; int t = s.nextInt ( ) ; int m = s.nextInt ( ) ; int [ ] memory = new int [ m ] ; int allocIdx = 0 ; for ( int j = 0 ; j < t ; j ++ ) { switch ( s.next ( ) ) { case "alloc" : int n = s.nextInt ( ) ; int len = 0 ; boolean canAlloc = false ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == 0 ) len ++ ; else len = 0 ; if ( len == n ) { canAlloc = true ; len = i - n + 1 ; break ; } } if ( canAlloc ) { allocIdx ++ ; for ( int i = len ; i < len + n ; i ++ ) memory [ i ] = allocIdx ; System.out.println ( allocIdx ) ; } else System.out.println ( "NULL" ) ; break ; case "erase" : int x = s.nextInt ( ) ; if ( x <= 0 ) { System.out.println ( "ILLEGAL_ERASE_ARGUMENT" ) ; break ; } boolean hasErased = false ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == x ) { memory [ i ] = 0 ; hasErased = true ; } } if (! hasErased ) System.out.println ( "ILLEGAL_ERASE_ARGUMENT" ) ; break ; case "defragment" : int d = 0 ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == 0 ) d ++ ; else memory [ i - d ] = memory [ i ] ; } for ( int i = m - d ; i < m ; i ++ ) memory [ i ] = 0 ; break ; default : System.out.println ( "h" ) ; break ; } } s.close ( ) ; } }