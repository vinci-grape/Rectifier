public class atcoder_ABC167_D {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] res = new int[numCourses];
        int[] inDegree = new int[numCourses];
        int[] outDegree = new int[numCourses];
        int[] degree = new int[numCourses];
        int[] index = new int[numCourses];
        int[] count = new int[numCourses];
        int[] path = new int[numCourses];
        int[] loop = new int[numCourses];
        int[] t = new int[numCourses];
        boolean[] flag = new boolean[numCourses];
        int[] Hash = new int[numCourses];
        int[] ind = new int[numCourses];
        int[] x = new int[numCourses];
        int[] count2 = new int[numCourses];
        int[] path2 = new int[numCourses];
        int[] loop2 = new int[numCourses];
        int[] t2 = new int[numCourses];
        boolean[] flag2 = new boolean[numCourses];
        int[] Hash2 = new int[numCourses];
        int[] ind2 = new int[numCourses];
        int[] x2 = new int[numCourses];
        int[] count3 = new int[numCourses];
        int[] path3 = new int[numCourses];
        int[] loop3 = new int[numCourses];
        int[] t3 = new int[numCourses];
        boolean[] flag3 = new boolean[numCourses];
        int[] Hash3 = new int[numCourses];
        int[] ind3 = new int[numCourses];
        int[] x3 = new int[numCourses];
        int[] count4 = new int[numCourses];
        int[] path4 = new int[numCourses];
        int[] loop4 = new int[numCourses];
        int[] t4 = new int[numCourses];
        boolean[] flag4 = new boolean[numCourses];
        int[] Hash4 = new int[numCourses];
        int[] ind4 = new int[numCourses];
        int[] x4 = new int[numCourses];
        int[] count5 = new int[numCourses];
        int[] path5 = new int[numCourses];
        int[] loop5 = new int[numCourses];
        int[] t5 = new int[numCourses];
        boolean[] flag5 = new boolean[numCourses];
        int[] Hash5 = new int[numCourses];
        int[] ind5 = new int[numCourses];
        int[] x5 = new int[numCourses];
        int[] count6 = new int[numCourses];
        int[] path6 = new int[numCourses];
        int[] loop6 = new int[numCourses];
        int[] t6 = new int[numCourses];
        boolean[] flag6 = new boolean[numCourses];
        int[] Hash6 = new int[numCourses];
        int[] ind6 = new int[numCourses];
        int[] x6 = new int[numCourses];
        int[] count7 = new int[numCourses];
        int[] path7 = new int[numCourses];
        int[] loop7 = new int[numCourses];
        int[] t7 = new int[numCourses];
        boolean[] flag7 = new boolean[numCourses];
        int[] Hash7 = new int[numCourses];
        int[] ind7 = new int[numCourses];
        int[] x7 = new int[numCourses];
        int[] count8 = new int[numCourses];
        int[] path8 = new int[numCourses];
        int[] loop8 = new int[numCourses];
        int[] t8 = new int[numCourses];
        boolean[] flag8 = new boolean[numCourses];
        int[] Hash8 = new int[numCourses];
        int[] ind8 = new int[numCourses];
        int[] x8 = new int[numCourses];
        int[] count9 = new int[numCourses];
        int[] path9 = new int[numCourses];
        int[] loop9 = new int[numCourses];
        int[] t9 = new int[numCourses];
        boolean[] flag9 = new boolean[numCourses];
        int[] Hash9 = new int[numCourses];
        int[] ind9 = new int[numCourses];
        int[] x9 = new int[numCourses];
        int[] count10 = new int[numCourses];
        int[] path10 = new int[numCourses];
        int[] loop10 = new int[numCourses];
        int[] t10 = new int[numCourses];
        boolean[] flag10 = new boolean[numCourses];
        int[] Hash10 = new int[numCourses];
        int[] ind10 = new int[numCourses];
        int[] x10 = new int[numCourses];
        int[] count11 = new int[numCourses];
        int[] path11 = new int[numCourses];
        int[] loop11 = new int[numCourses];
        int[] t11 = new int[numCourses];
        boolean[] flag11 = new boolean[numCourses];
        int[] Hash11 = new int[numCourses];
        int[] ind11 = new int[numCourses];
        int[] x11 = new int[numCourses];
        int[] count12 = new int[numCourses];
        int[] path12 = new int[numCourses];
        int[] loop12 = new int[numCourses];
        int[] t12 = new int[numCourses];
        boolean[] flag12 = new boolean[numCourses];
        int[] Hash12 = new int[numCourses];
        int[] ind12 = new int[numCourses];
        int[] x12 = new int[numCourses];
        int[] count13 = new int[numCourses];
        int[] path13 = new int[numCourses];
        int[] loop13 = new int[numCourses];
        int[] t13 = new int[numCourses];
        boolean[] flag13 = new boolean[numCourses];
        int[] Hash13 = new int[numCourses];
        int[] ind13 = new int[numCourses];
        int[] x13 = new int[numCourses];
        int[] count14 = new int[numCourses];
        int[] path14 = new int[numCourses];
        int[] loop14 = new int[numCourses];
        int[] t14 = new int[numCourses];
        boolean[] flag14 = new boolean[numCourses];
        int[] Hash14 = new int[numCourses];
        int[] ind14 = new int[numCourses];
        int[] x14 = new int[numCourses];
        int[] count15 = new int[numCourses];
        int[] path15 = new int[numCourses];
        int[] loop15 = new int[numCourses];
        int[] t15 = new int[numCourses];
        boolean[] flag15 = new boolean[numCourses];
        int[] Hash15 = new int[numCourses];
        int[] ind15 = new int[numCourses];
        int[] x15 = new int[numCourses];