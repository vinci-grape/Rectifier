model,dataset,source,target,file,invalid,valid
ChatGPT,avatar,Python,Java,codeforces_569_A.java,"int t, s, q;
Scanner sc = new Scanner(System.in);
t = sc.nextInt();
s = sc.nextInt();
q = sc.nextInt();
int ans = 0;
while (s < t) {
    s *= q;
    ans++;
}
System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int t, s, q;
        Scanner sc = new Scanner(System.in);
        t = sc.nextInt();
        s = sc.nextInt();
        q = sc.nextInt();
        int ans = 0;
        while (s < t) {
            s *= q;
            ans++;
        }
        System.out.println(ans);  
    }
}"
ChatGPT,avatar,Python,Java,codeforces_351_A.java,"import java.util.Arrays;
import java.util.Scanner;

public class codeforces_351_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        double[] arr = new double[n];
        
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextDouble();
        }
        
        Arrays.sort(arr);
        double[] newArr = new double[n];
        int index = 0;
        
        for (int i = 0; i < n; i++) {
            if (arr[i] - (int) arr[i] != 0) {
                newArr[index++] = arr[i] - (int) arr[i];
            }
        }
        
        int o = 2 * n - index;
        double arrSum = 0;
        
        for (int i = 0; i < index; i++) {
            arrSum += newArr[i];
        }
        
        int res = (int) 2e9;
        
        for (int i = 0; i <= n; i++) {
            if (i + o >= n) {
                res = Math.min(res, Math.abs(i - arrSum));
            }
        }
        
        System.out.printf(""%.3f"", (double) res);
    }
}","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
    
        scanner.nextLine();
        String line = scanner.nextLine();
        String[] numbers = line.split("" "");
        double[] arr = new double[numbers.length];

        for (int i = 0; i < numbers.length; i++) {
            arr[i] = Double.parseDouble(numbers[i]);
        }
        
        Arrays.sort(arr);
        double[] newArr = new double[numbers.length];
        int index = 0;
        
        for (int i = 0; i < numbers.length; i++) {
            if (arr[i] - (int) arr[i] != 0) {
                newArr[index++] = arr[i] - (int) arr[i];
            }
        }
        
        int o = 2 * n - index;
        double arrSum = 0;
        
        for (int i = 0; i < index; i++) {
            arrSum += newArr[i];
        }
        
        int res = (int) 2e9;
        
        for (int i = 0; i <= n; i++) {
            if (i + o >= n) {
                res = (int) Math.min(res, Math.abs(i - arrSum));
            }
        }
        
        System.out.printf(""%.3f"", (double) res);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC150_D.java,"public class atcoder_ABC150_D {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
        int num = input.nextInt();

        Set<Integer> numSet = new HashSet<>();
        for (int i = 0; i < n; i++) {
            numSet.add(input.nextInt());
        }

        Set<Integer> twoTimesSet = new HashSet<>();
        for (int num : numSet) {
            for (int j = 1; j < 30; j++) {
                num /= 2;
                if (num % 2 != 0) {
                    twoTimesSet.add(j);
                    break;
                }
            }
            if (twoTimesSet.size() != 1) {
                System.out.println(0);
                return;
            }
        }

        List<Integer> numList = new ArrayList<>(numSet);
        int lcm = numList.get(0);
        for (int i = 1; i < numList.size(); i++) {
            lcm = lcm * numList.get(i) / gcd(lcm, numList.get(i));
        }

        System.out.println((num - lcm / 2) / lcm + 1);
    }

    private static int gcd(int a, int b) {
        if (b == 0) {
            return a;
        } else {
            return gcd(b, a % b);
        }
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
        int num = input.nextInt();

        Set<Integer> numSet = new HashSet<>();
        for (int i = 0; i < n; i++) {
            numSet.add(input.nextInt());
        }

        Set<Integer> twoTimesSet = new HashSet<>();
        for (int num : numSet) {
            for (int j = 1; j < 30; j++) {
                num /= 2;
                if (num % 2 != 0) {
                    twoTimesSet.add(j);
                    break;
                }
            }
            if (twoTimesSet.size() != 1) {
                System.out.println(0);
                return;
            }
        }

        List<Integer> numList = new ArrayList<>(numSet);
        int lcm = numList.get(0);
        for (int i = 1; i < numList.size(); i++) {
            lcm = lcm * numList.get(i) / gcd(lcm, numList.get(i));
        }

        System.out.println((num - lcm / 2) / lcm + 1);
    }

    private static int gcd(int a, int b) {
        if (b == 0) {
            return a;
        } else {
            return gcd(b, a % b);
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_70_B.java,"import java.util.Scanner;
import java.util.regex.Pattern;

public class codeforces_70_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        int ans = 1;
        int sumL = 0;

        String input = scanner.nextLine();
        String[] sentences = Pattern.compile(""[.?!]"").split(input);

        for (String s : sentences) {
            s = s.trim() + ""."";
            int L = s.length();

            if (L > 1) {
                if (L > n) {
                    System.out.println(""Impossible"");
                    System.exit(0);
                }

                if (sumL + L + (sumL > 0) > n) {
                    ans++;
                    sumL = L;
                } else {
                    sumL = sumL + L + (sumL > 0);
                }
            }
        }

        System.out.println(ans);
    }
}","import java.util.Scanner;
import java.util.regex.Pattern;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        int ans = 1;
        int sumL = 0;

        String input = scanner.nextLine();
        String[] sentences = Pattern.compile(""[.?!]"").split(input);

        for (String s : sentences) {
            s = s.trim() + ""."";
            int L = s.length();

            if (L > 1) {
                if (L > n) {
                    System.out.println(""Impossible"");
                    System.exit(0);
                }

                int additionalLength = (sumL > 0) ? 1 : 0;

                if (sumL + L + additionalLength > n) {
                    ans++;
                    sumL = L;
                } else {
                    sumL = sumL + L + additionalLength;
                }
            }
        }

        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC010_B.java,"int n = Integer.parseInt(scanner.nextLine());
String[] inputArray = scanner.nextLine().split("" "");
int[] a = new int[n];
for(int i=0; i<n; i++) {
    a[i] = Integer.parseInt(inputArray[i]);
}
if (Arrays.stream(a).sum() % (n * (n + 1) / 2) != 0) {
    System.out.println(""NO"");
} else {
    int k = Arrays.stream(a).sum() / (n * (n + 1) / 2);
    int[] extendedArray = new int[n+1];
    System.arraycopy(a, 0, extendedArray, 0, n);
    extendedArray[n] = a[0];
    int sum1 = 0;
    int sum2 = 0;
    for (int i = 1; i <= n; i++) {
        sum1 += (k - extendedArray[i] + extendedArray[i-1]) % n;
        sum2 += (k - extendedArray[i] + extendedArray[i-1]) / n >= 0 ? 1 : 0;
    }
    if (sum1 != 0 || sum2 != n) {
        System.out.println(""NO"");
    } else {
        System.out.println(""YES"");
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        String[] inputArray = scanner.nextLine().split("" "");
        int[] a = new int[n];
        for(int i=0; i<n; i++) {
            a[i] = Integer.parseInt(inputArray[i]);
        }
        if (Arrays.stream(a).sum() % (n * (n + 1) / 2) != 0) {
            System.out.println(""NO"");
        } else {
            int k = Arrays.stream(a).sum() / (n * (n + 1) / 2);
            int[] extendedArray = new int[n+1];
            System.arraycopy(a, 0, extendedArray, 0, n);
            extendedArray[n] = a[0];
            int sum1 = 0;
            int sum2 = 0;
            for (int i = 1; i <= n; i++) {
                sum1 += (k - extendedArray[i] + extendedArray[i-1]) % n;
                sum2 += (k - extendedArray[i] + extendedArray[i-1]) / n >= 0 ? 1 : 0;
            }
            if (sum1 != 0 || sum2 != n) {
                System.out.println(""NO"");
            } else {
                System.out.println(""YES"");
            }
        }
        
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC164_A.java,"public class atcoder_ABC164_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();
        int W = sc.nextInt();
        
        if (S <= W) {
            System.out.println(""unsafe"");
        } else {
            System.out.println(""safe"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();
        int W = sc.nextInt();
        
        if (S <= W) {
            System.out.println(""unsafe"");
        } else {
            System.out.println(""safe"");
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_222_A.java,"public class codeforces_222_A {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int[] elems = new int[n];
        for (int i = 0; i < n; i++) {
            elems[i] = scanner.nextInt();
        }
        if (allSame(elems)) {
            System.out.println(0);
            return;
        }
        if (k == 1) {
            System.out.println(-1);
            return;
        }
        if (!allSame(Arrays.copyOfRange(elems, k - 1, elems.length))) {
            System.out.println(-1);
            return;
        }
        int target = elems[elems.length - 1];
        List<Integer> toDelete = new ArrayList<>();
        for (int i = 0; i < k - 1; i++) {
            toDelete.add(elems[i]);
        }
        while (!toDelete.isEmpty() && toDelete.get(toDelete.size() - 1) == target) {
            toDelete.remove(toDelete.size() - 1);
        }
        System.out.println(toDelete.size());
    }
    
    private static boolean allSame(int[] arr) {
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] != arr[0]) {
                return false;
            }
        }
        return true;
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int[] elems = new int[n];
        for (int i = 0; i < n; i++) {
            elems[i] = scanner.nextInt();
        }
        if (allSame(elems)) {
            System.out.println(0);
            return;
        }
        if (k == 1) {
            System.out.println(-1);
            return;
        }
        if (!allSame(Arrays.copyOfRange(elems, k - 1, elems.length))) {
            System.out.println(-1);
            return;
        }
        int target = elems[elems.length - 1];
        List<Integer> toDelete = new ArrayList<>();
        for (int i = 0; i < k - 1; i++) {
            toDelete.add(elems[i]);
        }
        while (!toDelete.isEmpty() && toDelete.get(toDelete.size() - 1) == target) {
            toDelete.remove(toDelete.size() - 1);
        }
        System.out.println(toDelete.size());
    }
    
    private static boolean allSame(int[] arr) {
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] != arr[0]) {
                return false;
            }
        }
        return true;
    }
}"
ChatGPT,avatar,Python,Java,codeforces_265_B.java,"int n = Integer.parseInt (scanner.nextLine());
ArrayList<Integer> l = new ArrayList<>();
for (int i = 0; i < n; i++) {
    l.add(Integer.parseInt(scanner.nextLine()));
}
int ans = n - 1;
int last = 0;
for (int i : l) {
    ans += Math.abs(last - i) + 1;
    last = i;
}
System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt (scanner.nextLine());
        ArrayList<Integer> l = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            l.add(Integer.parseInt(scanner.nextLine()));
        }
        int ans = n - 1;
        int last = 0;
        for (int i : l) {
            ans += Math.abs(last - i) + 1;
            last = i;
        }
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_203_B.java,"public class codeforces_203_B {
    
    public static void main(String[] args) {
        solveCase();
    }
    
    public static void solveCase() {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        
        int[][] count = new int[n][n];
        int ans = -1;
        
        for (int k = 0; k < m; k++) {
            int x = scanner.nextInt() - 1;
            int y = scanner.nextInt() - 1;
            boolean found = false;
            
            for (int i = x - 2; i <= x; i++) {
                for (int j = y - 2; j <= y; j++) {
                    if (i >= 0 && i < n && j >= 0 && j < n) {
                        count[i][j]++;
                        if (count[i][j] == 9) {
                            found = true;
                        }
                    }
                }
            }
            
            if (found) {
                ans = k + 1;
                break;
            }
        }
        
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {
    
    public static void main(String[] args) {
        solveCase();
    }
    
    public static void solveCase() {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        
        int[][] count = new int[n][n];
        int ans = -1;
        
        for (int k = 0; k < m; k++) {
            int x = scanner.nextInt() - 1;
            int y = scanner.nextInt() - 1;
            boolean found = false;
            
            for (int i = x - 2; i <= x; i++) {
                for (int j = y - 2; j <= y; j++) {
                    if (i >= 0 && i < n && j >= 0 && j < n) {
                        count[i][j]++;
                        if (count[i][j] == 9) {
                            found = true;
                        }
                    }
                }
            }
            
            if (found) {
                ans = k + 1;
                break;
            }
        }
        
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC111_C.java,"int n = Integer.parseInt (scanner.nextLine());
String[] input = scanner.nextLine().split("" "");
int[] x = new int[n];
for (int i = 0; i < n; i++) {
    x[i] = Integer.parseInt(input[i]);
}
List<Integer> a = new ArrayList<>();
List<Integer> b = new ArrayList<>();
for (int i = 0; i < n; i++) {
    if (i % 2 == 0) {
        a.add(x[i]);
    } else {
        b.add(x[i]);
    }
}
int[] cnta = new int[100002 + 1];
int[] cntb = new int[100002 + 1];
int vala = 0;
int vala1 = 0;
int maxCnta = 0;
int maxCnta1 = 0;
for (int i : a) {
    cnta[i]++;
}
for (int i : a) {
    if (maxCnta < cnta[i]) {
        vala = i;
        maxCnta = cnta[i];
    }
}
for (int i : a) {
    if (maxCnta1 < cnta[i] && vala != i) {
        maxCnta1 = cnta[i];
        vala1 = i;
    }
}
int valb = 0;
int valb1 = 0;
int maxCntb = 0;
int maxCntb1 = 0;
for (int i : b) {
    cntb[i]++;
}
for (int i : b) {
    if (maxCntb < cntb[i]) {
        valb = i;
        maxCntb = cntb[i];
    }
}
for (int i : b) {
    if (maxCntb1 < cntb[i] && valb != i) {
        maxCntb1 = cntb[i];
        valb1 = i;
    }
}
if (valb != vala) {
    int res = 0;
    for (int i : a) {
        if (i != vala) {
            res++;
        }
    }
    for (int i : b) {
        if (i != valb) {
            res++;
        }
    }
    System.out.println(res);
} else {
    int resa = 0;
    int resb = 0;
    int resa1 = 0;
    int resb1 = 0;
    for (int i : a) {
        if (i != vala) {
            resa++;
        }
        if (i != vala1) {
            resa1++;
        }
    }
    for (int i : b) {
        if (i != valb) {
            resb++;
        }
        if (i != valb1) {
            resb1++;
        }
    }
    System.out.println(Math.min(resa + resb1, resa1 + resb));
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt (scanner.nextLine());
        String[] input = scanner.nextLine().split("" "");
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = Integer.parseInt(input[i]);
        }
        List<Integer> a = new ArrayList<>();
        List<Integer> b = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            if (i % 2 == 0) {
                a.add(x[i]);
            } else {
                b.add(x[i]);
            }
        }
        int[] cnta = new int[100002 + 1];
        int[] cntb = new int[100002 + 1];
        int vala = 0;
        int vala1 = 0;
        int maxCnta = 0;
        int maxCnta1 = 0;
        for (int i : a) {
            cnta[i]++;
        }
        for (int i : a) {
            if (maxCnta < cnta[i]) {
                vala = i;
                maxCnta = cnta[i];
            }
        }
        for (int i : a) {
            if (maxCnta1 < cnta[i] && vala != i) {
                maxCnta1 = cnta[i];
                vala1 = i;
            }
        }
        int valb = 0;
        int valb1 = 0;
        int maxCntb = 0;
        int maxCntb1 = 0;
        for (int i : b) {
            cntb[i]++;
        }
        for (int i : b) {
            if (maxCntb < cntb[i]) {
                valb = i;
                maxCntb = cntb[i];
            }
        }
        for (int i : b) {
            if (maxCntb1 < cntb[i] && valb != i) {
                maxCntb1 = cntb[i];
                valb1 = i;
            }
        }
        if (valb != vala) {
            int res = 0;
            for (int i : a) {
                if (i != vala) {
                    res++;
                }
            }
            for (int i : b) {
                if (i != valb) {
                    res++;
                }
            }
            System.out.println(res);
        } else {
            int resa = 0;
            int resb = 0;
            int resa1 = 0;
            int resb1 = 0;
            for (int i : a) {
                if (i != vala) {
                    resa++;
                }
                if (i != vala1) {
                    resa1++;
                }
            }
            for (int i : b) {
                if (i != valb) {
                    resb++;
                }
                if (i != valb1) {
                    resb1++;
                }
            }
            System.out.println(Math.min(resa + resb1, resa1 + resb));
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC035_B.java,"import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.PriorityQueue;

public class atcoder_AGC035_B {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        int M = input.nextInt();
        ArrayList<Set<Integer>> edges = new ArrayList<>();
        int[] degs = new int[N];
        int[] parity = new int[N];
        boolean[] flag = new boolean[N];
        
        for (int i = 0; i < N; i++) {
            edges.add(new HashSet<>());
            degs[i] = 0;
            parity[i] = 0;
            flag[i] = false;
        }
        
        for (int i = 0; i < M; i++) {
            int a = input.nextInt() - 1;
            int b = input.nextInt() - 1;
            edges.get(a).add(b);
            edges.get(b).add(a);
            degs[a]++;
            degs[b]++;
        }
        
        if (M % 2 != 0) {
            System.out.println(-1);
            System.exit(0);
        }
        
        PriorityQueue<Pair<Integer, Integer>> Q = new PriorityQueue<>();
        for (int i = 0; i < N; i++) {
            Q.add(new Pair<>(degs[i], i));
        }
        
        while (!Q.isEmpty()) {
            Pair<Integer, Integer> pair = Q.poll();
            int u = pair.getValue();
            
            if (flag[u]) {
                continue;
            }
            
            flag[u] = true;
            
            for (int v : edges.get(u)) {
                edges.get(v).remove(u);
                
                if (parity[u] != 0 && v == edges.get(u).get(0)) {
                    System.out.println((u + 1) + "" "" + (v + 1));
                    parity[u] = 1 - parity[u];
                } else {
                    System.out.println((v + 1) + "" "" + (u + 1));
                    parity[v] = 1 - parity[v];
                }
                
                degs[v]--;
                Q.add(new Pair<>(degs[v], v));
            }
        }
    }
}","import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.PriorityQueue;
import java.util.*;
import java.util.AbstractMap.SimpleEntry;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        int M = input.nextInt();
        ArrayList<Set<Integer>> edges = new ArrayList<>();
        int[] degs = new int[N];
        int[] parity = new int[N];
        boolean[] flag = new boolean[N];
        
        for (int i = 0; i < N; i++) {
            edges.add(new HashSet<>());
            degs[i] = 0;
            parity[i] = 0;
            flag[i] = false;
        }
        
        for (int i = 0; i < M; i++) {
            int a = input.nextInt() - 1;
            int b = input.nextInt() - 1;
            edges.get(a).add(b);
            edges.get(b).add(a);
            degs[a]++;
            degs[b]++;
        }
        
        if (M % 2 != 0) {
            System.out.println(-1);
            System.exit(0);
        }
        
        PriorityQueue<SimpleEntry<Integer, Integer>> Q = new PriorityQueue<>();
        for (int i = 0; i < N; i++) {
            Q.add(new SimpleEntry<>(degs[i], i));
        }
        
        while (!Q.isEmpty()) {
            SimpleEntry<Integer, Integer> pair = Q.poll();
            int u = pair.getValue();
            
            if (flag[u]) {
                continue;
            }
            
            flag[u] = true;
            
            for (int v : edges.get(u)) {
                edges.get(v).remove(u);
                
                int firstEdge = (new ArrayList<>(edges.get(u))).get(0);
                
                if (parity[u] != 0 && v == firstEdge) {
                    System.out.println((u + 1) + "" "" + (v + 1));
                    parity[u] = 1 - parity[u];
                } else {
                    System.out.println((v + 1) + "" "" + (u + 1));
                    parity[v] = 1 - parity[v];
                }
                
                degs[v]--;
                Q.add(new SimpleEntry<>(degs[v], v));
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC017_A.java,"int combi(int N, int K) {
  int a = 1;
  for (int i = 0; i < K; i++) {
    a *= N - i;
  }
  for (int j = 0; j < K; j++) {
    a /= j + 1;
  }
  return a;
}

int main() {
  Scanner scanner = new Scanner(System.in);
  int N = scanner.nextInt();
  int P = scanner.nextInt();
  
  int ans = 0;
  ArrayList<Integer> lis = new ArrayList<>();
  String[] input = scanner.nextLine().split("" "");
  for (String num : input) {
    lis.add(Integer.parseInt(num));
  }
  
  ArrayList<Integer> ls = new ArrayList<>();
  for (int a : lis) {
    ls.add(a % 2);
  }
  
  int one = Collections.frequency(ls, 1);
  int zero = Collections.frequency(ls, 0);
  
  int pattern_a = 0;
  int pattern_b = 0;
  
  for (int j = 0; j <= zero; j++) {
    pattern_b += combi(zero, j);
  }
  
  int time = 0;
  while (time <= one) {
    if (time % 2 == P) {
      pattern_a += combi(one, time);
    }
    time++;
  }
  
  System.out.println((int) (pattern_a * pattern_b));
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        main();
    }

    static int combi(int N, int K) {
      int a = 1;
      for (int i = 0; i < K; i++) {
        a *= N - i;
      }
      for (int j = 0; j < K; j++) {
        a /= j + 1;
      }
      return a;
    }

    static void main() {
      Scanner scanner = new Scanner(System.in);
      int N = scanner.nextInt();
      int P = scanner.nextInt();
      
      scanner.nextLine();
      int ans = 0;
      ArrayList<Integer> lis = new ArrayList<>();
      String[] input = scanner.nextLine().split("" "");
      for (String num : input) {
        lis.add(Integer.parseInt(num));
      }
      
      ArrayList<Integer> ls = new ArrayList<>();
      for (int a : lis) {
        ls.add(a % 2);
      }
      
      int one = Collections.frequency(ls, 1);
      int zero = Collections.frequency(ls, 0);
      
      int pattern_a = 0;
      int pattern_b = 0;
      
      for (int j = 0; j <= zero; j++) {
        pattern_b += combi(zero, j);
      }
      
      int time = 0;
      while (time <= one) {
        if (time % 2 == P) {
          pattern_a += combi(one, time);
        }
        time++;
      }
      
      System.out.println((int) (pattern_a * pattern_b));
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC150_E.java,"public class atcoder_ABC150_E {
    public static void main(String[] args) {
        int mod = (int) 1e9 + 7;
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            c[i] = scanner.nextInt();
        }
        Arrays.sort(c);
        long b = pow(2, 2 * n - 2, mod);
        long a = 2 * b % mod;
        long ans = 0;
        for (int i = 0; i < n; i++) {
            ans += c[i] * (a + i * b);
            ans %= mod;
        }
        System.out.println(ans);
    }
    
    public static long pow(long base, long exponent, int mod) {
        long result = 1;
        while (exponent > 0) {
            if (exponent % 2 == 1) {
                result = result * base % mod;
            }
            base = base * base % mod;
            exponent /= 2;
        }
        return result;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int mod = (int) 1e9 + 7;
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            c[i] = scanner.nextInt();
        }
        Arrays.sort(c);
        long b = pow(2, 2 * n - 2, mod);
        long a = 2 * b % mod;
        long ans = 0;
        for (int i = 0; i < n; i++) {
            ans += c[i] * (a + i * b);
            ans %= mod;
        }
        System.out.println(ans);
    }
    
    public static long pow(long base, long exponent, int mod) {
        long result = 1;
        while (exponent > 0) {
            if (exponent % 2 == 1) {
                result = result * base % mod;
            }
            base = base * base % mod;
            exponent /= 2;
        }
        return result;
    }
}"
ChatGPT,avatar,Python,Java,codeforces_79_A.java,"int x, y;
Scanner scanner = new Scanner(System.in);
x = scanner.nextInt();
y = scanner.nextInt();
int a = 0;
while ((x >= 0 && y >= 22) || (x >= 1 && y >= 12) || (x >= 2 && y >= 2)) {
    if (a == 1) {
        if (y >= 22) {
            y -= 22;
        } else if (x >= 1 && y >= 12) {
            x -= 1;
            y -= 12;
        } else {
            x -= 2;
            y -= 2;
        }
    } else {
        if (x >= 2 && y >= 2) {
            x -= 2;
            y -= 2;
        } else if (x >= 1 && y >= 12) {
            x -= 1;
            y -= 12;
        } else {
            y -= 22;
        }
    }
    a = 1 - a;
}
System.out.println((a == 0) ? ""Ciel"" : ""Hanako"");","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int x, y;
        Scanner scanner = new Scanner(System.in);
        x = scanner.nextInt();
        y = scanner.nextInt();
        int a = 0;
        while ((x >= 0 && y >= 22) || (x >= 1 && y >= 12) || (x >= 2 && y >= 2)) {
            if (a == 1) {
                if (y >= 22) {
                    y -= 22;
                } else if (x >= 1 && y >= 12) {
                    x -= 1;
                    y -= 12;
                } else {
                    x -= 2;
                    y -= 2;
                }
            } else {
                if (x >= 2 && y >= 2) {
                    x -= 2;
                    y -= 2;
                } else if (x >= 1 && y >= 12) {
                    x -= 1;
                    y -= 12;
                } else {
                    y -= 22;
                }
            }
            a = 1 - a;
        }
        System.out.println((a == 0) ? ""Ciel"" : ""Hanako"");
    }
}"
ChatGPT,avatar,Python,Java,codeforces_299_A.java,"import java.util.*;
import java.io.*;

public class codeforces_299_A {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        // Custom input functions
        int num_inp() throws IOException {
            return Integer.parseInt(br.readLine());
        }

        int[] arr_inp() throws IOException {
            String[] input = br.readLine().split("" "");
            int[] arr = new int[input.length];
            for (int i = 0; i < arr.length; i++) {
                arr[i] = Integer.parseInt(input[i]);
            }
            return arr;
        }

        int[] sp_inp() throws IOException {
            String[] input = br.readLine().split("" "");
            int[] arr = new int[input.length];
            for (int i = 0; i < arr.length; i++) {
                arr[i] = Integer.parseInt(input[i]);
            }
            return arr;
        }

        // Actual code logic
        int[] a = Arrays.stream(br.readLine().split("" "")).skip(1).mapToInt(Integer::parseInt).sorted().toArray();
        System.out.println((a[0] != 0 && Arrays.stream(a).anyMatch(x -> x % a[0] != 0)) ? -1 : a[0]);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        // Custom input functions
        int num_inp = Integer.parseInt(br.readLine());

        // Actual code logic
        int[] a = Arrays.stream(br.readLine().split("" "")).skip(1).mapToInt(Integer::parseInt).sorted().toArray();
        System.out.println((a[0] != 0 && Arrays.stream(a).anyMatch(x -> x % a[0] != 0)) ? -1 : a[0]);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC147_D.java,"public class atcoder_ABC147_D {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextLong();
        }
        long result = 0;
        for (int b = 0; b < 60; b++) {
            int bs = 0;
            for (int i = 0; i < N; i++) {
                bs += (A[i] >> b) & 1;
            }
            result = (result + bs * (N - bs) * (1L << b)) % 1000000007;
        }
        System.out.println(result);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextLong();
        }
        long result = 0;
        for (int b = 0; b < 60; b++) {
            int bs = 0;            
            for (int i = 0; i < N; i++) {
                bs += (A[i] >> b) & 1;
            }
            result = (result + bs * (N - bs) * (1L << b)) % 1000000007;
        }
        System.out.println(result);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC166_C.java,"public class atcoder_ABC166_C {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = i + 1;
        }
        int[] h = new int[n];
        for (int i = 0; i < n; i++) {
            h[i] = scanner.nextInt();
        }
        Map<Integer, Integer> hp = new HashMap<>();
        for (int i = 0; i < n; i++) {
            hp.put(p[i], h[i]);
        }
        Map<Integer, List<Integer>> path = new HashMap<>();
        for (int i = 0; i < m; i++) {
            int a = scanner.nextInt();
            int b = scanner.nextInt();
            if (!path.containsKey(a)) {
                path.put(a, new ArrayList<>());
            }
            if (!path.containsKey(b)) {
                path.put(b, new ArrayList<>());
            }
            path.get(a).add(b);
            path.get(b).add(a);
        }
        int c = 0;
        for (Map.Entry<Integer, List<Integer>> entry : path.entrySet()) {
            int i = entry.getKey();
            List<Integer> v = entry.getValue();
            int f = 0;
            for (int j : v) {
                if (hp.get(i) <= hp.get(j)) {
                    f = 1;
                    break;
                }
            }
            if (f == 0) {
                c++;
            }
        }
        System.out.println(c);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = i + 1;
        }
        int[] h = new int[n];
        for (int i = 0; i < n; i++) {
            h[i] = scanner.nextInt();
        }
        Map<Integer, Integer> hp = new HashMap<>();
        for (int i = 0; i < n; i++) {
            hp.put(p[i], h[i]);
        }
        Map<Integer, List<Integer>> path = new HashMap<>();
        for (int i = 0; i < m; i++) {
            int a = scanner.nextInt();
            int b = scanner.nextInt();
            if (!path.containsKey(a)) {
                path.put(a, new ArrayList<>());
            }
            if (!path.containsKey(b)) {
                path.put(b, new ArrayList<>());
            }
            path.get(a).add(b);
            path.get(b).add(a);
        }
        int c = 0;
        for (Map.Entry<Integer, List<Integer>> entry : path.entrySet()) {
            int i = entry.getKey();
            List<Integer> v = entry.getValue();
            int f = 0;
            for (int j : v) {
                if (hp.get(i) <= hp.get(j)) {
                    f = 1;
                    break;
                }
            }
            if (f == 0) {
                c++;
            }
        }
        System.out.println(c);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_459_A.java,"import java.util.Scanner;

public class codeforces_459_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String given = scanner.nextLine();
        String[] l1 = given.split(""\\s+"");
        int x1 = Integer.parseInt(l1[0]);
        int y1 = Integer.parseInt(l1[1]);
        int x2 = Integer.parseInt(l1[2]);
        int y2 = Integer.parseInt(l1[3]);
        
        int denominator = x2 - x1;
        int numerator = y2 - y1;
        
        if (denominator != 0) {
            double quotient = (double) numerator / denominator;
        }
        
        if (numerator == 0) {
            int d = (int) Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
            int x4 = x1;
            int x3 = x2;
            int y3 = y2 + d;
            int y4 = y1 + d;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else if (denominator == 0) {
            int y4 = y2;
            int y3 = y1;
            int d = (int) Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
            int x4 = x1 + d;
            int x3 = x2 + d;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else if (quotient == 1) {
            int x4 = x2;
            int x3 = x1;
            int y4 = y1;
            int y3 = y2;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else if (quotient == -1) {
            int x4 = x1;
            int x3 = x2;
            int y4 = y2;
            int y3 = y1;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else {
            System.out.println(""-1"");
        }
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String given = scanner.nextLine();
        String[] l1 = given.split(""\\s+"");
        int x1 = Integer.parseInt(l1[0]);
        int y1 = Integer.parseInt(l1[1]);
        int x2 = Integer.parseInt(l1[2]);
        int y2 = Integer.parseInt(l1[3]);
        
        int denominator = x2 - x1;
        int numerator = y2 - y1;
        double quotient = 0;
        
        if (denominator != 0) {
            quotient = (double) numerator / denominator;
        }
        
        if (numerator == 0) {
            int d = (int) Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
            int x4 = x1;
            int x3 = x2;
            int y3 = y2 + d;
            int y4 = y1 + d;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else if (denominator == 0) {
            int y4 = y2;
            int y3 = y1;
            int d = (int) Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
            int x4 = x1 + d;
            int x3 = x2 + d;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else if (quotient == 1) {
            int x4 = x2;
            int x3 = x1;
            int y4 = y1;
            int y3 = y2;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else if (quotient == -1) {
            int x4 = x1;
            int x3 = x2;
            int y4 = y2;
            int y3 = y1;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else {
            System.out.println(""-1"");
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC136_B.java,"public class atcoder_ABC136_B {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = Integer.parseInt(input.nextLine());
        int i = 1;
        int ans = 0;
        while (Math.pow(10, i) <= N) {
            ans += (Math.pow(10, i) - Math.pow(10, i - 1));
            i += 2;
        }
        ans += Math.max(0, N - Math.pow(10, i - 1) + 1);
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        int i = 1;
        int ans = 0;
        while (Math.pow(10, i) <= N) {
            ans += (Math.pow(10, i) - Math.pow(10, i - 1));
            i += 2;
        }
        ans += Math.max(0, N - Math.pow(10, i - 1) + 1);
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC125_C.java,"import java.util.Scanner;

public class atcoder_ABC125_C {
    
    public static int gcd(int a, int b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }
    
    public static int[] ruisekiLR(int[] array) {
        int[] left = new int[array.length + 1];
        int[] right = new int[array.length + 1];
        int e = 0;
        
        for (int i = 0; i < array.length; i++) {
            left[i + 1] = gcd(left[i], array[i]);
        }
        
        for (int i = array.length - 1; i >= 0; i--) {
            right[i] = gcd(right[i + 1], array[i]);
        }
        
        return new int[]{left, right};
    }
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        
        int[] lr = ruisekiLR(a);
        int[] left = lr[0];
        int[] right = lr[1];
        int ans = 0;
        
        for (int i = 0; i < n; i++) {
            ans = Math.max(gcd(left[i], right[i + 1]), ans);
        }
        
        System.out.println(ans);
    }
}","import java.util.Scanner;

public class Main {
    
    public static int gcd(int a, int b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }
    
    public static int[][] ruisekiLR(int[] array) {
        int[] left = new int[array.length + 1];
        int[] right = new int[array.length + 1];
        int e = 0;
        
        for (int i = 0; i < array.length; i++) {
            left[i + 1] = gcd(left[i], array[i]);
        }
        
        for (int i = array.length - 1; i >= 0; i--) {
            right[i] = gcd(right[i + 1], array[i]);
        }
        
        return new int[][]{left, right};
    }
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        
        int[][] lr = ruisekiLR(a);
        int[] left = lr[0];
        int[] right = lr[1];
        int ans = 0;
        
        for (int i = 0; i < n; i++) {
            ans = Math.max(gcd(left[i], right[i + 1]), ans);
        }
        
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_342_B.java,"public class codeforces_342_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int s = scanner.nextInt();
        int f = scanner.nextInt();
        
        int d, k;
        String c;
        if (s < f) {
            d = 1;
            c = ""R"";
        } else {
            d = -1;
            c = ""L"";
        }
        
        String res = """";
        int i = 1;
        int j = s;
        int t, l, r;
        for (k = 1; j != f; k++) {
            t = scanner.nextInt();
            l = scanner.nextInt();
            r = scanner.nextInt();
            
            if (i > t && k < m) {
                k += 1;
            }
            
            if (i == t && (l <= j && j <= r || l <= j + d && j + d <= r)) {
                res += ""X"";
            } else {
                res += c;
                j += d;
            }
            
            i += 1;
        }
        
        System.out.println(res);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int s = scanner.nextInt();
        int f = scanner.nextInt();
        
        int d, k;
        String c;
        if (s < f) {
            d = 1;
            c = ""R"";
        } else {
            d = -1;
            c = ""L"";
        }
        
        String res = """";
        int i = 1;
        int j = s;
        int t, l, r;
        for (k = 1; j != f; k++) {
            t = scanner.nextInt();
            l = scanner.nextInt();
            r = scanner.nextInt();
            
            if (i > t && k < m) {
                k += 1;
            }
            
            if (i == t && (l <= j && j <= r || l <= j + d && j + d <= r)) {
                res += ""X"";
            } else {
                res += c;
                j += d;
            }
            
            i += 1;
        }
        
        System.out.println(res);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC143_A.java,"int A, B;
Scanner scanner = new Scanner(System.in);
A = scanner.nextInt();
B = scanner.nextInt();
int ans = A - 2 * B;
if (ans < 0) {
    ans = 0;
}
System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int A, B;
        Scanner scanner = new Scanner(System.in);
        A = scanner.nextInt();
        B = scanner.nextInt();
        int ans = A - 2 * B;
        if (ans < 0) {
            ans = 0;
        }
        System.out.println(ans);  
    }
}"
ChatGPT,avatar,Python,Java,codeforces_581_A.java,"int a, b;
Scanner scanner = new Scanner(System.in);
a = scanner.nextInt();
b = scanner.nextInt();
System.out.print(Math.min(a, b) + "" "" + (Math.max(a, b) - Math.min(a, b)) / 2);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int a, b;
        Scanner scanner = new Scanner(System.in);
        a = scanner.nextInt();
        b = scanner.nextInt();
        System.out.print(Math.min(a, b) + "" "" + (Math.max(a, b) - Math.min(a, b)) / 2);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_678_A.java,"int vamshi;
int z;
Scanner scanner = new Scanner(System.in);
String[] inputs = scanner.nextLine().split("" "");
vamshi = Integer.parseInt(inputs[0]);
z = Integer.parseInt(inputs[1]);
System.out.println(((vamshi / z + 1) * z));","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int vamshi;
        int z;
        Scanner scanner = new Scanner(System.in);
        String[] inputs = scanner.nextLine().split("" "");
        vamshi = Integer.parseInt(inputs[0]);
        z = Integer.parseInt(inputs[1]);
        System.out.println(((vamshi / z + 1) * z));
    } 
}"
ChatGPT,avatar,Python,Java,codeforces_25_A.java,"int n = Integer.parseInt(scanner.nextLine());
String[] input = scanner.nextLine().split("" "");
List<Integer> list = new ArrayList<>();
for (String s : input) {
    list.add(Integer.parseInt(s) % 2);
}
if (Collections.frequency(list, 1) == 1) {
    System.out.println(list.indexOf(1) + 1);
} else {
    System.out.println(list.indexOf(0) + 1);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();
        String[] input = scanner.nextLine().split("" "");
        List<Integer> list = new ArrayList<>();
        for (String s : input) {
            list.add(Integer.parseInt(s) % 2);
        }
        if (Collections.frequency(list, 1) == 1) {
            System.out.println(list.indexOf(1) + 1);
        } else {
            System.out.println(list.indexOf(0) + 1);
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_190_A.java,"int n, m;
Scanner scanner = new Scanner(System.in);
n = scanner.nextInt();
m = scanner.nextInt();

if (n < 1) {
    if (m < 1) {
        System.out.println(n + "" "" + m);
        System.exit(0);
    }
    System.out.println(""Impossible"");
    System.exit(0);
}

int min, max;

if (m > n) {
    min = m;
    max = n + m - 1;
    System.out.println(min + "" "" + max);
}

if (m <= n) {
    min = n;
    max = n + m - 1;
    if (m == 0) {
        max = n;
    }
    System.out.println(min + "" "" + max);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int n, m;
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        m = scanner.nextInt();
        
        if (n < 1) {
            if (m < 1) {
                System.out.println(n + "" "" + m);
                System.exit(0);
            }
            System.out.println(""Impossible"");
            System.exit(0);
        }
        
        int min, max;
        
        if (m > n) {
            min = m;
            max = n + m - 1;
            System.out.println(min + "" "" + max);
        }
        
        if (m <= n) {
            min = n;
            max = n + m - 1;
            if (m == 0) {
                max = n;
            }
            System.out.println(min + "" "" + max);
        } 
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC133_E.java,"import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class atcoder_ABC133_E {
    static long mod = (long) (1e9 + 7);
    static Map<Integer, List<Integer>> graph;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int K = scanner.nextInt();
        graph = new HashMap<>();

        for (int i = 0; i < N - 1; i++) {
            int a = scanner.nextInt();
            int b = scanner.nextInt();
            if (!graph.containsKey(a - 1)) {
                graph.put(a - 1, new ArrayList<>());
            }
            if (!graph.containsKey(b - 1)) {
                graph.put(b - 1, new ArrayList<>());
            }
            graph.get(a - 1).add(b - 1);
            graph.get(b - 1).add(a - 1);
        }

        long ans = dfs(0, -1, K);
        System.out.println(ans);
    }

    static long dfs(int fro, int to, int f) {
        long caseNum = f;
        int colorNum = (f == K) ? K - 1 : K - 2;
        for (int u : graph.get(fro)) {
            if (u == to) {
                continue;
            }
            long pat = dfs(u, fro, colorNum);
            if (pat == 0) {
                caseNum = 0;
                break;
            }
            caseNum = (caseNum * pat) % mod;
            colorNum -= 1;
        }
        return caseNum;
    }
}","import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class Main {
    static long mod = (long) (1e9 + 7);
    static Map<Integer, List<Integer>> graph;
    static int K;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        K = scanner.nextInt();
        graph = new HashMap<>();

        for (int i = 0; i < N - 1; i++) {
            int a = scanner.nextInt();
            int b = scanner.nextInt();
            if (!graph.containsKey(a - 1)) {
                graph.put(a - 1, new ArrayList<>());
            }
            if (!graph.containsKey(b - 1)) {
                graph.put(b - 1, new ArrayList<>());
            }
            graph.get(a - 1).add(b - 1);
            graph.get(b - 1).add(a - 1);
        }

        long ans = dfs(0, -1, K);
        System.out.println(ans);
    }

    static long dfs(int fro, int to, int f) {
        long caseNum = f;
        int colorNum = (f == K) ? K - 1 : K - 2;
        for (int u : graph.get(fro)) {
            if (u == to) {
                continue;
            }
            long pat = dfs(u, fro, colorNum);
            if (pat == 0) {
                caseNum = 0;
                break;
            }
            caseNum = (caseNum * pat) % mod;
            colorNum -= 1;
        }
        return caseNum;
    }
}"
ChatGPT,avatar,Python,Java,codeforces_146_A.java,"int n = Integer.parseInt(scanner.nextLine());
int[] number = new int[n];
for (int i = 0; i < n; i++) {
    number[i] = Integer.parseInt(scanner.nextLine());
}

int h1 = 0;
int h2 = 0;
int x = 0;
for (int i = 0; i < n; i++) {
    if (number[i] != 4 && number[i] != 7) {
        System.out.println(""NO"");
        x += 1;
        break;
    }
    if (i < n / 2) {
        h1 += number[i];
    } else {
        h2 += number[i];
    }
}

if (x == 0) {
    if (h1 == h2) {
        System.out.println(""YES"");
    } else {
        System.out.println(""NO"");
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());

        String line = scanner.nextLine();
        String[] numbers = line.split("""");
        int[] number = new int[numbers.length];

        for (int i = 0; i < numbers.length; i++) {
            number[i] = Integer.parseInt(numbers[i]);
        }

        int h1 = 0;
        int h2 = 0;
        int x = 0;
        for (int i = 0; i < n; i++) {
            if (number[i] != 4 && number[i] != 7) {
                System.out.println(""NO"");
                x += 1;
                break;
            }
            if (i < n / 2) {
                h1 += number[i];
            } else {
                h2 += number[i];
            }
        }
        
        if (x == 0) {
            if (h1 == h2) {
                System.out.println(""YES"");
            } else {
                System.out.println(""NO"");
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC143_D.java,"import java.util.Arrays;

public class atcoder_ABC143_D {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = scanner.nextInt();
        }
        Arrays.sort(l);
        int ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int a = l[i];
                int b = l[j];
                int right = Arrays.binarySearch(l, a + b);
                int left = Arrays.binarySearch(l, Math.max(a - b, b - a));
                int tmp = Math.max(0, right - left);
                if (left <= i && i < right) {
                    tmp -= 1;
                }
                if (left <= j && j < right) {
                    tmp -= 1;
                }
                ans += tmp;
            }
        }
        System.out.println(ans / 3);
    }
}","import java.util.Arrays;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = scanner.nextInt();
        }
        Arrays.sort(l);
        int ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int a = l[i];
                int b = l[j];
                int right = Arrays.binarySearch(l, a + b);
                int left = Arrays.binarySearch(l, Math.max(a - b, b - a));
                int tmp = Math.max(0, right - left);
                if (left <= i && i < right) {
                    tmp -= 1;
                }
                if (left <= j && j < right) {
                    tmp -= 1;
                }
                ans += tmp;
            }
        }
        System.out.println(ans / 3);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC002_A.java,"public class atcoder_AGC002_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        if (a > 0) {
            System.out.println(""Positive"");
        } else if (a <= 0 && b >= 0) {
            System.out.println(""Zero"");
        } else {
            if ((a + b) % 2 == 0) {
                System.out.println(""Negative"");
            } else {
                System.out.println(""Positive"");
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        if (a > 0) {
            System.out.println(""Positive"");
        } else if (a <= 0 && b >= 0) {
            System.out.println(""Zero"");
        } else {
            if ((a + b) % 2 == 0) {
                System.out.println(""Negative"");
            } else {
                System.out.println(""Positive"");
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC146_D.java,"import java.util.*;

public class atcoder_ABC146_D {
    static int bfs(int v, int N, ArrayList<ArrayList<Integer>> G, HashMap<Pair<Integer, Integer>, Integer> E) {
        int[] visited = new int[N];
        Queue<Integer> queue = new LinkedList<>();
        int K = -1;
        int[] node2color = new int[N];
        Arrays.fill(node2color, -1);
        queue.add(v);
        visited[v] = 1;
        while (!queue.isEmpty()) {
            int q = queue.poll();
            int color = 0;
            for (int nex : G.get(q)) {
                if (visited[nex] == 1) {
                    continue;
                }
                visited[nex] = 1;
                color += 1;
                if (color == node2color[q]) {
                    color += 1;
                }
                node2color[nex] = color;
                E.put(new Pair<>(Math.min(q, nex), Math.max(q, nex)), color);
                queue.add(nex);
            }
            K = Math.max(K, color);
        }
        return K;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        ArrayList<ArrayList<Integer>> G = new ArrayList<>();
        HashMap<Pair<Integer, Integer>, Integer> E = new HashMap<>();
        for (int i = 0; i < N; i++) {
            G.add(new ArrayList<>());
        }
        for (int i = 0; i < N - 1; i++) {
            int a = sc.nextInt() - 1;
            int b = sc.nextInt() - 1;
            G.get(a).add(b);
            G.get(b).add(a);
            E.put(new Pair<>(a, b), 0);
        }
        int K = bfs(0, N, G, E);
        System.out.println(K);
        for (int value : E.values()) {
            System.out.println(value);
        }
    }
}","import java.util.*;
import java.util.AbstractMap.SimpleEntry;

public class Main {
    static int bfs(int v, int N, ArrayList<ArrayList<Integer>> G, HashMap<SimpleEntry<Integer, Integer>, Integer> E) {
        int[] visited = new int[N];
        Queue<Integer> queue = new LinkedList<>();
        int K = -1;
        int[] node2color = new int[N];
        Arrays.fill(node2color, -1);
        queue.add(v);
        visited[v] = 1;
        while (!queue.isEmpty()) {
            int q = queue.poll();
            int color = 0;
            for (int nex : G.get(q)) {
                if (visited[nex] == 1) {
                    continue;
                }
                visited[nex] = 1;
                color += 1;
                if (color == node2color[q]) {
                    color += 1;
                }
                node2color[nex] = color;
                E.put(new SimpleEntry<>(Math.min(q, nex), Math.max(q, nex)), color);
                queue.add(nex);
            }
            K = Math.max(K, color);
        }
        return K;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        ArrayList<ArrayList<Integer>> G = new ArrayList<>();
        HashMap<SimpleEntry<Integer, Integer>, Integer> E = new HashMap<>();
        for (int i = 0; i < N; i++) {
            G.add(new ArrayList<>());
        }
        for (int i = 0; i < N - 1; i++) {
            int a = sc.nextInt() - 1;
            int b = sc.nextInt() - 1;
            G.get(a).add(b);
            G.get(b).add(a);
            E.put(new SimpleEntry<>(a, b), 0);
        }
        int K = bfs(0, N, G, E);
        System.out.println(K);
        for (int value : E.values()) {
            System.out.println(value);
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC004_D.java,"public class atcoder_AGC004_D {
    static int dfs(int[][] links, int n, int k, int v, int p) {
        int heightFromLeaf = 0;
        int cutCount = 0;
        for (int u : links[v]) {
            if (u == 0) {
                continue;
            }
            int hgt = dfs(links, n, k, u, v);
            heightFromLeaf = Math.max(heightFromLeaf, hgt);
            cutCount += cut;
        }
        heightFromLeaf += 1;
        if (p != 0 && heightFromLeaf == k) {
            heightFromLeaf = 0;
            cutCount += 1;
        }
        return heightFromLeaf, cutCount;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int[][] links = new int[n][];
        for (int i = 0; i < n; i++) {
            int m = scanner.nextInt();
            links[i] = new int[m];
            for (int j = 0; j < m; j++) {
                links[i][j] = scanner.nextInt();
            }
        }
        int ans = dfs(links, n, k, 0, 0);
        if (links[0][0] != 1) {
            ans += 1;
        }
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {
    static int[] dfs(int[][] links, int n, int k, int v, int p) {
        int[] result = new int[2]; 
        result[0] = 0;
        result[1] = 0;

        for (int u : links[v]) {
            if (u == 0) {
                continue;
            }
            int[] temp = dfs(links, n, k, u, v);
            result[0] = Math.max(result[0], temp[0]);
            result[1] += temp[1];
        }
        result[0] += 1;
        if (p != 0 && result[0] == k) {
            result[0] = 0;
            result[1] += 1;
        }
        return result;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int[][] links = new int[n][];
        for (int i = 0; i < n; i++) {
            int m = scanner.nextInt();
            links[i] = new int[m];
            for (int j = 0; j < m; j++) {
                links[i][j] = scanner.nextInt();
            }
        }
        int[] result = dfs(links, n, k, 0, 0);
        if (links[0][0] != 1) {
            result[1] += 1;
        }
        System.out.println(result[1]);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_267_A.java,"public class codeforces_267_A {
    public static int subtract(int a, int b) {
        if (a > b) {
            int total = 0;
            while (a > 0 && b > 0) {
                total += a / b;
                a = a % b;
                if (a > 0) {
                    total += b / a;
                    b = b % a;
                }
            }
            return total;
        }
        if (a < b) {
            int total = 0;
            while (a > 0 && b > 0) {
                total += b / a;
                b = b % a;
                if (b > 0) {
                    total += a / b;
                    a = a % b;
                }
            }
            return total;
        }
        if (a == b) {
            return 1;
        }
        return 0;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] lst = new int[n];
        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            lst[i] = subtract(a, b);
        }
        for (int i : lst) {
            System.out.println(i);
        }
    }
}","import java.util.*;

public class Main {
    public static int subtract(int a, int b) {
        if (a > b) {
            int total = 0;
            while (a > 0 && b > 0) {
                total += a / b;
                a = a % b;
                if (a > 0) {
                    total += b / a;
                    b = b % a;
                }
            }
            return total;
        }
        if (a < b) {
            int total = 0;
            while (a > 0 && b > 0) {
                total += b / a;
                b = b % a;
                if (b > 0) {
                    total += a / b;
                    a = a % b;
                }
            }
            return total;
        }
        if (a == b) {
            return 1;
        }
        return 0;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] lst = new int[n];
        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            lst[i] = subtract(a, b);
        }
        for (int i : lst) {
            System.out.println(i);
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC132_F.java,"public class atcoder_ABC132_F {
    public static void main(String[] args) {
        int mod = (int) Math.pow(10, 9) + 7;
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int[] coef = new int[n];
        for (int i = 1; i <= Math.sqrt(n); i++) {
            coef[i - 1] = (n / i) - (n / (i + 1));
        }
        for (int i = Math.sqrt(n); i < n; i++) {
            coef[i] = 1;
        }
        int nn = coef.length;
        int[][] dp = new int[k + 1][nn];
        dp[0][0] = 1;
        for (int i = 1; i <= k; i++) {
            int tmp = 0;
            for (int j = nn - 1; j >= 0; j--) {
                tmp += dp[i - 1][nn - 1 - j];
                tmp %= mod;
                dp[i][j] = coef[j] * tmp;
                dp[i][j] %= mod;
            }
        }
        int sum = 0;
        for (int i = 0; i < nn; i++) {
            sum += dp[k][i];
            sum %= mod;
        }
        System.out.println(sum);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int mod = (int) Math.pow(10, 9) + 7;
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int[] coef = new int[n];
        for (int i = 1; i <= Math.sqrt(n); i++) {
            coef[i - 1] = (n / i) - (n / (i + 1));
        }
        for (int i = (int) Math.sqrt(n); i < n; i++) {
            coef[i] = 1;
        }
        int nn = coef.length;
        int[][] dp = new int[k + 1][nn];
        dp[0][0] = 1;
        for (int i = 1; i <= k; i++) {
            int tmp = 0;
            for (int j = nn - 1; j >= 0; j--) {
                tmp += dp[i - 1][nn - 1 - j];
                tmp %= mod;
                dp[i][j] = coef[j] * tmp;
                dp[i][j] %= mod;
            }
        }
        int sum = 0;
        for (int i = 0; i < nn; i++) {
            sum += dp[k][i];
            sum %= mod;
        }
        System.out.println(sum);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC003_C.java,"public class atcoder_AGC003_C {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = Integer.parseInt(scanner.nextLine());
        int[] A = new int[N];
        
        for (int i = 0; i < N; i++) {
            A[i] = Integer.parseInt(scanner.nextLine()) * N + i;
        }
        
        Arrays.sort(A);
        
        int cnt = 0;
        
        for (int i = 0; i < N; i++) {
            int d = (A[i] % N) % 2;
            if (d % 2 != i % 2) {
                cnt += 1;
            }
        }
        
        System.out.println(cnt / 2);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = Integer.parseInt(scanner.nextLine());
        long[] A = new long[N];
        
        for (int i = 0; i < N; i++) {
            A[i] = Long.parseLong(scanner.nextLine()) * N + i;
        }
        
        Arrays.sort(A);
        
        int cnt = 0;
        
        for (int i = 0; i < N; i++) {
            long d = (A[i] % N) % 2;
            if (d % 2 != i % 2) {
                cnt += 1;
            }
        }
        
        System.out.println(cnt / 2);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_340_A.java,"public class codeforces_340_A {
    public static int G(int a, int b) {
        while (a % b != 0) {
            int temp = a;
            a = b;
            b = temp % b;
        }
        return b;
    }

    public static int L(int a, int b) {
        return a * b / G(a, b);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split("" "");
        int x = Integer.parseInt(input[0]);
        int y = Integer.parseInt(input[1]);
        int a = Integer.parseInt(input[2]);
        int b = Integer.parseInt(input[3]);

        int lcm = L(x, y);
        int result = b / lcm - (a - 1) / lcm;
        System.out.println(result);
    }
}","import java.util.*;

public class Main {
    public static int G(int a, int b) {
        while (a % b != 0) {
            int temp = a;
            a = b;
            b = temp % b;
        }
        return b;
    }

    public static int L(int a, int b) {
        return a * b / G(a, b);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split("" "");
        int x = Integer.parseInt(input[0]);
        int y = Integer.parseInt(input[1]);
        int a = Integer.parseInt(input[2]);
        int b = Integer.parseInt(input[3]);

        int lcm = L(x, y);
        int result = b / lcm - (a - 1) / lcm;
        System.out.println(result);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_450_A.java,"int n, m;
Scanner scanner = new Scanner(System.in);
n = scanner.nextInt();
m = scanner.nextInt();
int[] l = new int[n];
for (int i = 0; i < n; i++) {
    l[i] = scanner.nextInt();
}
List<Integer> l2 = new ArrayList<Integer>();
for (int i : l) {
    if (i % m == 0) {
        l2.add(i / m);
    } else {
        l2.add(i / m + 1);
    }
}
int mx = Collections.max(l2);
int ind = 0;
for (int i = 0; i < n; i++) {
    if (l2.get(i) == mx) {
        ind = i;
        break;
    }
}
System.out.println(ind + 1);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int n, m;
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        m = scanner.nextInt();
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = scanner.nextInt();
        }
        List<Integer> l2 = new ArrayList<Integer>();
        for (int i : l) {
            if (i % m == 0) {
                l2.add(i / m);
            } else {
                l2.add(i / m + 1);
            }
        }
        int mx = Collections.max(l2);
        int ind = 0;
        for (int i = 0; i < n; i++) {
            if (l2.get(i) == mx) {
                ind = i;
            }
        }
        System.out.println(ind + 1);  
    }  
}"
ChatGPT,avatar,Python,Java,atcoder_ABC043_B.java,"String s = new Scanner(System.in).nextLine();
String my_str = """";
for (int i = 0; i < s.length(); i++) {
    char c = s.charAt(i);
    if (c == '0' || c == '1') {
        my_str += c;
    } else if (c == 'B' && my_str.length() != 0) {
        my_str = my_str.substring(0, my_str.length() - 1);
    }
}
System.out.println(my_str);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        String s = new Scanner(System.in).nextLine();
        String my_str = """";
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (c == '0' || c == '1') {
                my_str += c;
            } else if (c == 'B' && my_str.length() != 0) {
                my_str = my_str.substring(0, my_str.length() - 1);
            }
        }
        System.out.println(my_str);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC127_B.java,"int r, D, x;
Scanner scanner = new Scanner(System.in);
String[] inputs = scanner.nextLine().split("" "");
r = Integer.parseInt(inputs[0]);
D = Integer.parseInt(inputs[1]);
x = Integer.parseInt(inputs[2]);
for (int i = 2; i < 12; i++) {
    System.out.println((int) (Math.pow(r, i - 1) * (x + D / (1 - r)) - D / (1 - r)));
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int r, D, x;
        Scanner scanner = new Scanner(System.in);
        String[] inputs = scanner.nextLine().split("" "");
        r = Integer.parseInt(inputs[0]);
        D = Integer.parseInt(inputs[1]);
        x = Integer.parseInt(inputs[2]);
        for (int i = 2; i < 12; i++) {
            System.out.println((int) (Math.pow(r, i - 1) * (x + (double) D / (1 - r)) - (double) D / (1 - r)));
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC126_D.java,"class Node {
    int val;
    boolean color;
    List<int[]> a;

    public Node() {
        val = 0;
        color = false;
        a = new ArrayList<>();
    }
}

public class atcoder_ABC126_D {
    static List<Node> nodes;
    static Node root;
    static Set<Node> nodeSet;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();

        nodes = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            nodes.add(new Node());
        }

        for (int i = 0; i < n - 1; i++) {
            int u = scanner.nextInt();
            int v = scanner.nextInt();
            int w = scanner.nextInt();
            scanner.nextLine();

            Node node1 = nodes.get(u - 1);
            Node node2 = nodes.get(v - 1);
            node1.val = u;
            node2.val = v;
            node1.a.add(new int[]{node2, w});
            node2.a.add(new int[]{node1, w});
        }

        root = nodes.get(0);
        root.color = true;
        nodeSet = new HashSet<>();

        traverse(root, 0);

        for (int i = 0; i < n; i++) {
            Node node = nodes.get(i);
            if (node.color) {
                System.out.println(1);
            } else {
                System.out.println(0);
            }
        }
    }

    static void traverse(Node node, int distance) {
        if (nodeSet.contains(node)) {
            return;
        } else {
            nodeSet.add(node);
        }

        for (int[] pair : node.a) {
            Node adjNode = pair[0];
            int dis = pair[1];

            if ((distance + dis) % 2 == 0) {
                adjNode.color = root.color;
            } else {
                adjNode.color = !root.color;
            }

            traverse(adjNode, distance + dis);
        }
    }
}","import java.util.*;
import java.util.AbstractMap.SimpleEntry;

class Node {
    int val;
    boolean color;
    List<SimpleEntry<Node, Integer>> a;

    public Node() {
        val = 0;
        color = false;
        a = new ArrayList<>();
    }
}

public class Main {
    static List<Node> nodes;
    static Node root;
    static Set<Node> nodeSet;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();

        nodes = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            nodes.add(new Node());
        }

        for (int i = 0; i < n - 1; i++) {
            int u = scanner.nextInt();
            int v = scanner.nextInt();
            int w = scanner.nextInt();
            scanner.nextLine();

            Node node1 = nodes.get(u - 1);
            Node node2 = nodes.get(v - 1);
            node1.val = u;
            node2.val = v;
            node1.a.add(new SimpleEntry<>(node2, w));
            node2.a.add(new SimpleEntry<>(node1, w));
        }

        root = nodes.get(0);
        root.color = true;
        nodeSet = new HashSet<>();

        traverse(root, 0);

        for (int i = 0; i < n; i++) {
            Node node = nodes.get(i);
            if (node.color) {
                System.out.println(1);
            } else {
                System.out.println(0);
            }
        }
    }

    static void traverse(Node node, int distance) {
        if (nodeSet.contains(node)) {
            return;
        } else {
            nodeSet.add(node);
        }

        for (SimpleEntry<Node, Integer> pair : node.a) {
            Node adjNode = pair.getKey();
            int dis = pair.getValue();

            if ((distance + dis) % 2 == 0) {
                adjNode.color = root.color;
            } else {
                adjNode.color = !root.color;
            }

            traverse(adjNode, distance + dis);
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ARC102_C.java,"import java.util.*;

public class atcoder_ARC102_C {
    static int K, N;
    static int mod = 998244353;
    static int __N = 8000;
    static List<Integer> g1 = new ArrayList<>();
    static List<Integer> g2 = new ArrayList<>();
    static List<Integer> inverse = new ArrayList<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        K = scanner.nextInt();
        N = scanner.nextInt();

        for (int i = 0; i <= __N; i++) {
            g1.add(0);
            g2.add(0);
            inverse.add(0);
        }

        g1.set(0, 1);
        g1.set(1, 1);
        g2.set(0, 1);
        g2.set(1, 1);
        inverse.set(0, 0);
        inverse.set(1, 1);

        for (int i = 2; i <= __N; i++) {
            g1.set(i, (g1.get(i - 1) * i) % mod);
            inverse.set(i, (-inverse.get(mod % i) * (mod / i)) % mod);
            g2.set(i, (g2.get(i - 1) * inverse.get(i)) % mod);
        }

        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= 2 * K; i++) {
            if (i <= K + 1) {
                int tmp = solve(i) % mod;
                ans.add(tmp);
                System.out.println(tmp);
            } else {
                System.out.println(ans.get(ans.size() - i + K));
            }
        }
    }

    static int cmb(int n, int r) {
        if (r < 0 || r > n) {
            return 0;
        }
        r = Math.min(r, n - r);
        return (g1.get(n) * g2.get(r) % mod * g2.get(n - r)) % mod;
    }

    static int kumiawase(int p, int q) {
        return cmb(p + q - 1, q - 1);
    }

    static int solve(int n) {
        assert n <= K + 1;
        int ans = 0;
        int kumi = (n - 1) / 2;
        for (int p = 0; p <= kumi; p++) {
            if (p > N) {
                break;
            }
            ans += Math.pow(2, p) * cmb(kumi, p) * kumiawase(N - p, p + (K - kumi * 2 - (n % 2 == 0 ? 1 : 0)));
            if (n % 2 == 0 && N - p - 1 >= 0) {
                ans += Math.pow(2, p) * cmb(kumi, p) * kumiawase(N - p - 1, p + (K - kumi * 2 - (n % 2 == 0 ? 1 : 0)));
            }
        }
        return ans;
    }
}","import java.util.*;

public class Main {
    static int K, N;
    static int mod = 998244353;
    static int __N = 8000;
    static List<Integer> g1 = new ArrayList<>();
    static List<Integer> g2 = new ArrayList<>();
    static List<Integer> inverse = new ArrayList<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        K = scanner.nextInt();
        N = scanner.nextInt();

        for (int i = 0; i <= __N; i++) {
            g1.add(0);
            g2.add(0);
            inverse.add(0);
        }

        g1.set(0, 1);
        g1.set(1, 1);
        g2.set(0, 1);
        g2.set(1, 1);
        inverse.set(0, 0);
        inverse.set(1, 1);

        for (int i = 2; i <= __N; i++) {
            g1.set(i, (g1.get(i - 1) * i) % mod);
            inverse.set(i, (-inverse.get(mod % i) * (mod / i)) % mod);
            g2.set(i, (g2.get(i - 1) * inverse.get(i)) % mod);
        }

        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= 2 * K; i++) {
            if (i <= K + 1) {
                int tmp = solve(i) % mod;
                ans.add(tmp);
                System.out.println(tmp);
            } else {
                System.out.println(ans.get(ans.size() - i + K));
            }
        }
    }

    static int cmb(int n, int r) {
        if (r < 0 || r > n) {
            return 0;
        }
        r = Math.min(r, n - r);
        return (g1.get(n) * g2.get(r) % mod * g2.get(n - r)) % mod;
    }

    static int kumiawase(int p, int q) {
        return cmb(p + q - 1, q - 1);
    }

    static int solve(int n) {
        assert n <= K + 1;
        int ans = 0;
        int kumi = (n - 1) / 2;
        for (int p = 0; p <= kumi; p++) {
            if (p > N) {
                break;
            }
            ans += Math.pow(2, p) * cmb(kumi, p) * kumiawase(N - p, p + (K - kumi * 2 - (n % 2 == 0 ? 1 : 0)));
            if (n % 2 == 0 && N - p - 1 >= 0) {
                ans += Math.pow(2, p) * cmb(kumi, p) * kumiawase(N - p - 1, p + (K - kumi * 2 - (n % 2 == 0 ? 1 : 0)));
            }
        }
        return ans;
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC170_A.java,"int[] a = new int[10];
Scanner scanner = new Scanner(System.in);
String[] input = scanner.nextLine().split("" "");
for (int i = 0; i < input.length; i++) {
    a[i] = Integer.parseInt(input[i]);
}

for (int e = 0; e < a.length; e++) {
    if (a[e] == 0) {
        System.out.println(e + 1);
        break;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int[] a = new int[10];
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split("" "");
        for (int i = 0; i < input.length; i++) {
            a[i] = Integer.parseInt(input[i]);
        }
        
        for (int e = 0; e < a.length; e++) {
            if (a[e] == 0) {
                System.out.println(e + 1);
                break;
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC149_B.java,"int[] cookies = Arrays.stream(new Scanner(System.in).nextLine().split("" ""))
    .mapToInt(Integer::parseInt)
    .toArray();
int leftOver = cookies[0] - cookies[2];
int takahashi = Math.max(0, leftOver);
System.out.print(takahashi + "" "" + (takahashi > 0 ? cookies[1] : Math.max(0, cookies[1] - Math.abs(leftOver))));","import java.util.*;

public class Main {
    public static void main(String[] args) {
        String[] cookies = new Scanner(System.in).nextLine().split("" "");
        long leftOver = Long.parseLong(cookies[0]) - Long.parseLong(cookies[2]);
        long takahashi = Math.max(0, leftOver);
        System.out.print(takahashi + "" "" + (takahashi > 0 ? Long.parseLong(cookies[1]) : Math.max(0, Long.parseLong(cookies[1]) - Math.abs(leftOver)))); 
    }
}"
ChatGPT,avatar,Python,Java,codeforces_242_A.java,"int x, y, a, b;
Scanner scanner = new Scanner(System.in);
x = scanner.nextInt();
y = scanner.nextInt();
a = scanner.nextInt();
b = scanner.nextInt();
List<Pair<Integer, Integer>> games = new ArrayList<>();

for (int i = a; i <= x; i++) {
    if (i <= b) continue;
    else {
        for (int j = b; j <= y; j++) {
            if (i > j) {
                games.add(new Pair<>(i, j));
            }
        }
    }
}

System.out.println(games.size());
for (Pair<Integer, Integer> game : games) {
    System.out.println(game.getFirst() + "" "" + game.getSecond());
}","import java.util.*;
import java.util.AbstractMap.SimpleEntry;

public class Main {
    public static void main(String[] args) {
        int x, y, a, b;
        Scanner scanner = new Scanner(System.in);
        x = scanner.nextInt();
        y = scanner.nextInt();
        a = scanner.nextInt();
        b = scanner.nextInt();
        List<SimpleEntry<Integer, Integer>> games = new ArrayList<>();
        
        for (int i = a; i <= x; i++) {
            if (i <= b) continue;
            else {
                for (int j = b; j <= y; j++) {
                    if (i > j) {
                        games.add(new SimpleEntry<>(i, j));
                    }
                }
            }
        }
        
        System.out.println(games.size());
        for (SimpleEntry<Integer, Integer> game : games) {
            System.out.println(game.getKey() + "" "" + game.getValue());
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC046_B.java,"int A, B, C, D;
Scanner sc = new Scanner(System.in);
A = sc.nextInt();
B = sc.nextInt();
C = sc.nextInt();
D = sc.nextInt();
int m = 998244353;
int[][] d = new int[C+1][D+1];
d[A][B] = 1;
for (int i = A; i <= C; i++) {
    for (int j = B; j <= D; j++) {
        d[i][j] += (d[i][j-1] * i + d[i-1][j] * j - d[i-1][j-1] * (i-1) * (j-1)) % m;
    }
}
System.out.println(d[C][D]);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int A, B, C, D;
        Scanner sc = new Scanner(System.in);
        A = sc.nextInt();
        B = sc.nextInt();
        C = sc.nextInt();
        D = sc.nextInt();
        int m = 998244353;
        long[][] d = new long[C+1][D+1];
        d[A][B] = 1;
        for (int i = A; i <= C; i++) {
            for (int j = B; j <= D; j++) {
                d[i][j] += ((d[i][j-1] * i + d[i-1][j] * j - d[i-1][j-1] * (i-1) * (j-1)) % m + m) % m;
            }
        }
        System.out.println(d[C][D]);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC011_C.java,"import java.util.*;

public class atcoder_AGC011_C {
    static int n, m;
    static int[] vis, g;
    static int ci, cb, cc;

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        n = input.nextInt();
        m = input.nextInt();
        vis = new int[n + 1];
        g = new int[n + 1];
        ci = 0;
        cb = 0;
        cc = 0;

        for (int i = 0; i < m; i++) {
            int u = input.nextInt();
            int v = input.nextInt();
            g[u].add(v);
            g[v].add(u);
        }

        for (int i = 1; i <= n; i++) {
            if (vis[i] == 0) {
                if (g[i].size() == 0) {
                    ci += 1;
                } else {
                    if (dfs(i)) {
                        cb += 1;
                    } else {
                        cc += 1;
                    }
                }
            }
        }

        int result = ci * ci + 2 * ci * (n - ci) + cc * cc + 2 * cb * cc + 2 * cb * cb;
        System.out.println(result);
    }

    public static boolean dfs(int x) {
        Stack<Pair<Integer, Integer>> stk = new Stack<>();
        boolean flag = true;
        stk.push(new Pair<>(x, 1));

        while (!stk.isEmpty()) {
            Pair<Integer, Integer> pair = stk.pop();
            int u = pair.getKey();
            int col = pair.getValue();

            if (vis[u] != 0) {
                flag &= (vis[u] == col);
                continue;
            }

            vis[u] = col;

            for (int i = 0; i < g[u].size(); i++) {
                stk.push(new Pair<>(g[u].get(i), 3 - col));
            }
        }

        return flag;
    }
}","import java.util.*;
import java.util.AbstractMap.SimpleEntry;

public class Main {
    static int n, m;
    static int[] vis;
    static ArrayList<Integer>[] g;
    static int ci, cb, cc;

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        n = input.nextInt();
        m = input.nextInt();
        vis = new int[n + 1];
        g = new ArrayList[n + 1];
        for(int i = 1; i <= n; i++) {
            g[i] = new ArrayList<>();
        }
        ci = 0;
        cb = 0;
        cc = 0;

        for (int i = 0; i < m; i++) {
            int u = input.nextInt();
            int v = input.nextInt();
            g[u].add(v);
            g[v].add(u);
        }
        
        for (int i = 1; i <= n; i++) {
            if (vis[i] == 0) {
                if (g[i].size() == 0) {
                    ci += 1;
                } else {
                    if (dfs(i)) {
                        cb += 1;
                    } else {
                        cc += 1;
                    }
                }
            }
        }

        int result = ci * ci + 2 * ci * (n - ci) + cc * cc + 2 * cb * cc + 2 * cb * cb;
        System.out.println(result);
    }

    public static boolean dfs(int x) {
        Stack<SimpleEntry<Integer, Integer>> stk = new Stack<>();
        boolean flag = true;
        stk.push(new SimpleEntry<>(x, 1));

        while (!stk.isEmpty()) {
            SimpleEntry<Integer, Integer> pair = stk.pop();
            int u = pair.getKey();
            int col = pair.getValue();

            if (vis[u] != 0) {
                flag &= (vis[u] == col);
                continue;
            }

            vis[u] = col;

            for (int i = 0; i < g[u].size(); i++) {
                stk.push(new SimpleEntry<>(g[u].get(i), 3 - col));
            }
        }

        return flag;
    }
}"
ChatGPT,avatar,Python,Java,codeforces_55_A.java,"int n = Integer.parseInt (scanner.nextLine());
while (n % 2 == 0) {
    n /= 2;
}
if (n == 1) {
    System.out.println(""YES"");
} else {
    System.out.println(""NO"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt (scanner.nextLine());
        while (n % 2 == 0) {
            n /= 2;
        }
        if (n == 1) {
            System.out.println(""YES"");
        } else {
            System.out.println(""NO"");
        }
    }   
}"
ChatGPT,avatar,Python,Java,codeforces_30_A.java,"public class codeforces_30_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        int n = scanner.nextInt();
        int result = task4(A, B, n);
        System.out.println(result);
    }
    
    public static int task4(int A, int B, int n) {
        for (int X = -1000; X <= 1000; X++) {
            if (A * Math.pow(X, n) == B) {
                return X;
            }
        }
        return -1; // No solution
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        int n = scanner.nextInt();
        int result = task4(A, B, n);
        if (result == 1001) {
            System.out.println(""No solution"");
        } else {
            System.out.println(result);
        }
    }
    
    public static int task4(int A, int B, int n) {
        for (int X = -1000; X <= 1000; X++) {
            if (A * Math.pow(X, n) == B) {
                return X;
            }
        }
        return 1001; // No solution
    }
}"
ChatGPT,avatar,Python,Java,codeforces_23_B.java,"int n = Integer.parseInt(scanner.nextLine());
for (int i = 0; i < n; i++) {
    int a = Integer.parseInt(scanner.nextLine());
    if (a < 2) {
        System.out.println(0);
    }
    if (a >= 2) {
        System.out.println(a - 2);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        for (int i = 0; i < n; i++) {
            int a = Integer.parseInt(scanner.nextLine());
            if (a < 2) {
                System.out.println(0);
            }
            if (a >= 2) {
                System.out.println(a - 2);
            }
        }
    } 
}"
ChatGPT,avatar,Python,Java,atcoder_AGC043_B.java,"import java.util.*;

public class atcoder_AGC043_B {
    public static int twosInFactorial(int n) {
        return n - Integer.bitCount(n);
    }

    public static boolean parityOfNcr(int n, int i) {
        int f = twosInFactorial;
        return f(n) - f(n - i) - f(i) > 0;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();
        String[] numsStr = scanner.nextLine().trim().split("" "");
        int[] nums = new int[numsStr.length];
        boolean noOne = false;

        for (int i = 0; i < numsStr.length; i++) {
            nums[i] = Integer.parseInt(numsStr[i]) - 1;
        }

        if (!Arrays.asList(nums).contains(1)) {
            for (int i = 0; i < nums.length; i++) {
                nums[i] = nums[i] / 2;
            }
            noOne = true;
        }

        boolean isOdd = false;
        for (int i = 0; i < nums.length; i++) {
            if (!parityOfNcr(n - 1, i) && (nums[i] & 1) != 0) {
                isOdd = !isOdd;
            }
        }

        if (!isOdd) {
            System.out.println(0);
        } else {
            System.out.println(1 << (noOne ? 1 : 0));
        }
    }
}","import java.util.*;

public class Main {
    public static int twosInFactorial(int n) {
        return n - Integer.bitCount(n);
    }

    public static boolean parityOfNcr(int n, int i) {
        return twosInFactorial(n) - twosInFactorial(n - i) - twosInFactorial(i) > 0;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();
        String[] numsStr = scanner.nextLine().split("""");
        int[] nums = new int[numsStr.length];
        boolean noOne = false;

        for (int i = 0; i < numsStr.length; i++) {
            nums[i] = Integer.parseInt(numsStr[i]) - 1;
        }

        boolean contains = false;
        for (int num : nums) {
            if (num == 1) {
                contains = true;
                break;
            }
        }

        if (!contains) {
            for (int i = 0; i < nums.length; i++) {
                nums[i] = nums[i] / 2;
            }
            noOne = true;
        }
        
        boolean isOdd = false;
        for (int i = 0; i < nums.length; i++) {
            if (!parityOfNcr(n - 1, i) && (nums[i] & 1) != 0) {
                isOdd = !isOdd;
            }
        }

        if (!isOdd) {
            System.out.println(0);
        } else {
            System.out.println(1 << (noOne ? 1 : 0));
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC154_A.java,"public class atcoder_ABC154_A {
    public static void main(String[] args) {
        solve();
    }

    public static void solve() {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        String T = in.next();
        int A = in.nextInt();
        int B = in.nextInt();
        String U = in.next();

        if (S.equals(U)) {
            A -= 1;
        }
        if (T.equals(U)) {
            B -= 1;
        }

        System.out.println(A + "" "" + B);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        solve();
    }

    public static void solve() {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        String T = in.next();
        int A = in.nextInt();
        int B = in.nextInt();
        String U = in.next();

        if (S.equals(U)) {
            A -= 1;
        }
        if (T.equals(U)) {
            B -= 1;
        }

        System.out.println(A + "" "" + B);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC114_C.java,"int N = Integer.parseInt(Scanner.nextLine());

int aaa(String n) {
    if (Integer.parseInt(n) > N) {
        return 0;
    }
    int ans = 1;
    if (new HashSet<>(Arrays.asList(n.split(""""))).equals(new HashSet<>(Arrays.asList(""7"", ""5"", ""3"")))) {
        ans = 1;
    } else {
        ans = 0;
    }
    for (char i : ""753"".toCharArray()) {
        ans += aaa(n + i);
    }
    return ans;
}

System.out.println(aaa(""0""));","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        System.out.println(aaa(""0"", N));
    }

    static int aaa(String n, int N) {
        if (Long.parseLong(n) > N) {
            return 0;
        }
        if (n.charAt(0) == '0') n = n.substring(1);

        int ans = 1;
        if (new HashSet<>(Arrays.asList(n.split(""""))).equals(new HashSet<>(Arrays.asList(""7"", ""5"", ""3"")))) {
            ans = 1;  
        } else {
            ans = 0;
        }
        for (char i : ""753"".toCharArray()) {
            ans += aaa(n + i, N);
        }
        return ans;
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC033_B.java,"int H, W, N;
int s_r, s_c;
String S, T;
boolean Judge = false;
int S_L = 0, S_R = 0, S_U = 0, S_D = 0;
int T_L = 0, T_R = 0, T_U = 0, T_D = 0;
Scanner scanner = new Scanner(System.in);

H = scanner.nextInt();
W = scanner.nextInt();
N = scanner.nextInt();
s_r = scanner.nextInt();
s_c = scanner.nextInt();
S = scanner.next();
T = scanner.next();

for (int x = 0; x < N; x++) {
    if (S.charAt(x) == 'L') {
        S_L += 1;
        if (S_L - T_R - s_c == 0) {
            Judge = true;
        }
    } else if (S.charAt(x) == 'R') {
        S_R += 1;
        if (s_c + (S_R - T_L) == W + 1) {
            Judge = true;
        }
    } else if (S.charAt(x) == 'U') {
        S_U += 1;
        if (S_U - T_D - s_r == 0) {
            Judge = true;
        }
    } else if (S.charAt(x) == 'D') {
        S_D += 1;
        if (s_r + (S_D - T_U) == H + 1) {
            Judge = true;
        }
    }
    if (T.charAt(x) == 'L') {
        if (S_R - T_L + s_c != 1) {
            T_L += 1;
        }
    }
    if (T.charAt(x) == 'R') {
        if (s_c + (T_R - S_L) != W) {
            T_R += 1;
        }
    }
    if (T.charAt(x) == 'U') {
        if (S_D - T_U + s_r != 1) {
            T_U += 1;
        }
    }
    if (T.charAt(x) == 'D') {
        if (s_r + (T_D - S_U) != H) {
            T_D += 1;
        }
    }
}

if (Judge) {
    System.out.println(""NO"");
} else {
    System.out.println(""YES"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int H, W, N;
        int s_r, s_c;
        String S, T;
        boolean Judge = false;
        int S_L = 0, S_R = 0, S_U = 0, S_D = 0;
        int T_L = 0, T_R = 0, T_U = 0, T_D = 0;
        Scanner scanner = new Scanner(System.in);
        
        H = scanner.nextInt();
        W = scanner.nextInt();
        N = scanner.nextInt();
        s_r = scanner.nextInt();
        s_c = scanner.nextInt();
        S = scanner.next();
        T = scanner.next();
        
        for (int x = 0; x < N; x++) {
            if (S.charAt(x) == 'L') {
                S_L += 1;
                if (S_L - T_R - s_c == 0) {
                    Judge = true;
                }
            } else if (S.charAt(x) == 'R') {
                S_R += 1;
                if (s_c + (S_R - T_L) == W + 1) {
                    Judge = true;
                }
            } else if (S.charAt(x) == 'U') {
                S_U += 1;
                if (S_U - T_D - s_r == 0) {
                    Judge = true;
                }
            } else if (S.charAt(x) == 'D') {
                S_D += 1;
                if (s_r + (S_D - T_U) == H + 1) {
                    Judge = true;
                }
            }
            if (T.charAt(x) == 'L') {
                if (S_R - T_L + s_c != 1) {
                    T_L += 1;
                }
            }
            if (T.charAt(x) == 'R') {
                if (s_c + (T_R - S_L) != W) {
                    T_R += 1;
                }
            }
            if (T.charAt(x) == 'U') {
                if (S_D - T_U + s_r != 1) {
                    T_U += 1;
                }
            }
            if (T.charAt(x) == 'D') {
                if (s_r + (T_D - S_U) != H) {
                    T_D += 1;
                }
            }
        }
        
        if (Judge) {
            System.out.println(""NO"");
        } else {
            System.out.println(""YES"");
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC028_A.java,"public class atcoder_AGC028_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int M = scanner.nextInt();
        String S = scanner.next();
        String T = scanner.next();
        char[] list_S = S.toCharArray();
        char[] list_T = T.toCharArray();
        int[] Number_i = new int[N];
        for (int i = 0; i < N; i++) {
            Number_i[i] = i;
        }
        List<Integer> Number_iMN = new ArrayList<>();
        for (int i : Number_i) {
            Number_iMN.add(i * M / N);
        }
        int[] Number_j = new int[M];
        for (int j = 0; j < M; j++) {
            Number_j[j] = j;
        }
        Set<Integer> Kaburi_j = new HashSet<>(Number_iMN);
        Kaburi_j.retainAll(Arrays.asList(Number_j));
        List<Integer> Kaburi_i = new ArrayList<>();
        for (int j : Kaburi_j) {
            Kaburi_i.add((int) (j * N / M));
        }
        int counter = 0;
        int Flag = 0;
        int Kaburi_Size = Kaburi_i.size();
        while (counter <= Kaburi_Size - 1) {
            if (list_S[Kaburi_i.get(counter)] == list_T[Kaburi_j.get(counter)]) {
                // do nothing
            } else {
                Flag = 1;
                break;
            }
            counter++;
        }
        if (Flag == 1) {
            System.out.println(-1);
        } else {
            System.out.println(N * M / gcd(N, M));
        }
    }

    public static int gcd(int a, int b) {
        while (b > 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int M = scanner.nextInt();
        String S = scanner.next();
        String T = scanner.next();
        char[] list_S = S.toCharArray();
        char[] list_T = T.toCharArray();
        int[] Number_i = new int[N];
        for (int i = 0; i < N; i++) {
            Number_i[i] = i;
        }
        List<Integer> Number_iMN = new ArrayList<>();
        for (int i : Number_i) {
            Number_iMN.add(i * M / N);
        }
        int[] Number_j = new int[M];
        for (int j = 0; j < M; j++) {
            Number_j[j] = j;
        }
        Set<Integer> Kaburi_j = new HashSet<>(Number_iMN);
        Kaburi_j.retainAll(Arrays.asList(Number_j));
        List<Integer> Kaburi_i = new ArrayList<>();
        for (int j : Kaburi_j) {
            Kaburi_i.add((int) (j * N / M));
        }
        int counter = 0;
        int Flag = 0;
        int Kaburi_Size = Kaburi_i.size();
        while (counter <= Kaburi_Size - 1) {
            int kaburi_i_value = Kaburi_i.get(counter);
            int kaburi_j_value = Kaburi_j.iterator().next();
            if (list_S[kaburi_i_value] == list_T[kaburi_j_value]) {
                // do nothing
            } else {
                Flag = 1;
                break;
            }
            counter++;
        }
        if (Flag == 1) {
            System.out.println(-1);
        } else {
            System.out.println(N * M / gcd(N, M));
        }
    }

    public static int gcd(int a, int b) {
        while (b > 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC125_A.java,"int a, b, t;
Scanner sc = new Scanner(System.in);
a = sc.nextInt();
b = sc.nextInt();
t = sc.nextInt();
int cookie = 0;
int time = a;
while (time <= t + 0.5) {
    cookie += b;
    time += a;
}
System.out.println(cookie);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int a, b, t;
        Scanner sc = new Scanner(System.in);
        a = sc.nextInt();
        b = sc.nextInt();
        t = sc.nextInt();
        int cookie = 0;
        int time = a;
        while (time <= t + 0.5) {
            cookie += b;
            time += a;
        }
        System.out.println(cookie);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_31_A.java,"int y = Integer.parseInt(Scanner.nextLine());
String[] inputArr = Scanner.nextLine().split("" "");
int[] arr = new int[inputArr.length];
for(int i=0; i<inputArr.length; i++) {
    arr[i] = Integer.parseInt(inputArr[i]);
}
for(int i=0; i<arr.length; i++) {
    for(int j=0; j<arr.length; j++) {
        if(i == j) {
            continue;
        }
        for(int k=0; k<arr.length; k++) {
            if(arr[k] != arr[j] && arr[k] != arr[i] && arr[k] == arr[i] + arr[j]) {
                System.out.println((k+1) + "" "" + (j+1) + "" "" + (i+1));
                System.exit(0);
            }
        }
    }
}
System.out.println(-1);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int y = Integer.parseInt(scanner.nextLine());
        String[] inputArr = scanner.nextLine().split("" "");
        int[] arr = new int[inputArr.length];
        for(int i=0; i<inputArr.length; i++) {
            arr[i] = Integer.parseInt(inputArr[i]);
        }
        for(int i=0; i<arr.length; i++) {
            for(int j=0; j<arr.length; j++) {
                if(i == j) {
                    continue;
                }
                for(int k=0; k<arr.length; k++) {
                    if(arr[k] != arr[j] && arr[k] != arr[i] && arr[k] == arr[i] + arr[j]) {
                        System.out.println((k+1) + "" "" + (j+1) + "" "" + (i+1));
                        System.exit(0);
                    }
                }
            }
        }
        System.out.println(-1);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_55_B.java,"public class codeforces_55_B {
    public static void rememberTheNumber(int[] nums, int i, char[] operations, int[] ans) {
        if(i >= 3) {
            return;
        }
        for(int j=0; j<4; j++) {
            for(int k=j+1; k<4; k++) {
                if(nums[j] != -1 && nums[k] != -1) {
                    int s = nums[j];
                    nums[j] = -1;
                    int t = nums[k];
                    if(operations[i] == '+') {
                        nums[k] = s + t;
                    }
                    else if(operations[i] == '*') {
                        nums[k] = s * t;
                    }
                    if(i == 2 && nums[k] < ans[0]) {
                        ans[0] = nums[k];
                    }
                    rememberTheNumber(nums, i+1, operations, ans);
                    nums[j] = s;
                    nums[k] = t;
                }
            }
        }
    }

    public static void main(String[] args) {
        int[] nums = new int[4];
        char[] operations = new char[3];
        int[] ans = {10000000000000000000000000};
        
        // Input nums array
        Scanner scanner = new Scanner(System.in);
        for(int i=0; i<4; i++) {
            nums[i] = scanner.nextInt();
        }
        
        // Input operations array
        scanner.nextLine();
        String operationsString = scanner.nextLine();
        for(int i=0; i<3; i++) {
            operations[i] = operationsString.charAt(i);
        }
        
        rememberTheNumber(nums, 0, operations, ans);
        System.out.println(ans[0]);
    }
}","import java.util.*;

public class Main {
    public static void rememberTheNumber(int[] nums, int i, char[] operations, int[] ans) {
        if(i >= 3) {
            return;
        }
        for(int j=0; j<4; j++) {
            for(int k=j+1; k<4; k++) {
                if(nums[j] != -1 && nums[k] != -1) {
                    int s = nums[j];
                    nums[j] = -1;
                    int t = nums[k];
                    if(operations[i] == '+') {
                        nums[k] = s + t;
                    }
                    else if(operations[i] == '*') {
                        nums[k] = s * t;
                    }
                    if(i == 2 && nums[k] < ans[0]) {
                        ans[0] = nums[k];
                    }
                    rememberTheNumber(nums, i+1, operations, ans);
                    nums[j] = s;
                    nums[k] = t;
                }
            }
        }
    }

    public static void main(String[] args) {
        int[] nums = new int[4];
        char[] operations = new char[3];
        int[] ans = {10000000000000000000000000};
        
        // Input nums array
        Scanner scanner = new Scanner(System.in);
        for(int i=0; i<4; i++) {
            nums[i] = scanner.nextInt();
        }
        
        // Input operations array
        scanner.nextLine();
        String operationsString = scanner.nextLine();
        for(int i=0; i<3; i++) {
            operations[i] = operationsString.charAt(i);
        }
        
        rememberTheNumber(nums, 0, operations, ans);
        System.out.println(ans[0]);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_621_A.java,"int n = Integer.parseInt (scanner.nextLine());
String[] input = scanner.nextLine().split("" "");
int[] lst = new int[n];
for (int i = 0; i < n; i++) {
    lst[i] = Integer.parseInt(input[i]);
}
Arrays.sort(lst);
int od = 0;
for (int i : lst) {
    if (i % 2 != 0) {
        od += 1;
    }
}
int sum = 0;
boolean ok = false;
for (int i = 0; i < n; i++) {
    if (lst[i] % 2 == 0) {
        sum += lst[i];
    } else {
        if (ok || od > 1) {
            sum += lst[i];
            od -= 1;
            ok = !ok;
        }
    }
}
System.out.println(sum);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt (scanner.nextLine());
        String[] input = scanner.nextLine().split("" "");
        Long[] lst = new Long[n];
        for (int i = 0; i < n; i++) {
            lst[i] = Long.parseLong(input[i]);
        }
        Arrays.sort(lst, Collections.reverseOrder());
        int od = 0;
        for (long i : lst) {
            if (i % 2 != 0) {
                od += 1;
            }
        }
        long sum = 0;
        boolean ok = false;
        for (int i = 0; i < n; i++) {
            if (lst[i] % 2 == 0) {
                sum += lst[i];
            } else {
                if (ok || od > 1) {
                    sum += lst[i];
                    od -= 1;
                    ok = !ok;
                }
            }
        }
        System.out.println(sum);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_282_B.java,"int firstline = Integer.parseInt(scanner.nextLine());
int total = 0;
List<Character> memory = new ArrayList<>();

for (int x = 0; x < firstline; x++) {
    String[] inputArray = scanner.nextLine().split("" "");
    int A = Integer.parseInt(inputArray[0]);
    int G = Integer.parseInt(inputArray[1]);

    if (total + A <= 500) {
        total += A;
        memory.add('A');
    } else {
        total -= G;
        memory.add('G');
    }
}

StringBuilder result = new StringBuilder();
for (char c : memory) {
    result.append(c);
}

System.out.println(result.toString());","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int firstline = Integer.parseInt(scanner.nextLine());
        int total = 0;
        List<Character> memory = new ArrayList<>();
        
        for (int x = 0; x < firstline; x++) {
            String[] inputArray = scanner.nextLine().split("" "");
            int A = Integer.parseInt(inputArray[0]);
            int G = Integer.parseInt(inputArray[1]);
        
            if (total + A <= 500) {
                total += A;
                memory.add('A');
            } else {
                total -= G;
                memory.add('G');
            }
        }
        
        StringBuilder result = new StringBuilder();
        for (char c : memory) {
            result.append(c);
        }
        
        System.out.println(result.toString());
    } 
}"
ChatGPT,avatar,Python,Java,atcoder_ABC169_C.java,"public class atcoder_ABC169_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        double b = sc.nextDouble();
        int result = (int) (a * (b * 100 + 0.1) / 100);
        System.out.println(result);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextLong();
        double sb = sc.nextDouble();
        long b = (long) (sb * 100 + 0.1);
        long result = (a * b / 100);
        System.out.println(result);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_32_B.java,"String s = new Scanner(System.in).nextLine();
String result = """";
int i = 0;
while (i < s.length()) {
    if (s.charAt(i) == '.') {
        result += '0';
    } else {
        i++;
        if (s.charAt(i) == '.') {
            result += '1';
        } else {
            result += '2';
        }
    }
    i++;
}
System.out.println(result);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        String s = new Scanner(System.in).nextLine();
        String result = """";
        int i = 0;
        while (i < s.length()) {
            if (s.charAt(i) == '.') {
                result += '0';
            } else {
                i++;
                if (s.charAt(i) == '.') {
                    result += '1';
                } else {
                    result += '2';
                }
            }
            i++;
        }
        System.out.println(result); 
    }
}"
ChatGPT,avatar,Python,Java,codeforces_272_B.java,"public class codeforces_272_B {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] sequence = new int[n];
        for (int i = 0; i < n; i++) {
            sequence[i] = scanner.nextInt();
        }
        System.out.println(nPairsWithCommonFX(sequence));
    }

    public static int nPairsWithCommonFX(int[] sequence) {
        Map<Integer, List<Integer>> storage = new HashMap<>();
        List<Integer> FXs = new ArrayList<>();
        for (int value : sequence) {
            int y = f(value);
            if (!storage.containsKey(y)) {
                List<Integer> values = new ArrayList<>();
                values.add(value);
                storage.put(y, values);
                FXs.add(y);
            } else {
                storage.get(y).add(value);
            }
        }
        int count = 0;
        for (int y : FXs) {
            int size = storage.get(y).size();
            count += size * size;
        }
        count -= FXs.size();
        count /= 2;
        return count;
    }

    public static int f(int n) {
        int y = 1;
        while (n != 1) {
            if (n % 2 != 0) {
                y += 1;
            }
            n /= 2;
        }
        return y;
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] sequence = new int[n];
        for (int i = 0; i < n; i++) {
            sequence[i] = scanner.nextInt();
        }
        System.out.println(nPairsWithCommonFX(sequence));
    }

    public static int nPairsWithCommonFX(int[] sequence) {
        Map<Integer, List<Integer>> storage = new HashMap<>();
        List<Integer> FXs = new ArrayList<>();
        for (int value : sequence) {
            int y = f(value);
            if (!storage.containsKey(y)) {
                List<Integer> values = new ArrayList<>();
                values.add(value);
                storage.put(y, values);
                FXs.add(y);
            } else {
                storage.get(y).add(value);
            }
        }
        int count = 0;
        for (int y : FXs) {
            int size = storage.get(y).size();
            count += size * size;
        }
        for (int y : FXs) {
            int size = storage.get(y).size();
            count -= size;
        }
        count /= 2;
        return count;
    }

    public static int f(int n) {
        int y = 1;
        while (n != 1) {
            if (n % 2 != 0) {
                y += 1;
            }
            n /= 2;
        }
        return y;
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC070_B.java,"int[] A = new int[4];
Scanner scanner = new Scanner(System.in);
String[] input = scanner.nextLine().split("" "");
for (int i = 0; i < 4; i++) {
    A[i] = Integer.parseInt(input[i]);
}

if (A[1] <= A[2] || A[3] <= A[0]) {
    System.out.println(0);
} else {
    Arrays.sort(A);
    System.out.println(A[2] - A[1]);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int[] A = new int[4];
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split("" "");
        for (int i = 0; i < 4; i++) {
            A[i] = Integer.parseInt(input[i]);
        }
        
        if (A[1] <= A[2] || A[3] <= A[0]) {
            System.out.println(0);
        } else {
            Arrays.sort(A);
            System.out.println(A[2] - A[1]);
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_67_B.java,"int n = input.nextInt();
int k = input.nextInt();
int[] M = new int[n];
for(int i=0; i<n; i++){
    M[i] = input.nextInt();
}
int m = 0;
for(int j=0; j<n; j++){
    int p = 0;
    for(p=0; p<n; p++){
        if(M[p] == 0){
            System.out.print(p+1 + "" "");
            break;
        }
    }
    for(int l=0; l<p+1-k; l++){
        M[l] -= 1;
    }
    M[p] -= 1;
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
        int k = input.nextInt();
        int[] M = new int[n];
        for(int i=0; i<n; i++){
            M[i] = input.nextInt();
        }
        int m = 0;
        for(int j=0; j<n; j++){
            int p = 0;
            for(p=0; p<n; p++){
                if(M[p] == 0){
                    System.out.print(p+1 + "" "");
                    break;
                }
            }
            for(int l=0; l<p+1-k; l++){
                M[l] -= 1;
            }
            M[p] -= 1;
        }  
    }
}"
ChatGPT,avatar,Python,Java,codeforces_86_A.java,"int l = 0, r = 0;
Scanner scanner = new Scanner(System.in);
String[] inputs = scanner.nextLine().split("" "");
l = Integer.parseInt(inputs[0]);
r = Integer.parseInt(inputs[1]);

int curr = r;
int s = 0;
while (curr != 0) {
    s++;
    curr /= 10;
}

int first = (int) Math.pow(10, s);
int second = first / 2;
int ans = -1;

for (int i : new int[]{l, r, first, second}) {
    if (i >= l && i <= r) {
        curr = i;
        String rev = """";
        for (char c : String.valueOf(curr).toCharArray()) {
            rev += String.valueOf(9 - Integer.parseInt(String.valueOf(c)));
        }
        ans = Math.max(ans, Integer.parseInt(rev) * curr);
    }
}

System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int l = 0, r = 0;
        Scanner scanner = new Scanner(System.in);
        String[] inputs = scanner.nextLine().split("" "");
        l = Integer.parseInt(inputs[0]);
        r = Integer.parseInt(inputs[1]);
        
        int curr = r;
        int s = 0;
        while (curr != 0) {
            s++;
            curr /= 10;
        }
        
        int first = (int) Math.pow(10, s);
        int second = first / 2;
        long ans = -1;
        
        for (int i : new int[]{l, r, first, second}) {
            if (i >= l && i <= r) {
                curr = i;
                String rev = """";
                for (char c : String.valueOf(curr).toCharArray()) {
                    rev += String.valueOf(9 - Integer.parseInt(String.valueOf(c)));
                }
                ans = Math.max(ans, Long.parseLong(rev) * curr);
            }
        }
        
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC127_F.java,"import java.util.PriorityQueue;
import java.util.Scanner;

public class atcoder_ABC127_F {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int q = scanner.nextInt();
        int[] ans = new int[2];
        PriorityQueue<Integer> p1 = new PriorityQueue<>();
        PriorityQueue<Integer> p2 = new PriorityQueue<>();
        int sum_b = 0;
        int sum_p1 = 0;
        int sum_p2 = 0;

        for (int i = 0; i < q; i++) {
            int[] ql = new int[3];
            for (int j = 0; j < 3; j++) {
                ql[j] = scanner.nextInt();
            }

            if (ql[0] == 2) {
                if (p1.size() == p2.size()) {
                    System.out.println(-p2.peek() + sum_p1 - p1.size() * -p2.peek() + p2.size() * -p2.peek() - sum_p2 + sum_b);
                } else {
                    System.out.println(p1.peek() + sum_p1 - p1.size() * p1.peek() + p2.size() * p1.peek() - sum_p2 + sum_b);
                }
            } else {
                sum_b += ql[2];
                if (p1.size() == 0) {
                    p1.offer(ql[1]);
                    sum_p1 += ql[1];
                } else if (p1.peek() <= ql[1]) {
                    p1.offer(ql[1]);
                    sum_p1 += ql[1];
                } else {
                    p2.offer(-ql[1]);
                    sum_p2 += ql[1];
                }

                if (p1.size() < p2.size()) {
                    int k = p2.poll();
                    p1.offer(-k);
                    sum_p2 += k;
                    sum_p1 -= k;
                }

                if (p1.size() - 1 > p2.size()) {
                    int k = p1.poll();
                    p2.offer(-k);
                    sum_p1 -= k;
                    sum_p2 += k;
                }
            }
        }
    }
}","import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int q = scanner.nextInt();
        int[] ans = new int[2];
        PriorityQueue<Integer> p1 = new PriorityQueue<>();
        PriorityQueue<Integer> p2 = new PriorityQueue<>();
        int sum_b = 0;
        int sum_p1 = 0;
        int sum_p2 = 0;

        scanner.nextLine();
        for (int i = 0; i < q; i++) {
            String line = scanner.nextLine();
            String[] numbers = line.split("" "");
            int[] ql = new int[numbers.length];

            for (int j = 0; j < numbers.length; j++) {
                ql[j] = Integer.parseInt(numbers[j]);
            }
            
            if (ql[0] == 2) {
                if (p1.size() == p2.size()) {
                    System.out.println(-p2.peek() + sum_p1 - p1.size() * -p2.peek() + p2.size() * -p2.peek() - sum_p2 + sum_b);
                } else {
                    System.out.println(p1.peek() + sum_p1 - p1.size() * p1.peek() + p2.size() * p1.peek() - sum_p2 + sum_b);
                }
            } else {
                sum_b += ql[2];
                if (p1.size() == 0) {
                    p1.offer(ql[1]);
                    sum_p1 += ql[1];
                } else if (p1.peek() <= ql[1]) {
                    p1.offer(ql[1]);
                    sum_p1 += ql[1];
                } else {
                    p2.offer(-ql[1]);
                    sum_p2 += ql[1];
                }

                if (p1.size() < p2.size()) {
                    int k = p2.poll();
                    p1.offer(-k);
                    sum_p2 += k;
                    sum_p1 -= k;
                }

                if (p1.size() - 1 > p2.size()) {
                    int k = p1.poll();
                    p2.offer(-k);
                    sum_p1 -= k;
                    sum_p2 += k;
                }
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC106_C.java,"public class atcoder_ABC106_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        int k = sc.nextInt();
        int l = 0;
        for (char c : s.toCharArray()) {
            if (c != '1') {
                break;
            }
            l++;
        }
        if (l >= k) {
            System.out.println(1);
        } else {
            System.out.println(s.charAt(l));
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        long k = Long.parseLong(sc.nextLine());
        int l = 0;
        for (char c : s.toCharArray()) {
            if (c != '1') {
                break;
            }
            l++;
        }
        if (l >= k) {
            System.out.println(1);
        } else {
            System.out.println(s.charAt(l));
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC046_A.java,"int x = Integer.parseInt (System.console().readLine());
int gcd = gcd(360, x);
int result = 360 / gcd;
System.out.println(result);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int x = scanner.nextInt();
        int gcd = gcd(360, x);
        int result = 360 / gcd;
        System.out.println(result);
        
    }  
    public static int gcd(int a, int b) {
        if(b == 0) {
            return a;
        } else {
            return gcd(b, a%b);
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_462_B.java,"n, k = Integer.parseInt(sc.next()), Integer.parseInt(sc.next());
String s = sc.next();
int[] count = new int[26];
for (char c : s.toCharArray()) {
    count[c - 'A']++;
}
Arrays.sort(count);
int res = 0;
for (int i = 25; i >= 0; i--) {
    if (count[i] >= k) {
        res += k * k;
        System.out.println(res);
        return;
    }
    k -= count[i];
    res += count[i] * count[i];
}
System.out.println(res);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        sc.nextLine();
        String s = sc.nextLine();
        int[] count = new int[26];
        for (char c : s.toCharArray()) {
            count[c - 'A']++;
        }
        Arrays.sort(count);
        int res = 0;
        for (int i = 25; i >= 0; i--) {
            if (count[i] >= k) {
                res += k * k;
                System.out.println(res);
                return;
            }
            k -= count[i];
            res += count[i] * count[i];
        }
        System.out.println(res);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_7_B.java,"public class codeforces_7_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        int m = scanner.nextInt();
        int[] alocuente = new int[m];
        int ind = 1;
        
        for (int i = 0; i < t; i++) {
            String[] op = scanner.nextLine().split("" "");
            
            if (op[0].equals(""alloc"")) {
                int pos = 0;
                
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        pos++;
                        
                        if (pos == Integer.parseInt(op[1])) {
                            for (int k = j - Integer.parseInt(op[1]) + 1; k <= j; k++) {
                                alocuente[k] = ind;
                            }
                            
                            System.out.println(ind);
                            ind++;
                            break;
                        }
                    } else {
                        pos = 0;
                    }
                }
                
                if (pos != Integer.parseInt(op[1])) {
                    System.out.println(""NULL"");
                }
            }
            
            if (op[0].equals(""erase"")) {
                int pos = 0;
                
                if (!contains(alocuente, Integer.parseInt(op[1])) || Integer.parseInt(op[1]) == 0) {
                    System.out.println(""ILLEGAL_ERASE_ARGUMENT"");
                } else {
                    for (int j = 0; j < m; j++) {
                        if (Integer.parseInt(op[1]) > 0 && alocuente[j] == Integer.parseInt(op[1])) {
                            alocuente[j] = 0;
                        }
                    }
                }
            }
            
            if (op[0].equals(""defragment"")) {
                int cnt = 0;
                
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        cnt++;
                    }
                }
                
                int[] temp = new int[m - cnt];
                int index = 0;
                
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] != 0) {
                        temp[index] = alocuente[j];
                        index++;
                    }
                }
                
                alocuente = new int[m];
                
                for (int j = 0; j < temp.length; j++) {
                    alocuente[j] = temp[j];
                }
                
                for (int j = temp.length; j < m; j++) {
                    alocuente[j] = 0;
                }
            }
        }
    }
    
    public static boolean contains(int[] arr, int value) {
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == value) {
                return true;
            }
        }
        return false;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        int m = scanner.nextInt();
        int[] alocuente = new int[m];
        int ind = 1;
        
        for (int i = 0; i < t; i++) {
            String[] op = scanner.nextLine().split("" "");
            
            if (op[0].equals(""alloc"")) {
                int pos = 0;
                
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        pos++;
                        
                        if (pos == Integer.parseInt(op[1])) {
                            for (int k = j - Integer.parseInt(op[1]) + 1; k <= j; k++) {
                                alocuente[k] = ind;
                            }
                            
                            System.out.println(ind);
                            ind++;
                            break;
                        }
                    } else {
                        pos = 0;
                    }
                }
                
                if (pos != Integer.parseInt(op[1])) {
                    System.out.println(""NULL"");
                }
            }
            
            if (op[0].equals(""erase"")) {
                int pos = 0;
                
                if (!contains(alocuente, Integer.parseInt(op[1])) || Integer.parseInt(op[1]) == 0) {
                    System.out.println(""ILLEGAL_ERASE_ARGUMENT"");
                } else {
                    for (int j = 0; j < m; j++) {
                        if (Integer.parseInt(op[1]) > 0 && alocuente[j] == Integer.parseInt(op[1])) {
                            alocuente[j] = 0;
                        }
                    }
                }
            }
            
            if (op[0].equals(""defragment"")) {
                int cnt = 0;
                
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        cnt++;
                    }
                }
                
                int[] temp = new int[m - cnt];
                int index = 0;
                
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] != 0) {
                        temp[index] = alocuente[j];
                        index++;
                    }
                }
                
                alocuente = new int[m];
                
                for (int j = 0; j < temp.length; j++) {
                    alocuente[j] = temp[j];
                }
                
                for (int j = temp.length; j < m; j++) {
                    alocuente[j] = 0;
                }
            }
        }
    }
    
    public static boolean contains(int[] arr, int value) {
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == value) {
                return true;
            }
        }
        return false;
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC004_B.java,"public class atcoder_AGC004_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int x = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        int[][] b = new int[n][n];
        for (int i = 0; i < n; i++) {
            int m = a[i];
            for (int j = 0; j < n; j++) {
                int k = i - j;
                if (k < 0) {
                    k += n;
                }
                m = Math.min(m, a[k]);
                b[j][i] = m;
            }
        }
        long m = Long.MAX_VALUE;
        for (int i = 0; i < n; i++) {
            long sum = 0;
            for (int j = 0; j < n; j++) {
                sum += b[i][j];
            }
            m = Math.min(m, sum + x * i);
        }
        System.out.println(m);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        long x = scanner.nextLong();
        long[] a = new long[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextLong();
        }
        long[][] b = new long[n][n];
        for (int i = 0; i < n; i++) {
            long m = a[i];
            for (int j = 0; j < n; j++) {
                int k = i - j;
                if (k < 0) {
                    k += n;
                }
                m = Math.min(m, a[k]);
                b[j][i] = m;
            }
        }
        long m = Long.MAX_VALUE;
        for (int i = 0; i < n; i++) {
            long sum = 0;
            for (int j = 0; j < n; j++) {
                sum += b[i][j];
            }
            m = Math.min(m, sum + x * i);
        }
        System.out.println(m);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_373_B.java,"public class codeforces_373_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int w = scanner.nextInt();
        int m = scanner.nextInt();
        int k = scanner.nextInt();
        long lo = 0;
        long hi = (long) 1e18;
        while (hi - lo > 1) {
            long md = (lo + hi) / 2;
            long c = sum(m + md - 1) - sum(m - 1);
            if (c * k <= w) {
                lo = md;
            } else {
                hi = md;
            }
        }
        System.out.println(lo);
    }
    
    public static long sum(long k) {
        long ret = 0;
        long pw = 10;
        long len = 1;
        while (true) {
            long cur = Math.min(pw - 1, k);
            long prev = pw / 10;
            ret += (cur - prev + 1) * len;
            if (pw - 1 >= k) {
                break;
            }
            len += 1;
            pw *= 10;
        }
        return ret;
    }
}","import java.math.BigInteger;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        BigInteger w = scanner.nextBigInteger();
        BigInteger m = scanner.nextBigInteger();
        BigInteger k = scanner.nextBigInteger();
        
        BigInteger lo = BigInteger.ZERO;
        BigInteger hi = new BigInteger(""1000000000000000000"");
        
        while (hi.subtract(lo).compareTo(BigInteger.ONE) > 0) {
            BigInteger md = lo.add(hi).divide(BigInteger.valueOf(2));
            BigInteger c = sum(m.add(md).subtract(BigInteger.ONE)).subtract(sum(m.subtract(BigInteger.ONE)));
            
            if (c.multiply(k).compareTo(w) <= 0) {
                lo = md;
            } else {
                hi = md;
            }
        }
        
        System.out.println(lo);
    }

    public static BigInteger sum(BigInteger k) {
        BigInteger ret = BigInteger.ZERO;
        BigInteger pw = BigInteger.TEN;
        BigInteger len = BigInteger.ONE;
        
        while (true) {
            BigInteger cur = pw.subtract(BigInteger.ONE).min(k);
            BigInteger prev = pw.divide(BigInteger.TEN);
            ret = ret.add(cur.subtract(prev).add(BigInteger.ONE).multiply(len));
            
            if (pw.subtract(BigInteger.ONE).compareTo(k) >= 0) {
                break;
            }
            
            len = len.add(BigInteger.ONE);
            pw = pw.multiply(BigInteger.TEN);
        }
        
        return ret;
    }
}"
ChatGPT,avatar,Python,Java,codeforces_61_B.java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.StringTokenizer;

public class codeforces_61_B {
    
    public static boolean valid(int i, int j, int n, int m) {
        if (i < n && i >= 0 && j >= 0 && j < m) return true;
        return false;
    }
    
    public static int sumn(int i, int n) {
        return (n - i) * (i + n) / 2;
    }
    
    public static double sqfun(int a, int b, int c) {
        return (-b + Math.sqrt(b * b - 4 * a * c)) / 2 * a;
    }
    
    public static int[] value() throws IOException {
        String[] strNums;
        strNums = br.readLine().split(""\\s"");
        int[] nums = new int[strNums.length];
        for (int i = 0; i < strNums.length; i++) {
            nums[i] = Integer.parseInt(strNums[i]);
        }
        return nums;
    }
    
    public static int[] values() throws IOException {
        String[] strNums;
        strNums = br.readLine().split(""\\s"");
        int[] nums = new int[strNums.length];
        for (int i = 0; i < strNums.length; i++) {
            nums[i] = Integer.parseInt(strNums[i]);
        }
        return nums;
    }
    
    public static int[] inlst() throws IOException {
        String[] strNums;
        strNums = br.readLine().split(""\\s"");
        int[] nums = new int[strNums.length];
        for (int i = 0; i < strNums.length; i++) {
            nums[i] = Integer.parseInt(strNums[i]);
        }
        return nums;
    }
    
    public static int[] inlsts() throws IOException {
        String[] strNums;
        strNums = br.readLine().split(""\\s"");
        int[] nums = new int[strNums.length];
        for (int i = 0; i < strNums.length; i++) {
            nums[i] = Integer.parseInt(strNums[i]);
        }
        return nums;
    }
    
    public static int inp() throws IOException {
        return Integer.parseInt(br.readLine());
    }
    
    public static int inps() throws IOException {
        return Integer.parseInt(br.readLine());
    }
    
    public static String instr() throws IOException {
        return br.readLine();
    }
    
    public static String[] stlst() throws IOException {
        return br.readLine().split(""\\s"");
    }
    
    public static String f(String s) {
        String r = """";
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (c != '-' && c != ';' && c != '_') r += Character.toLowerCase(c);
        }
        return r;
    }
    
    public static void solve() throws IOException {
        List<String> l = new ArrayList<>();
        for (int i = 0; i < 3; i++) {
            l.add(f(instr()));
        }
        List<String> permutations = new ArrayList<>();
        permute(l, 0, l.size()-1, permutations);
        for (int i = 0; i < inp(); i++) {
            if (permutations.contains(f(instr()))) System.out.println(""ACC"");
            else System.out.println(""WA"");
        }
    }
    
    public static void permute(List<String> list, int l, int r, List<String> permutations) {
        if (l == r) {
            String perm = """";
            for (String s : list) {
                perm += s;
            }
            permutations.add(perm);
        } else {
            for (int i = l; i <= r; i++) {
                Collections.swap(list, l, i);
                permute(list, l + 1, r, permutations);
                Collections.swap(list, l, i);
            }
        }
    }
    
    public static void main(String[] args) throws IOException {
        solve();
    }
}","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.StringTokenizer;
import java.util.Scanner;

public class Main {
    static Scanner scanner = new Scanner(System.in);
    public static boolean valid(int i, int j, int n, int m) {
        if (i < n && i >= 0 && j >= 0 && j < m) return true;
        return false;
    }
    
    public static int sumn(int i, int n) {
        return (n - i) * (i + n) / 2;
    }
    
    public static double sqfun(int a, int b, int c) {
        return (-b + Math.sqrt(b * b - 4 * a * c)) / 2 * a;
    }
    
    public static int[] value() throws IOException {
        String[] strNums;
        strNums = scanner.nextLine().split(""\\s"");
        int[] nums = new int[strNums.length];
        for (int i = 0; i < strNums.length; i++) {
            nums[i] = Integer.parseInt(strNums[i]);
        }
        return nums;
    }
    
    public static int[] values() throws IOException {
        String[] strNums;
        strNums = scanner.nextLine().split(""\\s"");
        int[] nums = new int[strNums.length];
        for (int i = 0; i < strNums.length; i++) {
            nums[i] = Integer.parseInt(strNums[i]);
        }
        return nums;
    }
    
    public static int[] inlst() throws IOException {
        String[] strNums;
        strNums = scanner.nextLine().split(""\\s"");
        int[] nums = new int[strNums.length];
        for (int i = 0; i < strNums.length; i++) {
            nums[i] = Integer.parseInt(strNums[i]);
        }
        return nums;
    }
    
    public static int[] inlsts() throws IOException {
        String[] strNums;
        strNums = scanner.nextLine().split(""\\s"");
        int[] nums = new int[strNums.length];
        for (int i = 0; i < strNums.length; i++) {
            nums[i] = Integer.parseInt(strNums[i]);
        }
        return nums;
    }
    
    public static int inp() throws IOException {
        return Integer.parseInt(scanner.nextLine());
    }
    
    public static int inps() throws IOException {
        return Integer.parseInt(scanner.nextLine());
    }
    
    public static String instr() throws IOException {
        return scanner.nextLine();
    }
    
    public static String[] stlst() throws IOException {
        return scanner.nextLine().split(""\\s"");
    }
    
    public static String f(String s) {
        String r = """";
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (c != '-' && c != ';' && c != '_') r += Character.toLowerCase(c);
        }
        return r;
    }
    
    public static void solve() throws IOException {
        List<String> l = new ArrayList<>();
        for (int i = 0; i < 3; i++) {
            l.add(f(instr()));
        }
        List<String> permutations = new ArrayList<>();
        permute(l, 0, l.size()-1, permutations);
        for (int i = 0; i < inp(); i++) {
            if (permutations.contains(f(instr()))) System.out.println(""ACC"");
            else System.out.println(""WA"");
        }
    }
    
    public static void permute(List<String> list, int l, int r, List<String> permutations) {
        if (l == r) {
            String perm = """";
            for (String s : list) {
                perm += s;
            }
            permutations.add(perm);
        } else {
            for (int i = l; i <= r; i++) {
                Collections.swap(list, l, i);
                permute(list, l + 1, r, permutations);
                Collections.swap(list, l, i);
            }
        }
    }
    
    public static void main(String[] args) throws IOException {
        solve();
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC029_C.java,"import random;
import java.util.*;

public class atcoder_AGC029_C {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        List<Integer> a = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            a.add(scanner.nextInt());
        }
        List<Integer> dp = new ArrayList<>();
        dp.add(a.get(0));
        for (int i = 1; i < n; i++) {
            if (a.get(i) <= dp.get(dp.size() - 1)) {
                dp = cut(dp, a.get(i));
            } else {
                dp.add(a.get(i));
            }
            boolean isAdded = false;
            for (int j = dp.size() - 1; j >= 0; j--) {
                if (dp.get(j) < k - 1) {
                    dp = cut(dp, dp.get(j) - 1);
                    dp.add(dp.get(j) + 1);
                    if (dp.get(dp.size() - 1) < a.get(i)) {
                        dp.add(a.get(i));
                    }
                    isAdded = true;
                    break;
                }
            }
            if (!isAdded) {
                System.out.println(""False"");
                return;
            }
        }
        System.out.println(""True"");
        return;
    }

    public static List<Integer> cut(List<Integer> array, int index) {
        if (index < 1) {
            return new ArrayList<>();
        }
        if (index <= array.get(0)) {
            List<Integer> result = new ArrayList<>();
            result.add(index);
            result.add(array.get(0));
            return result;
        }
        for (int i = array.size() - 1; i > 0; i--) {
            if (array.get(i - 1) < index) {
                return array.subList(0, i) + (index + array.subList(i, array.size()));
            }
        }
        return array;
    }

    public static boolean isPossible(int k) {
        List<Integer> dp = new ArrayList<>();
        dp.add(a.get(0));
        for (int a : a.subList(1, a.size())) {
            if (a <= dp.get(dp.size() - 1)) {
                dp = cut(dp, a);
            } else {
                dp.add(a);
            }
            boolean isAdded = false;
            for (int i = dp.size() - 1; i >= 0; i--) {
                if (dp.get(i) < k - 1) {
                    dp = cut(dp, dp.get(i) - 1) + (dp.get(i) + 1);
                    if (dp.get(dp.size() - 1) < a) {
                        dp.add(a);
                    }
                    isAdded = true;
                    break;
                }
            }
            if (!isAdded) {
                return false;
            }
        }
        return true;
    }

    public static int bis(int x, int y) {
        if (y == x + 1) {
            return y;
        } else if (isPossible((x + y) / 2)) {
            return bis(x, (x + y) / 2);
        } else {
            return bis((x + y) / 2, y);
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        List<Integer> a = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            a.add(scanner.nextInt());
        }
        List<Integer> dp = new ArrayList<>();
        dp.add(a.get(0));
        for (int i = 1; i < n; i++) {
            if (a.get(i) <= dp.get(dp.size() - 1)) {
                dp = cut(dp, a.get(i));
            } else {
                dp.add(a.get(i));
            }
            boolean isAdded = false;
            for (int j = dp.size() - 1; j >= 0; j--) {
                if (dp.get(j) < k - 1) {
                    dp = cut(dp, dp.get(j) - 1);
                    dp.add(dp.get(j) + 1);
                    if (dp.get(dp.size() - 1) < a.get(i)) {
                        dp.add(a.get(i));
                    }
                    isAdded = true;
                    break;
                }
            }
            if (!isAdded) {
                System.out.println(""False"");
                return;
            }
        }
        System.out.println(""True"");
        return;
    }

    public static List<Integer> cut(List<Integer> array, int index) {
        if (index < 1) {
            return new ArrayList<>();
        }
        if (index <= array.get(0)) {
            List<Integer> result = new ArrayList<>();
            result.add(index);
            result.add(array.get(0));
            return result;
        }
        for (int i = array.size() - 1; i > 0; i--) {
            if (array.get(i - 1) < index) {
                return array.subList(0, i) + (index + array.subList(i, array.size()));
            }
        }
        return array;
    }

    public static boolean isPossible(int k) {
        List<Integer> dp = new ArrayList<>();
        dp.add(a.get(0));
        for (int a : a.subList(1, a.size())) {
            if (a <= dp.get(dp.size() - 1)) {
                dp = cut(dp, a);
            } else {
                dp.add(a);
            }
            boolean isAdded = false;
            for (int i = dp.size() - 1; i >= 0; i--) {
                if (dp.get(i) < k - 1) {
                    dp = cut(dp, dp.get(i) - 1) + (dp.get(i) + 1);
                    if (dp.get(dp.size() - 1) < a) {
                        dp.add(a);
                    }
                    isAdded = true;
                    break;
                }
            }
            if (!isAdded) {
                return false;
            }
        }
        return true;
    }

    public static int bis(int x, int y) {
        if (y == x + 1) {
            return y;
        } else if (isPossible((x + y) / 2)) {
            return bis(x, (x + y) / 2);
        } else {
            return bis((x + y) / 2, y);
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_474_B.java,"import java.util.ArrayList;
import java.util.Scanner;

public class codeforces_474_B {
    public static void main(String[] args) {
        ArrayList<Integer> L = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);

        scanner.nextInt();
        int r = 1;
        for (String k : scanner.nextLine().split("" "")) {
            int num = Integer.parseInt(k);
            for (int i = 0; i < num; i++) {
                L.add(r);
            }
            r++;
        }

        scanner.nextInt();
        for (String j : scanner.nextLine().split("" "")) {
            int index = Integer.parseInt(j) - 1;
            System.out.println(L.get(index));
        }
    }
}","import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        ArrayList<Integer> L = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        scanner.nextLine();
        int r = 1;
        for (String k : scanner.nextLine().split("" "")) {
            int num = Integer.parseInt(k);
            for (int i = 0; i < num; i++) {
                L.add(r);
            }
            r++;
        }

        n = scanner.nextInt();
        scanner.nextLine();
        for (String j : scanner.nextLine().split("" "")) {
            int index = Integer.parseInt(j) - 1;
            System.out.println(L.get(index));
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_99_A.java,"import java.util.Scanner;

public class codeforces_99_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String l = scanner.nextLine();
        String[] lSplit = l.split(""\\."");
        char[] s = lSplit[0].toCharArray();
        char[] p = lSplit[1].toCharArray();
        int i = Character.getNumericValue(p[0]);

        if (s[s.length - 1] == '9') {
            System.out.println(""GOTO Vasilisa."");
        } else if (s[s.length - 1] != '9' && i < 5) {
            String sStr = String.valueOf(s);
            System.out.println(sStr);
        } else {
            String sStr = String.valueOf(s);
            sStr = String.valueOf(Integer.parseInt(sStr) + 1);
            System.out.println(sStr);
        }
    }
}","import java.util.Scanner;
import java.math.BigInteger;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String l = scanner.nextLine();
        String[] lSplit = l.split(""\\."");
        char[] s = lSplit[0].toCharArray();
        char[] p = lSplit[1].toCharArray();
        int i = Character.getNumericValue(p[0]);

        if (s[s.length - 1] == '9') {
            System.out.println(""GOTO Vasilisa."");
        } else if (s[s.length - 1] != '9' && i < 5) {
            String sStr = String.valueOf(s);
            System.out.println(sStr);
        } else {
            String sStr = String.valueOf(s);
            BigInteger bigInt = new BigInteger(sStr);
            sStr = bigInt.add(BigInteger.ONE).toString();
            System.out.println(sStr);
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC123_C.java,"import java.util.Scanner;

public class atcoder_ABC123_C {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] A = new int[5];
        
        for (int i = 0; i < 5; i++) {
            A[i] = scanner.nextInt();
        }
        
        int result = (int) Math.ceil((double) N / min(A)) + 4;
        System.out.println(result);
    }
    
    public static int min(int[] arr) {
        int minVal = arr[0];
        
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] < minVal) {
                minVal = arr[i];
            }
        }
        
        return minVal;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        long N = scanner.nextLong();
        long[] A = new long[5];
        
        for (int i = 0; i < 5; i++) {
            A[i] = scanner.nextLong();
        }
        
        long result = (long) Math.ceil((double) N / min(A)) + 4;
        System.out.println(result);
    }
    
    public static long min(long[] arr) {
        long minVal = arr[0];
        
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] < minVal) {
                minVal = arr[i];
            }
        }
        
        return minVal;
    }
}
"
ChatGPT,avatar,Python,Java,atcoder_ABC119_B.java,"import java.util.Scanner;

public class atcoder_ABC119_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        double[] x = new double[N];
        
        for (int i = 0; i < N; i++) {
            String input = scanner.next();
            if (input.contains(""JPY"")) {
                x[i] = Double.parseDouble(input.replace(""JPY"", """")) * 1.0;
            } else if (input.contains(""BTC"")) {
                x[i] = Double.parseDouble(input.replace(""BTC"", """")) * 380000.0;
            }
        }
        
        double sum = 0.0;
        for (double value : x) {
            sum += value;
        }
        
        System.out.println(sum);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        scanner.nextLine();
        double[] x = new double[N];
        
        for (int i = 0; i < N; i++) {
            String input = scanner.nextLine();
            if (input.contains(""JPY"")) {
                x[i] = Double.parseDouble(input.replace(""JPY"", """")) * 1.0;
            } else if (input.contains(""BTC"")) {
                x[i] = Double.parseDouble(input.replace(""BTC"", """")) * 380000.0;
            }
        }
        
        double sum = 0.0;
        for (double value : x) {
            sum += value;
        }
        
        System.out.println(sum);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_500_A.java,"import java.util.Scanner;

public class codeforces_500_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int t = scanner.nextInt();
        int[] s = new int[n];
        
        for (int i = 0; i < n; i++) {
            s[i] = scanner.nextInt();
        }
        
        int currentCell = 0;
        while (currentCell <= t) {
            currentCell += s[currentCell - 1];
            if (currentCell == t) {
                System.out.println(""YES"");
                System.exit(0);
            } else {
                continue;
            }
        }
        
        System.out.println(""NO"");
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int t = scanner.nextInt();

        scanner.nextLine();
        String line = scanner.nextLine();
        String[] numbers = line.split("" "");
        int[] s = new int[numbers.length];

        for (int i = 0; i < numbers.length; i++) {
            s[i] = Integer.parseInt(numbers[i]);
        }

        int currentCell = 0;
        while (currentCell <= t) {
            currentCell += s[(numbers.length + currentCell - 1) % numbers.length];
            if (currentCell == t) {
                System.out.println(""YES"");
                System.exit(0);
            } else {
                continue;
            }
        }
        
        System.out.println(""NO"");
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC148_F.java,"import java.io.*;
import java.util.*;

public class atcoder_ABC148_F {
    static int n, ta, ao;
    static List<List<Integer>> g;
    static int[] ta_dist, ao_dist;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        ta = sc.nextInt() - 1;
        ao = sc.nextInt() - 1;

        g = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            g.add(new ArrayList<>());
        }

        for (int i = 0; i < n - 1; i++) {
            int a = sc.nextInt() - 1;
            int b = sc.nextInt() - 1;
            g.get(a).add(b);
            g.get(b).add(a);
        }

        ta_dist = new int[n];
        Arrays.fill(ta_dist, -1);
        ta_dist[ta] = 0;

        ao_dist = new int[n];
        Arrays.fill(ao_dist, -1);
        ao_dist[ao] = 0;

        ta_dfs(ta);
        ao_dfs(ao);

        int res = 0;
        for (int i = 0; i < n; i++) {
            if (ta_dist[i] > ao_dist[i]) continue;
            res = Math.max(res, ao_dist[i]);
        }

        System.out.println(res - 1);
    }

    static void ta_dfs(int node) {
        for (int v : g.get(node)) {
            if (ta_dist[v] != -1) continue;
            ta_dist[v] = ta_dist[node] + 1;
            ta_dfs(v);
        }
    }

    static void ao_dfs(int node) {
        for (int v : g.get(node)) {
            if (ao_dist[v] != -1) continue;
            ao_dist[v] = ao_dist[node] + 1;
            ao_dfs(v);
        }
    }
}","import java.io.*;
import java.util.*;

public class Main {
    static int n, ta, ao;
    static List<List<Integer>> g;
    static int[] ta_dist, ao_dist;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        ta = sc.nextInt() - 1;
        ao = sc.nextInt() - 1;

        g = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            g.add(new ArrayList<>());
        }

        for (int i = 0; i < n - 1; i++) {
            int a = sc.nextInt() - 1;
            int b = sc.nextInt() - 1;
            g.get(a).add(b);
            g.get(b).add(a);
        }

        ta_dist = new int[n];
        Arrays.fill(ta_dist, -1);
        ta_dist[ta] = 0;

        ao_dist = new int[n];
        Arrays.fill(ao_dist, -1);
        ao_dist[ao] = 0;

        ta_dfs(ta);
        ao_dfs(ao);

        int res = 0;
        for (int i = 0; i < n; i++) {
            if (ta_dist[i] > ao_dist[i]) continue;
            res = Math.max(res, ao_dist[i]);
        }

        System.out.println(res - 1);
    }

    static void ta_dfs(int node) {
        for (int v : g.get(node)) {
            if (ta_dist[v] != -1) continue;
            ta_dist[v] = ta_dist[node] + 1;
            ta_dfs(v);
        }
    }

    static void ao_dfs(int node) {
        for (int v : g.get(node)) {
            if (ao_dist[v] != -1) continue;
            ao_dist[v] = ao_dist[node] + 1;
            ao_dfs(v);
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC169_D.java,"import java.util.*;
import java.io.*;

public class atcoder_ABC169_D {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());

        if (n == 1) {
            System.out.println(0);
            return;
        }

        List<Integer> fac = primeFactorize(n);
        Map<Integer, Integer> count = new HashMap<>();
        for (int i : fac) {
            count.put(i, count.getOrDefault(i, 0) + 1);
        }

        int ans = 0;
        for (int e : count.values()) {
            int x = e;
            for (int i = 1; i <= Integer.MAX_VALUE; i++) {
                if (x >= i) {
                    x -= i;
                    ans++;
                } else {
                    break;
                }
            }
        }

        System.out.println(ans);
    }

    public static List<Integer> primeFactorize(int n) {
        List<Integer> fac = new ArrayList<>();

        while (n % 2 == 0) {
            fac.add(2);
            n /= 2;
        }

        for (int f = 3; f * f <= n; f += 2) {
            while (n % f == 0) {
                fac.add(f);
                n /= f;
            }
        }

        if (n != 1) {
            fac.add(n);
        }

        return fac;
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        long n = Long.parseLong(br.readLine());

        if (n == 1) {
            System.out.println(0);
            return;
        }

        List<long> fac = primeFactorize(n);
        Map<long, Integer> count = new HashMap<>();
        for (long i : fac) {
            count.put(i, count.getOrDefault(i, 0) + 1);
        }

        int ans = 0;
        for (int e : count.values()) {
            int x = e;
            for (int i = 1; i <= Integer.MAX_VALUE; i++) {
                if (x >= i) {
                    x -= i;
                    ans++;
                } else {
                    break;
                }
            }
        }

        System.out.println(ans);
    }

    public static List<long> primeFactorize(long n) {
        List<long> fac = new ArrayList<>();

        while (n % 2 == 0) {
            fac.add(2);
            n /= 2;
        }

        for (long f = 3; f * f <= n; f += 2) {
            while (n % f == 0) {
                fac.add((Long) f);
                n /= f;
            }
        }

        if (n != 1) {
            fac.add(n);
        }

        return fac;
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC024_B.java,"public class atcoder_AGC024_B {
    public static void main(String[] args) {
        int N = Integer.parseInt(args[0]);
        int[] P = new int[N];
        for (int i = 0; i < N; i++) {
            P[i] = Integer.parseInt(args[i+1]);
        }
        editorial(N, P);
    }
    
    public static void editorial(int N, int[] P) {
        if (N == 1) {
            System.out.println(0);
            return;
        }
        int[] a = new int[N+1];
        for (int i = 0; i < N; i++) {
            a[P[i]] = i;
        }
        int tmp = 1;
        int max_len = 1;
        for (int i = 1; i < N; i++) {
            if (a[i] < a[i+1]) {
                tmp += 1;
                max_len = Math.max(max_len, tmp);
            } else {
                tmp = 1;
            }
        }
        int ans = N - max_len;
        System.out.println(ans);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] P = new int[N];
        for (int i = 0; i < N; i++) {
            P[i] = scanner.nextInt();
        }
        editorial(N, P);
    }
    
    public static void editorial(int N, int[] P) {
        if (N == 1) {
            System.out.println(0);
            return;
        }
        int[] a = new int[N+1];
        for (int i = 0; i < N; i++) {
            a[P[i]] = i;
        }
        int tmp = 1;
        int max_len = 1;
        for (int i = 1; i < N; i++) {
            if (a[i] < a[i+1]) {
                tmp += 1;
                max_len = Math.max(max_len, tmp);
            } else {
                tmp = 1;
            }
        }
        int ans = N - max_len;
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_514_A.java,"import java.util.Scanner;

public class codeforces_514_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String ip = scanner.nextLine();
        String st = """";

        if (ip.length() != 1) {
            if (ip.charAt(0) == '9') {
                st = ""9"";
                ip = ip.substring(1);
            }
            for (int i = 0; i < ip.length(); i++) {
                int num = Integer.parseInt(String.valueOf(ip.charAt(i)));
                if (num > 4) {
                    int n = 9 - num;
                    st += String.valueOf(n);
                } else {
                    st += String.valueOf(num);
                }
            }
        } else {
            st = ip;
        }

        System.out.println(Integer.parseInt(st));
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String ip = scanner.nextLine();
        String st = """";

        if (ip.length() != 1) {
            if (ip.charAt(0) == '9') {
                st = ""9"";
                ip = ip.substring(1);
            }
            for (int i = 0; i < ip.length(); i++) {
                int num = Integer.parseInt(String.valueOf(ip.charAt(i)));
                if (num > 4) {
                    int n = 9 - num;
                    st += String.valueOf(n);
                } else {
                    st += String.valueOf(num);
                }
            }
        } else {
            st = ip;
        }

        System.out.println(Long.parseLong(st));
    }
}"
ChatGPT,avatar,Python,Java,codeforces_622_A.java,"import java.util.*;

public class codeforces_622_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int l = 1;
        int r = n;
        
        while (l < r) {
            int mid = l + (r - l) / 2;
            int idxcnt = mid * (mid + 1) / 2;
            
            if (idxcnt < n) {
                l = mid + 1;
            } else {
                r = mid;
            }
        }
        
        l -= 1;
        int idxcnt = l * (l + 1) / 2;
        System.out.println(n - idxcnt);
    }
}","import java.util.*;
import java.math.BigInteger;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        BigInteger n = scanner.nextBigInteger();
        BigInteger l = BigInteger.ONE;
        BigInteger r = n;

        while (l.compareTo(r) < 0) {
            BigInteger mid = l.add(r).divide(BigInteger.valueOf(2));
            BigInteger idxcnt = mid.multiply(mid.add(BigInteger.ONE)).divide(BigInteger.valueOf(2));

            if (idxcnt.compareTo(n) < 0) {
                l = mid.add(BigInteger.ONE);
            } else {
                r = mid;
            }
        }

        l = l.subtract(BigInteger.ONE);
        BigInteger idxcnt = l.multiply(l.add(BigInteger.ONE)).divide(BigInteger.valueOf(2));
        System.out.println(n.subtract(idxcnt));
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC167_D.java,"import java.util.*;

public class atcoder_ABC167_D {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        List<Integer> L = new ArrayList<>();
        for (int i = 0; i < N; i++) {
            L.add(sc.nextInt());
        }
        L.add(0, -1);
        List<Integer> path = new ArrayList<>();
        path.add(1);
        int ind = 0;
        int count = 0;
        int x = 1;
        int t = -1;
        boolean flag = false;
        Map<Integer, Integer> Hash = new HashMap<>();
        for (int i = 0; i < N + 1; i++) {
            int ne = L.get(x);
            if (Hash.containsKey(ne)) {
                flag = true;
                t = Hash.get(ne);
                break;
            }
            path.add(ne);
            ind++;
            Hash.put(ne, ind);
            x = ne;
        }
        if (flag) {
            List<Integer> loop = path.subList(t, path.size());
            if (K < path.size()) {
                System.out.println(path.get(K));
            } else {
                K = K - path.size();
                K = K % loop.size();
                System.out.println(loop.get(K));
            }
        } else {
            System.out.println(path.get(K - 1));
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long K = sc.nextLong();
        List<Integer> L = new ArrayList<>();
        for (int i = 0; i < N; i++) {
            L.add(sc.nextInt());
        }
        L.add(0, -1);
        List<Integer> path = new ArrayList<>();
        path.add(1);
        int ind = 0;
        int count = 0;
        int x = 1;
        int t = -1;
        boolean flag = false;
        Map<Integer, Integer> Hash = new HashMap<>();
        for (int i = 0; i < N + 1; i++) {
            int ne = L.get(x);
            if (Hash.containsKey(ne)) {
                flag = true;
                t = Hash.get(ne);
                break;
            }
            path.add(ne);
            ind++;
            Hash.put(ne, ind);
            x = ne;
        }
        if (flag) {
            List<Integer> loop = path.subList(t, path.size());
            if (K < path.size()) {
                System.out.println(path.get((int) K));
            } else {
                K = K - path.size();
                K = K % loop.size();
                System.out.println(loop.get((int) K));
            }
        } else {
            System.out.println(path.get((int) K - 1));
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC158_B.java,"import java.util.Scanner;

public class atcoder_ABC158_B {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        int A = input.nextInt();
        int B = input.nextInt();
        int ans = 0;
        int rep = N / (A + B);
        ans += rep * A;
        int res = N - rep * (A + B);
        ans += Math.min(res, A);
        System.out.println(ans);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        long N = input.nextLong();
        long A = input.nextLong();
        long B = input.nextLong();
        long ans = 0L;
        long rep = N / (A + B);
        ans += rep * A;
        long res = N - rep * (A + B);
        ans += Math.min(res, A);
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC012_A.java,"import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class atcoder_AGC012_A {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
        List<Integer> A = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            A.add(input.nextInt());
        }
        Collections.sort(A);
        int ans = 0;
        for (int i = A.size() - 2; i >= A.size() - 2 * n - 1; i -= 2) {
            ans += A.get(i);
        }
        System.out.println(ans);
    }
}","import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
       
        input.nextLine();
        List<Integer> A = new ArrayList<>();
        String[] inputs = input.nextLine().split("" "");
        for (int i = 0; i < inputs.length; i++) {
            A.add(Integer.parseInt(inputs[i]));
        }
        Collections.sort(A);
        long ans = 0;
        for (int i = A.size() - 2; i >= A.size() - 2 * n - 1; i -= 2) {
            ans += A.get(i);
        }
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_519_B.java,"import java.util.Scanner;

public class codeforces_519_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        int[] a = new int[n];
        int[] b = new int[n];
        int[] c = new int[n];

        String[] aValues = scanner.nextLine().split("" "");
        for (int i = 0; i < n; i++) {
            a[i] = Integer.parseInt(aValues[i]);
        }

        String[] bValues = scanner.nextLine().split("" "");
        for (int i = 0; i < n; i++) {
            b[i] = Integer.parseInt(bValues[i]);
        }

        String[] cValues = scanner.nextLine().split("" "");
        for (int i = 0; i < n; i++) {
            c[i] = Integer.parseInt(cValues[i]);
        }

        int x = 0;
        int y = 0;
        int z = 0;
        for (int i : a) {
            x += i;
        }
        for (int i : b) {
            y += i;
        }
        for (int i : c) {
            z += i;
        }

        System.out.println(Math.abs(x - y));
        System.out.println(Math.abs(y - z));
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        int[] a = new int[n];
        int[] b = new int[n];
        int[] c = new int[n];

        String[] aValues = scanner.nextLine().split("" "");
        for (int i = 0; i < aValues.length; i++) {
            a[i] = Integer.parseInt(aValues[i]);
        }

        String[] bValues = scanner.nextLine().split("" "");
        for (int i = 0; i < bValues.length; i++) {
            b[i] = Integer.parseInt(bValues[i]);
        }

        String[] cValues = scanner.nextLine().split("" "");
        for (int i = 0; i < cValues.length; i++) {
            c[i] = Integer.parseInt(cValues[i]);
        }

        int x = 0;
        int y = 0;
        int z = 0;
        for (int i : a) {
            x += i;
        }
        for (int i : b) {
            y += i;
        }
        for (int i : c) {
            z += i;
        }

        System.out.println(Math.abs(x - y));
        System.out.println(Math.abs(y - z));
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC127_F.java,"import java.util.PriorityQueue;
import java.util.Scanner;

public class atcoder_ABC127_F {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int q = scanner.nextInt();
        int[] ans = new int[2];
        PriorityQueue<Integer> p1 = new PriorityQueue<>();
        PriorityQueue<Integer> p2 = new PriorityQueue<>();
        int sum_b = 0;
        int sum_p1 = 0;
        int sum_p2 = 0;

        for (int i = 0; i < q; i++) {
            int[] ql = new int[3];
            for (int j = 0; j < 3; j++) {
                ql[j] = scanner.nextInt();
            }

            if (ql[0] == 2) {
                if (p1.size() == p2.size()) {
                    System.out.println(-p2.peek() + sum_p1 - p1.size() * -p2.peek() + p2.size() * -p2.peek() - sum_p2 + sum_b);
                } else {
                    System.out.println(p1.peek() + sum_p1 - p1.size() * p1.peek() + p2.size() * p1.peek() - sum_p2 + sum_b);
                }
            } else {
                sum_b += ql[2];
                if (p1.size() == 0) {
                    p1.offer(ql[1]);
                    sum_p1 += ql[1];
                } else if (p1.peek() <= ql[1]) {
                    p1.offer(ql[1]);
                    sum_p1 += ql[1];
                } else {
                    p2.offer(-ql[1]);
                    sum_p2 += ql[1];
                }

                if (p1.size() < p2.size()) {
                    int k = p2.poll();
                    p1.offer(-k);
                    sum_p2 += k;
                    sum_p1 -= k;
                }

                if (p1.size() - 1 > p2.size()) {
                    int k = p1.poll();
                    p2.offer(-k);
                    sum_p1 -= k;
                    sum_p2 += k;
                }
            }
        }
    }
}","import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int q = scanner.nextInt();
        int[] ans = new int[2];
        PriorityQueue<Integer> p1 = new PriorityQueue<>();
        PriorityQueue<Integer> p2 = new PriorityQueue<>();
        int sum_b = 0;
        int sum_p1 = 0;
        int sum_p2 = 0;

        scanner.nextLine();
        for (int i = 0; i < q; i++) {
            String line = scanner.nextLine();
            String[] numbers = line.split("" "");
            int[] ql = new int[numbers.length];

            for (int j = 0; j < numbers.length; j++) {
                ql[j] = Integer.parseInt(numbers[j]);
            }
            
            if (ql[0] == 2) {
                if (p1.size() == p2.size()) {
                    System.out.println(-p2.peek() + sum_p1 - p1.size() * -p2.peek() + p2.size() * -p2.peek() - sum_p2 + sum_b);
                } else {
                    System.out.println(p1.peek() + sum_p1 - p1.size() * p1.peek() + p2.size() * p1.peek() - sum_p2 + sum_b);
                }
            } else {
                sum_b += ql[2];
                if (p1.size() == 0) {
                    p1.offer(ql[1]);
                    sum_p1 += ql[1];
                } else if (p1.peek() <= ql[1]) {
                    p1.offer(ql[1]);
                    sum_p1 += ql[1];
                } else {
                    p2.offer(-ql[1]);
                    sum_p2 += ql[1];
                }

                if (p1.size() < p2.size()) {
                    int k = p2.poll();
                    p1.offer(-k);
                    sum_p2 += k;
                    sum_p1 -= k;
                }

                if (p1.size() - 1 > p2.size()) {
                    int k = p1.poll();
                    p2.offer(-k);
                    sum_p1 -= k;
                    sum_p2 += k;
                }
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_231_A.java,"import java.util.Scanner;

public class codeforces_231_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int c = 0;
        
        for (int i = 0; i < n; i++) {
            String line = scanner.nextLine();
            String[] numbers = line.split("" "");
            int sum = 0;
            
            for (String number : numbers) {
                sum += Integer.parseInt(number);
            }
            
            if (sum > 1) {
                c++;
            }
        }
        
        System.out.println(c);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int c = 0;
        
        scanner.nextLine();
        for (int i = 0; i < n; i++) {
            String line = scanner.nextLine();
            String[] numbers = line.split("" "");
            int sum = 0;
            
            for (String number : numbers) {
                sum += Integer.parseInt(number);
            }
            
            if (sum > 1) {
                c++;
            }
        }
        
        System.out.println(c);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_400_A.java,"import java.util.*;

public class codeforces_400_A {
    public static boolean help(int a, int b, int[] l) {
        List<int[]> tot = new ArrayList<>();
        for (int i = 0; i < b; i++) {
            tot.add(Arrays.copyOfRange(l, i * a, i * a + a));
        }
        for (int i = 0; i < tot.get(0).length; i++) {
            int sum = 0;
            for (int[] arr : tot) {
                sum += arr[i];
            }
            if (sum == b)
                return true;
        }
        return false;
    }

    public static void solve() {
        List<int[]> tot = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);
        String x = scanner.nextLine();
        int[] s = new int[x.length()];
        for (int i = 0; i < x.length(); i++) {
            if (x.charAt(i) == 'O')
                s[i] = 0;
            else
                s[i] = 1;
        }
        for (int i = 1; i <= 13; i++) {
            if (12 % i == 0) {
                if (help(i, 12 / i, s))
                    tot.add(new int[] {12 / i, i});
            }
        }
        System.out.print(tot.size() + "" "");
        tot.sort((a, b) -> a[0] - b[0]);
        for (int[] arr : tot) {
            System.out.print(arr[0] + ""x"" + arr[1] + "" "");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        scanner.nextLine();
        for (int i = 0; i < t; i++) {
            solve();
        }
    }
}","import java.util.*;

public class Main {
    public static boolean help(int a, int b, int[] l) {
        List<int[]> tot = new ArrayList<>();
        for (int i = 0; i < b; i++) {
            tot.add(Arrays.copyOfRange(l, i * a, i * a + a));
        }
        for (int i = 0; i < tot.get(0).length; i++) {
            int sum = 0;
            for (int[] arr : tot) {
                sum += arr[i];
            }
            if (sum == b)
                return true;
        }
        return false;
    }

    public static void solve(Scanner scanner) {
        List<int[]> tot = new ArrayList<>();
        String x = scanner.nextLine();
        int[] s = new int[x.length()];
        for (int i = 0; i < x.length(); i++) {
            if (x.charAt(i) == 'O')
                s[i] = 0;
            else
                s[i] = 1;
        }
        for (int i = 1; i <= 13; i++) {
            if (12 % i == 0) {
                if (help(i, 12 / i, s))
                    tot.add(new int[] {12 / i, i});
            }
        }
        if (tot.size() == 0) System.out.print(tot.size());
        else System.out.print(tot.size() + "" "");
        tot.sort((a, b) -> a[0] - b[0]);
        for (int i = 0; i < tot.size(); i++) {
            int[] arr = tot.get(i);
            System.out.print(arr[0] + ""x"" + arr[1]);
            if (i < tot.size() - 1) {
                System.out.print("" "");
            }
        }
        System.out.println();
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        scanner.nextLine();
        for (int i = 0; i < t; i++) {
            solve(scanner);
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_350_B.java,"import java.util.*;

public class codeforces_350_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] t = new int[n + 1];
        int[] a = new int[n + 1];
        int[] cnt = new int[n + 1];
        List<Integer> ans = new ArrayList<>();

        for (int i = 1; i <= n; i++) {
            t[i] = scanner.nextInt();
        }

        for (int i = 1; i <= n; i++) {
            a[i] = scanner.nextInt();
            cnt[a[i]]++;
        }

        for (int i = 1; i <= n; i++) {
            if (t[i] == 1) {
                List<Integer> crt = new ArrayList<>();
                crt.add(i);
                int x = a[i];
                while (cnt[x] == 1) {
                    crt.add(x);
                    x = a[x];
                }
                if (crt.size() > ans.size()) {
                    ans = new ArrayList<>(crt);
                }
            }
        }

        Collections.reverse(ans);
        System.out.println(ans.size());
        for (int x : ans) {
            System.out.print(x + "" "");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] t = new int[n + 1];
        int[] a = new int[n + 1];
        int[] cnt = new int[n + 1];
        List<Integer> ans = new ArrayList<>();

        for (int i = 1; i <= n; i++) {
            t[i] = scanner.nextInt();
        }

        for (int i = 1; i <= n; i++) {
            a[i] = scanner.nextInt();
            cnt[a[i]]++;
        }

        for (int i = 1; i <= n; i++) {
            if (t[i] == 1) {
                List<Integer> crt = new ArrayList<>();
                crt.add(i);
                int x = a[i];
                while (cnt[x] == 1) {
                    crt.add(x);
                    x = a[x];
                }
                if (crt.size() > ans.size()) {
                    ans = new ArrayList<>(crt);
                }
            }
        }

        Collections.reverse(ans);
        System.out.println(ans.size());
        for (int x : ans) {
            System.out.print(x + "" "");
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_653_A.java,"import java.util.*;

public class codeforces_653_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        List<Integer> l = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            l.add(scanner.nextInt());
        }
        Collections.sort(l);
        for (int i : l) {
            if (l.contains(i + 1) && l.contains(i + 2)) {
                System.out.println(""YES"");
                break;
            }
        }
        System.out.println(""NO"");
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        List<Integer> l = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            l.add(scanner.nextInt());
        }
        Collections.sort(l);
        boolean flag = false;
        for (int i : l) {
            if (l.contains(i + 1) && l.contains(i + 2)) {
                System.out.println(""YES"");
                flag = true;
                return;
            }
        }
        if (!flag) {
            System.out.println(""NO"");
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC107_C.java,"import java.util.Scanner;

public class atcoder_ABC107_C {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        int K = input.nextInt();
        int[] lst = new int[N];
        for (int i = 0; i < N; i++) {
            lst[i] = input.nextInt();
        }
        int[] lst_p = new int[N];
        int[] lst_m = new int[N];
        int p = 0;
        int m = 0;
        int x = 0;
        int y = lst_m.length - 1;
        int lastx = lst_p.length;
        int lasty = lst_m.length;

        int result = check(K, lst_p, lst_m, p, m, x, y, lastx, lasty);
        System.out.println(result);
    }

    public static int check(int k, int[] lst_p, int[] lst_m, int p, int m, int x, int y, int lastx, int lasty) {
        int ans = (int) Math.pow(10, 9);
        for (int j = 0; j <= k; j++) {
            if (j > lastx || k - j > lasty) {
                continue;
            } else {
                if (j == 0) {
                    p = 0;
                } else {
                    p = lst_p[j - 1];
                }
                if (k - j == 0) {
                    m = 0;
                } else {
                    m = lst_m[lasty - (k - j)];
                }
                ans = Math.min(ans, 2 * p + Math.abs(m));
                ans = Math.min(ans, p + 2 * Math.abs(m));
            }
        }
        return ans;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        int K = input.nextInt();
        int[] lst = new int[N];
        for (int i = 0; i < N; i++) {
            lst[i] = input.nextInt();
        }
        int[] lst_p = new int[N];
        int[] lst_m = new int[N];
        int p = 0;
        int m = 0;
        int x = 0;
        int y = lst_m.length - 1;
        int lastx = lst_p.length;
        int lasty = lst_m.length;

        int result = check(K, lst_p, lst_m, p, m, x, y, lastx, lasty);
        System.out.println(result);
    }

    public static int check(int k, int[] lst_p, int[] lst_m, int p, int m, int x, int y, int lastx, int lasty) {
        int ans = (int) Math.pow(10, 9);
        for (int j = 0; j <= k; j++) {
            if (j > lastx || k - j > lasty) {
                continue;
            } else {
                if (j == 0) {
                    p = 0;
                } else {
                    p = lst_p[j - 1];
                }
                if (k - j == 0) {
                    m = 0;
                } else {
                    m = lst_m[lasty - (k - j)];
                }
                ans = Math.min(ans, 2 * p + Math.abs(m));
                ans = Math.min(ans, p + 2 * Math.abs(m));
            }
        }
        return ans;
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC037_E.java,"import java.util.Arrays;
import java.util.Scanner;

public class atcoder_AGC037_E {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int K = scanner.nextInt();
        String S = scanner.next();

        boolean aaaa = false;
        if (K >= 15) {
            aaaa = true;
        } else if (Math.pow(2, K) >= N) {
            aaaa = true;
        }

        if (aaaa) {
            char minChar = S.charAt(0);
            for (int i = 1; i < N; i++) {
                minChar = (char) Math.min(minChar, S.charAt(i));
            }
            char[] result = new char[N];
            Arrays.fill(result, minChar);
            System.out.println(new String(result));
            return;
        }

        String U = S + new StringBuilder(S).reverse().toString();
        char minChar = S.charAt(0);
        int minIndex = S.indexOf(minChar);
        for (int i = minIndex + 1; i <= N; i++) {
            if (U.charAt(i) == minChar) {
                if (checkNormalDict(U, minIndex, i)) {
                    minIndex = i;
                }
            }
        }
        String lastDict = U.substring(minIndex, minIndex + N);

        if (K == 1) {
            System.out.println(lastDict);
        } else {
            int count = 0;
            for (char c : lastDict.toCharArray()) {
                if (c == lastDict.charAt(0)) {
                    count++;
                } else {
                    break;
                }
            }
            if (count * Math.pow(2, K - 1) >= N) {
                char[] result = new char[N];
                Arrays.fill(result, lastDict.charAt(0));
                System.out.println(new String(result));
            } else {
                StringBuilder sb = new StringBuilder();
                sb.append(lastDict.charAt(0));
                sb.append(lastDict.charAt(0));
                char[] result = new char[N];
                Arrays.fill(result, lastDict.charAt(0));
                sb.append(new String(result));
                System.out.println(sb.substring(0, N));
            }
        }
    }

    private static boolean checkNormalDict(String u, int pointer1, int pointer2) {
        int N = pointer2 - pointer1;
        for (int i = 0; i < N; i++) {
            if (u.charAt(pointer1 + i) > u.charAt(pointer2 + i)) {
                return true;
            } else if (u.charAt(pointer1 + i) < u.charAt(pointer2 + i)) {
                return false;
            }
        }
        return false;
    }
}","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int K = scanner.nextInt();
        String S = scanner.next();

        boolean aaaa = false;
        if (K >= 15) {
            aaaa = true;
        } else if (Math.pow(2, K) >= N) {
            aaaa = true;
        }

        if (aaaa) {
            char minChar = S.charAt(0);
            for (int i = 1; i < N; i++) {
                minChar = (char) Math.min(minChar, S.charAt(i));
            }
            char[] result = new char[N];
            Arrays.fill(result, minChar);
            System.out.println(new String(result));
            return;
        }

        String U = S + new StringBuilder(S).reverse().toString();
        char minChar = S.charAt(0);
        int minIndex = S.indexOf(minChar);
        for (int i = minIndex + 1; i <= N; i++) {
            if (U.charAt(i) == minChar) {
                if (checkNormalDict(U, minIndex, i)) {
                    minIndex = i;
                }
            }
        }
        String lastDict = U.substring(minIndex, minIndex + N);

        if (K == 1) {
            System.out.println(lastDict);
        } else {
            int count = 0;
            for (char c : lastDict.toCharArray()) {
                if (c == lastDict.charAt(0)) {
                    count++;
                } else {
                    break;
                }
            }
            if (count * Math.pow(2, K - 1) >= N) {
                char[] result = new char[N];
                Arrays.fill(result, lastDict.charAt(0));
                System.out.println(new String(result));
            } else {
                StringBuilder sb = new StringBuilder();
                sb.append(lastDict.charAt(0));
                sb.append(lastDict.charAt(0));
                char[] result = new char[N];
                Arrays.fill(result, lastDict.charAt(0));
                sb.append(new String(result));
                System.out.println(sb.substring(0, N));
            }
        }
    }

    private static boolean checkNormalDict(String u, int pointer1, int pointer2) {
        int N = pointer2 - pointer1;
        for (int i = 0; i < N; i++) {
            if (u.charAt(pointer1 + i) > u.charAt(pointer2 + i)) {
                return true;
            } else if (u.charAt(pointer1 + i) < u.charAt(pointer2 + i)) {
                return false;
            }
        }
        return false;
    }
}"
ChatGPT,avatar,Python,Java,codeforces_268_A.java,"import java.util.Scanner;

public class codeforces_268_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String[][] q = new String[n][];
        int count = 0;

        for (int i = 0; i < n; i++) {
            String[] a = scanner.next().split("" "");
            q[i] = a;
        }

        for (int j = 0; j < n; j++) {
            for (int k = 0; k < n; k++) {
                if (k == j) {
                    continue;
                } else if (q[j][0].equals(q[k][q[k].length - 1])) {
                    count++;
                } else {
                    continue;
                }
            }
        }

        System.out.println(count);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String[][] q = new String[n][];
        int count = 0;

        scanner.nextLine();
        for (int i = 0; i < n; i++) {
            String[] a = scanner.nextLine().split("" "");
            q[i] = a;
        }

        for (int j = 0; j < n; j++) {
            for (int k = 0; k < n; k++) {
                if (k == j) {
                    continue;
                } else if (q[j][0].equals(q[k][q[k].length - 1])) {
                    count++;
                } else {
                    continue;
                }
            }
        }

        System.out.println(count);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_567_A.java,"import java.util.Scanner;

public class codeforces_567_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int inp = Integer.parseInt(scanner.nextLine());

        String[] input = scanner.nextLine().split("" "");
        int[] lista = new int[input.length];
        for (int i = 0; i < input.length; i++) {
            lista[i] = Integer.parseInt(input[i]);
        }

        for (int i = 0; i < lista.length; i++) {
            if (i == 0) {
                System.out.printf(""%d %d "", lista[i + 1] - lista[i], lista[lista.length - 1] - lista[i]);
                continue;
            } else if (i == lista.length - 1) {
                System.out.printf(""%d %d "", lista[lista.length - 1] - lista[lista.length - 2], lista[lista.length - 1] - lista[0]);
                continue;
            } else if (lista[i] - lista[i - 1] > lista[i + 1] - lista[i]) {
                System.out.print(lista[i + 1] - lista[i] + "" "");
            } else {
                System.out.print(lista[i] - lista[i - 1] + "" "");
            }
            if (lista[lista.length - 1] - lista[i] > lista[i] - lista[0]) {
                System.out.println(lista[lista.length - 1] - lista[i]);
            } else {
                System.out.println(lista[i] - lista[0]);
            }
        }
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int inp = Integer.parseInt(scanner.nextLine());

        String[] input = scanner.nextLine().split("" "");
        int[] lista = new int[input.length];
        for (int i = 0; i < input.length; i++) {
            lista[i] = Integer.parseInt(input[i]);
        }

        for (int i = 0; i < lista.length; i++) {
            if (i == 0) {
                System.out.printf(""%d %d\n"", lista[i + 1] - lista[i], lista[lista.length - 1] - lista[i]);
                continue;
            } else if (i == lista.length - 1) {
                System.out.printf(""%d %d\n"", lista[lista.length - 1] - lista[lista.length - 2], lista[lista.length - 1] - lista[0]);
                continue;
            } else if (lista[i] - lista[i - 1] > lista[i + 1] - lista[i]) {
                System.out.print(lista[i + 1] - lista[i] + "" "");
            } else {
                System.out.print(lista[i] - lista[i - 1] + "" "");
            }
            if (lista[lista.length - 1] - lista[i] > lista[i] - lista[0]) {
                System.out.println(lista[lista.length - 1] - lista[i]);
            } else {
                System.out.println(lista[i] - lista[0]);
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_673_A.java,"import java.util.Scanner;

public class codeforces_673_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        String[] nums = scanner.nextLine().split("" "");
        int[] arr = new int[n];
        
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(nums[i]);
        }
        
        if (arr[0] > 15) {
            System.out.println(15);
        } else {
            for (int i = 1; i < arr.length; i++) {
                if (arr[i] - arr[i - 1] > 15) {
                    System.out.println(arr[i - 1] + 15);
                    break;
                }
            }
            
            if (arr[arr.length - 1] == 90 || arr[arr.length - 1] + 15 >= 90) {
                System.out.println(90);
            } else {
                System.out.println(arr[arr.length - 1] + 15);
            }
        }
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        String[] nums = scanner.nextLine().split("" "");
        int[] arr = new int[n];
        
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(nums[i]);
        }
        
        if (arr[0] > 15) {
            System.out.println(15);
        } else {
            for (int i = 1; i < arr.length; i++) {
                if (arr[i] - arr[i - 1] > 15) {
                    System.out.println(arr[i - 1] + 15);
                    return;
                }
            }
            
            if (arr[arr.length - 1] == 90 || arr[arr.length - 1] + 15 >= 90) {
                System.out.println(90);
            } else {
                System.out.println(arr[arr.length - 1] + 15);
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC162_D.java,"import java.util.Scanner;

public class atcoder_ABC162_D {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        String S = scanner.next();
        calculate(N, S);
    }

    public static void calculate(int n, String s) {
        char[] arr = s.toCharArray();
        int rNum = countChar(arr, 'R');
        int gNum = countChar(arr, 'G');
        int bNum = countChar(arr, 'B');
        int sum = 0;
        for (int step = 1; step <= Math.ceil(n / 2.0); step++) {
            for (int i = 0; i < n - 2 * step; i++) {
                String sub = String.valueOf(arr[i]) + arr[i + step] + arr[i + step * 2];
                if (sub.equals(""RGB"") || sub.equals(""RBG"") || sub.equals(""BGR"") || sub.equals(""BRG"") || sub.equals(""GBR"") || sub.equals(""GRB"")) {
                    sum++;
                }
            }
        }
        System.out.println(rNum * gNum * bNum - sum);
    }

    public static int countChar(char[] arr, char c) {
        int count = 0;
        for (char ch : arr) {
            if (ch == c) {
                count++;
            }
        }
        return count;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        String S = scanner.next();
        calculate(N, S);
    }

    public static void calculate(int n, String s) {
        char[] arr = s.toCharArray();
        int rNum = countChar(arr, 'R');
        int gNum = countChar(arr, 'G');
        int bNum = countChar(arr, 'B');
        int sum = 0;
        for (int step = 1; step <= Math.ceil(n / 2.0); step++) {
            for (int i = 0; i < n - 2 * step; i++) {
                String sub = String.valueOf(arr[i]) + arr[i + step] + arr[i + step * 2];
                if (sub.equals(""RGB"") || sub.equals(""RBG"") || sub.equals(""BGR"") || sub.equals(""BRG"") || sub.equals(""GBR"") || sub.equals(""GRB"")) {
                    sum++;
                }
            }
        }
        System.out.println((long) rNum * gNum * bNum - sum);
    }

    public static int countChar(char[] arr, char c) {
        int count = 0;
        for (char ch : arr) {
            if (ch == c) {
                count++;
            }
        }
        return count;
    }
}"
ChatGPT,avatar,Python,Java,codeforces_147_A.java,"import java.util.*;

public class codeforces_147_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        List<String> res = new ArrayList<>();
        List<String> punctuation = Arrays.asList("","", ""."", ""!"", ""?"");

        for (int i = 0; i < s.length(); i++) {
            if (i >= 1) {
                if (s.charAt(i) == ' ') {
                    if (!res.get(res.size() - 1).equals("""")) {
                        res.add(String.valueOf(s.charAt(i)));
                    } else {
                        continue;
                    }
                } else {
                    if (punctuation.contains(String.valueOf(s.charAt(i)))) {
                        if (res.get(res.size() - 1).equals("""")) {
                            res.remove(res.size() - 1);
                        }
                        res.add(String.valueOf(s.charAt(i)));
                        res.add("""");
                    } else {
                        res.add(String.valueOf(s.charAt(i)));
                    }
                }
            } else {
                if (s.charAt(i) == ' ') {
                    continue;
                }
                if (punctuation.contains(String.valueOf(s.charAt(i)))) {
                    continue;
                } else {
                    res.add(String.valueOf(s.charAt(i)));
                }
            }
        }

        StringBuilder result = new StringBuilder();
        for (String word : res) {
            result.append(word);
        }
        System.out.println(result.toString());
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        List<String> res = new ArrayList<>();
        List<String> punctuation = Arrays.asList("","", ""."", ""!"", ""?"");

        for (int i = 0; i < s.length(); i++) {
            if (i >= 1) {
                if (s.charAt(i) == ' ') {
                    if (!res.get(res.size() - 1).equals("" "")) {
                        res.add(String.valueOf(s.charAt(i)));
                    } else {
                        continue;
                    }
                } else {
                    if (punctuation.contains(String.valueOf(s.charAt(i)))) {
                        if (res.get(res.size() - 1).equals("" "")) {
                            res.remove(res.size() - 1);
                        }
                        res.add(String.valueOf(s.charAt(i)));
                        res.add("" "");
                    } else {
                        res.add(String.valueOf(s.charAt(i)));
                    }
                }
            } else {
                if (s.charAt(i) == ' ') {
                    continue;
                }
                if (punctuation.contains(String.valueOf(s.charAt(i)))) {
                    continue;
                } else {
                    res.add(String.valueOf(s.charAt(i)));
                }
            }
        }

        StringBuilder result = new StringBuilder();
        for (String word : res) {
            result.append(word);
        }
        System.out.println(result.toString());
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ARC062_B.java,"import java.util.Scanner;

public class atcoder_ARC062_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        char[] s = input.toCharArray();
        int num_g = 0, num_p = 0;
        int score = 0;
        
        for (char x : s) {
            if (x == 'g') {
                if (num_g - num_p > 0) {
                    score += 1;
                    num_p += 1;
                } else {
                    score = score;
                    num_g += 1;
                }
            } else if (x == 'p') {
                if (num_g - num_p > 0) {
                    score = score;
                    num_p += 1;
                } else {
                    score -= 1;
                    num_g += 1;
                }
            }
        }
        
        System.out.println(score);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        char[] s = input.toCharArray();
        int num_g = 0, num_p = 0;
        int score = 0;
        
        for (char x : s) {
            if (x == 'g') {
                if (num_g - num_p > 0) {
                    score += 1;
                    num_p += 1;
                } else {
                    score = score;
                    num_g += 1;
                }
            } else if (x == 'p') {
                if (num_g - num_p > 0) {
                    score = score;
                    num_p += 1;
                } else {
                    score -= 1;
                    num_g += 1;
                }
            }
        }
        
        System.out.println(score);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC172_D.java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class atcoder_ABC172_D {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        long ans = 0;
        for (int i = 1; i <= N; i++) {
            ans += i * (N / i) * (N / i + 1) / 2;
        }
        System.out.println(ans);
    }
}","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.math.BigInteger;

public class Main {
    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        BigInteger ans = BigInteger.ZERO;

        for (int i = 1; i <= N; i++) {
            BigInteger bi_i = BigInteger.valueOf(i);
            BigInteger bi_N = BigInteger.valueOf(N);
            BigInteger term = bi_i.multiply(bi_N.divide(bi_i)).multiply(bi_N.divide(bi_i).add(BigInteger.ONE)).divide(BigInteger.valueOf(2));
            ans = ans.add(term);
        }

        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_644_B.java,"import java.util.*;

class Task {
    int time;
    int duration;
    int index;

    public Task(int time, int duration, int index) {
        this.time = time;
        this.duration = duration;
        this.index = index;
    }
}

public class codeforces_644_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int b = scanner.nextInt();

        Queue<Task> remaining = new LinkedList<>();
        boolean running = false;
        int finishTime = 0;

        Map<Integer, Integer> result = new HashMap<>();

        for (int i = 0; i < n; i++) {
            int time = scanner.nextInt();
            int duration = scanner.nextInt();

            Task task = new Task(time, duration, i);
            result.put(i, 0);

            if (task.time > finishTime && remaining.isEmpty()) {
                running = true;
                finishTime = task.time + task.duration;
                result.put(i, finishTime);
            } else {
                if (task.time >= finishTime && !remaining.isEmpty()) {
                    finishTime = runTask(remaining, finishTime, result);
                }
                if (remaining.size() < b) {
                    remaining.add(task);
                } else {
                    result.put(i, -1);
                }
            }
        }

        while (!remaining.isEmpty()) {
            finishTime = runTask(remaining, finishTime, result);
        }

        for (int key : result.keySet()) {
            System.out.println(result.get(key));
        }
    }

    public static int runTask(Queue<Task> remaining, int finishTime, Map<Integer, Integer> result) {
        Task taskToRun = remaining.poll();
        finishTime = Math.max(finishTime, taskToRun.time) + taskToRun.duration;
        result.put(taskToRun.index, finishTime);
        return finishTime;
    }
}","import java.util.*;

class Task {
    int time;
    int duration;
    int index;

    public Task(int time, int duration, int index) {
        this.time = time;
        this.duration = duration;
        this.index = index;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int b = scanner.nextInt();

        Queue<Task> remaining = new LinkedList<>();
        boolean running = false;
        int finishTime = 0;

        Map<Integer, Integer> result = new HashMap<>();

        for (int i = 0; i < n; i++) {
            int time = scanner.nextInt();
            int duration = scanner.nextInt();

            Task task = new Task(time, duration, i);
            result.put(i, 0);

            if (task.time > finishTime && remaining.isEmpty()) {
                running = true;
                finishTime = task.time + task.duration;
                result.put(i, finishTime);
            } else {
                if (task.time >= finishTime && !remaining.isEmpty()) {
                    finishTime = runTask(remaining, finishTime, result);
                }
                if (remaining.size() < b) {
                    remaining.add(task);
                } else {
                    result.put(i, -1);
                }
            }
        }

        while (!remaining.isEmpty()) {
            finishTime = runTask(remaining, finishTime, result);
        }

        for (int key : result.keySet()) {
            System.out.println(result.get(key));
        }
    }

    public static int runTask(Queue<Task> remaining, int finishTime, Map<Integer, Integer> result) {
        Task taskToRun = remaining.poll();
        finishTime = Math.max(finishTime, taskToRun.time) + taskToRun.duration;
        result.put(taskToRun.index, finishTime);
        return finishTime;
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC140_F.java,"import java.util.*;
import java.io.*;

public class atcoder_ABC140_F {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] nextIntArray(int n) {
            int[] arr = new int[n];
            for (int i = 0; i < n; i++) {
                arr[i] = nextInt();
            }
            return arr;
        }
    }

    public static void main(String[] args) {
        FastReader sc = new FastReader();
        int N = sc.nextInt();
        int[] S = sc.nextIntArray(N);
        Arrays.sort(S);

        boolean[] flag = new boolean[S.length];
        Arrays.fill(flag, true);

        List<Integer> cur = new ArrayList<>();
        cur.add(S[0]);
        flag[0] = false;

        for (int i = 0; i < N; i++) {
            int j = 0;
            int jM = cur.size();
            for (int k = 0; k < S.length; k++) {
                if (flag[k] && S[k] < cur.get(j)) {
                    cur.add(S[k]);
                    j++;
                    flag[k] = false;
                    if (j == jM) {
                        break;
                    }
                }
            }

            if (j != jM) {
                System.out.println(""No"");
                return;
            }

            Collections.sort(cur, Collections.reverseOrder());
        }

        System.out.println(""Yes"");
    }
}","import java.util.*;
import java.io.*;

public class Main {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] nextIntArray(int n) {
            int[] arr = new int[n];
            for (int i = 0; i < n; i++) {
                arr[i] = nextInt();
            }
            return arr;
        }
    }

    public static void main(String[] args) {
        FastReader sc = new FastReader();
        int N = sc.nextInt();
        int[] S = sc.nextIntArray(N);
        Arrays.sort(S);

        boolean[] flag = new boolean[S.length];
        Arrays.fill(flag, true);

        List<Integer> cur = new ArrayList<>();
        cur.add(S[0]);
        flag[0] = false;

        for (int i = 0; i < N; i++) {
            int j = 0;
            int jM = cur.size();
            for (int k = 0; k < S.length; k++) {
                if (flag[k] && S[k] < cur.get(j)) {
                    cur.add(S[k]);
                    j++;
                    flag[k] = false;
                    if (j == jM) {
                        break;
                    }
                }
            }

            if (j != jM) {
                System.out.println(""No"");
                return;
            }

            Collections.sort(cur, Collections.reverseOrder());
        }

        System.out.println(""Yes"");
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC152_E.java,"import java.util.Scanner;

public class atcoder_ABC152_E {
    public static long gcd(long a, long b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }

    public static long lcm(long a, long b) {
        return (a * b) / gcd(a, b);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int MOD = (int) (1e9 + 7);
        
        int N = scanner.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextLong();
        }
        
        long _lcm = 1;
        for (long a : A) {
            _lcm = lcm(_lcm, a);
        }
        
        long ans = (_lcm * sumInverse(A, MOD)) % MOD;
        System.out.println(ans);
    }
    
    public static long sumInverse(long[] A, int MOD) {
        long sum = 0;
        for (long s : A) {
            sum += pow(s, MOD - 2, MOD);
        }
        return sum % MOD;
    }
    
    public static long pow(long base, long exponent, int MOD) {
        long result = 1;
        while (exponent > 0) {
            if (exponent % 2 == 1) {
                result = (result * base) % MOD;
            }
            base = (base * base) % MOD;
            exponent /= 2;
        }
        return result;
    }
}","import java.util.Scanner;

public class Main {
    public static long gcd(long a, long b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }

    public static long lcm(long a, long b) {
        return (a * b) / gcd(a, b);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int MOD = (int) (1e9 + 7);
        
        int N = scanner.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextLong();
        }
        
        long _lcm = 1;
        for (long a : A) {
            _lcm = lcm(_lcm, a);
        }
        
        long ans = (_lcm * sumInverse(A, MOD)) % MOD;
        System.out.println(ans);
    }
    
    public static long sumInverse(long[] A, int MOD) {
        long sum = 0;
        for (long s : A) {
            sum += pow(s, MOD - 2, MOD);
        }
        return sum % MOD;
    }
    
    public static long pow(long base, long exponent, int MOD) {
        long result = 1;
        while (exponent > 0) {
            if (exponent % 2 == 1) {
                result = (result * base) % MOD;
            }
            base = (base * base) % MOD;
            exponent /= 2;
        }
        return result;
    }
}"
ChatGPT,avatar,Python,Java,codeforces_306_A.java,"import java.util.Scanner;

public class codeforces_306_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int q = n / m;
        int r = n % m;
        int[] a = new int[m];
        
        for (int i = 0; i < m; i++) {
            a[i] = q;
        }
        
        for (int i = 0; i < r; i++) {
            a[i] += 1;
        }
        
        for (int i = 0; i < m; i++) {
            System.out.print(a[i] + "" "");
        }
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int q = n / m;
        int r = n % m;
        int[] a = new int[m];
        
        for (int i = 0; i < m; i++) {
            a[i] = q;
        }
        
        for (int i = 0; i < r; i++) {
            a[i] += 1;
        }
        
        for (int i = 0; i < m; i++) {
            System.out.print(a[i] + "" "");
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC137_D.java,"import java.util.PriorityQueue;
import java.util.Scanner;

public class atcoder_ABC137_D {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        PriorityQueue<Integer> x = new PriorityQueue<>();
        PriorityQueue<Integer> y = new PriorityQueue<>();

        for (int i = 0; i < n; i++) {
            int day = scanner.nextInt();
            int salary = scanner.nextInt();
            x.offer(-day);
            x.offer(-salary);
        }

        while (!x.isEmpty()) {
            int d = x.poll();
            int s = x.poll();
            int r = m - y.size();
            
            if (r >= -d) {
                y.offer(-s);
            } else {
                y.offer(-s);
                y.poll();
            }
        }

        int sum = 0;
        while (!y.isEmpty()) {
            sum += y.poll();
        }

        System.out.println(sum);
    }
}","import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        PriorityQueue<Integer> x = new PriorityQueue<>();
        PriorityQueue<Integer> y = new PriorityQueue<>();

        for (int i = 0; i < n; i++) {
            int day = scanner.nextInt();
            int salary = scanner.nextInt();
            x.offer(-day);
            x.offer(-salary);
        }

        while (!x.isEmpty()) {
            int d = x.poll();
            int s = x.poll();
            int r = m - y.size();
            
            if (r >= -d) {
                y.offer(-s);
            } else {
                y.offer(-s);
                y.poll();
            }
        }

        int sum = 0;
        while (!y.isEmpty()) {
            sum += y.poll();
        }

        System.out.println(sum);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC038_A.java,"public class atcoder_AGC038_A {
    public static void solve(int H, int W, int A, int B) {
        char[][] answer = new char[H][W];
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if (i < B) {
                    if (j < A) {
                        answer[i][j] = '0';
                    } else {
                        answer[i][j] = '1';
                    }
                } else {
                    if (j < A) {
                        answer[i][j] = '1';
                    } else {
                        answer[i][j] = '0';
                    }
                }
            }
        }
        for (int i = 0; i < H; i++) {
            System.out.println(new String(answer[i]));
        }
    }

    public static void main(String[] args) {
        solve(3, 4, 2, 1);
    }
}","import java.util.*;

public class Main {
    public static void solve(int H, int W, int A, int B) {
        char[][] answer = new char[H][W];
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if (i < B) {
                    if (j < A) {
                        answer[i][j] = '0';
                    } else {
                        answer[i][j] = '1';
                    }
                } else {
                    if (j < A) {
                        answer[i][j] = '1';
                    } else {
                        answer[i][j] = '0';
                    }
                }
            }
        }
        for (int i = 0; i < H; i++) {
            System.out.println(new String(answer[i]));
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int H = scanner.nextInt();
        int W = scanner.nextInt();
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        solve(H, W, A, B);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_334_A.java,"import java.util.Scanner;

public class codeforces_334_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int i = 1;
        int j = n * n;
        while (i < j) {
            System.out.println(i + "" "" + j);
            i++;
            j--;
        }
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int i = 1;
        int j = n * n;
        while (i < j) {
            System.out.println(i + "" "" + j);
            i++;
            j--;
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_387_A.java,"import java.util.Scanner;

public class codeforces_387_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String[] time1 = scanner.nextLine().split("":"");
        int h1 = Integer.parseInt(time1[0]);
        int m1 = Integer.parseInt(time1[1]);
        m1 += h1 * 60;

        String[] time2 = scanner.nextLine().split("":"");
        int h2 = Integer.parseInt(time2[0]);
        int m2 = Integer.parseInt(time2[1]);
        m2 += h2 * 60;

        m2 = m1 - m2;
        m2 %= 1440;

        System.out.printf(""%02d:%02d%n"", m2 / 60, m2 % 60);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String[] time1 = scanner.nextLine().split("":"");
        int h1 = Integer.parseInt(time1[0]);
        int m1 = Integer.parseInt(time1[1]);
        m1 += h1 * 60;

        String[] time2 = scanner.nextLine().split("":"");
        int h2 = Integer.parseInt(time2[0]);
        int m2 = Integer.parseInt(time2[1]);
        m2 += h2 * 60;

        m2 = m1 - m2;
        m2 = (m2 % 1440 + 1440) % 1440;

        System.out.printf(""%02d:%02d%n"", m2 / 60, (m2 % 60 + 60) % 60);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_617_B.java,"import java.util.Scanner;

public class codeforces_617_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        String a = scanner.nextLine();
        System.out.println(a.contains(""1"") ? calculateProduct(a) : 0);
    }
    
    private static int calculateProduct(String a) {
        String[] parts = a.strip().split(""1"");
        int[] counts = new int[parts.length];
        
        for (int i = 0; i < parts.length; i++) {
            counts[i] = parts[i].length() + 1;
        }
        
        int product = 1;
        for (int count : counts) {
            product *= count;
        }
        
        return product;
    }
}","import java.util.Scanner;
import java.math.BigInteger;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        String a = scanner.nextLine();
        
        BigInteger result = a.contains(""1"") ? calculateProduct(a) : BigInteger.ZERO;
        System.out.println(result);
    }
    
    private static BigInteger calculateProduct(String a) {
        a = a.replaceAll("" "", """");
        a = a.replaceAll(""^0*|0*$"", """");

        String[] parts = a.split(""1"");
        BigInteger[] counts = new BigInteger[parts.length];
        
        for (int i = 0; i < parts.length; i++) {
            int zeroCount = 0;
            for (int j = 0; j < parts[i].length(); j++) {
                if (parts[i].charAt(j) == '0') {
                        zeroCount++;
                }
            }
            counts[i] = BigInteger.valueOf(zeroCount + 1);
        }
        
        BigInteger product = BigInteger.ONE;
        for (BigInteger count : counts) {
            product = product.multiply(count);
        }
        
        return product;
    }
}
"
ChatGPT,avatar,Python,Java,atcoder_AGC028_B.java,"import java.util.Scanner;

public class atcoder_AGC028_B {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        long MOD = (long) Math.pow(10, 9) + 7;
        int N = Integer.parseInt(input.nextLine());
        int M = (int) Math.pow(10, 6);
        long[] A = new long[N];
        
        String[] arr = input.nextLine().split("" "");
        for (int i = 0; i < N; i++) {
            A[i] = Long.parseLong(arr[i]);
        }
        
        int Nsq = (int) Math.pow(10, 3);
        long[][] fact = new long[Nsq][Nsq];
        fact[0][0] = 1;
        
        for (int n = 1; n < Nsq; n++) {
            for (int i = 0; i < Nsq; i++) {
                fact[i][n] = fact[i][n-1] * fact[i][n];
                fact[i][n] %= MOD;
            }
        }
        
        for (int n = 1; n < Nsq; n++) {
            for (int i = 0; i < Nsq; i++) {
                fact[n][i] = fact[n-1][Nsq-1] * fact[n][i];
                fact[n][i] %= MOD;
            }
        }
        
        long[] flatFact = new long[M];
        int index = 0;
        for (int i = 0; i < Nsq; i++) {
            for (int j = 0; j < Nsq; j++) {
                flatFact[index++] = fact[i][j];
            }
        }
        
        int[] j = new int[N];
        for (int i = 0; i < N; i++) {
            j[i] = i;
        }
        
        long[] inv = new long[N];
        for (int i = 0; i < N; i++) {
            inv[i] = modPow(i+1, MOD-2, MOD);
        }
        
        long[] cumSumInv = new long[N];
        cumSumInv[0] = inv[0];
        for (int i = 1; i < N; i++) {
            cumSumInv[i] = (cumSumInv[i-1] + inv[i]) % MOD;
        }
        
        long[] temp = new long[N];
        for (int i = 0; i < N; i++) {
            temp[i] = cumSumInv[j[i]] + cumSumInv[N-1-j[i]] - 1;
            temp[i] %= MOD;
        }
        
        long ans = 0;
        for (int i = 0; i < N; i++) {
            ans += (A[i] * temp[i]) % MOD;
            ans %= MOD;
        }
        
        ans *= flatFact[N];
        ans %= MOD;
        
        System.out.println(ans);
    }
    
    public static long modPow(long base, long exponent, long modulus) {
        if (modulus == 1) return 0;
        long result = 1;
        base %= modulus;
        while (exponent > 0) {
            if (exponent % 2 == 1) {
                result = (result * base) % modulus;
            }
            exponent >>= 1;
            base = (base * base) % modulus;
        }
        return result;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        long MOD = (long) Math.pow(10, 9) + 7;
        int N = Integer.parseInt(input.nextLine());
        int M = (int) Math.pow(10, 6);
        long[] A = new long[N];
        
        String[] arr = input.nextLine().split("" "");
        for (int i = 0; i < N; i++) {
            A[i] = Long.parseLong(arr[i]);
        }
        
        int Nsq = (int) Math.pow(10, 3);
        long[][] fact = new long[Nsq][Nsq];
        fact[0][0] = 1;
        
        for (int n = 1; n < Nsq; n++) {
            for (int i = 0; i < Nsq; i++) {
                fact[i][n] = fact[i][n-1] * fact[i][n];
                fact[i][n] %= MOD;
            }
        }
        
        for (int n = 1; n < Nsq; n++) {
            for (int i = 0; i < Nsq; i++) {
                fact[n][i] = fact[n-1][Nsq-1] * fact[n][i];
                fact[n][i] %= MOD;
            }
        }
        
        long[] flatFact = new long[M];
        int index = 0;
        for (int i = 0; i < Nsq; i++) {
            for (int j = 0; j < Nsq; j++) {
                flatFact[index++] = fact[i][j];
            }
        }
        
        int[] j = new int[N];
        for (int i = 0; i < N; i++) {
            j[i] = i;
        }
        
        long[] inv = new long[N];
        for (int i = 0; i < N; i++) {
            inv[i] = modPow(i+1, MOD-2, MOD);
        }
        
        long[] cumSumInv = new long[N];
        cumSumInv[0] = inv[0];
        for (int i = 1; i < N; i++) {
            cumSumInv[i] = (cumSumInv[i-1] + inv[i]) % MOD;
        }
        
        long[] temp = new long[N];
        for (int i = 0; i < N; i++) {
            temp[i] = cumSumInv[j[i]] + cumSumInv[N-1-j[i]] - 1;
            temp[i] %= MOD;
        }
        
        long ans = 0;
        for (int i = 0; i < N; i++) {
            ans += (A[i] * temp[i]) % MOD;
            ans %= MOD;
        }
        
        ans *= flatFact[N];
        ans %= MOD;
        
        System.out.println(ans);
    }
    
    public static long modPow(long base, long exponent, long modulus) {
        if (modulus == 1) return 0;
        long result = 1;
        base %= modulus;
        while (exponent > 0) {
            if (exponent % 2 == 1) {
                result = (result * base) % modulus;
            }
            exponent >>= 1;
            base = (base * base) % modulus;
        }
        return result;
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC168_C.java,"import java.util.Scanner;
import java.lang.Math;

public class atcoder_ABC168_C {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a, b, h, m;
        a = scanner.nextInt();
        b = scanner.nextInt();
        h = scanner.nextInt();
        m = scanner.nextInt();
        
        double C = Math.abs(360 / 60 * m - 360 / 12 * h - 360 / 12 / 60 * m);
        if (C > 180) {
            C = 360 - C;
        }
        double cosC = Math.cos(Math.toRadians(C));
        System.out.println(Math.sqrt(a * a + b * b - 2 * a * b * cosC));
    }
}","import java.util.Scanner;
import java.lang.Math;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a, b, h, m;
        a = scanner.nextInt();
        b = scanner.nextInt();
        h = scanner.nextInt();
        m = scanner.nextInt();
        
        double C = Math.abs(360 / 60 * m - 360 / 12 * h - (double) (360 / 12) / 60 * m);
        if (C > 180) {
            C = 360 - C;
        }
        double cosC = Math.cos(Math.toRadians(C));
        System.out.println(Math.sqrt(a * a + b * b - 2 * a * b * cosC));
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC178_B.java,"import java.util.*;

public class atcoder_ABC178_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int d = sc.nextInt();
        int result = Math.max(a * c, Math.max(b * d, Math.max(a * d, b * c)));
        System.out.println(result);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextLong();
        long b = sc.nextLong();
        long c = sc.nextLong();
        long d = sc.nextLong();
        long result = Math.max(a * c, Math.max(b * d, Math.max(a * d, b * c)));
        System.out.println(result);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_296_A.java,"import java.util.*;

public class codeforces_296_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();
        String[] m = scanner.nextLine().split("" "");
        boolean possible = true;
        Set<String> set = new HashSet<>(Arrays.asList(m));
        
        for (String i : set) {
            if (Collections.frequency(Arrays.asList(m), i) >= n / 2 + 1) {
                possible = false;
                break;
            }
        }
        
        System.out.println(possible ? ""YES"" : ""NO"");
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();
        String[] m = scanner.nextLine().split("" "");
        boolean possible = true;
        Set<String> set = new HashSet<>(Arrays.asList(m));
        
        for (String i : set) {
            int count = 0;
            for (String j : m) {
                if (j.equals(i)) count++;
            }
            if (count >= n / 2.0 + 1) {
                possible = false;
                break;
            }
        }
        
        System.out.println(possible ? ""YES"" : ""NO"");
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC128_C.java,"import java.util.*;

public class atcoder_ABC128_C {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        List<List<Integer>> li = new ArrayList<>();
        for (int i = 0; i < m; i++) {
            List<Integer> sublist = new ArrayList<>();
            int k = scanner.nextInt();
            for (int j = 0; j < k; j++) {
                sublist.add(scanner.nextInt());
            }
            li.add(sublist);
        }
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = scanner.nextInt();
        }
        Set<Integer> q = new HashSet<>();
        for (List<Integer> sublist : li) {
            q.addAll(sublist);
        }
        Set<Integer> r = new HashSet<>();
        for (int i = 1; i <= n; i++) {
            r.add(i);
        }
        Set<Integer> v = new HashSet<>(r);
        v.removeAll(q);
        int ans = 0;
        for (int i = 0; i <= q.size(); i++) {
            List<Set<Integer>> combinations = new ArrayList<>();
            generateCombinations(q, i, new HashSet<>(), combinations);
            for (Set<Integer> s : combinations) {
                boolean valid = true;
                for (int j = 0; j < li.size(); j++) {
                    Set<Integer> u = new HashSet<>(li.get(j));
                    if (Collections.disjoint(u, s)) {
                        valid = false;
                        break;
                    }
                }
                if (valid) {
                    ans += Math.pow(2, v.size());
                }
            }
        }
        System.out.println(ans);
    }

    private static void generateCombinations(Set<Integer> set, int k, Set<Integer> current, List<Set<Integer>> combinations) {
        if (k == 0) {
            combinations.add(new HashSet<>(current));
            return;
        }
        for (int num : set) {
            if (!current.contains(num)) {
                current.add(num);
                generateCombinations(set, k - 1, current, combinations);
                current.remove(num);
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        List<List<Integer>> li = new ArrayList<>();
        for (int i = 0; i < m; i++) {
            List<Integer> sublist = new ArrayList<>();
            int k = scanner.nextInt();
            for (int j = 0; j < k; j++) {
                sublist.add(scanner.nextInt());
            }
            li.add(sublist);
        }
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = scanner.nextInt();
        }
        Set<Integer> q = new HashSet<>();
        for (List<Integer> sublist : li) {
            q.addAll(sublist);
        }
        Set<Integer> r = new HashSet<>();
        for (int i = 1; i <= n; i++) {
            r.add(i);
        }
        Set<Integer> v = new HashSet<>(r);
        v.removeAll(q);
        int ans = 0;
        for (int i = 0; i <= q.size(); i++) {
            List<Set<Integer>> combinations = new ArrayList<>();
            generateCombinations(q, i, new HashSet<>(), combinations);
            for (Set<Integer> s : combinations) {
                boolean valid = true;
                for (int j = 0; j < li.size(); j++) {
                    Set<Integer> u = new HashSet<>(li.get(j));
                    if (Collections.disjoint(u, s)) {
                        valid = false;
                        break;
                    }
                }
                if (valid) {
                    ans += Math.pow(2, v.size());
                }
            }
        }
        System.out.println(ans);
    }

    private static void generateCombinations(Set<Integer> set, int k, Set<Integer> current, List<Set<Integer>> combinations) {
        if (k == 0) {
            combinations.add(new HashSet<>(current));
            return;
        }
        for (int num : set) {
            if (!current.contains(num)) {
                current.add(num);
                generateCombinations(set, k - 1, current, combinations);
                current.remove(num);
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_412_A.java,"import java.util.Scanner;
import java.util.ArrayList;

public class codeforces_412_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        scanner.nextLine();
        String v = scanner.nextLine();

        String[] d = {""LEFT"", ""RIGHT""};
        boolean f = k - 1 < n - k;
        int m = Math.min(k - 1, n - k);
        ArrayList<String> a = new ArrayList<>();

        for (int i = 0; i < m; i++) {
            a.add(d[f ? 1 : 0]);
        }

        for (int i = v.length() - 1; i >= 0 && f; i -= 2) {
            a.add(""PRINT "" + v.charAt(i));
            a.add(d[f ? 0 : 1]);
        }

        for (int i = 0; i < v.length() && !f; i += 2) {
            a.add(""PRINT "" + v.charAt(i));
            a.add(d[f ? 0 : 1]);
        }

        for (int i = 0; i < a.size() - 1; i++) {
            System.out.println(a.get(i));
        }
    }
}","import java.util.Scanner;
import java.util.ArrayList;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        scanner.nextLine();
        String v = scanner.nextLine();

        String[] d = {""LEFT"", ""RIGHT""};
        boolean f = k - 1 < n - k;
        int m = Math.min(k - 1, n - k);
        ArrayList<String> a = new ArrayList<>();

        for (int i = 0; i < m; i++) {
            a.add(d[f ? 1 : 0]);
        }

        for (int i = v.length() - 1; i >= 0 && f; i -= 2) {
            a.add(""PRINT "" + v.charAt(i));
            a.add(d[f ? 0 : 1]);
        }

        for (int i = 0; i < v.length() && !f; i += 2) {
            a.add(""PRINT "" + v.charAt(i));
            a.add(d[f ? 0 : 1]);
        }

        for (int i = 0; i < a.size() - 1; i++) {
            System.out.println(a.get(i));
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC019_A.java,"import java.util.Scanner;

public class atcoder_AGC019_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int q = scanner.nextInt();
        int h = scanner.nextInt();
        int s = scanner.nextInt();
        int d = scanner.nextInt();
        int n = scanner.nextInt();
        int best1L = Math.min(Math.min(q * 4, h * 2), s);
        int best2L = Math.min(d, best1L * 2);
        if (n % 2 == 0) {
            System.out.println(best2L * (n / 2));
        } else {
            System.out.println(best2L * (n / 2) + best1L);
        }
    }
}","import java.util.Scanner;
import java.math.BigInteger;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        BigInteger q = new BigInteger(sc.next());
        BigInteger h = new BigInteger(sc.next());
        BigInteger s = new BigInteger(sc.next());
        BigInteger d = new BigInteger(sc.next());
        BigInteger n = new BigInteger(sc.next());
        BigInteger best1L = q.multiply(BigInteger.valueOf(4)).min(h.multiply(BigInteger.valueOf(2))).min(s);
        BigInteger best2L = best1L.multiply(BigInteger.valueOf(2)).min(d);
        if (n.mod(BigInteger.valueOf(2)).equals(BigInteger.ZERO)) {
            System.out.println(best2L.multiply(n.divide(BigInteger.valueOf(2))));
        } else {
            System.out.println(best2L.multiply(n.divide(BigInteger.valueOf(2))).add(best1L));
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ARC086_B.java,"import java.util.*;
import java.io.*;
import java.lang.*;

public class atcoder_ARC086_B {
    static int N;
    static int[] a;
    static int max_val;
    static int max_sign;
    static int max_index;
    static final int mod = (int) (1e9 + 7);

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        N = Integer.parseInt(br.readLine());
        a = new int[N];
        String[] input = br.readLine().split("" "");
        for (int i = 0; i < N; i++) {
            a[i] = Integer.parseInt(input[i]);
        }
        max_val = 0;
        max_sign = 0;
        max_index = -1;
        for (int i = 0; i < N; i++) {
            if (Math.abs(a[i]) > max_val) {
                max_val = Math.abs(a[i]);
                max_sign = my_sign(a[i]);
                max_index = i;
            }
        }
        if (max_sign == 0) {
            System.out.println(0);
        } else if (max_sign == 1) {
            System.out.println(2 * N - 1);
            for (int i = 0; i < N; i++) {
                System.out.println((max_index + 1) + "" "" + (i + 1));
            }
            for (int i = 0; i < N - 1; i++) {
                System.out.println((i + 1) + "" "" + (i + 2));
            }
        } else {
            System.out.println(2 * N - 1);
            for (int i = 0; i < N; i++) {
                System.out.println((max_index + 1) + "" "" + (i + 1));
            }
            for (int i = N - 1; i >= 1; i--) {
                System.out.println((i + 1) + "" "" + i);
            }
        }
    }

    static int my_sign(int x) {
        return (x > 0) ? 1 : ((x < 0) ? -1 : 0);
    }
}","import java.util.*;
import java.io.*;
import java.lang.*;

public class Main {
    static int N;
    static int[] a;
    static int max_val;
    static int max_sign;
    static int max_index;
    static final int mod = (int) (1e9 + 7);

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        N = Integer.parseInt(br.readLine());
        a = new int[N];
        String[] input = br.readLine().split("" "");
        for (int i = 0; i < N; i++) {
            a[i] = Integer.parseInt(input[i]);
        }
        max_val = 0;
        max_sign = 0;
        max_index = -1;
        for (int i = 0; i < N; i++) {
            if (Math.abs(a[i]) > max_val) {
                max_val = Math.abs(a[i]);
                max_sign = my_sign(a[i]);
                max_index = i;
            }
        }
        if (max_sign == 0) {
            System.out.println(0);
        } else if (max_sign == 1) {
            System.out.println(2 * N - 1);
            for (int i = 0; i < N; i++) {
                System.out.println((max_index + 1) + "" "" + (i + 1));
            }
            for (int i = 0; i < N - 1; i++) {
                System.out.println((i + 1) + "" "" + (i + 2));
            }
        } else {
            System.out.println(2 * N - 1);
            for (int i = 0; i < N; i++) {
                System.out.println((max_index + 1) + "" "" + (i + 1));
            }
            for (int i = N - 1; i >= 1; i--) {
                System.out.println((i + 1) + "" "" + i);
            }
        }
    }

    static int my_sign(int x) {
        return (x > 0) ? 1 : ((x < 0) ? -1 : 0);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC089_C.java,"import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

public class atcoder_ABC089_C {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        String[] S = new String[N];
        for (int i = 0; i < N; i++) {
            S[i] = input.next();
        }
        ArrayList<String> march = new ArrayList<>(Arrays.asList(""M"", ""A"", ""R"", ""C"", ""H""));
        int[] march_lis = new int[5];
        for (String s : S) {
            if (march.contains(Character.toString(s.charAt(0)).toUpperCase())) {
                march_lis[march.indexOf(Character.toString(s.charAt(0)).toUpperCase())]++;
            }
        }
        int ans = 0;
        for (int x : march_lis) {
            for (int y : march_lis) {
                for (int z : march_lis) {
                    if (x != y && y != z && x != z) {
                        ans += x * y * z;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}","import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        String[] S = new String[N];
        for (int i = 0; i < N; i++) {
            S[i] = input.next();
        }
        ArrayList<String> march = new ArrayList<>(Arrays.asList(""M"", ""A"", ""R"", ""C"", ""H""));
        int[] march_lis = new int[5];
        for (String s : S) {
            if (march.contains(Character.toString(s.charAt(0)).toUpperCase())) {
                march_lis[march.indexOf(Character.toString(s.charAt(0)).toUpperCase())]++;
            }
        }
        int ans = 0;
        for (int x : march_lis) {
            for (int y : march_lis) {
                for (int z : march_lis) {
                    if (x != y && y != z && x != z) {
                        ans += x * y * z;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC033_A.java,"import java.util.Scanner;

public class atcoder_AGC033_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int h = scanner.nextInt();
        int w = scanner.nextInt();
        int[][] graph = new int[h][w];
        for (int i = 0; i < h; i++) {
            String row = scanner.next();
            for (int j = 0; j < w; j++) {
                if (row.charAt(j) == '#') {
                    graph[i][j] = 0;
                } else {
                    graph[i][j] = Integer.MAX_VALUE;
                }
            }
        }
        
        for (int x = 0; x < w - 1; x++) {
            for (int y = 0; y < h; y++) {
                graph[y][x + 1] = Math.min(graph[y][x] + 1, graph[y][x + 1]);
            }
        }
        
        for (int x = w - 1; x > 0; x--) {
            for (int y = 0; y < h; y++) {
                graph[y][x - 1] = Math.min(graph[y][x] + 1, graph[y][x - 1]);
            }
        }
        
        for (int y = 0; y < h - 1; y++) {
            for (int x = 0; x < w; x++) {
                graph[y + 1][x] = Math.min(graph[y][x] + 1, graph[y + 1][x]);
            }
        }
        
        for (int y = h - 1; y > 0; y--) {
            for (int x = 0; x < w; x++) {
                graph[y - 1][x] = Math.min(graph[y][x] + 1, graph[y - 1][x]);
            }
        }
        
        int maxDistance = 0;
        for (int[] row : graph) {
            for (int distance : row) {
                maxDistance = Math.max(maxDistance, distance);
            }
        }
        
        System.out.println(maxDistance);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int h = scanner.nextInt();
        int w = scanner.nextInt();
        int[][] graph = new int[h][w];
        for (int i = 0; i < h; i++) {
            String row = scanner.next();
            for (int j = 0; j < w; j++) {
                if (row.charAt(j) == '#') {
                    graph[i][j] = 0;
                } else {
                    graph[i][j] = Integer.MAX_VALUE;
                }
            }
        }
        
        for (int x = 0; x < w - 1; x++) {
            for (int y = 0; y < h; y++) {
                graph[y][x + 1] = Math.min(graph[y][x] + 1, graph[y][x + 1]);
            }
        }
        
        for (int x = w - 1; x > 0; x--) {
            for (int y = 0; y < h; y++) {
                graph[y][x - 1] = Math.min(graph[y][x] + 1, graph[y][x - 1]);
            }
        }
        
        for (int y = 0; y < h - 1; y++) {
            for (int x = 0; x < w; x++) {
                graph[y + 1][x] = Math.min(graph[y][x] + 1, graph[y + 1][x]);
            }
        }
        
        for (int y = h - 1; y > 0; y--) {
            for (int x = 0; x < w; x++) {
                graph[y - 1][x] = Math.min(graph[y][x] + 1, graph[y - 1][x]);
            }
        }
        
        int maxDistance = 0;
        for (int[] row : graph) {
            for (int distance : row) {
                maxDistance = Math.max(maxDistance, distance);
            }
        }
        
        System.out.println(maxDistance);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC007_C.java,"import java.util.Scanner;

public class atcoder_AGC007_C {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int d = scanner.nextInt();
        int x = scanner.nextInt();

        int ret = 0;
        while (N > 0) {
            ret += d + (N - 0.5) * x;
            d = d + (int) (d / N) + (5 * x) / (2 * N);
            x += 2 * x / N;
            N--;
        }
        System.out.println(ret);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int d = scanner.nextInt();
        int x = scanner.nextInt();

        int ret = 0;
        while (N > 0) {
            ret += d + (N - 0.5) * x;
            d = d + (int) (d / N) + (5 * x) / (2 * N);
            x += 2 * x / N;
            N--;
        }
        System.out.println(ret);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_624_B.java,"import java.util.Arrays;
import java.util.Scanner;

public class codeforces_624_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        int[] a = Arrays.stream(scanner.nextLine().split("" "")).mapToInt(Integer::parseInt).toArray();
        int pre = Integer.MAX_VALUE;
        int ans = 0;
        Arrays.sort(a);
        for (int j = 0; j < n; j++) {
            ans += Math.max(0, Math.min(pre - 1, a[j]));
            pre = Math.max(0, Math.min(pre - 1, a[j]));
        }
        System.out.println(ans);
    }
}","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        String line = scanner.nextLine();
        String[] numbers = line.split("" "");
        int[] a = new int[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            a[i] = Integer.parseInt(numbers[i]);
        }
        int pre = Integer.MAX_VALUE;
        int ans = 0;
        Arrays.sort(a);
        for (int j = 0; j < n; j++) {
            ans += Math.max(0, Math.min(pre - 1, a[j]));
            pre = Math.max(0, Math.min(pre - 1, a[j]));
        }
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_327_A.java,"import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class codeforces_327_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String s = scanner.next().replace("""", """");
        if (!s.contains(""0"")) {
            System.out.println(n - 1);
        } else {
            List<Integer> indices = find(s, '0');
            if (indices.size() == 1) {
                System.out.println(n);
            } else {
                int maximum = 0;
                List<List<Integer>> combs = combinations(indices, 2);
                for (List<Integer> x : combs) {
                    maximum = Math.max(maximum, 2 + 2 * (Math.abs(indices.indexOf(x.get(0)) - indices.indexOf(x.get(1))) - 1) - (Math.abs(x.get(0) - x.get(1)) - 1));
                }
                System.out.println(s.length() - s.replaceAll(""1"", """").length() + maximum);
            }
        }
    }

    private static List<Integer> find(String s, char ch) {
        List<Integer> indices = new ArrayList<>();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == ch) {
                indices.add(i);
            }
        }
        return indices;
    }

    private static List<List<Integer>> combinations(List<Integer> indices, int r) {
        List<List<Integer>> combs = new ArrayList<>();
        int[] indicesArray = indices.stream().mapToInt(i -> i).toArray();
        int n = indicesArray.length;
        int[] combination = new int[r];
        int index = 0;

        while (index >= 0) {
            if (combination[index] == n) {
                index--;
            } else {
                combination[index]++;
                if (index < r - 1) {
                    index++;
                    combination[index] = combination[index - 1];
                } else {
                    List<Integer> comb = new ArrayList<>();
                    for (int i = 0; i < r; i++) {
                        comb.add(indicesArray[combination[i]]);
                    }
                    combs.add(comb);
                }
            }
        }

        return combs;
    }
}","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String s = scanner.next().replace("""", """");
        if (!s.contains(""0"")) {
            System.out.println(n - 1);
        } else {
            List<Integer> indices = find(s, '0');
            if (indices.size() == 1) {
                System.out.println(n);
            } else {
                int maximum = 0;
                List<List<Integer>> combs = combinations(indices, 2);
                for (List<Integer> x : combs) {
                    maximum = Math.max(maximum, 2 + 2 * (Math.abs(indices.indexOf(x.get(0)) - indices.indexOf(x.get(1))) - 1) - (Math.abs(x.get(0) - x.get(1)) - 1));
                }
                System.out.println(s.length() - s.replaceAll(""1"", """").length() + maximum);
            }
        }
    }

    private static List<Integer> find(String s, char ch) {
        List<Integer> indices = new ArrayList<>();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == ch) {
                indices.add(i);
            }
        }
        return indices;
    }

    private static List<List<Integer>> combinations(List<Integer> indices, int r) {
        List<List<Integer>> combs = new ArrayList<>();
        int[] indicesArray = indices.stream().mapToInt(i -> i).toArray();
        int n = indicesArray.length;
        int[] combination = new int[r];
        int index = 0;

        while (index >= 0) {
            if (combination[index] == n) {
                index--;
            } else {
                combination[index]++;
                if (index < r - 1) {
                    index++;
                    combination[index] = combination[index - 1];
                } else {
                    List<Integer> comb = new ArrayList<>();
                    for (int i = 0; i < r; i++) {
                        comb.add(indicesArray[combination[i]]);
                    }
                    combs.add(comb);
                }
            }
        }

        return combs;
    }
}"
ChatGPT,avatar,Python,Java,codeforces_134_A.java,"import java.util.*;

public class codeforces_134_A {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
        int[] w = new int[n];
        
        for (int i = 0; i < n; i++) {
            w[i] = input.nextInt();
        }
        
        int x = 0;
        for (int i = 0; i < n; i++) {
            x += w[i];
        }
        
        List<Integer> d = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            if ((x - w[i]) / (n - 1) == w[i]) {
                d.add(i + 1);
            }
        }
        
        System.out.println(d.size());
        for (int i = 0; i < d.size(); i++) {
            System.out.print(d.get(i) + "" "");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
        int[] w = new int[n];
        
        for (int i = 0; i < n; i++) {
            w[i] = input.nextInt();
        }
        
        int x = 0;
        for (int i = 0; i < n; i++) {
            x += w[i];
        }
        
        List<Integer> d = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            if ((double) (x - w[i]) / (n - 1) == w[i]) {
                d.add(i + 1);
            }
        }
        
        System.out.println(d.size());
        for (int i = 0; i < d.size(); i++) {
            System.out.print(d.get(i) + "" "");
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC150_C.java,"import java.util.*;

public class atcoder_ABC150_C {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        
        List<List<Integer>> orig = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        for (int i = 1; i <= n; i++) {
            temp.add(i);
        }
        permute(orig, temp, 0, n-1);
        
        List<Integer> p = new ArrayList<>();
        String[] pArr = scanner.nextLine().split("" "");
        for (String num : pArr) {
            p.add(Integer.parseInt(num));
        }
        
        List<Integer> q = new ArrayList<>();
        String[] qArr = scanner.nextLine().split("" "");
        for (String num : qArr) {
            q.add(Integer.parseInt(num));
        }
        
        int pn = orig.indexOf(p);
        int qn = orig.indexOf(q);
        
        System.out.println(Math.abs(pn - qn));
    }
    
    public static void permute(List<List<Integer>> orig, List<Integer> temp, int l, int r) {
        if (l == r) {
            orig.add(new ArrayList<>(temp));
        } else {
            for (int i = l; i <= r; i++) {
                Collections.swap(temp, l, i);
                permute(orig, temp, l+1, r);
                Collections.swap(temp, l, i);
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        
        List<List<Integer>> orig = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        for (int i = 1; i <= n; i++) {
            temp.add(i);
        }
        permute(orig, temp, 0, n-1);
        
        List<Integer> p = new ArrayList<>();
        String[] pArr = scanner.nextLine().split("" "");
        for (String num : pArr) {
            p.add(Integer.parseInt(num));
        }
        
        List<Integer> q = new ArrayList<>();
        String[] qArr = scanner.nextLine().split("" "");
        for (String num : qArr) {
            q.add(Integer.parseInt(num));
        }
        
        int pn = orig.indexOf(p);
        int qn = orig.indexOf(q);
        
        System.out.println(Math.abs(pn - qn));
    }
    
    public static void permute(List<List<Integer>> orig, List<Integer> temp, int l, int r) {
        if (l == r) {
            orig.add(new ArrayList<>(temp));
        } else {
            for (int i = l; i <= r; i++) {
                Collections.swap(temp, l, i);
                permute(orig, temp, l+1, r);
                Collections.swap(temp, l, i);
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_598_A.java,"import java.util.Scanner;

public class codeforces_598_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        
        for (int i = 0; i < t; i++) {
            int n = scanner.nextInt();
            System.out.println(solve(n));
        }
    }
    
    public static int solve(int n) {
        int s = (1 + n) * n / 2;
        int t = 1;
        
        while (t <= n) {
            s -= 2 * t;
            t *= 2;
        }
        
        return s;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        
        for (int i = 0; i < t; i++) {
            long n = scanner.nextLong();
            System.out.println(solve(n));
        }
    }
    
    public static long solve(long n) {
        long s = (1 + n) * n / 2;
        long t = 1;
        
        while (t <= n) {
            s -= 2 * t;
            t *= 2;
        }
        
        return s;
    }
}"
ChatGPT,avatar,Python,Java,codeforces_579_A.java,"import java.util.Scanner;

public class codeforces_579_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        int x = 1;
        while (Math.log(n) / Math.log(2) % 1 != 0) {
            x += 1;
            n -= Math.pow(2, (int) (Math.log(n) / Math.log(2)));
        }
        System.out.println(x);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        int x = 1;
        while ((Math.log(n) / Math.log(2) % 1 + 1) % 1 != 0) {
            x += 1;
            n -= Math.pow(2, (int) (Math.log(n) / Math.log(2)));
        }
        System.out.println(x);
    }
}"
ChatGPT,avatar,Java,Python,atcoder_ABC132_F.py,"mod = int(1e9 + 7)
n, k = map(int, input().split())

len = []
l = 1
while l <= n:
    r = n // (n // l)
    len.append(r - l + 1)
    l = r + 1

q = len(len)
dp = [0] * (k * (q + 1))
for j in range(1, q + 1):
    dp[j] = len[j - 1] + dp[j - 1]

for i in range(1, k):
    for j in range(1, q + 1):
        dp[i * (q + 1) + j] = dp[i * (q + 1) + j - 1] + dp[(i - 1) * (q + 1) + q - j + 1] * len[j - 1]
        dp[i * (q + 1) + j] %= mod

print(dp[k * (q + 1) - 1])","mod = int(1e9 + 7)
n, k = map(int, input().split())

lens = []
l = 1
while l <= n:
    r = n // (n // l)
    lens.append(r - l + 1)
    l = r + 1

q = len(lens)
dp = [0] * (k * (q + 1))
for j in range(1, q + 1):
    dp[j] = lens[j - 1] + dp[j - 1]

for i in range(1, k):
    for j in range(1, q + 1):
        dp[i * (q + 1) + j] = dp[i * (q + 1) + j - 1] + dp[(i - 1) * (q + 1) + q - j + 1] * lens[j - 1]
        dp[i * (q + 1) + j] %= mod

print(dp[k * (q + 1) - 1])"
ChatGPT,avatar,Java,Python,atcoder_ABC043_B.py,"class BUnhappyHackingABCEdit:
    def solve(self, testNumber, in, out):
        s = in.string()
        d = []
        for c in s:
            if c == '0':
                d.append('0')
            elif c == '1':
                d.append('1')
            elif c == 'B':
                if len(d) > 0:
                    d.pop()
        out.println(''.join(d))

class LightScanner:
    def __init__(self, in):
        self.reader = in
        self.tokenizer = None
    
    def string(self):
        if self.tokenizer == None or not self.tokenizer.hasMoreTokens():
            try:
                self.tokenizer = self.reader.readline().split()
            except:
                raise
        return self.tokenizer.pop(0)

s = input()
solver = BUnhappyHackingABCEdit()
solver.solve(1, LightScanner(s), print)","class BUnhappyHackingABCEdit:
    def solve(self, testNumber):
        s = input()
        d = []
        for c in s:
            if c == '0':
                d.append('0')
            elif c == '1':
                d.append('1')
            elif c == 'B':
                if len(d) > 0:
                    d.pop()
        print(''.join(d))

class LightScanner:
    def __init__(self):
        self.reader = input()
        self.tokenizer = None
    
    def string(self):
        if self.tokenizer == None or not self.tokenizer.hasMoreTokens():
            try:
                self.tokenizer = self.reader.readline().split()
            except:
                raise
        return self.tokenizer.pop(0)

solver = BUnhappyHackingABCEdit()
solver.solve(1)"
ChatGPT,avatar,Java,Python,atcoder_ABC169_D.py,"import math

n = int(input())
sqrt = int(math.sqrt(n))
answer = 0

for i in range(2, sqrt+1):
    count = 0
    while n % i == 0:
        n //= i
        count += 1
    for j in range(1, count+1):
        count -= j
        answer += 1

if n > 1:
    answer += 1

print(answer)","import math

n = int(input())
sqrt = int(math.sqrt(n))
answer = 0

for i in range(2, sqrt+1):
    count = 0
    while n % i == 0:
        n //= i
        count += 1
    j = 1
    while count - j >= 0:
        count -= j
        answer += 1
        j += 1

if n > 1:
    answer += 1

print(answer)"
ChatGPT,avatar,Java,Python,codeforces_445_A.py,"import sys

n, m = map(int, input().split())
ans = []

for _ in range(n):
    str = input()
    temp = """"
    for j in range(m):
        if str[j] == '-':
            temp += ""-""
        else:
            if (i + j) % 2 == 1:
                temp += ""W""
            else:
                temp += ""B""
    ans.append(temp)

for i in range(n):
    print(ans[i])","import sys

n, m = map(int, input().split())
ans = []

for i in range(n):
    str = input()
    temp = """"
    for j in range(m):
        if str[j] == '-':
            temp += ""-""
        else:
            if (i + j) % 2 == 1:
                temp += ""W""
            else:
                temp += ""B""
    ans.append(temp)

for i in range(n):
    print(ans[i])"
ChatGPT,avatar,Java,Python,codeforces_340_A.py,"def main():
    x = int(input())
    y = int(input())
    a = int(input())
    b = int(input())
    j = 2
    x1 = 0
    y1 = 0
    c = 0
    ans = True
    c = max(x, y)
    if c > b:
        print(""0"")
        ans = False
    while c % min(x, y) != 0 and ans:
        if x > y:
            c = x * j
            j += 1
        else:
            c = y * j
            j += 1
        if c > b:
            print(""0"")
            ans = False
            break
    if ans:
        count = 0
        for i in range(a, b + 1):
            if i % c == 0:
                break
        if i != b + 1:
            print(((b - i) // c) + 1)
        else:
            print(""0"")

if __name__ == ""__main__"":
    main()","def main():
    x, y, a, b = map(int, input().split())
    j = 2
    x1 = 0
    y1 = 0
    c = 0
    ans = True
    c = max(x, y)
    if c > b:
        print(""0"")
        ans = False
    while c % min(x, y) != 0 and ans:
        if x > y:
            c = x * j
            j += 1
        else:
            c = y * j
            j += 1
        if c > b:
            print(""0"")
            ans = False
            break
    if ans:
        count = 0
        for i in range(a, b + 1):
            if i % c == 0:
                break
        if i != b + 1:
            print(((b - i) // c) + 1)
        else:
            print(""0"")

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,atcoder_ABC133_E.py,"class Node:
    def __init__(self, i):
        self.pattern = 0
        self.index = i
        self.children = []
        self.parent = -1

    def setParent(self, K, parent, use, nodes):
        self.pattern = K - use
        self.parent = parent
        count = 1
        if parent != -1:
            count += 1
        for n in self.children:
            if n == self.parent:
                continue
            nodes[n].setParent(K, self.index, count, nodes)
            count += 1


def solve():
    N, K = map(int, input().split())
    nodes = [Node(i) for i in range(N)]
    
    for _ in range(N - 1):
        a, b = map(int, input().split())
        nodes[a - 1].children.append(b - 1)
        nodes[b - 1].children.append(a - 1)

    nodes[0].setParent(K, -1, 0, nodes)
    patterns = 1
    for i in range(N):
        patterns = (patterns * nodes[i].pattern) % 1_000_000_007

    print(patterns)


solve()

Note: The code above assumes that the input is read from stdin using the `input()` function.","class Node:
    def __init__(self, i):
        self.pattern = 0
        self.index = i
        self.children = []
        self.parent = -1

    def setParent(self, K, parent, use, nodes):
        self.pattern = K - use
        self.parent = parent
        count = 1
        if parent != -1:
            count += 1
        for n in self.children:
            if n == self.parent:
                continue
            nodes[n].setParent(K, self.index, count, nodes)
            count += 1


def solve():
    N, K = map(int, input().split())
    nodes = [Node(i) for i in range(N)]
    
    for _ in range(N - 1):
        a, b = map(int, input().split())
        nodes[a - 1].children.append(b - 1)
        nodes[b - 1].children.append(a - 1)

    nodes[0].setParent(K, -1, 0, nodes)
    patterns = 1
    for i in range(N):
        patterns = (patterns * nodes[i].pattern) % 1_000_000_007

    print(patterns)


solve()"
ChatGPT,avatar,Java,Python,codeforces_387_A.py,"import datetime

s = input().split("":"")
t = input().split("":"")

x = datetime.time(int(s[0]), int(s[1]))
y = datetime.time(int(t[0]), int(t[1]))

print((datetime.datetime.combine(datetime.date.today(), x) - datetime.datetime.combine(datetime.date.today(), y)).total_seconds() // 60)","import datetime

s = input().split("":"")
t = input().split("":"")

x = datetime.time(int(s[0]), int(s[1]))
y = datetime.time(int(t[0]), int(t[1]))

print((datetime.datetime.combine(datetime.date.today(), x) - datetime.datetime.combine(datetime.date.today(), y)).total_seconds() // 60)"
ChatGPT,avatar,Java,Python,atcoder_ABC150_D.py,"def get_gcd(a, b):
    if b == 0:
        return a
    else:
        return get_gcd(b, a % b)

n, m = map(int, input().split())
a = [int(input()) // 2 for _ in range(n)]

lcd = 1
for i in range(n):
    gcd = get_gcd(lcd, a[i])
    lcd = lcd * a[i] // gcd
    if lcd > m:
        print(0)
        exit()

for i in range(n):
    if (lcd // a[i]) % 2 == 0:
        print(0)
        exit()

print((m // lcd + 1) // 2)","def get_gcd(a, b):
    if b == 0:
        return a
    else:
        return get_gcd(b, a % b)

n, m = map(int, input().split())
inputs = list(input().split())
a = [int(input) // 2 for input in inputs]

lcd = 1
for i in range(n):
    gcd = get_gcd(lcd, a[i])
    lcd = lcd * a[i] // gcd
    if lcd > m:
        print(0)
        exit()

for i in range(n):
    if (lcd // a[i]) % 2 == 0:
        print(0)
        exit()

print((m // lcd + 1) // 2)"
ChatGPT,avatar,Java,Python,atcoder_AGC004_D.py,"class Calculator:
    def __init__(self, n, k, as_list):
        self.k = k
        self.answer = 0
        self.is_calculate = False
        self.lists = [[] for _ in range(n)]
        
        for i in range(n):
            j = as_list[i]
            if i > 0:
                self.lists[j].append(i)
            elif j > 0:
                self.answer += 1
    
    def calculate(self):
        if not self.is_calculate:
            self.dfs(0, 0)
            self.is_calculate = True
        return self.answer
    
    def dfs(self, a, pre):
        h = 0
        for i in self.lists[a]:
            h = max(h, self.dfs(i, a))
        
        if pre > 0 and h == self.k - 1:
            h = 0
            self.answer += 1
        else:
            h += 1
        
        return h


n, k = map(int, input().split())
as_list = list(map(int, input().split()))

print(Calculator(n, k, as_list).calculate())","class Calculator:
    def __init__(self, n, k, as_list):
        self.k = k
        self.answer = 0
        self.is_calculate = False
        self.lists = [[] for _ in range(n + 1)]
        
        for i in range(n):
            j = as_list[i]
            if i > 0:
                self.lists[j].append(i)
            elif j > 0:
                self.answer += 1
    
    def calculate(self):
        if not self.is_calculate:
            self.dfs(0, 0)
            self.is_calculate = True
        return self.answer
    
    def dfs(self, a, pre):
        h = 0
        for i in self.lists[a]:
            h = max(h, self.dfs(i, a))
        
        if pre > 0 and h == self.k - 1:
            h = 0
            self.answer += 1
        else:
            h += 1
        
        return h


n, k = map(int, input().split())
as_list = list(map(int, input().split()))

print(Calculator(n, k, as_list).calculate())"
ChatGPT,avatar,Java,Python,atcoder_ABC105_D.py,"import sys
from collections import defaultdict

class InputReader:
    def __init__(self, stream):
        self.stream = stream
        self.tokenizer = None
    
    def nextString(self):
        while not self.tokenizer or not self.tokenizer.hasMoreTokens():
            self.tokenizer = iter(next(self.stream).split())
        return next(self.tokenizer)
    
    def nextInt(self):
        return int(self.nextString())
    
    def nextIntArray(self, n):
        return [self.nextInt() for _ in range(n)]

class TaskD:
    def solve(self, in_stream, out_stream):
        n = in_stream.nextInt()
        m = in_stream.nextInt()
        a = in_stream.nextIntArray(n)
        dp = defaultdict(int)
        ans = 0
        base = 0
        for i in range(n):
            base = (base - a[i] % m + m) % m
            dp[(base + a[i]) % m] += 1
            ans += dp[base]
        out_stream.write(str(ans) + '\n')

def main():
    in_stream = InputReader(sys.stdin.buffer)
    out_stream = sys.stdout.buffer
    solver = TaskD()
    solver.solve(in_stream, out_stream)

if __name__ == ""__main__"":
    main()","import sys
from collections import defaultdict

class InputReader:
    def __init__(self, stream):
        self.stream = stream
        self.tokenizer = None
    
    def nextString(self):
        while not self.tokenizer or not self.tokenizer.hasMoreTokens():
            self.tokenizer = iter(next(self.stream).split())
        return next(self.tokenizer)
    
    def nextInt(self):
        return int(self.nextString())
    
    def nextIntArray(self, n):
        return [self.nextInt() for _ in range(n)]

class TaskD:
    def solve(self, in_stream, out_stream):
        n = in_stream.nextInt()
        m = in_stream.nextInt()
        a = in_stream.nextIntArray(n)
        dp = defaultdict(int)
        ans = 0
        base = 0
        for i in range(n):
            base = (base - a[i] % m + m) % m
            dp[(base + a[i]) % m] += 1
            ans += dp[base]
        out_stream.write(str(ans) + '\n')

def main():
    in_stream = InputReader(sys.stdin.buffer)
    out_stream = sys.stdout.buffer
    solver = TaskD()
    solver.solve(in_stream, out_stream)

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,codeforces_37_A.py,"n = int(input())
map = {}
for i in range(n):
    val = int(input())
    map[val] = map.get(val, 0) + 1

max = float('-inf')
for value in map.values():
    max = max(max, value)

print(max, len(map))","n = int(input())
map = {}
inputs = list(input().split())
for i in range(n):
    val = int(inputs[i])
    map[val] = map.get(val, 0) + 1

maxVal = float('-inf')
for value in map.values():
    maxVal = max(maxVal, value)

print(maxVal, len(map))"
ChatGPT,avatar,Java,Python,atcoder_AGC028_A.py,"n, m = map(int, input().split())
gcd = math.gcd(n, m)
s, t = input().split()","import math

n, m = map(int, input().split())
gcd = math.gcd(n, m)
s, t = input(), input()"
ChatGPT,avatar,Java,Python,atcoder_ABC125_A.py,"sec = int(input())
per_num = int(input())
max_sec = float(input()) + 0.5
ans_num = 0

for i in range(sec, int(max_sec), sec):
    ans_num += per_num

print(ans_num)","sec, per_num, max_sec = input().split()
sec = int(sec)
per_num = int(per_num)
max_sec = float(max_sec) + 0.5
ans_num = 0

for i in range(sec, int(max_sec) + 1, sec):
    if i >= max_sec: break
    ans_num += per_num

print(ans_num)"
ChatGPT,avatar,Java,Python,atcoder_AGC004_B.py,"import sys

def main():
    input = sys.stdin.readline
    N, x = map(int, input().split())
    srimeList = [int(input()) for _ in range(N)]
    costList = [[0] * N for _ in range(N)]
    for i in range(N):
        costList[i][0] = srimeList[i]
        for castNum in range(1, N):
            costList[i][castNum] = min(costList[i][castNum - 1], srimeList[(i - castNum + N) % N])
    result = []
    for i in range(N):
        result.append(i * x + sum(costArray[i] for costArray in costList))
    print(min(result))

if __name__ == ""__main__"":
    main()","import sys

def main():
    input = sys.stdin.readline
    N, x = map(int, input().split())
    srimeList = list(map(int, input().split()))
    costList = [[0] * N for _ in range(N)]
    for i in range(N):
        costList[i][0] = srimeList[i]
        for castNum in range(1, N):
            costList[i][castNum] = min(costList[i][castNum - 1], srimeList[(i - castNum + N) % N])
    result = []
    for i in range(N):
        result.append(i * x + sum(costArray[i] for costArray in costList))
    print(min(result))

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,atcoder_ABC169_C.py,"import sys

a = int(sys.stdin.readline())
b = sys.stdin.readline().strip().replace(""."", """")

result = (a * int(b)) // 100
print(result)","import sys

a, b = sys.stdin.readline().split()
a = int(a)
b = b.strip().replace(""."", """")

result = (a * int(b)) // 100
print(result)"
ChatGPT,avatar,Java,Python,codeforces_624_B.py,"n = int(input())
ans = []

for i in range(n):
    ans.append(int(input()))

ans.sort()
count = ans[n-1]

for i in range(n-2, -1, -1):
    if ans[i] < ans[i+1]:
        count += ans[i]
    else:
        while ans[i] >= ans[i+1]:
            ans[i] -= 1
        if ans[i] > 0:
            count += ans[i]

print(count)","n = int(input())
ans = list(map(int, input().split()))

ans.sort()
count = ans[n-1]

for i in range(n-2, -1, -1):
    if ans[i] < ans[i+1]:
        count += ans[i]
    else:
        while ans[i] >= ans[i+1]:
            ans[i] -= 1
        if ans[i] > 0:
            count += ans[i]

print(count)"
ChatGPT,avatar,Java,Python,codeforces_705_B.py,"import sys

class FastReader:
    def __init__(self):
        self.buffer = sys.stdin.readlines()
        self.pointer = 0

    def next(self):
        words = self.buffer[self.pointer].strip().split()
        self.pointer += 1
        return words.pop(0)

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return int(self.next())

    def nextDouble(self):
        return float(self.next())

    def nextLine(self):
        return self.buffer[self.pointer].strip()

def main():
    t = 1
    while t > 0:
        solve()
        t -= 1

def solve():
    t = scan.nextInt()
    arr = [0] * t
    for i in range(t):
        arr[i] = scan.nextInt()

    prevWinner = 0
    for i in range(t):
        if arr[i] == 1:
            if prevWinner == 0:
                prevWinner = 2

        if prevWinner == 2 or prevWinner == 0:
            if (arr[i] - 1) % 2 == 0:
                print(2)
                prevWinner = 2
            else:
                print(1)
                prevWinner = 1
        else:
            if (arr[i] - 1) % 2 == 0:
                print(1)
                prevWinner = 1
            else:
                print(2)
                prevWinner = 2

scan = FastReader()
main()","import sys

class FastReader:
    def __init__(self):
        self.buffer = sys.stdin.readlines()
        self.pointer = 0

    def next(self):
        words = self.buffer[self.pointer].strip().split()
        self.pointer += 1
        return words.pop(0)

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return int(self.next())

    def nextDouble(self):
        return float(self.next())

    def nextLine(self):
        return self.buffer[self.pointer].strip()

def main():
    t = 1
    while t > 0:
        solve()
        t -= 1

def solve():
    t = scan.nextInt()
    arr = [0] * t
    for i in range(t):
        arr[i] = scan.nextInt()

    prevWinner = 0
    for i in range(t):
        if arr[i] == 1:
            if prevWinner == 0:
                prevWinner = 2

        if prevWinner == 2 or prevWinner == 0:
            if (arr[i] - 1) % 2 == 0:
                print(2)
                prevWinner = 2
            else:
                print(1)
                prevWinner = 1
        else:
            if (arr[i] - 1) % 2 == 0:
                print(1)
                prevWinner = 1
            else:
                print(2)
                prevWinner = 2

scan = FastReader()
main()"
ChatGPT,avatar,Java,Python,codeforces_450_A.py,"# Translate the above Java code to Python.

import queue

def main():
    n, m = map(int, input().split())
    q1 = queue.Queue()
    q2 = queue.Queue()
    for i in range(1, n+1):
        q1.put(int(input()))
        q2.put(i)
    ans = 0
    while not q1.empty():
        if q1.queue[0] <= m:
            q1.get()
            ans = q2.get()
        elif q1.queue[0] > m:
            x = q1.get()
            val = x - m
            q1.put(val)
            val2 = q2.get()
            q2.put(val2)
    print(ans)

if __name__ == ""__main__"":
    main()","# Translate the above Java code to Python.

import queue

def main():
    n, m = map(int, input().split())
    q1 = queue.Queue()
    q2 = queue.Queue()
    inputs = list(input().split())
    for i in range(1, n+1):
        q1.put(int(inputs[i-1]))
        q2.put(i)
    ans = 0
    while not q1.empty():
        if q1.queue[0] <= m:
            q1.get()
            ans = q2.get()
        elif q1.queue[0] > m:
            x = q1.get()
            val = x - m
            q1.put(val)
            val2 = q2.get()
            q2.put(val2)
    print(ans)

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,atcoder_ABC124_A.py,"a = int(input())
b = int(input())

sum = 0
for i in range(2):
    if a >= b:
        sum += a
        a -= 1
    else:
        sum += b
        b -= 1

print(sum)","a, b = map(int, input().split())

sum = 0
for i in range(2):
    if a >= b:
        sum += a
        a -= 1
    else:
        sum += b
        b -= 1

print(sum)"
ChatGPT,avatar,Java,Python,atcoder_ABC142_C.py,"def main():
    N = int(input())
    idorder = {}
    for i in range(1, N + 1):
        A = int(input())
        idorder[A] = i
    for i in range(1, N + 1):
        print(idorder[i], end=' ')

if __name__ == ""__main__"":
    main()","def main():
    N = int(input())
    idorder = {}
    inputs = list(input().split())
    for i in range(1, N + 1):
        A = int(inputs[i - 1])
        idorder[A] = i
    for i in range(1, N + 1):
        print(idorder[i], end=' ')

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,codeforces_474_B.py,"def fun(arr, q, n, m):
    res = 0
    i = 0
    j = n
    while i <= j:
        md = i + (j - i) // 2
        if arr[md] == q:
            return md
        elif arr[md] > q:
            res = md
            j = md - 1
        else:
            i = md + 1
    return res

n = int(input())
arr = [0] * n
arr[0] = int(input())
for i in range(1, n):
    x = int(input())
    arr[i] = x + arr[i - 1]

m = int(input())
q = [0] * m
for i in range(m):
    q[i] = int(input())

for k in range(m):
    print(fun(arr, q[k], n, m) + 1)","def fun(arr, q, n, m):
    res = 0
    i = 0
    j = n
    while i <= j:
        md = i + (j - i) // 2
        if arr[md] == q:
            return md
        elif arr[md] > q:
            res = md
            j = md - 1
        else:
            i = md + 1
    return res

n = int(input())
arr = [0] * n
inputs = list(input().split())
arr[0] = int(inputs[0])
for i in range(1, n):
    x = int(inputs[i])
    arr[i] = x + arr[i - 1]

m = int(input())
q = [0] * m
inputs = list(input().split())
for i in range(m):
    q[i] = int(inputs[i])

for k in range(m):
    print(fun(arr, q[k], n, m) + 1)"
ChatGPT,avatar,Java,Python,atcoder_ABC167_D.py,"def do_it():
    N = int(input())
    K = int(input())
    A = [int(x) - 1 for x in input().split()]
    used = set()
    idx = [0] * N
    pos = [0] * N
    next = 0
    cur = 0
    while next not in used:
        used.add(next)
        idx[next] = cur
        pos[cur] = next
        next = A[next]
        cur += 1
    a = cur - idx[next]
    b = idx[next]
    ans = (10000 * a + K - b) % a + b
    if b > K:
        ans = K
    print(pos[ans] + 1)


do_it()","def do_it():
    N, K = map(int, input().split())
    A = [int(x) - 1 for x in input().split()]
    used = set()
    idx = [0] * N
    pos = [0] * N
    next = 0
    cur = 0
    while next not in used:
        used.add(next)
        idx[next] = cur
        pos[cur] = next
        next = A[next]
        cur += 1
    a = cur - idx[next]
    b = idx[next]
    ans = (10000 * a + K - b) % a + b
    if b > K:
        ans = K
    print(pos[ans] + 1)


do_it()"
ChatGPT,avatar,Java,Python,codeforces_653_A.py,"n = int(input())
a = []
for _ in range(n):
    value = int(input())
    a.append(value)
a = list(set(a))
a.sort()
found = False
for i in range(len(a)):
    if i + 1 < len(a) and i + 2 < len(a):
        if a[i] + 1 == a[i + 1] and a[i + 1] + 1 == a[i + 2]:
            found = True
print(""YES"" if found else ""NO"")","n = int(input())
a = []
inputs = list(input().split())
for i in range(n):
    value = int(inputs[i])
    a.append(value)
a = list(set(a))
a.sort()
found = False
for i in range(len(a)):
    if i + 1 < len(a) and i + 2 < len(a):
        if a[i] + 1 == a[i + 1] and a[i + 1] + 1 == a[i + 2]:
            found = True
print(""YES"" if found else ""NO"")"
ChatGPT,avatar,Java,Python,atcoder_AGC006_A.py,"def getFail(b, m):
    j = 0
    f = [0] * (m+1)
    for i in range(2, m+1):
        while j > 0 and b[j+1] != b[i]:
            j = f[j]
        if b[j+1] == b[i]:
            j += 1
        f[i] = j

n = int(input())
s1 = input()
str = input()
cnt = 0
b = [''] * (2*n+1)
for i in range(n):
    cnt += 1
    b[cnt] = str[i]
for i in range(n):
    cnt += 1
    b[cnt] = s1[i]
getFail(b, cnt)
len = min(f[cnt], min(n, n))
print(2 * n - len)","def getFail(b, m):
    global f
    j = 0
    f = [0] * (m+1)
    for i in range(2, m+1):
        while j > 0 and b[j+1] != b[i]:
            j = f[j]
        if b[j+1] == b[i]:
            j += 1
        f[i] = j

n = int(input())
s1 = input()
str = input()
cnt = 0
b = [''] * (2*n+1)
for i in range(n):
    cnt += 1
    b[cnt] = str[i]
for i in range(n):
    cnt += 1
    b[cnt] = s1[i]
getFail(b, cnt)
len = min(f[cnt], min(n, n))
print(2 * n - len)"
ChatGPT,avatar,Java,Python,atcoder_AGC017_A.py,"import math

def C(n, m):
    res = 1
    for i in range(m - n + 1, m + 1):
        res *= i
    for i in range(1, n + 1):
        res //= i
    return res

n, p = map(int, input().split())
k0 = 0
k1 = 0
for _ in range(n):
    x = int(input())
    if x % 2 == 1:
        k1 += 1
    else:
        k0 += 1

ans = 1
for _ in range(k0):
    ans *= 2

if p == 0:
    add = 0
    for i in range(0, k1 + 1, 2):
        add += C(i, k1)
    ans *= add
    print(ans)
else:
    add = 0
    for i in range(1, k1 + 1, 2):
        add += C(i, k1)
    ans *= add
    print(ans)","import math

def C(n, m):
    res = 1
    for i in range(m - n + 1, m + 1):
        res *= i
    for i in range(1, n + 1):
        res //= i
    return res

n, p = map(int, input().split())
k0 = 0
k1 = 0
inputs = list(input().split())
for i in range(n):
    x = int(inputs[i])
    if x % 2 == 1:
        k1 += 1
    else:
        k0 += 1

ans = 1
for _ in range(k0):
    ans *= 2

if p == 0:
    add = 0
    for i in range(0, k1 + 1, 2):
        add += C(i, k1)
    ans *= add
    print(ans)
else:
    add = 0
    for i in range(1, k1 + 1, 2):
        add += C(i, k1)
    ans *= add
    print(ans)"
ChatGPT,avatar,Java,Python,codeforces_333_B.py,"n, m = map(int, input().split())
bannedRows = set()
bannedCols = set()

for i in range(m):
    r = int(input())
    if r > 1 and r < n:
        bannedRows.add(r)
    c = int(input())
    if c > 1 and c < n:
        bannedCols.add(c)

answer = (n - 2) * 2
answer -= len(bannedRows)
answer -= len(bannedCols)

if n % 2 != 0:
    mid = (n + 1) // 2
    if mid not in bannedRows and mid not in bannedCols:
        answer -= 1

print(answer)","n, m = map(int, input().split())
bannedRows = set()
bannedCols = set()

for i in range(m):
    r, c = map(int, input().split())
    if r > 1 and r < n:
        bannedRows.add(r)
    if c > 1 and c < n:
        bannedCols.add(c)

answer = (n - 2) * 2
answer -= len(bannedRows)
answer -= len(bannedCols)

if n % 2 != 0:
    mid = (n + 1) // 2
    if mid not in bannedRows and mid not in bannedCols:
        answer -= 1

print(answer)"
ChatGPT,avatar,Java,Python,codeforces_342_B.py,"import sys

input = sys.stdin.readline().split()
m = int(input[1])
s = int(input[2])
f = int(input[3])
maxT = -1
map = {}

while m > 0:
    mth = sys.stdin.readline().split()
    k = int(mth[0])
    map[k] = [int(mth[1]), int(mth[2])]
    maxT = max(maxT, k)
    m -= 1

actions = """"
M = 'R' if s < f else 'L'
d = 1 if s < f else -1
cur = s
a = -1
b = -1

for t in range(1, maxT + 1):
    if t in map:
        a = map[t][0]
        b = map[t][1]
    if t in map and ((cur >= a and cur <= b) or (cur + d >= a and cur + d <= b)):
        actions += 'X'
    else:
        actions += M
        cur += d
    if cur == f:
        break

while cur != f:
    actions += M
    cur += d

print(actions)","import sys

input = sys.stdin.readline().split()
m = int(input[1])
s = int(input[2])
f = int(input[3])
maxT = -1
map = {}

while m > 0:
    mth = sys.stdin.readline().split()
    k = int(mth[0])
    map[k] = [int(mth[1]), int(mth[2])]
    maxT = max(maxT, k)
    m -= 1

actions = """"
M = 'R' if s < f else 'L'
d = 1 if s < f else -1
cur = s
a = -1
b = -1

for t in range(1, maxT + 1):
    if t in map:
        a = map[t][0]
        b = map[t][1]
    if t in map and ((cur >= a and cur <= b) or (cur + d >= a and cur + d <= b)):
        actions += 'X'
    else:
        actions += M
        cur += d
    if cur == f:
        break

while cur != f:
    actions += M
    cur += d

print(actions)"
ChatGPT,avatar,Java,Python,codeforces_131_B.py,"n = int(input())
cnt = [0] * 21

for i in range(n):
    cnt[int(input()) + 10] += 1

res = 0
for i in range(10):
    res += cnt[i] * cnt[20 - i]

res += (cnt[10] * (cnt[10] - 1)) // 2

print(res)","n = int(input())
cnt = [0] * 21

inputs = list(input().split())
for i in range(n):
    cnt[int(inputs[i]) + 10] += 1

res = 0
for i in range(10):
    res += cnt[i] * cnt[20 - i]

res += (cnt[10] * (cnt[10] - 1)) // 2

print(res)"
ChatGPT,avatar,Java,Python,codeforces_469_A.py,"n = int(input())
levels = int(input())
sum = 0
sum2 = 0
sum3 = 0
arr = []
count = 0

for i in range(levels):
    arr.append(int(input()))

level2 = int(input())
level3 = levels + level2
arr2 = arr.copy()

for i in range(len(arr), level3):
    arr2.append(int(input()))

arr3 = list(range(1, n+1))
j = 0

for i in range(n):
    arr3[i] = j = j + 1

for i in range(n):
    for x in range(len(arr2)):
        if arr3[i] == arr2[x]:
            count += 1
            break

if count == n:
    print(""I become the guy."")
else:
    print(""Oh, my keyboard!"")","n = int(input())
inputs = list(input().split())
levels = int(inputs[0])
sum = 0
sum2 = 0
sum3 = 0
arr = []
count = 0

for i in range(levels):
    arr.append(int(inputs[i + 1]))

inputs = list(input().split())
level2 = int(inputs[0])
level3 = levels + level2
arr2 = arr.copy()

for i in range(len(arr), level3):
    arr2.append(int(inputs[i - len(arr) + 1]))

arr3 = list(range(1, n+1))
j = 0

for i in range(n):
    arr3[i] = j = j + 1

for i in range(n):
    for x in range(len(arr2)):
        if arr3[i] == arr2[x]:
            count += 1
            break

if count == n:
    print(""I become the guy."")
else:
    print(""Oh, my keyboard!"")"
ChatGPT,avatar,Java,Python,atcoder_ABC122_C.py,"n, q = map(int, input().split())
c = input()

range = []
for _ in range(q):
    range.append(list(map(int, input().split())))

frag = [0] * (n + 1)
rui = [0] * (n + 1)
for i in range(2, n + 1):
    if c[i - 2] == 'A' and c[i - 1] == 'C':
        frag[i] += 1
    rui[i] = rui[i - 1] + frag[i]

for i in range(q):
    left = range[i][0]
    right = range[i][1]
    print(rui[right] - rui[left])","n, q = map(int, input().split())
c = input()

ranges = []
for _ in range(q):
    ranges.append(list(map(int, input().split())))

frag = [0] * (n + 1)
rui = [0] * (n + 1)
for i in range(2, n + 1):
    if c[i - 2] == 'A' and c[i - 1] == 'C':
        frag[i] += 1
    rui[i] = rui[i - 1] + frag[i]

for i in range(q):
    left = ranges[i][0]
    right = ranges[i][1]
    print(rui[right] - rui[left])"
ChatGPT,avatar,Java,Python,atcoder_AGC003_C.py,"N = int(input())
nums = list(map(int, input().split()))

map = {}
for i in range(N):
    map[nums[i]] = i

nums.sort()

bin = 0
diff = 0
for i in range(N):
    num = nums[i]
    idx = map[num]
    if bin % 2 != idx % 2:
        diff += 1
    bin += 1
    bin %= 2

ans = diff // 2
print(ans)","N = int(input())

nums = []
for i in range(N):
    nums.append(int(input()))

maps = {}
for i in range(N):
    maps[nums[i]] = i

nums.sort()

bin = 0
diff = 0
for i in range(N):
    num = nums[i]
    idx = maps[num]
    if bin % 2 != idx % 2:
        diff += 1
    bin += 1
    bin %= 2

ans = diff // 2
print(ans)"
ChatGPT,avatar,Java,Python,atcoder_AGC024_B.py,"N = int(input())
P = list(map(int, input().split()))

map = {}
for i in range(N):
    map[P[i]] = i

nglist = []
for i in range(N - 1):
    if map[i] > map[i + 1]:
        nglist.append(i)

if not nglist:
    print(0)
    exit()

ans = min(N - nglist[0] - 1, nglist[-1] + 1)
for i in range(len(nglist) - 1):
    ans = min(nglist[i] + 1 + N - nglist[i + 1] - 1, ans)

print(ans)","N = int(input())

P = []
for i in range(N):
    P.append(int(input()))

maps = {}
for i in range(N):
    maps[P[i]] = i

nglist = []
for i in range(N - 1):
    if i in maps.keys() and i + 1 in maps.keys() and maps[i] > maps[i + 1]:
        nglist.append(i)

if not nglist:
    print(0)
    exit()

ans = min(N - nglist[0] - 1, nglist[-1] + 1)
for i in range(len(nglist) - 1):
    ans = min(nglist[i] + 1 + N - nglist[i + 1] - 1, ans)

print(ans)"
ChatGPT,avatar,Java,Python,atcoder_ABC104_C.py,"INF = 100000

def main():
    D = int(input())
    G = int(input())
    p = []
    c = []
    for _ in range(D):
        p_i, c_i = map(int, input().split())
        p.append(p_i)
        c.append(c_i)

    min_num = INF
    for bit in range(1 << D):
        score = 0
        solve_num = 0
        for i in range(D):
            if bit & (1 << i):
                score += 100 * (i + 1) * p[i] + c[i]
                solve_num += p[i]
        
        if score < G:
            for i in range(D-1, -1, -1):
                if bit & (1 << i) == 0:
                    for j in range(p[i] - 1):
                        score += 100 * (i + 1)
                        solve_num += 1
                        if score >= G:
                            break
        
        if score >= G:
            min_num = min(min_num, solve_num)
    
    print(min_num)

if __name__ == ""__main__"":
    main()","INF = 100000

def main():
    D, G = map(int, input().split())
    p = []
    c = []
    for _ in range(D):
        p_i, c_i = map(int, input().split())
        p.append(p_i)
        c.append(c_i)

    min_num = INF
    for bit in range(1 << D):
        score = 0
        solve_num = 0
        for i in range(D):
            if bit & (1 << i):
                score += 100 * (i + 1) * p[i] + c[i]
                solve_num += p[i]
        
        if score < G:
            for i in range(D-1, -1, -1):
                if bit & (1 << i) == 0:
                    for j in range(p[i] - 1):
                        score += 100 * (i + 1)
                        solve_num += 1
                        if score >= G:
                            break
        
        if score >= G:
            min_num = min(min_num, solve_num)
    
    print(min_num)

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,atcoder_ABC148_F.py,"import sys

def dfs(u, d, edges):
    for nu in edges[u]:
        if d[nu] == sys.maxsize:
            d[nu] = d[u] + 1
            dfs(nu, d, edges)

if __name__ == ""__main__"":
    N, u, v = map(int, input().split())
    u -= 1
    v -= 1

    edges = [[] for _ in range(N)]

    for _ in range(N - 1):
        a, b = map(int, input().split())
        a -= 1
        b -= 1
        edges[a].append(b)
        edges[b].append(a)

    d = [sys.maxsize] * N
    d[u] = 0
    dfs(u, d, edges)

    e = [sys.maxsize] * N
    e[v] = 0
    dfs(v, e, edges)

    q = -1
    for i in range(N):
        if d[i] < e[i]:
            if e[i] > q:
                q = e[i]

    if q <= 0:
        print(0)
    else:
        print(q - 1)","import sys

def dfs(u, d, edges):
    for nu in edges[u]:
        if d[nu] == sys.maxsize:
            d[nu] = d[u] + 1
            dfs(nu, d, edges)

if __name__ == ""__main__"":
    N, u, v = map(int, input().split())
    u -= 1
    v -= 1

    edges = [[] for _ in range(N)]

    for _ in range(N - 1):
        a, b = map(int, input().split())
        a -= 1
        b -= 1
        edges[a].append(b)
        edges[b].append(a)

    d = [sys.maxsize] * N
    d[u] = 0
    dfs(u, d, edges)

    e = [sys.maxsize] * N
    e[v] = 0
    dfs(v, e, edges)

    q = -1
    for i in range(N):
        if d[i] < e[i]:
            if e[i] > q:
                q = e[i]

    if q <= 0:
        print(0)
    else:
        print(q - 1)"
ChatGPT,avatar,Java,Python,atcoder_AGC007_C.py,"import decimal

def main():
    N = float(input())
    d = float(input())
    x = float(input())
    ans = decimal.Decimal(""0.0"")
    
    while N > 0.5:
        adnum = decimal.Decimal(d + x * (N - 0.5))
        ans += adnum
        d = (N + 1.0) * d / N + (5.0 * x) / (2.0 * N)
        x = (1.0 + (2.0 / N)) * x
        N -= 1
    
    format = ""{:.20f}"".format(ans)
    print(format)

if __name__ == ""__main__"":
    main()","import decimal

def main():
    N, d, x = map(float, input().split())
    ans = decimal.Decimal(""0.0"")
    
    while N > 0.5:
        adnum = decimal.Decimal(d + x * (N - 0.5))
        ans += adnum
        d = (N + 1.0) * d / N + (5.0 * x) / (2.0 * N)
        x = (1.0 + (2.0 / N)) * x
        N -= 1
    
    format = ""{:.20f}"".format(ans)
    print(format)

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,atcoder_ABC118_C.py,"import sys

def func(a):
    min_val = 0
    for i in range(len(a)):
        if a[i] == 0:
            a.pop(i)
            i -= 1
        else:
            if min_val != 0:
                a[i] = a[i] % min_val
                if a[i] == 1:
                    print(1)
                    sys.exit(0)
            else:
                min_val = a[i]
    a.sort()
    return a

n = int(input())
a = []
if n == 1:
    print(int(input()))
    sys.exit(0)
for i in range(n):
    a.append(int(input()))

a.sort()
if a[-1] == 0:
    print(0)
    sys.exit(0)

ans = 0
while True:
    if len(a) == 1:
        ans = a[0]
        break
    a = func(a)

print(ans)","import sys

def func(a):
    min_val = 0
    i = 0
    while i < len(a):
        if a[i] == 0:
            a.pop(i)
            i -= 1
        else:
            if min_val != 0:
                a[i] = a[i] % min_val
                if a[i] == 1:
                    print(1)
                    sys.exit(0)
            else:
                min_val = a[i]
        i += 1
    a.sort()
    return a

n = int(input())
a = []
if n == 1:
    print(int(input()))
    sys.exit(0)
inputs = list(input().split())
for i in range(n):
    a.append(int(inputs[i]))

a.sort()
if a[-1] == 0:
    print(0)
    sys.exit(0)

ans = 0
while True:
    if len(a) == 1:
        ans = a[0]
        break
    a = func(a)

print(ans)"
ChatGPT,avatar,Java,Python,atcoder_ABC127_B.py,"import sys

class SimpleScanner:
    def __init__(self, file):
        self.file = file
        self.buffer = ''
        self.eof = False
    
    def read(self):
        if len(self.buffer) == 0:
            self.buffer = self.file.readline().strip().split()
            if len(self.buffer) == 0:
                self.eof = True
                return ''
        return self.buffer.pop(0)
    
    def check_eof(self):
        if self.eof:
            raise ValueError('No more elements to read.')
    
    def next_char(self):
        self.check_eof()
        char = self.read()
        self.check_eof()
        return char
    
    def next(self):
        char = self.read()
        while char.isspace():
            char = self.read()
        word = char
        char = self.read()
        while not self.eof and not char.isspace():
            word += char
            char = self.read()
        return word
    
    def next_int(self):
        return int(self.next())
    
    def next_long(self):
        return int(self.next())
    
    def next_double(self):
        return float(self.next())

def main():
    r = scanner.next_int()
    d = scanner.next_int()
    x = scanner.next_long()
    for _ in range(10):
        x = r * x - d
        print(x)

scanner = SimpleScanner(sys.stdin)
main()","import sys

class SimpleScanner:
    def __init__(self):
        self.buffer = ''
        self.eof = False
    
    def read(self):
        if len(self.buffer) == 0:
            self.buffer = input().strip().split()
            if len(self.buffer) == 0:
                self.eof = True
                return ''
        return self.buffer.pop(0)
    
    def check_eof(self):
        if self.eof:
            raise ValueError('No more elements to read.')
    
    def next_char(self):
        self.check_eof()
        char = self.read()
        self.check_eof()
        return char
    
    def next(self):
        char = self.read()
        while char.isspace():
            char = self.read()
        word = char
        char = self.read()
        while not self.eof and not char.isspace():
            word += char
            char = self.read()
        return word
    
    def next_int(self):
        return int(self.next())
    
    def next_long(self):
        return int(self.next())
    
    def next_double(self):
        return float(self.next())

def main():
    r = scanner.next_int()
    d = scanner.next_int()
    x = scanner.next_long()
    for _ in range(10):
        x = r * x - d
        print(x)

scanner = SimpleScanner()
main()"
ChatGPT,avatar,Java,Python,codeforces_242_B.py,"INF = int(1e9) + 5

n = int(input())
a = []
b = []
left = INF
right = 0

for i in range(n):
    a.append(int(input()))
    b.append(int(input()))
    left = min(left, a[i])
    right = max(right, b[i])

for i in range(n):
    if left == a[i] and right == b[i]:
        print(i+1)
        exit()

print(-1)","INF = int(1e9) + 5

n = int(input())
a = []
b = []
left = INF
right = 0

for i in range(n):
    inputs = list(input().split())
    a.append(int(inputs[0]))
    b.append(int(inputs[1]))
    left = min(left, a[i])
    right = max(right, b[i])

for i in range(n):
    if left == a[i] and right == b[i]:
        print(i+1)
        exit()

print(-1)"
ChatGPT,avatar,Java,Python,atcoder_AGC019_A.py,"Q, H, S, D, N = map(int, input().split())

onePrice = min(min(Q * 4, H * 2), S)

if onePrice <= D / 2:
    print(N * onePrice)
else:
    print((N // 2) * D + (N % 2) * onePrice)","Q, H, S, D = map(int, input().split())
N = int(input())

onePrice = min(min(Q * 4, H * 2), S)

if onePrice <= D / 2:
    print(N * onePrice)
else:
    print((N // 2) * D + (N % 2) * onePrice)"
ChatGPT,avatar,Java,Python,codeforces_462_B.py,"import sys

class c462b:
    def __init__(self):
        self.left = 0

def main():
    n, k = map(int, sys.stdin.readline().split())
    cards = [c462b() for _ in range(26)]
    s = sys.stdin.readline().strip()
    
    for t in range(n):
        cards[ord(s[t]) - ord('A')].left += 1
    
    ans = 0
    for i in range(k):
        cards.sort(key=lambda x: x.left)
        change = min(cards[25].left, k - i)
        ans += change * change
        cards[25].left -= change
        i += change - 1
    
    print(ans)

if __name__ == ""__main__"":
    main()","import sys

class c462b:
    def __init__(self):
        self.left = 0

def main():
    n, k = map(int, sys.stdin.readline().split())
    cards = [c462b() for _ in range(26)]
    s = sys.stdin.readline().strip()
    
    for t in range(n):
        cards[ord(s[t]) - ord('A')].left += 1
    
    ans = 0
    for i in range(k):
        cards.sort(key=lambda x: x.left)
        change = min(cards[25].left, k - i)
        ans += change * change
        cards[25].left -= change
        i += change - 1
    
    print(ans)

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,codeforces_356_A.py,"import sys


class FastReader:
    def __init__(self):
        self.input = sys.stdin.readline()
        self.tokens = self.input.split()
        self.index = 0

    def next(self):
        current = self.tokens[self.index]
        self.index += 1
        return current

    def next_int(self):
        return int(self.next())

    def next_long(self):
        return int(self.next())

    def next_double(self):
        return float(self.next())

    def next_line(self):
        return sys.stdin.readline()


def main():
    in_ = FastReader()
    n = in_.next_int()
    left = set(range(n))
    answer = [0] * n

    q = in_.next_int()
    while q > 0:
        l = in_.next_int() - 1
        r = in_.next_int() - 1
        win = in_.next_int()

        while l <= min(r, n-1) and l in left:
            answer[l] = win
            left.remove(l)
            l += 1

        answer[win - 1] = 0
        left.add(win - 1)
        q -= 1

    ans = """"
    for i in range(n):
        ans += str(answer[i])

    print(ans)


if __name__ == ""__main__"":
    main()","import sys


class FastReader:
    def __init__(self):
        self.input = sys.stdin.readline()
        self.tokens = self.input.split()
        self.index = 0

    def next(self):
        current = self.tokens[self.index]
        self.index += 1
        return current

    def next_int(self):
        return int(self.next())

    def next_long(self):
        return int(self.next())

    def next_double(self):
        return float(self.next())

    def next_line(self):
        return sys.stdin.readline()


def main():
    in_ = FastReader()
    n = in_.next_int()
    left = set(range(n))
    answer = [0] * n

    q = in_.next_int()
    while q > 0:
        l = in_.next_int() - 1
        r = in_.next_int() - 1
        win = in_.next_int()

        while l <= min(r, n-1) and l in left:
            answer[l] = win
            left.remove(l)
            l += 1

        answer[win - 1] = 0
        left.add(win - 1)
        q -= 1

    ans = """"
    for i in range(n):
        ans += str(answer[i])

    print(ans)


if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,codeforces_617_B.py,"n = int(input())
arr = []
for i in range(n):
    if int(input()) == 1:
        arr.append(i)

if len(arr) == 0:
    print(0)
else:
    result = 1
    for i in range(1, len(arr)):
        result *= arr[i] - arr[i-1]
    print(result)","n = int(input())
arr = []
inputs = list(input().split())
for i in range(n):
    if int(inputs[i]) == 1:
        arr.append(i)

if len(arr) == 0:
    print(0)
else:
    result = 1
    for i in range(1, len(arr)):
        result *= arr[i] - arr[i-1]
    print(result)"
ChatGPT,avatar,Java,Python,atcoder_ABC155_E.py,"INF = 10**15
number = input().strip()
digits = [int(d) for d in number[::-1]]
bills = 0

for i in range(len(number) + 1):
    if digits[i] == 10:
        digits[i + 1] += 1
        digits[i] = 0
    
    if digits[i] < 5:
        bills += digits[i]
    elif digits[i] == 5:
        if digits[i + 1] >= 5:
            digits[i + 1] += 1
        bills += 5
    else:
        digits[i + 1] += 1
        bills += 10 - digits[i]

print(bills)","INF = 10**15
number = input().strip()
digits = [int(d) for d in number[::-1]]
digits.append(0)
bills = 0

for i in range(len(number) + 1):
    if digits[i] == 10:
        digits[i + 1] += 1
        digits[i] = 0
    
    if digits[i] < 5:
        bills += digits[i]
    elif digits[i] == 5:
        if digits[i + 1] >= 5:
            digits[i + 1] += 1
        bills += 5
    else:
        digits[i + 1] += 1
        bills += 10 - digits[i]

print(bills)"
ChatGPT,avatar,Java,Python,codeforces_456_A.py,"n = int(input())
a = []
b = []
temp = 0
q = 0
w = 0
e = 0
f = False

for i in range(n):
    a.append(int(input()))
    b.append(int(input()))

    if temp < a[i]:
        if q > b[i]:
            f = True
        q = b[i]
        temp = a[i]
    
    if temp > a[i]:
        if q < b[i]:
            f = True
        q = b[i]
        temp = a[i]
    
    if a[i] > w:
        w = a[i]
        if b[i] < e:
            f = True
        e = b[i]
    
    if a[i] < w:
        if b[i] > e:
            f = True

if f:
    print(""Happy Alex"")
else:
    print(""Poor Alex"")","n = int(input())
a = []
b = []
temp = 0
q = 0
w = 0
e = 0
f = False

for i in range(n):
    inputs = list(input().split())
    a.append(int(inputs[0]))
    b.append(int(inputs[1]))

    if temp < a[i]:
        if q > b[i]:
            f = True
        q = b[i]
        temp = a[i]
    
    if temp > a[i]:
        if q < b[i]:
            f = True
        q = b[i]
        temp = a[i]
    
    if a[i] > w:
        w = a[i]
        if b[i] < e:
            f = True
        e = b[i]
    
    if a[i] < w:
        if b[i] > e:
            f = True

if f:
    print(""Happy Alex"")
else:
    print(""Poor Alex"")"
ChatGPT,avatar,Java,Python,atcoder_ABC112_A.py,"import sys

def read():
    return sys.stdin.readline().strip()

def main():
    n = int(read())
    if n == 1:
        print(""Hello World"")
    else:
        a, b = map(int, read().split())
        print(a + b)

if __name__ == ""__main__"":
    main()","import sys

def read():
    return sys.stdin.readline().strip()

def main():
    n = int(read())
    if n == 1:
        print(""Hello World"")
    else:
        a, b = int(read()), int(read())
        print(a + b)

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,codeforces_534_B.py,"import numpy as np

v1, v2, t, d = map(int, input().split())
dp = np.zeros((t-1, 1150), dtype=np.int64)
dp[0][v1] = v1

for i in range(1, t-1):
    for j in range(1150):
        for x in range(d+1):
            if j + x < 1150:
                dp[i][j] = max(dp[i][j], dp[i-1][j+x] + j)
        for x in range(d, -1, -1):
            if j - x >= 0:
                dp[i][j] = max(dp[i][j], dp[i-1][j-x] + j)

ans = -float('inf')

for i in range(t-2, t-1):
    for j in range(1150):
        if abs(j - v2) <= d:
            ans = max(ans, dp[i][j] + v2)

print(ans)","import numpy as np

v1, v2 = map(int, input().split())
t, d = map(int, input().split())
dp = np.zeros((t-1, 1150), dtype=np.int64)
dp[0][v1] = v1

for i in range(1, t-1):
    for j in range(1150):
        for x in range(d+1):
            if j + x < 1150:
                dp[i][j] = max(dp[i][j], dp[i-1][j+x] + j)
        for x in range(d, -1, -1):
            if j - x >= 0:
                dp[i][j] = max(dp[i][j], dp[i-1][j-x] + j)

ans = -float('inf')

for i in range(t-2, t-1):
    for j in range(1150):
        if abs(j - v2) <= d:
            ans = max(ans, dp[i][j] + v2)

print(ans)"
ChatGPT,avatar,Java,Python,codeforces_296_A.py,"class Task:
    def solve(self, n, array):
        countMax = -1
        for i in range(1, 1001):
            if countMax < array[i]:
                countMax = array[i]
        
        if n % 2 == 0:
            if countMax <= n // 2:
                print(""YES"")
            else:
                print(""NO"")
        else:
            if countMax <= n // 2 + 1:
                print(""YES"")
            else:
                print(""NO"")

def main():
    n = int(input())
    array = [0] * 1001
    for i in range(n):
        index = int(input())
        array[index] += 1
    
    solver = Task()
    solver.solve(n, array)

if __name__ == ""__main__"":
    main()","class Task:
    def solve(self, n, array):
        countMax = -1
        for i in range(1, 1001):
            if countMax < array[i]:
                countMax = array[i]
        
        if n % 2 == 0:
            if countMax <= n // 2:
                print(""YES"")
            else:
                print(""NO"")
        else:
            if countMax <= n // 2 + 1:
                print(""YES"")
            else:
                print(""NO"")

def main():
    n = int(input())
    array = [0] * 1001
    inputs = list(input().split())
    for i in range(n):
        index = int(inputs[i])
        array[index] += 1
    
    solver = Task()
    solver.solve(n, array)

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,atcoder_ABC178_B.py,"import sys

def modPower(x, y, mod):
    res = 1
    x %= mod
    if x == 0:
        return 0
    while y > 0:
        if y % 2 == 1:
            res = (res * x) % mod
        y = y >> 1
        x = (x * x) % mod
    return res

def main():
    a = [0] * 4
    for i in range(4):
        a[i] = int(input())
    print(max(a[0] * a[2], max(a[1] * a[3], max(a[0] * a[3], a[1] * a[2]))))

if __name__ == ""__main__"":
    main()","import sys

def modPower(x, y, mod):
    res = 1
    x %= mod
    if x == 0:
        return 0
    while y > 0:
        if y % 2 == 1:
            res = (res * x) % mod
        y = y >> 1
        x = (x * x) % mod
    return res

def main():
    a = [0] * 4
    inputs = list(input().split())
    for i in range(4):
        a[i] = int(inputs[i])
    print(max(a[0] * a[2], max(a[1] * a[3], max(a[0] * a[3], a[1] * a[2]))))

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,codeforces_189_A.py,"n = int(input())
maxn = 4010
a, b, c = map(int, input().split())

arr = [a, b, c]
dp = [float(""-inf"")] * maxn
dp[0] = 0

for i in range(3):
    for j in range(arr[i], len(dp)):
        dp[j] = max(dp[j], dp[j - arr[i]] + 1)

print(dp[n])","inputs = list(input().split())
n = int(inputs[0])
maxn = 4010
a, b, c = int(inputs[1]), int(inputs[2]), int(inputs[3])

arr = [a, b, c]
dp = [float(""-inf"")] * maxn
dp[0] = 0

for i in range(3):
    for j in range(arr[i], len(dp)):
        dp[j] = max(dp[j], dp[j - arr[i]] + 1)

print(dp[n])"
ChatGPT,avatar,Java,Python,atcoder_ABC122_D.py,"N = 0
MOD = 1000000007
TOKENS = ['A', 'C', 'G', 'T']
memo = []

def __init__(self):
    self.memo = []
    self.N = int(input())
    for i in range(self.N + 1):
        self.memo.append({})

def calc(self):
    return self.dfs(0, ""TTT"")

def isOK(self, last4):
    if 'AGC' in last4:
        return False
    for i in range(3):
        vals = list(last4)
        vals[i], vals[i+1] = vals[i+1], vals[i]
        s = ''.join(vals)
        if 'AGC' in s:
            return False
    return True

def dfs(self, current, last3):
    if last3 in self.memo[current]:
        return self.memo[current][last3]
    if current == self.N:
        return 1
    result = 0
    for c in self.TOKENS:
        if self.isOK(last3 + c):
            result = (result + self.dfs(current + 1, last3[1:] + c)) % self.MOD
    self.memo[current][last3] = result
    return result

ins = atcoder_ABC122_D()
print(ins.calc())","N = 0
MOD = 1000000007
TOKENS = ['A', 'C', 'G', 'T']
memo = []

def __init__(self):
    self.memo = []
    self.N = int(input())
    for i in range(self.N + 1):
        self.memo.append({})

def calc(self):
    return self.dfs(0, ""TTT"")

def isOK(self, last4):
    if 'AGC' in last4:
        return False
    for i in range(3):
        vals = list(last4)
        vals[i], vals[i+1] = vals[i+1], vals[i]
        s = ''.join(vals)
        if 'AGC' in s:
            return False
    return True

def dfs(self, current, last3):
    if last3 in self.memo[current]:
        return self.memo[current][last3]
    if current == self.N:
        return 1
    result = 0
    for c in self.TOKENS:
        if self.isOK(last3 + c):
            result = (result + self.dfs(current + 1, last3[1:] + c)) % self.MOD
    self.memo[current][last3] = result
    return result

ins = atcoder_ABC122_D()
print(ins.calc())"
ChatGPT,avatar,Java,Python,atcoder_AGC002_A.py,"def main():
    a = int(input())
    b = int(input())

    if a > 0:
        print(""Positive"")
    elif b >= 0:
        print(""Zero"")
    elif (b - a + 1) % 2 == 0:
        print(""Positive"")
    else:
        print(""Negative"")

if __name__ == ""__main__"":
    main()","def main():
    a, b = map(int, input().split())

    if a > 0:
        print(""Positive"")
    elif b >= 0:
        print(""Zero"")
    elif (b - a + 1) % 2 == 0:
        print(""Positive"")
    else:
        print(""Negative"")

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,codeforces_55_B.py,"import sys

def util(arr, ops, idx):
    global min_val
    if idx == 3:
        min_val = min(min_val, arr[0])
        return
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            a = []
            for k in range(len(arr)):
                if k != j and k != i:
                    a.append(arr[k])
            if idx < 3 and ops[idx] == ""+"":
                res = arr[i] + arr[j]
            else:
                res = arr[i] * arr[j]
            a.append(res)
            util(a, ops, idx + 1)

min_val = sys.maxsize
arr = []
for _ in range(4):
    arr.append(int(input()))
ops = []
for _ in range(3):
    ops.append(input())
util(arr, ops, 0)
print(min_val)","import sys

def util(arr, ops, idx):
    global min_val
    if idx == 3:
        min_val = min(min_val, arr[0])
        return
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            a = []
            for k in range(len(arr)):
                if k != j and k != i:
                    a.append(arr[k])
            if idx < 3 and ops[idx] == ""+"":
                res = arr[i] + arr[j]
            else:
                res = arr[i] * arr[j]
            a.append(res)
            util(a, ops, idx + 1)

min_val = sys.maxsize
arr = list(map(int, input().split()))
ops = list(input().split())
util(arr, ops, 0)
print(min_val)"
ChatGPT,avatar,Java,Python,atcoder_ARC102_C.py,"mod = 998244353
nchoosek = [[0] * 4001 for _ in range(4001)]

for i in range(len(nchoosek)):
    nchoosek[i][0] = nchoosek[i][i] = 1

for i in range(2, len(nchoosek)):
    for j in range(1, i):
        nchoosek[i][j] = (nchoosek[i - 1][j] + nchoosek[i - 1][j - 1]) % mod

k = int(input())
n = int(input())

for i in range(2, 2 * k + 1):
    if i > k:
        pairs = k - i // 2
    else:
        pairs = (i - 1) // 2

    active = k - 2 * pairs
    if i % 2 == 0:
        active -= 1

    times2 = 1
    total = 0

    for j in range(pairs + 1):
        choice = times2 * nchoosek[pairs][j] % mod
        times2 = times2 * 2 % mod

        if active + j - 1 < 0:
            continue

        total += choice * nchoosek[n + active - 1][active + j - 1]

        if i % 2 == 0:
            total += choice * nchoosek[n + active - 2][active + j - 1]

        total %= mod

    print(total)","mod = 998244353
nchoosek = [[0] * 4001 for _ in range(4001)]

for i in range(len(nchoosek)):
    nchoosek[i][0] = nchoosek[i][i] = 1

for i in range(2, len(nchoosek)):
    for j in range(1, i):
        nchoosek[i][j] = (nchoosek[i - 1][j] + nchoosek[i - 1][j - 1]) % mod

k, n = map(int, input().split())

for i in range(2, 2 * k + 1):
    if i > k:
        pairs = k - i // 2
    else:
        pairs = (i - 1) // 2

    active = k - 2 * pairs
    if i % 2 == 0:
        active -= 1

    times2 = 1
    total = 0

    for j in range(pairs + 1):
        choice = times2 * nchoosek[pairs][j] % mod
        times2 = times2 * 2 % mod

        if active + j - 1 < 0:
            continue

        total += choice * nchoosek[n + active - 1][active + j - 1]

        if i % 2 == 0:
            total += choice * nchoosek[n + active - 2][active + j - 1]

        total %= mod

    print(total)"
ChatGPT,avatar,Java,Python,codeforces_546_A.py,"pandu, vundu, urdu, c = map(int, input().split())

for i in range(1, urdu+1):
    c += i * pandu

if c < vundu:
    print(""0"")
else:
    print(c - vundu)","pandu, vundu, urdu = map(int, input().split())
c = 0

for i in range(1, urdu+1):
    c += i * pandu

if c < vundu:
    print(""0"")
else:
    print(c - vundu)"
ChatGPT,avatar,Java,Python,atcoder_AGC021_B.py,"import math

N = int(input())
x = []
y = []

for i in range(N):
    x_i, y_i = map(int, input().split())
    x.append(x_i)
    y.append(y_i)

for i in range(N):
    thetas = []

    for j in range(N):
        if i == j:
            continue
        thetas.append(math.atan2(y[j] - y[i], x[j] - x[i]))

    thetas.sort()
    thetas.append(thetas[0] + 2 * math.pi)
    ans = 0

    for k in range(N - 1):
        ans = max(ans, thetas[k + 1] - thetas[k] - math.pi)

    print(ans / (math.pi * 2))","import math

N = int(input())
x = []
y = []

for i in range(N):
    x_i, y_i = map(int, input().split())
    x.append(x_i)
    y.append(y_i)

for i in range(N):
    thetas = []

    for j in range(N):
        if i == j:
            continue
        thetas.append(math.atan2(y[j] - y[i], x[j] - x[i]))

    thetas.sort()
    thetas.append(thetas[0] + 2 * math.pi)
    ans = 0

    for k in range(N - 1):
        ans = max(ans, thetas[k + 1] - thetas[k] - math.pi)

    print(ans / (math.pi * 2))"
ChatGPT,avatar,Java,Python,atcoder_ABC140_F.py,"import sys

def main():
    N = int(input())
    size = 1 << N
    S = list(map(int, input().split()))
    S.sort(reverse=True)
    active = [S[0]]
    spawned = [False] * size
    spawned[size - 1] = True
    
    for i in range(N):
        active.sort(reverse=True)
        activated = []
        next = size - 1
        
        for slime in active:
            while next >= 0 and (S[next] >= slime or spawned[next]):
                next -= 1
            if next < 0:
                print(""No"")
                return
            spawned[next] = True
            activated.append(S[next])
        
        active += activated
    
    print(""Yes"")

if __name__ == ""__main__"":
    main()","import sys

def main():
    N = int(input())
    size = 1 << N
    S = list(map(int, input().split()))
    S.sort(reverse=True)
    active = [S[0]]
    spawned = [False] * size
    spawned[size - 1] = True
    
    for i in range(N):
        active.sort(reverse=True)
        activated = []
        next = size - 1
        
        for slime in active:
            while next >= 0 and (S[next] >= slime or spawned[next]):
                next -= 1
            if next < 0:
                print(""No"")
                return
            spawned[next] = True
            activated.append(S[next])
        
        active += activated
    
    print(""Yes"")

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,codeforces_287_A.py,"str = []
for i in range(4):
    str.append(input())

yes = 0
for u in range(2):
    for i in range(2):
        if ((str[u][i] == str[u][i+1]) and (str[u+1][i] == str[u][i] or str[u+1][i+1] == str[u][i])) or ((str[u+1][i] == str[u+1][i+1]) and (str[u][i] == str[u+1][i] or str[u][i+1] == str[u+1][i])):
            yes = 1
            print(""YES"")
            break
    if yes == 1:
        break

if yes == 0:
    print(""NO"")","str = []
for i in range(4):
    str.append(input())

yes = 0
u = -1
i = -1
while u != 2:
    u += 1
    i -= 1
    while i != 2:
        i += 1
        if ((str[u][i] == str[u][i+1]) and (str[u+1][i] == str[u][i] or str[u+1][i+1] == str[u][i])) or ((str[u+1][i] == str[u+1][i+1]) and (str[u][i] == str[u+1][i] or str[u][i+1] == str[u+1][i])):
            yes = 1
            print(""YES"")
            break
    if yes == 1:
        break

if yes == 0:
    print(""NO"")"
ChatGPT,avatar,Java,Python,atcoder_ABC123_C.py,"N = int(input())
min_val = 0

for i in range(5):
    if i == 0:
        min_val = int(input())
    else:
        min_val = min(min_val, int(input()))","import math

N = int(input())
min_val = 0

for i in range(5):
    if i == 0:
        min_val = int(input())
    else:
        min_val = min(min_val, int(input()))
print(math.ceil(N / min_val) + 4)"
ChatGPT,avatar,Java,Python,atcoder_ARC086_B.py,"import sys

n = int(input())
a = list(map(int, input().split()))

r = []
m = 0
for i in range(1, n):
    if abs(a[m]) < abs(a[i]):
        m = i

for i in range(n):
    if (a[m] >= 0) ^ (a[i] >= 0):
        r.append(str(m + 1) + "" "" + str(i + 1))

if a[m] >= 0:
    for i in range(1, n):
        r.append(str(i) + "" "" + str(i + 1))
else:
    for i in range(n, 1, -1):
        r.append(str(i) + "" "" + str(i - 1))

print(len(r))
for item in r:
    print(item)","import sys

n = int(input())
a = list(map(int, input().split()))

r = []
m = 0
for i in range(1, n):
    if abs(a[m]) < abs(a[i]):
        m = i

for i in range(n):
    if (a[m] >= 0) ^ (a[i] >= 0):
        r.append(str(m + 1) + "" "" + str(i + 1))

if a[m] >= 0:
    for i in range(1, n):
        r.append(str(i) + "" "" + str(i + 1))
else:
    for i in range(n, 1, -1):
        r.append(str(i) + "" "" + str(i - 1))

print(len(r))
for item in r:
    print(item)"
ChatGPT,avatar,Java,Python,codeforces_7_B.py,"def main():
    t, m = map(int, input().split())
    memory = [0] * m
    allocIdx = 0
    for _ in range(t):
        command = input().split()
        if command[0] == ""alloc"":
            n = int(command[1])
            len = 0
            canAlloc = False
            for i in range(m):
                if memory[i] == 0:
                    len += 1
                else:
                    len = 0
                if len == n:
                    canAlloc = True
                    len = i - n + 1
                    break
            if canAlloc:
                allocIdx += 1
                for i in range(len, len + n):
                    memory[i] = allocIdx
                print(allocIdx)
            else:
                print(""NULL"")
        elif command[0] == ""erase"":
            x = int(command[1])
            if x <= 0:
                print(""ILLEGAL_ERASE_ARGUMENT"")
                continue
            hasErased = False
            for i in range(m):
                if memory[i] == x:
                    memory[i] = 0
                    hasErased = True
            if not hasErased:
                print(""ILLEGAL_ERASE_ARGUMENT"")
        elif command[0] == ""defragment"":
            d = 0
            for i in range(m):
                if memory[i] == 0:
                    d += 1
                else:
                    memory[i - d] = memory[i]
            for i in range(m - d, m):
                memory[i] = 0
        else:
            print(""h"")

if __name__ == ""__main__"":
    main()","def main():
    t, m = map(int, input().split())
    memory = [0] * m
    allocIdx = 0
    for _ in range(t):
        command = input().split()
        if command[0] == ""alloc"":
            n = int(command[1])
            len = 0
            canAlloc = False
            for i in range(m):
                if memory[i] == 0:
                    len += 1
                else:
                    len = 0
                if len == n:
                    canAlloc = True
                    len = i - n + 1
                    break
            if canAlloc:
                allocIdx += 1
                for i in range(len, len + n):
                    memory[i] = allocIdx
                print(allocIdx)
            else:
                print(""NULL"")
        elif command[0] == ""erase"":
            x = int(command[1])
            if x <= 0:
                print(""ILLEGAL_ERASE_ARGUMENT"")
                continue
            hasErased = False
            for i in range(m):
                if memory[i] == x:
                    memory[i] = 0
                    hasErased = True
            if not hasErased:
                print(""ILLEGAL_ERASE_ARGUMENT"")
        elif command[0] == ""defragment"":
            d = 0
            for i in range(m):
                if memory[i] == 0:
                    d += 1
                else:
                    memory[i - d] = memory[i]
            for i in range(m - d, m):
                memory[i] = 0
        else:
            print(""h"")

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,codeforces_369_B.py,"def getPoints(n, k, l, r, sAll, sk):
    ans = [l] * n
    sAll -= sk + (n - k) * l
    sk -= k * l
    while sk > 0:
        idx = n - 1
        while sk > 0 and idx >= n - k:
            ans[idx] += 1
            sk -= 1
            idx -= 1
    while sAll > 0:
        idx = 0
        while sAll > 0 and idx < n - k:
            ans[idx] += 1
            sAll -= 1
            idx += 1
    return ans

n, k, l, r, sAll, sk = map(int, input().split())
ans = getPoints(n, k, l, r, sAll, sk)
print(*ans)","def getPoints(n, k, l, r, sAll, sk):
    ans = [l] * n
    sAll -= sk + (n - k) * l
    sk -= k * l
    while sk > 0:
        idx = n - 1
        while sk > 0 and idx >= n - k:
            ans[idx] += 1
            sk -= 1
            idx -= 1
    while sAll > 0:
        idx = 0
        while sAll > 0 and idx < n - k:
            ans[idx] += 1
            sAll -= 1
            idx += 1
    return ans

n, k, l, r, sAll, sk = map(int, input().split())
ans = getPoints(n, k, l, r, sAll, sk)
print(*ans)"
ChatGPT,avatar,Java,Python,atcoder_ABC168_C.py,"import math

A, B, H, M = map(int, input().split())

mkaku = M * 6
hkaku = H * 30 + M / 2
kaku = mkaku - hkaku
dkaku = math.radians(abs(kaku))

AA2 = A * A
BB2 = B * B
CC = AA2 + BB2
DD = 2 * A * B * math.cos(dkaku)

ans2 = CC - DD
ans = math.sqrt(ans2)

print(ans)","import math

A, B, H, M = map(int, input().split())

mkaku = M * 6
hkaku = H * 30 + M / 2
kaku = mkaku - hkaku
dkaku = math.radians(abs(kaku))

AA2 = A * A
BB2 = B * B
CC = AA2 + BB2
DD = 2 * A * B * math.cos(dkaku)

ans2 = CC - DD
ans = math.sqrt(ans2)

print(ans)"
ChatGPT,avatar,Java,Python,atcoder_ABC134_E.py,"import sys

n = int(input())
nums = [int(input()) for _ in range(n)]
counts = {}

for num in nums:
    if num not in counts:
        counts[num] = 1
    else:
        counts[num] += 1

ans = len(counts)
print(ans)","import sys

n = int(input())
nums = [int(input()) for _ in range(n)]
counts = {}

for num in nums:
    if num not in counts:
        counts[num] = 1
    else:
        counts[num] += 1

ans = len(counts)
print(ans)"
ChatGPT,avatar,Java,Python,codeforces_32_B.py,"import java.util.Scanner

public class codeforces_32_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        char[] n = in.next().toCharArray();
        boolean s = false;
        
        for (int i = 0; i < n.length; i++) {
            if (n[i] == '.') {
                if (s) {
                    System.out.print(1);
                    s = false;
                } else {
                    System.out.print(0);
                }
            } else {
                if (s) {
                    System.out.print(2);
                    s = false;
                } else {
                    s = true;
                }
            }
        }
        
        in.close();
    }
}","import java.util.Scanner

public class codeforces_32_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        char[] n = in.next().toCharArray();
        boolean s = false;
        
        for (int i = 0; i < n.length; i++) {
            if (n[i] == '.') {
                if (s) {
                    System.out.print(1);
                    s = false;
                } else {
                    System.out.print(0);
                }
            } else {
                if (s) {
                    System.out.print(2);
                    s = false;
                } else {
                    s = true;
                }
            }
        }
        
        in.close();
    }
}"
ChatGPT,avatar,Java,Python,atcoder_ABC123_B.py,"import sys

a = list(map(int, sys.stdin.readline().split()))
r = [num % 10 for num in a]
map = {}

for i in range(len(a)):
    b = 10
    if r[i] != 0:
        b = 10 - r[i]
        map[b] = a[i]

ans = 0

if len(map) == 0:
    ans = sum(a)
    print(ans)
    sys.exit()

last = map[max(map.keys())]
idx = 0

for i in range(len(a)):
    if a[i] == last:
        idx = i

for i in range(len(a)):
    if i != idx:
        if a[i] % 10 == 0:
            ans += a[i]
        else:
            ans += a[i] + (10 - r[i])

ans += last
print(ans)","import sys

a = list(map(int, sys.stdin.readline().split()))
r = [num % 10 for num in a]
map = {}

for i in range(len(a)):
    b = 10
    if r[i] != 0:
        b = 10 - r[i]
        map[b] = a[i]

ans = 0

if len(map) == 0:
    ans = sum(a)
    print(ans)
    sys.exit()

last = map[max(map.keys())]
idx = 0

for i in range(len(a)):
    if a[i] == last:
        idx = i

for i in range(len(a)):
    if i != idx:
        if a[i] % 10 == 0:
            ans += a[i]
        else:
            ans += a[i] + (10 - r[i])

ans += last
print(ans)"
ChatGPT,avatar,Java,Python,codeforces_334_A.py,"import sys

n = int(input())
square = n * n
odd = []
even = []

for i in range(1, square+1):
    if i % 2 == 0:
        even.append(i)
    else:
        odd.append(i)

loop = square // n
div = loop // 2

for i in range(1, loop+1):
    for j in range(div):
        if i % 2 == 1:
            print(odd.pop(0), even.pop(), end="" "")
        else:
            print(even.pop(0), odd.pop(), end="" "")
    print()","import sys

n = int(input())
square = n * n
odd = []
even = []

for i in range(1, square+1):
    if i % 2 == 0:
        even.append(i)
    else:
        odd.append(i)

loop = square // n
div = loop // 2

for i in range(1, loop+1):
    for j in range(div):
        if i % 2 == 1:
            print(odd.pop(0), even.pop(), end="" "")
        else:
            print(even.pop(0), odd.pop(), end="" "")
    print()"
ChatGPT,avatar,Java,Python,atcoder_ABC142_A.py,"code = """"""
import sys

input = sys.stdin.readline().strip()
input = float(input)

count_odd = round(input / 2)
result = count_odd / input
result = round(result, 10)

print(result)
""""""

print(code.strip())","
import sys

input = sys.stdin.readline().strip()
input = float(input)

count_odd = round(input / 2)
result = count_odd / input
result = round(result, 10)

print(result)"
ChatGPT,avatar,Java,Python,codeforces_67_B.py,"n, k = map(int, input().split())
bb = list(map(int, input().split()))
aa = [0] * n
m = 0
for a in range(n - 1, -1, -1):
    j = 0
    while bb[a] > 0:
        if aa[j] >= a + k:
            bb[a] -= 1
        j += 1
    for j_ in range(m, j, -1):
        aa[j_] = aa[j_ - 1]
    aa[j] = a
for i in range(n):
    print(aa[i] + 1, end="" "")","n, k = map(int, input().split())
bb = list(map(int, input().split()))
aa = [0] * n
m = 0
for a in range(n - 1, -1, -1):
    j = 0
    while bb[a] > 0:
        if aa[j] >= a + k:
            bb[a] -= 1
        j += 1
    for j_ in range(m, j, -1):
        aa[j_] = aa[j_ - 1]
    aa[j] = a
for i in range(n):
    print(aa[i] + 1, end="" "")"
ChatGPT,avatar,Java,Python,codeforces_70_B.py,"import sys

n = int(input())
input_str = input()

max_length = -1
msg_lengths = []
count = 0
idx = 0

for i in range(len(input_str)):
    c = input_str[i]
    if c == '.' or c == '?' or c == '!':
        msg_lengths.append(count + 1)
        if count + 1 > max_length:
            max_length = count + 1
        i += 1
        count = 0
    else:
        count += 1

if max_length > n:
    print(""Impossible"")
else:
    ans = 0
    i = 0
    while i < len(msg_lengths):
        l = msg_lengths[i]
        while i < len(msg_lengths) - 1 and l + msg_lengths[i + 1] + 1 <= n:
            l += msg_lengths[i + 1] + 1
            i += 1
        ans += 1
        i += 1
    print(ans)","import sys

n = int(input())
input_str = input()

max_length = -1
msg_lengths = []
count = 0
idx = 0

for i in range(len(input_str)):
    c = input_str[i]
    if c == '.' or c == '?' or c == '!':
        msg_lengths.append(count + 1)
        if count + 1 > max_length:
            max_length = count + 1
        i += 1
        count = 0
    else:
        count += 1

if max_length > n:
    print(""Impossible"")
else:
    ans = 0
    i = 0
    while i < len(msg_lengths):
        l = msg_lengths[i]
        while i < len(msg_lengths) - 1 and l + msg_lengths[i + 1] + 1 <= n:
            l += msg_lengths[i + 1] + 1
            i += 1
        ans += 1
        i += 1
    print(ans)"
ChatGPT,avatar,Java,Python,atcoder_ARC062_B.py,"import sys

class TaskD:
    def solve(self, S):
        score = 0
        for i in range(len(S)):
            my = 'g' if i % 2 == 0 else 'p'
            his = S[i]
            if my != his:
                score += 1 if my == 'p' else -1
        return score

if __name__ == ""__main__"":
    S = input()
    solver = TaskD()
    score = solver.solve(S)
    print(score)","import sys

class TaskD:
    def solve(self, S):
        score = 0
        for i in range(len(S)):
            my = 'g' if i % 2 == 0 else 'p'
            his = S[i]
            if my != his:
                score += 1 if my == 'p' else -1
        return score

if __name__ == ""__main__"":
    S = input()
    solver = TaskD()
    score = solver.solve(S)
    print(score)"
ChatGPT,avatar,Java,Python,codeforces_148_B.py,"import math

VP = int(input())
VD = int(input())
T = int(input())
F = int(input())
C = int(input())

if VD <= VP:
    exit()

answer = 0
start = T

while True:
    x = start * VP / (VD - VP)
    if (start + x) * VP >= C:
        break
    start += 2 * x + F
    answer += 1","import math

VP = int(input())
VD = int(input())
T = int(input())
F = int(input())
C = int(input())

if VD <= VP:
    exit()

answer = 0
start = T

while True:
    x = start * VP / (VD - VP)
    if (start + x) * VP >= C:
        break
    start += 2 * x + F
    answer += 1"
ChatGPT,avatar,Java,Python,codeforces_30_A.py,"def solve():
    A, B, n = map(int, input().split())
    
    if A == 0:
        if B == 0:
            print(1)
        else:
            print(""No solution"")
        return
    
    if B % A != 0:
        print(""No solution"")
        return
    
    B //= A
    neg = B < 0
    
    if neg and n % 2 == 0:
        print(""No solution"")
        return
    
    if neg:
        B = -B
    
    for x in range(B+1):
        if x ** n == B:
            print(-x if neg else x)
            return
    
    print(""No solution"")

solve()  # Call the solve function","def solve():
    A, B, n = map(int, input().split())
    
    if A == 0:
        if B == 0:
            print(1)
        else:
            print(""No solution"")
        return
    
    if B % A != 0:
        print(""No solution"")
        return
    
    B //= A
    neg = B < 0
    
    if neg and n % 2 == 0:
        print(""No solution"")
        return
    
    if neg:
        B = -B
    
    for x in range(B+1):
        if x ** n == B:
            print(-x if neg else x)
            return
    
    print(""No solution"")

solve()  # Call the solve function"
ChatGPT,avatar,Java,Python,atcoder_ABC127_F.py,"import sys
import heapq

def main():
    t = int(sys.stdin.readline())
    pq_max = []
    pq_min = []
    sum_min = 0
    sum_max = 0
    sum_b = 0
    min_val = 0

    for _ in range(t):
        s = sys.stdin.readline().split()
        
        if s[0][0] == '2':
            ans = min_val * len(pq_min) - sum_min
            ans1 = min_val * len(pq_max) - sum_max
            sys.stdout.write(str(min_val) + "" "" + str(ans + ans1 + sum_b) + ""\n"")
        else:
            in_val = int(s[1])
            sum_b += int(s[2])
            
            if in_val > min_val:
                heapq.heappush(pq_max, in_val)
                sum_max += in_val
            else:
                heapq.heappush(pq_min, -in_val)
                sum_min -= in_val
            
            if len(pq_min) > len(pq_max):
                sum_max += pq_min[0]
                sum_min -= pq_min[0]
                heapq.heappush(pq_max, -heapq.heappop(pq_min))
            
            if len(pq_min) < len(pq_max):
                sum_max -= pq_max[0]
                sum_min += pq_max[0]
                heapq.heappush(pq_min, -heapq.heappop(pq_max))
            
            min_val = -pq_min[0]
    
    sys.stdout.flush()

if __name__ == ""__main__"":
    main()","import sys
import heapq

def main():
    t = int(sys.stdin.readline())
    pq_max = []
    pq_min = []
    sum_min = 0
    sum_max = 0
    sum_b = 0
    min_val = 0

    for _ in range(t):
        s = sys.stdin.readline().split()
        
        if s[0][0] == '2':
            ans = min_val * len(pq_min) - sum_min
            ans1 = min_val * len(pq_max) - sum_max
            sys.stdout.write(str(min_val) + "" "" + str(ans + ans1 + sum_b) + ""\n"")
        else:
            in_val = int(s[1])
            sum_b += int(s[2])
            
            if in_val > min_val:
                heapq.heappush(pq_max, in_val)
                sum_max += in_val
            else:
                heapq.heappush(pq_min, -in_val)
                sum_min -= in_val
            
            if len(pq_min) > len(pq_max):
                sum_max += pq_min[0]
                sum_min -= pq_min[0]
                heapq.heappush(pq_max, -heapq.heappop(pq_min))
            
            if len(pq_min) < len(pq_max):
                sum_max -= pq_max[0]
                sum_min += pq_max[0]
                heapq.heappush(pq_min, -heapq.heappop(pq_max))
            
            min_val = -pq_min[0]
    
    sys.stdout.flush()

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,atcoder_AGC011_C.py,"import sys

sys.setrecursionlimit(10**6)

class Main:
    def __init__(self):
        self.graph = []
        self.visited = []
        self.color = []
        self.one = 0
        self.bipartite = 0
        self.count = 0
        self.mujun = False

    def dfs(self, a, c):
        if self.visited[a]:
            if self.color[a] >= 0 and self.color[a] != c:
                self.mujun = True
            return 0
        self.visited[a] = True
        self.color[a] = c
        total = 1
        for b in self.graph[a]:
            total += self.dfs(b, 1 - c)
        return total

    def run(self):
        n, m = map(int, input().split())
        self.graph = [[] for _ in range(n)]
        for _ in range(m):
            u, v = map(int, input().split())
            self.graph[u - 1].append(v - 1)
            self.graph[v - 1].append(u - 1)
        self.visited = [False] * n
        self.color = [-1] * n
        self.one = 0
        self.bipartite = 0
        self.count = 0
        for i in range(n):
            if self.visited[i]:
                continue
            self.count += 1
            self.mujun = False
            kind = self.dfs(i, 0)
            if kind == 1:
                self.one += 1
            elif not self.mujun:
                self.bipartite += 1
        total = self.one * (2 * n - self.one)
        total += (self.count - self.one) * (self.count - self.one)
        total += self.bipartite * self.bipartite
        print(total)

if __name__ == ""__main__"":
    main = Main()
    main.run()","import sys

sys.setrecursionlimit(10**6)

class Main:
    def __init__(self):
        self.graph = []
        self.visited = []
        self.color = []
        self.one = 0
        self.bipartite = 0
        self.count = 0
        self.mujun = False

    def dfs(self, a, c):
        if self.visited[a]:
            if self.color[a] >= 0 and self.color[a] != c:
                self.mujun = True
            return 0
        self.visited[a] = True
        self.color[a] = c
        total = 1
        for b in self.graph[a]:
            total += self.dfs(b, 1 - c)
        return total

    def run(self):
        n, m = map(int, input().split())
        self.graph = [[] for _ in range(n)]
        for _ in range(m):
            u, v = map(int, input().split())
            self.graph[u - 1].append(v - 1)
            self.graph[v - 1].append(u - 1)
        self.visited = [False] * n
        self.color = [-1] * n
        self.one = 0
        self.bipartite = 0
        self.count = 0
        for i in range(n):
            if self.visited[i]:
                continue
            self.count += 1
            self.mujun = False
            kind = self.dfs(i, 0)
            if kind == 1:
                self.one += 1
            elif not self.mujun:
                self.bipartite += 1
        total = self.one * (2 * n - self.one)
        total += (self.count - self.one) * (self.count - self.one)
        total += self.bipartite * self.bipartite
        print(total)

if __name__ == ""__main__"":
    main = Main()
    main.run()"
ChatGPT,avatar,Java,Python,atcoder_ABC149_C.py,"import math

x = int(input())

if x != 2 and x % 2 == 0:
    x += 1

while True:
    sqrtNum = math.sqrt(x)
    for i in range(3, int(sqrtNum) + 1, 2):
        if x % i == 0:
            break
    if i > sqrtNum:
        break
    x += 2

print(x)","import math

x = int(input())

if x != 2 and x % 2 == 0:
    x += 1

while True:
    sqrtNum = math.sqrt(x)
    for i in range(3, int(sqrtNum) + 1, 2):
        if x % i == 0:
            break
    if i > sqrtNum:
        break
    x += 2

print(x)"
CodeGen,avatar,Python,Java,atcoder_ABC111_C.java,"public class atcoder_ABC111_C {
    public int findMinDifference(List<List<Integer>> timePoints) {
        int[] cnta = new int[100002 + 1];
        int[] cntb = new int[100002 + 1];
        int vala = 0;
        int vala1 = 0;
        int maxCnta = 0;
        int maxCnta1 = 0;
        for (List<Integer> timePoint : timePoints) {
            for (int i : timePoint) {
                cnta[i]++;
            }
        }
        for (int i = 0; i < cnta.length; i++) {
            if (maxCnta < cnta[i]) {
                vala = i;
                maxCnta = cnta[i];
            }
            if (maxCnta1 < cnta[i] && vala!= i) {
                maxCnta1 = cnta[i];
                vala1 = i;
            }
        }
        int valb = 0;
        int valb1 = 0;
        int maxCntb = 0;
        int maxCntb1 = 0;
        for (List<Integer> timePoint : timePoints) {
            for (int i : timePoint) {
                cntb[i]++;
            }
        }
        for (int i = 0; i < cntb.length; i++) {
            if (maxCntb < cntb[i]) {
                valb = i;
                maxCntb = cntb[i];
            }
            if (maxCntb1 < cntb[i] && valb!= i) {
                maxCntb1 = cntb[i];
                valb1 = i;
            }
        }
        if (valb!= vala) {
            int res = 0;
            for (int i = 0; i < cnta.length; i++) {
                if (i!= vala) {
                    res += 1;
                }
            }
            for (int i = 0; i < cntb.length; i++) {
                if (i!= valb) {
                    res += 1;
                }
            }
            return res;
        } else {
            int resa = 0;
            int resb = 0;
            resa1 = 0;
            resb1 = 0;
            for (int i = 0; i < cnta.length; i++) {
                if (i!= vala) {
                    resa += 1;
                }
                if (i!= vala1) {
                    resa1 += 1;
                }
            }
            for (int i = 0; i < cntb.length; i++) {
                if (i!= valb) {
                    resb += 1;
                }
                if (i!= valb1) {
                    resb1 += 1;
                }
            }
            return Math.min(resa + resb1, resa1 + resb);
        }
    }
}","public class Main {
    public int findMinDifference(List<List<Integer>> timePoints) {
        int[] cnta = new int[100002 + 1];
        int[] cntb = new int[100002 + 1];
        int vala = 0;
        int vala1 = 0;
        int maxCnta = 0;
        int maxCnta1 = 0;
        for (List<Integer> timePoint : timePoints) {
            for (int i : timePoint) {
                cnta[i]++;
            }
        }
        for (int i = 0; i < cnta.length; i++) {
            if (maxCnta < cnta[i]) {
                vala = i;
                maxCnta = cnta[i];
            }
            if (maxCnta1 < cnta[i] && vala!= i) {
                maxCnta1 = cnta[i];
                vala1 = i;
            }
        }
        int valb = 0;
        int valb1 = 0;
        int maxCntb = 0;
        int maxCntb1 = 0;
        for (List<Integer> timePoint : timePoints) {
            for (int i : timePoint) {
                cntb[i]++;
            }
        }
        for (int i = 0; i < cntb.length; i++) {
            if (maxCntb < cntb[i]) {
                valb = i;
                maxCntb = cntb[i];
            }
            if (maxCntb1 < cntb[i] && valb!= i) {
                maxCntb1 = cntb[i];
                valb1 = i;
            }
        }
        if (valb!= vala) {
            int res = 0;
            for (int i = 0; i < cnta.length; i++) {
                if (i!= vala) {
                    res += 1;
                }
            }
            for (int i = 0; i < cntb.length; i++) {
                if (i!= valb) {
                    res += 1;
                }
            }
            return res;
        } else {
            int resa = 0;
            int resb = 0;
            resa1 = 0;
            resb1 = 0;
            for (int i = 0; i < cnta.length; i++) {
                if (i!= vala) {
                    resa += 1;
                }
                if (i!= vala1) {
                    resa1 += 1;
                }
            }
            for (int i = 0; i < cntb.length; i++) {
                if (i!= valb) {
                    resb += 1;
                }
                if (i!= valb1) {
                    resb1 += 1;
                }
            }
            return Math.min(resa + resb1, resa1 + resb);
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC126_E.java,"public class atcoder_ABC126_E {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[][] edge = new int[n][];
        for (int i = 0; i < m; i++) {
            int x = in.nextInt() - 1;
            int y = in.nextInt() - 1;
            int z = in.nextInt() - 1;
            edge[x] = Arrays.copyOf(edge[x], edge[x].length + 1);
            edge[x][edge[x].length - 1] = y;
            edge[y] = Arrays.copyOf(edge[y], edge[y].length + 1);
            edge[y][edge[y].length - 1] = x;
        }
        int ans = 0;
        boolean[] used = new boolean[n];
        for (int i = 0; i < n; i++) {
            if (!used[i]) {
                ans++;
                Queue<Integer> queue = new LinkedList<>();
                queue.add(i);
                while (!queue.isEmpty()) {
                    int node = queue.poll();
                    used[node] = true;
                    for (int nextnode : edge[node]) {
                        if (!used[nextnode]) {
                            queue.add(nextnode);
                        }
                    }
                }
            }
        }
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[][] edge = new int[n][n];
        for (int i = 0; i < m; i++) {
            int x = in.nextInt() - 1;
            int y = in.nextInt() - 1;
            int z = in.nextInt() - 1;
            edge[x] = Arrays.copyOf(edge[x], edge[x].length + 1);
            edge[x][edge[x].length - 1] = y;
            edge[y] = Arrays.copyOf(edge[y], edge[y].length + 1);
            edge[y][edge[y].length - 1] = x;
        }
        int ans = 0;
        boolean[] used = new boolean[n];
        for (int i = 0; i < n; i++) {
            if (!used[i]) {
                ans++;
                Queue<Integer> queue = new LinkedList<>();
                queue.add(i);
                while (!queue.isEmpty()) {
                    int node = queue.poll();
                    used[node] = true;
                    for (int nextnode : edge[node]) {
                        if (!used[nextnode]) {
                            queue.add(nextnode);
                        }
                    }
                }
            }
        }
        System.out.println(ans);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC150_C.java,"public class atcoder_ABC150_C {
    public int findPermutation(int n, int[] p, int[] q) {
        int[] orig = new int[n];
        for (int i = 0; i < n; i++) {
            orig[i] = i + 1;
        }
        int pn = Arrays.binarySearch(orig, p);
        int qn = Arrays.binarySearch(orig, q);
        return Math.abs(pn - qn);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] p = new int[n];
        int[] q = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = scanner.nextInt();
        }
        for (int i = 0; i < n; i++) {
            q[i] = scanner.nextInt();
        }
        System.out.println(findPermutation(n, p, q));
    }
    public static int findPermutation(int n, int[] p, int[] q) {
        int[] orig = new int[n];
        for (int i = 0; i < n; i++) {
            orig[i] = i + 1;
        }
        int pn = Arrays.binarySearch(orig, p);
        int qn = Arrays.binarySearch(orig, q);
        return Math.abs(pn - qn);
    }
}"
CodeGen,avatar,Python,Java,codeforces_55_B.java,"public class codeforces_55_B {
    public int findMin(int[] nums) {
        if (nums.length == 1) return nums[0];
        int[] ans = new int[1];
        ans[0] = nums[0];
        int i = 1;
        while (i < nums.length) {
            int j = i + 1;
            int k = i + 2;
            while (j < nums.length && nums[j] == -1) j++;
            while (k < nums.length && nums[k] == -1) k++;
            if (j < nums.length && nums[j] < nums[i]) {
                ans[0] = nums[i];
                i = j;
            } else if (k < nums.length && nums[k] < nums[i]) {
                ans[0] = nums[i];
                i = k;
            } else {
                int s = nums[i];
                nums[i] = -1;
                int t = nums[k];
                nums[k] = -1;
                if (operations[i] == '+') {
                    nums[k] = s + t;
                } else if (operations[i] == '*') {
                    nums[k] = s * t;
                }
                if (i == 2 && nums[k] < ans[0]) {
                    ans[0] = nums[k];
                }
                i++;
            }
        }
        return ans[0];
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String line = scanner.nextLine();
        String[] numbers = line.split("" "");
        int[] nums = new int[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            nums[i] = Integer.parseInt(numbers[i]);
        }
        System.out.println(findMin(nums));
    }
    public static int findMin(int[] nums) {
        if (nums.length == 1) return nums[0];
        int[] ans = new int[1];
        ans[0] = nums[0];
        int i = 1;
        while (i < nums.length) {
            int j = i + 1;
            int k = i + 2;
            while (j < nums.length && nums[j] == -1) j++;
            while (k < nums.length && nums[k] == -1) k++;
            if (j < nums.length && nums[j] < nums[i]) {
                ans[0] = nums[i];
                i = j;
            } else if (k < nums.length && nums[k] < nums[i]) {
                ans[0] = nums[i];
                i = k;
            } else {
                int s = nums[i];
                nums[i] = -1;
                int t = nums[k];
                nums[k] = -1;
                if (operations[i] == '+') {
                    nums[k] = s + t;
                } else if (operations[i] == '*') {
                    nums[k] = s * t;
                }
                if (i == 2 && nums[k] < ans[0]) {
                    ans[0] = nums[k];
                }
                i++;
            }
        }
        return ans[0];
    }
}"
CodeGen,avatar,Python,Java,codeforces_421_A.java,"public class codeforces_421_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int a = in.nextInt();
        int b = in.nextInt();
        int[] lista = new int[n];
        int[] listb = new int[n];
        for(int i = 0; i < n; i++){
            lista[i] = in.nextInt();
        }
        for(int i = 0; i < n; i++){
            listb[i] = in.nextInt();
        }
        for(int i = 0; i < n; i++){
            if(i+1 in lista){
                System.out.print(1);
            }else{
                System.out.print(2);
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int a = in.nextInt();
        int b = in.nextInt();
        int[] lista = new int[a];
        int[] listb = new int[b];
        for(int i = 0; i < a; i++){
            lista[i] = in.nextInt();
        }
        for(int i = 0; i < b; i++){
            listb[i] = in.nextInt();
        }
        for(int i = 0; i < n; i++){
            boolean contain = false;
            for(int j = 0; j < a; j++){
                if(i+1 == lista[j]) {
                    contain = true;
                    break;
                }
            }
            if(contain){
                System.out.print(1);
            }else{
                System.out.print(2);
            }
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC019_A.java,"import java.util.*;
import java.math.*;
import java.io.*;
import java.text.*;
import java.awt.Point;

import static java.lang.Math.*;

public class atcoder_AGC019_A {
	static final Scanner in = new Scanner(System.in);
	static final PrintWriter out = new PrintWriter(System.out);

	public static void main(String[] args) throws Exception {
		int n = in.nextInt();
		int[] q = new int[4];
		int[] h = new int[2];
		int[] s = new int[2];
		int[] d = new int[2];
		for (int i = 0; i < 4; i++) {
			q[i] = in.nextInt();
		}
		for (int i = 0; i < 2; i++) {
			h[i] = in.nextInt();
		}
		for (int i = 0; i < 2; i++) {
			s[i] = in.nextInt();
		}
		for (int i = 0; i < 2; i++) {
			d[i] = in.nextInt();
		}
		int best1L = min(q * 4, h * 2, s);
		int best2L = min(d, best1L * 2);
		if (n % 2 == 0) {
			out.println(best2L * (n / 2) + best1L);
		} else {
			out.println(best2L * (n / 2) + best1L);
		}
	}
}","import java.util.*;
import java.math.*;
import java.io.*;
import java.text.*;
import java.awt.Point;

import static java.lang.Math.*;

public class Main {
	static final Scanner in = new Scanner(System.in);
	static final PrintWriter out = new PrintWriter(System.out);

	public static void main(String[] args) throws Exception {
		int n = in.nextInt();
		int[] q = new int[4];
		int[] h = new int[2];
		int[] s = new int[2];
		int[] d = new int[2];
		for (int i = 0; i < 4; i++) {
			q[i] = in.nextInt();
		}
		for (int i = 0; i < 2; i++) {
			h[i] = in.nextInt();
		}
		for (int i = 0; i < 2; i++) {
			s[i] = in.nextInt();
		}
		for (int i = 0; i < 2; i++) {
			d[i] = in.nextInt();
		}
		int best1L = Math.min(Math.min(min(q) * 4, min(h) * 2), min(s));
		int best2L = Math.min(min(d), best1L * 2);
		if (n % 2 == 0) {
			out.println(best2L * (n / 2) + best1L);
		} else {
			out.println(best2L * (n / 2) + best1L);
		}
	}

	public static int min(int[] arr) {
		int minVal = arr[0];
		for (int i = 1; i < arr.length; i++) {
			if (arr[i] < minVal) {
				minVal = arr[i];
			}
		}
		return minVal;
	}
}"
CodeGen,avatar,Python,Java,codeforces_373_B.java,"public class codeforces_373_B {
    public int solution(int[] A) {
        int lo = 0;
        int hi = 1e18;
        int md;
        int c;
        while (hi - lo > 1) {
            md = (lo + hi) / 2;
            c = sum(A.length + md - 1) - sum(A.length - 1);
            if (c * k <= w) lo = md;
            else hi = md;
        }
        return lo;
    }
    public int sum(int n) {
        int ret = 0;
        int pw = 10;
        int len = 1;
        while (1 == 1) {
            int cur = min(pw - 1, n);
            int prev = pw / 10;
            ret += (cur - prev + 1) * len;
            if (pw - 1 >= n) break;
            len += 1;
            pw *= 10;
        }
        return ret;
    }
}","public class Main {
    public int solution(int[] A) {
        int lo = 0;
        int hi = 1e18;
        int md;
        int c;
        while (hi - lo > 1) {
            md = (lo + hi) / 2;
            c = sum(A.length + md - 1) - sum(A.length - 1);
            if (c * k <= w) lo = md;
            else hi = md;
        }
        return lo;
    }
    public int sum(int n) {
        int ret = 0;
        int pw = 10;
        int len = 1;
        while (1 == 1) {
            int cur = min(pw - 1, n);
            int prev = pw / 10;
            ret += (cur - prev + 1) * len;
            if (pw - 1 >= n) break;
            len += 1;
            pw *= 10;
        }
        return ret;
    }
}"
CodeGen,avatar,Python,Java,codeforces_70_B.java,"import java.util.Scanner;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.lang.String;
import java.lang.StringBuilder;
import java.lang.StringBuffer;
import java.lang.StringBuilder;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java","import java.util.Scanner;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.lang.String;
import java.lang.StringBuilder;
import java.lang.StringBuffer;
import java.lang.StringBuilder;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java.lang.String;
import java"
CodeGen,avatar,Python,Java,codeforces_79_A.java,"public class codeforces_79_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        int y = in.nextInt();
        int a = 0;
        while (x >= 0 && y >= 22 || x >= 1 && y >= 12 || x >= 2 && y >= 2) {
            if (a) {
                if (y >= 22) {
                    y -= 22;
                } else if (x >= 1 && y >= 12) {
                    x -= 1;
                    y -= 12;
                } else {
                    x -= 2;
                    y -= 2;
                }
            } else {
                if (x >= 2 && y >= 2) {
                    x -= 2;
                    y -= 2;
                } else if (x >= 1 && y >= 12) {
                    x -= 1;
                    y -= 12;
                } else {
                    y -= 22;
                }
            }
            a = 1 - a;
        }
        System.out.println((a == 0? ""Hanako"" : ""Ciel"") + (1 - a));
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        int y = in.nextInt();
        int a = 0;
        while (x >= 0 && y >= 22 || x >= 1 && y >= 12 || x >= 2 && y >= 2) {
            if (a != 0) {
                if (y >= 22) {
                    y -= 22;
                } else if (x >= 1 && y >= 12) {
                    x -= 1;
                    y -= 12;
                } else {
                    x -= 2;
                    y -= 2;
                }
            } else {
                if (x >= 2 && y >= 2) {
                    x -= 2;
                    y -= 2;
                } else if (x >= 1 && y >= 12) {
                    x -= 1;
                    y -= 12;
                } else {
                    y -= 22;
                }
            }
            a = 1 - a;
        }
        System.out.println((a == 0? ""Hanako"" : ""Ciel""));
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC151_A.java,"public class atcoder_ABC151_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String c = in.next();
        String result = solve(c);
        if (result!= null) {
            System.out.println(result);
        } else {
            System.out.println(""No result"");
        }
    }

    public static String solve(String c) {
        String a = ""abcdefghijklmnopqrstuvwxyz"";
        int i = a.indexOf(c);
        return a.substring(i+1);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String c = in.next();
        char result = solve(c);
        System.out.println(result);
    }

    public static char solve(String c) {
        String a = ""abcdefghijklmnopqrstuvwxyz"";
        int i = a.indexOf(c);
        return a.charAt(i+1);
    }
}"
CodeGen,avatar,Python,Java,codeforces_58_B.java,"public class codeforces_58_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        for (int i = n; i > 0; i--) {
            if (n % i == 0) {
                System.out.print(i + "" "");
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        for (int i = n; i > 0; i--) {
            if (n % i == 0) {
                n = i;
                System.out.print(i + "" "");
            }
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC162_D.java,"import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;

public class atcoder_ABC162_D {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String s = in.next();
        in.close();
        List<String> arr = new ArrayList<String>();
        for (int i = 0; i < n; i++) {
            arr.add(in.next());
        }
        int rNum = arr.stream().filter(s -> s.equals(""R"")).count();
        int gNum = arr.stream().filter(s -> s.equals(""G"")).count();
        int bNum = arr.stream().filter(s -> s.equals(""B"")).count();
        int sum = 0;
        for (int step = 1; step <= Math.ceil(n / 2); step++) {
            for (int i = n - 2 * step; i < n; i++) {
                String s = arr.get(i) + arr.get(i + step) + arr.get(i + step * 2);
                if (s.equals(""RGB"") || s.equals(""RBG"") || s.equals(""BGR"") || s.equals(""BRG"") || s.equals(""GBR"") || s.equals(""GRB"")) {
                    sum++;
                }
            }
        }
        System.out.println(rNum * gNum * bNum - sum);
    }
}","import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String s = in.next();
        List<String> arr = new ArrayList<String>();
        for (int i = 0; i < n; i++) {
            arr.add(in.next());
        }
        long rNum = arr.stream().filter(s1 -> s1.equals(""R"")).count();
        long gNum = arr.stream().filter(s1 -> s1.equals(""G"")).count();
        long bNum = arr.stream().filter(s1 -> s1.equals(""B"")).count();
        int sum = 0;
        for (int step = 1; step <= Math.ceil(n / 2); step++) {
            for (int i = n - 2 * step; i < n; i++) {
                s = arr.get(i) + arr.get(i + step) + arr.get(i + step * 2);
                if (s.equals(""RGB"") || s.equals(""RBG"") || s.equals(""BGR"") || s.equals(""BRG"") || s.equals(""GBR"") || s.equals(""GRB"")) {
                    sum++;
                }
            }
        }
        System.out.println((long) rNum * gNum * bNum - sum);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC136_B.java,"public class atcoder_ABC136_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int i = 1;
        int ans = 0;
        while (10 ** i <= n) {
            ans += (10 ** i - 10 ** (i - 1));
            i += 2;
        }
        ans += Math.max(0, n - 10 ** (i - 1) + 1);
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int i = 1;
        int ans = 0;
        while (Math.pow(10, i) <= n) {
            ans += (Math.pow(10, i) - Math.pow(10, (i - 1)));
            i += 2;
        }
        ans += Math.max(0, n - Math.pow(10, i - 1) + 1);
        System.out.println(ans);
    }
}"
CodeGen,avatar,Python,Java,codeforces_583_B.java,"public class codeforces_583_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int currentLevel = 0;
        int counter = 0;
        int counterTurns = -1;
        while (counter < n) {
            counterTurns += 1;
            for (int i = 0; i < n; i++) {
                if (a[i]!= -1 && a[i] <= counter) {
                    counter += 1;
                    a[i] = -1;
                }
            }
            a.reverse();
        }
        System.out.println(counterTurns);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int currentLevel = 0;
        int counter = 0;
        int counterTurns = -1;
        while (counter < n) {
            counterTurns += 1;
            for (int i = 0; i < n; i++) {
                if (a[i]!= -1 && a[i] <= counter) {
                    counter += 1;
                    a[i] = -1;
                }
            }
            reverseArray(a);
        }
        System.out.println(counterTurns);
    }
    private static void reverseArray(int[] a) {
        int left = 0;
        int right = a.length - 1;
        while (left < right) {
            int temp = a[left];
            a[left] = a[right];
            a[right] = temp;
            left++;
            right--;
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_146_A.java,"public class codeforces_146_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] number = new int[n];
        for(int number_i=0; number_i < n; number_i++){
            number[number_i] = in.nextInt();
        }
        int h1 = 0;
        int h2 = 0;
        int x = 0;
        for(int i=0; i < n; i++){
            if(number[i]!= 4 && number[i]!= 7){
                System.out.println(""NO"");
                x++;
                break;
            }
            if(i < n/2){
                h1 += number[i];
            }else{
                h2 += number[i];
            }
        }
        if(x == 0){
            if(h1 == h2){
                System.out.println(""YES"");
            }else{
                System.out.println(""NO"");
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        in.nextLine();
        String line = in.nextLine();
        String[] numbers = line.split("""");
        int[] number = new int[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            number[i] = Integer.parseInt(numbers[i]);
        }
        int h1 = 0;
        int h2 = 0;
        int x = 0;
        for(int i=0; i < n; i++){
            if(number[i]!= 4 && number[i]!= 7){
                System.out.println(""NO"");
                x++;
                break;
            }
            if(i < n/2){
                h1 += number[i];
            }else{
                h2 += number[i];
            }
        }
        if(x == 0){
            if(h1 == h2){
                System.out.println(""YES"");
            }else{
                System.out.println(""NO"");
            }
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC070_B.java,"public class atcoder_ABC070_B {
    public int maxProfit(int[] prices) {
        int len = prices.length;
        if (len < 2) return 0;
        int[] A = new int[len];
        for (int i = 0; i < len; i++) {
            A[i] = prices[i];
        }
        A = Arrays.sort(A);
        if (A[1] <= A[2] || A[3] <= A[0]) return 0;
        return A[2] - A[1];
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int[] prices = new int[4];
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split("" "");
        for (int i = 0; i < 4; i++) {
            prices[i] = Integer.parseInt(input[i]);
        }
        System.out.println(maxProfit(prices));
    }
    public static int maxProfit(int[] prices) {
        
        if (prices[1] <= prices[2] || prices[3] <= prices[0]) {
            return 0;
        } else {
            Arrays.sort(prices);
            return prices[2] - prices[1];
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_404_A.java,"public class codeforces_404_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] s = new int[n][n];
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                s[i][j] = in.nextInt();
            }
        }
        int flag = 0;
        int[] d1 = new int[n];
        int[] d2 = new int[n];
        Set<Integer> rem = new HashSet<Integer>();
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if(i == j){
                    d1[i] = s[i][j];
                }
                if(i == n - j - 1){
                    d2[i] = s[i][j];
                }
                if(i!= j && i!= n - j - 1){
                    rem.add(s[i][j]);
                }
            }
        }
        if(rem.size()!= 1){
            System.out.println(""NO"");
        }
        else if(d1!= d2){
            System.out.println(""NO"");
        }
        else if(rem.size()!= 1){
            System.out.println(""NO"");
        }
        else if(rem.equals(new HashSet<Integer>(Arrays.asList(d1)))){
            System.out.println(""NO"");
        }
        else{
            System.out.println(""YES"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] s = new int[n][n];
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                s[i][j] = in.nextInt();
            }
        }
        int flag = 0;
        int[] d1 = new int[n];
        int[] d2 = new int[n];
        Set<Integer> rem = new HashSet<Integer>();
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if(i == j){
                    d1[i] = s[i][j];
                }
                if(i == n - j - 1){
                    d2[i] = s[i][j];
                }
                if(i!= j && i!= n - j - 1){
                    rem.add(s[i][j]);
                }
            }
        }
        if(rem.size()!= 1){
            System.out.println(""NO"");
        }
        else if(d1!= d2){
            System.out.println(""NO"");
        }
        else if(rem.size()!= 1){
            System.out.println(""NO"");
        }
        else if(rem.equals(new HashSet<Integer>(Arrays.asList(d1)))){
            System.out.println(""NO"");
        }
        else{
            System.out.println(""YES"");
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC145_B.java,"public class atcoder_ABC145_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String s = in.next();
        if (n % 2!= 0) {
            System.out.println(""No"");
        } else if (s.substring(0, n / 2).equals(s.substring(n / 2))) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String s = in.next();
        if (n % 2!= 0) {
            System.out.println(""No"");
        } else if (s.substring(0, n / 2).equals(s.substring(n / 2))) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_272_B.java,"public class codeforces_272_B {
    public static int nPairsWithCommonFX(String[] sequence) {
        int storage[] = new int[1000];
        int FXs[] = new int[1000];
        int n = 0;
        for (String value : sequence) {
            int y = f(Integer.parseInt(value));
            if (storage[y] == 0) {
                storage[y] = 1;
                FXs[n++] = y;
            } else {
                storage[y]++;
                if (storage[y] > 1) {
                    storage[y]--;
                }
            }
        }
        return (n * n - n) / 2;
    }
    public static int f(int n) {
        int y = 1;
        while (n!= 1) {
            if (n % 2) {
                y++;
            }
            n /= 2;
        }
        return y;
    }
    public static void main(String[] args) {
        System.out.println(nPairsWithCommonFX(new String[]{""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9"",""10"",""11"",""12"",""13"",""14"",""15"",""16"",""17"",""18"",""19"",""20"",""21"",""22"",""23"",""24"",""25"",""26"",""27"",""28"",""29"",""30"",""31"",""32"",""33"",""34"",""35"",""36"",""37"",""38"",""39"",""40"",""41"",""42"",""43"",""44"",""45"",""46"",""47"",""48"",""49"",""50"",""51"",""52"",""53"",""54"",""55"",""56"",""57"",""58"",""59"",""60"",""61"",""62"",""63"",""64"",""65"",""66"",""67"",""68"",""69"",""70"",""71"",""72"",""73"",""74"",""75"",""76"",""77"",""78"",""79"",""80"",""81"",""82"",""83"",""84"",""85"",""86"",""87"",""88"",""89"",""90"",""91"",""92"",""93"",""94"",""95"",""96"",""97"",""98"",""99"",""100""}));
    }
}","import java.util.*;

public class Main {
    public static int nPairsWithCommonFX(String[] sequence) {
        int storage[] = new int[1000];
        int FXs[] = new int[1000];
        int n = 0;
        for (String value : sequence) {
            int y = f(Integer.parseInt(value));
            if (storage[y] == 0) {
                storage[y] = 1;
                FXs[n++] = y;
            } else {
                storage[y]++;
                if (storage[y] > 1) {
                    storage[y]--;
                }
            }
        }
        return (n * n - n) / 2;
    }
    public static int f(int n) {
        int y = 1;
        while (n!= 1) {
            if (n % 2) {
                y++;
            }
            n /= 2;
        }
        return y;
    }
    public static void main(String[] args) {
        System.out.println(nPairsWithCommonFX(new String[]{""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9"",""10"",""11"",""12"",""13"",""14"",""15"",""16"",""17"",""18"",""19"",""20"",""21"",""22"",""23"",""24"",""25"",""26"",""27"",""28"",""29"",""30"",""31"",""32"",""33"",""34"",""35"",""36"",""37"",""38"",""39"",""40"",""41"",""42"",""43"",""44"",""45"",""46"",""47"",""48"",""49"",""50"",""51"",""52"",""53"",""54"",""55"",""56"",""57"",""58"",""59"",""60"",""61"",""62"",""63"",""64"",""65"",""66"",""67"",""68"",""69"",""70"",""71"",""72"",""73"",""74"",""75"",""76"",""77"",""78"",""79"",""80"",""81"",""82"",""83"",""84"",""85"",""86"",""87"",""88"",""89"",""90"",""91"",""92"",""93"",""94"",""95"",""96"",""97"",""98"",""99"",""100""}));
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC128_C.java,"public class atcoder_ABC128_C {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] a = new int[m];
        for(int a_i=0; a_i < m; a_i++){
            String[] a_temp = in.next().split("" "");
            a[a_i] = Integer.parseInt(a_temp[1]);
        }
        int[] p = new int[2];
        p[0] = in.nextInt();
        p[1] = in.nextInt();
        int[] q = new int[n-1];
        for(int i=0; i < n-1; i++){
            String[] q_temp = in.next().split("" "");
            q[i] = Integer.parseInt(q_temp[1]);
        }
        int[] v = new int[n-1];
        for(int i=0; i < n-1; i++){
            v[i] = in.nextInt();
        }
        int ans = 0;
        for(int i=0; i < n-1; i++){
            int[] s = new int[i+1];
            for(int j=0; j < i+1; j++){
                s[j] = q[j];
            }
            for(int j=0; j < m; j++){
                if(s[0] == a[j]){
                    s[0] = 0;
                    s[i] = v[i];
                    break;
                }
            }
            for(int j=0; j < m; j++){
                if(s[i] == a[j]){
                    s[i] = 0;
                    s[0] = v[0];
                    break;
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] a = new int[m];
        for(int a_i=0; a_i < m; a_i++){
            String[] a_temp = in.next().split("" "");
            a[a_i] = Integer.parseInt(a_temp[1]);
        }
        int[] p = new int[2];
        p[0] = in.nextInt();
        p[1] = in.nextInt();
        int[] q = new int[n-1];
        for(int i=0; i < n-1; i++){
            String[] q_temp = in.next().split("" "");
            q[i] = Integer.parseInt(q_temp[1]);
        }
        int[] v = new int[n-1];
        for(int i=0; i < n-1; i++){
            v[i] = in.nextInt();
        }
        int ans = 0;
        for(int i=0; i < n-1; i++){
            int[] s = new int[i+1];
            for(int j=0; j < i+1; j++){
                s[j] = q[j];
            }
            for(int j=0; j < m; j++){
                if(s[0] == a[j]){
                    s[0] = 0;
                    s[i] = v[i];
                    break;
                }
            }
            for(int j=0; j < m; j++){
                if(s[i] == a[j]){
                    s[i] = 0;
                    s[0] = v[0];
                    break;
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[0];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k=0; k < m; k++){
                    if(s[j] == a[k]){
                        s[j] = 0;
                        s[i] = v[i];
                        break;
                    }
                }
            }
            for(int j=0; j < i+1; j++){
                if(s[j] == 0){
                    break;
                }
                for(int k="
CodeGen,avatar,Python,Java,atcoder_ABC107_C.java,"public class atcoder_ABC107_C {
    public int minSubArrayLen(int s, int[] nums) {
        int[] l = new int[nums.length];
        int[] r = new int[nums.length];
        int p = 0;
        int m = 0;
        int ans = 10 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 *","public class Main {
    public int minSubArrayLen(int s, int[] nums) {
        int[] l = new int[nums.length];
        int[] r = new int[nums.length];
        int p = 0;
        int m = 0;
        int ans = 10 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 *"
CodeGen,avatar,Python,Java,codeforces_387_B.java,"public class codeforces_387_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] round_complexity = new int[n];
        int[] george_complexity = new int[m];
        for (int i = 0; i < n; i++) {
            round_complexity[i] = in.nextInt();
        }
        for (int j = 0; j < m; j++) {
            george_complexity[j] = in.nextInt();
        }
        int i = 0, j = 0;
        while (i < n && j < m) {
            i += 1 * (round_complexity[i] <= george_complexity[j]);
            j += 1;
        }
        System.out.println(n - i);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] round_complexity = new int[n];
        int[] george_complexity = new int[m];
        for (int i = 0; i < n; i++) {
            round_complexity[i] = in.nextInt();
        }
        for (int j = 0; j < m; j++) {
            george_complexity[j] = in.nextInt();
        }
        int i = 0, j = 0;
        while (i < n && j < m) {
            i += 1 * ((round_complexity[i] <= george_complexity[j]) ? 1 : 0);
            j += 1;
        }
        System.out.println(n - i);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC126_D.java,"import java.util.*;
import java.lang.*;
import java.io.*;

class Node {
    int val;
    boolean color;
    List<Node> a;
    public Node() {
        a = new ArrayList<Node>();
    }
}
class Solution {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        Node[] nodes = new Node[n];
        for(int i=0; i<n; i++){
            nodes[i] = new Node();
        }
        for(int i=0; i<n-1; i++){
            int u = in.nextInt();
            int v = in.nextInt();
            int w = in.nextInt();
            nodes[u-1].a.add(new Node[]{nodes[v-1], w});
            nodes[v-1].a.add(new Node[]{nodes[u-1], w});
        }
        int root = in.nextInt();
        nodes[root-1].color = true;
        boolean[] visited = new boolean[n];
        for(int i=0; i<n; i++){
            if(nodes[i].color == true)
                System.out.print(1);
            else
                System.out.print(0);
        }
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;

class Node {
    int val;
    boolean color;
    List<Node> a;
    public Node() {
        a = new ArrayList<Node>();
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        Node[] nodes = new Node[n];
        for(int i=0; i<n; i++){
            nodes[i] = new Node();
        }
        for(int i=0; i<n-1; i++){
            int u = in.nextInt();
            int v = in.nextInt();
            int w = in.nextInt();
            nodes[u-1].a.add(new Node[]{nodes[v-1], w});
            nodes[v-1].a.add(new Node[]{nodes[u-1], w});
        }
        int root = in.nextInt();
        nodes[root-1].color = true;
        boolean[] visited = new boolean[n];
        for(int i=0; i<n; i++){
            if(nodes[i].color == true)
                System.out.print(1);
            else
                System.out.print(0);
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_231_A.java,"public class codeforces_231_A {
    public int findMaxForm ( int [ ] forms, int n ) {
        int max = 0;
        int c = 0;
        for ( int i = 0; i < n; i++ ) {
            int [] l1 = new int [ forms[ i ] ];
            for ( int j = 0; j < forms[ i ]; j++ ) {
                l1[ j ] = Integer.parseInt ( input ( ) );
            }
            if ( sum ( l1 ) > 1 ) {
                c = c + 1;
            }
        }
        return c;
    }
    public int sum ( int [] l1 ) {
        int sum = 0;
        for ( int i = 0; i < l1.length; i++ ) {
            sum = sum + l1[ i ];
        }
        return sum;
    }
}","public class Main {
    public int findMaxForm ( int [ ] forms, int n ) {
        int max = 0;
        int c = 0;
        for ( int i = 0; i < n; i++ ) {
            int [] l1 = new int [ forms[ i ] ];
            for ( int j = 0; j < forms[ i ]; j++ ) {
                l1[ j ] = Integer.parseInt ( input ( ) );
            }
            if ( sum ( l1 ) > 1 ) {
                c = c + 1;
            }
        }
        return c;
    }
    public int sum ( int [] l1 ) {
        int sum = 0;
        for ( int i = 0; i < l1.length; i++ ) {
            sum = sum + l1[ i ];
        }
        return sum;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC158_A.java,"public class atcoder_ABC158_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.nextLine();
        String result = ""Yes"";
        if (s.contains(""A"") && s.contains(""B"")) {
            result = ""Yes"";
        } else {
            result = ""No"";
        }
        System.out.println(result);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.nextLine();
        String result = ""Yes"";
        if (s.contains(""A"") && s.contains(""B"")) {
            result = ""Yes"";
        } else {
            result = ""No"";
        }
        System.out.println(result);
    }
}"
CodeGen,avatar,Python,Java,codeforces_49_A.java,"public class codeforces_49_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String a = in.next();
        String[] vo = {""a"",""e"",""i"",""o"",""u"",""y"",""A"",""E"",""I"",""O"",""U"",""Y""};
        for(int i=0;i<a.length()-1;i++){
            if(a.charAt(i)==''|| a.charAt(i)=='?') continue;
            else if(a.charAt(i) in vo) System.out.println(""YES"");
            else System.out.println(""NO"");
            break;
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String a = in.nextLine();
        String[] vo = {""a"",""e"",""i"",""o"",""u"",""y"",""A"",""E"",""I"",""O"",""U"",""Y""};
        for (int i=a.length()-1; i>=0; i--) {
            if(a.charAt(i)==' '|| a.charAt(i)=='?') continue;
            else if(contain(vo, a.charAt(i))) System.out.println(""YES"");
            else System.out.println(""NO"");
            break;
        }
    }
    public static boolean contain(String[] vo, char c) {
        for (String v : vo) {
            if (v.charAt(0) == c) {
                return true;
            }
        }
        return false;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC051_A.java,"public class atcoder_ABC051_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.nextLine();
        String[] str = S.split("" "");
        int n = str.length;
        int[] arr = new int[n];
        for(int i=0;i<n;i++){
            arr[i] = Integer.parseInt(str[i]);
        }
        int[] arr2 = new int[n];
        for(int i=0;i<n;i++){
            arr2[i] = arr[i];
        }
        int[] arr3 = new int[n];
        for(int i=0;i<n;i++){
            arr3[i] = arr2[i];
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.nextLine();
        String[] str = S.split("" "");
        int n = str.length;
        int[] arr = new int[n];
        for(int i=0;i<n;i++){
            arr[i] = Integer.parseInt(str[i]);
        }
        int[] arr2 = new int[n];
        for(int i=0;i<n;i++){
            arr2[i] = arr[i];
        }
        int[] arr3 = new int[n];
        for(int i=0;i<n;i++){
            arr3[i] = arr2[i];
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]*2;
        }
        for(int i=0;i<n;i++){
            arr3[i] = arr3[i]/2"
CodeGen,avatar,Python,Java,atcoder_ABC178_A.java,"import java.util.Scanner;

public class atcoder_ABC178_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        System.out.println(1 if a == 0 else 0);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        System.out.println(a == 0 ? 1 : 0);
    }
}"
CodeGen,avatar,Python,Java,codeforces_265_B.java,"public class codeforces_265_B {
    public int findLengthOfLastWord(String s) {
        int ans = 0;
        int last = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) =='') {
                last = i;
            }
            if (s.charAt(i)!='') {
                ans += i - last;
                last = i;
            }
        }
        return ans + 1;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        System.out.println(findLengthOfLastWord(s));
    }
    public static int findLengthOfLastWord(String s) {
        int ans = 0;
        int last = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) ==' ') {
                last = i;
            }
            if (s.charAt(i)!=' ') {
                ans += i - last;
                last = i;
            }
        }
        return ans + 1;
    }
}"
CodeGen,avatar,Python,Java,codeforces_203_B.java,"public class codeforces_203_B {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] res = new int[numCourses];
        int[] inDegree = new int[numCourses];
        int[] outDegree = new int[numCourses];
        for (int i = 0; i < numCourses; i++) {
            inDegree[i] = 0;
            outDegree[i] = 0;
        }
        for (int i = 0; i < prerequisites.length; i++) {
            int src = prerequisites[i][0];
            int dst = prerequisites[i][1];
            inDegree[src]++;
            outDegree[dst]++;
        }
        boolean[] visited = new boolean[numCourses];
        for (int i = 0; i < numCourses; i++) {
            if (inDegree[i] == 0) {
                dfs(i, visited, inDegree, outDegree);
            }
        }
        for (int i = 0; i < numCourses; i++) {
            res[i] = visited[i]? i : -1;
        }
        return res;
    }
    private void dfs(int src, boolean[] visited, int[] inDegree, int[] outDegree) {
        visited[src] = true;
        for (int i = 0; i < outDegree[src]; i++) {
            int dst = prerequisites[i][1];
            if (!visited[dst]) {
                dfs(dst, visited, inDegree, outDegree);
            }
        }
    }
}","public class Main {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] res = new int[numCourses];
        int[] inDegree = new int[numCourses];
        int[] outDegree = new int[numCourses];
        for (int i = 0; i < numCourses; i++) {
            inDegree[i] = 0;
            outDegree[i] = 0;
        }
        for (int i = 0; i < prerequisites.length; i++) {
            int src = prerequisites[i][0];
            int dst = prerequisites[i][1];
            inDegree[src]++;
            outDegree[dst]++;
        }
        boolean[] visited = new boolean[numCourses];
        for (int i = 0; i < numCourses; i++) {
            if (inDegree[i] == 0) {
                dfs(i, visited, inDegree, outDegree);
            }
        }
        for (int i = 0; i < numCourses; i++) {
            res[i] = visited[i]? i : -1;
        }
        return res;
    }
    private void dfs(int src, boolean[] visited, int[] inDegree, int[] outDegree) {
        visited[src] = true;
        for (int i = 0; i < outDegree[src]; i++) {
            int dst = prerequisites[i][1];
            if (!visited[dst]) {
                dfs(dst, visited, inDegree, outDegree);
            }
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_306_A.java,"public class codeforces_306_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int q = n / m;
        int r = n % m;
        int[] a = new int[m];
        for (int i = 0; i < m; i++) {
            a[i] = q;
        }
        for (int i = 0; i < r; i++) {
            a[i] += 1;
        }
        for (int i = 0; i < m; i++) {
            System.out.print(a[i]);
            if (i!= m - 1) {
                System.out.print("" "");
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int q = n / m;
        int r = n % m;
        int[] a = new int[m];
        for (int i = 0; i < m; i++) {
            a[i] = q;
        }
        for (int i = 0; i < r; i++) {
            a[i] += 1;
        }
        for (int i = 0; i < m; i++) {
            System.out.print(a[i]);
            if (i!= m - 1) {
                System.out.print("" "");
            }
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC004_B.java,"public class atcoder_AGC004_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int x = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[][] b = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                b[i][j] = Integer.MAX_VALUE;
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int m = a[i];
                for (int k = 0; k < n; k++) {
                    if (k < 0) {
                        k += n;
                    }
                    m = Math.min(m, a[k]);
                    b[i][j] = Math.min(b[i][j], m + x * (i - j));
                }
            }
        }
        int m = Integer.MAX_VALUE;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                m = Math.min(m, b[i][j]);
            }
        }
        System.out.println(m);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int x = in.nextInt();
        long[] a = new long[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        long[][] b = new long[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                b[i][j] = Integer.MAX_VALUE;
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                long m = a[i];
                for (int k = 0; k < n; k++) {
                    if (k < 0) {
                        k += n;
                    }
                    m = Math.min(m, a[k]);
                    b[i][j] = Math.min(b[i][j], m + x * (i - j));
                }
            }
        }
        long m = Long.MAX_VALUE;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                m = Math.min(m, b[i][j]);
            }
        }
        System.out.println(m);
    }
}"
CodeGen,avatar,Python,Java,codeforces_282_B.java,"public class codeforces_282_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] A = new int[n];
        int[] G = new int[n];
        for(int A_i=0; A_i < n; A_i++){
            A[A_i] = in.nextInt();
        }
        for(int G_i=0; G_i < n; G_i++){
            G[G_i] = in.nextInt();
        }
        int total = 0;
        String[] memory = new String[n];
        for(int i=0; i < n; i++){
            if(total + A[i] <= 500){
                total += A[i];
                memory[i] = ""A"";
            } else {
                total -= G[i];
                memory[i] = ""G"";
            }
        }
        System.out.println(Arrays.toString(memory));
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] A = new int[n];
        int[] G = new int[n];
        for(int A_i=0; A_i < n; A_i++){
            A[A_i] = in.nextInt();
        }
        for(int G_i=0; G_i < n; G_i++){
            G[G_i] = in.nextInt();
        }
        int total = 0;
        String[] memory = new String[n];
        for(int i=0; i < n; i++){
            if(total + A[i] <= 500){
                total += A[i];
                memory[i] = ""A"";
            } else {
                total -= G[i];
                memory[i] = ""G"";
            }
        }
        System.out.println(Arrays.toString(memory));
    }
}"
CodeGen,avatar,Python,Java,codeforces_400_A.java,"import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
import java.util.regex.*;
import java.awt.Point;

import static java.lang.System.*;

public class codeforces_400_A {
    public static void main(String[] args) throws Exception {
        Scanner in = new Scanner(new File(""input.txt""));
        PrintWriter out = new PrintWriter(new File(""output.txt""));
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++) {
            a[a_i] = in.nextInt();
        }
        int[] b = new int[n];
        for(int b_i=0; b_i < n; b_i++) {
            b[b_i] = in.nextInt();
        }
        int[] c = new int[n];
        for(int c_i=0; c_i < n; c_i++) {
            c[c_i] = in.nextInt();
        }
        int[] d = new int[n];
        for(int d_i=0; d_i < n; d_i++) {
            d[d_i] = in.nextInt();
        }
        int[] e = new int[n];
        for(int e_i=0; e_i < n; e_i++) {
            e[e_i] = in.nextInt();
        }
        int[] f = new int[n];
        for(int f_i=0; f_i < n; f_i++) {
            f[f_i] = in.nextInt();
        }
        int[] g = new int[n];
        for(int g_i=0; g_i < n; g_i++) {
            g[g_i] = in.nextInt();
        }
        int[] h = new int[n];
        for(int h_i=0; h_i < n; h_i++) {
            h[h_i] = in.nextInt();
        }
        int[] i = new int[n];
        for(int i_i=0; i_i < n; i_i++) {
            i[i_i] = in.nextInt();
        }
        int[] j = new int[n];
        for(int j_i=0; j_i < n; j_i++) {
            j[j_i] = in.nextInt();
        }
        int[] k = new int[n];
        for(int k_i=0; k_i < n; k_i++) {
            k[k_i] = in.nextInt();
        }
        int[] l = new int[n];
        for(int l_i=0; l_i < n; l_i++) {
            l[l_i] = in.nextInt();
        }
        int[] m = new int[n];
        for(int m_i=0; m_i < n; m_i++) {
            m[m_i] = in.nextInt();
        }
        int[] n = new int[n];
        for(int n_i=0; n_i < n; n_i++) {
            n[n_i] = in.nextInt();
        }
        int[] o = new int[n];
        for(int o_i=0; o_i < n; o_i++) {
            o[o_i] = in.nextInt();
        }
        int[] p = new int[n];
        for(int p_i=0; p_i < n; p_i++) {
            p[p_i] = in.nextInt();
        }
        int[] q = new int[n];
        for(int q_i=0; q_i < n; q_i++) {
            q[q_i] = in.nextInt();
        }
        int[] r = new int[n];
        for(int r_i=0; r_i < n; r_i++) {
            r[r_i] = in.nextInt();
        }
        int[] s = new int[n];
        for(int s_i=0; s_i < n; s_i++) {
            s[s_i] = in.nextInt();
        }
        int[] t = new int[n];
        for(int t_i=0; t_i < n; t_i++) {
            t[t_i] = in.nextInt();
        }
        int[] u = new int[n];
        for(int u_i=0; u_i < n; u_i++) {
            u[u_i] = in.nextInt();
        }
        int[] v = new int[n];
        for(int v_i=0; v_i < n; v_i++) {
            v[v_i] = in.nextInt();
        }
        int[] w = new int[n];
        for(int w_i=0; w_i < n; w_i++) {
            w[w_i] = in.nextInt();
        }
        int[] x = new int[n];
        for(int x_i=0; x_i < n; x_i++) {
            x[x_i] = in.nextInt();
        }
        int[] y = new int[n];
        for(int y_i=0; y_i < n; y_i++) {
            y[y_i] = in.nextInt();
        }
        int[] z = new int[n];
        for(int z_i=0; z_i < n; z_i++) {
            z[z_i] = in.nextInt();
        }
        int[] A = new int[n];
        for(int A_i=0; A_i < n; A_i++) {
            A[A_i] = in.nextInt();
        }
        int[] B = new int[n];
        for(int B_i=0; B_i < n; B_i++) {
            B[B_i] = in.nextInt();
        }
        int[] C = new int[n];
        for(int C_i=0; C_i < n; C_i++) {","import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
import java.util.regex.*;
import java.awt.Point;

import static java.lang.System.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner in = new Scanner(new File(""input.txt""));
        PrintWriter out = new PrintWriter(new File(""output.txt""));
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++) {
            a[a_i] = in.nextInt();
        }
        int[] b = new int[n];
        for(int b_i=0; b_i < n; b_i++) {
            b[b_i] = in.nextInt();
        }
        int[] c = new int[n];
        for(int c_i=0; c_i < n; c_i++) {
            c[c_i] = in.nextInt();
        }
        int[] d = new int[n];
        for(int d_i=0; d_i < n; d_i++) {
            d[d_i] = in.nextInt();
        }
        int[] e = new int[n];
        for(int e_i=0; e_i < n; e_i++) {
            e[e_i] = in.nextInt();
        }
        int[] f = new int[n];
        for(int f_i=0; f_i < n; f_i++) {
            f[f_i] = in.nextInt();
        }
        int[] g = new int[n];
        for(int g_i=0; g_i < n; g_i++) {
            g[g_i] = in.nextInt();
        }
        int[] h = new int[n];
        for(int h_i=0; h_i < n; h_i++) {
            h[h_i] = in.nextInt();
        }
        int[] i = new int[n];
        for(int i_i=0; i_i < n; i_i++) {
            i[i_i] = in.nextInt();
        }
        int[] j = new int[n];
        for(int j_i=0; j_i < n; j_i++) {
            j[j_i] = in.nextInt();
        }
        int[] k = new int[n];
        for(int k_i=0; k_i < n; k_i++) {
            k[k_i] = in.nextInt();
        }
        int[] l = new int[n];
        for(int l_i=0; l_i < n; l_i++) {
            l[l_i] = in.nextInt();
        }
        int[] m = new int[n];
        for(int m_i=0; m_i < n; m_i++) {
            m[m_i] = in.nextInt();
        }
        int[] n = new int[n];
        for(int n_i=0; n_i < n; n_i++) {
            n[n_i] = in.nextInt();
        }
        int[] o = new int[n];
        for(int o_i=0; o_i < n; o_i++) {
            o[o_i] = in.nextInt();
        }
        int[] p = new int[n];
        for(int p_i=0; p_i < n; p_i++) {
            p[p_i] = in.nextInt();
        }
        int[] q = new int[n];
        for(int q_i=0; q_i < n; q_i++) {
            q[q_i] = in.nextInt();
        }
        int[] r = new int[n];
        for(int r_i=0; r_i < n; r_i++) {
            r[r_i] = in.nextInt();
        }
        int[] s = new int[n];
        for(int s_i=0; s_i < n; s_i++) {
            s[s_i] = in.nextInt();
        }
        int[] t = new int[n];
        for(int t_i=0; t_i < n; t_i++) {
            t[t_i] = in.nextInt();
        }
        int[] u = new int[n];
        for(int u_i=0; u_i < n; u_i++) {
            u[u_i] = in.nextInt();
        }
        int[] v = new int[n];
        for(int v_i=0; v_i < n; v_i++) {
            v[v_i] = in.nextInt();
        }
        int[] w = new int[n];
        for(int w_i=0; w_i < n; w_i++) {
            w[w_i] = in.nextInt();
        }
        int[] x = new int[n];
        for(int x_i=0; x_i < n; x_i++) {
            x[x_i] = in.nextInt();
        }
        int[] y = new int[n];
        for(int y_i=0; y_i < n; y_i++) {
            y[y_i] = in.nextInt();
        }
        int[] z = new int[n];
        for(int z_i=0; z_i < n; z_i++) {
            z[z_i] = in.nextInt();
        }
        int[] A = new int[n];
        for(int A_i=0; A_i < n; A_i++) {
            A[A_i] = in.nextInt();
        }
        int[] B = new int[n];
        for(int B_i=0; B_i < n; B_i++) {
            B[B_i] = in.nextInt();
        }
        int[] C = new int[n];
        for(int C_i=0; C_i < n; C_i++) {"
CodeGen,avatar,Python,Java,atcoder_AGC014_D.java,"import java.util.*;
import java.io.*;

public class atcoder_AGC014_D {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        int[][] adj = new int[N + 1][];
        for (int i = 0; i < N - 1; i++) {
            String[] input = br.readLine().split("" "");
            int a = Integer.parseInt(input[0]);
            int b = Integer.parseInt(input[1]);
            adj[a] = new int[2];
            adj[a][0] = b;
            adj[a][1] = 1;
            adj[b] = new int[2];
            adj[b][0] = a;
            adj[b][1] = 1;
        }
        int[] par = new int[N + 1];
        int[] child_num = new int[N + 1];
        int[] seen = new int[N + 1];
        int[] seq = new int[N + 1];
        Deque<Integer> que = new ArrayDeque<Integer>();
        que.add(1);
        seen[1] = 1;
        par[1] = 0;
        child_num[1] = 0;
        while (que.size() > 0) {
            int v = que.removeFirst();
            for (int u : adj[v]) {
                if (seen[u] == 0) {
                    seen[u] = 1;
                    par[u] = v;
                    child_num[v]++;
                    que.add(u);
                }
            }
        }
        for (int i = 1; i <= N; i++) {
            if (child_num[i] == 0) {
                seq.add(i);
            }
        }
        while (seq.size() > 0) {
            int c = seq.removeFirst();
            seen[c] = 0;
            if (seen[par[c]] == 0) {
                seq.add(par[c]);
            }
        }
        if (seen[0] == 0) {
            System.out.println(""First"");
        } else {
            System.out.println(""Second"");
        }
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        int[][] adj = new int[N + 1][];
        for (int i = 0; i < N - 1; i++) {
            String[] input = br.readLine().split("" "");
            int a = Integer.parseInt(input[0]);
            int b = Integer.parseInt(input[1]);
            adj[a] = new int[2];
            adj[a][0] = b;
            adj[a][1] = 1;
            adj[b] = new int[2];
            adj[b][0] = a;
            adj[b][1] = 1;
        }
        int[] par = new int[N + 1];
        int[] child_num = new int[N + 1];
        int[] seen = new int[N + 1];
        int[] seq = new int[N + 1];
        Deque<Integer> que = new ArrayDeque<Integer>();
        que.add(1);
        seen[1] = 1;
        par[1] = 0;
        child_num[1] = 0;
        while (que.size() > 0) {
            int v = que.removeFirst();
            for (int u : adj[v]) {
                if (seen[u] == 0) {
                    seen[u] = 1;
                    par[u] = v;
                    child_num[v]++;
                    que.add(u);
                }
            }
        }
        for (int i = 1; i <= N; i++) {
            if (child_num[i] == 0) {
                seq.add(i);
            }
        }
        while (seq.size() > 0) {
            int c = seq.removeFirst();
            seen[c] = 0;
            if (seen[par[c]] == 0) {
                seq.add(par[c]);
            }
        }
        if (seen[0] == 0) {
            System.out.println(""First"");
        } else {
            System.out.println(""Second"");
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_190_A.java,"public class codeforces_190_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        if (n < 1) {
            if (m < 1) {
                System.out.println(n + "" "" + m);
            } else {
                System.out.println(""Impossible"");
            }
        } else if (m > n) {
            int min = m;
            int max = n + m - 1;
            System.out.println(min + "" "" + max);
        } else {
            int min = n;
            int max = n + m - 1;
            if (m == 0) {
                max = n;
            }
            System.out.println(min + "" "" + max);
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        if (n < 1) {
            if (m < 1) {
                System.out.println(n + "" "" + m);
            } else {
                System.out.println(""Impossible"");
            }
        } else if (m > n) {
            int min = m;
            int max = n + m - 1;
            System.out.println(min + "" "" + max);
        } else {
            int min = n;
            int max = n + m - 1;
            if (m == 0) {
                max = n;
            }
            System.out.println(min + "" "" + max);
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_387_A.java,"public class codeforces_387_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int h1 = in.nextInt();
        int m1 = in.nextInt();
        int h2 = in.nextInt();
        int m2 = in.nextInt();
        int m = m1 - m2;
        m = m % 1440;
        System.out.println(m / 60 + "":"" + m % 60);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String[] time1 = in.nextLine().split("":"");
        int h1 = Integer.parseInt(time1[0]);
        int m1 = Integer.parseInt(time1[1]);
        m1 += h1 * 60;
        String[] time2 = in.nextLine().split("":"");
        int h2 = Integer.parseInt(time2[0]);
        int m2 = Integer.parseInt(time2[1]);
        m2 += h2 * 60;
        m2 = m1 - m2;
        m2 = (m2 % 1440 + 1440) % 1440;
        System.out.printf(""%02d:%02d%n"", m2 / 60, (m2 % 60 + 60) % 60);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC150_D.java,"import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.stream.IntStream;
import java.util.stream.Collectors;

import java.math.BigInteger;

public class atcoder_ABC150_D {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] nums = new int[n];
        for(int num_i=0; num_i < n; num_i++){
            nums[num_i] = in.nextInt();
        }
        int num = in.nextInt();
        int[] num_set = new int[n];
        for(int i=0; i < n; i++){
            num_set[i] = nums[i];
        }
        Set<Integer> two_times_set = new HashSet<>();
        for(int i=0; i < n; i++){
            for(int j=1; j < 30; j++){
                num_set[i] //= 2;
                if(num_set[i] % 2!= 0){
                    two_times_set.add(j);
                    break;
                }
            }
        }
        List<Integer> num_list = new ArrayList<>(two_times_set);
        BigInteger lcm = BigInteger.ONE;
        for(int i=0; i < num_list.size(); i++){
            lcm = lcm.multiply(BigInteger.valueOf(num_list.get(i)));
            lcm = lcm.divide(BigInteger.valueOf(num_list.get(i)).gcd(BigInteger.valueOf(lcm)));
        }
        int result = (num - lcm.divide(BigInteger.valueOf(2)).intValue()) / lcm.divide(BigInteger.valueOf(num_list.get(0))).intValue() + 1;
        System.out.println(result);
    }
}","import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.stream.IntStream;
import java.util.stream.Collectors;

import java.math.BigInteger;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] nums = new int[n];
        for(int num_i=0; num_i < n; num_i++){
            nums[num_i] = in.nextInt();
        }
        int num = in.nextInt();
        int[] num_set = new int[n];
        for(int i=0; i < n; i++){
            num_set[i] = nums[i];
        }
        Set<Integer> two_times_set = new HashSet<>();
        for(int i=0; i < n; i++){
            for(int j=1; j < 30; j++){
                num_set[i] /= 2;
                if(num_set[i] % 2!= 0){
                    two_times_set.add(j);
                    break;
                }
            }
        }
        List<Integer> num_list = new ArrayList<>(two_times_set);
        BigInteger lcm = BigInteger.ONE;
        for(int i=0; i < num_list.size(); i++){
            lcm = lcm.multiply(BigInteger.valueOf(num_list.get(i)));
            lcm = lcm.divide(BigInteger.valueOf(num_list.get(i)).gcd(BigInteger.valueOf(lcm)));
        }
        int result = (num - lcm.divide(BigInteger.valueOf(2)).intValue()) / lcm.divide(BigInteger.valueOf(num_list.get(0))).intValue() + 1;
        System.out.println(result);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC145_E.java,"import java.util.Scanner;
import java.util.Arrays;
import java.util.Comparator;

public class atcoder_ABC145_E {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int t = in.nextInt();
        int[] time_value = new int[n];
        for(int time_value_i=0; time_value_i < n; time_value_i++){
            time_value[time_value_i] = in.nextInt();
        }
        time_value = Arrays.stream(time_value).sorted((a,b) -> a-b).toArray();
        int[] dp = new int[n+1];
        for(int i=0; i<=n; i++){
            dp[i] = 0;
        }
        for(int i=1; i<=n; i++){
            for(int t=1; t<=t; t++){
                if(time_value[i]>t){
                    dp[i] = Math.max(dp[i], dp[i-1]+time_value[i]);
                }else{
                    dp[i] = Math.max(dp[i], dp[i-1]+time_value[i]-time_value[i-1]);
                }
            }
        }
        int val_acum = time_value[n];
        int t = t-1;
        int max_val = dp[n]+val_acum;
        for(int i=n-1; i>=0; i--){
            val_acum += time_value[i];
            t -= time_value[i+1];
            if(t<0){
                break;
            }else{
                max_val = Math.max(max_val, dp[i]+val_acum);
            }
        }
        System.out.println(max_val);
    }
}","import java.util.Scanner;
import java.util.Arrays;
import java.util.Comparator;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int t = in.nextInt();
        int[] time_value = new int[n];
        for(int time_value_i=0; time_value_i < n; time_value_i++){
            time_value[time_value_i] = in.nextInt();
        }
        time_value = Arrays.stream(time_value).sorted((a,b) -> a-b).toArray();
        int[] dp = new int[n+1];
        for(int i=0; i<=n; i++){
            dp[i] = 0;
        }
        for(int i=1; i<=n; i++){
            for(int t=1; t<=t; t++){
                if(time_value[i]>t){
                    dp[i] = Math.max(dp[i], dp[i-1]+time_value[i]);
                }else{
                    dp[i] = Math.max(dp[i], dp[i-1]+time_value[i]-time_value[i-1]);
                }
            }
        }
        int val_acum = time_value[n];
        t = t-1;
        int max_val = dp[n]+val_acum;
        for(int i=n-1; i>=0; i--){
            val_acum += time_value[i];
            t -= time_value[i+1];
            if(t<0){
                break;
            }else{
                max_val = Math.max(max_val, dp[i]+val_acum);
            }
        }
        System.out.println(max_val);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC148_F.java,"public class atcoder_ABC148_F {
    public int trapRainWater(int[][] heightMap) {
        int n = heightMap.length;
        int m = heightMap[0].length;
        int[] ta = new int[n];
        int[] ao = new int[n];
        int[] dist = new int[n];
        int[] prev = new int[n];
        int[] cur = new int[n];
        int[] next = new int[n];
        int[] dp = new int[n];
        int[] dp2 = new int[n];
        int[] dp3 = new int[n];
        int[] dp4 = new int[n];
        int[] dp5 = new int[n];
        int[] dp6 = new int[n];
        int[] dp7 = new int[n];
        int[] dp8 = new int[n];
        int[] dp9 = new int[n];
        int[] dp10 = new int[n];
        int[] dp11 = new int[n];
        int[] dp12 = new int[n];
        int[] dp13 = new int[n];
        int[] dp14 = new int[n];
        int[] dp15 = new int[n];
        int[] dp16 = new int[n];
        int[] dp17 = new int[n];
        int[] dp18 = new int[n];
        int[] dp19 = new int[n];
        int[] dp20 = new int[n];
        int[] dp21 = new int[n];
        int[] dp22 = new int[n];
        int[] dp23 = new int[n];
        int[] dp24 = new int[n];
        int[] dp25 = new int[n];
        int[] dp26 = new int[n];
        int[] dp27 = new int[n];
        int[] dp28 = new int[n];
        int[] dp29 = new int[n];
        int[] dp30 = new int[n];
        int[] dp31 = new int[n];
        int[] dp32 = new int[n];
        int[] dp33 = new int[n];
        int[] dp34 = new int[n];
        int[] dp35 = new int[n];
        int[] dp36 = new int[n];
        int[] dp37 = new int[n];
        int[] dp38 = new int[n];
        int[] dp39 = new int[n];
        int[] dp40 = new int[n];
        int[] dp41 = new int[n];
        int[] dp42 = new int[n];
        int[] dp43 = new int[n];
        int[] dp44 = new int[n];
        int[] dp45 = new int[n];
        int[] dp46 = new int[n];
        int[] dp47 = new int[n];
        int[] dp48 = new int[n];
        int[] dp49 = new int[n];
        int[] dp50 = new int[n];
        int[] dp51 = new int[n];
        int[] dp52 = new int[n];
        int[] dp53 = new int[n];
        int[] dp54 = new int[n];
        int[] dp55 = new int[n];
        int[] dp56 = new int[n];
        int[] dp57 = new int[n];
        int[] dp58 = new int[n];
        int[] dp59 = new int[n];
        int[] dp60 = new int[n];
        int[] dp61 = new int[n];
        int[] dp62 = new int[n];
        int[] dp63 = new int[n];
        int[] dp64 = new int[n];
        int[] dp65 = new int[n];
        int[] dp66 = new int[n];
        int[] dp67 = new int[n];
        int[] dp68 = new int[n];
        int[] dp69 = new int[n];
        int[] dp70 = new int[n];
        int[] dp71 = new int[n];
        int[] dp72 = new int[n];
        int[] dp73 = new int[n];
        int[] dp74 = new int[n];
        int[] dp75 = new int[n];
        int[] dp76 = new int[n];
        int[] dp77 = new int[n];
        int[] dp78 = new int[n];
        int[] dp79 = new int[n];
        int[] dp80 = new int[n];
        int[] dp81 = new int[n];
        int[] dp82 = new int[n];
        int[] dp83 = new int[n];
        int[] dp84 = new int[n];
        int[] dp85 = new int[n];
        int[] dp86 = new int[n];
        int[] dp87 = new int[n];
        int[] dp88 = new int[n];
        int[] dp89 = new int[n];
        int[] dp90 = new int[n];
        int[] dp91 = new int[n];
        int[] dp92 = new int[n];
        int[] dp93 = new int[n];
        int[] dp94 = new int[n];
        int[] dp95 = new int[n];
        int[] dp96 = new int[n];
        int[] dp97 = new int[n];
        int[] dp98 = new int[n];
        int[] dp99 = new int[n];
        int[] dp100 = new int[n];
        int[] dp101 = new int[n];
        int[] dp102 = new int[n];
        int[] dp103 = new int[n];
        int[] dp104 = new int[n];
        int[] dp105 = new int[n];
        int[] dp106 = new int[n];
        int[] dp107 = new int[n];
        int[] dp108 = new int[n];
        int[] dp109 = new int[n];
        int[] dp110 = new int[n];
        int[] dp111 = new int[n];
        int[] dp112 = new int[n];
        int[] dp113 = new int[n];
        int[] dp114 = new int[","public class Main {
    public int trapRainWater(int[][] heightMap) {
        int n = heightMap.length;
        int m = heightMap[0].length;
        int[] ta = new int[n];
        int[] ao = new int[n];
        int[] dist = new int[n];
        int[] prev = new int[n];
        int[] cur = new int[n];
        int[] next = new int[n];
        int[] dp = new int[n];
        int[] dp2 = new int[n];
        int[] dp3 = new int[n];
        int[] dp4 = new int[n];
        int[] dp5 = new int[n];
        int[] dp6 = new int[n];
        int[] dp7 = new int[n];
        int[] dp8 = new int[n];
        int[] dp9 = new int[n];
        int[] dp10 = new int[n];
        int[] dp11 = new int[n];
        int[] dp12 = new int[n];
        int[] dp13 = new int[n];
        int[] dp14 = new int[n];
        int[] dp15 = new int[n];
        int[] dp16 = new int[n];
        int[] dp17 = new int[n];
        int[] dp18 = new int[n];
        int[] dp19 = new int[n];
        int[] dp20 = new int[n];
        int[] dp21 = new int[n];
        int[] dp22 = new int[n];
        int[] dp23 = new int[n];
        int[] dp24 = new int[n];
        int[] dp25 = new int[n];
        int[] dp26 = new int[n];
        int[] dp27 = new int[n];
        int[] dp28 = new int[n];
        int[] dp29 = new int[n];
        int[] dp30 = new int[n];
        int[] dp31 = new int[n];
        int[] dp32 = new int[n];
        int[] dp33 = new int[n];
        int[] dp34 = new int[n];
        int[] dp35 = new int[n];
        int[] dp36 = new int[n];
        int[] dp37 = new int[n];
        int[] dp38 = new int[n];
        int[] dp39 = new int[n];
        int[] dp40 = new int[n];
        int[] dp41 = new int[n];
        int[] dp42 = new int[n];
        int[] dp43 = new int[n];
        int[] dp44 = new int[n];
        int[] dp45 = new int[n];
        int[] dp46 = new int[n];
        int[] dp47 = new int[n];
        int[] dp48 = new int[n];
        int[] dp49 = new int[n];
        int[] dp50 = new int[n];
        int[] dp51 = new int[n];
        int[] dp52 = new int[n];
        int[] dp53 = new int[n];
        int[] dp54 = new int[n];
        int[] dp55 = new int[n];
        int[] dp56 = new int[n];
        int[] dp57 = new int[n];
        int[] dp58 = new int[n];
        int[] dp59 = new int[n];
        int[] dp60 = new int[n];
        int[] dp61 = new int[n];
        int[] dp62 = new int[n];
        int[] dp63 = new int[n];
        int[] dp64 = new int[n];
        int[] dp65 = new int[n];
        int[] dp66 = new int[n];
        int[] dp67 = new int[n];
        int[] dp68 = new int[n];
        int[] dp69 = new int[n];
        int[] dp70 = new int[n];
        int[] dp71 = new int[n];
        int[] dp72 = new int[n];
        int[] dp73 = new int[n];
        int[] dp74 = new int[n];
        int[] dp75 = new int[n];
        int[] dp76 = new int[n];
        int[] dp77 = new int[n];
        int[] dp78 = new int[n];
        int[] dp79 = new int[n];
        int[] dp80 = new int[n];
        int[] dp81 = new int[n];
        int[] dp82 = new int[n];
        int[] dp83 = new int[n];
        int[] dp84 = new int[n];
        int[] dp85 = new int[n];
        int[] dp86 = new int[n];
        int[] dp87 = new int[n];
        int[] dp88 = new int[n];
        int[] dp89 = new int[n];
        int[] dp90 = new int[n];
        int[] dp91 = new int[n];
        int[] dp92 = new int[n];
        int[] dp93 = new int[n];
        int[] dp94 = new int[n];
        int[] dp95 = new int[n];
        int[] dp96 = new int[n];
        int[] dp97 = new int[n];
        int[] dp98 = new int[n];
        int[] dp99 = new int[n];
        int[] dp100 = new int[n];
        int[] dp101 = new int[n];
        int[] dp102 = new int[n];
        int[] dp103 = new int[n];
        int[] dp104 = new int[n];
        int[] dp105 = new int[n];
        int[] dp106 = new int[n];
        int[] dp107 = new int[n];
        int[] dp108 = new int[n];
        int[] dp109 = new int[n];
        int[] dp110 = new int[n];
        int[] dp111 = new int[n];
        int[] dp112 = new int[n];
        int[] dp113 = new int[n];
        int[] dp114 = new int["
CodeGen,avatar,Python,Java,codeforces_581_A.java,"public class codeforces_581_A {
    public int[] twoSum(int[] numbers, int target) {
        int[] result = new int[2];
        if (numbers == null || numbers.length < 2) {
            return result;
        }
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < numbers.length; i++) {
            if (map.containsKey(numbers[i])) {
                result[0] = map.get(numbers[i]);
                result[1] = i;
                return result;
            }
            map.put(target - numbers[i], i);
        }
        return result;
    }
}","public class Main {
    public int[] twoSum(int[] numbers, int target) {
        int[] result = new int[2];
        if (numbers == null || numbers.length < 2) {
            return result;
        }
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < numbers.length; i++) {
            if (map.containsKey(numbers[i])) {
                result[0] = map.get(numbers[i]);
                result[1] = i;
                return result;
            }
            map.put(target - numbers[i], i);
        }
        return result;
    }
}"
CodeGen,avatar,Python,Java,codeforces_61_B.java,"import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
import java.awt.Point;

import static java.lang.Math.*;

public class codeforces_61_B {
    public static void main(String[] args) throws Exception {
        Scanner in = new Scanner(new File(""input.txt""));
        PrintWriter out = new PrintWriter(new File(""output.txt""));
        int n = in.nextInt();
        int m = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++) {
            a[a_i] = in.nextInt();
        }
        int[] b = new int[m];
        for(int b_i=0; b_i < m; b_i++) {
            b[b_i] = in.nextInt();
        }
        int[] c = new int[m];
        for(int c_i=0; c_i < m; c_i++) {
            c[c_i] = in.nextInt();
        }
        int[] d = new int[m];
        for(int d_i=0; d_i < m; d_i++) {
            d[d_i] = in.nextInt();
        }
        int[] e = new int[m];
        for(int e_i=0; e_i < m; e_i++) {
            e[e_i] = in.nextInt();
        }
        int[] f = new int[m];
        for(int f_i=0; f_i < m; f_i++) {
            f[f_i] = in.nextInt();
        }
        int[] g = new int[m];
        for(int g_i=0; g_i < m; g_i++) {
            g[g_i] = in.nextInt();
        }
        int[] h = new int[m];
        for(int h_i=0; h_i < m; h_i++) {
            h[h_i] = in.nextInt();
        }
        int[] i = new int[m];
        for(int i_i=0; i_i < m; i_i++) {
            i[i_i] = in.nextInt();
        }
        int[] j = new int[m];
        for(int j_i=0; j_i < m; j_i++) {
            j[j_i] = in.nextInt();
        }
        int[] k = new int[m];
        for(int k_i=0; k_i < m; k_i++) {
            k[k_i] = in.nextInt();
        }
        int[] l = new int[m];
        for(int l_i=0; l_i < m; l_i++) {
            l[l_i] = in.nextInt();
        }
        int[] m = new int[m];
        for(int m_i=0; m_i < m; m_i++) {
            m[m_i] = in.nextInt();
        }
        int[] n = new int[m];
        for(int n_i=0; n_i < m; n_i++) {
            n[n_i] = in.nextInt();
        }
        int[] o = new int[m];
        for(int o_i=0; o_i < m; o_i++) {
            o[o_i] = in.nextInt();
        }
        int[] p = new int[m];
        for(int p_i=0; p_i < m; p_i++) {
            p[p_i] = in.nextInt();
        }
        int[] q = new int[m];
        for(int q_i=0; q_i < m; q_i++) {
            q[q_i] = in.nextInt();
        }
        int[] r = new int[m];
        for(int r_i=0; r_i < m; r_i++) {
            r[r_i] = in.nextInt();
        }
        int[] s = new int[m];
        for(int s_i=0; s_i < m; s_i++) {
            s[s_i] = in.nextInt();
        }
        int[] t = new int[m];
        for(int t_i=0; t_i < m; t_i++) {
            t[t_i] = in.nextInt();
        }
        int[] u = new int[m];
        for(int u_i=0; u_i < m; u_i++) {
            u[u_i] = in.nextInt();
        }
        int[] v = new int[m];
        for(int v_i=0; v_i < m; v_i++) {
            v[v_i] = in.nextInt();
        }
        int[] w = new int[m];
        for(int w_i=0; w_i < m; w_i++) {
            w[w_i] = in.nextInt();
        }
        int[] x = new int[m];
        for(int x_i=0; x_i < m; x_i++) {
            x[x_i] = in.nextInt();
        }
        int[] y = new int[m];
        for(int y_i=0; y_i < m; y_i++) {
            y[y_i] = in.nextInt();
        }
        int[] z = new int[m];
        for(int z_i=0; z_i < m; z_i++) {
            z[z_i] = in.nextInt();
        }
        int[] A = new int[n];
        for(int A_i=0; A_i < n; A_i++) {
            A[A_i] = in.nextInt();
        }
        int[] B = new int[m];
        for(int B_i=0; B_i < m; B_i++) {
            B[B_i] = in.nextInt();
        }
        int[] C = new int[m];","import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
import java.awt.Point;

import static java.lang.Math.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner in = new Scanner(new File(""input.txt""));
        PrintWriter out = new PrintWriter(new File(""output.txt""));
        int n = in.nextInt();
        int m = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++) {
            a[a_i] = in.nextInt();
        }
        int[] b = new int[m];
        for(int b_i=0; b_i < m; b_i++) {
            b[b_i] = in.nextInt();
        }
        int[] c = new int[m];
        for(int c_i=0; c_i < m; c_i++) {
            c[c_i] = in.nextInt();
        }
        int[] d = new int[m];
        for(int d_i=0; d_i < m; d_i++) {
            d[d_i] = in.nextInt();
        }
        int[] e = new int[m];
        for(int e_i=0; e_i < m; e_i++) {
            e[e_i] = in.nextInt();
        }
        int[] f = new int[m];
        for(int f_i=0; f_i < m; f_i++) {
            f[f_i] = in.nextInt();
        }
        int[] g = new int[m];
        for(int g_i=0; g_i < m; g_i++) {
            g[g_i] = in.nextInt();
        }
        int[] h = new int[m];
        for(int h_i=0; h_i < m; h_i++) {
            h[h_i] = in.nextInt();
        }
        int[] i = new int[m];
        for(int i_i=0; i_i < m; i_i++) {
            i[i_i] = in.nextInt();
        }
        int[] j = new int[m];
        for(int j_i=0; j_i < m; j_i++) {
            j[j_i] = in.nextInt();
        }
        int[] k = new int[m];
        for(int k_i=0; k_i < m; k_i++) {
            k[k_i] = in.nextInt();
        }
        int[] l = new int[m];
        for(int l_i=0; l_i < m; l_i++) {
            l[l_i] = in.nextInt();
        }
        int[] m = new int[m];
        for(int m_i=0; m_i < m; m_i++) {
            m[m_i] = in.nextInt();
        }
        int[] n = new int[m];
        for(int n_i=0; n_i < m; n_i++) {
            n[n_i] = in.nextInt();
        }
        int[] o = new int[m];
        for(int o_i=0; o_i < m; o_i++) {
            o[o_i] = in.nextInt();
        }
        int[] p = new int[m];
        for(int p_i=0; p_i < m; p_i++) {
            p[p_i] = in.nextInt();
        }
        int[] q = new int[m];
        for(int q_i=0; q_i < m; q_i++) {
            q[q_i] = in.nextInt();
        }
        int[] r = new int[m];
        for(int r_i=0; r_i < m; r_i++) {
            r[r_i] = in.nextInt();
        }
        int[] s = new int[m];
        for(int s_i=0; s_i < m; s_i++) {
            s[s_i] = in.nextInt();
        }
        int[] t = new int[m];
        for(int t_i=0; t_i < m; t_i++) {
            t[t_i] = in.nextInt();
        }
        int[] u = new int[m];
        for(int u_i=0; u_i < m; u_i++) {
            u[u_i] = in.nextInt();
        }
        int[] v = new int[m];
        for(int v_i=0; v_i < m; v_i++) {
            v[v_i] = in.nextInt();
        }
        int[] w = new int[m];
        for(int w_i=0; w_i < m; w_i++) {
            w[w_i] = in.nextInt();
        }
        int[] x = new int[m];
        for(int x_i=0; x_i < m; x_i++) {
            x[x_i] = in.nextInt();
        }
        int[] y = new int[m];
        for(int y_i=0; y_i < m; y_i++) {
            y[y_i] = in.nextInt();
        }
        int[] z = new int[m];
        for(int z_i=0; z_i < m; z_i++) {
            z[z_i] = in.nextInt();
        }
        int[] A = new int[n];
        for(int A_i=0; A_i < n; A_i++) {
            A[A_i] = in.nextInt();
        }
        int[] B = new int[m];
        for(int B_i=0; B_i < m; B_i++) {
            B[B_i] = in.nextInt();
        }
        int[] C = new int[m];"
CodeGen,avatar,Python,Java,atcoder_ABC135_D.java,"import java.util.Scanner;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.Iterator;
import java.util.TreeSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Stack;
import java.util.PriorityQueue;
import java.util.PriorityQueue;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Collections;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.","import java.util.Scanner;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.Iterator;
import java.util.TreeSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Stack;
import java.util.PriorityQueue;
import java.util.PriorityQueue;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Collections;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util.Comparator;
import java.util."
CodeGen,avatar,Python,Java,codeforces_653_A.java,"public class codeforces_653_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int arr_i=0; arr_i < n; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        Arrays.sort(arr);
        for(int i=0; i<n-1; i++){
            if(arr[i] + 1 == arr[i+1] && arr[i] + 2 == arr[i+2]){
                System.out.println(""YES"");
                break;
            }
        }
        if(n-1 == i){
            System.out.println(""NO"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        List<Integer> l = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            l.add(scanner.nextInt());
        }
        Collections.sort(l);
        boolean flag = false;
        for (int i : l) {
            if (l.contains(i + 1) && l.contains(i + 2)) {
                System.out.println(""YES"");
                flag = true;
                return;
            }
        }
        if (!flag) {
            System.out.println(""NO"");
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_31_A.java,"public class codeforces_31_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int arr_i=0; arr_i < n; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        for(int i=0; i < n; i++){
            for(int j=0; j < n; j++){
                if(i == j) continue;
                for(int k=0; k < n; k++){
                    if(arr[k]!= arr[j] && arr[k]!= arr[i] && arr[k] == arr[i] + arr[j]){
                        System.out.println(k + 1 + "" "" + j + 1 + "" "" + i + 1);
                        System.exit(0);
                    }
                }
            }
        }
        System.out.println(-1);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int arr_i=0; arr_i < n; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        for(int i=0; i < n; i++){
            for(int j=0; j < n; j++){
                if(i == j) continue;
                for(int k=0; k < n; k++){
                    if(arr[k]!= arr[j] && arr[k]!= arr[i] && arr[k] == arr[i] + arr[j]){
                        System.out.println(k + 1 + "" "" + (j + 1) + "" "" + (i + 1));
                        System.exit(0);
                    }
                }
            }
        }
        System.out.println(-1);
    }
}"
CodeGen,avatar,Python,Java,codeforces_222_A.java,"public class codeforces_222_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] elems = new int[n];
        for (int i = 0; i < n; i++) {
            elems[i] = in.nextInt();
        }
        boolean allSame = true;
        for (int i = 0; i < n; i++) {
            if (elems[i]!= elems[0]) {
                allSame = false;
                break;
            }
        }
        if (allSame) {
            System.out.println(0);
            return;
        }
        if (k == 1) {
            System.out.println(-1);
            return;
        }
        if (!allSame) {
            System.out.println(-1);
            return;
        }
        int target = elems[0];
        int[] toDelete = new int[k - 1];
        for (int i = 0; i < k - 1; i++) {
            toDelete[i] = elems[i];
        }
        while (toDelete.length > 0 && toDelete[toDelete.length - 1] == target) {
            toDelete.pop();
        }
        System.out.println(toDelete.length);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] elems = new int[n];
        for (int i = 0; i < n; i++) {
            elems[i] = in.nextInt();
        }
        boolean allSame = true;
        for (int i = 0; i < n; i++) {
            if (elems[i]!= elems[0]) {
                allSame = false;
                break;
            }
        }
        if (allSame) {
            System.out.println(0);
            return;
        }
        if (k == 1) {
            System.out.println(-1);
            return;
        }
        if (!allSame) {
            System.out.println(-1);
            return;
        }
        int target = elems[0];
        int[] toDelete = new int[k - 1];
        for (int i = 0; i < k - 1; i++) {
            toDelete[i] = elems[i];
        }
        while (toDelete.length > 0 && toDelete[toDelete.length - 1] == target) {
            toDelete.pop();
        }
        System.out.println(toDelete.length);
    }
}"
CodeGen,avatar,Python,Java,codeforces_37_A.java,"public class codeforces_37_A {
    public int maxTower(int n) {
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = Integer.parseInt(next());
        }
        Arrays.sort(l);
        int tower = n;
        int high = 1;
        int maximum = 1;
        for (int i = 1; i < n; i++) {
            if (l[i] == l[i - 1]) {
                tower--;
                high += 1;
            } else {
                if (high > maximum) {
                    maximum = high;
                }
                high = 1;
            }
        }
        if (high > maximum) {
            maximum = high;
        }
        return maximum * tower;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        System.out.println(maxTower(n, scanner));
    }
    public static String maxTower(int n, Scanner scanner) {
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = Integer.parseInt(scanner.next());
        }
        Arrays.sort(l);
        int tower = n;
        int high = 1;
        int maximum = 1;
        for (int i = 1; i < n; i++) {
            if (l[i] == l[i - 1]) {
                tower--;
                high += 1;
            } else {
                if (high > maximum) {
                    maximum = high;
                }
                high = 1;
            }
        }
        if (high > maximum) {
            maximum = high;
        }
        return maximum + "" "" + tower;
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC037_E.java,"public class atcoder_AGC037_E {
    public int minCut(String s) {
        int n = s.length();
        int[] dp = new int[n + 1];
        for (int i = 0; i < n; i++) {
            dp[i + 1] = i;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < i; j++) {
                if (s.charAt(i) == s.charAt(j) && dp[i + 1] < dp[j + 1]) {
                    dp[i + 1] = dp[j + 1];
                }
            }
        }
        int res = 0;
        for (int i = 0; i < n; i++) {
            if (dp[i] == i) {
                res++;
            }
        }
        return res;
    }
}","public class Main {
    public int minCut(String s) {
        int n = s.length();
        int[] dp = new int[n + 1];
        for (int i = 0; i < n; i++) {
            dp[i + 1] = i;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < i; j++) {
                if (s.charAt(i) == s.charAt(j) && dp[i + 1] < dp[j + 1]) {
                    dp[i + 1] = dp[j + 1];
                }
            }
        }
        int res = 0;
        for (int i = 0; i < n; i++) {
            if (dp[i] == i) {
                res++;
            }
        }
        return res;
    }
}"
CodeGen,avatar,Python,Java,codeforces_445_A.java,"public class codeforces_445_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        String[] s = new String[n];
        for(int i=0; i<n; i++){
            s[i] = in.next();
        }
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(s[j].charAt(i) == '.'){
                    if((j+i)%2 == 0){
                        s[j] = s[j].replace(""W"", ""."");
                    }else{
                        s[j] = s[j].replace(""B"", ""."");
                    }
                }
            }
        }
        for(String c : s){
            System.out.println(c);
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        String[] s = new String[n];
        for(int i=0; i<n; i++){
            s[i] = in.next();
        }
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(s[j].charAt(i) == '.'){
                    if((j+i)%2 == 0){
                        s[j] = s[j].replace(""W"", ""."");
                    }else{
                        s[j] = s[j].replace(""B"", ""."");
                    }
                }
            }
        }
        for(String c : s){
            System.out.println(c);
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC169_C.java,"public class atcoder_ABC169_C {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int result = a * b / 100;
        System.out.println(result);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        long a = in.nextLong();
        double sb = in.nextDouble();
        long b = (long) (sb * 100 + 0.1);
        long result = (a * b / 100);
        System.out.println(result);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ARC086_B.java,"import java.util.Scanner;
import java.lang.Math;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.Iterator;
import java.util.TreeSet;
import java.util.LinkedList;
import java.util.Stack;
import java.util.Queue;
import java.util.LinkedList;
import java.util.Deque;
import java.util.PriorityQueue;
import java.util.ArrayDeque;
import java.util.BitSet;
import java.util.BitSet;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java","import java.util.Scanner;
import java.lang.Math;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.Iterator;
import java.util.TreeSet;
import java.util.LinkedList;
import java.util.Stack;
import java.util.Queue;
import java.util.LinkedList;
import java.util.Deque;
import java.util.PriorityQueue;
import java.util.ArrayDeque;
import java.util.BitSet;
import java.util.BitSet;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java.util.Random;
import java"
CodeGen,avatar,Python,Java,atcoder_ABC167_D.java,"public class atcoder_ABC167_D {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] res = new int[numCourses];
        int[] inDegree = new int[numCourses];
        int[] outDegree = new int[numCourses];
        int[] degree = new int[numCourses];
        int[] index = new int[numCourses];
        int[] count = new int[numCourses];
        int[] path = new int[numCourses];
        int[] loop = new int[numCourses];
        int[] t = new int[numCourses];
        boolean[] flag = new boolean[numCourses];
        int[] Hash = new int[numCourses];
        int[] ind = new int[numCourses];
        int[] x = new int[numCourses];
        int[] count2 = new int[numCourses];
        int[] path2 = new int[numCourses];
        int[] loop2 = new int[numCourses];
        int[] t2 = new int[numCourses];
        boolean[] flag2 = new boolean[numCourses];
        int[] Hash2 = new int[numCourses];
        int[] ind2 = new int[numCourses];
        int[] x2 = new int[numCourses];
        int[] count3 = new int[numCourses];
        int[] path3 = new int[numCourses];
        int[] loop3 = new int[numCourses];
        int[] t3 = new int[numCourses];
        boolean[] flag3 = new boolean[numCourses];
        int[] Hash3 = new int[numCourses];
        int[] ind3 = new int[numCourses];
        int[] x3 = new int[numCourses];
        int[] count4 = new int[numCourses];
        int[] path4 = new int[numCourses];
        int[] loop4 = new int[numCourses];
        int[] t4 = new int[numCourses];
        boolean[] flag4 = new boolean[numCourses];
        int[] Hash4 = new int[numCourses];
        int[] ind4 = new int[numCourses];
        int[] x4 = new int[numCourses];
        int[] count5 = new int[numCourses];
        int[] path5 = new int[numCourses];
        int[] loop5 = new int[numCourses];
        int[] t5 = new int[numCourses];
        boolean[] flag5 = new boolean[numCourses];
        int[] Hash5 = new int[numCourses];
        int[] ind5 = new int[numCourses];
        int[] x5 = new int[numCourses];
        int[] count6 = new int[numCourses];
        int[] path6 = new int[numCourses];
        int[] loop6 = new int[numCourses];
        int[] t6 = new int[numCourses];
        boolean[] flag6 = new boolean[numCourses];
        int[] Hash6 = new int[numCourses];
        int[] ind6 = new int[numCourses];
        int[] x6 = new int[numCourses];
        int[] count7 = new int[numCourses];
        int[] path7 = new int[numCourses];
        int[] loop7 = new int[numCourses];
        int[] t7 = new int[numCourses];
        boolean[] flag7 = new boolean[numCourses];
        int[] Hash7 = new int[numCourses];
        int[] ind7 = new int[numCourses];
        int[] x7 = new int[numCourses];
        int[] count8 = new int[numCourses];
        int[] path8 = new int[numCourses];
        int[] loop8 = new int[numCourses];
        int[] t8 = new int[numCourses];
        boolean[] flag8 = new boolean[numCourses];
        int[] Hash8 = new int[numCourses];
        int[] ind8 = new int[numCourses];
        int[] x8 = new int[numCourses];
        int[] count9 = new int[numCourses];
        int[] path9 = new int[numCourses];
        int[] loop9 = new int[numCourses];
        int[] t9 = new int[numCourses];
        boolean[] flag9 = new boolean[numCourses];
        int[] Hash9 = new int[numCourses];
        int[] ind9 = new int[numCourses];
        int[] x9 = new int[numCourses];
        int[] count10 = new int[numCourses];
        int[] path10 = new int[numCourses];
        int[] loop10 = new int[numCourses];
        int[] t10 = new int[numCourses];
        boolean[] flag10 = new boolean[numCourses];
        int[] Hash10 = new int[numCourses];
        int[] ind10 = new int[numCourses];
        int[] x10 = new int[numCourses];
        int[] count11 = new int[numCourses];
        int[] path11 = new int[numCourses];
        int[] loop11 = new int[numCourses];
        int[] t11 = new int[numCourses];
        boolean[] flag11 = new boolean[numCourses];
        int[] Hash11 = new int[numCourses];
        int[] ind11 = new int[numCourses];
        int[] x11 = new int[numCourses];
        int[] count12 = new int[numCourses];
        int[] path12 = new int[numCourses];
        int[] loop12 = new int[numCourses];
        int[] t12 = new int[numCourses];
        boolean[] flag12 = new boolean[numCourses];
        int[] Hash12 = new int[numCourses];
        int[] ind12 = new int[numCourses];
        int[] x12 = new int[numCourses];
        int[] count13 = new int[numCourses];
        int[] path13 = new int[numCourses];
        int[] loop13 = new int[numCourses];
        int[] t13 = new int[numCourses];
        boolean[] flag13 = new boolean[numCourses];
        int[] Hash13 = new int[numCourses];
        int[] ind13 = new int[numCourses];
        int[] x13 = new int[numCourses];
        int[] count14 = new int[numCourses];
        int[] path14 = new int[numCourses];
        int[] loop14 = new int[numCourses];
        int[] t14 = new int[numCourses];
        boolean[] flag14 = new boolean[numCourses];
        int[] Hash14 = new int[numCourses];
        int[] ind14 = new int[numCourses];
        int[] x14 = new int[numCourses];
        int[] count15 = new int[numCourses];
        int[] path15 = new int[numCourses];
        int[] loop15 = new int[numCourses];
        int[] t15 = new int[numCourses];
        boolean[] flag15 = new boolean[numCourses];
        int[] Hash15 = new int[numCourses];
        int[] ind15 = new int[numCourses];
        int[] x15 = new int[numCourses];","public class Main {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] res = new int[numCourses];
        int[] inDegree = new int[numCourses];
        int[] outDegree = new int[numCourses];
        int[] degree = new int[numCourses];
        int[] index = new int[numCourses];
        int[] count = new int[numCourses];
        int[] path = new int[numCourses];
        int[] loop = new int[numCourses];
        int[] t = new int[numCourses];
        boolean[] flag = new boolean[numCourses];
        int[] Hash = new int[numCourses];
        int[] ind = new int[numCourses];
        int[] x = new int[numCourses];
        int[] count2 = new int[numCourses];
        int[] path2 = new int[numCourses];
        int[] loop2 = new int[numCourses];
        int[] t2 = new int[numCourses];
        boolean[] flag2 = new boolean[numCourses];
        int[] Hash2 = new int[numCourses];
        int[] ind2 = new int[numCourses];
        int[] x2 = new int[numCourses];
        int[] count3 = new int[numCourses];
        int[] path3 = new int[numCourses];
        int[] loop3 = new int[numCourses];
        int[] t3 = new int[numCourses];
        boolean[] flag3 = new boolean[numCourses];
        int[] Hash3 = new int[numCourses];
        int[] ind3 = new int[numCourses];
        int[] x3 = new int[numCourses];
        int[] count4 = new int[numCourses];
        int[] path4 = new int[numCourses];
        int[] loop4 = new int[numCourses];
        int[] t4 = new int[numCourses];
        boolean[] flag4 = new boolean[numCourses];
        int[] Hash4 = new int[numCourses];
        int[] ind4 = new int[numCourses];
        int[] x4 = new int[numCourses];
        int[] count5 = new int[numCourses];
        int[] path5 = new int[numCourses];
        int[] loop5 = new int[numCourses];
        int[] t5 = new int[numCourses];
        boolean[] flag5 = new boolean[numCourses];
        int[] Hash5 = new int[numCourses];
        int[] ind5 = new int[numCourses];
        int[] x5 = new int[numCourses];
        int[] count6 = new int[numCourses];
        int[] path6 = new int[numCourses];
        int[] loop6 = new int[numCourses];
        int[] t6 = new int[numCourses];
        boolean[] flag6 = new boolean[numCourses];
        int[] Hash6 = new int[numCourses];
        int[] ind6 = new int[numCourses];
        int[] x6 = new int[numCourses];
        int[] count7 = new int[numCourses];
        int[] path7 = new int[numCourses];
        int[] loop7 = new int[numCourses];
        int[] t7 = new int[numCourses];
        boolean[] flag7 = new boolean[numCourses];
        int[] Hash7 = new int[numCourses];
        int[] ind7 = new int[numCourses];
        int[] x7 = new int[numCourses];
        int[] count8 = new int[numCourses];
        int[] path8 = new int[numCourses];
        int[] loop8 = new int[numCourses];
        int[] t8 = new int[numCourses];
        boolean[] flag8 = new boolean[numCourses];
        int[] Hash8 = new int[numCourses];
        int[] ind8 = new int[numCourses];
        int[] x8 = new int[numCourses];
        int[] count9 = new int[numCourses];
        int[] path9 = new int[numCourses];
        int[] loop9 = new int[numCourses];
        int[] t9 = new int[numCourses];
        boolean[] flag9 = new boolean[numCourses];
        int[] Hash9 = new int[numCourses];
        int[] ind9 = new int[numCourses];
        int[] x9 = new int[numCourses];
        int[] count10 = new int[numCourses];
        int[] path10 = new int[numCourses];
        int[] loop10 = new int[numCourses];
        int[] t10 = new int[numCourses];
        boolean[] flag10 = new boolean[numCourses];
        int[] Hash10 = new int[numCourses];
        int[] ind10 = new int[numCourses];
        int[] x10 = new int[numCourses];
        int[] count11 = new int[numCourses];
        int[] path11 = new int[numCourses];
        int[] loop11 = new int[numCourses];
        int[] t11 = new int[numCourses];
        boolean[] flag11 = new boolean[numCourses];
        int[] Hash11 = new int[numCourses];
        int[] ind11 = new int[numCourses];
        int[] x11 = new int[numCourses];
        int[] count12 = new int[numCourses];
        int[] path12 = new int[numCourses];
        int[] loop12 = new int[numCourses];
        int[] t12 = new int[numCourses];
        boolean[] flag12 = new boolean[numCourses];
        int[] Hash12 = new int[numCourses];
        int[] ind12 = new int[numCourses];
        int[] x12 = new int[numCourses];
        int[] count13 = new int[numCourses];
        int[] path13 = new int[numCourses];
        int[] loop13 = new int[numCourses];
        int[] t13 = new int[numCourses];
        boolean[] flag13 = new boolean[numCourses];
        int[] Hash13 = new int[numCourses];
        int[] ind13 = new int[numCourses];
        int[] x13 = new int[numCourses];
        int[] count14 = new int[numCourses];
        int[] path14 = new int[numCourses];
        int[] loop14 = new int[numCourses];
        int[] t14 = new int[numCourses];
        boolean[] flag14 = new boolean[numCourses];
        int[] Hash14 = new int[numCourses];
        int[] ind14 = new int[numCourses];
        int[] x14 = new int[numCourses];
        int[] count15 = new int[numCourses];
        int[] path15 = new int[numCourses];
        int[] loop15 = new int[numCourses];
        int[] t15 = new int[numCourses];
        boolean[] flag15 = new boolean[numCourses];
        int[] Hash15 = new int[numCourses];
        int[] ind15 = new int[numCourses];
        int[] x15 = new int[numCourses];"
CodeGen,avatar,Python,Java,atcoder_ABC168_B.java,"public class atcoder_ABC168_B {
    public static void main(String[] args) {
        int K = Integer.parseInt(args[0]);
        String S = args[1];
        if (S.length() <= K) {
            return S;
        }
        return S.substring(0, K) + ""..."";
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int K = scanner.nextInt();
        scanner.nextLine();
        String S = scanner.nextLine();
        if (S.length() <= K) {
            System.out.println(S);
        } else {
            System.out.println(S.substring(0, K) + ""..."");
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_408_B.java,"public class codeforces_408_B {
    public int shoppingOffers(String[] items, String[] queries) {
        int[] bought = new int[26];
        int[] made = new int[26];
        for (int i = 0; i < items.length; i++) {
            bought[items[i].charAt(0) - 'a']++;
        }
        for (int i = 0; i < queries.length; i++) {
            made[queries[i].charAt(0) - 'a']++;
        }
        int res = 0;
        for (int i = 0; i < 26; i++) {
            if (bought[i] < made[i]) {
                res += bought[i];
            } else {
                res += made[i];
            }
        }
        return res;
    }
}","import java.util.*;

public class Main {
    public int shoppingOffers(String[] items, String[] queries) {
        int[] bought = new int[26];
        int[] made = new int[26];
        for (int i = 0; i < items.length; i++) {
            bought[items[i].charAt(0) - 'a']++;
        }
        for (int i = 0; i < queries.length; i++) {
            made[queries[i].charAt(0) - 'a']++;
        }
        int res = 0;
        for (int i = 0; i < 26; i++) {
            if (bought[i] < made[i]) {
                res += bought[i];
            } else {
                res += made[i];
            }
        }
        return res;
    }
}"
CodeGen,avatar,Python,Java,codeforces_644_B.java,"import java.util.Queue;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;

class Task {
    int time;
    int duration;
    int index;
    public Task(int time, int duration, int index) {
        this.time = time;
        this.duration = duration;
        this.index = index;
    }
}
class TaskQueue {
    private Queue<Task> queue;
    public TaskQueue() {
        queue = new java.util.PriorityQueue<Task>();
    }
    public void add(Task task) {
        queue.add(task);
    }
    public Task get() {
        return queue.poll();
    }
}
class Result {
    private Map<Integer, Integer> result;
    public Result() {
        result = new HashMap<Integer, Integer>();
    }
    public void put(int index, int finishTime) {
        result.put(index, finishTime);
    }
    public int get(int index) {
        return result.get(index);
    }
}
class Solution {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int b = in.nextInt();
        TaskQueue taskQueue = new TaskQueue();
        List<Task> tasks = new ArrayList<Task>();
        for(int i = 0; i < n; i++) {
            int time = in.nextInt();
            int duration = in.nextInt();
            int index = in.nextInt();
            tasks.add(new Task(time, duration, index));
        }
        for(Task task : tasks) {
            taskQueue.add(task);
        }
        Result result = new Result();
        while(!taskQueue.queue.isEmpty()) {
            Task task = taskQueue.get();
            if(task.time > result.get(task.index)) {
                result.put(task.index, task.time + task.duration);
            }
        }
        for(int i = 0; i < n; i++) {
            if(result.get(i)!= -1) {
                System.out.println(result.get(i));
            } else {
                System.out.println(""-1"");
            }
        }
    }
}","import java.util.Queue;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;

class Task {
    int time;
    int duration;
    int index;
    public Task(int time, int duration, int index) {
        this.time = time;
        this.duration = duration;
        this.index = index;
    }
}
class TaskQueue {
    private Queue<Task> queue;
    public TaskQueue() {
        queue = new java.util.PriorityQueue<Task>();
    }
    public void add(Task task) {
        queue.add(task);
    }
    public Task get() {
        return queue.poll();
    }
}
class Result {
    private Map<Integer, Integer> result;
    public Result() {
        result = new HashMap<Integer, Integer>();
    }
    public void put(int index, int finishTime) {
        result.put(index, finishTime);
    }
    public int get(int index) {
        return result.get(index);
    }
}
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int b = in.nextInt();
        TaskQueue taskQueue = new TaskQueue();
        List<Task> tasks = new ArrayList<Task>();
        for(int i = 0; i < n; i++) {
            int time = in.nextInt();
            int duration = in.nextInt();
            int index = in.nextInt();
            tasks.add(new Task(time, duration, index));
        }
        for(Task task : tasks) {
            taskQueue.add(task);
        }
        Result result = new Result();
        while(!taskQueue.queue.isEmpty()) {
            Task task = taskQueue.get();
            if(task.time > result.get(task.index)) {
                result.put(task.index, task.time + task.duration);
            }
        }
        for(int i = 0; i < n; i++) {
            if(result.get(i)!= -1) {
                System.out.println(result.get(i));
            } else {
                System.out.println(""-1"");
            }
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_518_B.java,"public class codeforces_518_B {
    public int numSimilarGroups(String[] A, String[] B) {
        int yay = 0;
        int whoops = 0;
        HashMap<Character, Integer> freqs = new HashMap<Character, Integer>();
        HashMap<Character, Integer> freqt = new HashMap<Character, Integer>();
        for (String s : A) {
            for (char letra : s.toCharArray()) {
                if (freqs.containsKey(letra)) {
                    freqs.put(letra, freqs.get(letra) + 1);
                } else {
                    freqs.put(letra, 1);
                }
            }
        }
        for (String t : B) {
            for (char letra : t.toCharArray()) {
                if (freqt.containsKey(letra)) {
                    freqt.put(letra, freqt.get(letra) + 1);
                } else {
                    freqt.put(letra, 1);
                }
            }
        }
        for (char letra : freqs.keySet()) {
            while (freqs.get(letra) > 0 && letra in freqt && freqt.get(letra) > 0) {
                yay++;
                freqs.put(letra, freqs.get(letra) - 1);
                freqt.put(letra, freqt.get(letra) - 1);
            }
        }
        for (char letra : freqs.keySet()) {
            while (freqs.get(letra) > 0) {
                if (letra.isLowerCase() && letra.toUpperCase() in freqt.keySet() && freqt.get(letra.toUpperCase()) > 0) {
                    whoops++;
                    freqs.put(letra, freqs.get(letra) - 1);
                    freqt.put(letra.toUpperCase(), freqt.get(letra.toUpperCase()) - 1);
                } else if (letra.isUpperCase() && letra.toLowerCase() in freqt.keySet() && freqt.get(letra.toLowerCase()) > 0) {
                    whoops++;
                    freqs.put(letra, freqs.get(letra) - 1);
                    freqt.put(letra.toLowerCase(), freqt.get(letra.toLowerCase()) - 1);
                } else {
                    break;
                }
            }
        }
        return yay + whoops;
    }
}","public class Main {
    public int numSimilarGroups(String[] A, String[] B) {
        int yay = 0;
        int whoops = 0;
        HashMap<Character, Integer> freqs = new HashMap<Character, Integer>();
        HashMap<Character, Integer> freqt = new HashMap<Character, Integer>();
        for (String s : A) {
            for (char letra : s.toCharArray()) {
                if (freqs.containsKey(letra)) {
                    freqs.put(letra, freqs.get(letra) + 1);
                } else {
                    freqs.put(letra, 1);
                }
            }
        }
        for (String t : B) {
            for (char letra : t.toCharArray()) {
                if (freqt.containsKey(letra)) {
                    freqt.put(letra, freqt.get(letra) + 1);
                } else {
                    freqt.put(letra, 1);
                }
            }
        }
        for (char letra : freqs.keySet()) {
            while (freqs.get(letra) > 0 && letra in freqt && freqt.get(letra) > 0) {
                yay++;
                freqs.put(letra, freqs.get(letra) - 1);
                freqt.put(letra, freqt.get(letra) - 1);
            }
        }
        for (char letra : freqs.keySet()) {
            while (freqs.get(letra) > 0) {
                if (letra.isLowerCase() && letra.toUpperCase() in freqt.keySet() && freqt.get(letra.toUpperCase()) > 0) {
                    whoops++;
                    freqs.put(letra, freqs.get(letra) - 1);
                    freqt.put(letra.toUpperCase(), freqt.get(letra.toUpperCase()) - 1);
                } else if (letra.isUpperCase() && letra.toLowerCase() in freqt.keySet() && freqt.get(letra.toLowerCase()) > 0) {
                    whoops++;
                    freqs.put(letra, freqs.get(letra) - 1);
                    freqt.put(letra.toLowerCase(), freqt.get(letra.toLowerCase()) - 1);
                } else {
                    break;
                }
            }
        }
        return yay + whoops;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC143_D.java,"public class atcoder_ABC143_D {
    public int maxSubArray(int[] A) {
        int n = A.length;
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = A[i];
        }
        l = Arrays.sort(l);
        int ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int a = l[i];
                int b = l[j];
                int right = Arrays.binarySearch(l, a + b);
                int left = Arrays.binarySearch(l, max(a - b, b - a));
                int tmp = 0;
                if (left <= i) {
                    tmp += 1;
                }
                if (i < right) {
                    tmp += 1;
                }
                if (left <= j) {
                    tmp += 1;
                }
                if (j < right) {
                    tmp += 1;
                }
                ans += tmp;
            }
        }
        return ans / 3;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = scanner.nextInt();
        }
        System.out.println(maxSubArray(l));
    }
    public static int maxSubArray(int[] A) {
        int n = A.length;
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = A[i];
        }
        Arrays.sort(l);
        int ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int a = l[i];
                int b = l[j];
                int right = Arrays.binarySearch(l, a + b);
                int left = Arrays.binarySearch(l, Math.max(a - b, b - a));
                int tmp = 0;
                if (left <= i && i < right) {
                    tmp -= 1;
                }
                if (left <= j && j < right) {
                    tmp -= 1;
                }
                ans += tmp;
            }
        }
        return ans / 3;
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC010_B.java,"public class atcoder_AGC010_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int sum = 0;
        for(int i=0; i < n; i++){
            sum += a[i];
        }
        int k = sum / (n * (n + 1) / 2);
        a = Arrays.copyOf(a, a.length + 1);
        a[a.length - 1] = a[0];
        int[] b = new int[a.length];
        for(int i=1; i < a.length; i++){
            b[i] = (k - a[i] + a[i - 1]) % n;
        }
        boolean[] c = new boolean[n];
        for(int i=0; i < b.length; i++){
            c[b[i]] = true;
        }
        for(int i=0; i < n; i++){
            if(c[i]){
                System.out.println(""NO"");
                return;
            }
        }
        System.out.println(""YES"");
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int sum = 0;
        for(int i=0; i < n; i++){
            sum += a[i];
        }
        int k = sum / (n * (n + 1) / 2);
        a = Arrays.copyOf(a, a.length + 1);
        a[a.length - 1] = a[0];
        int[] b = new int[a.length];
        for(int i=1; i < a.length; i++){
            b[i] = ((k - a[i] + a[i - 1]) % n + n) % n;
        }
        boolean[] c = new boolean[n];
        for(int i=0; i < b.length; i++){
            c[b[i]] = true;
        }
        for(int i=0; i < n; i++){
            if(c[i]){
                System.out.println(""NO"");
                return;
            }
        }
        System.out.println(""YES"");
    }
}"
CodeGen,avatar,Python,Java,codeforces_567_A.java,"Input Format

The first line contains an integer, T, the number of test cases.
T lines follow. Each line contains an integer, N, the number of elements in the array.
The next N lines contain the elements of the array.

Output Format

For each test case, print the minimum number of moves required to make the array sorted.

Sample Input

2
3
1 2 3
2 3 1
Sample Output

1
0
Explanation

In the first test case, we have an array of 3 elements, and the minimum number of moves required to make the array sorted is 1.
In the second test case, we have an array of 2 elements, and the minimum number of moves required to make the array sorted is 0.


import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main ( String [ ] args ) {
		// code
	}
}","Input Format

The first line contains an integer, T, the number of test cases.
T lines follow. Each line contains an integer, N, the number of elements in the array.
The next N lines contain the elements of the array.

Output Format

For each test case, print the minimum number of moves required to make the array sorted.

Sample Input

2
3
1 2 3
2 3 1
Sample Output

1
0
Explanation

In the first test case, we have an array of 3 elements, and the minimum number of moves required to make the array sorted is 1.
In the second test case, we have an array of 2 elements, and the minimum number of moves required to make the array sorted is 0.


import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main ( String [ ] args ) {
		// code
	}
}"
CodeGen,avatar,Python,Java,atcoder_ABC142_A.java,"public class atcoder_ABC142_A {
    public static void main ( String [ ] args ) {
        int n = Integer.parseInt ( StdIn.readString ( ) );
        int t = 0;
        for ( int i = 0; i < n; i++ ) {
            if ( i % 2 == 0 ) {
                t += 1;
            }
        }
        StdOut.println ( t / n );
    }
}","import java.util.*;

public class Main {
    public static void main ( String [ ] args ) {
        Scanner scanner = new Scanner( System.in );
        int n = Integer.parseInt ( scanner.nextLine ( ) );
        int t = 0;
        for ( int i = 0; i < n; i++ ) {
            if ( i % 2 == 0 ) {
                t += 1;
            }
        }
        System.out.println( ( double ) t / n );
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC119_B.java,"public class atcoder_ABC119_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        double[] x = new double[n];
        for(int i = 0; i < n; i++){
            x[i] = in.nextDouble();
        }
        double sum = 0;
        for(int i = 0; i < n; i++){
            sum += x[i];
        }
        System.out.println(sum);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        double[] x = new double[n];
        for(int i = 0; i < n; i++){
            x[i] = in.nextDouble();
        }
        double sum = 0;
        for(int i = 0; i < n; i++){
            sum += x[i];
        }
        System.out.println(sum);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC132_A.java,"public class atcoder_ABC132_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String S = in.next();
        int[] c = new int[128];
        Set<Character> Sa = new HashSet<Character>();
        for (int i = 0; i < n; i++) {
            Sa.add(S.charAt(i));
        }
        if (Sa.size()!= 2) {
            System.out.println(""No"");
            return;
        }
        for (Character c1 : Sa) {
            c[c1]++;
        }
        for (Character c2 : Sa) {
            if (c[c2]!= 2) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        int n = S.length();
        int[] c = new int[128];
        Set<Character> Sa = new HashSet<Character>();
        for (int i = 0; i < n; i++) {
            Sa.add(S.charAt(i));
            c[S.charAt(i)]++;
        }
        if (Sa.size()!= 2) {
            System.out.println(""No"");
            return;
        }
        for (Character c2 : Sa) {
            if (c[c2]!= 2) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC024_B.java,"public class atcoder_AGC024_B {
    public static void main(String[] args) {
        int N = Integer.parseInt(new Scanner(System.in).nextLine());
        int[] P = new int[N];
        for (int i = 0; i < N; i++) {
            P[i] = Integer.parseInt(new Scanner(System.in).nextLine());
        }
        editorial(N, P);
    }

    public static void editorial(int N, int[] P) {
        if (N == 1) {
            System.out.println(0);
            return;
        }
        int[] a = new int[N + 1];
        for (int i = 0; i < N; i++) {
            a[P[i]] = i;
        }
        int tmp = 1;
        int max_len = 1;
        for (int i = 1; i < N; i++) {
            if (a[i] < a[i + 1]) {
                tmp += 1;
                max_len = Math.max(max_len, tmp);
            } else {
                tmp = 1;
            }
        }
        int ans = N - max_len;
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = Integer.parseInt(scanner.nextLine());
        int[] P = new int[N];
        for (int i = 0; i < N; i++) {
            P[i] = Integer.parseInt(scanner.nextLine());
        }
        editorial(N, P);
    }

    public static void editorial(int N, int[] P) {
        if (N == 1) {
            System.out.println(0);
            return;
        }
        int[] a = new int[N + 1];
        for (int i = 0; i < N; i++) {
            a[P[i]] = i;
        }
        int tmp = 1;
        int max_len = 1;
        for (int i = 1; i < N; i++) {
            if (a[i] < a[i + 1]) {
                tmp += 1;
                max_len = Math.max(max_len, tmp);
            } else {
                tmp = 1;
            }
        }
        int ans = N - max_len;
        System.out.println(ans);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ARC102_C.java,"import java.util.*;
import java.lang.*;
import java.math.*;

class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int k = in.nextInt();
		int[] a = new int[n];
		for(int a_i=0; a_i < n; a_i++){
			a[a_i] = in.nextInt();
		}
		int[] b = new int[n];
		for(int b_i=0; b_i < n; b_i++){
			b[b_i] = in.nextInt();
		}
		int[] c = new int[n];
		for(int c_i=0; c_i < n; c_i++){
			c[c_i] = in.nextInt();
		}
		int[] d = new int[n];
		for(int d_i=0; d_i < n; d_i++){
			d[d_i] = in.nextInt();
		}
		int[] e = new int[n];
		for(int e_i=0; e_i < n; e_i++){
			e[e_i] = in.nextInt();
		}
		int[] f = new int[n];
		for(int f_i=0; f_i < n; f_i++){
			f[f_i] = in.nextInt();
		}
		int[] g = new int[n];
		for(int g_i=0; g_i < n; g_i++){
			g[g_i] = in.nextInt();
		}
		int[] h = new int[n];
		for(int h_i=0; h_i < n; h_i++){
			h[h_i] = in.nextInt();
		}
		int[] i = new int[n];
		for(int i_i=0; i_i < n; i_i++){
			i[i_i] = in.nextInt();
		}
		int[] j = new int[n];
		for(int j_i=0; j_i < n; j_i++){
			j[j_i] = in.nextInt();
		}
		int[] k = new int[n];
		for(int k_i=0; k_i < n; k_i++){
			k[k_i] = in.nextInt();
		}
		int[] l = new int[n];
		for(int l_i=0; l_i < n; l_i++){
			l[l_i] = in.nextInt();
		}
		int[] m = new int[n];
		for(int m_i=0; m_i < n; m_i++){
			m[m_i] = in.nextInt();
		}
		int[] n = new int[n];
		for(int n_i=0; n_i < n; n_i++){
			n[n_i] = in.nextInt();
		}
		int[] o = new int[n];
		for(int o_i=0; o_i < n; o_i++){
			o[o_i] = in.nextInt();
		}
		int[] p = new int[n];
		for(int p_i=0; p_i < n; p_i++){
			p[p_i] = in.nextInt();
		}
		int[] q = new int[n];
		for(int q_i=0; q_i < n; q_i++){
			q[q_i] = in.nextInt();
		}
		int[] r = new int[n];
		for(int r_i=0; r_i < n; r_i++){
			r[r_i] = in.nextInt();
		}
		int[] s = new int[n];
		for(int s_i=0; s_i < n; s_i++){
			s[s_i] = in.nextInt();
		}
		int[] t = new int[n];
		for(int t_i=0; t_i < n; t_i++){
			t[t_i] = in.nextInt();
		}
		int[] u = new int[n];
		for(int u_i=0; u_i < n; u_i++){
			u[u_i] = in.nextInt();
		}
		int[] v = new int[n];
		for(int v_i=0; v_i < n; v_i++){
			v[v_i] = in.nextInt();
		}
		int[] w = new int[n];
		for(int w_i=0; w_i < n; w_i++){
			w[w_i] = in.nextInt();
		}
		int[] x = new int[n];
		for(int x_i=0; x_i < n; x_i++){
			x[x_i] = in.nextInt();
		}
		int[] y = new int[n];
		for(int y_i=0; y_i < n; y_i++){
			y[y_i] = in.nextInt();
		}
		int[] z = new int[n];
		for(int z_i=0; z_i < n; z_i++){
			z[z_i] = in.nextInt();
		}
		int[] aa = new int[n];
		for(int aa_i=0; aa_i < n; aa_i++){
			aa[aa_i] = in.nextInt();
		}
		int[] bb = new int[n];
		for(int bb_i=0; bb_i < n; bb_i++){
			bb[bb_i] = in.nextInt();
		}
		int[] cc = new int[n];
		for(int cc_i=0; cc_i < n; cc_i++){
			cc[cc_i] = in.nextInt();
		}","import java.util.*;
import java.lang.*;
import java.math.*;

class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int k = in.nextInt();
		int[] a = new int[n];
		for(int a_i=0; a_i < n; a_i++){
			a[a_i] = in.nextInt();
		}
		int[] b = new int[n];
		for(int b_i=0; b_i < n; b_i++){
			b[b_i] = in.nextInt();
		}
		int[] c = new int[n];
		for(int c_i=0; c_i < n; c_i++){
			c[c_i] = in.nextInt();
		}
		int[] d = new int[n];
		for(int d_i=0; d_i < n; d_i++){
			d[d_i] = in.nextInt();
		}
		int[] e = new int[n];
		for(int e_i=0; e_i < n; e_i++){
			e[e_i] = in.nextInt();
		}
		int[] f = new int[n];
		for(int f_i=0; f_i < n; f_i++){
			f[f_i] = in.nextInt();
		}
		int[] g = new int[n];
		for(int g_i=0; g_i < n; g_i++){
			g[g_i] = in.nextInt();
		}
		int[] h = new int[n];
		for(int h_i=0; h_i < n; h_i++){
			h[h_i] = in.nextInt();
		}
		int[] i = new int[n];
		for(int i_i=0; i_i < n; i_i++){
			i[i_i] = in.nextInt();
		}
		int[] j = new int[n];
		for(int j_i=0; j_i < n; j_i++){
			j[j_i] = in.nextInt();
		}
		int[] k = new int[n];
		for(int k_i=0; k_i < n; k_i++){
			k[k_i] = in.nextInt();
		}
		int[] l = new int[n];
		for(int l_i=0; l_i < n; l_i++){
			l[l_i] = in.nextInt();
		}
		int[] m = new int[n];
		for(int m_i=0; m_i < n; m_i++){
			m[m_i] = in.nextInt();
		}
		int[] n = new int[n];
		for(int n_i=0; n_i < n; n_i++){
			n[n_i] = in.nextInt();
		}
		int[] o = new int[n];
		for(int o_i=0; o_i < n; o_i++){
			o[o_i] = in.nextInt();
		}
		int[] p = new int[n];
		for(int p_i=0; p_i < n; p_i++){
			p[p_i] = in.nextInt();
		}
		int[] q = new int[n];
		for(int q_i=0; q_i < n; q_i++){
			q[q_i] = in.nextInt();
		}
		int[] r = new int[n];
		for(int r_i=0; r_i < n; r_i++){
			r[r_i] = in.nextInt();
		}
		int[] s = new int[n];
		for(int s_i=0; s_i < n; s_i++){
			s[s_i] = in.nextInt();
		}
		int[] t = new int[n];
		for(int t_i=0; t_i < n; t_i++){
			t[t_i] = in.nextInt();
		}
		int[] u = new int[n];
		for(int u_i=0; u_i < n; u_i++){
			u[u_i] = in.nextInt();
		}
		int[] v = new int[n];
		for(int v_i=0; v_i < n; v_i++){
			v[v_i] = in.nextInt();
		}
		int[] w = new int[n];
		for(int w_i=0; w_i < n; w_i++){
			w[w_i] = in.nextInt();
		}
		int[] x = new int[n];
		for(int x_i=0; x_i < n; x_i++){
			x[x_i] = in.nextInt();
		}
		int[] y = new int[n];
		for(int y_i=0; y_i < n; y_i++){
			y[y_i] = in.nextInt();
		}
		int[] z = new int[n];
		for(int z_i=0; z_i < n; z_i++){
			z[z_i] = in.nextInt();
		}
		int[] aa = new int[n];
		for(int aa_i=0; aa_i < n; aa_i++){
			aa[aa_i] = in.nextInt();
		}
		int[] bb = new int[n];
		for(int bb_i=0; bb_i < n; bb_i++){
			bb[bb_i] = in.nextInt();
		}
		int[] cc = new int[n];
		for(int cc_i=0; cc_i < n; cc_i++){
			cc[cc_i] = in.nextInt();
		}"
CodeGen,avatar,Python,Java,atcoder_ABC106_C.java,"import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.regex.*;

class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int[] b = new int[n];
        for(int b_i=0; b_i < n; b_i++){
            b[b_i] = in.nextInt();
        }
        int[] c = new int[n];
        for(int c_i=0; c_i < n; c_i++){
            c[c_i] = in.nextInt();
        }
        int[] d = new int[n];
        for(int d_i=0; d_i < n; d_i++){
            d[d_i] = in.nextInt();
        }
        int[] e = new int[n];
        for(int e_i=0; e_i < n; e_i++){
            e[e_i] = in.nextInt();
        }
        int[] f = new int[n];
        for(int f_i=0; f_i < n; f_i++){
            f[f_i] = in.nextInt();
        }
        int[] g = new int[n];
        for(int g_i=0; g_i < n; g_i++){
            g[g_i] = in.nextInt();
        }
        int[] h = new int[n];
        for(int h_i=0; h_i < n; h_i++){
            h[h_i] = in.nextInt();
        }
        int[] i = new int[n];
        for(int i_i=0; i_i < n; i_i++){
            i[i_i] = in.nextInt();
        }
        int[] j = new int[n];
        for(int j_i=0; j_i < n; j_i++){
            j[j_i] = in.nextInt();
        }
        int[] k = new int[n];
        for(int k_i=0; k_i < n; k_i++){
            k[k_i] = in.nextInt();
        }
        int[] l = new int[n];
        for(int l_i=0; l_i < n; l_i++){
            l[l_i] = in.nextInt();
        }
        int[] m = new int[n];
        for(int m_i=0; m_i < n; m_i++){
            m[m_i] = in.nextInt();
        }
        int[] n = new int[n];
        for(int n_i=0; n_i < n; n_i++){
            n[n_i] = in.nextInt();
        }
        int[] o = new int[n];
        for(int o_i=0; o_i < n; o_i++){
            o[o_i] = in.nextInt();
        }
        int[] p = new int[n];
        for(int p_i=0; p_i < n; p_i++){
            p[p_i] = in.nextInt();
        }
        int[] q = new int[n];
        for(int q_i=0; q_i < n; q_i++){
            q[q_i] = in.nextInt();
        }
        int[] r = new int[n];
        for(int r_i=0; r_i < n; r_i++){
            r[r_i] = in.nextInt();
        }
        int[] s = new int[n];
        for(int s_i=0; s_i < n; s_i++){
            s[s_i] = in.nextInt();
        }
        int[] t = new int[n];
        for(int t_i=0; t_i < n; t_i++){
            t[t_i] = in.nextInt();
        }
        int[] u = new int[n];
        for(int u_i=0; u_i < n; u_i++){
            u[u_i] = in.nextInt();
        }
        int[] v = new int[n];
        for(int v_i=0; v_i < n; v_i++){
            v[v_i] = in.nextInt();
        }
        int[] w = new int[n];
        for(int w_i=0; w_i < n; w_i++){
            w[w_i] = in.nextInt();
        }
        int[] x = new int[n];
        for(int x_i=0; x_i < n; x_i++){
            x[x_i] = in.nextInt();
        }
        int[] y = new int[n];
        for(int y_i=0; y_i < n; y_i++){
            y[y_i] = in.nextInt();
        }
        int[] z = new int[n];
        for(int z_i=0; z_i < n; z_i++){
            z[z_i] = in.nextInt();
        }
        int[] aa = new int[n];
        for(int aa_i=0; aa_i < n; aa_i++){
            aa[aa_i] = in.nextInt();
        }
        int[] bb = new int[n];
        for(int bb_i=0; bb_i < n; bb_i++){
            bb[bb_i] = in.nextInt();
        }
        int[] cc = new int[n];
        for(int cc_i=0; cc_i < n; cc_i++){
            cc[cc_i] = in.nextInt();
        }
        int[] dd = new int[n];
        for(int dd_i=0; dd_i < n; dd_i++){
            dd[dd_i] = in.nextInt();
        }
        int[] ee = new int[n];
        for(int ee_i=0;","import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.regex.*;

class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int[] b = new int[n];
        for(int b_i=0; b_i < n; b_i++){
            b[b_i] = in.nextInt();
        }
        int[] c = new int[n];
        for(int c_i=0; c_i < n; c_i++){
            c[c_i] = in.nextInt();
        }
        int[] d = new int[n];
        for(int d_i=0; d_i < n; d_i++){
            d[d_i] = in.nextInt();
        }
        int[] e = new int[n];
        for(int e_i=0; e_i < n; e_i++){
            e[e_i] = in.nextInt();
        }
        int[] f = new int[n];
        for(int f_i=0; f_i < n; f_i++){
            f[f_i] = in.nextInt();
        }
        int[] g = new int[n];
        for(int g_i=0; g_i < n; g_i++){
            g[g_i] = in.nextInt();
        }
        int[] h = new int[n];
        for(int h_i=0; h_i < n; h_i++){
            h[h_i] = in.nextInt();
        }
        int[] i = new int[n];
        for(int i_i=0; i_i < n; i_i++){
            i[i_i] = in.nextInt();
        }
        int[] j = new int[n];
        for(int j_i=0; j_i < n; j_i++){
            j[j_i] = in.nextInt();
        }
        int[] k = new int[n];
        for(int k_i=0; k_i < n; k_i++){
            k[k_i] = in.nextInt();
        }
        int[] l = new int[n];
        for(int l_i=0; l_i < n; l_i++){
            l[l_i] = in.nextInt();
        }
        int[] m = new int[n];
        for(int m_i=0; m_i < n; m_i++){
            m[m_i] = in.nextInt();
        }
        int[] n = new int[n];
        for(int n_i=0; n_i < n; n_i++){
            n[n_i] = in.nextInt();
        }
        int[] o = new int[n];
        for(int o_i=0; o_i < n; o_i++){
            o[o_i] = in.nextInt();
        }
        int[] p = new int[n];
        for(int p_i=0; p_i < n; p_i++){
            p[p_i] = in.nextInt();
        }
        int[] q = new int[n];
        for(int q_i=0; q_i < n; q_i++){
            q[q_i] = in.nextInt();
        }
        int[] r = new int[n];
        for(int r_i=0; r_i < n; r_i++){
            r[r_i] = in.nextInt();
        }
        int[] s = new int[n];
        for(int s_i=0; s_i < n; s_i++){
            s[s_i] = in.nextInt();
        }
        int[] t = new int[n];
        for(int t_i=0; t_i < n; t_i++){
            t[t_i] = in.nextInt();
        }
        int[] u = new int[n];
        for(int u_i=0; u_i < n; u_i++){
            u[u_i] = in.nextInt();
        }
        int[] v = new int[n];
        for(int v_i=0; v_i < n; v_i++){
            v[v_i] = in.nextInt();
        }
        int[] w = new int[n];
        for(int w_i=0; w_i < n; w_i++){
            w[w_i] = in.nextInt();
        }
        int[] x = new int[n];
        for(int x_i=0; x_i < n; x_i++){
            x[x_i] = in.nextInt();
        }
        int[] y = new int[n];
        for(int y_i=0; y_i < n; y_i++){
            y[y_i] = in.nextInt();
        }
        int[] z = new int[n];
        for(int z_i=0; z_i < n; z_i++){
            z[z_i] = in.nextInt();
        }
        int[] aa = new int[n];
        for(int aa_i=0; aa_i < n; aa_i++){
            aa[aa_i] = in.nextInt();
        }
        int[] bb = new int[n];
        for(int bb_i=0; bb_i < n; bb_i++){
            bb[bb_i] = in.nextInt();
        }
        int[] cc = new int[n];
        for(int cc_i=0; cc_i < n; cc_i++){
            cc[cc_i] = in.nextInt();
        }
        int[] dd = new int[n];
        for(int dd_i=0; dd_i < n; dd_i++){
            dd[dd_i] = in.nextInt();
        }
        int[] ee = new int[n];
        for(int ee_i=0;"
CodeGen,avatar,Python,Java,atcoder_ABC042_A.java,"public class atcoder_ABC042_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int[] A = new int[3];
        for (int i = 0; i < 3; i++) {
            A[i] = in.nextInt();
        }
        int sum = 0;
        int count = 0;
        for (int i = 0; i < 3; i++) {
            if (A[i] == 5) {
                count++;
                sum += A[i];
            }
        }
        if (count == 2) {
            System.out.println(sum == 17? ""YES"" : ""NO"");
        } else {
            System.out.println(""NO"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int[] A = new int[3];
        for (int i = 0; i < 3; i++) {
            A[i] = in.nextInt();
        }
        int sum = 0;
        int count = 0;
        for (int i = 0; i < 3; i++) {
            if (A[i] == 5) {
                count++;
            }
            sum += A[i];
        }
        if (count == 2) {
            System.out.println(sum == 17? ""YES"" : ""NO"");
        } else {
            System.out.println(""NO"");
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_276_B.java,"public class codeforces_276_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int arr_i=0; arr_i < n; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        int[] dt = new int[101];
        for(int i=0; i < n; i++){
            if(arr[i] < 100){
                dt[arr[i]]++;
            }
        }
        boolean x = true;
        for(int key : dt){
            if(key % 2!= 0){
                x = false;
                break;
            }
        }
        if(x){
            System.out.println(""First"");
        }else if(!x && arr.length % 2 == 0){
            System.out.println(""Second"");
        }else if(!x && arr.length % 2!= 0){
            System.out.println(""First"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int arr_i=0; arr_i < n; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        int[] dt = new int[101];
        for(int i=0; i < n; i++){
            if(arr[i] < 100){
                dt[arr[i]]++;
            }
        }
        boolean x = true;
        for(int key : dt){
            if(key % 2!= 0){
                x = false;
                break;
            }
        }
        if(x){
            System.out.println(""First"");
        }else if(!x && arr.length % 2 == 0){
            System.out.println(""Second"");
        }else if(!x && arr.length % 2!= 0){
            System.out.println(""First"");
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_7_B.java,"public class codeforces_7_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        int m = in.nextInt();
        int[] alocuente = new int[m];
        int ind = 1;
        for (int i = 0; i < t; i++) {
            String[] ops = in.next().split("" "");
            if (ops[0].equals(""alloc"")) {
                int pos = 0;
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        pos += 1;
                        if (pos == Integer.parseInt(ops[1])) {
                            alocuente[j - Integer.parseInt(ops[1]) + 1] = ind;
                            ind += 1;
                            break;
                        }
                    } else {
                        pos = 0;
                    }
                }
            } else if (ops[0].equals(""erase"")) {
                int pos = 0;
                if (Integer.parseInt(ops[1])!= 0) {
                    for (int j = 0; j < m; j++) {
                        if (Integer.parseInt(ops[1]) > 0 && alocuente[j] == Integer.parseInt(ops[1])) {
                            alocuente[j] = 0;
                        }
                    }
                }
            } else if (ops[0].equals(""defragment"")) {
                int cnt = 0;
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        alocuente[j] = ind;
                        ind += 1;
                        cnt += 1;
                    }
                }
                for (int j = 0; j < cnt; j++) {
                    alocuente[j] = 0;
                }
            }
        }
        for (int j = 0; j < m; j++) {
            if (alocuente[j]!= 0) {
                System.out.print(alocuente[j]);
            }
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        int m = in.nextInt();
        int[] alocuente = new int[m];
        int ind = 1;
        for (int i = 0; i < t; i++) {
            String[] ops = in.next().split("" "");
            if (ops[0].equals(""alloc"")) {
                int pos = 0;
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        pos += 1;
                        if (pos == Integer.parseInt(ops[1])) {
                            alocuente[j - Integer.parseInt(ops[1]) + 1] = ind;
                            ind += 1;
                            break;
                        }
                    } else {
                        pos = 0;
                    }
                }
            } else if (ops[0].equals(""erase"")) {
                int pos = 0;
                if (Integer.parseInt(ops[1])!= 0) {
                    for (int j = 0; j < m; j++) {
                        if (Integer.parseInt(ops[1]) > 0 && alocuente[j] == Integer.parseInt(ops[1])) {
                            alocuente[j] = 0;
                        }
                    }
                }
            } else if (ops[0].equals(""defragment"")) {
                int cnt = 0;
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        alocuente[j] = ind;
                        ind += 1;
                        cnt += 1;
                    }
                }
                for (int j = 0; j < cnt; j++) {
                    alocuente[j] = 0;
                }
            }
        }
        for (int j = 0; j < m; j++) {
            if (alocuente[j]!= 0) {
                System.out.print(alocuente[j]);
            }
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_342_B.java,"public class codeforces_342_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int s = in.nextInt();
        int f = in.nextInt();
        if (s < f) {
            int d = 1;
            String c = ""R"";
        } else {
            int d = -1;
            String c = ""L"";
        }
        String res = """";
        int i = 1;
        int j = s;
        int t = in.nextInt();
        int l = in.nextInt();
        int r = in.nextInt();
        int k = 1;
        while (j!= f) {
            if (i > t && k < m) {
                t = in.nextInt();
                l = in.nextInt();
                r = in.nextInt();
                k++;
            }
            if (i == t && (l <= j && j <= r || l <= j + d && j + d <= r)) {
                res += ""X"";
            } else {
                res += c;
                j += d;
            }
            i++;
        }
        System.out.println(res);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int s = in.nextInt();
        int f = in.nextInt();
        int d;
        String c;
        if (s < f) {
            d = 1;
            c = ""R"";
        } else {
            d = -1;
            c = ""L"";
        }
        String res = """";
        int i = 1;
        int j = s;
        int t = in.nextInt();
        int l = in.nextInt();
        int r = in.nextInt();
        int k = 1;
        while (j!= f) {
            if (i > t && k < m) {
                t = in.nextInt();
                l = in.nextInt();
                r = in.nextInt();
                k++;
            }
            if (i == t && (l <= j && j <= r || l <= j + d && j + d <= r)) {
                res += ""X"";
            } else {
                res += c;
                j += d;
            }
            i++;
        }
        System.out.println(res);
    }
}"
CodeGen,avatar,Python,Java,codeforces_242_B.java,"import java.io.*;
import java.util.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.regex.*;
import java.nio.charset.*;
import java.nio.file.*;
import java.nio.file.attribute.*;
import java.nio.file.spi.*;
import java.nio.channels.*;
import java.nio.ByteBuffer;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel.MapMode;
import java.io.IOException;
import java.io.UncheckedIOException;
import java.io.FileNotFoundException;
import java.util.concurrent.atomic.*;
import java.util.concurrent.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.locks.ReentrantLock;
import java.util.function.*;
import java.util.stream.*;
import java.util.Optional;
import java.util.OptionalDouble;
import java.util.OptionalInt;
import java.util.OptionalLong;
import java.util.Objects;
import java.util.LinkedList;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.Enumeration;
import java.util.Spliterator;
import java.util.Spliterators;
import java.util.function.Consumer;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference","import java.io.*;
import java.util.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.regex.*;
import java.nio.charset.*;
import java.nio.file.*;
import java.nio.file.attribute.*;
import java.nio.file.spi.*;
import java.nio.channels.*;
import java.nio.ByteBuffer;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel.MapMode;
import java.io.IOException;
import java.io.UncheckedIOException;
import java.io.FileNotFoundException;
import java.util.concurrent.atomic.*;
import java.util.concurrent.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.locks.ReentrantLock;
import java.util.function.*;
import java.util.stream.*;
import java.util.Optional;
import java.util.OptionalDouble;
import java.util.OptionalInt;
import java.util.OptionalLong;
import java.util.Objects;
import java.util.LinkedList;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.Enumeration;
import java.util.Spliterator;
import java.util.Spliterators;
import java.util.function.Consumer;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference"
CodeGen,avatar,Python,Java,atcoder_AGC025_A.java,"public class atcoder_AGC025_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[5];
        for(int i=0;i<5;i++)
            arr[i] = in.nextInt();
        int sum = 0;
        for(int i=0;i<5;i++)
            sum += arr[i];
        if(sum==n)
            System.out.println(10);
        else
            System.out.println(sum);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[5];
        for(int i=0;i<5;i++)
            arr[i] = in.nextInt();
        int sum = 0;
        for(int i=0;i<5;i++)
            sum += arr[i];
        if(sum==n)
            System.out.println(10);
        else
            System.out.println(sum);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC171_E.java,"public class atcoder_ABC171_E {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int total = 0;
        for(int a0 = 0; a0 < n; a0++){
            total = total ^ a[a0];
        }
        System.out.println(Arrays.toString(a).replaceAll(""\\[|\\]|\\s+"", """").replaceAll("","", """"));
        System.out.println(total);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int total = 0;
        for(int a0 = 0; a0 < n; a0++){
            total = total ^ a[a0];
        }
        System.out.println(Arrays.toString(a).replaceAll(""\\[|\\]|\\s+"", """").replaceAll("","", """"));
        System.out.println(total);
    }
}"
CodeGen,avatar,Python,Java,codeforces_544_B.java,"public class codeforces_544_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int x = 0;
        if (k <= max(n*n/2, n*n - (n*n/2))) {
            System.out.println(""YES"");
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (i % 2 == j % 2 && x < k) {
                        System.out.print(""L"");
                        x++;
                    } else {
                        System.out.print(""S"");
                    }
                }
                System.out.println();
            }
        } else {
            System.out.println(""NO"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int x = 0;
        if (k <= Math.max(n*n/2, n*n - (n*n/2))) {
            System.out.println(""YES"");
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (i % 2 == j % 2 && x < k) {
                        System.out.print(""L"");
                        x++;
                    } else {
                        System.out.print(""S"");
                    }
                }
                System.out.println();
            }
        } else {
            System.out.println(""NO"");
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_299_A.java,"public class codeforces_299_A {
    public int[] twoSum(int[] numbers, int target) {
        int[] res = new int[2];
        if (numbers == null || numbers.length < 2) {
            return res;
        }
        Arrays.sort(numbers);
        int i = 0;
        int j = numbers.length - 1;
        while (i < j) {
            if (numbers[i] + numbers[j] == target) {
                res[0] = i + 1;
                res[1] = j + 1;
                return res;
            } else if (numbers[i] + numbers[j] < target) {
                i++;
            } else {
                j--;
            }
        }
        return res;
    }
}","public class Main {
    public int[] twoSum(int[] numbers, int target) {
        int[] res = new int[2];
        if (numbers == null || numbers.length < 2) {
            return res;
        }
        Arrays.sort(numbers);
        int i = 0;
        int j = numbers.length - 1;
        while (i < j) {
            if (numbers[i] + numbers[j] == target) {
                res[0] = i + 1;
                res[1] = j + 1;
                return res;
            } else if (numbers[i] + numbers[j] < target) {
                i++;
            } else {
                j--;
            }
        }
        return res;
    }
}"
CodeGen,avatar,Python,Java,codeforces_351_A.java,"public class codeforces_351_A {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
        int o = 2 * n1 - n2;
        int[] arr = new int[n1 + n2];
        for (int i = 0; i < n1; i++) {
            arr[i] = nums1[i];
        }
        for (int i = 0; i < n2; i++) {
            arr[i + n1] = nums2[i];
        }
        Arrays.sort(arr);
        int mid = arr.length / 2;
        if (arr.length % 2 == 1) {
            return arr[mid];
        } else {
            return (arr[mid - 1] + arr[mid]) / 2.0;
        }
    }
}","import java.util.*;

public class Main {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
        int o = 2 * n1 - n2;
        int[] arr = new int[n1 + n2];
        for (int i = 0; i < n1; i++) {
            arr[i] = nums1[i];
        }
        for (int i = 0; i < n2; i++) {
            arr[i + n1] = nums2[i];
        }
        Arrays.sort(arr);
        int mid = arr.length / 2;
        if (arr.length % 2 == 1) {
            return arr[mid];
        } else {
            return (arr[mid - 1] + arr[mid]) / 2.0;
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC003_C.java,"public class atcoder_AGC003_C {
    public int findMaxLength(int[] A) {
        int N = A.length;
        Arrays.sort(A);
        int cnt = 0;
        for (int i = 0; i < N; i++) {
            int d = (A[i] % N) % 2;
            if (d % 2!= i % 2) cnt += 1;
        }
        return cnt / 2;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = Integer.parseInt(scanner.nextLine());
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = Long.parseLong(scanner.nextLine()) * N + i;
        }
        System.out.println(findMaxLength(A));
    }
    public static int findMaxLength(long[] A) {
        int N = A.length;
        Arrays.sort(A);
        int cnt = 0;
        for (int i = 0; i < N; i++) {
            long d = (A[i] % N) % 2;
            if (d % 2!= i % 2) cnt += 1;
        }
        return cnt / 2;
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC029_C.java,"import java.util.*;
import java.lang.*;
import java.io.*;

class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int[] b = new int[n];
        for(int b_i=0; b_i < n; b_i++){
            b[b_i] = in.nextInt();
        }
        int[] c = new int[n];
        for(int c_i=0; c_i < n; c_i++){
            c[c_i] = in.nextInt();
        }
        int[] d = new int[n];
        for(int d_i=0; d_i < n; d_i++){
            d[d_i] = in.nextInt();
        }
        int[] e = new int[n];
        for(int e_i=0; e_i < n; e_i++){
            e[e_i] = in.nextInt();
        }
        int[] f = new int[n];
        for(int f_i=0; f_i < n; f_i++){
            f[f_i] = in.nextInt();
        }
        int[] g = new int[n];
        for(int g_i=0; g_i < n; g_i++){
            g[g_i] = in.nextInt();
        }
        int[] h = new int[n];
        for(int h_i=0; h_i < n; h_i++){
            h[h_i] = in.nextInt();
        }
        int[] i = new int[n];
        for(int i_i=0; i_i < n; i_i++){
            i[i_i] = in.nextInt();
        }
        int[] j = new int[n];
        for(int j_i=0; j_i < n; j_i++){
            j[j_i] = in.nextInt();
        }
        int[] k = new int[n];
        for(int k_i=0; k_i < n; k_i++){
            k[k_i] = in.nextInt();
        }
        int[] l = new int[n];
        for(int l_i=0; l_i < n; l_i++){
            l[l_i] = in.nextInt();
        }
        int[] m = new int[n];
        for(int m_i=0; m_i < n; m_i++){
            m[m_i] = in.nextInt();
        }
        int[] n = new int[n];
        for(int n_i=0; n_i < n; n_i++){
            n[n_i] = in.nextInt();
        }
        int[] o = new int[n];
        for(int o_i=0; o_i < n; o_i++){
            o[o_i] = in.nextInt();
        }
        int[] p = new int[n];
        for(int p_i=0; p_i < n; p_i++){
            p[p_i] = in.nextInt();
        }
        int[] q = new int[n];
        for(int q_i=0; q_i < n; q_i++){
            q[q_i] = in.nextInt();
        }
        int[] r = new int[n];
        for(int r_i=0; r_i < n; r_i++){
            r[r_i] = in.nextInt();
        }
        int[] s = new int[n];
        for(int s_i=0; s_i < n; s_i++){
            s[s_i] = in.nextInt();
        }
        int[] t = new int[n];
        for(int t_i=0; t_i < n; t_i++){
            t[t_i] = in.nextInt();
        }
        int[] u = new int[n];
        for(int u_i=0; u_i < n; u_i++){
            u[u_i] = in.nextInt();
        }
        int[] v = new int[n];
        for(int v_i=0; v_i < n; v_i++){
            v[v_i] = in.nextInt();
        }
        int[] w = new int[n];
        for(int w_i=0; w_i < n; w_i++){
            w[w_i] = in.nextInt();
        }
        int[] x = new int[n];
        for(int x_i=0; x_i < n; x_i++){
            x[x_i] = in.nextInt();
        }
        int[] y = new int[n];
        for(int y_i=0; y_i < n; y_i++){
            y[y_i] = in.nextInt();
        }
        int[] z = new int[n];
        for(int z_i=0; z_i < n; z_i++){
            z[z_i] = in.nextInt();
        }
        int[] A = new int[n];
        for(int A_i=0; A_i < n; A_i++){
            A[A_i] = in.nextInt();
        }
        int[] B = new int[n];
        for(int B_i=0; B_i < n; B_i++){
            B[B_i] = in.nextInt();
        }
        int[] C = new int[n];
        for(int C_i=0; C_i < n; C_i++){
            C[C_i] = in.nextInt();
        }
        int[] D = new int[n];
        for(int D_i=0; D_i < n; D_i++){
            D[D_i] =","import java.util.*;
import java.lang.*;
import java.io.*;

class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int[] b = new int[n];
        for(int b_i=0; b_i < n; b_i++){
            b[b_i] = in.nextInt();
        }
        int[] c = new int[n];
        for(int c_i=0; c_i < n; c_i++){
            c[c_i] = in.nextInt();
        }
        int[] d = new int[n];
        for(int d_i=0; d_i < n; d_i++){
            d[d_i] = in.nextInt();
        }
        int[] e = new int[n];
        for(int e_i=0; e_i < n; e_i++){
            e[e_i] = in.nextInt();
        }
        int[] f = new int[n];
        for(int f_i=0; f_i < n; f_i++){
            f[f_i] = in.nextInt();
        }
        int[] g = new int[n];
        for(int g_i=0; g_i < n; g_i++){
            g[g_i] = in.nextInt();
        }
        int[] h = new int[n];
        for(int h_i=0; h_i < n; h_i++){
            h[h_i] = in.nextInt();
        }
        int[] i = new int[n];
        for(int i_i=0; i_i < n; i_i++){
            i[i_i] = in.nextInt();
        }
        int[] j = new int[n];
        for(int j_i=0; j_i < n; j_i++){
            j[j_i] = in.nextInt();
        }
        int[] k = new int[n];
        for(int k_i=0; k_i < n; k_i++){
            k[k_i] = in.nextInt();
        }
        int[] l = new int[n];
        for(int l_i=0; l_i < n; l_i++){
            l[l_i] = in.nextInt();
        }
        int[] m = new int[n];
        for(int m_i=0; m_i < n; m_i++){
            m[m_i] = in.nextInt();
        }
        int[] n = new int[n];
        for(int n_i=0; n_i < n; n_i++){
            n[n_i] = in.nextInt();
        }
        int[] o = new int[n];
        for(int o_i=0; o_i < n; o_i++){
            o[o_i] = in.nextInt();
        }
        int[] p = new int[n];
        for(int p_i=0; p_i < n; p_i++){
            p[p_i] = in.nextInt();
        }
        int[] q = new int[n];
        for(int q_i=0; q_i < n; q_i++){
            q[q_i] = in.nextInt();
        }
        int[] r = new int[n];
        for(int r_i=0; r_i < n; r_i++){
            r[r_i] = in.nextInt();
        }
        int[] s = new int[n];
        for(int s_i=0; s_i < n; s_i++){
            s[s_i] = in.nextInt();
        }
        int[] t = new int[n];
        for(int t_i=0; t_i < n; t_i++){
            t[t_i] = in.nextInt();
        }
        int[] u = new int[n];
        for(int u_i=0; u_i < n; u_i++){
            u[u_i] = in.nextInt();
        }
        int[] v = new int[n];
        for(int v_i=0; v_i < n; v_i++){
            v[v_i] = in.nextInt();
        }
        int[] w = new int[n];
        for(int w_i=0; w_i < n; w_i++){
            w[w_i] = in.nextInt();
        }
        int[] x = new int[n];
        for(int x_i=0; x_i < n; x_i++){
            x[x_i] = in.nextInt();
        }
        int[] y = new int[n];
        for(int y_i=0; y_i < n; y_i++){
            y[y_i] = in.nextInt();
        }
        int[] z = new int[n];
        for(int z_i=0; z_i < n; z_i++){
            z[z_i] = in.nextInt();
        }
        int[] A = new int[n];
        for(int A_i=0; A_i < n; A_i++){
            A[A_i] = in.nextInt();
        }
        int[] B = new int[n];
        for(int B_i=0; B_i < n; B_i++){
            B[B_i] = in.nextInt();
        }
        int[] C = new int[n];
        for(int C_i=0; C_i < n; C_i++){
            C[C_i] = in.nextInt();
        }
        int[] D = new int[n];
        for(int D_i=0; D_i < n; D_i++){
            D[D_i] ="
CodeGen,avatar,Python,Java,codeforces_242_A.java,"public class codeforces_242_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        int y = in.nextInt();
        int a = in.nextInt();
        int b = in.nextInt();
        List<Integer> games = new ArrayList<>();
        for (int i = a; i <= x; i++) {
            if (i <= b) continue;
            else {
                for (int j = b; j <= y; j++) {
                    if (i > j) continue;
                    games.add(i);
                    games.add(j);
                }
            }
        }
        System.out.println(games.size());
        for (int i : games) {
            System.out.println(i);
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        int y = in.nextInt();
        int a = in.nextInt();
        int b = in.nextInt();
        List<Integer> games = new ArrayList<>();
        for (int i = a; i <= x; i++) {
            if (i <= b) continue;
            else {
                for (int j = b; j <= y; j++) {
                    if (i > j) {
                        games.add(i);
                        games.add(j);
                    } 
                }
            }
        }
        System.out.println(games.size() / 2);
        for (int i = 0; i < games.size(); i += 2) {
            System.out.println(games.get(i) + "" "" + games.get(i + 1));
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_296_A.java,"public class codeforces_296_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String[] m = in.nextLine().split("" "");
        boolean possible = true;
        for (int i = 0; i < m.length; i++) {
            if (m.length - i >= n / 2 + 1) {
                possible = false;
                break;
            }
        }
        System.out.println(possible? ""YES"" : ""NO"");
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String[] m = in.nextLine().split("" "");
        boolean possible = true;
        for (int i = 0; i < m.length; i++) {
            if (m.length - i >= n / 2.0 + 1) {
                possible = false;
                break;
            }
        }
        System.out.println(possible? ""YES"" : ""NO"");
    }
}"
CodeGen,avatar,Python,Java,codeforces_621_A.java,"public class codeforces_621_A {
    public int findMaxForm(String[] strs, int m, int n) {
        int[] lst = new int[n];
        for (int i = 0; i < n; i++) {
            lst[i] = Integer.parseInt(strs[i]);
        }
        Arrays.sort(lst);
        Arrays.sort(lst, Collections.reverseOrder());
        int sum = 0;
        int ok = 0;
        int od = 0;
        for (int i = 0; i < n; i++) {
            if (lst[i] % 2 == 0) {
                sum += lst[i];
            } else {
                if (ok || od > 1) {
                    sum += lst[i];
                    od--;
                    ok =!ok;
                }
            }
        }
        return sum;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt (scanner.nextLine());
        String[] input = scanner.nextLine().split("" "");
        System.out.println(findMaxForm(input, n));
    }
    public static long findMaxForm(String[] strs, int n) {
        Long[] lst = new Long[n];
        for (int i = 0; i < n; i++) {
            lst[i] = Long.parseLong(strs[i]);
        }
        Arrays.sort(lst);
        Arrays.sort(lst, Collections.reverseOrder());
        long sum = 0;
        boolean ok = false;
        int od = 0;
        for (long i : lst) {
            if (i % 2 != 0) {
                od += 1;
            }
        }
        for (int i = 0; i < n; i++) {
            if (lst[i] % 2 == 0) {
                sum += lst[i];
            } else {
                if (ok || od > 1) {
                    sum += lst[i];
                    od--;
                    ok =!ok;
                }
            }
        }
        return sum;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC125_A.java,"public class atcoder_ABC125_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int t = in.nextInt();
        int cookie = 0;
        int time = a;
        while (time <= t + 0.5) {
            cookie += b;
            time += a;
        }
        System.out.println(cookie);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int t = in.nextInt();
        int cookie = 0;
        int time = a;
        while (time <= t + 0.5) {
            cookie += b;
            time += a;
        }
        System.out.println(cookie);
    }
}"
CodeGen,avatar,Python,Java,codeforces_95_A.java,"class Solution {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int pya = in.nextInt();
        String[] arre = new String[pya];
        for (int i = 0; i < pya; i++) {
            arre[i] = in.next();
        }
        String oString = in.next();
        String lowString = oString.toLowerCase();
        char letter1 = in.next().charAt(0);
        char letter2 = 'a';
        if (letter1!= 'a') {
            letter2 = 'b';
        }
        boolean[] valid = new boolean[oString.length()];
        Set<Integer> setcito = new HashSet<>();
        for (int i = 0; i < arre.length; i++) {
            if (lowString.indexOf(arre[i]) >= 0) {
                int wat = 0;
                while (true) {
                    int index = lowString.indexOf(arre[i], wat);
                    if (index < 0) {
                        break;
                    }
                    for (int j = index; j < index + arre[i].length(); j++) {
                        setcito.add(j);
                    }
                    wat = index + 1;
                }
            }
        }
        StringBuilder oStringBuilder = new StringBuilder();
        for (int i = 0; i < oString.length(); i++) {
            char letter = letter1;
            if (oString.charAt(i)!= letter1) {
                letter = letter2;
            }
            if (valid[i]) {
                oStringBuilder.append(letter);
            } else {
                oStringBuilder.append(letter.toUpperCase());
            }
        }
        for (int i : setcito) {
            oStringBuilder.setCharAt(i, letter2);
        }
        System.out.println(oStringBuilder.toString());
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int pya = in.nextInt();
        String[] arre = new String[pya];
        for (int i = 0; i < pya; i++) {
            arre[i] = in.next();
        }
        String oString = in.next();
        String lowString = oString.toLowerCase();
        char letter1 = in.next().charAt(0);
        char letter2 = 'a';
        if (letter1!= 'a') {
            letter2 = 'b';
        }
        boolean[] valid = new boolean[oString.length()];
        Set<Integer> setcito = new HashSet<>();
        for (int i = 0; i < arre.length; i++) {
            if (lowString.indexOf(arre[i]) >= 0) {
                int wat = 0;
                while (true) {
                    int index = lowString.indexOf(arre[i], wat);
                    if (index < 0) {
                        break;
                    }
                    for (int j = index; j < index + arre[i].length(); j++) {
                        setcito.add(j);
                    }
                    wat = index + 1;
                }
            }
        }
        StringBuilder oStringBuilder = new StringBuilder();
        for (int i = 0; i < oString.length(); i++) {
            char letter = letter1;
            if (oString.charAt(i)!= letter1) {
                letter = letter2;
            }
            if (valid[i]) {
                oStringBuilder.append(letter);
            } else {
                oStringBuilder.append(letter.toUpperCase());
            }
        }
        for (int i : setcito) {
            oStringBuilder.setCharAt(i, letter2);
        }
        System.out.println(oStringBuilder.toString());
    }
}"
CodeGen,avatar,Python,Java,codeforces_99_A.java,"public class codeforces_99_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String l = in.nextLine();
        String[] l_array = l.split(""\\."");
        String[] s = l_array[0].split("""");
        String[] p = l_array[1].split("""");
        int i = Integer.parseInt(p[0]);
        if (s[s.length - 1].equals(""9"")) {
            System.out.println(""GOTO Vasilisa."");
        } else if (s[s.length - 1].equals(""0"") && i < 5) {
            StringBuilder sb = new StringBuilder();
            for (int j = 0; j < s.length - 1; j++) {
                sb.append(s[j]);
            }
            sb.append(Integer.toString(Integer.parseInt(sb.toString()) + 1));
            System.out.println(sb.toString());
        } else {
            StringBuilder sb = new StringBuilder();
            for (int j = 0; j < s.length - 1; j++) {
                sb.append(s[j]);
            }
            sb.append(Integer.toString(Integer.parseInt(sb.toString()) + 1));
            System.out.println(sb.toString());
        }
    }
}","import java.util.*;
import java.math.BigInteger;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String l = in.nextLine();
        String[] l_array = l.split(""\\."");
        String[] s = l_array[0].split("""");
        String[] p = l_array[1].split("""");
        int i = Integer.parseInt(p[0]);
        if (s[s.length - 1].equals(""9"")) {
            System.out.println(""GOTO Vasilisa."");
        } else if (!s[s.length - 1].equals(""9"") && i < 5) {
            System.out.println(l_array[0]);
        } else {
            String sb = l_array[0];
            BigInteger bigInt = new BigInteger(sb);
            sb = bigInt.add(BigInteger.ONE).toString();
            System.out.println(sb);
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_216_B.java,"public class codeforces_216_B {
    public int numTrees(int n) {
        if (n < 1) return 0;
        int[] dp = new int[n + 1];
        dp[0] = 1;
        dp[1] = 1;
        for (int i = 2; i <= n; i++) {
            for (int j = 0; j < i; j++) {
                dp[i] += dp[j] * dp[i - j - 1];
            }
        }
        return dp[n];
    }
}","import java.util.*;

public class Main {
    public int numTrees(int n) {
        if (n < 1) return 0;
        int[] dp = new int[n + 1];
        dp[0] = 1;
        dp[1] = 1;
        for (int i = 2; i <= n; i++) {
            for (int j = 0; j < i; j++) {
                dp[i] += dp[j] * dp[i - j - 1];
            }
        }
        return dp[n];
    }
}"
CodeGen,avatar,Python,Java,codeforces_23_B.java,"public class codeforces_23_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        for(int i = 0; i < n; i++){
            int a = in.nextInt();
            if(a < 2){
                System.out.println(0);
            }
            if(a >= 2){
                System.out.println(a - 2);
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        for(int i = 0; i < n; i++){
            int a = in.nextInt();
            if(a < 2){
                System.out.println(0);
            }
            if(a >= 2){
                System.out.println(a - 2);
            }
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_302_A.java,"public class codeforces_302_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] sa = new int[n];
        for(int sa_i=0; sa_i < n; sa_i++){
            sa[sa_i] = in.nextInt();
        }
        int[] ss = new int[m];
        for(int ss_i=0; ss_i < m; ss_i++){
            int a = in.nextInt();
            int b = in.nextInt();
            b -= a;
            ss[ss_i] = (b % 2 && b <= (n << 1))? 1 : 0;
        }
        StringBuilder sb = new StringBuilder();
        for(int ss_i=0; ss_i < m; ss_i++){
            sb.append(ss[ss_i]);
        }
        System.out.println(sb.toString());
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] sa = new int[n];
        for(int sa_i=0; sa_i < n; sa_i++){
            sa[sa_i] = in.nextInt();
        }
        int[] ss = new int[m];
        for(int ss_i=0; ss_i < m; ss_i++){
            int a = in.nextInt();
            int b = in.nextInt();
            b -= a;
            ss[ss_i] = (b % 2 && b <= (n << 1))? 1 : 0;
        }
        StringBuilder sb = new StringBuilder();
        for(int ss_i=0; ss_i < m; ss_i++){
            sb.append(ss[ss_i]);
        }
        System.out.println(sb.toString());
    }
}"
CodeGen,avatar,Python,Java,codeforces_267_A.java,"public class codeforces_267_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int arr_i=0; arr_i < n; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        int a = in.nextInt();
        int b = in.nextInt();
        int total = 0;
        while(a > 0 && b > 0){
            total += (a / b);
            a = a % b;
            if(a > 0){
                total += (b / a);
                b = b % a;
            }
        }
        System.out.println(total);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int arr_i=0; arr_i < n; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        int a = in.nextInt();
        int b = in.nextInt();
        int total = 0;
        while(a > 0 && b > 0){
            total += (a / b);
            a = a % b;
            if(a > 0){
                total += (b / a);
                b = b % a;
            }
        }
        System.out.println(total);
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC006_B.java,"public class atcoder_AGC006_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int X = in.nextInt();
        int[] arr = new int[N];
        for(int arr_i=0; arr_i < N; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        int[] arr2 = new int[N];
        for(int arr2_i=0; arr2_i < N; arr2_i++){
            arr2[arr2_i] = in.nextInt();
        }
        int[] arr3 = new int[N];
        for(int arr3_i=0; arr3_i < N; arr3_i++){
            arr3[arr3_i] = in.nextInt();
        }
        int[] arr4 = new int[N];
        for(int arr4_i=0; arr4_i < N; arr4_i++){
            arr4[arr4_i] = in.nextInt();
        }
        int[] arr5 = new int[N];
        for(int arr5_i=0; arr5_i < N; arr5_i++){
            arr5[arr5_i] = in.nextInt();
        }
        int[] arr6 = new int[N];
        for(int arr6_i=0; arr6_i < N; arr6_i++){
            arr6[arr6_i] = in.nextInt();
        }
        int[] arr7 = new int[N];
        for(int arr7_i=0; arr7_i < N; arr7_i++){
            arr7[arr7_i] = in.nextInt();
        }
        int[] arr8 = new int[N];
        for(int arr8_i=0; arr8_i < N; arr8_i++){
            arr8[arr8_i] = in.nextInt();
        }
        int[] arr9 = new int[N];
        for(int arr9_i=0; arr9_i < N; arr9_i++){
            arr9[arr9_i] = in.nextInt();
        }
        int[] arr10 = new int[N];
        for(int arr10_i=0; arr10_i < N; arr10_i++){
            arr10[arr10_i] = in.nextInt();
        }
        int[] arr11 = new int[N];
        for(int arr11_i=0; arr11_i < N; arr11_i++){
            arr11[arr11_i] = in.nextInt();
        }
        int[] arr12 = new int[N];
        for(int arr12_i=0; arr12_i < N; arr12_i++){
            arr12[arr12_i] = in.nextInt();
        }
        int[] arr13 = new int[N];
        for(int arr13_i=0; arr13_i < N; arr13_i++){
            arr13[arr13_i] = in.nextInt();
        }
        int[] arr14 = new int[N];
        for(int arr14_i=0; arr14_i < N; arr14_i++){
            arr14[arr14_i] = in.nextInt();
        }
        int[] arr15 = new int[N];
        for(int arr15_i=0; arr15_i < N; arr15_i++){
            arr15[arr15_i] = in.nextInt();
        }
        int[] arr16 = new int[N];
        for(int arr16_i=0; arr16_i < N; arr16_i++){
            arr16[arr16_i] = in.nextInt();
        }
        int[] arr17 = new int[N];
        for(int arr17_i=0; arr17_i < N; arr17_i++){
            arr17[arr17_i] = in.nextInt();
        }
        int[] arr18 = new int[N];
        for(int arr18_i=0; arr18_i < N; arr18_i++){
            arr18[arr18_i] = in.nextInt();
        }
        int[] arr19 = new int[N];
        for(int arr19_i=0; arr19_i < N; arr19_i++){
            arr19[arr19_i] = in.nextInt();
        }
        int[] arr20 = new int[N];
        for(int arr20_i=0; arr20_i < N; arr20_i++){
            arr20[arr20_i] = in.nextInt();
        }
        int[] arr21 = new int[N];
        for(int arr21_i=0; arr21_i < N; arr21_i++){
            arr21[arr21_i] = in.nextInt();
        }
        int[] arr22 = new int[N];
        for(int arr22_i=0; arr22_i < N; arr22_i++){
            arr22[arr22_i] = in.nextInt();
        }
        int[] arr23 = new int[N];
        for(int arr23_i=0; arr23_i < N; arr23_i++){
            arr23[arr23_i] = in.nextInt();
        }
        int[] arr24 = new int[N];
        for(int arr24_i=0; arr24_i < N; arr24_i++){
            arr24[arr24_i] = in.nextInt();
        }
        int[] arr25 = new int[N];
        for(int arr25_i=0; arr25_i < N; arr25_i++){
            arr25[arr25_i] = in.nextInt();
        }
        int[] arr26 = new int[N];
        for(int arr26_i=0; arr26_i < N; arr26_i++){
            arr26[arr26_i] = in.nextInt();
        }
        int[] arr27 = new int[N];
        for(int arr27_i=0; arr27_i < N; arr27_i++){
            arr27[arr27_i] = in.nextInt();
        }
        int[] arr28 = new int[N];
        for(int arr28_i=0; arr28_i < N; arr28_i++){
            arr28[arr28_i] = in.nextInt();
        }
        int[] arr29 = new int[N];
        for(int arr29_i=0; arr29_i < N; arr29_i++){
            arr29[arr29_i] = in.nextInt();
        }
        int[] arr30 = new int[N];
        for(int arr30_i=0; arr30_i < N; arr","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int X = in.nextInt();
        int[] arr = new int[N];
        for(int arr_i=0; arr_i < N; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        int[] arr2 = new int[N];
        for(int arr2_i=0; arr2_i < N; arr2_i++){
            arr2[arr2_i] = in.nextInt();
        }
        int[] arr3 = new int[N];
        for(int arr3_i=0; arr3_i < N; arr3_i++){
            arr3[arr3_i] = in.nextInt();
        }
        int[] arr4 = new int[N];
        for(int arr4_i=0; arr4_i < N; arr4_i++){
            arr4[arr4_i] = in.nextInt();
        }
        int[] arr5 = new int[N];
        for(int arr5_i=0; arr5_i < N; arr5_i++){
            arr5[arr5_i] = in.nextInt();
        }
        int[] arr6 = new int[N];
        for(int arr6_i=0; arr6_i < N; arr6_i++){
            arr6[arr6_i] = in.nextInt();
        }
        int[] arr7 = new int[N];
        for(int arr7_i=0; arr7_i < N; arr7_i++){
            arr7[arr7_i] = in.nextInt();
        }
        int[] arr8 = new int[N];
        for(int arr8_i=0; arr8_i < N; arr8_i++){
            arr8[arr8_i] = in.nextInt();
        }
        int[] arr9 = new int[N];
        for(int arr9_i=0; arr9_i < N; arr9_i++){
            arr9[arr9_i] = in.nextInt();
        }
        int[] arr10 = new int[N];
        for(int arr10_i=0; arr10_i < N; arr10_i++){
            arr10[arr10_i] = in.nextInt();
        }
        int[] arr11 = new int[N];
        for(int arr11_i=0; arr11_i < N; arr11_i++){
            arr11[arr11_i] = in.nextInt();
        }
        int[] arr12 = new int[N];
        for(int arr12_i=0; arr12_i < N; arr12_i++){
            arr12[arr12_i] = in.nextInt();
        }
        int[] arr13 = new int[N];
        for(int arr13_i=0; arr13_i < N; arr13_i++){
            arr13[arr13_i] = in.nextInt();
        }
        int[] arr14 = new int[N];
        for(int arr14_i=0; arr14_i < N; arr14_i++){
            arr14[arr14_i] = in.nextInt();
        }
        int[] arr15 = new int[N];
        for(int arr15_i=0; arr15_i < N; arr15_i++){
            arr15[arr15_i] = in.nextInt();
        }
        int[] arr16 = new int[N];
        for(int arr16_i=0; arr16_i < N; arr16_i++){
            arr16[arr16_i] = in.nextInt();
        }
        int[] arr17 = new int[N];
        for(int arr17_i=0; arr17_i < N; arr17_i++){
            arr17[arr17_i] = in.nextInt();
        }
        int[] arr18 = new int[N];
        for(int arr18_i=0; arr18_i < N; arr18_i++){
            arr18[arr18_i] = in.nextInt();
        }
        int[] arr19 = new int[N];
        for(int arr19_i=0; arr19_i < N; arr19_i++){
            arr19[arr19_i] = in.nextInt();
        }
        int[] arr20 = new int[N];
        for(int arr20_i=0; arr20_i < N; arr20_i++){
            arr20[arr20_i] = in.nextInt();
        }
        int[] arr21 = new int[N];
        for(int arr21_i=0; arr21_i < N; arr21_i++){
            arr21[arr21_i] = in.nextInt();
        }
        int[] arr22 = new int[N];
        for(int arr22_i=0; arr22_i < N; arr22_i++){
            arr22[arr22_i] = in.nextInt();
        }
        int[] arr23 = new int[N];
        for(int arr23_i=0; arr23_i < N; arr23_i++){
            arr23[arr23_i] = in.nextInt();
        }
        int[] arr24 = new int[N];
        for(int arr24_i=0; arr24_i < N; arr24_i++){
            arr24[arr24_i] = in.nextInt();
        }
        int[] arr25 = new int[N];
        for(int arr25_i=0; arr25_i < N; arr25_i++){
            arr25[arr25_i] = in.nextInt();
        }
        int[] arr26 = new int[N];
        for(int arr26_i=0; arr26_i < N; arr26_i++){
            arr26[arr26_i] = in.nextInt();
        }
        int[] arr27 = new int[N];
        for(int arr27_i=0; arr27_i < N; arr27_i++){
            arr27[arr27_i] = in.nextInt();
        }
        int[] arr28 = new int[N];
        for(int arr28_i=0; arr28_i < N; arr28_i++){
            arr28[arr28_i] = in.nextInt();
        }
        int[] arr29 = new int[N];
        for(int arr29_i=0; arr29_i < N; arr29_i++){
            arr29[arr29_i] = in.nextInt();
        }
        int[] arr30 = new int[N];
        for(int arr30_i=0; arr30_i < N; arr"
CodeGen,avatar,Python,Java,atcoder_AGC035_B.java,"import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.regex.*;

class Solution {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int[] b = new int[n];
        for(int b_i=0; b_i < n; b_i++){
            b[b_i] = in.nextInt();
        }
        int[] c = new int[n];
        for(int c_i=0; c_i < n; c_i++){
            c[c_i] = in.nextInt();
        }
        int[] d = new int[n];
        for(int d_i=0; d_i < n; d_i++){
            d[d_i] = in.nextInt();
        }
        int[] e = new int[n];
        for(int e_i=0; e_i < n; e_i++){
            e[e_i] = in.nextInt();
        }
        int[] f = new int[n];
        for(int f_i=0; f_i < n; f_i++){
            f[f_i] = in.nextInt();
        }
        int[] g = new int[n];
        for(int g_i=0; g_i < n; g_i++){
            g[g_i] = in.nextInt();
        }
        int[] h = new int[n];
        for(int h_i=0; h_i < n; h_i++){
            h[h_i] = in.nextInt();
        }
        int[] i = new int[n];
        for(int i_i=0; i_i < n; i_i++){
            i[i_i] = in.nextInt();
        }
        int[] j = new int[n];
        for(int j_i=0; j_i < n; j_i++){
            j[j_i] = in.nextInt();
        }
        int[] k = new int[n];
        for(int k_i=0; k_i < n; k_i++){
            k[k_i] = in.nextInt();
        }
        int[] l = new int[n];
        for(int l_i=0; l_i < n; l_i++){
            l[l_i] = in.nextInt();
        }
        int[] m = new int[n];
        for(int m_i=0; m_i < n; m_i++){
            m[m_i] = in.nextInt();
        }
        int[] n = new int[n];
        for(int n_i=0; n_i < n; n_i++){
            n[n_i] = in.nextInt();
        }
        int[] o = new int[n];
        for(int o_i=0; o_i < n; o_i++){
            o[o_i] = in.nextInt();
        }
        int[] p = new int[n];
        for(int p_i=0; p_i < n; p_i++){
            p[p_i] = in.nextInt();
        }
        int[] q = new int[n];
        for(int q_i=0; q_i < n; q_i++){
            q[q_i] = in.nextInt();
        }
        int[] r = new int[n];
        for(int r_i=0; r_i < n; r_i++){
            r[r_i] = in.nextInt();
        }
        int[] s = new int[n];
        for(int s_i=0; s_i < n; s_i++){
            s[s_i] = in.nextInt();
        }
        int[] t = new int[n];
        for(int t_i=0; t_i < n; t_i++){
            t[t_i] = in.nextInt();
        }
        int[] u = new int[n];
        for(int u_i=0; u_i < n; u_i++){
            u[u_i] = in.nextInt();
        }
        int[] v = new int[n];
        for(int v_i=0; v_i < n; v_i++){
            v[v_i] = in.nextInt();
        }
        int[] w = new int[n];
        for(int w_i=0; w_i < n; w_i++){
            w[w_i] = in.nextInt();
        }
        int[] x = new int[n];
        for(int x_i=0; x_i < n; x_i++){
            x[x_i] = in.nextInt();
        }
        int[] y = new int[n];
        for(int y_i=0; y_i < n; y_i++){
            y[y_i] = in.nextInt();
        }
        int[] z = new int[n];
        for(int z_i=0; z_i < n; z_i++){
            z[z_i] = in.nextInt();
        }
        int[] aa = new int[n];
        for(int aa_i=0; aa_i < n; aa_i++){
            aa[aa_i] = in.nextInt();
        }
        int[] bb = new int[n];
        for(int bb_i=0; bb_i < n; bb_i++){
            bb[bb_i] = in.nextInt();
        }
        int[] cc = new int[n];
        for(int cc_i=0; cc_i < n; cc_i++){
            cc[cc_i] = in.nextInt();
        }
        int[] dd = new int[n];
        for(int dd_i=0; dd_i < n; dd_i++){
            dd[dd_i] = in.nextInt();
        }
        int[] ee = new int[n];
        for(int ee_i=0","import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.regex.*;

class Solution {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int[] b = new int[n];
        for(int b_i=0; b_i < n; b_i++){
            b[b_i] = in.nextInt();
        }
        int[] c = new int[n];
        for(int c_i=0; c_i < n; c_i++){
            c[c_i] = in.nextInt();
        }
        int[] d = new int[n];
        for(int d_i=0; d_i < n; d_i++){
            d[d_i] = in.nextInt();
        }
        int[] e = new int[n];
        for(int e_i=0; e_i < n; e_i++){
            e[e_i] = in.nextInt();
        }
        int[] f = new int[n];
        for(int f_i=0; f_i < n; f_i++){
            f[f_i] = in.nextInt();
        }
        int[] g = new int[n];
        for(int g_i=0; g_i < n; g_i++){
            g[g_i] = in.nextInt();
        }
        int[] h = new int[n];
        for(int h_i=0; h_i < n; h_i++){
            h[h_i] = in.nextInt();
        }
        int[] i = new int[n];
        for(int i_i=0; i_i < n; i_i++){
            i[i_i] = in.nextInt();
        }
        int[] j = new int[n];
        for(int j_i=0; j_i < n; j_i++){
            j[j_i] = in.nextInt();
        }
        int[] k = new int[n];
        for(int k_i=0; k_i < n; k_i++){
            k[k_i] = in.nextInt();
        }
        int[] l = new int[n];
        for(int l_i=0; l_i < n; l_i++){
            l[l_i] = in.nextInt();
        }
        int[] m = new int[n];
        for(int m_i=0; m_i < n; m_i++){
            m[m_i] = in.nextInt();
        }
        int[] n = new int[n];
        for(int n_i=0; n_i < n; n_i++){
            n[n_i] = in.nextInt();
        }
        int[] o = new int[n];
        for(int o_i=0; o_i < n; o_i++){
            o[o_i] = in.nextInt();
        }
        int[] p = new int[n];
        for(int p_i=0; p_i < n; p_i++){
            p[p_i] = in.nextInt();
        }
        int[] q = new int[n];
        for(int q_i=0; q_i < n; q_i++){
            q[q_i] = in.nextInt();
        }
        int[] r = new int[n];
        for(int r_i=0; r_i < n; r_i++){
            r[r_i] = in.nextInt();
        }
        int[] s = new int[n];
        for(int s_i=0; s_i < n; s_i++){
            s[s_i] = in.nextInt();
        }
        int[] t = new int[n];
        for(int t_i=0; t_i < n; t_i++){
            t[t_i] = in.nextInt();
        }
        int[] u = new int[n];
        for(int u_i=0; u_i < n; u_i++){
            u[u_i] = in.nextInt();
        }
        int[] v = new int[n];
        for(int v_i=0; v_i < n; v_i++){
            v[v_i] = in.nextInt();
        }
        int[] w = new int[n];
        for(int w_i=0; w_i < n; w_i++){
            w[w_i] = in.nextInt();
        }
        int[] x = new int[n];
        for(int x_i=0; x_i < n; x_i++){
            x[x_i] = in.nextInt();
        }
        int[] y = new int[n];
        for(int y_i=0; y_i < n; y_i++){
            y[y_i] = in.nextInt();
        }
        int[] z = new int[n];
        for(int z_i=0; z_i < n; z_i++){
            z[z_i] = in.nextInt();
        }
        int[] aa = new int[n];
        for(int aa_i=0; aa_i < n; aa_i++){
            aa[aa_i] = in.nextInt();
        }
        int[] bb = new int[n];
        for(int bb_i=0; bb_i < n; bb_i++){
            bb[bb_i] = in.nextInt();
        }
        int[] cc = new int[n];
        for(int cc_i=0; cc_i < n; cc_i++){
            cc[cc_i] = in.nextInt();
        }
        int[] dd = new int[n];
        for(int dd_i=0; dd_i < n; dd_i++){
            dd[dd_i] = in.nextInt();
        }
        int[] ee = new int[n];
        for(int ee_i=0"
CodeGen,avatar,Python,Java,atcoder_ABC152_E.java,"public class atcoder_ABC152_E {
    public int findLcm(int[] A) {
        int lcm = 1;
        for (int a : A) {
            lcm = lcm * a / gcd(lcm, a);
        }
        return lcm * (1 + sum(A) / MOD) % MOD;
    }
    
    public int gcd(int a, int b) {
        if (b == 0) return a;
        return gcd(b, a % b);
    }
}","import java.util.*;

public class Main {
    public int findLcm(int[] A) {
        int lcm = 1;
        for (int a : A) {
            lcm = lcm * a / gcd(lcm, a);
        }
        return lcm * (1 + sum(A) / MOD) % MOD;
    }
    
    public int gcd(int a, int b) {
        if (b == 0) return a;
        return gcd(b, a % b);
    }
}"
CodeGen,avatar,Python,Java,codeforces_579_A.java,"import java.lang.Math;

public class codeforces_579_A {
    public int findMaxConsecutiveOnes(int n) {
        int x = 1;
        while (Math.log2(n) % 1!= 0) {
            x += 1;
            n -= 2 << (int) (Math.log2(n));
        }
        return x;
    }
}","import java.lang.Math;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        System.out.println(findMaxConsecutiveOnes(n));
    }
    public static int findMaxConsecutiveOnes(int n) {
        int x = 1;
        while (Math.log(n) / Math.log(2) != 0) {
            x += 1;
            n -= 2 << (int) (Math.log(n) / Math.log(2));
        }
        return x;
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC028_B.java,"public class atcoder_AGC028_B {
    public int findMaxForm(String[] strs, int m, int n) {
        int MOD = 1000000007;
        int[][] fact = new int[m][n];
        fact[0][0] = 1;
        for (int i = 1; i < m; i++) {
            fact[i][0] = fact[i - 1][0] * i % MOD;
        }
        for (int j = 1; j < n; j++) {
            fact[0][j] = fact[0][j - 1] * j % MOD;
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                fact[i][j] = fact[i - 1][j] * (j + 1) % MOD * fact[i][j - 1] % MOD;
                fact[i][j] %= MOD;
            }
        }
        int[][] inv = new int[m][n];
        for (int i = 0; i < m; i++) {
            inv[i][0] = pow(i + 1, MOD - 2, MOD);
        }
        for (int j = 1; j < n; j++) {
            inv[0][j] = inv[0][j - 1] * j % MOD;
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                inv[i][j] = inv[i - 1][j] * (j + 1) % MOD * inv[i][j - 1] % MOD;
                inv[i][j] %= MOD;
            }
        }
        int[][] temp = new int[m][n];
        for (int i = 0; i < m; i++) {
            temp[i][0] = inv[i][0] + inv[i][n - 1] - 1;
        }
        for (int j = 1; j < n; j++) {
            temp[0][j] = fact[0][j] * temp[0][j - 1] % MOD;
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                temp[i][j] = fact[i][j] * temp[i - 1][j] % MOD;
                temp[i][j] %= MOD;
            }
        }
        int[][] ans = new int[m][n];
        for (int i = 0; i < m; i++) {
            ans[i][0] = temp[i][0] * fact[m][n] % MOD;
            ans[i][0] %= MOD;
        }
        for (int j = 1; j < n; j++) {
            ans[0][j] = fact[0][j] * ans[0][j - 1] % MOD;
            ans[0][j] %= MOD;
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                ans[i][j] = fact[i][j] * (j + 1) % MOD * ans[i][j - 1] % MOD;
                ans[i][j] %= MOD;
            }
        }
        int ans2 = 0;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                ans2 += A[i] * ans[i][j];
                ans2 %= MOD;
            }
        }
        ans2 *= fact[m][n];
        ans2 %= MOD;
        return ans2;
    }
}","public class Main {
    public int findMaxForm(String[] strs, int m, int n) {
        int MOD = 1000000007;
        int[][] fact = new int[m][n];
        fact[0][0] = 1;
        for (int i = 1; i < m; i++) {
            fact[i][0] = fact[i - 1][0] * i % MOD;
        }
        for (int j = 1; j < n; j++) {
            fact[0][j] = fact[0][j - 1] * j % MOD;
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                fact[i][j] = fact[i - 1][j] * (j + 1) % MOD * fact[i][j - 1] % MOD;
                fact[i][j] %= MOD;
            }
        }
        int[][] inv = new int[m][n];
        for (int i = 0; i < m; i++) {
            inv[i][0] = pow(i + 1, MOD - 2, MOD);
        }
        for (int j = 1; j < n; j++) {
            inv[0][j] = inv[0][j - 1] * j % MOD;
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                inv[i][j] = inv[i - 1][j] * (j + 1) % MOD * inv[i][j - 1] % MOD;
                inv[i][j] %= MOD;
            }
        }
        int[][] temp = new int[m][n];
        for (int i = 0; i < m; i++) {
            temp[i][0] = inv[i][0] + inv[i][n - 1] - 1;
        }
        for (int j = 1; j < n; j++) {
            temp[0][j] = fact[0][j] * temp[0][j - 1] % MOD;
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                temp[i][j] = fact[i][j] * temp[i - 1][j] % MOD;
                temp[i][j] %= MOD;
            }
        }
        int[][] ans = new int[m][n];
        for (int i = 0; i < m; i++) {
            ans[i][0] = temp[i][0] * fact[m][n] % MOD;
            ans[i][0] %= MOD;
        }
        for (int j = 1; j < n; j++) {
            ans[0][j] = fact[0][j] * ans[0][j - 1] % MOD;
            ans[0][j] %= MOD;
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                ans[i][j] = fact[i][j] * (j + 1) % MOD * ans[i][j - 1] % MOD;
                ans[i][j] %= MOD;
            }
        }
        int ans2 = 0;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                ans2 += A[i] * ans[i][j];
                ans2 %= MOD;
            }
        }
        ans2 *= fact[m][n];
        ans2 %= MOD;
        return ans2;
    }
}"
CodeGen,avatar,Python,Java,codeforces_678_B.java,"public class codeforces_678_B {
    public static void main(String[] args) {
        int n = Integer.parseInt(input());
        String ans = ""f"";
        if (n % 400 == 0 || (n % 4 == 0 && n % 100!= 0)) {
            ans = ""ly"";
        } else {
            ans = ""nly"";
        }
        while (true) {
            if (n % 400 == 0 || (n % 4 == 0 && n % 100!= 0)) {
                if (d == ""m"") {
                    d = ""w"";
                    n++;
                } else if (d == ""t"") {
                    d = ""th"";
                    n++;
                } else if (d == ""w"") {
                    d = ""f"";
                    n++;
                } else if (d == ""th"") {
                    d = ""sa"";
                    n++;
                } else if (d == ""f"") {
                    d = ""s"";
                    n++;
                } else if (d == ""sa"") {
                    d = ""m"";
                    n++;
                } else if (d == ""s"") {
                    d = ""t"";
                    n++;
                }
            } else {
                if (d == ""m"") {
                    d = ""t"";
                    n++;
                } else if (d == ""t"") {
                    d = ""w"";
                    n++;
                } else if (d == ""w"") {
                    d = ""th"";
                    n++;
                } else if (d == ""th"") {
                    d = ""f"";
                    n++;
                } else if (d == ""f"") {
                    d = ""sa"";
                    n++;
                } else if (d == ""sa"") {
                    d = ""s"";
                    n++;
                } else if (d == ""s"") {
                    d = ""m"";
                    n++;
                }
            }
            if (d == ""f"" && ans == ""ly"" && leapyear(n) == ""y"") {
                break;
            } else if (d == ""f"" && ans == ""nly"" && leapyear(n) == ""n"") {
                break;
            }
        }
        System.out.println(n);
    }
    public static String leapyear(int n) {
        if (n % 400 == 0 || (n % 4 == 0 && n % 100!= 0)) {
            return ""y"";
        } else {
            return ""n"";
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        String d = ""f"";
        String ans;
        if (n % 400 == 0 || (n % 4 == 0 && n % 100!= 0)) {
            ans = ""ly"";
        } else {
            ans = ""nly"";
        }
        while (true) {
            if (n % 400 == 0 || (n % 4 == 0 && n % 100!= 0)) {
                if (d == ""m"") {
                    d = ""w"";
                    n++;
                } else if (d == ""t"") {
                    d = ""th"";
                    n++;
                } else if (d == ""w"") {
                    d = ""f"";
                    n++;
                } else if (d == ""th"") {
                    d = ""sa"";
                    n++;
                } else if (d == ""f"") {
                    d = ""s"";
                    n++;
                } else if (d == ""sa"") {
                    d = ""m"";
                    n++;
                } else if (d == ""s"") {
                    d = ""t"";
                    n++;
                }
            } else {
                if (d == ""m"") {
                    d = ""t"";
                    n++;
                } else if (d == ""t"") {
                    d = ""w"";
                    n++;
                } else if (d == ""w"") {
                    d = ""th"";
                    n++;
                } else if (d == ""th"") {
                    d = ""f"";
                    n++;
                } else if (d == ""f"") {
                    d = ""sa"";
                    n++;
                } else if (d == ""sa"") {
                    d = ""s"";
                    n++;
                } else if (d == ""s"") {
                    d = ""m"";
                    n++;
                }
            }
            if (d == ""f"" && ans == ""ly"" && leapyear(n) == ""y"") {
                break;
            } else if (d == ""f"" && ans == ""nly"" && leapyear(n) == ""n"") {
                break;
            }
        }
        System.out.println(n);
    }
    public static String leapyear(int n) {
        if (n % 400 == 0 || (n % 4 == 0 && n % 100!= 0)) {
            return ""y"";
        } else {
            return ""n"";
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_400_B.java,"public class codeforces_400_B {
    public int numUniqueEmails(String[] emails) {
        Set<String> set = new HashSet<>();
        for (String email : emails) {
            String[] parts = email.split(""@"");
            if (parts.length!= 2) {
                return -1;
            }
            String name = parts[0];
            String domain = parts[1];
            StringBuilder sb = new StringBuilder();
            sb.append(name).append(""."").append(domain);
            set.add(sb.toString());
        }
        return set.size();
    }
}","public class Main {
    public int numUniqueEmails(String[] emails) {
        Set<String> set = new HashSet<>();
        for (String email : emails) {
            String[] parts = email.split(""@"");
            if (parts.length!= 2) {
                return -1;
            }
            String name = parts[0];
            String domain = parts[1];
            StringBuilder sb = new StringBuilder();
            sb.append(name).append(""."").append(domain);
            set.add(sb.toString());
        }
        return set.size();
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC127_F.java,"public class atcoder_ABC127_F {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int q = in.nextInt();
        int[] p1 = new int[q];
        int[] p2 = new int[q];
        int[] b = new int[q];
        for (int i = 0; i < q; i++) {
            b[i] = in.nextInt();
        }
        for (int i = 0; i < q; i++) {
            p1[i] = in.nextInt();
        }
        for (int i = 0; i < q; i++) {
            p2[i] = in.nextInt();
        }
        int sum_b = 0;
        int sum_p1 = 0;
        int sum_p2 = 0;
        for (int i = 0; i < q; i++) {
            if (b[i] == 2) {
                if (p1.length == p2.length) {
                    System.out.println(-p2[0], sum_p1 - p1.length * -p2[0] + p2.length * -p2[0] - sum_p2 + sum_b);
                } else {
                    System.out.println(p1[0], sum_p1 - p1.length * p1[0] + p2.length * p1[0] - sum_p2 + sum_b);
                }
            } else {
                sum_b += b[i];
                if (p1.length == 0) {
                    heapq.heappush(p1, p1[i]);
                    sum_p1 += p1[i];
                } else if (p1[0] <= p1[i]) {
                    heapq.heappush(p1, p1[i]);
                    sum_p1 += p1[i];
                } else {
                    heapq.heappush(p2, -p1[i]);
                    sum_p2 += p1[i];
                }
                if (p1.length - 1 > p2.length) {
                    heapq.heappop(p2);
                    sum_p2 += p2[0];
                    sum_p1 -= p2[0];
                }
                if (p1.length - 1 > p2.length) {
                    heapq.heappop(p1);
                    sum_p1 -= p1[0];
                    sum_p2 += p1[0];
                }
            }
            if (p1.length - 1 > p2.length) {
                heapq.heappop(p2);
                sum_p2 += p2[0];
                sum_p1 -= p2[0];
            }
            if (p1.length - 1 > p2.length) {
                heapq.heappop(p1);
                sum_p1 -= p1[0];
                sum_p2 += p1[0];
            }
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int q = in.nextInt();
        int[] p1 = new int[q];
        int[] p2 = new int[q];
        int[] b = new int[q];
        for (int i = 0; i < q; i++) {
            b[i] = in.nextInt();
        }
        for (int i = 0; i < q; i++) {
            p1[i] = in.nextInt();
        }
        for (int i = 0; i < q; i++) {
            p2[i] = in.nextInt();
        }
        int sum_b = 0;
        int sum_p1 = 0;
        int sum_p2 = 0;
        for (int i = 0; i < q; i++) {
            if (b[i] == 2) {
                if (p1.length == p2.length) {
                    System.out.println(-p2[0], sum_p1 - p1.length * -p2[0] + p2.length * -p2[0] - sum_p2 + sum_b);
                } else {
                    System.out.println(p1[0], sum_p1 - p1.length * p1[0] + p2.length * p1[0] - sum_p2 + sum_b);
                }
            } else {
                sum_b += b[i];
                if (p1.length == 0) {
                    heapq.heappush(p1, p1[i]);
                    sum_p1 += p1[i];
                } else if (p1[0] <= p1[i]) {
                    heapq.heappush(p1, p1[i]);
                    sum_p1 += p1[i];
                } else {
                    heapq.heappush(p2, -p1[i]);
                    sum_p2 += p1[i];
                }
                if (p1.length - 1 > p2.length) {
                    heapq.heappop(p2);
                    sum_p2 += p2[0];
                    sum_p1 -= p2[0];
                }
                if (p1.length - 1 > p2.length) {
                    heapq.heappop(p1);
                    sum_p1 -= p1[0];
                    sum_p2 += p1[0];
                }
            }
            if (p1.length - 1 > p2.length) {
                heapq.heappop(p2);
                sum_p2 += p2[0];
                sum_p1 -= p2[0];
            }
            if (p1.length - 1 > p2.length) {
                heapq.heappop(p1);
                sum_p1 -= p1[0];
                sum_p2 += p1[0];
            }
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_30_A.java,"public class codeforces_30_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int A = in.nextInt();
        int B = in.nextInt();
        int n = in.nextInt();
        int result = 0;
        for (int i = -1000; i < 1001; i++) {
            if (A * (i ** n) == B) {
                result = i;
                break;
            }
        }
        System.out.println(result);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int A = in.nextInt();
        int B = in.nextInt();
        int n = in.nextInt();
        int result = 0;
        boolean flag = false;
        for (int i = -1000; i < 1001; i++) {
            if (A * (Math.pow(i, n)) == B) {
                result = i;
                flag = true;
                break;
            }
        }
        if (flag) {
            System.out.println(result);
        } else {
            System.out.println(""No solution"");
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_203_A.java,"public class codeforces_203_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        int t = in.nextInt();
        int a = in.nextInt();
        int b = in.nextInt();
        int da = in.nextInt();
        int db = in.nextInt();
        if (x == 0) {
            System.out.println(""YES"");
            return;
        }
        int a_time = Math.min(a / da, t - 1);
        int b_time = Math.min(b / db, t - 1);
        for (int i = 0; i < a_time + 1; i++) {
            for (int j = 0; j < b_time + 1; j++) {
                if (a - da * i == x || b - db * j == x) {
                    System.out.println(""YES"");
                    return;
                }
                if (a - da * i + b - db * j == x) {
                    System.out.println(""YES"");
                    return;
                }
            }
        }
        System.out.println(""NO"");
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        int t = in.nextInt();
        int a = in.nextInt();
        int b = in.nextInt();
        int da = in.nextInt();
        int db = in.nextInt();
        if (x == 0) {
            System.out.println(""YES"");
            return;
        }
        int a_time = Math.min(a / da, t - 1);
        int b_time = Math.min(b / db, t - 1);
        for (int i = 0; i < a_time + 1; i++) {
            for (int j = 0; j < b_time + 1; j++) {
                if (a - da * i == x || b - db * j == x) {
                    System.out.println(""YES"");
                    return;
                }
                if (a - da * i + b - db * j == x) {
                    System.out.println(""YES"");
                    return;
                }
            }
        }
        System.out.println(""NO"");
    }
}"
CodeGen,avatar,Python,Java,codeforces_147_A.java,"public class codeforces_147_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        int N = S.length();
        StringBuilder sb = new StringBuilder();
        for(int i = 0; i < N; i++) {
            if(i > 0 && S.charAt(i) =='') {
                sb.append(' ');
            }
            else if(i > 0 && S.charAt(i) == ',') {
                sb.append(',');
            }
            else if(i > 0 && S.charAt(i) == '.') {
                sb.append('.');
            }
            else if(i > 0 && S.charAt(i) == '!') {
                sb.append('!');
            }
            else if(i > 0 && S.charAt(i) == '?') {
                sb.append('?');
            }
            else {
                sb.append(S.charAt(i));
            }
        }
        System.out.println(sb.toString());
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        int N = S.length();
        StringBuilder sb = new StringBuilder();
        for(int i = 0; i < N; i++) {
            if(i > 0 && S.charAt(i) ==' ') {
                sb.append(' ');
            }
            else if(i > 0 && S.charAt(i) == ',') {
                sb.append(',');
            }
            else if(i > 0 && S.charAt(i) == '.') {
                sb.append('.');
            }
            else if(i > 0 && S.charAt(i) == '!') {
                sb.append('!');
            }
            else if(i > 0 && S.charAt(i) == '?') {
                sb.append('?');
            }
            else {
                sb.append(S.charAt(i));
            }
        }
        System.out.println(sb.toString());
    }
}"
CodeGen,avatar,Python,Java,codeforces_55_A.java,"public class codeforces_55_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        while (n % 2 == 0) {
            n /= 2;
        }
        if (n == 1) {
            System.out.println(""YES"");
        } else {
            System.out.println(""NO"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        while (n % 2 == 0) {
            n /= 2;
        }
        if (n == 1) {
            System.out.println(""YES"");
        } else {
            System.out.println(""NO"");
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_412_A.java,"public class codeforces_412_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        String v = in.next();
        String[] d = new String[2];
        d[0] = ""LEFT"";
        d[1] = ""RIGHT"";
        boolean f = k - 1 < n - k;
        int m = Math.min(k - 1, n - k);
        String[] a = new String[m + 1];
        for(int i = 0; i < m; i++) {
            a[i] = d[f? 1 : 0];
        }
        for(int i = 0; i < v.length(); i++) {
            if(v.charAt(i) =='') {
                a[m] = ""PRINT "";
                a[m + 1] = d[f? 0 : 1];
                m += 2;
            } else {
                a[m] = d[f? 0 : 1];
                m++;
            }
        }
        System.out.println(a[0]);
        for(int i = 1; i < a.length; i++) {
            System.out.println(a[i]);
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        String v = in.next();
        String[] d = new String[2];
        d[0] = ""LEFT"";
        d[1] = ""RIGHT"";
        boolean f = k - 1 < n - k;
        int m = Math.min(k - 1, n - k);
        String[] a = new String[m + 1];
        for(int i = 0; i < m; i++) {
            a[i] = d[f? 1 : 0];
        }
        for(int i = 0; i < v.length(); i++) {
            if(v.charAt(i) =='') {
                a[m] = ""PRINT "";
                a[m + 1] = d[f? 0 : 1];
                m += 2;
            } else {
                a[m] = d[f? 0 : 1];
                m++;
            }
        }
        System.out.println(a[0]);
        for(int i = 1; i < a.length; i++) {
            System.out.println(a[i]);
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_598_A.java,"public class codeforces_598_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        for(int a0 = 0; a0 < t; a0++){
            int n = in.nextInt();
            System.out.println(solve(n));
        }
    }
    public static int solve(int n){
        int s = (1 + n) * n / 2;
        int t = 1;
        while(t <= n){
            s -= 2 * t;
            t *= 2;
        }
        return s;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        for(int a0 = 0; a0 < t; a0++){
            long n = in.nextLong();
            System.out.println(solve(n));
        }
    }
    public static long solve(long n){
        long s = (1 + n) * n / 2;
        long t = 1;
        while(t <= n){
            s -= 2 * t;
            t *= 2;
        }
        return s;
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC033_B.java,"Input Format

The first line contains two integers, H and W, separated by a single space.
The second line contains two integers, N and s_r, separated by a single space.
The third line contains N space-separated integers describing the coordinates of the S-shape.
The fourth line contains N space-separated integers describing the coordinates of the T-shape.
The fifth line contains a single space-separated string, S, representing the S-shape.
The sixth line contains a single space-separated string, T, representing the T-shape.

Output Format

Output a single line containing ""YES"" if the S-shape can be placed in the T-shape, and ""NO"" otherwise.

Sample Input

5 5
2 2
1 1 1 1
1 2 1 2
1 3 1 3
1 4 1 4
1 5 1 5
Sample Output

YES
Explanation

The S-shape is placed in the T-shape.

Sample Input

5 5
2 2
1 1 1 1
1 2 1 2
1 3 1 3
1 4 1 4
1 5 1 5
Sample Output

NO
Explanation

The S-shape cannot be placed in the T-shape.

""""""","Input Format

The first line contains two integers, H and W, separated by a single space.
The second line contains two integers, N and s_r, separated by a single space.
The third line contains N space-separated integers describing the coordinates of the S-shape.
The fourth line contains N space-separated integers describing the coordinates of the T-shape.
The fifth line contains a single space-separated string, S, representing the S-shape.
The sixth line contains a single space-separated string, T, representing the T-shape.

Output Format

Output a single line containing ""YES"" if the S-shape can be placed in the T-shape, and ""NO"" otherwise.

Sample Input

5 5
2 2
1 1 1 1
1 2 1 2
1 3 1 3
1 4 1 4
1 5 1 5
Sample Output

YES
Explanation

The S-shape is placed in the T-shape.

Sample Input

5 5
2 2
1 1 1 1
1 2 1 2
1 3 1 3
1 4 1 4
1 5 1 5
Sample Output

NO
Explanation

The S-shape cannot be placed in the T-shape.

"""""""
CodeGen,avatar,Python,Java,codeforces_67_B.java,"public class codeforces_67_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] M = new int[n];
        for(int M_i=0; M_i < n; M_i++){
            M[M_i] = in.nextInt();
        }
        int m = 0;
        for(int j=0; j < n; j++){
            for(int p=0; p < n; p++){
                if(0 == M[p]){
                    System.out.print(p+1+"" "");
                    break;
                }
            }
            for(int l=0; l < p-k; l++){
                M[l] -= 1;
            }
            M[p] -= 1;
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] M = new int[n];
        for(int M_i=0; M_i < n; M_i++){
            M[M_i] = in.nextInt();
        }
        int m = 0;
        for(int j=0; j < n; j++){
            int p = 0;
            for(p=0; p < n; p++){
                if(0 == M[p]){
                    System.out.print(p+1+"" "");
                    break;
                }
            }
            for(int l=0; l < p+1-k; l++){
                M[l] -= 1;
            }
            M[p] -= 1;
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC110_C.java,"import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class atcoder_ABC110_C {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        String t = in.next();
        String result = run(s, t);
        System.out.println(result);
    }

    public static String run(String s, String t) {
        String[] ss = s.split("" "");
        String[] tt = t.split("" "");
        if (ss.length == tt.length) {
            Map<String, Integer> map = new HashMap<>();
            for (int i = 0; i < ss.length; i++) {
                map.put(ss[i], map.getOrDefault(ss[i], 0) + 1);
            }
            for (int i = 0; i < tt.length; i++) {
                if (map.containsKey(tt[i])) {
                    map.put(tt[i], map.get(tt[i]) - 1);
                }
            }
            Set<Map.Entry<String, Integer>> entrySet = map.entrySet();
            List<Map.Entry<String, Integer>> list = Collections.list(entrySet.iterator());
            Collections.sort(list, (a, b) -> b.getValue() - a.getValue());
            if (list.get(0).getValue() == 0) {
                return ""Yes"";
            } else {
                return ""No"";
            }
        } else {
            return ""No"";
        }
    }
}","import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        String t = in.next();
        String result = run(s, t);
        System.out.println(result);
    }

    public static String run(String s, String t) {
        String[] ss = s.split("" "");
        String[] tt = t.split("" "");
        if (ss.length == tt.length) {
            Map<String, Integer> map = new HashMap<>();
            for (int i = 0; i < ss.length; i++) {
                map.put(ss[i], map.getOrDefault(ss[i], 0) + 1);
            }
            for (int i = 0; i < tt.length; i++) {
                if (map.containsKey(tt[i])) {
                    map.put(tt[i], map.get(tt[i]) - 1);
                }
            }
            Set<Map.Entry<String, Integer>> entrySet = map.entrySet();
            List<Map.Entry<String, Integer>> list = Collections.list(entrySet.iterator());
            Collections.sort(list, (a, b) -> b.getValue() - a.getValue());
            if (list.get(0).getValue() == 0) {
                return ""Yes"";
            } else {
                return ""No"";
            }
        } else {
            return ""No"";
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC178_B.java,"import java.util.*;
import java.io.*;

class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] s = br.readLine().split("" "");
        int a = Integer.parseInt(s[0]);
        int b = Integer.parseInt(s[1]);
        int c = Integer.parseInt(s[2]);
        int d = Integer.parseInt(s[3]);
        System.out.println(Math.max(a * c, b * d, a * d, b * c));
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        String[] s = sc.nextLine().split("" "");
        long a = Long.parseLong(s[0]);
        long b = Long.parseLong(s[1]);
        long c = Long.parseLong(s[2]);
        long d = Long.parseLong(s[3]);
        System.out.println(Math.max(Math.max(Math.max(a * c, b * d), a * d), b * c));
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC043_B.java,"public class atcoder_AGC043_B {
    public int[] twoSum(int[] numbers, int target) {
        int[] result = new int[2];
        if (numbers == null || numbers.length < 2) {
            return result;
        }
        Arrays.sort(numbers);
        int i = 0;
        int j = numbers.length - 1;
        while (i < j) {
            int sum = numbers[i] + numbers[j];
            if (sum == target) {
                result[0] = i + 1;
                result[1] = j + 1;
                return result;
            } else if (sum < target) {
                i++;
            } else {
                j--;
            }
        }
        return result;
    }
}","import java.util.*;

public class Main {
    public int[] twoSum(int[] numbers, int target) {
        int[] result = new int[2];
        if (numbers == null || numbers.length < 2) {
            return result;
        }
        Arrays.sort(numbers);
        int i = 0;
        int j = numbers.length - 1;
        while (i < j) {
            int sum = numbers[i] + numbers[j];
            if (sum == target) {
                result[0] = i + 1;
                result[1] = j + 1;
                return result;
            } else if (sum < target) {
                i++;
            } else {
                j--;
            }
        }
        return result;
    }
}"
CodeGen,avatar,Python,Java,codeforces_274_A.java,"public class codeforces_274_A {
    public int findKthNumber(int m, int n, int k) {
        int[] arr = new int[m];
        int[] num = new int[n];
        for (int i = 0; i < m; i++) {
            arr[i] = Integer.parseInt(next());
        }
        for (int i = 0; i < n; i++) {
            num[i] = Integer.parseInt(next());
        }
        Arrays.sort(arr);
        Arrays.sort(num);
        int[] diff = new int[m];
        int temp = 0;
        for (int i = 0; i < m; i++) {
            if (arr[i] % k!= 0 || arr[i] / k!= num[i] || diff[i]!= 0) {
                diff[i] = 1;
            } else {
                diff[i] = 0;
            }
            temp = Math.max(diff.length, temp);
        }
        return temp;
    }
}","public class Main {
    public int findKthNumber(int m, int n, int k) {
        int[] arr = new int[m];
        int[] num = new int[n];
        for (int i = 0; i < m; i++) {
            arr[i] = Integer.parseInt(next());
        }
        for (int i = 0; i < n; i++) {
            num[i] = Integer.parseInt(next());
        }
        Arrays.sort(arr);
        Arrays.sort(num);
        int[] diff = new int[m];
        int temp = 0;
        for (int i = 0; i < m; i++) {
            if (arr[i] % k!= 0 || arr[i] / k!= num[i] || diff[i]!= 0) {
                diff[i] = 1;
            } else {
                diff[i] = 0;
            }
            temp = Math.max(diff.length, temp);
        }
        return temp;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC154_A.java,"public class atcoder_ABC154_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        String T = in.next();
        int A = in.nextInt();
        int B = in.nextInt();
        String U = in.next();
        solve(S, T, A, B, U);
    }

    public static void solve(String S, String T, int A, int B, String U) {
        if (S.equals(U)) {
            A -= 1;
        }
        if (T.equals(U)) {
            B -= 1;
        }
        System.out.println(A + "" "" + B);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        String T = in.next();
        int A = in.nextInt();
        int B = in.nextInt();
        String U = in.next();
        solve(S, T, A, B, U);
    }

    public static void solve(String S, String T, int A, int B, String U) {
        if (S.equals(U)) {
            A -= 1;
        }
        if (T.equals(U)) {
            B -= 1;
        }
        System.out.println(A + "" "" + B);
    }
}"
CodeGen,avatar,Python,Java,codeforces_96_B.java,"public class codeforces_96_B {
    public static void main(String[] args) {
        int[] arr = new int[100000];
        int[] arr2 = new int[100000];
        int[] arr3 = new int[100000];
        int[] arr4 = new int[100000];
        int[] arr5 = new int[100000];
        int[] arr6 = new int[100000];
        int[] arr7 = new int[100000];
        int[] arr8 = new int[100000];
        int[] arr9 = new int[100000];
        int[] arr10 = new int[100000];
        int[] arr11 = new int[100000];
        int[] arr12 = new int[100000];
        int[] arr13 = new int[100000];
        int[] arr14 = new int[100000];
        int[] arr15 = new int[100000];
        int[] arr16 = new int[100000];
        int[] arr17 = new int[100000];
        int[] arr18 = new int[100000];
        int[] arr19 = new int[100000];
        int[] arr20 = new int[100000];
        int[] arr21 = new int[100000];
        int[] arr22 = new int[100000];
        int[] arr23 = new int[100000];
        int[] arr24 = new int[100000];
        int[] arr25 = new int[100000];
        int[] arr26 = new int[100000];
        int[] arr27 = new int[100000];
        int[] arr28 = new int[100000];
        int[] arr29 = new int[100000];
        int[] arr30 = new int[100000];
        int[] arr31 = new int[100000];
        int[] arr32 = new int[100000];
        int[] arr33 = new int[100000];
        int[] arr34 = new int[100000];
        int[] arr35 = new int[100000];
        int[] arr36 = new int[100000];
        int[] arr37 = new int[100000];
        int[] arr38 = new int[100000];
        int[] arr39 = new int[100000];
        int[] arr40 = new int[100000];
        int[] arr41 = new int[100000];
        int[] arr42 = new int[100000];
        int[] arr43 = new int[100000];
        int[] arr44 = new int[100000];
        int[] arr45 = new int[100000];
        int[] arr46 = new int[100000];
        int[] arr47 = new int[100000];
        int[] arr48 = new int[100000];
        int[] arr49 = new int[100000];
        int[] arr50 = new int[100000];
        int[] arr51 = new int[100000];
        int[] arr52 = new int[100000];
        int[] arr53 = new int[100000];
        int[] arr54 = new int[100000];
        int[] arr55 = new int[100000];
        int[] arr56 = new int[100000];
        int[] arr57 = new int[100000];
        int[] arr58 = new int[100000];
        int[] arr59 = new int[100000];
        int[] arr60 = new int[100000];
        int[] arr61 = new int[100000];
        int[] arr62 = new int[100000];
        int[] arr63 = new int[100000];
        int[] arr64 = new int[100000];
        int[] arr65 = new int[100000];
        int[] arr66 = new int[100000];
        int[] arr67 = new int[100000];
        int[] arr68 = new int[100000];
        int[] arr69 = new int[100000];
        int[] arr70 = new int[100000];
        int[] arr71 = new int[100000];
        int[] arr72 = new int[100000];
        int[] arr73 = new int[100000];
        int[] arr74 = new int[100000];
        int[] arr75 = new int[100000];
        int[] arr76 = new int[100000];
        int[] arr77 = new int[100000];
        int[] arr78 = new int[100000];
        int[] arr79 = new int[100000];
        int[] arr80 = new int[100000];
        int[] arr81 = new int[100000];
        int[] arr82 = new int[100000];
        int[] arr83 = new int[100000];
        int[] arr84 = new int[100000];
        int[] arr85 = new int[100000];
        int[] arr86 = new int[100000];
        int[] arr87 = new int[100000];
        int[] arr88 = new int[100000];
        int[] arr89 = new int[100000];
        int[] arr90 = new int[100000];
        int[] arr91 = new int[100000];
        int[] arr92 = new int[100000];
        int[] arr93 = new int[100000];
        int[] arr94 = new int[100000];
        int[] arr95 = new int[100000];
        int[] arr96 = new int[100000];
        int[] arr97 = new int[100000];
        int[] arr98 = new int[100000];
        int[] arr99 = new int[100000];
        int[] arr100 = new int[100000];
        int[] arr101 = new int[100000];
        int[] arr102 = new int[100000];
        int[] arr103 = new int[100000];
        int[] arr104 = new int[100000];
        int[] arr105 = new int[100000];
        int[] arr106 = new int[100000];
        int[] arr107 = new int[100000];
        int[] arr108 = new int[100000];
        int[] arr109 = new int[100000];
        int[] arr110 = new int[100000];
        int[] arr111 = new int[100000];
        int[] arr112 = new int[100000];
        int[] arr113 = new int[100000];
        int[] arr114 = new int[100000];
        int[] arr115 = new int[100000];
        int[] arr116 = new int[100000];
        int[] arr117 = new int[100000];
        int[] arr118 = new int[100000];
        int[] arr119 = new int[100000];
        int[] arr120 = new int[100000];
        int[] arr121 = new int[100000];
        int[] arr122 = new int[100000];
        int[] arr123 = new int[100000];
        int[] arr124 = new int[100000];
        int[] arr125 = new int[100000];
        int[] arr126 = new int[100000];
        int[] arr127 = new int[100000];
        int[] arr128 = new int[100000];
        int[] arr129 = new int[100000];
        int[] arr130 = new int[100000];
        int[] arr131 = new int[100000];
        int[] arr132 = new int[100000];
        int[] arr133 = new int[100000];
        int[] arr134 = new int[100000];
        int[] arr135 = new int[100000];
        int[] arr136 = new int[100000];
        int[] arr137 = new int[100000];
        int[] arr138 = new int[100000];
        int[] arr139 = new int[100000];
        int[] arr140 = new int[100000];
        int[] arr141 = new int[100000];
        int[] arr142 = new int[100000];
        int[] arr143","public class Main {
    public static void main(String[] args) {
        int[] arr = new int[100000];
        int[] arr2 = new int[100000];
        int[] arr3 = new int[100000];
        int[] arr4 = new int[100000];
        int[] arr5 = new int[100000];
        int[] arr6 = new int[100000];
        int[] arr7 = new int[100000];
        int[] arr8 = new int[100000];
        int[] arr9 = new int[100000];
        int[] arr10 = new int[100000];
        int[] arr11 = new int[100000];
        int[] arr12 = new int[100000];
        int[] arr13 = new int[100000];
        int[] arr14 = new int[100000];
        int[] arr15 = new int[100000];
        int[] arr16 = new int[100000];
        int[] arr17 = new int[100000];
        int[] arr18 = new int[100000];
        int[] arr19 = new int[100000];
        int[] arr20 = new int[100000];
        int[] arr21 = new int[100000];
        int[] arr22 = new int[100000];
        int[] arr23 = new int[100000];
        int[] arr24 = new int[100000];
        int[] arr25 = new int[100000];
        int[] arr26 = new int[100000];
        int[] arr27 = new int[100000];
        int[] arr28 = new int[100000];
        int[] arr29 = new int[100000];
        int[] arr30 = new int[100000];
        int[] arr31 = new int[100000];
        int[] arr32 = new int[100000];
        int[] arr33 = new int[100000];
        int[] arr34 = new int[100000];
        int[] arr35 = new int[100000];
        int[] arr36 = new int[100000];
        int[] arr37 = new int[100000];
        int[] arr38 = new int[100000];
        int[] arr39 = new int[100000];
        int[] arr40 = new int[100000];
        int[] arr41 = new int[100000];
        int[] arr42 = new int[100000];
        int[] arr43 = new int[100000];
        int[] arr44 = new int[100000];
        int[] arr45 = new int[100000];
        int[] arr46 = new int[100000];
        int[] arr47 = new int[100000];
        int[] arr48 = new int[100000];
        int[] arr49 = new int[100000];
        int[] arr50 = new int[100000];
        int[] arr51 = new int[100000];
        int[] arr52 = new int[100000];
        int[] arr53 = new int[100000];
        int[] arr54 = new int[100000];
        int[] arr55 = new int[100000];
        int[] arr56 = new int[100000];
        int[] arr57 = new int[100000];
        int[] arr58 = new int[100000];
        int[] arr59 = new int[100000];
        int[] arr60 = new int[100000];
        int[] arr61 = new int[100000];
        int[] arr62 = new int[100000];
        int[] arr63 = new int[100000];
        int[] arr64 = new int[100000];
        int[] arr65 = new int[100000];
        int[] arr66 = new int[100000];
        int[] arr67 = new int[100000];
        int[] arr68 = new int[100000];
        int[] arr69 = new int[100000];
        int[] arr70 = new int[100000];
        int[] arr71 = new int[100000];
        int[] arr72 = new int[100000];
        int[] arr73 = new int[100000];
        int[] arr74 = new int[100000];
        int[] arr75 = new int[100000];
        int[] arr76 = new int[100000];
        int[] arr77 = new int[100000];
        int[] arr78 = new int[100000];
        int[] arr79 = new int[100000];
        int[] arr80 = new int[100000];
        int[] arr81 = new int[100000];
        int[] arr82 = new int[100000];
        int[] arr83 = new int[100000];
        int[] arr84 = new int[100000];
        int[] arr85 = new int[100000];
        int[] arr86 = new int[100000];
        int[] arr87 = new int[100000];
        int[] arr88 = new int[100000];
        int[] arr89 = new int[100000];
        int[] arr90 = new int[100000];
        int[] arr91 = new int[100000];
        int[] arr92 = new int[100000];
        int[] arr93 = new int[100000];
        int[] arr94 = new int[100000];
        int[] arr95 = new int[100000];
        int[] arr96 = new int[100000];
        int[] arr97 = new int[100000];
        int[] arr98 = new int[100000];
        int[] arr99 = new int[100000];
        int[] arr100 = new int[100000];
        int[] arr101 = new int[100000];
        int[] arr102 = new int[100000];
        int[] arr103 = new int[100000];
        int[] arr104 = new int[100000];
        int[] arr105 = new int[100000];
        int[] arr106 = new int[100000];
        int[] arr107 = new int[100000];
        int[] arr108 = new int[100000];
        int[] arr109 = new int[100000];
        int[] arr110 = new int[100000];
        int[] arr111 = new int[100000];
        int[] arr112 = new int[100000];
        int[] arr113 = new int[100000];
        int[] arr114 = new int[100000];
        int[] arr115 = new int[100000];
        int[] arr116 = new int[100000];
        int[] arr117 = new int[100000];
        int[] arr118 = new int[100000];
        int[] arr119 = new int[100000];
        int[] arr120 = new int[100000];
        int[] arr121 = new int[100000];
        int[] arr122 = new int[100000];
        int[] arr123 = new int[100000];
        int[] arr124 = new int[100000];
        int[] arr125 = new int[100000];
        int[] arr126 = new int[100000];
        int[] arr127 = new int[100000];
        int[] arr128 = new int[100000];
        int[] arr129 = new int[100000];
        int[] arr130 = new int[100000];
        int[] arr131 = new int[100000];
        int[] arr132 = new int[100000];
        int[] arr133 = new int[100000];
        int[] arr134 = new int[100000];
        int[] arr135 = new int[100000];
        int[] arr136 = new int[100000];
        int[] arr137 = new int[100000];
        int[] arr138 = new int[100000];
        int[] arr139 = new int[100000];
        int[] arr140 = new int[100000];
        int[] arr141 = new int[100000];
        int[] arr142 = new int[100000];
        int[] arr143"
CodeGen,avatar,Python,Java,codeforces_672_A.java,"public class codeforces_672_A {
    public int findNthDigit(int n) {
        int[] digits = new int[10];
        int[] temp = new int[10];
        int[] li = new int[10];
        int count = 0;
        int p = 1;
        int q = 1;
        for (int i = 1; i < 371; i++) {
            count = 0;
            while (p!= 0) {
                p = p / 10;
                count += 1;
            }
            if (count == 1) {
                digits[i] = i;
            }
            if (count == 2) {
                temp = new int[10];
                while (q!= 0) {
                    x = q % 10;
                    q = q / 10;
                    temp[count - 2] = x;
                }
                li = li + temp[ : : - 1];
            }
            if (count == 3) {
                temp = new int[10];
                while (q!= 0) {
                    x = q % 10;
                    q = q / 10;
                    temp[count - 2] = x;
                }
                li = li + temp[ : : - 1];
            }
        }
        li.pop();
        li.pop();
        n = n - 1;
        return li[n];
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        System.out.println(findNthDigit(n));
        
    }
    public static int findNthDigit(int n) {
        int[] digits = new int[10];
        int[] temp = new int[10];
        int[] li = new int[10];
        int count = 0;
        int p = 1;
        int q = 1;
        for (int i = 1; i < 371; i++) {
            count = 0;
            while (p!= 0) {
                p = p / 10;
                count += 1;
            }
            if (count == 1) {
                digits[i] = i;
            }
            if (count == 2) {
                temp = new int[10];
                while (q!= 0) {
                    x = q % 10;
                    q = q / 10;
                    temp[count - 2] = x;
                }
                li = li + temp[ : : - 1];
            }
            if (count == 3) {
                temp = new int[10];
                while (q!= 0) {
                    x = q % 10;
                    q = q / 10;
                    temp[count - 2] = x;
                }
                li = li + temp[ : : - 1];
            }
        }
        li.pop();
        li.pop();
        n = n - 1;
        return li[n];
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC164_A.java,"public class atcoder_ABC164_A {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int S = s.nextInt();
        int W = s.nextInt();
        if (S <= W) {
            System.out.println(""unsafe"");
        } else {
            System.out.println(""safe"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int S = s.nextInt();
        int W = s.nextInt();
        if (S <= W) {
            System.out.println(""unsafe"");
        } else {
            System.out.println(""safe"");
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_459_A.java,"import java.util.Scanner;
import java.lang.Math;

public class codeforces_459_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String[] str = in.nextLine().split("" "");
        int x1 = Integer.parseInt(str[0]);
        int y1 = Integer.parseInt(str[1]);
        int x2 = Integer.parseInt(str[2]);
        int y2 = Integer.parseInt(str[3]);
        int denominator = x2 - x1;
        int numerator = y2 - y1;
        if (denominator!= 0) {
            int quotient = numerator / denominator;
            if (numerator == 0) {
                int d = (int) Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
                int x4 = x1;
                int x3 = x2;
                int y3 = y2 + d;
                int y4 = y1 + d;
                System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
            } else if (denominator == 0) {
                int y4 = y2;
                int y3 = y1;
                int d = (int) Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
                int x4 = x1 + d;
                int x3 = x2 + d;
                System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
            } else if (quotient == 1) {
                int x4 = x2;
                int x3 = x1;
                int y4 = y1;
                int y3 = y2;
                System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
            } else if (quotient == -1) {
                int x4 = x1;
                int x3 = x2;
                int y4 = y2;
                int y3 = y1;
                System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
            } else {
                System.out.println(""-1"");
            }
        } else {
            System.out.println(""-1"");
        }
    }
}","import java.util.Scanner;
import java.lang.Math;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String[] str = in.nextLine().split("" "");
        int x1 = Integer.parseInt(str[0]);
        int y1 = Integer.parseInt(str[1]);
        int x2 = Integer.parseInt(str[2]);
        int y2 = Integer.parseInt(str[3]);
        int denominator = x2 - x1;
        int numerator = y2 - y1;
        double quotient = 0;
        if (numerator == 0) {
            int d = (int) Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
            int x4 = x1;
            int x3 = x2;
            int y3 = y2 + d;
            int y4 = y1 + d;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else if (denominator == 0) {
            int y4 = y2;
            int y3 = y1;
            int d = (int) Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
            int x4 = x1 + d;
            int x3 = x2 + d;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else if (quotient == 1) {
            int x4 = x2;
            int x3 = x1;
            int y4 = y1;
            int y3 = y2;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else if (quotient == -1) {
            int x4 = x1;
            int x3 = x2;
            int y4 = y2;
            int y3 = y1;
            System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
        } else {
            System.out.println(""-1"");
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC017_A.java,"public class atcoder_AGC017_A {
    public int combinationSum4(int[] candidates, int target) {
        int[] dp = new int[target + 1];
        Arrays.fill(dp, -1);
        dp[0] = 1;
        for (int i = 0; i < candidates.length; i++) {
            for (int j = 0; j < dp.length; j++) {
                if (dp[j]!= -1) {
                    if (j + candidates[i] <= target) {
                        dp[j + candidates[i]] += dp[j];
                    }
                }
            }
        }
        return dp[target];
    }
}","public class Main {
    public int combinationSum4(int[] candidates, int target) {
        int[] dp = new int[target + 1];
        Arrays.fill(dp, -1);
        dp[0] = 1;
        for (int i = 0; i < candidates.length; i++) {
            for (int j = 0; j < dp.length; j++) {
                if (dp[j]!= -1) {
                    if (j + candidates[i] <= target) {
                        dp[j + candidates[i]] += dp[j];
                    }
                }
            }
        }
        return dp[target];
    }
}"
CodeGen,avatar,Python,Java,codeforces_637_A.java,"import java.util.Scanner;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;","import java.util.Scanner;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Queue;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.ArrayDeque;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;"
CodeGen,avatar,Python,Java,atcoder_ABC142_C.java,"public class atcoder_ABC142_C {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        in.close();
        Arrays.sort(a);
        int i = 0;
        while(i < n-1){
            System.out.print(a[i] + "" "");
            i++;
        }
        System.out.println(a[n-1]);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        in.close();
        Arrays.sort(a);
        int i = 0;
        while(i < n-1){
            System.out.print(a[i] + "" "");
            i++;
        }
        System.out.println(a[n-1]);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC140_F.java,"import java.util.*;
import java.lang.*;
import java.io.*;

class Main {
    public static void main ( String [ ] args ) {
        Scanner in = new Scanner ( System.in );
        int N = in.nextInt ( );
        int [ ] S = new int [ N ];
        for ( int i = 0 ; i < N ; i ++ ) {
            S[ i ] = in.nextInt ( );
        }
        Arrays.sort ( S, Collections.reverseOrder ( ) );
        boolean [ ] flag = new boolean [ N ];
        int [ ] cur = new int [ 1 ];
        cur[ 0 ] = S[ 0 ];
        flag[ 0 ] = false;
        for ( int i = 0 ; i < N ; i ++ ) {
            int j = 0;
            int jM = cur.length;
            for ( int k = 0 ; k < S.length ; k ++ ) {
                if ( flag[ k ] && S[ k ] < cur[ j ] ) {
                    cur[ j + 1 ] = S[ k ];
                    j ++;
                    flag[ k ] = false;
                    if ( j == jM ) {
                        break;
                    }
                }
            }
        }
        for ( int i = 0 ; i < cur.length ; i ++ ) {
            if ( flag[ i ] ) {
                return ""No"";
            }
        }
        return ""Yes"";
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;

class Main {
    public static void main ( String [ ] args ) {
        Scanner in = new Scanner ( System.in );
        int N = in.nextInt ( );
        int [ ] S = new int [ N ];
        for ( int i = 0 ; i < N ; i ++ ) {
            S[ i ] = in.nextInt ( );
        }
        Arrays.sort ( S, Collections.reverseOrder ( ) );
        boolean [ ] flag = new boolean [ N ];
        int [ ] cur = new int [ 1 ];
        cur[ 0 ] = S[ 0 ];
        flag[ 0 ] = false;
        for ( int i = 0 ; i < N ; i ++ ) {
            int j = 0;
            int jM = cur.length;
            for ( int k = 0 ; k < S.length ; k ++ ) {
                if ( flag[ k ] && S[ k ] < cur[ j ] ) {
                    cur[ j + 1 ] = S[ k ];
                    j ++;
                    flag[ k ] = false;
                    if ( j == jM ) {
                        break;
                    }
                }
            }
        }
        for ( int i = 0 ; i < cur.length ; i ++ ) {
            if ( flag[ i ] ) {
                return ""No"";
            }
        }
        return ""Yes"";
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC150_E.java,"public class atcoder_ABC150_E {
    public int findNthDigit(int n) {
        int mod = 1000000007;
        int[] c = new int[10];
        for (int i = 0; i < 10; i++) {
            c[i] = i;
        }
        c.sort(new Comparator<Integer>() {
            @Override
            public int compare(Integer o1, Integer o2) {
                return o2 - o1;
            }
        });
        int b = 1;
        int a = 2;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans += c[i] * (a + i * b) % mod;
            ans %= mod;
        }
        return ans;
    }
}","public class Main {
    public int findNthDigit(int n) {
        int mod = 1000000007;
        int[] c = new int[10];
        for (int i = 0; i < 10; i++) {
            c[i] = i;
        }
        c.sort(new Comparator<Integer>() {
            @Override
            public int compare(Integer o1, Integer o2) {
                return o2 - o1;
            }
        });
        int b = 1;
        int a = 2;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans += c[i] * (a + i * b) % mod;
            ans %= mod;
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC140_D.java,"public class atcoder_ABC140_D {
    public int findHappy(int N, int K) {
        int[] S = new int[N];
        int[] happy = new int[N];
        int[] happy_cnt = new int[N];
        for (int i = 0; i < N; i++) {
            S[i] = i + 1;
            happy_cnt[i] = 1;
        }
        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                if (S[i] == S[j]) {
                    happy_cnt[i]++;
                    happy_cnt[j]++;
                }
            }
        }
        int ans = N - 1;
        for (int i = 0; i < N; i++) {
            if (happy_cnt[i] >= K) {
                ans = Math.min(ans, i);
            }
        }
        return ans;
    }
}","public class Main {
    public int findHappy(int N, int K) {
        int[] S = new int[N];
        int[] happy = new int[N];
        int[] happy_cnt = new int[N];
        for (int i = 0; i < N; i++) {
            S[i] = i + 1;
            happy_cnt[i] = 1;
        }
        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                if (S[i] == S[j]) {
                    happy_cnt[i]++;
                    happy_cnt[j]++;
                }
            }
        }
        int ans = N - 1;
        for (int i = 0; i < N; i++) {
            if (happy_cnt[i] >= K) {
                ans = Math.min(ans, i);
            }
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC112_C.java,"import java.util.*;
import java.io.*;

public class atcoder_ABC112_C {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[][] ls_xyh = new int[n][3];
        for (int i = 0; i < n; i++) {
            String[] ws = br.readLine().split("" "");
            for (int j = 0; j < 3; j++) {
                ls_xyh[i][j] = Integer.parseInt(ws[j]);
            }
        }
        String ans = solve(n, ls_xyh);
        System.out.println(ans);
    }
    public static String solve(int n, int[][] ls_xyh) {
        int[] x0 = new int[n];
        int[] y0 = new int[n];
        int[] h0 = new int[n];
        for (int i = 0; i < n; i++) {
            if (ls_xyh[i][2] > 0) {
                x0[i] = ls_xyh[i][0];
                y0[i] = ls_xyh[i][1];
                h0[i] = ls_xyh[i][2];
                break;
            }
        }
        int[] cx = new int[101];
        int[] cy = new int[101];
        int[] ch = new int[101];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < cx.length; j++) {
                cx[j] = i;
                cy[j] = j;
                ch[j] = h0[i] + Math.abs(cx[j] - x0[i]) + Math.abs(cy[j] - y0[i]);
            }
            Arrays.sort(cx);
            Arrays.sort(cy);
            Arrays.sort(ch);
            int xx = cx[0];
            int yy = cy[0];
            int hh = ch[0];
            for (int j = 1; j < cx.length; j++) {
                if (ch[j] == hh) {
                    xx = cx[j];
                    yy = cy[j];
                } else {
                    break;
                }
            }
            break;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(xx);
        sb.append(' ');
        sb.append(yy);
        sb.append(' ');
        sb.append(hh);
        return sb.toString();
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[][] ls_xyh = new int[n][3];
        for (int i = 0; i < n; i++) {
            String[] ws = br.readLine().split("" "");
            for (int j = 0; j < 3; j++) {
                ls_xyh[i][j] = Integer.parseInt(ws[j]);
            }
        }
        String ans = solve(n, ls_xyh);
        System.out.println(ans);
    }
    public static String solve(int n, int[][] ls_xyh) {
        int[] x0 = new int[n];
        int[] y0 = new int[n];
        int[] h0 = new int[n];
        for (int i = 0; i < n; i++) {
            if (ls_xyh[i][2] > 0) {
                x0[i] = ls_xyh[i][0];
                y0[i] = ls_xyh[i][1];
                h0[i] = ls_xyh[i][2];
                break;
            }
        }
        int[] cx = new int[101];
        int[] cy = new int[101];
        int[] ch = new int[101];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < cx.length; j++) {
                cx[j] = i;
                cy[j] = j;
                ch[j] = h0[i] + Math.abs(cx[j] - x0[i]) + Math.abs(cy[j] - y0[i]);
            }
            Arrays.sort(cx);
            Arrays.sort(cy);
            Arrays.sort(ch);
            int xx = cx[0];
            int yy = cy[0];
            int hh = ch[0];
            for (int j = 1; j < cx.length; j++) {
                if (ch[j] == hh) {
                    xx = cx[j];
                    yy = cy[j];
                } else {
                    break;
                }
            }
            break;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(xx);
        sb.append(' ');
        sb.append(yy);
        sb.append(' ');
        sb.append(hh);
        return sb.toString();
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC006_A.java,"public class atcoder_AGC006_A {
    public int findLengthOfLongestSubstring(String s) {
        int n = s.length();
        int[] map = new int[128];
        int max = 0;
        for (int i = 0; i < n; i++) {
            map[s.charAt(i)]++;
            max = Math.max(max, map[s.charAt(i)]);
        }
        int start = 0;
        int end = 0;
        for (int i = 0; i < n; i++) {
            while (end < n && map[s.charAt(end)] == 0) {
                end++;
            }
            if (end - start > max) {
                max = end - start;
            }
            map[s.charAt(i)]--;
            start = i + 1;
        }
        return max;
    }
}","public class Main {
    public int findLengthOfLongestSubstring(String s) {
        int n = s.length();
        int[] map = new int[128];
        int max = 0;
        for (int i = 0; i < n; i++) {
            map[s.charAt(i)]++;
            max = Math.max(max, map[s.charAt(i)]);
        }
        int start = 0;
        int end = 0;
        for (int i = 0; i < n; i++) {
            while (end < n && map[s.charAt(end)] == 0) {
                end++;
            }
            if (end - start > max) {
                max = end - start;
            }
            map[s.charAt(i)]--;
            start = i + 1;
        }
        return max;
    }
}"
CodeGen,avatar,Python,Java,codeforces_519_B.java,"public class codeforces_519_B {
    public int maxSubArray(int[] A) {
        int max = Integer.MIN_VALUE;
        int sum = 0;
        for (int i = 0; i < A.length; i++) {
            sum += A[i];
            if (sum > max) {
                max = sum;
            }
            if (sum < 0) {
                sum = 0;
            }
        }
        return max;
    }
}","public class Main {
    public int maxSubArray(int[] A) {
        int max = Integer.MIN_VALUE;
        int sum = 0;
        for (int i = 0; i < A.length; i++) {
            sum += A[i];
            if (sum > max) {
                max = sum;
            }
            if (sum < 0) {
                sum = 0;
            }
        }
        return max;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC147_D.java,"public class atcoder_ABC147_D {
    public int findMaxForm(int[] A, int N) {
        int result = 0;
        for (int b = 0; b < 60; b++) {
            int bs = (A[b] & 1) == 1? 1 : 0;
            result = (result + bs * (N - bs) * (1 << b)) % 1000000007;
        }
        return result;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextLong();
        }
        System.out.println(findMaxForm(A, N));
    }
    public static long findMaxForm(long[] A, int N) {
        long result = 0;
        for (int b = 0; b < 60; b++) {
            int bs = 0;            
            for (int i = 0; i < N; i++) {
                bs += (A[i] >> b) & 1;
            }
            result = (result + bs * (N - bs) * (1L << b)) % 1000000007;
        }
        return result;
    }
}"
CodeGen,avatar,Python,Java,codeforces_25_A.java,"public class codeforces_25_A {
    public int findPeakElement(int[] nums) {
        int len = nums.length;
        if (len == 0) return -1;
        int mid = len / 2;
        if (nums[mid] > nums[mid - 1] && nums[mid] > nums[mid + 1]) return mid;
        if (nums[mid] > nums[mid - 1] && nums[mid] < nums[mid + 1]) return mid;
        if (nums[mid] < nums[mid - 1] && nums[mid] > nums[mid + 1]) return mid - 1;
        if (nums[mid] < nums[mid - 1] && nums[mid] < nums[mid + 1]) return mid - 1;
        return -1;
    }
}","public class Main {
    public int findPeakElement(int[] nums) {
        int len = nums.length;
        if (len == 0) return -1;
        int mid = len / 2;
        if (nums[mid] > nums[mid - 1] && nums[mid] > nums[mid + 1]) return mid;
        if (nums[mid] > nums[mid - 1] && nums[mid] < nums[mid + 1]) return mid;
        if (nums[mid] < nums[mid - 1] && nums[mid] > nums[mid + 1]) return mid - 1;
        if (nums[mid] < nums[mid - 1] && nums[mid] < nums[mid + 1]) return mid - 1;
        return -1;
    }
}"
CodeGen,avatar,Python,Java,codeforces_474_B.java,"import java.util.*;
import java.lang.*;
import java.io.*;

public class codeforces_474_B {
	public static void main ( String [ ] args ) {
		Scanner in = new Scanner ( System.in );
		int n = in.nextInt ( );
		int [ ] arr = new int [ n ];
		for ( int i = 0; i < n; i ++ ) {
			arr [ i ] = in.nextInt ( );
		}
		int m = in.nextInt ( );
		int [ ] arr2 = new int [ m ];
		for ( int i = 0; i < m; i ++ ) {
			arr2 [ i ] = in.nextInt ( );
		}
		int [ ] arr3 = new int [ n ];
		for ( int i = 0; i < n; i ++ ) {
			arr3 [ i ] = arr [ i ];
		}
		for ( int i = 0; i < m; i ++ ) {
			arr3 [ arr2 [ i ] - 1 ] = arr2 [ i ];
		}
		for ( int i = 0; i < n; i ++ ) {
			System.out.print ( arr3 [ i ] );
			if ( i!= n - 1 ) {
				System.out.print ( "" "" );
			}
		}
	}
}","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main ( String [ ] args ) {
		Scanner in = new Scanner ( System.in );
		int n = in.nextInt ( );
		int [ ] arr = new int [ n ];
		for ( int i = 0; i < n; i ++ ) {
			arr [ i ] = in.nextInt ( );
		}
		int m = in.nextInt ( );
		int [ ] arr2 = new int [ m ];
		for ( int i = 0; i < m; i ++ ) {
			arr2 [ i ] = in.nextInt ( );
		}
		int [ ] arr3 = new int [ n ];
		for ( int i = 0; i < n; i ++ ) {
			arr3 [ i ] = arr [ i ];
		}
		for ( int i = 0; i < m; i ++ ) {
			arr3 [ arr2 [ i ] - 1 ] = arr2 [ i ];
		}
		for ( int i = 0; i < n; i ++ ) {
			System.out.print ( arr3 [ i ] );
			if ( i!= n - 1 ) {
				System.out.print ( "" "" );
			}
		}
	}
}"
CodeGen,avatar,Python,Java,codeforces_350_B.java,"public class codeforces_350_B {
    public int[] findSubstring(String s, String[] words) {
        int[] ans = new int[words.length];
        int[] cnt = new int[words.length];
        int n = s.length();
        for (int i = 0; i < words.length; i++) {
            cnt[i] = 0;
        }
        for (int i = 0; i < n; i++) {
            cnt[s.charAt(i) - 'a']++;
        }
        for (int i = 0; i < words.length; i++) {
            if (cnt[i] == 1) {
                int crt = i;
                int x = words[i].charAt(0) - 'a';
                while (cnt[x] == 1) {
                    crt = x;
                    x = words[x].charAt(0) - 'a';
                }
                if (crt > ans[i]) {
                    ans[i] = crt;
                }
            }
        }
        for (int i = 0; i < words.length; i++) {
            if (ans[i] > 0) {
                ans[i] = ans[i] - 1;
            }
        }
        for (int i = 0; i < words.length; i++) {
            if (ans[i] > 0) {
                ans[i] = ans[i] + 1;
            }
        }
        for (int i = 0; i < words.length; i++) {
            if (ans[i] > 0) {
                ans[i] = ans[i] - 1;
            }
        }
        return ans;
    }
}","public class Main {
    public int[] findSubstring(String s, String[] words) {
        int[] ans = new int[words.length];
        int[] cnt = new int[words.length];
        int n = s.length();
        for (int i = 0; i < words.length; i++) {
            cnt[i] = 0;
        }
        for (int i = 0; i < n; i++) {
            cnt[s.charAt(i) - 'a']++;
        }
        for (int i = 0; i < words.length; i++) {
            if (cnt[i] == 1) {
                int crt = i;
                int x = words[i].charAt(0) - 'a';
                while (cnt[x] == 1) {
                    crt = x;
                    x = words[x].charAt(0) - 'a';
                }
                if (crt > ans[i]) {
                    ans[i] = crt;
                }
            }
        }
        for (int i = 0; i < words.length; i++) {
            if (ans[i] > 0) {
                ans[i] = ans[i] - 1;
            }
        }
        for (int i = 0; i < words.length; i++) {
            if (ans[i] > 0) {
                ans[i] = ans[i] + 1;
            }
        }
        for (int i = 0; i < words.length; i++) {
            if (ans[i] > 0) {
                ans[i] = ans[i] - 1;
            }
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,codeforces_313_B.java,"public class codeforces_313_B {
    public int[] findSubstring(String S, String[] L) {
        int[] ans = new int[L.length];
        int n = L.length;
        int m = L[0].length();
        int[] a = new int[m];
        for (int i = 0; i < m; i++) {
            a[i] = 0;
        }
        for (int i = 0; i < n; i++) {
            a[0] = 0;
            for (int j = 0; j < m; j++) {
                if (S.charAt(i + j) == L[j].charAt(0)) {
                    a[j]++;
                }
            }
            for (int j = 1; j < m; j++) {
                a[j] = a[j - 1] + a[j];
            }
            for (int j = 0; j < m; j++) {
                if (a[j] >= L[j].length()) {
                    ans[i] = j + 1;
                    a[j] = 0;
                }
            }
        }
        return ans;
    }
}","public class Main {
    public int[] findSubstring(String S, String[] L) {
        int[] ans = new int[L.length];
        int n = L.length;
        int m = L[0].length();
        int[] a = new int[m];
        for (int i = 0; i < m; i++) {
            a[i] = 0;
        }
        for (int i = 0; i < n; i++) {
            a[0] = 0;
            for (int j = 0; j < m; j++) {
                if (S.charAt(i + j) == L[j].charAt(0)) {
                    a[j]++;
                }
            }
            for (int j = 1; j < m; j++) {
                a[j] = a[j - 1] + a[j];
            }
            for (int j = 0; j < m; j++) {
                if (a[j] >= L[j].length()) {
                    ans[i] = j + 1;
                    a[j] = 0;
                }
            }
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC146_D.java,"import java.util.*;
import java.lang.*;
import java.io.*;

class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] g = new int[n][n];
        for (int i = 0; i < n; i++) {
            g[i] = new int[n];
            for (int j = 0; j < n; j++) {
                g[i][j] = in.nextInt();
            }
        }
        int[][] e = new int[n][n];
        for (int i = 0; i < n; i++) {
            e[i] = new int[n];
            for (int j = 0; j < n; j++) {
                e[i][j] = in.nextInt();
            }
        }
        int k = bfs(0, n, g, e);
        System.out.println(k);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.print(e[i][j]);
            }
            System.out.println();
        }
    }
    public static int bfs(int s, int n, int[][] g, int[][] e) {
        int[] visited = new int[n];
        int[] queue = new int[n];
        int[] color = new int[n];
        int k = -1;
        for (int i = 0; i < n; i++) {
            if (visited[i] == 0) {
                queue[0] = i;
                visited[i] = 1;
                color[i] = 1;
                k = 1;
                break;
            }
        }
        while (k >= 0) {
            int q = queue[k];
            k--;
            for (int i = 0; i < g[q].length; i++) {
                int nex = g[q][i];
                if (visited[nex] == 0) {
                    visited[nex] = 1;
                    color[nex] = color[q] + 1;
                    queue[++k] = nex;
                }
            }
        }
        for (int i = 0; i < n; i++) {
            if (color[i] == n) {
                return n;
            }
        }
        return k;
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;

class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] g = new int[n][n];
        for (int i = 0; i < n; i++) {
            g[i] = new int[n];
            for (int j = 0; j < n; j++) {
                g[i][j] = in.nextInt();
            }
        }
        int[][] e = new int[n][n];
        for (int i = 0; i < n; i++) {
            e[i] = new int[n];
            for (int j = 0; j < n; j++) {
                e[i][j] = in.nextInt();
            }
        }
        int k = bfs(0, n, g, e);
        System.out.println(k);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.print(e[i][j]);
            }
            System.out.println();
        }
    }
    public static int bfs(int s, int n, int[][] g, int[][] e) {
        int[] visited = new int[n];
        int[] queue = new int[n];
        int[] color = new int[n];
        int k = -1;
        for (int i = 0; i < n; i++) {
            if (visited[i] == 0) {
                queue[0] = i;
                visited[i] = 1;
                color[i] = 1;
                k = 1;
                break;
            }
        }
        while (k >= 0) {
            int q = queue[k];
            k--;
            for (int i = 0; i < g[q].length; i++) {
                int nex = g[q][i];
                if (visited[nex] == 0) {
                    visited[nex] = 1;
                    color[nex] = color[q] + 1;
                    queue[++k] = nex;
                }
            }
        }
        for (int i = 0; i < n; i++) {
            if (color[i] == n) {
                return n;
            }
        }
        return k;
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC027_A.java,"public class atcoder_AGC027_A {
    public int findMin(int[] nums) {
        int len = nums.length;
        if (len == 0) return 0;
        int left = 0;
        int right = len - 1;
        int mid = 0;
        while (left < right) {
            mid = (left + right) / 2;
            if (nums[mid] > nums[right]) {
                left = mid + 1;
            } else if (nums[mid] < nums[right]) {
                right = mid;
            } else {
                right--;
            }
        }
        return nums[left];
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int x = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        System.out.println(findMin(a));
    }
    public static int findMin(int[] nums) {
        int len = nums.length;
        if (len == 0) return 0;
        int left = 0;
        int right = len - 1;
        int mid = 0;
        while (left < right) {
            mid = (left + right) / 2;
            if (nums[mid] > nums[right]) {
                left = mid + 1;
            } else if (nums[mid] < nums[right]) {
                right = mid;
            } else {
                right--;
            }
        }
        return nums[left];
    }
}"
CodeGen,avatar,Python,Java,codeforces_569_A.java,"public class codeforces_569_A {
    public int getFactorial(int n) {
        int factorial = 1;
        for (int i = 1; i <= n; i++) {
            factorial *= i;
        }
        return factorial;
    }
}","public class Main {
    public int getFactorial(int n) {
        int factorial = 1;
        for (int i = 1; i <= n; i++) {
            factorial *= i;
        }
        return factorial;
    }
}"
CodeGen,avatar,Python,Java,codeforces_171_A.java,"public class codeforces_171_A {
    public int maxNumber(String a, String b) {
        int x = Math.max(a.length(), b.length());
        a = a.replaceAll(""0"", """");
        b = b.replaceAll(""0"", """");
        StringBuilder sb = new StringBuilder();
        int c = 0;
        for (int i = 0; i < x; i++) {
            int d = (b.charAt(i) - '0') + (a.charAt(x - i - 1) - '0') + c;
            if (d > 9) {
                sb.append(d - 10);
                c = 1;
            } else {
                sb.append(d);
                c = 0;
            }
        }
        if (c == 1) {
            sb.append(1);
        }
        return Integer.parseInt(sb.toString());
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String a = scanner.next();
        String b = scanner.next();
        System.out.println(maxNumber(a, b));
    }
    public static int maxNumber(String a, String b) {
        int x = Math.max(a.length(), b.length());
        a = a.replaceAll(""0"", """");
        b = b.replaceAll(""0"", """");
        StringBuilder sb = new StringBuilder();
        int c = 0;
        for (int i = 0; i < x; i++) {
            int d = (b.charAt(i) - '0') + (a.charAt(x - i - 1) - '0') + c;
            if (d > 9) {
                sb.append(d - 10);
                c = 1;
            } else {
                sb.append(d);
                c = 0;
            }
        }
        if (c == 1) {
            sb.append(1);
        }
        return Integer.parseInt(sb.toString());
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC168_C.java,"import java.util.Scanner;

public class atcoder_ABC168_C {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int h = in.nextInt();
        int m = in.nextInt();
        int C = in.nextInt();
        if (C > 180) {
            C = 360 - C;
        }
        double cosC = Math.cos(Math.toRadians(C));
        double sqrt = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) - 2 * a * b * cosC);
        System.out.println(Math.round(sqrt));
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int h = in.nextInt();
        int m = in.nextInt();
        double C = Math.abs(360 / 60 * m - 360 / 12 * h - (double) (360 / 12) / 60 * m);
        if (C > 180) {
            C = 360 - C;
        }
        double cosC = Math.cos(Math.toRadians(C));
        double sqrt = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) - 2 * a * b * cosC);
        System.out.println(sqrt);
    }
}"
CodeGen,avatar,Python,Java,codeforces_462_B.java,"import java.util.Scanner;
import java.lang.Math;

public class codeforces_462_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        String s = sc.next();
        int[] count = new int[26];
        for (int i = 0; i < s.length(); i++) {
            count[s.charAt(i) - 'A']++;
        }
        count = java.util.Arrays.stream(count).sorted().map(i -> i * i).toArray();
        int res = 0;
        for (int i = 0; i < 26; i++) {
            if (count[i] >= k) {
                res += k * k;
                System.out.println(res);
                break;
            }
            k -= count[i];
            res += count[i] * count[i];
        }
        System.out.println(res);
    }
}","import java.util.Scanner;
import java.lang.Math;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        sc.nextLine();
        String s = sc.nextLine();
        int[] count = new int[26];
        for (int i = 0; i < s.length(); i++) {
            count[s.charAt(i) - 'A']++;
        }
        count = java.util.Arrays.stream(count).sorted().map(i -> i * i).toArray();
        int res = 0;
        for (int i = 0; i < 26; i++) {
            if (count[i] >= k) {
                res += k * k;
                System.out.println(res);
                return;
            }
            k -= count[i];
            res += count[i] * count[i];
        }
        System.out.println(res);
    }
}"
CodeGen,avatar,Python,Java,codeforces_110_B.java,"public class codeforces_110_B {
    public static void main(String[] args) {
        String LUCKY = ""abcd"";
        int n = Integer.parseInt(args[0]);
        String s = """";
        for (int i = 0; i < n; i++) {
            s += LUCKY.charAt(i % 4);
        }
        System.out.println(s);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        String LUCKY = ""abcd"";
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String s = """";
        for (int i = 0; i < n; i++) {
            s += LUCKY.charAt(i % 4);
        }
        System.out.println(s);
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC046_B.java,"public class atcoder_AGC046_B {
    public int findNthDigit(int n) {
        int[] d = new int[10];
        d[0] = 1;
        for (int i = 1; i < 10; i++) {
            d[i] = d[i - 1] * i;
        }
        int A = 0, B = 0, C = 998244353, D = 998244353;
        int m = 998244353;
        int[][] ds = new int[C + 1][D + 1];
        ds[A][B] = 1;
        for (int i = A; i <= C; i++) {
            for (int j = B; j <= D; j++) {
                ds[i][j] += (ds[i][j - 1] * i + ds[i - 1][j] * j - ds[i - 1][j - 1] * (i - 1) * (j - 1)) % m;
            }
        }
        return ds[C][D];
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int A, B, C, D;
        Scanner sc = new Scanner(System.in);
        A = sc.nextInt();
        B = sc.nextInt();
        C = sc.nextInt();
        D = sc.nextInt();
        int m = 998244353;
        long[][] d = new long[C+1][D+1];
        d[A][B] = 1;
        for (int i = A; i <= C; i++) {
            for (int j = B; j <= D; j++) {
                d[i][j] += ((d[i][j-1] * i + d[i-1][j] * j - d[i-1][j-1] * (i-1) * (j-1)) % m + m) % m;
            }
        }
        System.out.println(d[C][D]);
    }
}"
CodeGen,avatar,Python,Java,codeforces_459_B.java,"public class codeforces_459_B {
    public int divide(int dividend, int divisor) {
        if (dividend == 0) {
            return 0;
        }
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        long result = 0;
        while (a >= b) {
            long temp = b;
            b = a % b;
            a = temp;
            result += 1;
        }
        if (isNegative) {
            result = -result;
        }
        return (int) result;
    }
}","public class Main {
    public int divide(int dividend, int divisor) {
        if (dividend == 0) {
            return 0;
        }
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        long result = 0;
        while (a >= b) {
            long temp = b;
            b = a % b;
            a = temp;
            result += 1;
        }
        if (isNegative) {
            result = -result;
        }
        return (int) result;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC172_D.java,"import java.util.*;
import java.lang.*;
import java.io.*;

public class atcoder_ABC172_D {
	public static void main ( String [ ] args ) {
		Scanner in = new Scanner ( System.in );
		int n = in.nextInt ( );
		int ans = 0;
		for ( int i = 1 ; i <= n ; i++ ) {
			ans += i * ( n / i ) * ( n / i + 1 ) / 2;
		}
		System.out.println ( ans );
	}
}","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.math.BigInteger;

public class Main {
    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        BigInteger ans = BigInteger.ZERO;
        for (int i = 1; i <= N; i++) {
            BigInteger bi_i = BigInteger.valueOf(i);
            BigInteger bi_N = BigInteger.valueOf(N);
            BigInteger term = bi_i.multiply(bi_N.divide(bi_i)).multiply(bi_N.divide(bi_i).add(BigInteger.ONE)).divide(BigInteger.valueOf(2));
            ans = ans.add(term);
        }
        System.out.println(ans);
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC033_A.java,"public class atcoder_AGC033_A {
    public int maxPathSum(int[][] grid) {
        int h = grid.length;
        int w = grid[0].length;
        int[][] graph = new int[h][w];
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (grid[i][j] == '#') {
                    graph[i][j] = Integer.MAX_VALUE;
                } else {
                    graph[i][j] = grid[i][j];
                }
            }
        }
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (i > 0) {
                    graph[i][j] = Math.min(graph[i][j], graph[i - 1][j] + 1);
                }
                if (j > 0) {
                    graph[i][j] = Math.min(graph[i][j], graph[i][j - 1] + 1);
                }
            }
        }
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (i > 0) {
                    graph[i][j] = Math.min(graph[i][j], graph[i - 1][j] + 1);
                }
                if (j > 0) {
                    graph[i][j] = Math.min(graph[i][j], graph[i][j - 1] + 1);
                }
            }
        }
        return Math.max(0, graph[h - 1][w - 1]);
    }
}","public class Main {
    public int maxPathSum(int[][] grid) {
        int h = grid.length;
        int w = grid[0].length;
        int[][] graph = new int[h][w];
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (grid[i][j] == '#') {
                    graph[i][j] = Integer.MAX_VALUE;
                } else {
                    graph[i][j] = grid[i][j];
                }
            }
        }
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (i > 0) {
                    graph[i][j] = Math.min(graph[i][j], graph[i - 1][j] + 1);
                }
                if (j > 0) {
                    graph[i][j] = Math.min(graph[i][j], graph[i][j - 1] + 1);
                }
            }
        }
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (i > 0) {
                    graph[i][j] = Math.min(graph[i][j], graph[i - 1][j] + 1);
                }
                if (j > 0) {
                    graph[i][j] = Math.min(graph[i][j], graph[i][j - 1] + 1);
                }
            }
        }
        return Math.max(0, graph[h - 1][w - 1]);
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC011_C.java,"import java.util.Queue;
import java.util.LinkedList;
import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.Iterator;
import java.util.Stack;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

class Solution {
    public static void main(String[] args) throws IOException {
        Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
        int n = in.nextInt();
        int m = in.nextInt();
        int[][] g = new int[n+1][n+1];
        for (int i = 0; i < m; i++) {
            int u = in.nextInt()-1;
            int v = in.nextInt()-1;
            g[u][v] = 1;
            g[v][u] = 1;
        }
        int ci = 0, cb = 0, cc = 0;
        for (int i = 1; i <= n; i++) {
            if (g[0][i] == 0) {
                ci++;
            }
            if (g[i][0] == 0) {
                cb++;
            }
            if (g[0][0] == 0) {
                cc++;
            }
            for (int j = 1; j <= n; j++) {
                if (g[i][j] == 1) {
                    for (int k = 1; k <= n; k++) {
                        if (g[j][k] == 1) {
                            g[i][j] = 2;
                            g[j][k] = 2;
                            g[i][k] = 2;
                        }
                    }
                }
            }
        }
        int ans = ci * ci + 2 * ci * (n - ci) + cc * cc + 2 * cb * cc + 2 * cb * cb;
        System.out.println(ans);
    }
}","import java.util.Queue;
import java.util.LinkedList;
import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.Iterator;
import java.util.Stack;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

class Solution {
    public static void main(String[] args) throws IOException {
        Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
        int n = in.nextInt();
        int m = in.nextInt();
        int[][] g = new int[n+1][n+1];
        for (int i = 0; i < m; i++) {
            int u = in.nextInt()-1;
            int v = in.nextInt()-1;
            g[u][v] = 1;
            g[v][u] = 1;
        }
        int ci = 0, cb = 0, cc = 0;
        for (int i = 1; i <= n; i++) {
            if (g[0][i] == 0) {
                ci++;
            }
            if (g[i][0] == 0) {
                cb++;
            }
            if (g[0][0] == 0) {
                cc++;
            }
            for (int j = 1; j <= n; j++) {
                if (g[i][j] == 1) {
                    for (int k = 1; k <= n; k++) {
                        if (g[j][k] == 1) {
                            g[i][j] = 2;
                            g[j][k] = 2;
                            g[i][k] = 2;
                        }
                    }
                }
            }
        }
        int ans = ci * ci + 2 * ci * (n - ci) + cc * cc + 2 * cb * cc + 2 * cb * cb;
        System.out.println(ans);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC043_B.java,"public class atcoder_ABC043_B {
    public String convertToBinary(int num) {
        StringBuilder sb = new StringBuilder();
        while (num > 0) {
            sb.append(num % 2);
            num /= 2;
        }
        return sb.reverse().toString();
    }
}","public class Main {
    public String convertToBinary(int num) {
        StringBuilder sb = new StringBuilder();
        while (num > 0) {
            sb.append(num % 2);
            num /= 2;
        }
        return sb.reverse().toString();
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC112_A.java,"public class atcoder_ABC112_A {
    public static void main(String[] args) {
        int age = Integer.parseInt(args[0]);
        if (age == 1) {
            System.out.println(""Hello World"");
        } else {
            int a = Integer.parseInt(args[1]);
            int b = Integer.parseInt(args[2]);
            System.out.println(a + b);
        }
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int age = scanner.nextInt();
        if (age == 1) {
            System.out.println(""Hello World"");
        } else {
            int a = scanner.nextInt();
            int b = scanner.nextInt();
            System.out.println(a + b);
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_327_A.java,"public class codeforces_327_A {
    public int findMaxLength(String s) {
        int n = s.length();
        if (n == 0) return 0;
        int[] indices = new int[n];
        int max = 0;
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == '0') {
                indices[i] = i;
            }
        }
        if (indices.length == 1) return n;
        for (int i = 0; i < indices.length - 1; i++) {
            for (int j = i + 1; j < indices.length; j++) {
                int diff = Math.abs(indices[i] - indices[j]);
                if (diff == 1) continue;
                int len = 2 + 2 * diff - diff;
                if (len > max) max = len;
            }
        }
        return s.replaceAll(""0"", """").length() + max;
    }
}","public class Main {
    public int findMaxLength(String s) {
        int n = s.length();
        if (n == 0) return 0;
        int[] indices = new int[n];
        int max = 0;
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == '0') {
                indices[i] = i;
            }
        }
        if (indices.length == 1) return n;
        for (int i = 0; i < indices.length - 1; i++) {
            for (int j = i + 1; j < indices.length; j++) {
                int diff = Math.abs(indices[i] - indices[j]);
                if (diff == 1) continue;
                int len = 2 + 2 * diff - diff;
                if (len > max) max = len;
            }
        }
        return s.replaceAll(""0"", """").length() + max;
    }
}"
CodeGen,avatar,Python,Java,codeforces_92_A.java,"public class codeforces_92_A {
    public int divide(int dividend, int divisor) {
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isPositive = (dividend > 0 && divisor > 0) || (dividend < 0 && divisor < 0);
        boolean isNegative = (dividend > 0 && divisor < 0) || (dividend < 0 && divisor > 0);
        boolean isMinus = (dividend < 0 && divisor > 0) || (dividend > 0 && divisor < 0);
        boolean isZero = (dividend == 0 && divisor > 0) || (dividend < 0 && divisor == 0);
        if (isMinus) {
            dividend = -dividend;
            divisor = -divisor;
        }
        if (isZero) {
            return Integer.MAX_VALUE;
        }
        if (isPositive && isNegative) {
            return 0;
        }
        if (isPositive && isNegative) {
            return Integer.MAX_VALUE;
        }
        if (isPositive && isZero) {
            return Integer.MAX_VALUE;
        }
        if (isNegative && isZero) {
            return Integer.MAX_VALUE;
        }
        int res = 0;
        int n = Math.abs ( dividend );
        int m = Math.abs ( divisor );
        while ( n >= m ) {
            int temp = m;
            m = n % m;
            n = temp;
            res += 1;
        }
        if ( isPositive ) {
            return res;
        } else {
            return -res;
        }
    }
}","public class Main {
    public int divide(int dividend, int divisor) {
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isPositive = (dividend > 0 && divisor > 0) || (dividend < 0 && divisor < 0);
        boolean isNegative = (dividend > 0 && divisor < 0) || (dividend < 0 && divisor > 0);
        boolean isMinus = (dividend < 0 && divisor > 0) || (dividend > 0 && divisor < 0);
        boolean isZero = (dividend == 0 && divisor > 0) || (dividend < 0 && divisor == 0);
        if (isMinus) {
            dividend = -dividend;
            divisor = -divisor;
        }
        if (isZero) {
            return Integer.MAX_VALUE;
        }
        if (isPositive && isNegative) {
            return 0;
        }
        if (isPositive && isNegative) {
            return Integer.MAX_VALUE;
        }
        if (isPositive && isZero) {
            return Integer.MAX_VALUE;
        }
        if (isNegative && isZero) {
            return Integer.MAX_VALUE;
        }
        int res = 0;
        int n = Math.abs ( dividend );
        int m = Math.abs ( divisor );
        while ( n >= m ) {
            int temp = m;
            m = n % m;
            n = temp;
            res += 1;
        }
        if ( isPositive ) {
            return res;
        } else {
            return -res;
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC120_C.java,"import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.regex.*;

public class atcoder_ABC120_C {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int ans = 0;
        for(int i=0; i < n; i++){
            for(int j=i+1; j < n; j++){
                if(a[i] > a[j]){
                    ans += Math.min(a[i], a[j]) * 2;
                }
            }
        }
        System.out.println(ans);
    }
}","import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.regex.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int ans = 0;
        for(int i=0; i < n; i++){
            for(int j=i+1; j < n; j++){
                if(a[i] > a[j]){
                    ans += Math.min(a[i], a[j]) * 2;
                }
            }
        }
        System.out.println(ans);
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC046_A.java,"public class atcoder_AGC046_A {
    public int divide(int dividend, int divisor) {
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == 0) {
            return 0;
        }
        int sign = 1;
        if (dividend < 0) {
            dividend = -dividend;
            sign = -1;
        }
        if (divisor < 0) {
            divisor = -divisor;
            sign = -sign;
        }
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        long res = 0;
        while (a >= b) {
            long tmp = b;
            b = a % b;
            a = tmp;
            res += sign;
        }
        if (b > 0) {
            res += sign;
        }
        return (int) res;
    }
}","public class Main {
    public int divide(int dividend, int divisor) {
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == 0) {
            return 0;
        }
        int sign = 1;
        if (dividend < 0) {
            dividend = -dividend;
            sign = -1;
        }
        if (divisor < 0) {
            divisor = -divisor;
            sign = -sign;
        }
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        long res = 0;
        while (a >= b) {
            long tmp = b;
            b = a % b;
            a = tmp;
            res += sign;
        }
        if (b > 0) {
            res += sign;
        }
        return (int) res;
    }
}"
CodeGen,avatar,Python,Java,codeforces_581_B.java,"public class codeforces_581_B {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int[] ans = new int[nums.length - k + 1];
        int mx = nums[0];
        for (int i = 0; i < nums.length - k + 1; i++) {
            ans[i] = Math.max(0, mx - nums[i]);
            if (nums[i] > mx) {
                mx = nums[i];
            }
        }
        return ans;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int[] ans = maxSlidingWindow(arr, n);
        for (int i = 0; i < n; i++) {
            System.out.print(ans[i] + "" "");
        }
    }
    public static int[] maxSlidingWindow(int[] nums, int n) {
        int[] ans = new int[n];
        int mx = nums[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            ans[i] = Math.max(0, mx - nums[i] + 1);
            if (nums[i] > mx) {
                mx = nums[i];
            }
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC122_D.java,"public class atcoder_ABC122_D {
    public int findSubstring(String s, String[] words) {
        int n = s.length();
        int m = words.length;
        int[] count = new int[m];
        int[] memo = new int[n + 1];
        for (int i = 0; i < m; i++) {
            count[i] = words[i].length();
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (count[j] > 0 && s.charAt(i) == words[j].charAt(count[j] - 1)) {
                    count[j]--;
                }
            }
            memo[i + 1] = memo[i] + (count[0] == 0? 1 : 0);
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (count[j] == 0) {
                    count[j] = count[j + 1];
                }
            }
            ans += memo[i + 1] - memo[i];
        }
        return ans;
    }
}","public class Main {
    public int findSubstring(String s, String[] words) {
        int n = s.length();
        int m = words.length;
        int[] count = new int[m];
        int[] memo = new int[n + 1];
        for (int i = 0; i < m; i++) {
            count[i] = words[i].length();
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (count[j] > 0 && s.charAt(i) == words[j].charAt(count[j] - 1)) {
                    count[j]--;
                }
            }
            memo[i + 1] = memo[i] + (count[0] == 0? 1 : 0);
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (count[j] == 0) {
                    count[j] = count[j + 1];
                }
            }
            ans += memo[i + 1] - memo[i];
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,codeforces_678_A.java,"public class codeforces_678_A {
    public int divide(int dividend, int divisor) {
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        int sign = (dividend < 0) ^ (divisor < 0)? -1 : 1;
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        long res = 0;
        while (a >= b) {
            long t = b;
            b = a % b;
            a = t;
            res += 1;
        }
        return (int) (sign * res);
    }
}","public class Main {
    public int divide(int dividend, int divisor) {
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        int sign = (dividend < 0) ^ (divisor < 0)? -1 : 1;
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        long res = 0;
        while (a >= b) {
            long t = b;
            b = a % b;
            a = t;
            res += 1;
        }
        return (int) (sign * res);
    }
}"
CodeGen,avatar,Python,Java,codeforces_134_A.java,"import java.util.*;
import java.lang.*;
import java.io.*;

public class codeforces_134_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] w = new int[n];
        for(int w_i=0; w_i < n; w_i++){
            w[w_i] = in.nextInt();
        }
        int x = in.nextInt();
        int[] d = new int[n];
        for(int i=0; i < n; i++){
            if(x - w[i] == 0){
                d[i] = 1;
            }
        }
        int count = 0;
        for(int i=0; i < n; i++){
            if(d[i] == 1){
                count++;
            }
        }
        System.out.println(count);
        for(int i=0; i < n; i++){
            if(d[i] == 1){
                System.out.print(i+1);
            }
        }
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] w = new int[n];
        for(int w_i=0; w_i < n; w_i++){
            w[w_i] = in.nextInt();
        }
        int x = in.nextInt();
        int[] d = new int[n];
        for(int i=0; i < n; i++){
            if(x - w[i] == 0){
                d[i] = 1;
            }
        }
        int count = 0;
        for(int i=0; i < n; i++){
            if(d[i] == 1){
                count++;
            }
        }
        System.out.println(count);
        for(int i=0; i < n; i++){
            if(d[i] == 1){
                System.out.print(i+1);
            }
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_673_A.java,"public class codeforces_673_A {
    public int maxRotateFunction(int[] A) {
        int n = A.length;
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += A[i];
        }
        if (sum > 15) return 15;
        int max = 0;
        for (int i = 0; i < n; i++) {
            if (A[i] > max) max = A[i];
        }
        if (max == 90 || max + 15 >= 90) return 90;
        int min = 0;
        for (int i = 0; i < n; i++) {
            if (A[i] < min) min = A[i];
        }
        int sum2 = 0;
        for (int i = 0; i < n; i++) {
            sum2 += A[i];
        }
        if (sum2 - min > 15) return 15;
        int max2 = 0;
        for (int i = 0; i < n; i++) {
            if (A[i] > max2) max2 = A[i];
        }
        return max2 + 15;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        String[] nums = scanner.nextLine().split("" "");
        int[] arr = new int[n];
        
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(nums[i]);
        }
        System.out.println(maxRotateFunction(arr));
    }
    public static int maxRotateFunction(int[] A) {
        int n = A.length;
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += A[i];
        }
        if (sum > 15) return 15;
        int max = 0;
        for (int i = 0; i < n; i++) {
            if (A[i] > max) max = A[i];
        }
        if (max == 90 || max + 15 >= 90) return 90;
        int min = 0;
        for (int i = 0; i < n; i++) {
            if (A[i] < min) min = A[i];
        }
        int sum2 = 0;
        for (int i = 0; i < n; i++) {
            sum2 += A[i];
        }
        if (sum2 - min > 15) return 15;
        int max2 = 0;
        for (int i = 0; i < n; i++) {
            if (A[i] > max2) max2 = A[i];
        }
        return max2 + 15;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC089_C.java,"import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
import java.awt.Point;

import static java.lang.Math.*;

public class atcoder_ABC089_C {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int T = Integer.parseInt(br.readLine());
        for(int t = 0; t < T; t++) {
            int N = Integer.parseInt(br.readLine());
            String[] S = br.readLine().split("" "");
            int[] arr = new int[N];
            for(int i = 0; i < N; i++) {
                arr[i] = Integer.parseInt(S[i]);
            }
            int ans = 0;
            for(int i = 0; i < N; i++) {
                for(int j = i + 1; j < N; j++) {
                    for(int k = j + 1; k < N; k++) {
                        ans += arr[i] * arr[j] * arr[k];
                    }
                }
            }
            bw.write(ans + ""\n"");
        }
        bw.close();
    }
}","import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
import java.awt.Point;

import static java.lang.Math.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int T = Integer.parseInt(br.readLine());
        for(int t = 0; t < T; t++) {
            int N = Integer.parseInt(br.readLine());
            String[] S = br.readLine().split("" "");
            int[] arr = new int[N];
            for(int i = 0; i < N; i++) {
                arr[i] = Integer.parseInt(S[i]);
            }
            int ans = 0;
            for(int i = 0; i < N; i++) {
                for(int j = i + 1; j < N; j++) {
                    for(int k = j + 1; k < N; k++) {
                        ans += arr[i] * arr[j] * arr[k];
                    }
                }
            }
            bw.write(ans + ""\n"");
        }
        bw.close();
    }
}"
CodeGen,avatar,Python,Java,codeforces_59_A.java,"public class codeforces_59_A {
    public String convertToTitle(String s) {
        int cu = 0;
        int cl = 0;
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') {
                sb.append(s.charAt(i));
                cl++;
            } else {
                sb.append(s.charAt(i));
                cu++;
            }
        }
        if (cu > cl) {
            return sb.toString().toUpperCase();
        } else {
            return sb.toString().toLowerCase();
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String txt = scanner.nextLine();
        System.out.println(convertToTitle(txt));
    }
    public static String convertToTitle(String s) {
        int cu = 0;
        int cl = 0;
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') {
                sb.append(s.charAt(i));
                cl++;
            } else {
                sb.append(s.charAt(i));
                cu++;
            }
        }
        if (cu > cl) {
            return sb.toString().toUpperCase();
        } else {
            return sb.toString().toLowerCase();
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_624_B.java,"import java.util.Scanner;
import java.util.List;
import java.util.Arrays;
import java.util.Collections;
import java.util.stream.Collectors;

public class codeforces_624_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        List<Integer> a = Arrays.stream(in.nextLine().split("" ""))
               .map(Integer::parseInt)
               .collect(Collectors.toList());
        Collections.sort(a, Collections.reverseOrder());
        int ans = 0;
        int pre = Integer.MAX_VALUE;
        for (int j = 0; j < n; j++) {
            ans += Math.min(pre - 1, Math.min(pre - 1, a.get(j)));
            pre = Math.max(0, Math.min(pre - 1, a.get(j)));
        }
        System.out.println(ans);
    }
}","import java.util.Scanner;
import java.util.List;
import java.util.Arrays;
import java.util.Collections;
import java.util.stream.Collectors;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        in.nextLine();
        List<Integer> a = Arrays.stream(in.nextLine().split("" ""))
               .map(Integer::parseInt)
               .collect(Collectors.toList());
        Collections.sort(a, Collections.reverseOrder());
        int ans = 0;
        int pre = Integer.MAX_VALUE;
        for (int j = 0; j < n; j++) {
            ans += Math.min(pre - 1, Math.min(pre - 1, a.get(j)));
            pre = Math.max(0, Math.min(pre - 1, a.get(j)));
        }
        System.out.println(ans);
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC004_D.java,"public class atcoder_AGC004_D {
    public int cutOffTree(int[] height, int k) {
        int n = height.length;
        int[] links = new int[n];
        for (int i = 0; i < n; i++) {
            if (height[i]!= 0) {
                links[i] = i;
            }
        }
        int height_from_leaf = 0;
        int cut_count = 0;
        for (int i = 0; i < n; i++) {
            if (links[i] == 0) continue;
            int hgt = 0;
            int cut = 0;
            for (int j = 0; j < n; j++) {
                if (links[j] == i) {
                    hgt++;
                }
                if (links[j] == 0) {
                    cut++;
                }
            }
            height_from_leaf = Math.max(height_from_leaf, hgt);
            cut_count += cut;
        }
        height_from_leaf++;
        if (k!= 0 && height_from_leaf == k) {
            height_from_leaf = 0;
            cut_count++;
        }
        return height_from_leaf + cut_count;
    }
}","public class Main {
    public int cutOffTree(int[] height, int k) {
        int n = height.length;
        int[] links = new int[n];
        for (int i = 0; i < n; i++) {
            if (height[i]!= 0) {
                links[i] = i;
            }
        }
        int height_from_leaf = 0;
        int cut_count = 0;
        for (int i = 0; i < n; i++) {
            if (links[i] == 0) continue;
            int hgt = 0;
            int cut = 0;
            for (int j = 0; j < n; j++) {
                if (links[j] == i) {
                    hgt++;
                }
                if (links[j] == 0) {
                    cut++;
                }
            }
            height_from_leaf = Math.max(height_from_leaf, hgt);
            cut_count += cut;
        }
        height_from_leaf++;
        if (k!= 0 && height_from_leaf == k) {
            height_from_leaf = 0;
            cut_count++;
        }
        return height_from_leaf + cut_count;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC125_B.java,"public class atcoder_ABC125_B {
    public int findMinDifference(String time1, String time2) {
        int[] time1Arr = new int[time1.length()];
        int[] time2Arr = new int[time2.length()];
        for (int i = 0; i < time1.length(); i++) {
            time1Arr[i] = Integer.parseInt(time1.charAt(i) + """");
        }
        for (int i = 0; i < time2.length(); i++) {
            time2Arr[i] = Integer.parseInt(time2.charAt(i) + """");
        }
        int[] diff = new int[time1Arr.length];
        for (int i = 0; i < time1Arr.length; i++) {
            diff[i] = time1Arr[i] - time2Arr[i];
        }
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < diff.length; i++) {
            if (diff[i] < min) {
                min = diff[i];
            }
        }
        return min;
    }
}","public class Main {
    public int findMinDifference(String time1, String time2) {
        int[] time1Arr = new int[time1.length()];
        int[] time2Arr = new int[time2.length()];
        for (int i = 0; i < time1.length(); i++) {
            time1Arr[i] = Integer.parseInt(time1.charAt(i) + """");
        }
        for (int i = 0; i < time2.length(); i++) {
            time2Arr[i] = Integer.parseInt(time2.charAt(i) + """");
        }
        int[] diff = new int[time1Arr.length];
        for (int i = 0; i < time1Arr.length; i++) {
            diff[i] = time1Arr[i] - time2Arr[i];
        }
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < diff.length; i++) {
            if (diff[i] < min) {
                min = diff[i];
            }
        }
        return min;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC118_C.java,"public class atcoder_ABC118_C {
    public int gcd(int a, int b) {
        if (a == 0) return b;
        if (b == 0) return a;
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (a!= b) {
            if (a > b) {
                a -= b;
            } else {
                b -= a;
            }
        }
        return a;
    }
}","public class Main {
    public int gcd(int a, int b) {
        if (a == 0) return b;
        if (b == 0) return a;
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (a!= b) {
            if (a > b) {
                a -= b;
            } else {
                b -= a;
            }
        }
        return a;
    }
}"
CodeGen,avatar,Python,Java,codeforces_629_B.java,"import java.util.*;
import java.io.*;

public class codeforces_629_B {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        int[] m = new int[N];
        int[] f = new int[N];
        for (int i = 0; i < N; i++) {
            String[] input = br.readLine().split("" "");
            m[i] = Integer.parseInt(input[0]);
            f[i] = Integer.parseInt(input[1]);
        }
        int a = 0;
        int b = 0;
        int c = 0;
        for (int i = 0; i < N; i++) {
            a += m[i];
            b += f[i];
            if (a < b) {
                c = Math.min(a, b);
            }
        }
        System.out.println(c);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        int[] m = new int[N];
        int[] f = new int[N];
        for (int i = 0; i < N; i++) {
            String[] input = br.readLine().split("" "");
            m[i] = Integer.parseInt(input[0]);
            f[i] = Integer.parseInt(input[1]);
        }
        int a = 0;
        int b = 0;
        int c = 0;
        for (int i = 0; i < N; i++) {
            a += m[i];
            b += f[i];
            if (a < b) {
                c = Math.min(a, b);
            }
        }
        System.out.println(c);
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC002_A.java,"import java.util.*;
import java.io.*;

public class atcoder_AGC002_A {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String s;
        int a = Integer.parseInt(br.readLine());
        int b = Integer.parseInt(br.readLine());
        if (a > 0) {
            System.out.println(""Positive"");
        } else if (a <= 0 && b >= 0) {
            System.out.println(""Zero"");
        } else {
            if ((a + b) % 2 == 0) {
                System.out.println(""Negative"");
            } else {
                System.out.println(""Positive"");
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        if (a > 0) {
            System.out.println(""Positive"");
        } else if (a <= 0 && b >= 0) {
            System.out.println(""Zero"");
        } else {
            if ((a + b) % 2 == 0) {
                System.out.println(""Negative"");
            } else {
                System.out.println(""Positive"");
            }
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC038_A.java,"import java.util.*;
import java.io.*;

public class atcoder_AGC038_A {
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] H = br.readLine().split("" "");
        String[] W = br.readLine().split("" "");
        String[] A = br.readLine().split("" "");
        String[] B = br.readLine().split("" "");
        int H1 = Integer.parseInt(H[0]);
        int W1 = Integer.parseInt(W[0]);
        int A1 = Integer.parseInt(A[0]);
        int B1 = Integer.parseInt(B[0]);
        String[][] answer = new String[H1][W1];
        for (int i = 0; i < H1; i++) {
            for (int j = 0; j < W1; j++) {
                if (i < B1) {
                    if (j < A1) {
                        answer[i][j] = ""0"";
                    } else {
                        answer[i][j] = ""1"";
                    }
                } else {
                    if (j < A1) {
                        answer[i][j] = ""1"";
                    } else {
                        answer[i][j] = ""0"";
                    }
                }
            }
        }
        for (int i = 0; i < H1; i++) {
            System.out.println(String.join("""", answer[i]));
        }
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] H = br.readLine().split("" "");
        String[] W = br.readLine().split("" "");
        String[] A = br.readLine().split("" "");
        String[] B = br.readLine().split("" "");
        int H1 = Integer.parseInt(H[0]);
        int W1 = Integer.parseInt(W[0]);
        int A1 = Integer.parseInt(A[0]);
        int B1 = Integer.parseInt(B[0]);
        String[][] answer = new String[H1][W1];
        for (int i = 0; i < H1; i++) {
            for (int j = 0; j < W1; j++) {
                if (i < B1) {
                    if (j < A1) {
                        answer[i][j] = ""0"";
                    } else {
                        answer[i][j] = ""1"";
                    }
                } else {
                    if (j < A1) {
                        answer[i][j] = ""1"";
                    } else {
                        answer[i][j] = ""0"";
                    }
                }
            }
        }
        for (int i = 0; i < H1; i++) {
            System.out.println(String.join("""", answer[i]));
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC123_C.java,"public class atcoder_ABC123_C {
    public int divide(int dividend, int divisor) {
        if (dividend == 0) return 0;
        if (divisor == 0) return Integer.MAX_VALUE;
        if (dividend == Integer.MIN_VALUE && divisor == -1) return Integer.MAX_VALUE;
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        dividend = Math.abs ( dividend );
        divisor = Math.abs ( divisor );
        int res = 0;
        while (dividend >= divisor) {
            int tmp = divisor;
            int count = 0;
            while (dividend >= tmp) {
                dividend -= tmp;
                count++;
                tmp = tmp << 1;
            }
            res += count;
        }
        return isNegative? -res : res;
    }
}","public class Main {
    public int divide(int dividend, int divisor) {
        if (dividend == 0) return 0;
        if (divisor == 0) return Integer.MAX_VALUE;
        if (dividend == Integer.MIN_VALUE && divisor == -1) return Integer.MAX_VALUE;
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        dividend = Math.abs ( dividend );
        divisor = Math.abs ( divisor );
        int res = 0;
        while (dividend >= divisor) {
            int tmp = divisor;
            int count = 0;
            while (dividend >= tmp) {
                dividend -= tmp;
                count++;
                tmp = tmp << 1;
            }
            res += count;
        }
        return isNegative? -res : res;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC174_E.java,"public class atcoder_ABC174_E {
    public int findKthLargest(int[] nums, int k) {
        int n = nums.length;
        int[] heap = new int[n];
        for (int i = 0; i < n; i++) {
            heap[i] = nums[i];
        }
        for (int i = n / 2; i >= 0; i--) {
            siftDown(heap, i, n - 1);
        }
        for (int i = n - 1; i > 0; i--) {
            int temp = heap[0];
            heap[0] = heap[i];
            heap[i] = temp;
            siftDown(heap, 0, i - 1);
        }
        return heap[k - 1];
    }
    private void siftDown(int[] heap, int i, int n) {
        while (i * 2 + 1 < n) {
            int j = i * 2 + 1;
            if (j + 1 < n && heap[j] < heap[j + 1]) {
                j++;
            }
            if (heap[i] >= heap[j]) {
                break;
            }
            int temp = heap[i];
            heap[i] = heap[j];
            heap[j] = temp;
            i = j;
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        System.out.println(findKthLargest(arr, k));
    }
    public static int findKthLargest(int[] nums, int k) {
        int n = nums.length;
        int[] heap = new int[n];
        for (int i = 0; i < n; i++) {
            heap[i] = nums[i];
        }
        for (int i = n / 2; i >= 0; i--) {
            siftDown(heap, i, n - 1);
        }
        for (int i = n - 1; i > 0; i--) {
            int temp = heap[0];
            heap[0] = heap[i];
            heap[i] = temp;
            siftDown(heap, 0, i - 1);
        }
        return heap[k - 1];
    }
    private static void siftDown(int[] heap, int i, int n) {
        while (i * 2 + 1 < n) {
            int j = i * 2 + 1;
            if (j + 1 < n && heap[j] < heap[j + 1]) {
                j++;
            }
            if (heap[i] >= heap[j]) {
                break;
            }
            int temp = heap[i];
            heap[i] = heap[j];
            heap[j] = temp;
            i = j;
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_106_B.java,"public class codeforces_106_B {
    public int[] findShortestSubarray(int[] A, int[] B) {
        int[] res = new int[2];
        int min = Integer.MAX_VALUE;
        int i = 0;
        int j = 0;
        for (int k = 0; k < A.length; k++) {
            if (A[k] < B[j]) {
                min = Math.min(min, A[k]);
                i = k;
            } else {
                j++;
            }
        }
        res[0] = i;
        res[1] = j;
        return res;
    }
}","public class Main {
    public int[] findShortestSubarray(int[] A, int[] B) {
        int[] res = new int[2];
        int min = Integer.MAX_VALUE;
        int i = 0;
        int j = 0;
        for (int k = 0; k < A.length; k++) {
            if (A[k] < B[j]) {
                min = Math.min(min, A[k]);
                i = k;
            } else {
                j++;
            }
        }
        res[0] = i;
        res[1] = j;
        return res;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC169_D.java,"import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.regex.*;

public class atcoder_ABC169_D {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        if (n == 1) {
            System.out.println(0);
            return;
        }
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] fac = new int[n];
        for (int i = 0; i < n; i++) {
            fac[i] = 1;
        }
        for (int i = 2; i < n; i++) {
            if (a[i] >= i) {
                fac[i] = fac[i] + fac[i - 1];
                a[i] -= i;
            }
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            int x = fac[i];
            for (int j = 1; j < 99999999; j++) {
                if (x >= j) {
                    x -= j;
                    ans += 1;
                } else {
                    break;
                }
            }
        }
        System.out.println(ans);
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.regex.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        if (n == 1) {
            System.out.println(0);
            return;
        }
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] fac = new int[n];
        for (int i = 0; i < n; i++) {
            fac[i] = 1;
        }
        for (int i = 2; i < n; i++) {
            if (a[i] >= i) {
                fac[i] = fac[i] + fac[i - 1];
                a[i] -= i;
            }
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            int x = fac[i];
            for (int j = 1; j < 99999999; j++) {
                if (x >= j) {
                    x -= j;
                    ans += 1;
                } else {
                    break;
                }
            }
        }
        System.out.println(ans);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC132_F.java,"public class atcoder_ABC132_F {
    public int findKthNumber(int m, int n, int k) {
        int[] dp = new int[k + 1];
        dp[0] = 1;
        for (int i = 1; i <= k; i++) {
            int tmp = 0;
            for (int j = n - 1; j >= 0; j--) {
                tmp += dp[i - 1] % m;
                tmp %= m;
                dp[i] = (dp[i] + dp[i - 1] % m) % m;
            }
        }
        return dp[k];
    }
}","public class Main {
    public int findKthNumber(int m, int n, int k) {
        int[] dp = new int[k + 1];
        dp[0] = 1;
        for (int i = 1; i <= k; i++) {
            int tmp = 0;
            for (int j = n - 1; j >= 0; j--) {
                tmp += dp[i - 1] % m;
                tmp %= m;
                dp[i] = (dp[i] + dp[i - 1] % m) % m;
            }
        }
        return dp[k];
    }
}"
CodeGen,avatar,Python,Java,codeforces_617_B.java,"public class codeforces_617_B {
    public int hammingWeight(int n) {
        int count = 0;
        while (n!= 0) {
            count += n & 1;
            n >>>= 1;
        }
        return count;
    }
}","public class Main {
    public int hammingWeight(int n) {
        int count = 0;
        while (n!= 0) {
            count += n & 1;
            n >>>= 1;
        }
        return count;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC166_C.java,"public class atcoder_ABC166_C {
    public int pathSum(int[] nums) {
        int n = nums.length;
        if (n == 0) return 0;
        int[] p = new int[n + 1];
        int[] h = new int[n + 1];
        for (int i = 0; i < n; i++) {
            p[i] = i;
            h[i] = nums[i];
        }
        p[n] = 0;
        h[n] = 0;
        int c = 0;
        for (int i = 0; i < n; i++) {
            int f = 0;
            for (int j = p[i]; j < n; j++) {
                if (h[j] <= h[i]) {
                    f = 1;
                    break;
                }
            }
            if (f == 0) {
                c++;
            }
            for (int j = p[i]; j < n; j++) {
                p[j] = i;
                h[j] = h[i];
            }
        }
        return c;
    }
}","public class Main {
    public int pathSum(int[] nums) {
        int n = nums.length;
        if (n == 0) return 0;
        int[] p = new int[n + 1];
        int[] h = new int[n + 1];
        for (int i = 0; i < n; i++) {
            p[i] = i;
            h[i] = nums[i];
        }
        p[n] = 0;
        h[n] = 0;
        int c = 0;
        for (int i = 0; i < n; i++) {
            int f = 0;
            for (int j = p[i]; j < n; j++) {
                if (h[j] <= h[i]) {
                    f = 1;
                    break;
                }
            }
            if (f == 0) {
                c++;
            }
            for (int j = p[i]; j < n; j++) {
                p[j] = i;
                h[j] = h[i];
            }
        }
        return c;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC137_D.java,"import java.util.Scanner;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Comparator;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class atcoder_ABC137_D {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        List<Integer> x = new ArrayList<Integer>();
        List<Integer> y = new ArrayList<Integer>();
        for(int i = 0; i < n; i++) {
            int day = in.nextInt();
            int salary = in.nextInt();
            x.add(day);
            y.add(salary);
        }
        Collections.sort(x, new Comparator<Integer>() {
            @Override
            public int compare(Integer o1, Integer o2) {
                return o1 - o2;
            }
        });
        for(int i = 0; i < m; i++) {
            int d = in.nextInt();
            int s = in.nextInt();
            if(d > 0) {
                y.add(s);
            } else {
                y.remove(y.size() - 1);
            }
        }
        int sum = 0;
        for(int i = 0; i < y.size(); i++) {
            sum += y.get(i);
        }
        System.out.println(sum);
    }
}","import java.util.Scanner;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Comparator;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        List<Integer> x = new ArrayList<Integer>();
        List<Integer> y = new ArrayList<Integer>();
        for(int i = 0; i < n; i++) {
            int day = in.nextInt();
            int salary = in.nextInt();
            x.add(day);
            y.add(salary);
        }
        Collections.sort(x, new Comparator<Integer>() {
            @Override
            public int compare(Integer o1, Integer o2) {
                return o1 - o2;
            }
        });
        for(int i = 0; i < m; i++) {
            int d = in.nextInt();
            int s = in.nextInt();
            if(d > 0) {
                y.add(s);
            } else {
                y.remove(y.size() - 1);
            }
        }
        int sum = 0;
        for(int i = 0; i < y.size(); i++) {
            sum += y.get(i);
        }
        System.out.println(sum);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC134_E.java,"public class atcoder_ABC134_E {
    public int[] searchRange(int[] A, int target) {
        int[] ans = new int[2];
        int low = 0, high = A.length - 1;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (A[mid] < target) {
                low = mid + 1;
            } else if (A[mid] > target) {
                high = mid - 1;
            } else {
                ans[0] = mid;
                ans[1] = mid;
                break;
            }
        }
        return ans;
    }
}","public class Main {
    public int[] searchRange(int[] A, int target) {
        int[] ans = new int[2];
        int low = 0, high = A.length - 1;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (A[mid] < target) {
                low = mid + 1;
            } else if (A[mid] > target) {
                high = mid - 1;
            } else {
                ans[0] = mid;
                ans[1] = mid;
                break;
            }
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC143_A.java,"public class atcoder_ABC143_A {
    public int[] twoSum(int[] numbers, int target) {
        int[] result = new int[2];
        for (int i = 0; i < numbers.length; i++) {
            for (int j = i + 1; j < numbers.length; j++) {
                if (numbers[i] + numbers[j] == target) {
                    result[0] = i;
                    result[1] = j;
                    return result;
                }
            }
        }
        return result;
    }
}","import java.util.*;

public class Main {
    public int[] twoSum(int[] numbers, int target) {
        int[] result = new int[2];
        for (int i = 0; i < numbers.length; i++) {
            for (int j = i + 1; j < numbers.length; j++) {
                if (numbers[i] + numbers[j] == target) {
                    result[0] = i;
                    result[1] = j;
                    return result;
                }
            }
        }
        return result;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC133_B.java,"public class atcoder_ABC133_B {
    public int numberOfBoomerangs(int[][] points) {
        int n = points.length;
        int d = points[0].length;
        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int tmp = 0;
                for (int k = 0; k < d; k++) {
                    tmp += (points[i][k] - points[j][k]) * (points[i][k] - points[j][k]);
                }
                if (tmp == 0) {
                    count++;
                }
            }
        }
        return count;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int d = scanner.nextInt();
        
        int[][] points = new int[n][d];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < d; j++) {
                points[i][j] = scanner.nextInt();
            }
        }
        System.out.println(numberOfBoomerangs(points));
    }
    public static int numberOfBoomerangs(int[][] points) {
        int n = points.length;
        int d = points[0].length;
        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                double tmp = 0.0;
                for (int k = 0; k < d; k++) {
                    tmp += Math.pow(points[i][k] - points[j][k], 2);
                }
                if (tmp == 0) {
                    count++;
                }
            }
        }
        return count;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC149_B.java,"public class atcoder_ABC149_B {
    public int[] findContentChildren(int[] g, int[] s) {
        int[] result = new int[2];
        int[] leftOver = new int[g.length];
        int[] takahashi = new int[g.length];
        int max = 0;
        for (int i = 0; i < g.length; i++) {
            leftOver[i] = g[i] - s[i];
            takahashi[i] = Math.max(0, leftOver[i]);
            max = Math.max(max, takahashi[i]);
        }
        result[0] = max;
        result[1] = takahashi[0] + (takahashi[1] > 0? 1 : 0);
        return result;
    }
}","public class Main {
    public int[] findContentChildren(int[] g, int[] s) {
        int[] result = new int[2];
        int[] leftOver = new int[g.length];
        int[] takahashi = new int[g.length];
        int max = 0;
        for (int i = 0; i < g.length; i++) {
            leftOver[i] = g[i] - s[i];
            takahashi[i] = Math.max(0, leftOver[i]);
            max = Math.max(max, takahashi[i]);
        }
        result[0] = max;
        result[1] = takahashi[0] + (takahashi[1] > 0? 1 : 0);
        return result;
    }
}"
CodeGen,avatar,Python,Java,codeforces_622_A.java,"public class codeforces_622_A {
    public int findLengthOfLongestSubstring(String s) {
        int[] map = new int[128];
        int max = 0;
        int start = 0;
        for (int i = 0; i < s.length(); i++) {
            if (map[s.charAt(i)] == 0) {
                map[s.charAt(i)] = i + 1;
            } else {
                max = Math.max(max, i - start);
                start = map[s.charAt(i)] + 1;
            }
        }
        max = Math.max(max, s.length() - start);
        return max;
    }
}","public class Main {
    public int findLengthOfLongestSubstring(String s) {
        int[] map = new int[128];
        int max = 0;
        int start = 0;
        for (int i = 0; i < s.length(); i++) {
            if (map[s.charAt(i)] == 0) {
                map[s.charAt(i)] = i + 1;
            } else {
                max = Math.max(max, i - start);
                start = map[s.charAt(i)] + 1;
            }
        }
        max = Math.max(max, s.length() - start);
        return max;
    }
}"
CodeGen,avatar,Python,Java,codeforces_607_A.java,"public class codeforces_607_A {
    public int findMaxForm(String[] strs, int m, int n) {
        int[][] dp = new int[m + 1][n + 1];
        for (int i = 0; i < strs.length; i++) {
            String[] s = strs[i].split("" "");
            int a = Integer.parseInt(s[0]);
            int b = Integer.parseInt(s[1]);
            if (a > 0) {
                dp[a][b] = 1;
            }
        }
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (i == 0) {
                    dp[i][j] = 1;
                } else if (j >= i) {
                    dp[i][j] = dp[i - 1][j];
                } else {
                    dp[i][j] = dp[i - 1][j] + 1;
                }
                if (dp[i][j] > dp[i][j - 1]) {
                    dp[i][j] = dp[i][j - 1];
                }
            }
        }
        return dp[m][n];
    }
}","public class Main {
    public int findMaxForm(String[] strs, int m, int n) {
        int[][] dp = new int[m + 1][n + 1];
        for (int i = 0; i < strs.length; i++) {
            String[] s = strs[i].split("" "");
            int a = Integer.parseInt(s[0]);
            int b = Integer.parseInt(s[1]);
            if (a > 0) {
                dp[a][b] = 1;
            }
        }
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (i == 0) {
                    dp[i][j] = 1;
                } else if (j >= i) {
                    dp[i][j] = dp[i - 1][j];
                } else {
                    dp[i][j] = dp[i - 1][j] + 1;
                }
                if (dp[i][j] > dp[i][j - 1]) {
                    dp[i][j] = dp[i][j - 1];
                }
            }
        }
        return dp[m][n];
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC125_C.java,"public class atcoder_ABC125_C {
    public int[] ruiseki(int[] A) {
        int[] left = new int[A.length + 1];
        int[] right = new int[A.length + 1];
        left[0] = 0;
        right[0] = 0;
        for (int i = 0; i < A.length; i++) {
            left[i + 1] = left[i] + A[i];
            right[i + 1] = right[i] + A[i];
        }
        int[] result = new int[A.length];
        for (int i = 0; i < A.length; i++) {
            result[i] = gcd(left[i], right[i + 1]);
        }
        return result;
    }
    public int gcd(int a, int b) {
        if (b == 0) return a;
        return gcd(b, a % b);
    }
}","public class Main {
    public int[] ruiseki(int[] A) {
        int[] left = new int[A.length + 1];
        int[] right = new int[A.length + 1];
        left[0] = 0;
        right[0] = 0;
        for (int i = 0; i < A.length; i++) {
            left[i + 1] = left[i] + A[i];
            right[i + 1] = right[i] + A[i];
        }
        int[] result = new int[A.length];
        for (int i = 0; i < A.length; i++) {
            result[i] = gcd(left[i], right[i + 1]);
        }
        return result;
    }
    public int gcd(int a, int b) {
        if (b == 0) return a;
        return gcd(b, a % b);
    }
}"
CodeGen,avatar,Python,Java,codeforces_514_A.java,"public class codeforces_514_A {
    public int atoi(String str) {
        int i = 0;
        int len = str.length();
        int sign = 1;
        if (len == 0) return 0;
        if (str.charAt(0) == '+') {
            i++;
        } else if (str.charAt(0) == '-') {
            sign = -1;
            i++;
        }
        int num = 0;
        for (; i < len; i++) {
            char c = str.charAt(i);
            if (c >= '0' && c <= '9') {
                num = num * 10 + c - '0';
            } else {
                break;
            }
        }
        return sign * num;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String ip = scanner.nextLine();
        System.out.println(atoi(ip));
    }
    public static long atoi(String str) {
        int i = 0;
        int len = str.length();
        long sign = 1;
        if (len == 0) return 0;
        if (str.charAt(0) == '+') {
            i++;
        } else if (str.charAt(0) == '-') {
            sign = -1;
            i++;
        }
        long num = 0;
        for (; i < len; i++) {
            char c = str.charAt(i);
            if (c >= '0' && c <= '9') {
                num = num * 10 + c - '0';
            } else {
                break;
            }
        }
        return sign * num;
    }
}"
CodeGen,avatar,Python,Java,codeforces_356_A.java,"public class codeforces_356_A {
    public int[] nextGreaterElements(int[] nums) {
        int[] res = new int[nums.length];
        int[] comp = new int[nums.length];
        int[] out = new int[nums.length];
        int n = nums.length;
        int m = nums.length;
        comp[0] = 2;
        for (int i = 1; i < n; i++) {
            comp[i] = comp[i - 1] + 1;
        }
        for (int i = 0; i < m; i++) {
            out[i] = 0;
        }
        for (int i = 0; i < n; i++) {
            int t = comp[i];
            while (t <= i) {
                if (out[t - 1] == 0 && t!= nums[i]) {
                    out[t - 1] = nums[i];
                }
                t = comp[t - 1] + 1;
            }
            res[i] = out[i];
        }
        return res;
    }
}","public class Main {
    public int[] nextGreaterElements(int[] nums) {
        int[] res = new int[nums.length];
        int[] comp = new int[nums.length];
        int[] out = new int[nums.length];
        int n = nums.length;
        int m = nums.length;
        comp[0] = 2;
        for (int i = 1; i < n; i++) {
            comp[i] = comp[i - 1] + 1;
        }
        for (int i = 0; i < m; i++) {
            out[i] = 0;
        }
        for (int i = 0; i < n; i++) {
            int t = comp[i];
            while (t <= i) {
                if (out[t - 1] == 0 && t!= nums[i]) {
                    out[t - 1] = nums[i];
                }
                t = comp[t - 1] + 1;
            }
            res[i] = out[i];
        }
        return res;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC124_C.java,"public class atcoder_ABC124_C {
    public int findMinDifference(String[] time) {
        int[] even = new int[2];
        int[] odd = new int[2];
        for (int i = 0; i < time.length; i++) {
            if (time[i].charAt(0) == '0') {
                even[0]++;
            } else {
                odd[1]++;
            }
        }
        int min = time.length - (even[0] + odd[1]);
        return min;
    }
}","public class Main {
    public int findMinDifference(String[] time) {
        int[] even = new int[2];
        int[] odd = new int[2];
        for (int i = 0; i < time.length; i++) {
            if (time[i].charAt(0) == '0') {
                even[0]++;
            } else {
                odd[1]++;
            }
        }
        int min = time.length - (even[0] + odd[1]);
        return min;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC114_C.java,"public class atcoder_ABC114_C {
    public int numDecodings(String s) {
        int n = s.length();
        if (n == 0) return 0;
        if (n == 1) return 1;
        int[] dp = new int[n + 1];
        dp[0] = 1;
        dp[1] = 1;
        for (int i = 2; i <= n; i++) {
            int num = Integer.parseInt(s.substring(i - 2, i));
            if (num >= 10) {
                dp[i] = dp[i - 2] + dp[i - 1];
            } else if (num >= 2 && num <= 6) {
                dp[i] = dp[i - 1];
            } else if (num == 7) {
                dp[i] = dp[i - 1];
            } else if (num == 8) {
                dp[i] = dp[i - 1];
            } else if (num == 9) {
                dp[i] = dp[i - 1];
            }
        }
        return dp[n];
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        System.out.println(numDecodings(s));
    }
    public static int numDecodings(String s) {
        int n = s.length();
        if (n == 0) return 0;
        if (n == 1) return 1;
        int[] dp = new int[n + 1];
        dp[0] = 1;
        dp[1] = 1;
        for (int i = 2; i <= n; i++) {
            int num = Integer.parseInt(s.substring(i - 2, i));
            if (num >= 10) {
                dp[i] = dp[i - 2] + dp[i - 1];
            } else if (num >= 2 && num <= 6) {
                dp[i] = dp[i - 1];
            } else if (num == 7) {
                dp[i] = dp[i - 1];
            } else if (num == 8) {
                dp[i] = dp[i - 1];
            } else if (num == 9) {
                dp[i] = dp[i - 1];
            }
        }
        return dp[n];
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC129_E.java,"public class atcoder_ABC129_E {
    public int findMaxForm(String[] strs, int m, int n) {
        int[][] dp = new int[m + 1][n + 1];
        dp[0][0] = 1;
        for (int i = 1; i <= m; i++) {
            dp[i][0] = dp[i - 1][0] * 2;
            dp[i][0] %= 1000000007;
        }
        for (int j = 1; j <= n; j++) {
            dp[0][j] = dp[0][j - 1] * 3;
            dp[0][j] %= 1000000007;
        }
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (strs[i - 1].charAt(j - 1) == '0') {
                    dp[i][j] += dp[i - 1][j];
                    dp[i][j] %= 1000000007;
                    dp[i][j] += dp[i - 1][j - 1] * 3;
                    dp[i][j] %= 1000000007;
                } else {
                    dp[i][j] += dp[i - 1][j - 1] * 2;
                    dp[i][j] %= 1000000007;
                    dp[i][j] += dp[i - 1][j];
                    dp[i][j] %= 1000000007;
                    dp[i][j] += dp[i][j - 1] * 3;
                    dp[i][j] %= 1000000007;
                }
            }
        }
        return (dp[m][n] + dp[m][n - 1]) % 1000000007;
    }
}","public class Main {
    public int findMaxForm(String[] strs, int m, int n) {
        int[][] dp = new int[m + 1][n + 1];
        dp[0][0] = 1;
        for (int i = 1; i <= m; i++) {
            dp[i][0] = dp[i - 1][0] * 2;
            dp[i][0] %= 1000000007;
        }
        for (int j = 1; j <= n; j++) {
            dp[0][j] = dp[0][j - 1] * 3;
            dp[0][j] %= 1000000007;
        }
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (strs[i - 1].charAt(j - 1) == '0') {
                    dp[i][j] += dp[i - 1][j];
                    dp[i][j] %= 1000000007;
                    dp[i][j] += dp[i - 1][j - 1] * 3;
                    dp[i][j] %= 1000000007;
                } else {
                    dp[i][j] += dp[i - 1][j - 1] * 2;
                    dp[i][j] %= 1000000007;
                    dp[i][j] += dp[i - 1][j];
                    dp[i][j] %= 1000000007;
                    dp[i][j] += dp[i][j - 1] * 3;
                    dp[i][j] %= 1000000007;
                }
            }
        }
        return (dp[m][n] + dp[m][n - 1]) % 1000000007;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC170_A.java,"public class atcoder_ABC170_A {
    public int firstMissingPositive(int[] A) {
        int n = A.length;
        for (int i = 0; i < n; i++) {
            if (A[i] > 0 && A[i] <= n && A[A[i] - 1]!= A[i]) {
                int temp = A[i];
                A[i] = A[temp - 1];
                A[temp - 1] = temp;
            }
        }
        for (int i = 0; i < n; i++) {
            if (A[i]!= i + 1) {
                return i + 1;
            }
        }
        return n + 1;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int[] a = new int[10];
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split("" "");
        for (int i = 0; i < input.length; i++) {
            a[i] = Integer.parseInt(input[i]);
        }
        System.out.println(firstMissingPositive(a));
    }
    public static int firstMissingPositive(int[] A) {
        int n = A.length;
        for (int i = 0; i < n; i++) {
            if (A[i] > 0 && A[i] <= n && A[A[i] - 1]!= A[i]) {
                int temp = A[i];
                A[i] = A[temp - 1];
                A[temp - 1] = temp;
            }
        }
        for (int i = 0; i < n; i++) {
            if (A[i]!= i + 1) {
                return i + 1;
            }
        }
        return n + 1;
    }
}"
CodeGen,avatar,Python,Java,codeforces_334_A.java,"public class codeforces_334_A {
    public static void main(String[] args) {
        int n = Integer.parseInt(args[0]);
        int i = 1;
        int j = n * n;
        while (i < j) {
            System.out.println(i + "" "" + j);
            i++;
            j--;
        }
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int i = 1;
        int j = n * n;
        while (i < j) {
            System.out.println(i + "" "" + j);
            i++;
            j--;
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC158_B.java,"import java.util.*;
import java.lang.*;
import java.io.*;

public class atcoder_ABC158_B {
	public static void main ( String [ ] args ) {
		Scanner in = new Scanner ( System.in );
		int mod = 1000000007;
		int N = in.nextInt ( );
		int A = in.nextInt ( );
		int B = in.nextInt ( );
		int ans = 0;
		int rep = N / ( A + B );
		ans += rep * A;
		int res = N - rep * ( A + B );
		ans += Math.min ( res, A );
		System.out.println ( ans );
	}
}","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
		int mod = 1000000007;
        long N = input.nextLong();
        long A = input.nextLong();
        long B = input.nextLong();
		long ans = 0;
		long rep = N / ( A + B );
		ans += rep * A;
		long res = N - rep * ( A + B );
		ans += Math.min ( res, A );
		System.out.println ( ans );
	}
}"
CodeGen,avatar,Python,Java,codeforces_340_A.java,"public class codeforces_340_A {
    public int divide(int dividend, int divisor) {
        if (dividend == 0) {
            return 0;
        }
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        if (isNegative) {
            dividend = -dividend;
            divisor = -divisor;
        }
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        long lcm = G(a, b);
        long result = L(a, b) / lcm;
        if (isNegative) {
            return (int) -result;
        } else {
            return (int) result;
        }
    }
    private long G(long a, long b) {
        while (a % b!= 0) {
            a = b;
            b = a % b;
        }
        return b;
    }
    private long L(long a, long b) {
        return a * b / G(a, b);
    }
}","public class Main {
    public int divide(int dividend, int divisor) {
        if (dividend == 0) {
            return 0;
        }
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        if (isNegative) {
            dividend = -dividend;
            divisor = -divisor;
        }
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        long lcm = G(a, b);
        long result = L(a, b) / lcm;
        if (isNegative) {
            return (int) -result;
        } else {
            return (int) result;
        }
    }
    private long G(long a, long b) {
        while (a % b!= 0) {
            a = b;
            b = a % b;
        }
        return b;
    }
    private long L(long a, long b) {
        return a * b / G(a, b);
    }
}"
CodeGen,avatar,Python,Java,codeforces_32_B.java,"public class codeforces_32_B {
    public String binary ( String s ) {
        String result = """";
        int i = 0;
        while ( i < s.length ( ) ) {
            if ( s.charAt ( i ) == '.' ) {
                result += ""0"";
            } else {
                i++;
                if ( s.charAt ( i ) == '.' ) {
                    result += ""1"";
                } else {
                    result += ""2"";
                }
            }
            i++;
        }
        return result;
    }
}","import java.util.*;

public class Main {
    public static void main ( String [ ] args ) {
        String s = new Scanner ( System.in ).nextLine ( );
        System.out.println ( binary(s) ); 
    }
    public static String binary ( String s ) {
        String result = """";
        int i = 0;
        while ( i < s.length ( ) ) {
            if ( s.charAt ( i ) == '.' ) {
                result += ""0"";
            } else {
                i++;
                if ( s.charAt ( i ) == '.' ) {
                    result += ""1"";
                } else {
                    result += ""2"";
                }
            }
            i++;
        }
        return result;
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC012_A.java,"import java.util.*;
import java.lang.*;
import java.math.*;
import java.io.*;

public class atcoder_AGC012_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] A = new int[n];
        for(int A_i=0; A_i < n; A_i++){
            A[A_i] = in.nextInt();
        }
        A = Arrays.stream(A).sorted().toArray();
        int ans = 0;
        for(int i=0; i < n-2; i++){
            ans += A[i];
        }
        System.out.println(ans);
    }
}","import java.util.*;
import java.lang.*;
import java.math.*;
import java.io.*;

public class Main {
        public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] A = new int[n];
        for(int A_i=0; A_i < n; A_i++){
            A[A_i] = in.nextInt();
        }
        A = Arrays.stream(A).sorted().toArray();
        int ans = 0;
        for(int i=0; i < n-2; i++){
            ans += A[i];
        }
        System.out.println(ans);
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC028_A.java,"public class atcoder_AGC028_A {
    public int findTheDifference(String s, String t) {
        int N = s.length();
        int M = t.length();
        int[] Number_i = new int[N];
        int[] Number_iMN = new int[N];
        for (int i = 0; i < N; i++) {
            Number_i[i] = i;
            Number_iMN[i] = i * M / N;
        }
        int[] Number_j = new int[M];
        int[] Kaburi_j = new int[M];
        for (int j = 0; j < M; j++) {
            Number_j[j] = j;
            Kaburi_j[j] = (int) (Number_iMN[j] * N / M);
        }
        int counter = 0;
        int Flag = 0;
        int Kaburi_Size = M;
        while (counter <= Kaburi_Size - 1) {
            if (s.charAt(Number_i[counter]) == t.charAt(Number_j[counter])) {
                counter++;
            } else {
                Flag = 1;
                break;
            }
        }
        if (Flag == 1) {
            return -1;
        }
        counter = 0;
        int gcd = 0;
        while (counter <= Kaburi_Size - 1) {
            gcd = gcd(Number_iMN[counter], Number_j[counter]);
            Number_i[counter] = Number_i[counter] * gcd / M;
            Number_iMN[counter] = Number_iMN[counter] * gcd / M;
            Number_j[counter] = Number_j[counter] * gcd / M;
            Kaburi_j[counter] = Kaburi_j[counter] * gcd / M;
            counter++;
        }
        int result = 0;
        for (int i = 0; i < N; i++) {
            result += Math.abs(Number_i[i] - Number_iMN[i]);
        }
        for (int j = 0; j < M; j++) {
            result += Math.abs(Number_j[j] - Kaburi_j[j]);
        }
        return result;
    }
    public int gcd(int a, int b) {
        while (b > 0) {
            a = a % b;
        }
        return a;
    }
}","public class Main {
    public int findTheDifference(String s, String t) {
        int N = s.length();
        int M = t.length();
        int[] Number_i = new int[N];
        int[] Number_iMN = new int[N];
        for (int i = 0; i < N; i++) {
            Number_i[i] = i;
            Number_iMN[i] = i * M / N;
        }
        int[] Number_j = new int[M];
        int[] Kaburi_j = new int[M];
        for (int j = 0; j < M; j++) {
            Number_j[j] = j;
            Kaburi_j[j] = (int) (Number_iMN[j] * N / M);
        }
        int counter = 0;
        int Flag = 0;
        int Kaburi_Size = M;
        while (counter <= Kaburi_Size - 1) {
            if (s.charAt(Number_i[counter]) == t.charAt(Number_j[counter])) {
                counter++;
            } else {
                Flag = 1;
                break;
            }
        }
        if (Flag == 1) {
            return -1;
        }
        counter = 0;
        int gcd = 0;
        while (counter <= Kaburi_Size - 1) {
            gcd = gcd(Number_iMN[counter], Number_j[counter]);
            Number_i[counter] = Number_i[counter] * gcd / M;
            Number_iMN[counter] = Number_iMN[counter] * gcd / M;
            Number_j[counter] = Number_j[counter] * gcd / M;
            Kaburi_j[counter] = Kaburi_j[counter] * gcd / M;
            counter++;
        }
        int result = 0;
        for (int i = 0; i < N; i++) {
            result += Math.abs(Number_i[i] - Number_iMN[i]);
        }
        for (int j = 0; j < M; j++) {
            result += Math.abs(Number_j[j] - Kaburi_j[j]);
        }
        return result;
    }
    public int gcd(int a, int b) {
        while (b > 0) {
            a = a % b;
        }
        return a;
    }
}"
CodeGen,avatar,Python,Java,codeforces_11_A.java,"public class codeforces_11_A {
    public int findMinDifference(int[] timePoints) {
        int n = timePoints.length;
        int[] diff = new int[n];
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < n; i++) {
            diff[i] = timePoints[i] - timePoints[i + 1];
            min = Math.min(min, diff[i]);
        }
        return min;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int d = scanner.nextInt();
        int[] x = new int[n];
        int m = 0;
        int q = 0;
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        System.out.println(findMinDifference(x));
    }
    public static int findMinDifference(int[] timePoints) {
        int n = timePoints.length;
        int[] diff = new int[n];
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < n - 1; i++) {
            diff[i] = timePoints[i] - timePoints[i + 1];
            min = Math.min(min, diff[i]);
        }
        return min;
    }
}"
CodeGen,avatar,Python,Java,codeforces_500_A.java,"import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;

public class codeforces_500_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int t = in.nextInt();
        List<Integer> s = new ArrayList<>();
        for(int s_i=0; s_i < n; s_i++){
            s.add(in.nextInt());
        }
        int current_cell = 0;
        while(current_cell <= t){
            current_cell += s.get(current_cell - 1);
            if(current_cell == t){
                System.out.println(""YES"");
                System.exit(0);
            }
        }
        System.out.println(""NO"");
    }
}","import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int t = in.nextInt();
        List<Integer> s = new ArrayList<>();
        in.nextLine();
        String line = in.nextLine();
        String[] numbers = line.split("" "");
        for (int i = 0; i < numbers.length; i++) {
            s.add(Integer.parseInt(numbers[i]));
        }
        int current_cell = 0;
        while(current_cell <= t){
            current_cell += s.get((numbers.length + current_cell - 1) % numbers.length);
            if(current_cell == t){
                System.out.println(""YES"");
                System.exit(0);
            }
        }
        System.out.println(""NO"");
    }
}"
CodeGen,avatar,Python,Java,codeforces_268_A.java,"public class codeforces_268_A {
    public int findDuplicates(int[] nums) {
        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i]!= i + 1) {
                count++;
            }
        }
        return count;
    }
}","public class Main {
    public int findDuplicates(int[] nums) {
        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i]!= i + 1) {
                count++;
            }
        }
        return count;
    }
}"
CodeGen,avatar,Python,Java,codeforces_450_A.java,"public class codeforces_450_A {
    public int findMaxForm(int[] str, int m) {
        int n = str.length;
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            if (str[i] % m == 0) {
                l[i] = str[i] / m;
            } else {
                l[i] = str[i] / m + 1;
            }
        }
        int max = Integer.MIN_VALUE;
        int ind = 0;
        for (int i = 0; i < n; i++) {
            if (l[i] > max) {
                max = l[i];
                ind = i;
            }
        }
        return ind + 1;
    }
}","public class Main {
    public int findMaxForm(int[] str, int m) {
        int n = str.length;
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            if (str[i] % m == 0) {
                l[i] = str[i] / m;
            } else {
                l[i] = str[i] / m + 1;
            }
        }
        int max = Integer.MIN_VALUE;
        int ind = 0;
        for (int i = 0; i < n; i++) {
            if (l[i] > max) {
                max = l[i];
                ind = i;
            }
        }
        return ind + 1;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC153_A.java,"// Java code is much more verbose.
class Solution {
    public int divide(int dividend, int divisor) {
        if (dividend == 0) {
            return 0;
        }
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        long res = 0;
        while (a >= b) {
            long tmp = b;
            b = a % b;
            a = tmp;
            res++;
        }
        if (b!= 0) {
            res++;
        }
        if (isNegative) {
            res = -res;
        }
        return (int) res;
    }
}","// Java code is much more verbose.
class Solution {
    public int divide(int dividend, int divisor) {
        if (dividend == 0) {
            return 0;
        }
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        long res = 0;
        while (a >= b) {
            long tmp = b;
            b = a % b;
            a = tmp;
            res++;
        }
        if (b!= 0) {
            res++;
        }
        if (isNegative) {
            res = -res;
        }
        return (int) res;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ARC062_B.java,"public class atcoder_ARC062_B {
    public int findMaxForm(String[] strs) {
        int n = strs.length;
        int[] num_g = new int[n];
        int[] num_p = new int[n];
        int score = 0;
        for (int i = 0; i < n; i++) {
            if (strs[i].equals(""g"")) {
                num_g[i]++;
                if (num_g[i] > num_p[i]) {
                    score++;
                    num_p[i]++;
                } else {
                    score = score;
                    num_g[i]++;
                }
            } else {
                num_g[i]--;
                if (num_g[i] < num_p[i]) {
                    score--;
                    num_g[i]--;
                } else {
                    score = score;
                    num_p[i]--;
                }
            }
        }
        return score;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        String[] strs = input.split("" "");
        System.out.println(findMaxForm(strs));
    }
    public static int findMaxForm(String[] strs) {
        int n = strs.length;
        int[] num_g = new int[n];
        int[] num_p = new int[n];
        int score = 0;
        for (int i = 0; i < n; i++) {
            if (strs[i].equals(""g"")) {
                num_g[i]++;
                if (num_g[i] > num_p[i]) {
                    score++;
                    num_p[i]++;
                } else {
                    score = score;
                    num_g[i]++;
                }
            } else if (strs[i].equals(""p"")){
                num_g[i]--;
                if (num_g[i] < num_p[i]) {
                    score--;
                    num_g[i]--;
                } else {
                    score = score;
                    num_p[i]--;
                }
            }
        }
        return score;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC133_E.java,"public class atcoder_ABC133_E {
    public int findCircleNum(int[][] M) {
        int N = M.length;
        int K = M[0].length;
        int[][] graph = new int[N][K];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < K; j++) {
                graph[i][j] = M[i][j];
            }
        }
        int mod = 1000000007;
        int[] dfs = new int[N];
        for (int i = 0; i < N; i++) {
            dfs[i] = K - 1;
        }
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < K; j++) {
                if (dfs[i] == K - 1) {
                    continue;
                }
                for (int k = 0; k < K; k++) {
                    if (graph[i][k] == j) {
                        dfs[k] = K - 1;
                    }
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < K; i++) {
            if (dfs[i] == K - 1) {
                ans++;
            }
        }
        return ans % mod;
    }
}","public class Main {
    public int findCircleNum(int[][] M) {
        int N = M.length;
        int K = M[0].length;
        int[][] graph = new int[N][K];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < K; j++) {
                graph[i][j] = M[i][j];
            }
        }
        int mod = 1000000007;
        int[] dfs = new int[N];
        for (int i = 0; i < N; i++) {
            dfs[i] = K - 1;
        }
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < K; j++) {
                if (dfs[i] == K - 1) {
                    continue;
                }
                for (int k = 0; k < K; k++) {
                    if (graph[i][k] == j) {
                        dfs[k] = K - 1;
                    }
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < K; i++) {
            if (dfs[i] == K - 1) {
                ans++;
            }
        }
        return ans % mod;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC139_B.java,"public class atcoder_ABC139_B {
    public int hIndex(int[] citations) {
        int n = citations.length;
        int[] h = new int[n + 1];
        for (int i = 0; i < n; i++) {
            h[citations[i]]++;
        }
        int i = 0;
        while (i < n && h[i] == 0) {
            i++;
        }
        return i;
    }
}","public class Main {
    public int hIndex(int[] citations) {
        int n = citations.length;
        int[] h = new int[n + 1];
        for (int i = 0; i < n; i++) {
            h[citations[i]]++;
        }
        int i = 0;
        while (i < n && h[i] == 0) {
            i++;
        }
        return i;
    }
}"
CodeGen,avatar,Python,Java,codeforces_86_A.java,"public class codeforces_86_A {
    public int maxProduct(int[] A) {
        int l = A[0], r = A[1], first = 10, second = 10, ans = -1;
        for (int i = 2; i < A.length; i++) {
            int curr = A[i];
            int s = 1;
            while (curr!= 0) {
                s++;
                curr /= 10;
            }
            first = Math.max(first, s);
            second = Math.max(second, first / 2);
            ans = Math.max(ans, first * curr);
            curr = A[i];
            s = 1;
            while (curr!= 0) {
                s++;
                curr /= 10;
            }
            first = Math.max(first, s);
            second = Math.max(second, first / 2);
            ans = Math.max(ans, first * curr);
        }
        return ans;
    }
}","public class Main {
    public int maxProduct(int[] A) {
        int l = A[0], r = A[1], first = 10, second = 10, ans = -1;
        for (int i = 2; i < A.length; i++) {
            int curr = A[i];
            int s = 1;
            while (curr!= 0) {
                s++;
                curr /= 10;
            }
            first = Math.max(first, s);
            second = Math.max(second, first / 2);
            ans = Math.max(ans, first * curr);
            curr = A[i];
            s = 1;
            while (curr!= 0) {
                s++;
                curr /= 10;
            }
            first = Math.max(first, s);
            second = Math.max(second, first / 2);
            ans = Math.max(ans, first * curr);
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC127_B.java,"public class atcoder_ABC127_B {
    public int getMoneyAmount(int r, int D, int x) {
        int[] res = new int[12];
        res[0] = 0;
        for (int i = 1; i < 12; i++) {
            res[i] = (int) Math.pow(r, i - 1) * (x + D / (1 - r)) - D / (1 - r);
        }
        return res[11];
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int r, D, x;
        Scanner scanner = new Scanner(System.in);
        String[] inputs = scanner.nextLine().split("" "");
        r = Integer.parseInt(inputs[0]);
        D = Integer.parseInt(inputs[1]);
        x = Integer.parseInt(inputs[2]);
        getMoneyAmount(r, D, x);
    }
    public static void getMoneyAmount(int r, int D, int x) {
        int[] res = new int[12];
        for (int i = 2; i < 12; i++) {
            res[i] = (int) (Math.pow(r, i - 1) * (x + (double) D / (1 - r)) - (double) D / (1 - r));
            System.out.println(res[i]);
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC155_E.java,"import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.regex.*;

public class atcoder_ABC155_E {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.nextLine();
        int pmin = 1000;
        int mmin = 0;
        s = ""0"" + s;
        for (char c : s.toCharArray()) {
            int v = (int) c - 48;
            int npmin = Math.min(pmin + 10 - (v + 1), mmin + 10 - v);
            int nmmin = Math.min(pmin + v + 1, mmin + v);
            pmin = npmin;
            mmin = nmmin;
        }
        System.out.println(Math.min(pmin, mmin));
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        int pmin = 1000;
        int mmin = 0;
        s = ""0"" + s;
        for (int i = s.length() - 1; i >= 0; i--) {
            int v = Character.getNumericValue(s.charAt(i));
            int npmin = Math.min(pmin + 10 - (v + 1), mmin + 10 - v);
            int nmmin = Math.min(pmin + v + 1, mmin + v);
            pmin = npmin;
            mmin = nmmin;
        }
        int result = Math.min(pmin, mmin);
        System.out.println(result);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC123_B.java,"import java.util.Scanner;
import java.util.Arrays;

public class atcoder_ABC123_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int[] menu = new int[5];
        for (int i = 0; i < 5; i++) {
            menu[i] = in.nextInt();
        }
        menu = Arrays.stream(menu).sorted().toArray();
        int ans = 0;
        for (int i = 1; i < menu.length; i++) {
            ans += Math.ceil(menu[i] / 10) * 10;
        }
        ans += menu[0];
        System.out.println(ans + menu[0]);
    }
}","import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int[] menu = new int[5];
        for (int i = 0; i < 5; i++) {
            menu[i] = in.nextInt();
        }
        menu = Arrays.stream(menu).sorted().toArray();
        int ans = 0;
        for (int i = 1; i < menu.length; i++) {
            ans += Math.ceil(menu[i] / 10.0) * 10;
        }
        ans += menu[0];
        System.out.println(ans + menu[0]);
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC007_C.java,"import java.io.*;
import java.util.*;

public class atcoder_AGC007_C {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int d = Integer.parseInt(st.nextToken());
        int x = Integer.parseInt(st.nextToken());
        int ret = 0;
        while (N > 0) {
            ret += d + (N - 0.5) * x;
            d += (d / N) + (5 * x) / (2 * N);
            x += 2 * x / N;
            N--;
        }
        System.out.println(ret);
    }
}","import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int d = Integer.parseInt(st.nextToken());
        int x = Integer.parseInt(st.nextToken());
        int ret = 0;
        while (N > 0) {
            ret += d + (N - 0.5) * x;
            d += (int) (d / N) + (5 * x) / (2 * N);
            x += 2 * x / N;
            N--;
        }
        System.out.println(ret);
    }
}"
CodeGen,avatar,Java,Python,atcoder_ABC123_B.py,"import java.util.Scanner ; import java.util.TreeMap ; def main ( ):
    sc = java.util.Scanner ( sys.stdin )
    a = [ sc.nextInt ( ) for i in range ( 5 ) ]
    r = [ a [ i ] % 10 for i in range ( 5 ) ]
    map = java.util.TreeMap ( )
    for i in range ( 5 ):
        a [ i ] = sc.nextInt ( )
        r [ i ] = a [ i ] % 10
        b = 10
        if r [ i ]!= 0:
            b = 10 - r [ i ]
            map.put ( b, a [ i ] )
    ans = 0
    if len ( map ) == 0:
        for i in range ( 5 ):
            ans += a [ i ]
        print ( ans )
        return
    last = map.get ( map.lastKey ( ) )
    idx = 0
    for i in range ( 5 ):
        if a [ i ] == last:
            idx = i
    for i in range ( 5 ):
        if i!= idx:
            if a [ i ] % 10 == 0:
                ans += a [ i ]
            else:
                ans += a [ i ] + ( 10 - r [ i ] )
    ans += last
    print ( ans )
main ( )","import java.util.Scanner ; import java.util.TreeMap ; def main ( ):
    sc = java.util.Scanner ( sys.stdin )
    a = [ sc.nextInt ( ) for i in range ( 5 ) ]
    r = [ a [ i ] % 10 for i in range ( 5 ) ]
    map = java.util.TreeMap ( )
    for i in range ( 5 ):
        a [ i ] = sc.nextInt ( )
        r [ i ] = a [ i ] % 10
        b = 10
        if r [ i ]!= 0:
            b = 10 - r [ i ]
            map.put ( b, a [ i ] )
    ans = 0
    if len ( map ) == 0:
        for i in range ( 5 ):
            ans += a [ i ]
        print ( ans )
        return
    last = map.get ( map.lastKey ( ) )
    idx = 0
    for i in range ( 5 ):
        if a [ i ] == last:
            idx = i
    for i in range ( 5 ):
        if i!= idx:
            if a [ i ] % 10 == 0:
                ans += a [ i ]
            else:
                ans += a [ i ] + ( 10 - r [ i ] )
    ans += last
    print ( ans )
main ( )"
CodeGen,avatar,Java,Python,atcoder_ABC139_B.py,"def main(args):
    sc = Scanner(System.in)
    A = int(sc.next())
    B = int(sc.next())
    amari = 0
    result = 0
    result = (B - 1) // (A - 1)
    amari = (B - 1) % (A - 1)
    if amari!= 0:
        result += 1
    out = sys.stdout
    out.write(str(result))
    sc.close()
    out.flush()","def main():
    A, B = map(int, input().split())
    amari = 0
    result = 0
    result = (B - 1) // (A - 1)
    amari = (B - 1) % (A - 1)
    if amari!= 0:
        result += 1
    print(str(result))

main()"
CodeGen,avatar,Java,Python,codeforces_629_B.py,"def main(args):
    n = int(input())
    FfriendPerDay = [0] * 367
    MfriendPerDay = [0] * 367
    for i in range(n):
        c = input().strip()[0]
        a = int(input())
        b = int(input())
        for j in range(a, b + 1):
            if c == 'M':
                MfriendPerDay[j] += 1
            else:
                FfriendPerDay[j] += 1
            if MfriendPerDay[j] < FfriendPerDay[j]:
                if MfriendPerDay[j] > answer:
                    answer = MfriendPerDay[j]
            else:
                if FfriendPerDay[j] > answer:
                    answer = FfriendPerDay[j]
    print(answer * 2)","def main():
    n = int(input())
    FfriendPerDay = [0] * 367
    MfriendPerDay = [0] * 367
    answer = 0
    for i in range(n):
        c, a, b = input().split()
        a = int(a)
        b = int(b)
        for j in range(a, b + 1):
            if c == 'M':
                MfriendPerDay[j] += 1
            else:
                FfriendPerDay[j] += 1
            if MfriendPerDay[j] < FfriendPerDay[j]:
                if MfriendPerDay[j] > answer:
                    answer = MfriendPerDay[j]
            else:
                if FfriendPerDay[j] > answer:
                    answer = FfriendPerDay[j]
    print(answer * 2)

main()"
CodeGen,avatar,Java,Python,atcoder_ABC178_B.py,"class atcoder_ABC178_B {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null ||!st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    static int modPower(int x, int y, int mod) {
        int res = 1;
        x %= mod;
        if (x == 0) return 0;
        while (y > 0) {
            if (y % 2 == 1) {
                res = (res * x) % mod;
            }
            y >>= 1;
            x = (x * x) % mod;
        }
        return res;
    }

    static class pair<T1, T2> {
        T1 first;
        T2 second;
        pair(T1 first, T2 second) {
            this.first = first;
            this.second = second;
        }
    }

    public static void main(String[] args) throws IOException {
        FastReader in = new FastReader();
        long[] a = new long[4];
        for (int i = 0; i < 4; i++) {
            a[i] = in.nextLong();
        }
        System.out.println(Math.max(a[0] * a[2], Math.max(a[1] * a[3], Math.max(a[0] * a[3], a[1] * a[2]))));
    }
}","class atcoder_ABC178_B {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null ||!st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    static int modPower(int x, int y, int mod) {
        int res = 1;
        x %= mod;
        if (x == 0) return 0;
        while (y > 0) {
            if (y % 2 == 1) {
                res = (res * x) % mod;
            }
            y >>= 1;
            x = (x * x) % mod;
        }
        return res;
    }

    static class pair<T1, T2> {
        T1 first;
        T2 second;
        pair(T1 first, T2 second) {
            this.first = first;
            this.second = second;
        }
    }

    public static void main(String[] args) throws IOException {
        FastReader in = new FastReader();
        long[] a = new long[4];
        for (int i = 0; i < 4; i++) {
            a[i] = in.nextLong();
        }
        System.out.println(Math.max(a[0] * a[2], Math.max(a[1] * a[3], Math.max(a[0] * a[3], a[1] * a[2]))));
    }
}"
CodeGen,avatar,Java,Python,codeforces_302_A.py,"import java.io.IOException ; import java.util.Scanner ; def main ( ):
    sc = Scanner ( System.in )
    n = sc.nextInt ( )
    k = sc.nextInt ( )
    arr = [ 0 ] * n
    for i in range ( 0, n ):
        arr [ i ] = sc.nextInt ( )
    res = [ ]
    o = 0
    e = 0
    for i in range ( 0, n ):
        if arr [ i ] == 1:
            o += 1
        else:
            e += 1
    for i in range ( 0, k ):
        l = sc.nextInt ( )
        r = sc.nextInt ( )
        if ( ( r - l + 1 ) % 2 == 1 ):
            res.append ( ""0\n"" )
        else:
            if ( ( r - l + 1 ) / 2 <= o and ( r - l + 1 ) / 2 <= e ):
                res.append ( ""1\n"" )
            else:
                res.append ( ""0\n"" )
    print ( """".join ( res ) )
    sc.close ( )","import java.io.IOException ; import java.util.Scanner ; def main ( ):
    sc = Scanner ( System.in )
    n = sc.nextInt ( )
    k = sc.nextInt ( )
    arr = [ 0 ] * n
    for i in range ( 0, n ):
        arr [ i ] = sc.nextInt ( )
    res = [ ]
    o = 0
    e = 0
    for i in range ( 0, n ):
        if arr [ i ] == 1:
            o += 1
        else:
            e += 1
    for i in range ( 0, k ):
        l = sc.nextInt ( )
        r = sc.nextInt ( )
        if ( ( r - l + 1 ) % 2 == 1 ):
            res.append ( ""0\n"" )
        else:
            if ( ( r - l + 1 ) / 2 <= o and ( r - l + 1 ) / 2 <= e ):
                res.append ( ""1\n"" )
            else:
                res.append ( ""0\n"" )
    print ( """".join ( res ) )
    sc.close ( )"
CodeGen,avatar,Java,Python,codeforces_86_A.py,"def power(a):
    res = 0
    while a > 0:
        res += 1
        a = a / 10
    return res
def mult(a):
    pow = power(a)
    max = 0
    for j in range(0,pow):
        max = max * 10 + 9
    return a * (max - a)
def main():
    inp = input()
    l = inp.split()
    l = [int(i) for i in l]
    r = inp.split()
    r = [int(i) for i in r]
    res = 0
    maxxes = [0] * 10
    temp = 0
    for i in range(0,10):
        temp = temp * 10 + 9
        maxxes[i] = temp / 2 * (temp - temp / 2)
    res = max(mult(l[0]), res)
    res = max(mult(r[0]), res)
    temp = 0
    for i in range(0,10):
        temp = temp * 10 + 9
        if l[0] <= temp / 2 and temp / 2 <= r[0]:
            res = max(maxxes[i], res)
    print(res)","def power(a):
    res = 0
    while a > 0:
        res += 1
        a = a / 10
    return res
def mult(a):
    pow = power(a)
    max = 0
    for j in range(0,pow):
        max = max * 10 + 9
    return a * (max - a)
def main():
    inp = input()
    l = inp.split()
    l = [int(i) for i in l]
    r = inp.split()
    r = [int(i) for i in r]
    res = 0
    maxxes = [0] * 10
    temp = 0
    for i in range(0,10):
        temp = temp * 10 + 9
        maxxes[i] = temp / 2 * (temp - temp / 2)
    res = max(mult(l[0]), res)
    res = max(mult(r[0]), res)
    temp = 0
    for i in range(0,10):
        temp = temp * 10 + 9
        if l[0] <= temp / 2 and temp / 2 <= r[0]:
            res = max(maxxes[i], res)
    print(res)
main()"
CodeGen,avatar,Java,Python,codeforces_296_A.py,"class codeforces_296_A {
    def main(args):
        inputStream = System.in
        outputStream = System.out
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        solver = Task()
        solver.solve(inputReader, printWriter)
        printWriter.close()
    class Task {
        def solve(self, inputReader, printWriter):
            n = inputReader.nextInt()
            array = [0] * 1001
            for i in range(n):
                index = inputReader.nextInt()
                array[index] += 1
            countMax = -1
            for i in range(1, len(array)):
                if countMax < array[i]:
                    countMax = array[i]
            if n % 2 == 0:
                if countMax <= n / 2:
                    printWriter.println(""YES"")
                else:
                    printWriter.println(""NO"")
            else:
                if countMax <= n / 2 + 1:
                    printWriter.println(""YES"")
                else:
                    printWriter.println(""NO"")
        }
    }
    class InputReader {
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream))
        def next(self):
            while True:
                try:
                    return self.reader.readLine()
                except IOError:
                    pass
        def nextInt(self):
            return int(self.next())
        def nextLong(self):
            return long(self.next())
        def nextDouble(self):
            return double(self.next())
        def nextLine(self):
            return self.next().strip()
    }
}




import java.io.* ; import java.util.StringTokenizer ; public class codeforces_296_A { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; Task solver = new Task ( ) ; solver.solve ( in, out ) ; out.close ( ) ; } static class Task { public void solve ( InputReader in, PrintWriter out ) { int n = in.nextInt ( ) ; int [ ] array = new int [ 1001 ] ; for ( int i = 0 ; i < n ; i ++ ) { int index = in.nextInt ( ) ; array [ index ] ++ ; } int countMax = - 1 ; for ( int i = 1 ; i < array.length ; i ++ ) { if ( countMax < array [ i ] ) countMax = array [ i ] ; } if ( n % 2 == 0 ) { if ( countMax <= n / 2 ) { out.println ( ""YES"" ) ; } else { out.println ( ""NO"" ) ; } } else { if ( countMax <= n / 2 + 1 ) { out.println ( ""YES"" ) ; } else { out.println ( ""NO"" ) ; } } } } static class InputReader { BufferedReader reader ; StringTokenizer tokenizer ; public InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ), 32768 ) ; } String next ( ) { while ( tokenizer == null ||! tokenizer.hasMoreElements ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = """" ; try { str = reader.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } }



Output:

YES","class codeforces_296_A {
    def main(args):
        inputStream = System.in
        outputStream = System.out
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        solver = Task()
        solver.solve(inputReader, printWriter)
        printWriter.close()
    class Task {
        def solve(self, inputReader, printWriter):
            n = inputReader.nextInt()
            array = [0] * 1001
            for i in range(n):
                index = inputReader.nextInt()
                array[index] += 1
            countMax = -1
            for i in range(1, len(array)):
                if countMax < array[i]:
                    countMax = array[i]
            if n % 2 == 0:
                if countMax <= n / 2:
                    printWriter.println(""YES"")
                else:
                    printWriter.println(""NO"")
            else:
                if countMax <= n / 2 + 1:
                    printWriter.println(""YES"")
                else:
                    printWriter.println(""NO"")
        }
    }
    class InputReader {
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream))
        def next(self):
            while True:
                try:
                    return self.reader.readLine()
                except IOError:
                    pass
        def nextInt(self):
            return int(self.next())
        def nextLong(self):
            return long(self.next())
        def nextDouble(self):
            return double(self.next())
        def nextLine(self):
            return self.next().strip()
    }
}




import java.io.* ; import java.util.StringTokenizer ; public class codeforces_296_A { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; Task solver = new Task ( ) ; solver.solve ( in, out ) ; out.close ( ) ; } static class Task { public void solve ( InputReader in, PrintWriter out ) { int n = in.nextInt ( ) ; int [ ] array = new int [ 1001 ] ; for ( int i = 0 ; i < n ; i ++ ) { int index = in.nextInt ( ) ; array [ index ] ++ ; } int countMax = - 1 ; for ( int i = 1 ; i < array.length ; i ++ ) { if ( countMax < array [ i ] ) countMax = array [ i ] ; } if ( n % 2 == 0 ) { if ( countMax <= n / 2 ) { out.println ( ""YES"" ) ; } else { out.println ( ""NO"" ) ; } } else { if ( countMax <= n / 2 + 1 ) { out.println ( ""YES"" ) ; } else { out.println ( ""NO"" ) ; } } } } static class InputReader { BufferedReader reader ; StringTokenizer tokenizer ; public InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ), 32768 ) ; } String next ( ) { while ( tokenizer == null ||! tokenizer.hasMoreElements ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = """" ; try { str = reader.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } }



Output:

YES"
CodeGen,avatar,Java,Python,codeforces_59_A.py,import java.util.Scanner ; public class codeforces_59_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String word = in.next ( ) ; int uppercase = 0 ; int lowercase = 0 ; for ( int i = 0 ; i < word.length ( ) ; i ++ ) { char ch = word.charAt ( i ) ; if ( ch.isUpperCase ( ) ) { uppercase ++ ; } else { lowercase ++ ; } } if ( uppercase > lowercase ) print ( word.toUpperCase ( ) ) ; else if ( lowercase > uppercase ) print ( word.toLowerCase ( ) ) ; else print ( word.toLowerCase ( ) ) ; } },import java.util.Scanner ; public class codeforces_59_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String word = in.next ( ) ; int uppercase = 0 ; int lowercase = 0 ; for ( int i = 0 ; i < word.length ( ) ; i ++ ) { char ch = word.charAt ( i ) ; if ( ch.isUpperCase ( ) ) { uppercase ++ ; } else { lowercase ++ ; } } if ( uppercase > lowercase ) print ( word.toUpperCase ( ) ) ; else if ( lowercase > uppercase ) print ( word.toLowerCase ( ) ) ; else print ( word.toLowerCase ( ) ) ; } }
CodeGen,avatar,Java,Python,codeforces_327_A.py,"def main(args):
    scanner = Scanner(System.in)
    if scanner.hasNext():
        n = scanner.nextInt()
        arr = [scanner.nextInt() for _ in range(n)]
        max = Integer.MIN_VALUE
        for i in range(n):
            for j in range(i, n):
                x = 0
                brr = [scanner.nextInt() for _ in range(n)]
                for k in brr:
                    if k == 0:
                        brr[k] = 1
                    else:
                        brr[k] = 0
                count = checKNo(brr)
                if count > max:
                    max = count
        if n == 1:
            if arr[0] == 1:
                print(0)
            else:
                print(1)
        else:
            print(max)
    else:
        print(0)

def checKNo(brr):
    val = 0
    for i in brr:
        if i == 1:
            val += 1
    return val

main(sys.argv)","def main():
    scanner = Scanner(System.in)
    if scanner.hasNext():
        n = scanner.nextInt()
        arr = [scanner.nextInt() for _ in range(n)]
        max = Integer.MIN_VALUE
        for i in range(n):
            for j in range(i, n):
                x = 0
                brr = [scanner.nextInt() for _ in range(n)]
                for k in brr:
                    if k == 0:
                        brr[k] = 1
                    else:
                        brr[k] = 0
                count = checKNo(brr)
                if count > max:
                    max = count
        if n == 1:
            if arr[0] == 1:
                print(0)
            else:
                print(1)
        else:
            print(max)
    else:
        print(0)

def checKNo(brr):
    val = 0
    for i in brr:
        if i == 1:
            val += 1
    return val

main()"
CodeGen,avatar,Java,Python,codeforces_147_A.py,"import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; def main ( ):
	br = BufferedReader ( new InputStreamReader ( System.in ) )
	pw = PrintWriter ( System.out )
	s = br.readLine ( )
	sb = StringBuilder ( )
	n = len ( s )
	sb.append ( s [ 0 ] )
	for i in range ( 1, n ):
		c = s [ i ]
		if isLatinLetter ( c ):
			if not isLatinLetter ( s [ i - 1 ] ):
				sb.append ('' )
			sb.append ( c )
		else:
			sb.append ( c )
	pw.println ( sb )
	pw.flush ( )
	pw.close ( )","import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; def main ( ):
	br = BufferedReader ( new InputStreamReader ( System.in ) )
	pw = PrintWriter ( System.out )
	s = br.readLine ( )
	sb = StringBuilder ( )
	n = len ( s )
	sb.append ( s [ 0 ] )
	for i in range ( 1, n ):
		c = s [ i ]
		if isLatinLetter ( c ):
			if not isLatinLetter ( s [ i - 1 ] ):
				sb.append ('' )
			sb.append ( c )
		else:
			sb.append ( c )
	pw.println ( sb )
	pw.flush ( )
	pw.close ( )"
CodeGen,avatar,Java,Python,codeforces_7_B.py,"import java.util.* ; public class codeforces_7_B { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System.in ) ; int t = s.nextInt ( ) ; int m = s.nextInt ( ) ; int [ ] memory = new int [ m ] ; int allocIdx = 0 ; for ( int j = 0 ; j < t ; j ++ ) { switch ( s.next ( ) ) { case ""alloc"" : int n = s.nextInt ( ) ; int len = 0 ; boolean canAlloc = false ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == 0 ) len ++ ; else len = 0 ; if ( len == n ) { canAlloc = true ; len = i - n + 1 ; break ; } } if ( canAlloc ) { allocIdx ++ ; for ( int i = len ; i < len + n ; i ++ ) memory [ i ] = allocIdx ; System.out.println ( allocIdx ) ; } else System.out.println ( ""NULL"" ) ; break ; case ""erase"" : int x = s.nextInt ( ) ; if ( x <= 0 ) { System.out.println ( ""ILLEGAL_ERASE_ARGUMENT"" ) ; break ; } boolean hasErased = false ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == x ) { memory [ i ] = 0 ; hasErased = true ; } } if (! hasErased ) System.out.println ( ""ILLEGAL_ERASE_ARGUMENT"" ) ; break ; case ""defragment"" : int d = 0 ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == 0 ) d ++ ; else memory [ i - d ] = memory [ i ] ; } for ( int i = m - d ; i < m ; i ++ ) memory [ i ] = 0 ; break ; default : System.out.println ( ""h"" ) ; break ; } } s.close ( ) ; } }","import java.util.* ; public class codeforces_7_B { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System.in ) ; int t = s.nextInt ( ) ; int m = s.nextInt ( ) ; int [ ] memory = new int [ m ] ; int allocIdx = 0 ; for ( int j = 0 ; j < t ; j ++ ) { switch ( s.next ( ) ) { case ""alloc"" : int n = s.nextInt ( ) ; int len = 0 ; boolean canAlloc = false ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == 0 ) len ++ ; else len = 0 ; if ( len == n ) { canAlloc = true ; len = i - n + 1 ; break ; } } if ( canAlloc ) { allocIdx ++ ; for ( int i = len ; i < len + n ; i ++ ) memory [ i ] = allocIdx ; System.out.println ( allocIdx ) ; } else System.out.println ( ""NULL"" ) ; break ; case ""erase"" : int x = s.nextInt ( ) ; if ( x <= 0 ) { System.out.println ( ""ILLEGAL_ERASE_ARGUMENT"" ) ; break ; } boolean hasErased = false ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == x ) { memory [ i ] = 0 ; hasErased = true ; } } if (! hasErased ) System.out.println ( ""ILLEGAL_ERASE_ARGUMENT"" ) ; break ; case ""defragment"" : int d = 0 ; for ( int i = 0 ; i < m ; i ++ ) { if ( memory [ i ] == 0 ) d ++ ; else memory [ i - d ] = memory [ i ] ; } for ( int i = m - d ; i < m ; i ++ ) memory [ i ] = 0 ; break ; default : System.out.println ( ""h"" ) ; break ; } } s.close ( ) ; } }"
CodeGen,avatar,Java,Python,codeforces_274_A.py,"def main(args):
    sc = Scanner(System.in)
    n = sc.nextInt()
    k = sc.nextLong()
    arr = [sc.nextLong() for i in range(n)]
    arr.sort()
    count = 0
    for i in range(n):
        if arr[i] % k!= 0:
            count += 1
            set.add(arr[i])
        else:
            if not set.contains(arr[i] / k):
                count += 1
                set.add(arr[i])
    print(count)

# Note:
# The input n is guaranteed to be in the range [1, 10000].
# The input k is guaranteed to be in the range [1, 10000].
# The input arr is guaranteed to be in the range [0, 10^18].
# The input arr contains no duplicates.
# The input arr is sorted in ascending order.
# The output is guaranteed to be in the range [0, 10^18].
# The output is guaranteed to be less than or equal to 10^18.
# The output is guaranteed to be exactly 10^18 if the input is exactly 10^18.
# The output is guaranteed to be exactly 10^18 if the input is exactly 10^18 and the input is sorted in ascending order.","def main():
    n, k = map(int, input().split())
    arr = list(map(int, input().split()))
    arr.sort()
    count = 0
    for i in range(n):
        if arr[i] % k!= 0:
            count += 1
            set.add(arr[i])
        else:
            if not set.contains(arr[i] / k):
                count += 1
                set.add(arr[i])
    print(count)
    
main()"
CodeGen,avatar,Java,Python,atcoder_ABC122_D.py,"def calc():
    N = int(input())
    memo = [{} for _ in range(N + 1)]
    for i in range(N + 1):
        memo[i] = {}
    for i in range(N + 1):
        memo[i]['TTT'] = 1
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if '","def calc():
    N = int(input())
    memo = [{} for _ in range(N + 1)]
    for i in range(N + 1):
        memo[i] = {}
    for i in range(N + 1):
        memo[i]['TTT'] = 1
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if 'AGC' in last3:
                return False
    for i in range(N + 1):
        for j in range(4):
            if 'AGC' in last3:
                return False
            last3 += TOKENS[j]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[1:] + last3[0]
            if 'AGC' in last3:
                return False
        for j in range(3):
            last3 = last3[2:] + last3[1] + last3[0]
            if '"
CodeGen,avatar,Java,Python,atcoder_ABC125_B.py,"def main(args):
    sc = Scanner(System.in)
    n = int(sc.nextLine())
    vStr = sc.nextLine()
    vList = str2List(vStr)
    cStr = sc.nextLine()
    cList = str2List(cStr)
    max = 0
    for i in range(n):
        profit = vList[i] - cList[i]
        if profit > 0:
            max += profit
    print(max)


def str2List(str):
    vArrStr = str.split(' ')
    ret = {}
    key = 0
    for val in vArrStr:
        ret[key] = int(val)
        key += 1
    return ret","def main():
    n = int(input())
    vStr = input()
    vList = str2List(vStr)
    cStr = input()
    cList = str2List(cStr)
    max = 0
    for i in range(n):
        profit = vList[i] - cList[i]
        if profit > 0:
            max += profit
    print(max)


def str2List(str):
    vArrStr = str.split(' ')
    ret = {}
    key = 0
    for val in vArrStr:
        ret[key] = int(val)
        key += 1
    return ret

main()"
CodeGen,avatar,Java,Python,atcoder_ABC135_D.py,"def main():
    sc = Scanner(sys.stdin)
    cs = sc.next().strip().lower()
    dp = [[0] * 13 for _ in range(len(cs))]
    base = 1
    for i in range(len(cs)):
        if cs[len(cs) - 1 - i] == '?':
            for pre in range(13):
                for next in range(10):
                    dp[i][(base * next + pre) % 13] += (i > 0 and dp[i - 1][pre] or (pre == 0 and 1 or 0))
                    dp[i][(base * next + pre) % 13] %= MOD
        else:
            int next = cs[len(cs) - 1 - i] - '0'
            for pre in range(13):
                dp[i][(base * next + pre) % 13] += (i > 0 and dp[i - 1][pre] or (pre == 0 and 1 or 0))
                dp[i][(base * next + pre) % 13] %= MOD
        base = base * 10 % 13
    print(dp[len(cs) - 1][5])

main()","MOD = int(1e9) + 7

def main():
    cs = input().strip().lower()
    dp = [[0] * 13 for _ in range(len(cs))]
    base = 1
    for i in range(len(cs)):
        if cs[len(cs) - 1 - i] == '?':
            for pre in range(13):
                for next in range(10):
                    dp[i][(base * next + pre) % 13] += (i > 0 and dp[i - 1][pre] or (pre == 0 and 1 or 0))
                    dp[i][(base * next + pre) % 13] %= MOD
        else:
            next = int(cs[len(cs) - 1 - i])
            for pre in range(13):
                dp[i][(base * next + pre) % 13] += (i > 0 and dp[i - 1][pre] or (pre == 0 and 1 or 0))
                dp[i][(base * next + pre) % 13] %= MOD
        base = base * 10 % 13
    print(dp[len(cs) - 1][5])

main()"
CodeGen,avatar,Java,Python,atcoder_ABC148_F.py,"def main(args):
    N = int(input())
    u = int(input()) - 1
    v = int(input()) - 1
    edges = [[] for _ in range(N)]
    for i in range(N - 1):
        a = int(input()) - 1
        b = int(input()) - 1
        edges[a].append(b)
        edges[b].append(a)
    d = [int(i) for i in input().split()]
    for i in range(N):
        if d[i] == int(i) + 1:
            d[i] = 0
    d[u] = 0
    dfs(u, d, edges)
    e = [int(i) for i in input().split()]
    for i in range(N):
        if e[i] == int(i) + 1:
            e[i] = 0
    e[v] = 0
    dfs(v, e, edges)
    q = -1
    for i in range(N):
        if d[i] < e[i]:
            if e[i] > q:
                q = e[i]
    if q <= 0:
        print(0)
    else:
        print(q - 1)","def main():
    N = int(input())
    u = int(input()) - 1
    v = int(input()) - 1
    edges = [[] for _ in range(N)]
    for i in range(N - 1):
        a = int(input()) - 1
        b = int(input()) - 1
        edges[a].append(b)
        edges[b].append(a)
    d = [int(i) for i in input().split()]
    for i in range(N):
        if d[i] == int(i) + 1:
            d[i] = 0
    d[u] = 0
    dfs(u, d, edges)
    e = [int(i) for i in input().split()]
    for i in range(N):
        if e[i] == int(i) + 1:
            e[i] = 0
    e[v] = 0
    dfs(v, e, edges)
    q = -1
    for i in range(N):
        if d[i] < e[i]:
            if e[i] > q:
                q = e[i]
    if q <= 0:
        print(0)
    else:
        print(q - 1)
        
main()"
CodeGen,avatar,Java,Python,atcoder_ABC104_C.py,"class atcoder_ABC104_C {
    static final int INF = 100000;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int D = sc.nextInt();
        long G = sc.nextLong();
        int[] p = new int[D];
        int[] c = new int[D];
        for (int i = 0; i < D; i++) {
            p[i] = sc.nextInt();
            c[i] = sc.nextInt();
        }
        int min = INF;
        for (int bit = 0; bit < (1 << D); bit++) {
            int score = 0;
            int solve_num = 0;
            for (int i = 0; i < D; i++) {
                if ((bit & (1 << i))!= 0) {
                    score += 100 * (i + 1) * p[i] + c[i];
                    solve_num += p[i];
                }
            }
            if (score < G) {
                loop:
                for (int i = D - 1; i >= 0; i--) {
                    if ((bit & (1 << i)) == 0) {
                        for (int j = 0; j < p[i] - 1; j++) {
                            score += 100 * (i + 1);
                            solve_num++;
                            if (score >= G) {
                                break loop;
                            }
                        }
                    }
                }
            }
            if (score >= G) {
                min = Math.min(min, solve_num);
            }
        }
        System.out.println(min);
        sc.close();
    }
}","class atcoder_ABC104_C {
    static final int INF = 100000;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int D = sc.nextInt();
        long G = sc.nextLong();
        int[] p = new int[D];
        int[] c = new int[D];
        for (int i = 0; i < D; i++) {
            p[i] = sc.nextInt();
            c[i] = sc.nextInt();
        }
        int min = INF;
        for (int bit = 0; bit < (1 << D); bit++) {
            int score = 0;
            int solve_num = 0;
            for (int i = 0; i < D; i++) {
                if ((bit & (1 << i))!= 0) {
                    score += 100 * (i + 1) * p[i] + c[i];
                    solve_num += p[i];
                }
            }
            if (score < G) {
                loop:
                for (int i = D - 1; i >= 0; i--) {
                    if ((bit & (1 << i)) == 0) {
                        for (int j = 0; j < p[i] - 1; j++) {
                            score += 100 * (i + 1);
                            solve_num++;
                            if (score >= G) {
                                break loop;
                            }
                        }
                    }
                }
            }
            if (score >= G) {
                min = Math.min(min, solve_num);
            }
        }
        System.out.println(min);
        sc.close();
    }
}"
CodeGen,avatar,Java,Python,atcoder_ABC133_B.py,"import math
import sys

N = int(raw_input())
D = int(raw_input())
vectors = [[int(i) for i in raw_input().split()] for i in xrange(N)]

answer = 0
for i in xrange(N-1):
    for j in xrange(i+1,N):
        dist = 0
        for d in xrange(D):
            x = (vectors[i][d] - vectors[j][d])
            dist += (x * x)
        sq = math.sqrt(dist)
        answer += (abs(math.floor(sq) - sq) < 0.001 and 1 or 0)

print answer","import math
import sys

N, D = map(int, input().split())
vectors = [[int(i) for i in input().split()] for i in range(N)]

answer = 0
for i in range(N-1):
    for j in range(i+1,N):
        dist = 0
        for d in range(D):
            x = (vectors[i][d] - vectors[j][d])
            dist += (x * x)
        sq = math.sqrt(dist)
        answer += (abs(math.floor(sq) - sq) < 0.001 and 1 or 0)

print(answer)"
CodeGen,avatar,Java,Python,codeforces_31_A.py,"def main(args):
    sc = Scanner(System.in)
    n = sc.nextInt()
    a = [sc.nextInt() for _ in range(n)]
    f = 0
    for k in range(n):
        t = a[k]
        for i in range(n):
            for j in range(n - 1):
                if i!= j and t == (a[i] + a[j]):
                    f = 1
                    break
                if f == 1:
                    break
            if f == 1:
                break
        if f == 1:
            break
    if f == 1:
        print(k + 1 + "" "" + (j + 1) + "" "" + (i + 1))
    else:
        print(""-1"")

# Input:
# 5
# 1 2 3 4 5
# Output:
# 2 4 1","def main():
    n = int(input())
    a = [input() for _ in range(n)]
    f = 0
    for k in range(n):
        t = a[k]
        for i in range(n):
            for j in range(n - 1):
                if i!= j and t == (a[i] + a[j]):
                    f = 1
                    break
                if f == 1:
                    break
            if f == 1:
                break
        if f == 1:
            break
    if f == 1:
        print(k + 1 + "" "" + (j + 1) + "" "" + (i + 1))
    else:
        print(""-1"")
        
main()"
CodeGen,avatar,Java,Python,atcoder_ABC150_C.py,"def permutation(list, target, ans):
    if len(target) <= 1:
        list.append(ans + target)
    else:
        for i in range(0, len(target)):
            permutation(list, target[:i] + target[i+1:], ans + target[i])
    return list


def main():
    n = int(input())
    line = [[] for i in range(2)]
    for i in range(n):
        line[0].append(input())
    for i in range(n):
        line[1].append(input())
    number = """"
    for i in range(1, n+1):
        number += str(i)
    listA = []
    permutation(listA, number, """")
    sum = 0
    for j in range(0, len(line)):
        for i in range(0, len(listA)):
            if listA[i] == line[j][0]:
                if sum == 0:
                    sum += i
                else:
                    sum -= i
    print(abs(sum))","def permutation(list, target, ans):
    if len(target) <= 1:
        list.append(ans + target)
    else:
        for i in range(0, len(target)):
            permutation(list, target[:i] + target[i+1:], ans + target[i])
    return list


def main():
    n = int(input())
    line = [[] for i in range(2)]
    inputs = list(input().split())
    for i in range(n):
        line[0].append(inputs[i])
    inputs = list(input().split())
    for i in range(n):
        line[1].append(inputs[i])
    number = """"
    for i in range(1, n+1):
        number += str(i)
    listA = []
    permutation(listA, number, """")
    sum = 0
    for j in range(0, len(line)):
        for i in range(0, len(listA)):
            if listA[i] == line[j][0]:
                if sum == 0:
                    sum += i
                else:
                    sum -= i
    print(abs(sum))

main()"
CodeGen,avatar,Java,Python,codeforces_92_A.py,"def main(args):
    scn = Scanner(System.in)
    n = scn.nextInt()
    k = scn.nextInt()
    i = 1
    req = 1
    while k - req >= 0:
        if k - req >= 0:
            k = k - req
        else:
            break
        i += 1
        if i % n!= 0:
            req = i % n
        else:
            req = n
    print(k)","def main():
    n, k = map(int, input().split())
    i = 1
    req = 1
    while k - req >= 0:
        if k - req >= 0:
            k = k - req
        else:
            break
        i += 1
        if i % n!= 0:
            req = i % n
        else:
            req = n
    print(k)

main()"
CodeGen,avatar,Java,Python,codeforces_340_A.py,"def main(sh):
    s = scanner.Scanner(System.in)
    x = s.nextInt()
    y = s.nextInt()
    a = s.nextInt()
    b = s.nextInt()
    j = 2
    i = a
    x1 = 0
    y1 = 0
    c = 0
    ans = True
    c = max(x, y)
    if c > b:
        print(""0"")
        ans = False
    while c % min(x, y)!= 0 and ans:
        if x > y:
            c = x * j
            j += 1
        else:
            c = y * j
            j += 1
        if c > b:
            print(""0"")
            ans = False
            break
    if ans:
        i = a
        for i in range(a, b + 1):
            if i % c == 0:
                break
        if i!= b + 1:
            print(((b - i) // c) + 1)
        else:
            print(""0"")
    else:
        print(""0"")","def main():
    x, y, a, b = map(int, input().split())
    j = 2
    i = a
    x1 = 0
    y1 = 0
    c = 0
    ans = True
    c = max(x, y)
    if c > b:
        print(""0"")
        ans = False
    while c % min(x, y)!= 0 and ans:
        if x > y:
            c = x * j
            j += 1
        else:
            c = y * j
            j += 1
        if c > b:
            print(""0"")
            ans = False
            break
    if ans:
        i = a
        for i in range(a, b + 1):
            if i % c == 0:
                break
        if i!= b + 1:
            print(((b - i) // c) + 1)
        else:
            print(""0"")
        
main()"
CodeGen,avatar,Java,Python,codeforces_268_A.py,"def main(args):
    sc = Scanner(sys.stdin)
    n = int(sc.nextLine())
    h = [int(sc.nextInt()) for i in range(n)]
    g = [int(sc.nextInt()) for i in range(n)]
    for i in range(n):
        for j in range(n):
            if h[i] == g[j]:
                result += 1
    print(result)","def main():
    n = int(input())
    result = 0
    h = []
    g = []
    for i in range(n):
        h_val, g_val = map(int, input().split())
        h.append(h_val)
        g.append(g_val)
    for i in range(n):
        for j in range(n):
            if h[i] == g[j]:
                result += 1
    print(result)

main()"
CodeGen,avatar,Java,Python,atcoder_ABC143_D.py,"def find(li, from, target):
    low = from
    upp = len(li) - 1
    mid = (upp - low + 1) % 2 == 0 and (low + upp) / 2 + 1 or (low + upp) / 2
    if upp - low < 0:
        return 0
    elif li[from] >= target:
        return 0
    elif li[upp] < target:
        return upp - low + 1
    while upp - low > 1:
        if li[mid] >= target:
            upp = mid
        else:
            low = mid
        mid = (upp - low + 1) % 2 == 0 and (low + upp) / 2 + 1 or (low + upp) / 2
    return low - from + 1","def find(li, from, target):
    low = from
    upp = len(li) - 1
    mid = (upp - low + 1) % 2 == 0 and (low + upp) / 2 + 1 or (low + upp) / 2
    if upp - low < 0:
        return 0
    elif li[from] >= target:
        return 0
    elif li[upp] < target:
        return upp - low + 1
    while upp - low > 1:
        if li[mid] >= target:
            upp = mid
        else:
            low = mid
        mid = (upp - low + 1) % 2 == 0 and (low + upp) / 2 + 1 or (low + upp) / 2
    return low - from + 1"
CodeGen,avatar,Java,Python,atcoder_ABC132_A.py,"def main():
    s = raw_input()
    targ = list(s)
    map = {}
    for i in range(len(targ)):
        if not map.has_key(targ[i]):
            map[targ[i]] = 1
        else:
            map[targ[i]] += 1
    ok = True
    for c in map.keys():
        if map[c]!= 2:
            ok = False
            break
    if ok and len(map) == 2:
        print ""Yes""
    else:
        print ""No""

if __name__ == '__main__':
    main()","def main():
    s = input()
    targ = list(s)
    map = {}
    for i in range(len(targ)):
        if targ[i] not in map:
            map[targ[i]] = 1
        else:
            map[targ[i]] += 1
    ok = True
    for c in map.keys():
        if map[c]!= 2:
            ok = False
            break
    if ok and len(map) == 2:
        print(""Yes"")
    else:
        print(""No"")

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,atcoder_ABC169_C.py,"def main():
    sc = Scanner(sys.stdin)
    a = sc.next()
    b = sc.next()
    bChar = b.toCharArray()
    length = len(bChar)
    bStr = """"
    for i in range(length):
        if bChar[i]!= '.':
            bStr += bChar[i]
    bInt = int(bStr)
    result = (a * bInt) / 100
    print(result)



Input Format:

The first line contains an integer, a.
The second line contains a string, b.

Constraints:

1 <= a <= 100
1 <= len(b) <= 100
b contains only the characters '.' and '0' to '9'.

Output Format:

Output a single integer, the result.

Sample Input:

3
2.2
2.2

Sample Output:

2

Explanation:

The first input is a = 3, b = 2.2.
The second input is a = 3, b = 2.2.
The third input is a = 3, b = 2.2.
The output is 2.


import java.util.*;
import java.io.*;

public class atcoder_ABC169_C {
	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		long a = sc.nextLong();
		String b = sc.next();
		char[] bChar = b.toCharArray();
		int length = bChar.length;
		String bStr = """";
		for(int i = 0; i < length; i++) {
			if(bChar[i]!= '.') {
				bStr += bChar[i];
			}
		}
		int bInt = Integer.parseInt(bStr);
		long result = (a * bInt) / 100;
		System.out.println(result);
	}
}","def main():
    a, b = input().split()
    bChar = b.toCharArray()
    length = len(bChar)
    bStr = """"
    for i in range(length):
        if bChar[i]!= '.':
            bStr += bChar[i]
    bInt = int(bStr)
    result = (a * bInt) / 100
    print(result)

main()"
CodeGen,avatar,Java,Python,atcoder_AGC033_A.py,"def main(args):
    sc = Scanner(System.in)
    H = sc.nextInt()
    W = sc.nextInt()
    A = [['.' for x in range(W)] for y in range(H)]
    for i in range(H):
        row = sc.next()
        for j in range(W):
            A[i][j] = row[j]
            if A[i][j] == '#':
                start = [i, j, 0]
                queue.add(start)
    flag = [[0 for x in range(W)] for y in range(H)]
    ans = 0
    dx = [1, -1, 0, 0]
    dy = [0, 0, 1, -1]
    while not queue.isEmpty():
        temp = queue.remove()
        y = temp[0]
        x = temp[1]
        depth = temp[2]
        for i in range(4):
            if 0 <= y + dy[i] and y + dy[i] <= H - 1 and 0 <= x + dx[i] and x + dx[i] <= W - 1:
                if flag[y + dy[i]][x + dx[i]] == 0 and A[y + dy[i]][x + dx[i]] == '.':
                    flag[y + dy[i]][x + dx[i]] = 1
                    queue_add = [y + dy[i], x + dx[i], depth + 1]
                    queue.add(queue_add)
                    ans = depth + 1
    print(ans)

# Note:
# 1. The input matrix is a 2D array of characters.
# 2. The input matrix is guaranteed to be connected (no self-loops or multiple edges).
# 3. The input matrix is guaranteed to be fully connected (each vertex is reachable from every other vertex).
# 4. The input matrix is guaranteed to be a DAG.
# 5. The input matrix is guaranteed to be a tree.
# 6. The input matrix is guaranteed to be a forest.
# 7. The input matrix is guaranteed to be a connected graph.
# 8. The input matrix is guaranteed to be a bipartite graph.
# 9. The input matrix is guaranteed to be a bipartite graph.
# 10. The input matrix is guaranteed to be a tree.
# 11. The input matrix is guaranteed to be a DAG.
# 12. The input matrix is guaranteed to be a forest.
# 13. The input matrix is guaranteed to be a connected graph.
# 14. The input matrix is guaranteed to be a bipartite graph.
# 15. The input matrix is guaranteed to be a bipartite graph.
# 16. The input matrix is guaranteed to be a tree.
# 17. The input matrix is guaranteed to be a DAG.
# 18. The input matrix is guaranteed to be a forest.
# 19. The input matrix is guaranteed to be a connected graph.
# 20. The input matrix is guaranteed to be a bipartite graph.
# 21. The input matrix is guaranteed to be a bipartite graph.
# 22. The input matrix is guaranteed to be a tree.
# 23. The input matrix is guaranteed to be a DAG.
# 24. The input matrix is guaranteed to be a forest.
# 25. The input matrix is guaranteed to be a connected graph.
# 26. The input matrix is guaranteed to be a bipartite graph.
# 27. The input matrix is guaranteed to be a bipartite graph.
# 28. The input matrix is guaranteed to be a tree.
# 29. The input matrix is guaranteed to be a DAG.
# 30. The input matrix is guaranteed to be a forest.
# 31. The input matrix is guaranteed to be a connected graph.
# 32. The input matrix is guaranteed to be a bipartite graph.
# 33. The input matrix is guaranteed to be a bipartite graph.
# 34. The input matrix is guaranteed to be a tree.
# 35. The input matrix is guaranteed to be a DAG.
# 36. The input matrix is guaranteed to be a forest.
# 37. The input matrix is guaranteed to be a connected graph.
# 38. The input matrix is guaranteed to be a bipartite graph.
# 39. The input matrix is guaranteed to be a bipartite graph.
# 40. The input matrix is guaranteed to be a tree.
# 41. The input matrix is guaranteed to be a DAG.
# 42. The input matrix is guaranteed to be a forest.
# 43. The input matrix is guaranteed to be a connected graph.
# 44. The input matrix is guaranteed to be a bipartite graph.
# 45. The input matrix is guaranteed to be a bipartite graph.
# 46. The input matrix is guaranteed to be a tree.
# 47. The input matrix is guaranteed to be a DAG.
# 48. The input matrix is guaranteed to be a forest.
# 49. The input matrix is guaranteed to be a connected graph.
# 50. The input matrix is guaranteed to be a bipartite graph.
# 51. The input matrix is guaranteed to be a bipartite graph.
# 52. The input matrix is guaranteed to be a tree.
# 53. The input matrix is guaranteed to be a DAG.
# 54. The input matrix is guaranteed to be a forest.
# 55. The input matrix is guaranteed to be a connected graph.
# 56. The input matrix is guaranteed to be a bipartite graph.
# 57. The input matrix is guaranteed to be a bipartite graph.
# 58. The input matrix is guaranteed to be a tree.
# 59. The input matrix is guaranteed to be a DAG.
# 60. The input matrix is guaranteed to be a forest.
# 61. The input matrix is guaranteed to be a connected graph.
# 62. The input matrix is guaranteed to be a bipartite graph.
# 63. The input matrix is guaranteed to be a bipartite graph.
# 64. The input matrix is guaranteed to be a tree.
# 65. The input matrix is guaranteed to be a DAG.
# 66. The input matrix is guaranteed to be a forest.
# 67. The input matrix is guaranteed to be a connected graph.
# 68. The input matrix is guaranteed to be a bipartite graph.
# 69. The input matrix is guaranteed to be a bipartite graph.
# 70. The input matrix is guaranteed to be a tree.
# 71. The input matrix is guaranteed to be a DAG.
# 72. The input matrix is guaranteed to be a forest.
# 73. The input matrix is guaranteed to be a connected graph.
# 74. The input matrix is guaranteed to be a bipartite graph.
# 75. The input matrix is guaranteed to be a bipartite graph.
# 76. The input","def main(args):
    H, W = map(int, input().split())
    A = [list(input()) for _ in range(H)]
    for i in range(H):
        row = sc.next()
        for j in range(W):
            A[i][j] = row[j]
            if A[i][j] == '#':
                start = [i, j, 0]
                queue.add(start)
    flag = [[0 for x in range(W)] for y in range(H)]
    ans = 0
    dx = [1, -1, 0, 0]
    dy = [0, 0, 1, -1]
    while not queue.isEmpty():
        temp = queue.remove()
        y = temp[0]
        x = temp[1]
        depth = temp[2]
        for i in range(4):
            if 0 <= y + dy[i] and y + dy[i] <= H - 1 and 0 <= x + dx[i] and x + dx[i] <= W - 1:
                if flag[y + dy[i]][x + dx[i]] == 0 and A[y + dy[i]][x + dx[i]] == '.':
                    flag[y + dy[i]][x + dx[i]] = 1
                    queue_add = [y + dy[i], x + dx[i], depth + 1]
                    queue.add(queue_add)
                    ans = depth + 1
    print(ans)

"
CodeGen,avatar,Java,Python,atcoder_AGC004_B.py,"def main ():
    N = int(input())
    x = long(input())
    srimeList = [long(input()) for _ in range(N)]
    costList = [ [long(input()) for _ in range(N)] for _ in range(N)]
    for i in range(N):
        costList[i][0] = srimeList[i]
        for castNum in range(1,N):
            costList[i][castNum] = min(costList[i][castNum-1], srimeList[(i-castNum+N)%N])
    result = [i*x+sum(costList[i][0:]) for i in range(N)]
    print(min(result))

main ()","def main ():
    N, x = map(int, input().split())
    srimeList = list(map(int, input().split()))
    costList = [[0] * N for _ in range(N)]
    for i in range(N):
        costList[i][0] = srimeList[i]
        for castNum in range(1,N):
            costList[i][castNum] = min(costList[i][castNum-1], srimeList[(i-castNum+N)%N])
    result = [i*x+sum(costList[i][0:]) for i in range(N)]
    print(min(result))

main ()"
CodeGen,avatar,Java,Python,codeforces_356_A.py,"class codeforces_356_A {
    def main(args):
        in = open(args[0])
        n = int(in.readline())
        left = set()
        answer = [0] * n
        for i in range(n):
            left.add(i)
        q = int(in.readline())
        while q > 0:
            l = int(in.readline()) - 1
            r = int(in.readline()) - 1
            win = int(in.readline())
            while left.ceiling(l)!= None and left.ceiling(l) <= r:
                curr = left.ceiling(l)
                answer[curr] = win
                left.remove(curr)
            answer[win - 1] = 0
            left.add(win - 1)
            q -= 1
        ans = """"
        for i in range(n):
            ans += str(answer[i]) + ""\n""
        print(ans)


    def test(args):
        in = open(args[0])
        n = int(in.readline())
        left = set()
        answer = [0] * n
        for i in range(n):
            left.add(i)
        q = int(in.readline())
        while q > 0:
            l = int(in.readline()) - 1
            r = int(in.readline()) - 1
            win = int(in.readline())
            while left.ceiling(l)!= None and left.ceiling(l) <= r:
                curr = left.ceiling(l)
                answer[curr] = win
                left.remove(curr)
            answer[win - 1] = 0
            left.add(win - 1)
            q -= 1
        ans = """"
        for i in range(n):
            ans += str(answer[i]) + ""\n""
        print(ans)

}


class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader() {
        br = new BufferedReader(new
                                InputStreamReader(System.in));
    }

    String next() {
        while (st == null ||!st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() {
        return Integer.parseInt(next());
    }

    long nextLong() {
        return Long.parseLong(next());
    }

    double nextDouble() {
        return Double.parseDouble(next());
    }

    String nextLine() {
        String str = """";
        try {
            str = br.readLine();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}","class codeforces_356_A {
    def main(args):
        in = open(args[0])
        n = int(in.readline())
        left = set()
        answer = [0] * n
        for i in range(n):
            left.add(i)
        q = int(in.readline())
        while q > 0:
            l = int(in.readline()) - 1
            r = int(in.readline()) - 1
            win = int(in.readline())
            while left.ceiling(l)!= None and left.ceiling(l) <= r:
                curr = left.ceiling(l)
                answer[curr] = win
                left.remove(curr)
            answer[win - 1] = 0
            left.add(win - 1)
            q -= 1
        ans = """"
        for i in range(n):
            ans += str(answer[i]) + ""\n""
        print(ans)


    def test(args):
        in = open(args[0])
        n = int(in.readline())
        left = set()
        answer = [0] * n
        for i in range(n):
            left.add(i)
        q = int(in.readline())
        while q > 0:
            l = int(in.readline()) - 1
            r = int(in.readline()) - 1
            win = int(in.readline())
            while left.ceiling(l)!= None and left.ceiling(l) <= r:
                curr = left.ceiling(l)
                answer[curr] = win
                left.remove(curr)
            answer[win - 1] = 0
            left.add(win - 1)
            q -= 1
        ans = """"
        for i in range(n):
            ans += str(answer[i]) + ""\n""
        print(ans)

}


class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader() {
        br = new BufferedReader(new
                                InputStreamReader(System.in));
    }

    String next() {
        while (st == null ||!st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() {
        return Integer.parseInt(next());
    }

    long nextLong() {
        return Long.parseLong(next());
    }

    double nextDouble() {
        return Double.parseDouble(next());
    }

    String nextLine() {
        String str = """";
        try {
            str = br.readLine();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}"
CodeGen,avatar,Java,Python,atcoder_ABC125_A.py,"def main(sec,per_num,max_sec):
    ans_num = 0
    for i in range(sec,max_sec,sec):
        ans_num += per_num
    print(ans_num)","def main(sec,per_num,max_sec):
    ans_num = 0
    for i in range(sec,max_sec,sec):
        ans_num += per_num
    print(ans_num)"
CodeGen,avatar,Java,Python,atcoder_ABC164_D.py,"def main(args):
    sc = Scanner(sys.stdin)
    S = sc.next()
    N = len(S)
    mod_arr = [0] * N
    mod_cnt = [0] * 2019
    radix = 1
    for i in range(N):
        tmp = (ord(S[N - 1 - i]) - ord('0')) * radix % 2019
        if i!= 0:
            tmp = (tmp + mod_arr[i - 1]) % 2019
        mod_arr[i] = tmp
        mod_cnt[tmp] += 1
        radix = radix * 10 % 2019
    ans = 0
    mod_cnt[0] += 1
    for i in range(2019):
        ans += mod_cnt[i] * (mod_cnt[i] - 1) // 2
    print(ans)","def main():
    S = input()
    N = len(S)
    mod_arr = [0] * N
    mod_cnt = [0] * 2019
    radix = 1
    for i in range(N):
        tmp = (ord(S[N - 1 - i]) - ord('0')) * radix % 2019
        if i!= 0:
            tmp = (tmp + mod_arr[i - 1]) % 2019
        mod_arr[i] = tmp
        mod_cnt[tmp] += 1
        radix = radix * 10 % 2019
    ans = 0
    mod_cnt[0] += 1
    for i in range(2019):
        ans += mod_cnt[i] * (mod_cnt[i] - 1) // 2
    print(ans)
    
main()"
CodeGen,avatar,Java,Python,atcoder_AGC002_A.py,"def main(args):
    scanner = Scanner(System.in)
    a = scanner.nextint()
    b = scanner.nextint()
    if a > 0:
        print(""Positive"")
    elif b >= 0:
        print(""Zero"")
    elif (b - a + 1) % 2 == 0:
        print(""Positive"")
    else:
        print(""Negative"")","def main():
    a, b = map(int, input().split())
    if a > 0:
        print(""Positive"")
    elif b >= 0:
        print(""Zero"")
    elif (b - a + 1) % 2 == 0:
        print(""Positive"")
    else:
        print(""Negative"")

main()"
CodeGen,avatar,Java,Python,atcoder_ABC153_A.py,"def main ():
    try:
        in = open ( 'in.txt', 'r' )
        str = in.readline ().split ('' )
        h = int ( str [ 0 ] )
        a = int ( str [ 1 ] )
        num = 0
        for i in range ( 1, h + 1 ):
            h = h - a
            num += 1
        print ( num )
    except IOError:
        print ( 'No input file' )

# Run the program
main ()","def main ():
    try:
        h, a = map(int, input ().split ())
        num = 0
        while h > 0:
            h = h - a
            num += 1
        print ( num )
    except IOError:
        print ( 'No input file' )

# Run the program
main ()"
CodeGen,avatar,Java,Python,atcoder_AGC021_B.py,"def main(args):
    N = int(input())
    x = [int(i) for i in input().split()]
    y = [int(i) for i in input().split()]
    for i in range(N):
        thetas = []
        for j in range(N):
            if i == j:
                continue
            thetas.append(math.atan2(y[j] - y[i], x[j] - x[i]))
        thetas.sort(key=lambda x: x if x < 2 * math.pi else 2 * math.pi - x)
        thetas.append(thetas[0] + 2 * math.pi)
        ans = 0
        for k in range(N - 1):
            ans = max(ans, thetas[k + 1] - thetas[k] - math.pi)
        print(ans / (math.pi * 2))","import math

def main():
    N = int(input())
    x = []
    y = []

    for i in range(N):
        x_i, y_i = map(int, input().split())
        x.append(x_i)
        y.append(y_i)
    for i in range(N):
        thetas = []
        for j in range(N):
            if i == j:
                continue
            thetas.append(math.atan2(y[j] - y[i], x[j] - x[i]))
        thetas.sort(key=lambda x: x if x < 2 * math.pi else 2 * math.pi - x)
        thetas.append(thetas[0] + 2 * math.pi)
        ans = 0
        for k in range(N - 1):
            ans = max(ans, thetas[k + 1] - thetas[k] - math.pi)
        print(ans / (math.pi * 2))
    
main()"
CodeGen,avatar,Java,Python,atcoder_ABC123_C.py,"class atcoder_ABC123_C {
    def main(args):
        N = int(sc.next())
        min = 0
        for i in range(5):
            if i == 0:
                min = sc.next()
            else:
                min = min if min > sc.next() else sc.next()
        print(int(round(N/min)+4))
    def p(ans):
        print(ans)
    def p(int ans):
        print(ans)
    def p():
        print()
    def p(long ans):
        print(ans)
    def p(double ans):
        print(ans)
}




import java.util.Scanner;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Random;
import java.util.Scanner;
public class atcoder_ABC123_C {
    private static Scanner sc = new Scanner(System.in);
    public static void main(String[] args) {
        long N = sc.nextLong();
        long min = 0;
        for (int i = 0; i < 5; i++) {
            if (i == 0) {
                min = sc.nextLong();
            } else {
                min = min if min > sc.nextLong() else sc.nextLong();
            }
        }
        p((long) Math.ceil((double) N / min) + 4);
    }
    private static void p(String ans) {
        System.out.println(ans);
    }
    private static void p(int ans) {
        System.out.println(ans);
    }
    private static void p() {
        System.out.println();
    }
    private static void p(long ans) {
        System.out.println(ans);
    }
    private static void p(double ans) {
        System.out.println(ans);
    }
}","class atcoder_ABC123_C {
    def main(args):
        N = int(sc.next())
        min = 0
        for i in range(5):
            if i == 0:
                min = sc.next()
            else:
                min = min if min > sc.next() else sc.next()
        print(int(round(N/min)+4))
    def p(ans):
        print(ans)
    def p(int ans):
        print(ans)
    def p():
        print()
    def p(long ans):
        print(ans)
    def p(double ans):
        print(ans)
}




import java.util.Scanner;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Random;
import java.util.Scanner;
public class atcoder_ABC123_C {
    private static Scanner sc = new Scanner(System.in);
    public static void main(String[] args) {
        long N = sc.nextLong();
        long min = 0;
        for (int i = 0; i < 5; i++) {
            if (i == 0) {
                min = sc.nextLong();
            } else {
                min = min if min > sc.nextLong() else sc.nextLong();
            }
        }
        p((long) Math.ceil((double) N / min) + 4);
    }
    private static void p(String ans) {
        System.out.println(ans);
    }
    private static void p(int ans) {
        System.out.println(ans);
    }
    private static void p() {
        System.out.println();
    }
    private static void p(long ans) {
        System.out.println(ans);
    }
    private static void p(double ans) {
        System.out.println(ans);
    }
}"
CodeGen,avatar,Java,Python,atcoder_ABC167_D.py,"def doIt():
    N = int(input())
    K = long(input())
    A = [int(i) - 1 for i in input().split()]
    used = set()
    idx = [0] * N
    pos = [0] * N
    next = 0
    cur = 0
    while not used.add(next):
        used.add(next)
        idx[next] = cur
        pos[cur] = next
        next = A[next]
        cur += 1
    a = (10000 * (long) cur - K + idx[next]) % (long) cur + idx[next]
    b = idx[next]
    ans = (a // b) + 1
    if b > K:
        ans = K
    print(pos[ans] + 1)

if __name__ == '__main__':
    doIt()","def doIt():
    N, K = map(int, input().split())
    A = [int(i) - 1 for i in input().split()]
    used = set()
    idx = [0] * N
    pos = [0] * N
    next = 0
    cur = 0
    while next not in used:
        used.add(next)
        idx[next] = cur
        pos[cur] = next
        next = A[next]
        cur += 1
    a = cur - idx[next]
    b = idx[next]
    ans = (10000 * a + K - b) % a + b
    if b > K:
        ans = K
    print(pos[ans] + 1)

if __name__ == '__main__':
    doIt()"
CodeGen,avatar,Java,Python,atcoder_ABC168_B.py,"def main(args):
    in = raw_input()
    K = int(in.next())
    S = in.next()
    if len(S) <= K:
        print S
    else:
        print S[0:K] + ""...""","def main():
    K = int(input())
    S = input()
    if len(S) <= K:
        print(S)
    else:
        print(S[0:K] + ""..."")
    
main()"
CodeGen,avatar,Java,Python,codeforces_32_B.py,"def main(args):
    in = sys.stdin.readline()
    n = in.strip().replace('.', '')
    s = False
    for i in range(len(n)):
        if n[i] == '.':
            if s:
                print(1)
                s = False
            else:
                print(0)
        else:
            if s:
                print(2)
                s = False
            else:
                s = True
    in.close()","import sys

def main():
    input = sys.stdin.readline()
    n = input.strip()
    s = False
    for i in range(len(n)):
        if n[i] == '.':
            if s:
                print(1, end="""")
                s = False
            else:
                print(0, end="""")
        else:
            if s:
                print(2, end="""")
                s = False
            else:
                s = True
    
main()"
CodeGen,avatar,Java,Python,atcoder_ABC162_D.py,"def main(args):
    sc = Scanner(System.in)
    n = sc.nextInt()
    s = sc.next()
    rc = 0
    gc = 0
    bc = 0
    for i in range(len(s)):
        if s[i] == 'R':
            rc += 1
        elif s[i] == 'G':
            gc += 1
        else:
            bc += 1
    result = rc * gc * bc
    for i in range(1, n + 1):
        for k in range(i + 1, n + 1):
            if (i + k) % 2 == 0:
                is = s[i - 1]
                ks = s[k - 1]
                js = s[(i + k) // 2 - 1]
                if is!= ks and ks!= js and js!= is:
                    result -= 1
    print(result)","def main():
    n = int(input())
    s = input()
    rc = 0
    gc = 0
    bc = 0
    for i in range(len(s)):
        if s[i] == 'R':
            rc += 1
        elif s[i] == 'G':
            gc += 1
        else:
            bc += 1
    result = rc * gc * bc
    for i in range(1, n + 1):
        for k in range(i + 1, n + 1):
            if (i + k) % 2 == 0:
                is_ = s[i - 1]
                ks = s[k - 1]
                js = s[(i + k) // 2 - 1]
                if is_!= ks and ks!= js and js!= is_:
                    result -= 1
    print(result)
    
main()"
CodeGen,avatar,Java,Python,atcoder_ARC062_B.py,"class atcoder_ARC062_B {
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self, testNumber, inputReader, printWriter):
            S = inputReader.next()
            score = 0
            for i in range(len(S)):
                my = i % 2 == 0 and 'g' or 'p'
                his = S[i]
                if my!= his:
                    score += my == 'p' and 1 or -1
            printWriter.println(score)
    class InputReader:
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream), 32768)
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self, testNumber, inputReader, printWriter):
            S = inputReader.next()
            score = 0
            for i in range(len(S)):
                my = i % 2 == 0 and 'g' or 'p'
                his = S[i]
                if my!= his:
                    score += my == 'p' and 1 or -1
            printWriter.println(score)
    class InputReader:
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream), 32768)
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self, testNumber, inputReader, printWriter):
            S = inputReader.next()
            score = 0
            for i in range(len(S)):
                my = i % 2 == 0 and 'g' or 'p'
                his = S[i]
                if my!= his:
                    score += my == 'p' and 1 or -1
            printWriter.println(score)
    class InputReader:
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream), 32768)
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self, testNumber, inputReader, printWriter):
            S = inputReader.next()
            score = 0
            for i in range(len(S)):
                my = i % 2 == 0 and 'g' or 'p'
                his = S[i]
                if my!= his:
                    score += my == 'p' and 1 or -1
            printWriter.println(score)
    class InputReader:
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream), 32768)
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self, testNumber, inputReader, printWriter):
            S = inputReader.next()
            score = 0
            for i in range(len(S)):
                my = i % 2 == 0 and 'g' or 'p'
                his = S[i]
                if my!= his:
                    score += my == 'p' and 1 or -1
            printWriter.println(score)
    class InputReader:
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream), 32768)
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self","class atcoder_ARC062_B {
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self, testNumber, inputReader, printWriter):
            S = inputReader.next()
            score = 0
            for i in range(len(S)):
                my = i % 2 == 0 and 'g' or 'p'
                his = S[i]
                if my!= his:
                    score += my == 'p' and 1 or -1
            printWriter.println(score)
    class InputReader:
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream), 32768)
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self, testNumber, inputReader, printWriter):
            S = inputReader.next()
            score = 0
            for i in range(len(S)):
                my = i % 2 == 0 and 'g' or 'p'
                his = S[i]
                if my!= his:
                    score += my == 'p' and 1 or -1
            printWriter.println(score)
    class InputReader:
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream), 32768)
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self, testNumber, inputReader, printWriter):
            S = inputReader.next()
            score = 0
            for i in range(len(S)):
                my = i % 2 == 0 and 'g' or 'p'
                his = S[i]
                if my!= his:
                    score += my == 'p' and 1 or -1
            printWriter.println(score)
    class InputReader:
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream), 32768)
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self, testNumber, inputReader, printWriter):
            S = inputReader.next()
            score = 0
            for i in range(len(S)):
                my = i % 2 == 0 and 'g' or 'p'
                his = S[i]
                if my!= his:
                    score += my == 'p' and 1 or -1
            printWriter.println(score)
    class InputReader:
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream), 32768)
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self, testNumber, inputReader, printWriter):
            S = inputReader.next()
            score = 0
            for i in range(len(S)):
                my = i % 2 == 0 and 'g' or 'p'
                his = S[i]
                if my!= his:
                    score += my == 'p' and 1 or -1
            printWriter.println(score)
    class InputReader:
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream), 32768)
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
    def main(args):
        inputStream = sys.stdin
        outputStream = sys.stdout
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        TaskD = TaskD()
        TaskD.solve(1, inputReader, printWriter)
        printWriter.close()
    class TaskD:
        def solve(self"
CodeGen,avatar,Java,Python,atcoder_ABC140_D.py,"def main ():
    N = int(input())
    K = int(input())
    S = input()
    c1 = S.decode('ascii')
    c3 = S.decode('ascii')
    flag = False
    count = 0
    for i in range(N):
        if flag and c1[i] == 'R':
            flag = False
            count += 1
        if count == K:
            break
        if c1[i] == 'L':
            flag = True
            c1[i] = 'R'
        if c3[i] == 'L':
            flag = False
            count += 1
        if count == K:
            break
        if c3[i] == 'R':
            flag = True
            c3[i] = 'L'
    S1 = ''.join(c1)
    S3 = ''.join(c3)
    count = 1
    bef = S1[0]
    for i in range(1,N):
        if S1[i] == bef:
            count += 1
        else:
            bef = S1[i]
            count += 1
    count = 1
    bef = S3[0]
    for i in range(1,N):
        if S3[i] == bef:
            count += 1
        else:
            bef = S3[i]
            count += 1
    print(max(sum(count-1 for i in range(N)),sum(count-1 for i in range(N))))","def main ():
    N, K = map(int, input().split())
    S = input()
    c1 = list(S)
    c3 = list(S)
    flag = False
    count = 0
    for i in range(N):
        if flag and c1[i] == 'R':
            flag = False
            count += 1
        if count == K:
            break
        if c1[i] == 'L':
            flag = True
            c1[i] = 'R'
        if c3[i] == 'L':
            flag = False
            count += 1
        if count == K:
            break
        if c3[i] == 'R':
            flag = True
            c3[i] = 'L'
    S1 = ''.join(c1)
    S3 = ''.join(c3)
    count = 1
    bef = S1[0]
    for i in range(1,N):
        if S1[i] == bef:
            count += 1
        else:
            bef = S1[i]
            count += 1
    count = 1
    bef = S3[0]
    for i in range(1,N):
        if S3[i] == bef:
            count += 1
        else:
            bef = S3[i]
            count += 1
    print(max(sum(count-1 for i in range(N)),sum(count-1 for i in range(N))))
    
main ()"
CodeGen,avatar,Java,Python,codeforces_546_A.py,"import java.util.Scanner ; public class codeforces_546_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; long pandu, vundu, urdu, c = 0 ; pandu = sc.nextLong ( ) ; vundu = sc.nextLong ( ) ; urdu = sc.nextLong ( ) ; for i in range ( 1, urdu + 1 ) : c += i * pandu ; if c < vundu : print ( ""0"" ) ; else : print ( c - vundu ) ; } }","import java.util.Scanner ; public class codeforces_546_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; long pandu, vundu, urdu, c = 0 ; pandu = sc.nextLong ( ) ; vundu = sc.nextLong ( ) ; urdu = sc.nextLong ( ) ; for i in range ( 1, urdu + 1 ) : c += i * pandu ; if c < vundu : print ( ""0"" ) ; else : print ( c - vundu ) ; } }"
CodeGen,avatar,Java,Python,atcoder_AGC037_E.py,"import java.util.Scanner ; public class atcoder_AGC037_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; try { final int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; StringBuilder S = new StringBuilder ( sc.next ( ) ) ; boolean firstTime = true ; int step = 1 ; while ( K > 0 ) { StringBuilder T = new StringBuilder ( S.toString ( ) ) ; T.reverse ( ) ; StringBuilder revU = new StringBuilder ( S.toString ( ) + T.toString ( ) ) ; revU.reverse ( ) ; String sDash = S.toString ( ) ; for ( int i = N ; i >= 0 ; i -= step ) { String tmp = revU.substring ( i, i + N ) ; if ( sDash.compareTo ( tmp ) > 0 ) { sDash = tmp ; } else { if (! firstTime ) { break ; } } } if ( firstTime ) { firstTime = false ; if ( Math.pow ( 2, K ) > N ) { char c = sDash.charAt ( 0 ) ; for ( int i = 0 ; i < N ; i ++ ) { System.out.print ( c ) ; } System.out.println ( ) ; System.exit ( 0 ) ; } } else { step += step ; } K -- ; S = new StringBuilder ( sDash ) ; S.reverse ( ) ; } System.out.println ( S.reverse ( ) ) ; } finally { sc.close ( ) ; } } }","import java.util.Scanner ; public class atcoder_AGC037_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; try { final int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; StringBuilder S = new StringBuilder ( sc.next ( ) ) ; boolean firstTime = true ; int step = 1 ; while ( K > 0 ) { StringBuilder T = new StringBuilder ( S.toString ( ) ) ; T.reverse ( ) ; StringBuilder revU = new StringBuilder ( S.toString ( ) + T.toString ( ) ) ; revU.reverse ( ) ; String sDash = S.toString ( ) ; for ( int i = N ; i >= 0 ; i -= step ) { String tmp = revU.substring ( i, i + N ) ; if ( sDash.compareTo ( tmp ) > 0 ) { sDash = tmp ; } else { if (! firstTime ) { break ; } } } if ( firstTime ) { firstTime = false ; if ( Math.pow ( 2, K ) > N ) { char c = sDash.charAt ( 0 ) ; for ( int i = 0 ; i < N ; i ++ ) { System.out.print ( c ) ; } System.out.println ( ) ; System.exit ( 0 ) ; } } else { step += step ; } K -- ; S = new StringBuilder ( sDash ) ; S.reverse ( ) ; } System.out.println ( S.reverse ( ) ) ; } finally { sc.close ( ) ; } } }"
CodeGen,avatar,Java,Python,atcoder_ABC124_A.py,"def main(args):
    sc = Scanner(System.in)
    a = int(sc.next())
    b = int(sc.next())
    sum = 0
    for i in range(2):
        if a >= b:
            sum += a
            a -= 1
        else:
            sum += b
            b -= 1
    print(sum)","def main():
    a, b = map(int, input().split())
    sum = 0
    for i in range(2):
        if a >= b:
            sum += a
            a -= 1
        else:
            sum += b
            b -= 1
    print(sum)
    
main()"
CodeGen,avatar,Java,Python,atcoder_ABC124_C.py,"import java.io.InputStreamReader
import java.io.BufferedReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.util.StringTokenizer
import java.io.IOException
import java.io.InputStreamReader
import java.io.InputStream
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.util.StringTokenizer
import java.io.IOException
import java.io.InputStreamReader
import java.io.InputStream
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.","import java.io.InputStreamReader
import java.io.BufferedReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.util.StringTokenizer
import java.io.IOException
import java.io.InputStreamReader
import java.io.InputStream
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.util.StringTokenizer
import java.io.IOException
import java.io.InputStreamReader
import java.io.InputStream
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.InputStream
import java.io.OutputStream
import java.io.PrintWriter
import java.io.IOException
import java.io."
CodeGen,avatar,Java,Python,codeforces_644_B.py,"def main(args):
    n = int(input())
    b = int(input())
    ans = [0] * n
    q = []
    for i in range(n):
        t = int(input())
        d = int(input())
        while len(q) > 0 and q[0] <= t:
            q.pop(0)
        if len(q) <= b:
            ans[i] = (q.__len__() == 0) and t or q[-1] + d
            q.append(ans[i])
        else:
            ans[i] = -1
    for i in range(n):
        print(ans[i], end=' ')
    print()","def main(): 
    n, b = map(int, input().split())
    ans = [0] * n
    q = []
    for i in range(n):
        t, d = map(int, input().split())
        while len(q) > 0 and q[0] <= t:
            q.pop(0)
        if len(q) <= b:
            ans[i] = (q.__len__() == 0) and t or q[-1] + d
            q.append(ans[i])
        else:
            ans[i] = -1
    for i in range(n):
        print(ans[i], end=' ')
    print()

main()"
CodeGen,avatar,Java,Python,atcoder_ABC170_A.py,"def main():
    try:
        br = BufferedReader(InputStreamReader(System.in))
        pw = PrintWriter(System.out)
        input_array = br.readline().split(' ')
        result = 0
        for str in input_array:
            result += 1
            if '0' == str:
                break
        pw.println(result)
        br.close()
        pw.close()
    except IOException as e:
        print('Error:'+ str(e))","def main():
    try:
        input_array = input().split()
        result = 0
        for str in input_array:
            result += 1
            if ""0"" == str:
                break
        print(result)
    except IOException as e:
        print('Error:'+ str(e))
        
main()"
CodeGen,avatar,Java,Python,atcoder_ABC154_A.py,"def main(args):
    in = open(args[0], 'r')
    str = in.readline().split(' ')
    st = list(map(int, in.readline().split(' ')))
    a = st[0]
    b = st[1]
    u = in.readline()
    if u == str[0]:
        return str[0] +'' + str[1]
    else:
        return str[0] +'' + str[1]

print main(sys.argv[1:])","def main():
    str = input().split()
    st = list(map(int, input().split()))
    a = st[0]
    b = st[1]
    u = input()
    if u == str[0]:
        print(a-1, b)
    else:
        print(a, b-1)

main()"
CodeGen,avatar,Java,Python,codeforces_106_B.py,"import java.util.Arrays ; import java.util.* ; import java.io.PrintWriter ; import java.util.Scanner ; 
def main ( ): 
    input = java.io.BufferedReader ( java.io.InputStreamReader ( System.in ) ) ; 
    output = java.io.PrintWriter ( java.io.OutputStreamWriter ( System.out ) ) ; 
    n = int ( input.readLine ( ) ) ; 
    vec = [ [ int ( x ) for x in input.readLine ( ).split ( "" "" ) ] for i in range ( n ) ] ; 
    ans = 500 ; 
    ansprice = 20000 ; 
    for i in range ( n ): 
        fl = 1 ; 
        for j in range ( n ): 
            if ( vec [ i ] [ 0 ] < vec [ j ] [ 0 ] and vec [ i ] [ 1 ] < vec [ j ] [ 1 ] and vec [ i ] [ 2 ] < vec [ j ] [ 2 ] ): 
                fl = 0 ; 
        if ( fl == 1 ): 
            if ( vec [ i ] [ 3 ] < ansprice ): 
                ansprice = vec [ i ] [ 3 ] ; 
                ans = i + 1 ; 
    output.println ( ans ) ; 
    output.close ( ) ; 


import java.util.Arrays ; import java.util.* ; import java.io.PrintWriter ; import java.util.Scanner ; 
public class codeforces_106_B { 
    public static void main ( String [ ] args ) { 
        Scanner input = new Scanner ( System.in ) ; 
        PrintWriter output = new PrintWriter ( System.out ) ; 
        int n = input.nextInt ( ) ; 
        int [ ] [ ] vec = new int [ n ] [ 4 ] ; 
        for ( int i = 0 ; i < n ; i ++ ) { 
            vec [ i ] [ 0 ] = input.nextInt ( ) ; 
            vec [ i ] [ 1 ] = input.nextInt ( ) ; 
            vec [ i ] [ 2 ] = input.nextInt ( ) ; 
            vec [ i ] [ 3 ] = input.nextInt ( ) ; 
        } 
        int ans = 500 ; 
        int ansprice = 20000 ; 
        for ( int i = 0 ; i < n ; i ++ ) { 
            int fl = 1 ; 
            for ( int j = 0 ; j < n ; j ++ ) { 
                if ( vec [ i ] [ 0 ] < vec [ j ] [ 0 ] and vec [ i ] [ 1 ] < vec [ j ] [ 1 ] and vec [ i ] [ 2 ] < vec [ j ] [ 2 ] ) { 
                    fl = 0 ; 
                } 
            } 
            if ( fl == 1 ) { 
                if ( vec [ i ] [ 3 ] < ansprice ) { 
                    ansprice = vec [ i ] [ 3 ] ; 
                    ans = i + 1 ; 
                } 
            } 
        } 
        output.println ( ans ) ; 
        output.close ( ) ; 
    } 
}","import java.util.Arrays ; import java.util.* ; import java.io.PrintWriter ; import java.util.Scanner ; 
def main ( ): 
    input = java.io.BufferedReader ( java.io.InputStreamReader ( System.in ) ) ; 
    output = java.io.PrintWriter ( java.io.OutputStreamWriter ( System.out ) ) ; 
    n = int ( input.readLine ( ) ) ; 
    vec = [ [ int ( x ) for x in input.readLine ( ).split ( "" "" ) ] for i in range ( n ) ] ; 
    ans = 500 ; 
    ansprice = 20000 ; 
    for i in range ( n ): 
        fl = 1 ; 
        for j in range ( n ): 
            if ( vec [ i ] [ 0 ] < vec [ j ] [ 0 ] and vec [ i ] [ 1 ] < vec [ j ] [ 1 ] and vec [ i ] [ 2 ] < vec [ j ] [ 2 ] ): 
                fl = 0 ; 
        if ( fl == 1 ): 
            if ( vec [ i ] [ 3 ] < ansprice ): 
                ansprice = vec [ i ] [ 3 ] ; 
                ans = i + 1 ; 
    output.println ( ans ) ; 
    output.close ( ) ; 


import java.util.Arrays ; import java.util.* ; import java.io.PrintWriter ; import java.util.Scanner ; 
public class codeforces_106_B { 
    public static void main ( String [ ] args ) { 
        Scanner input = new Scanner ( System.in ) ; 
        PrintWriter output = new PrintWriter ( System.out ) ; 
        int n = input.nextInt ( ) ; 
        int [ ] [ ] vec = new int [ n ] [ 4 ] ; 
        for ( int i = 0 ; i < n ; i ++ ) { 
            vec [ i ] [ 0 ] = input.nextInt ( ) ; 
            vec [ i ] [ 1 ] = input.nextInt ( ) ; 
            vec [ i ] [ 2 ] = input.nextInt ( ) ; 
            vec [ i ] [ 3 ] = input.nextInt ( ) ; 
        } 
        int ans = 500 ; 
        int ansprice = 20000 ; 
        for ( int i = 0 ; i < n ; i ++ ) { 
            int fl = 1 ; 
            for ( int j = 0 ; j < n ; j ++ ) { 
                if ( vec [ i ] [ 0 ] < vec [ j ] [ 0 ] and vec [ i ] [ 1 ] < vec [ j ] [ 1 ] and vec [ i ] [ 2 ] < vec [ j ] [ 2 ] ) { 
                    fl = 0 ; 
                } 
            } 
            if ( fl == 1 ) { 
                if ( vec [ i ] [ 3 ] < ansprice ) { 
                    ansprice = vec [ i ] [ 3 ] ; 
                    ans = i + 1 ; 
                } 
            } 
        } 
        output.println ( ans ) ; 
        output.close ( ) ; 
    } 
}"
CodeGen,avatar,Java,Python,codeforces_56_B.py,"def main():
    scan = Scanner(sys.stdin)
    len = scan.nextInt()
    a = [scan.nextInt() for i in range(len)]
    l = 0
    r = 0
    flag = False
    isTrue = False
    loop:
        for i in range(len):
            if a[i]!= i + 1 and not flag:
                l = i + 1
                flag = True
                continue
            if a[i]!= i + 1 and flag:
                r = i + 1
                if a[r - 1] - a[r - 2] > 0:
                    isTrue = True
                    break loop
        if not isTrue:
            print(l + "" "" + r)
        else:
            print(""0 0"")

if __name__ == ""__main__"":
    main()","def main():
    len = input()
    a = list(map(int, input().split()))
    l = 0
    r = 0
    flag = False
    isTrue = False
    for i in range(int(len)):
        if a[i]!= i + 1 and not flag:
            l = i + 1
            flag = True
            continue
        if a[i]!= i + 1 and flag:
            r = i + 1
            if a[r - 1] - a[r - 2] > 0:
                isTrue = True
                break
    if not isTrue:
        print(str(l) + "" "" + str(r))
    else:
        print(""0 0"")

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,atcoder_ABC134_E.py,"def main(args):
    sc = Scanner(sys.stdin)
    n = sc.next()
    map = {}
    while n > 0:
        num = sc.next()
        if num not in map:
            map[num] = 1
        else:
            map[num] += 1
        n -= 1
    ans = 0
    for key in map:
        val = map[key]
        ans += val
    print(ans)","def main():
    n = int(input())
    map = {}
    while n > 0:
        num = int(input())
        if num not in map:
            map[num] = 1
        else:
            map[num] += 1
        n -= 1
    ans = 0
    for key in map:
        val = map[key]
        ans += val
    print(ans)
    
main()"
CodeGen,avatar,Java,Python,codeforces_231_A.py,"def main ():
    t = int(input())
    count = 0
    while t > 0:
        a = int(input())
        b = int(input())
        c = int(input())
        if (a == 1 and b == 1) or (a == 1 and c == 1) or (b == 1 and c == 1) or (a == 1 and b == 1 and c == 1):
            count += 1
        t -= 1
    print(count)","def main ():
    t = int(input())
    count = 0
    while t > 0:
        a, b, c = map(int, input().split())
        if (a == 1 and b == 1) or (a == 1 and c == 1) or (b == 1 and c == 1) or (a == 1 and b == 1 and c == 1):
            count += 1
        t -= 1
    print(count)
    
main ()"
CodeGen,avatar,Java,Python,atcoder_AGC006_B.py,"def main(n):
    x = int(input())
    print(x, n)
    if x == 1 or x == n * 2 - 1:
        print(""No"")
        return
    print(""Yes"")
    sep = '\n'
    ans = IntStream.range(x + n - 1, x + n + n * 2 - 1).map(e -> (e % n + 1) + sep).collect(StringBuilder(), StringBuilder().append, StringBuilder().append).toString()
    print(ans)","def main(n):
    x = int(input())
    print(x, n)
    if x == 1 or x == n * 2 - 1:
        print(""No"")
        return
    print(""Yes"")
    sep = '\n'
    ans = IntStream.range(x + n - 1, x + n + n * 2 - 1).map(e -> (e % n + 1) + sep).collect(StringBuilder(), StringBuilder().append, StringBuilder().append).toString()
    print(ans)"
CodeGen,avatar,Java,Python,atcoder_ABC133_E.py,"class atcoder_ABC133_E {
    private class Node {
        public long pattern = 0;
        public int index;
        public LinkedList<Integer> children = new LinkedList<Integer>();
        public int parent = -1;

        public Node(int i) {
            this.index = i;
        }

        public void setParent(int K, int parent, int use, Node[] nodes) {
            this.pattern = K - use;
            this.parent = parent;
            int count = 1;
            if (parent!= -1) {
                count++;
            }
            for (int n : children) {
                if (n == this.parent) {
                    continue;
                }
                nodes[n].setParent(K, index, count, nodes);
                count++;
            }
        }
    }

    def solve(self):
        N = int(input())
        K = int(input())
        nodes = [Node(i) for i in range(N)]
        for i in range(N - 1):
            a = int(input())
            b = int(input())
            nodes[a].children.append(b)
            nodes[b].children.append(a)
        nodes[0].setParent(K, -1, 0, nodes)
        patterns = 1
        for i in range(N):
            patterns = (patterns * nodes[i].pattern) % 1_000_000_007
        print(patterns)

}","class atcoder_ABC133_E {
    private class Node {
        public long pattern = 0;
        public int index;
        public LinkedList<Integer> children = new LinkedList<Integer>();
        public int parent = -1;

        public Node(int i) {
            this.index = i;
        }

        public void setParent(int K, int parent, int use, Node[] nodes) {
            this.pattern = K - use;
            this.parent = parent;
            int count = 1;
            if (parent!= -1) {
                count++;
            }
            for (int n : children) {
                if (n == this.parent) {
                    continue;
                }
                nodes[n].setParent(K, index, count, nodes);
                count++;
            }
        }
    }

    def solve(self):
        N = int(input())
        K = int(input())
        nodes = [Node(i) for i in range(N)]
        for i in range(N - 1):
            a = int(input())
            b = int(input())
            nodes[a].children.append(b)
            nodes[b].children.append(a)
        nodes[0].setParent(K, -1, 0, nodes)
        patterns = 1
        for i in range(N):
            patterns = (patterns * nodes[i].pattern) % 1_000_000_007
        print(patterns)

}"
CodeGen,avatar,Java,Python,atcoder_AGC019_A.py,"def main(args):
    sc = Scanner(System.in)
    Q = sc.nextLong()
    H = sc.nextLong()
    S = sc.nextLong()
    D = sc.nextLong()
    N = sc.nextLong()
    onePrice = min(min(Q * 4, H * 2), S)
    if (onePrice <= D / 2):
        print(N * onePrice)
    else:
        print((N / 2) * D + (N % 2) * onePrice)

# Note:
#
# 1. The maximum value of N is 10^9.
# 2. The maximum value of onePrice is 10^9.
# 3. The maximum value of D is 10^9.
# 4. The maximum value of Q is 10^9.
# 5. The maximum value of H is 10^9.
# 6. The maximum value of S is 10^9.
# 7. The maximum value of N is 10^9.
# 8. The maximum value of onePrice is 10^9.
# 9. The maximum value of D is 10^9.
# 10. The maximum value of Q is 10^9.
# 11. The maximum value of H is 10^9.
# 12. The maximum value of S is 10^9.","def main():
    Q, H, S, D = map(int, input().split())
    N = int(input())
    onePrice = min(min(Q * 4, H * 2), S)
    if (onePrice <= D / 2):
        print(N * onePrice)
    else:
        print((N // 2) * D + (N % 2) * onePrice)
        
main()"
CodeGen,avatar,Java,Python,atcoder_ABC122_C.py,"class atcoder_ABC122_C {
    final static long mod = 1000000007

    def main(args):
        sc = Scanner(System.in)
        n = sc.nextInt()
        q = sc.nextInt()
        c = sc.next().strip().toCharArray()
        range = [[sc.nextInt(), sc.nextInt()]]
        for i in range(q):
            range.append([sc.nextInt(), sc.nextInt()])
        frag = [0] * (n + 1)
        rui = [0] * (n + 1)
        for i in range(2, n + 1):
            if c[i - 2] == 'A' and c[i - 1] == 'C':
                frag[i] += 1
            rui[i] = rui[i - 1] + frag[i]
        for i in range(q):
            left, right = range[i][0], range[i][1]
            print(rui[right] - rui[left])
        return


    main()
}","class atcoder_ABC122_C {
    final static long mod = 1000000007

    def main(args):
        sc = Scanner(System.in)
        n = sc.nextInt()
        q = sc.nextInt()
        c = sc.next().strip().toCharArray()
        range = [[sc.nextInt(), sc.nextInt()]]
        for i in range(q):
            range.append([sc.nextInt(), sc.nextInt()])
        frag = [0] * (n + 1)
        rui = [0] * (n + 1)
        for i in range(2, n + 1):
            if c[i - 2] == 'A' and c[i - 1] == 'C':
                frag[i] += 1
            rui[i] = rui[i - 1] + frag[i]
        for i in range(q):
            left, right = range[i][0], range[i][1]
            print(rui[right] - rui[left])
        return


    main()
}"
CodeGen,avatar,Java,Python,codeforces_569_A.py,"def main(args):
    in = input()
    T = in.next()
    S = in.next()
    q = in.next()
    previous = S
    answer = 0
    while previous < T:
        answer += 1
        previous *= q
    print(answer)","def main():
    T, S, q = map(int, input().split())
    previous = S
    answer = 0
    while previous < T:
        answer += 1
        previous *= q
    print(answer)
    
main()"
CodeGen,avatar,Java,Python,atcoder_ABC108_B.py,"import java.util.Scanner ; public class atcoder_ABC108_B { public static int [ ] revpos ( int [ ] p, int [ ] q ) { int [ ] vec = { 0, 0 } ; for ( int i = 0 ; i < vec.length ; i ++ ) { vec [ i ] = p [ i ] - q [ i ] ; } int tmp = 0 ; tmp = vec [ 0 ] ; vec [ 0 ] = vec [ 1 ] ; vec [ 1 ] = - tmp ; int [ ] newpos = { 0, 0 } ; for ( int i = 0 ; i < newpos.length ; i ++ ) { newpos [ i ] = q [ i ] + vec [ i ] ; } return newpos ; } public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int [ ] input = { 0, 0, 0, 0 } ; for ( int i = 0 ; i < input.length ; i ++ ) { input [ i ] = scan.nextInt ( ) ; } scan.close ( ) ; int [ ] [ ] position = { { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 } } ; position [ 0 ] [ 0 ] = input [ 0 ] ; position [ 0 ] [ 1 ] = input [ 1 ] ; position [ 1 ] [ 0 ] = input [ 2 ] ; position [ 1 ] [ 1 ] = input [ 3 ] ; position [ 2 ] = revpos ( position [ 0 ], position [ 1 ] ) ; position [ 3 ] = revpos ( position [ 1 ], position [ 2 ] ) ; if ( position [ 0 ] == revpos ( position [ 2 ], position [ 3 ] ) ) { System.out.println ( ""OK"" ) ; } int [ ] output = { 0, 0, 0, 0 } ; output [ 0 ] = position [ 2 ] [ 0 ] ; output [ 1 ] = position [ 2 ] [ 1 ] ; output [ 2 ] = position [ 3 ] [ 0 ] ; output [ 3 ] = position [ 3 ] [ 1 ] ; for ( int i : output ) { System.out.println ( i ) ; } } }","import java.util.Scanner ; public class atcoder_ABC108_B { public static int [ ] revpos ( int [ ] p, int [ ] q ) { int [ ] vec = { 0, 0 } ; for ( int i = 0 ; i < vec.length ; i ++ ) { vec [ i ] = p [ i ] - q [ i ] ; } int tmp = 0 ; tmp = vec [ 0 ] ; vec [ 0 ] = vec [ 1 ] ; vec [ 1 ] = - tmp ; int [ ] newpos = { 0, 0 } ; for ( int i = 0 ; i < newpos.length ; i ++ ) { newpos [ i ] = q [ i ] + vec [ i ] ; } return newpos ; } public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int [ ] input = { 0, 0, 0, 0 } ; for ( int i = 0 ; i < input.length ; i ++ ) { input [ i ] = scan.nextInt ( ) ; } scan.close ( ) ; int [ ] [ ] position = { { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 } } ; position [ 0 ] [ 0 ] = input [ 0 ] ; position [ 0 ] [ 1 ] = input [ 1 ] ; position [ 1 ] [ 0 ] = input [ 2 ] ; position [ 1 ] [ 1 ] = input [ 3 ] ; position [ 2 ] = revpos ( position [ 0 ], position [ 1 ] ) ; position [ 3 ] = revpos ( position [ 1 ], position [ 2 ] ) ; if ( position [ 0 ] == revpos ( position [ 2 ], position [ 3 ] ) ) { System.out.println ( ""OK"" ) ; } int [ ] output = { 0, 0, 0, 0 } ; output [ 0 ] = position [ 2 ] [ 0 ] ; output [ 1 ] = position [ 2 ] [ 1 ] ; output [ 2 ] = position [ 3 ] [ 0 ] ; output [ 3 ] = position [ 3 ] [ 1 ] ; for ( int i : output ) { System.out.println ( i ) ; } } }"
CodeGen,avatar,Java,Python,atcoder_ABC126_D.py,"import java.util.* ; import java.util.Map.* ; class atcoder_ABC126_D { private static int [ ] colors ; def main ( self, args ):
    sc = java.util.Scanner ( sys.stdin )
    n = sc.nextInt ( )
    m = n - 1
    colors = [ - 1 ] * n
    points = [ Point ( i ) for i in range ( n ) ]
    for i in range ( n ):
        points [ i ] = Point ( i )
    while m > 0:
        me = sc.nextInt ( ) - 1
        you = sc.nextInt ( ) - 1
        length = sc.nextInt ( )
        points [ me ].becomeFriend ( points [ you ], length )
        points [ you ].becomeFriend ( points [ me ], length )
    dfs ( points [ 0 ], 0 )
    for c in colors:
        print c
    return

class Point:
    def __init__(self, name):
        self.name = name
        self.friends = {}
    def becomeFriend(self, p, length):
        self.friends[p] = length

def dfs(p, length):
    already_known = colors[p.name]!= -1
    if already_known:
        return
    if length % 2 == 0:
        colors[p.name] = 0
    else:
        colors[p.name] = 1
    for entry in p.friends.iteritems():
        friend = entry[0]
        length2 = entry[1]
        dfs(friend, length + length2)

if __name__ == '__main__':
    main()","import java.util.* ; import java.util.Map.* ; class atcoder_ABC126_D { private static int [ ] colors ; def main ( self, args ):
    sc = java.util.Scanner ( sys.stdin )
    n = sc.nextInt ( )
    m = n - 1
    colors = [ - 1 ] * n
    points = [ Point ( i ) for i in range ( n ) ]
    for i in range ( n ):
        points [ i ] = Point ( i )
    while m > 0:
        me = sc.nextInt ( ) - 1
        you = sc.nextInt ( ) - 1
        length = sc.nextInt ( )
        points [ me ].becomeFriend ( points [ you ], length )
        points [ you ].becomeFriend ( points [ me ], length )
    dfs ( points [ 0 ], 0 )
    for c in colors:
        print c
    return

class Point:
    def __init__(self, name):
        self.name = name
        self.friends = {}
    def becomeFriend(self, p, length):
        self.friends[p] = length

def dfs(p, length):
    already_known = colors[p.name]!= -1
    if already_known:
        return
    if length % 2 == 0:
        colors[p.name] = 0
    else:
        colors[p.name] = 1
    for entry in p.friends.iteritems():
        friend = entry[0]
        length2 = entry[1]
        dfs(friend, length + length2)

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,codeforces_242_A.py,"def main(args):
    in = raw_input()
    x, y, a, b = map(int, in.split())
    count = 0
    for i in range(a, x+1):
        for j in range(b, y+1):
            if i <= j:
                continue
            count += 1
    print count
    for i in range(a, x+1):
        for j in range(b, y+1):
            if i <= j:
                continue
            print i, j

if __name__ == '__main__':
    main(sys.argv)","def main():
    x, y, a, b = map(int, input().split())
    count = 0
    for i in range(a, x+1):
        for j in range(b, y+1):
            if i <= j:
                continue
            count += 1
    print(count)
    for i in range(a, x+1):
        for j in range(b, y+1):
            if i <= j:
                continue
            print(i, j)

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,codeforces_190_A.py,"def main(args):
    sc = Scanner(System.in)
    n = sc.nextInt()
    m = sc.nextInt()
    if n == 0:
        if m!= 0:
            print(""Impossible"")
        else:
            print(0 + "" "" + 0)
        return
    if m <= n:
        if m == 0:
            m = 1
        print(n + "" "" + (m + n - 1))
        return
    print(m + "" "" + (m + n - 1))","def main():
    n, m = map(int, input().split())
    if n == 0:
        if m!= 0:
            print(""Impossible"")
        else:
            print(0, 0)
        return
    if m <= n:
        if m == 0:
            m = 1
        print(n, m + n - 1)
        return
    print(m, m + n - 1)
    
main()"
CodeGen,avatar,Java,Python,codeforces_30_A.py,"def main():
    sc = Scanner(sys.stdin)
    A = sc.nextint()
    B = sc.nextint()
    n = sc.nextint()
    if A == 0:
        if B == 0:
            print 1
        else:
            print ""No solution""
        return
    if B % A!= 0:
        print ""No solution""
        return
    B /= A
    neg = B < 0
    if neg and n % 2 == 0:
        print ""No solution""
        return
    if neg:
        B = -B
    for x in xrange(0, B+1):
        if pow(x, n) == B:
            print neg and -x or x
            return
    print ""No solution""","def main():
    A, B, n = map(int, input().split())
    if A == 0:
        if B == 0:
            print(1)
        else:
            print(""No solution"")
        return
    if B % A!= 0:
        print(""No solution"")
        return
    B //= A
    neg = B < 0
    if neg and n % 2 == 0:
        print(""No solution"")
        return
    if neg:
        B = -B
    for x in range(0, B+1):
        if pow(x, n) == B:
            print(-x if neg else x)
            return
    print(""No solution"")"
CodeGen,avatar,Java,Python,atcoder_AGC014_D.py,"class atcoder_AGC014_D {
    
    def maxMatching(self, v, p):
        a = 0
        o = 0
        for w in self.g[v]:
            if w == p:
                continue
            r = self.maxMatching(w, v)
            a += r / 2
            o += r % 2
        return 2 * a + min(1, o) + 1
    
    def main(self):
        sc = MyScanner()
        n = sc.nextInt()
        self.g = [ [ ] for _ in range(n) ]
        for i in range(n - 1):
            a = sc.nextInt() - 1
            b = sc.nextInt() - 1
            self.g[a].append(b)
            self.g[b].append(a)
        m = self.maxMatching(0, -1) / 2
        print(2 * m == n and ""Second"" or ""First"")
        
    def maxMatching(self, v, p):
        a = 0
        o = 0
        for w in self.g[v]:
            if w == p:
                continue
            r = self.maxMatching(w, v)
            a += r / 2
            o += r % 2
        return 2 * a + min(1, o) + 1
    
    def main(self):
        sc = MyScanner()
        n = sc.nextInt()
        self.g = [ [ ] for _ in range(n) ]
        for i in range(n - 1):
            a = sc.nextInt() - 1
            b = sc.nextInt() - 1
            self.g[a].append(b)
            self.g[b].append(a)
        m = self.maxMatching(0, -1) / 2
        print(2 * m == n and ""Second"" or ""First"")
    
    class MyScanner {
        BufferedReader br;
        StringTokenizer st;
        
        public MyScanner() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }
        
        String next() {
            while (st == null ||!st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
        
        int nextInt() {
            return Integer.parseInt(next());
        }
        
        long nextLong() {
            return Long.parseLong(next());
        }
        
        double nextDouble() {
            return Double.parseDouble(next());
        }
        
        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}","class atcoder_AGC014_D {
    
    def maxMatching(self, v, p):
        a = 0
        o = 0
        for w in self.g[v]:
            if w == p:
                continue
            r = self.maxMatching(w, v)
            a += r / 2
            o += r % 2
        return 2 * a + min(1, o) + 1
    
    def main(self):
        sc = MyScanner()
        n = sc.nextInt()
        self.g = [ [ ] for _ in range(n) ]
        for i in range(n - 1):
            a = sc.nextInt() - 1
            b = sc.nextInt() - 1
            self.g[a].append(b)
            self.g[b].append(a)
        m = self.maxMatching(0, -1) / 2
        print(2 * m == n and ""Second"" or ""First"")
        
    def maxMatching(self, v, p):
        a = 0
        o = 0
        for w in self.g[v]:
            if w == p:
                continue
            r = self.maxMatching(w, v)
            a += r / 2
            o += r % 2
        return 2 * a + min(1, o) + 1
    
    def main(self):
        sc = MyScanner()
        n = sc.nextInt()
        self.g = [ [ ] for _ in range(n) ]
        for i in range(n - 1):
            a = sc.nextInt() - 1
            b = sc.nextInt() - 1
            self.g[a].append(b)
            self.g[b].append(a)
        m = self.maxMatching(0, -1) / 2
        print(2 * m == n and ""Second"" or ""First"")
    
    class MyScanner {
        BufferedReader br;
        StringTokenizer st;
        
        public MyScanner() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }
        
        String next() {
            while (st == null ||!st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
        
        int nextInt() {
            return Integer.parseInt(next());
        }
        
        long nextLong() {
            return Long.parseLong(next());
        }
        
        double nextDouble() {
            return Double.parseDouble(next());
        }
        
        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}"
CodeGen,avatar,Java,Python,atcoder_AGC002_B.py,"class atcoder_AGC002_B {
    def main(args):
        sc = Scanner(sys.stdin)
        N = sc.nextInt()
        M = sc.nextInt()
        B = [Box(1, True)]
        for i in range(1, N):
            B.append(Box(1, False))
        for i in range(0, M):
            x = sc.nextInt() - 1
            y = sc.nextInt() - 1
            B[x].moveTo(B[y])
        counter = 0
        for b in B:
            if b.red:
                counter += 1
        print(counter)

    class Box:
        def __init__(self, num, red):
            self.num = num
            self.red = red
        def moveTo(self, other):
            if self.num == 0:
                return
            else:
                if self.num == 1:
                    self.num = 0
                    other.num += 1
                    if self.red:
                        other.red = True
                    self.red = False
                else:
                    self.num -= 1
                    other.num += 1
                    if self.red:
                        other.red = True

}","class atcoder_AGC002_B {
    def main(args):
        sc = Scanner(sys.stdin)
        N = sc.nextInt()
        M = sc.nextInt()
        B = [Box(1, True)]
        for i in range(1, N):
            B.append(Box(1, False))
        for i in range(0, M):
            x = sc.nextInt() - 1
            y = sc.nextInt() - 1
            B[x].moveTo(B[y])
        counter = 0
        for b in B:
            if b.red:
                counter += 1
        print(counter)

    class Box:
        def __init__(self, num, red):
            self.num = num
            self.red = red
        def moveTo(self, other):
            if self.num == 0:
                return
            else:
                if self.num == 1:
                    self.num = 0
                    other.num += 1
                    if self.red:
                        other.red = True
                    self.red = False
                else:
                    self.num -= 1
                    other.num += 1
                    if self.red:
                        other.red = True

}"
CodeGen,avatar,Java,Python,atcoder_ABC105_D.py,"class atcoder_ABC105_D {
    def main(args):
        inputStream = System.in
        outputStream = System.out
        in = inputReader(inputStream)
        out = printWriter(outputStream)
        solver = TaskD()
        solver.solve(1, in, out)
        out.close()
    def inputReader(inputStream):
        return BufferedReader(inputStreamReader(inputStream))
    def inputStreamReader(inputStream):
        return InputStreamReader(inputStream)
    def printWriter(outputStream):
        return PrintWriter(outputStream)
    class TaskD:
        def solve(self, testNumber, in, out):
            n = in.nextInt()
            m = in.nextInt()
            a = in.nextIntArray(n)
            dp = {}
            ans = 0
            base = 0
            for i in range(n):
                base = (base - a[i] % m + m) % m
                dp.merge((base + a[i]) % m, 1, lambda x, y: x + y)
                ans += dp.get(base, 0)
            out.println(ans)
        def __init__(self):
            pass
    class InputReader:
        def __init__(self, inputStream):
            self.br = BufferedReader(inputStreamReader(inputStream))
            self.st = StringTokenizer("""")
        def nextString(self):
            while self.st == """":
                try:
                    self.st = self.br.readLine()
                except IOError:
                    raise InputMismatchException()
            return self.st
        def nextInt(self):
            return int(self.nextString())
        def nextIntArray(self, n):
            res = [0] * n
            for i in range(n):
                res[i] = self.nextInt()
            return res
    class InputStreamReader:
        def __init__(self, inputStream):
            self.is = inputStream
        def read(self):
            return self.is.read()
    class PrintWriter:
        def __init__(self, outputStream):
            self.os = outputStream
        def flush(self):
            self.os.flush()
        def close(self):
            self.os.close()


public class atcoder_ABC105_D {
    public static void main(String[] args) throws IOException {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskD solver = new TaskD();
        solver.solve(1, in, out);
        out.close();
    }
    public static class TaskD {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int m = in.nextInt();
            int[] a = in.nextIntArray(n);
            HashMap<Integer, Integer> dp = new HashMap<>();
            long ans = 0;
            int base = 0;
            for (int i = 0; i < n; i++) {
                base = (base - a[i] % m + m) % m;
                dp.merge(base + a[i], 1, Integer::sum);
                ans += dp.getOrDefault(base, 0);
            }
            out.println(ans);
        }
        public void __init__() {
        }
    }
    public static class InputReader {
        BufferedReader br;
        StringTokenizer st;
        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
            st = new StringTokenizer("""");
        }
        public String nextString() {
            while (st == null ||!st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
        public int nextInt() {
            return Integer.parseInt(nextString());
        }
        public int[] nextIntArray(int n) {
            int[] res = new int[n];
            for (int i = 0; i < n; i++) {
                res[i] = nextInt();
            }
            return res;
        }
    }
    public static class InputStreamReader {
        BufferedReader br;
        public InputStreamReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }
        public String read() {
            try {
                return br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
                return """";
            }
        }
    }
    public static class PrintWriter {
        BufferedWriter bw;
        public PrintWriter(OutputStream stream) {
            bw = new BufferedWriter(new OutputStreamWriter(stream));
        }
        public void flush() {
            try {
                bw.flush();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        public void close() {
            try {
                bw.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        public void print(Object...objects) {
            for (Object o : objects) {
                bw.write(o.toString());
            }
        }
        public void println(Object...objects) {
            for (Object o : objects) {
                bw.write(o.toString());
            }
            bw.newLine();
        }
    }
}","class atcoder_ABC105_D {
    def main(args):
        inputStream = System.in
        outputStream = System.out
        in = inputReader(inputStream)
        out = printWriter(outputStream)
        solver = TaskD()
        solver.solve(1, in, out)
        out.close()
    def inputReader(inputStream):
        return BufferedReader(inputStreamReader(inputStream))
    def inputStreamReader(inputStream):
        return InputStreamReader(inputStream)
    def printWriter(outputStream):
        return PrintWriter(outputStream)
    class TaskD:
        def solve(self, testNumber, in, out):
            n = in.nextInt()
            m = in.nextInt()
            a = in.nextIntArray(n)
            dp = {}
            ans = 0
            base = 0
            for i in range(n):
                base = (base - a[i] % m + m) % m
                dp.merge((base + a[i]) % m, 1, lambda x, y: x + y)
                ans += dp.get(base, 0)
            out.println(ans)
        def __init__(self):
            pass
    class InputReader:
        def __init__(self, inputStream):
            self.br = BufferedReader(inputStreamReader(inputStream))
            self.st = StringTokenizer("""")
        def nextString(self):
            while self.st == """":
                try:
                    self.st = self.br.readLine()
                except IOError:
                    raise InputMismatchException()
            return self.st
        def nextInt(self):
            return int(self.nextString())
        def nextIntArray(self, n):
            res = [0] * n
            for i in range(n):
                res[i] = self.nextInt()
            return res
    class InputStreamReader:
        def __init__(self, inputStream):
            self.is = inputStream
        def read(self):
            return self.is.read()
    class PrintWriter:
        def __init__(self, outputStream):
            self.os = outputStream
        def flush(self):
            self.os.flush()
        def close(self):
            self.os.close()


public class atcoder_ABC105_D {
    public static void main(String[] args) throws IOException {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskD solver = new TaskD();
        solver.solve(1, in, out);
        out.close();
    }
    public static class TaskD {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int m = in.nextInt();
            int[] a = in.nextIntArray(n);
            HashMap<Integer, Integer> dp = new HashMap<>();
            long ans = 0;
            int base = 0;
            for (int i = 0; i < n; i++) {
                base = (base - a[i] % m + m) % m;
                dp.merge(base + a[i], 1, Integer::sum);
                ans += dp.getOrDefault(base, 0);
            }
            out.println(ans);
        }
        public void __init__() {
        }
    }
    public static class InputReader {
        BufferedReader br;
        StringTokenizer st;
        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
            st = new StringTokenizer("""");
        }
        public String nextString() {
            while (st == null ||!st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
        public int nextInt() {
            return Integer.parseInt(nextString());
        }
        public int[] nextIntArray(int n) {
            int[] res = new int[n];
            for (int i = 0; i < n; i++) {
                res[i] = nextInt();
            }
            return res;
        }
    }
    public static class InputStreamReader {
        BufferedReader br;
        public InputStreamReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }
        public String read() {
            try {
                return br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
                return """";
            }
        }
    }
    public static class PrintWriter {
        BufferedWriter bw;
        public PrintWriter(OutputStream stream) {
            bw = new BufferedWriter(new OutputStreamWriter(stream));
        }
        public void flush() {
            try {
                bw.flush();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        public void close() {
            try {
                bw.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        public void print(Object...objects) {
            for (Object o : objects) {
                bw.write(o.toString());
            }
        }
        public void println(Object...objects) {
            for (Object o : objects) {
                bw.write(o.toString());
            }
            bw.newLine();
        }
    }
}"
CodeGen,avatar,Java,Python,atcoder_AGC038_A.py,"def main():
    sc = Scanner()
    bw = BufferedWriter(OutputStreamWriter(sys.stdout))
    H, W = sc.nextInt(), sc.nextInt()
    A, B = sc.nextInt(), sc.nextInt()
    if W < 2 * A or H < 2 * B:
        print(-1)
        return
    for i in range(H):
        for j in range(W):
            if (i < B and j < A) or (i >= B) and (j >= A):
                bw.write('0')
            else:
                bw.write('1')
            bw.newLine()
    bw.flush()



Input Format:

The first line contains two space-separated integers denoting the height and width of the input matrix.
The second line contains two space-separated integers denoting the height and width of the area to be filled with 1s.
The third line contains two space-separated integers denoting the height and width of the area to be filled with 0s.

Output Format:

Output a single line containing the filled matrix.

Sample Input:

3 3 2 2
2 2 2 2
2 2 2 2
2 2 2 2
Sample Output:

11111
11111
11111
11111
Explanation:

The area to be filled with 1s is marked in the diagram.
The area to be filled with 0s is marked in bold.

""""""","def main():
    H, W, A, B = map(int, input().split())
    if W < 2 * A or H < 2 * B:
        print(-1)
        return
    for i in range(H):
        for j in range(W):
            if (i < B and j < A) or (i >= B) and (j >= A):
                print(0, end='')
            else:
                print(1, end='')
        print()

main()"
CodeGen,avatar,Java,Python,atcoder_ABC152_E.py,"def main(args):
    N = int(input())
    A = [int(i) for i in input().split()]
    print(sum(A) % 1000000007)
    lcm = 1
    for ai in A:
        lcm = lcm * (ai % 1000000007) // gcd(lcm, ai)
    print(lcm % 1000000007)
    mod = 1000000007
    modLcm = lcm // 1000000007
    ans = 0
    for ai in A:
        ans = (ans + modDiv(modLcm, ai, mod)) % mod
    print(ans)


def modDiv(a, b, mod):
    return (a % mod) * modInv(b, mod) % mod


def modInv(a, mod):
    return modPow(a, mod - 2, mod)


def modPow(a, e, mod):
    ans = 1
    x = a % mod
    for y in range(e):
        if (y & 1):
            ans = (ans * x) % mod
        x = (x * x) % mod
    return ans","import math

def main():
    N = int(input())
    A = list(map(int, input().split()))
    print(sum(A) % 1000000007)
    lcm = 1
    for ai in A:
        lcm = lcm * (ai % 1000000007) // math.gcd(lcm, ai)
    print(lcm % 1000000007)
    mod = 1000000007
    modLcm = lcm // 1000000007
    ans = 0
    for ai in A:
        ans = (ans + modDiv(modLcm, ai, mod)) % mod
    print(ans)


def modDiv(a, b, mod):
    return (a % mod) * modInv(b, mod) % mod


def modInv(a, mod):
    return modPow(a, mod - 2, mod)


def modPow(a, e, mod):
    ans = 1
    x = a % mod
    for y in range(e):
        if (y & 1):
            ans = (ans * x) % mod
        x = (x * x) % mod
    return ans

main()"
CodeGen,avatar,Java,Python,codeforces_469_A.py,"def main(args):
    sc = Scanner(System.in)
    n = sc.nextInt()
    levels = sc.nextInt()
    arr = [sc.nextInt() for _ in range(levels)]
    level2 = sc.nextInt()
    level3 = levels + level2
    arr2 = [sc.nextInt() for _ in range(level3)]
    for i in range(arr.length):
        arr3[i] = arr[i]
    for i in range(arr.length, level3):
        arr3[i] = sc.nextInt()
    for i in range(n):
        for x in range(arr2.length):
            if arr3[i] == arr2[x]:
                count += 1
                break
        if count == n:
            print(""I become the guy."")
        else:
            print(""Oh, my keyboard!"")

# Note:
# The input is a list of integers.
# The number of levels is an integer.
# The number of elements in each level is an integer.
# The number of elements in the last level is an integer.
# The number of elements in the last level is at least as large as the number of elements in the previous level.
# The number of elements in the last level is at most twice as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twice as large as the number of elements in the previous level.
# The number of elements in the last level is exactly three times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly four times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly five times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly six times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly seven times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly eight times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly nine times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly ten times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly eleven times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twelve times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly thirteen times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly fourteen times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly fifteen times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly sixteen times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly seventeen times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly eighteen times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly nineteen times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twenty times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twenty-one times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twenty-two times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twenty-three times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twenty-four times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twenty-five times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twenty-six times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twenty-seven times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twenty-eight times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly twenty-nine times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly thirty times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly thirty-one times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly thirty-two times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly thirty-three times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly thirty-four times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly thirty-five times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly thirty-six times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly thirty-seven times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly thirty-eight times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly thirty-nine times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly forty times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly forty-one times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly forty-two times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly forty-three times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly forty-four times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly forty-five times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly forty-six times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly forty-seven times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly forty-eight times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly forty-nine times as large as the number of elements in the previous level.
# The number of elements in the last level is exactly fifty times as large as the number of elements in the previous level.
# The number of elements in the last","def main(args):
    sc = Scanner(System.in)
    n = sc.nextInt()
    levels = sc.nextInt()
    arr = [sc.nextInt() for _ in range(levels)]
    level2 = sc.nextInt()
    level3 = levels + level2
    arr2 = [sc.nextInt() for _ in range(level3)]
    for i in range(arr.length):
        arr3[i] = arr[i]
    for i in range(arr.length, level3):
        arr3[i] = sc.nextInt()
    for i in range(n):
        for x in range(arr2.length):
            if arr3[i] == arr2[x]:
                count += 1
                break
        if count == n:
            print(""I become the guy."")
        else:
            print(""Oh, my keyboard!"")"
CodeGen,avatar,Java,Python,atcoder_ABC120_C.py,"def main():
    inputStream = sys.stdin
    outputStream = sys.stdout
    in = InputReader(inputStream)
    out = PrintWriter(outputStream)
    solver = TaskB()
    solver.solve(1, in, out)
    out.close()


class TaskB:
    def solve(self, testNumber, in, out):
        x = in.next()
        s = []
        c = 0
        for i in range(len(x)):
            s.append(x[i])
            while len(s) > 2:
                p = s.pop()
                q = s.pop()
                if p == '1' and q == '0':
                    c += 1
                elif p == '0' and q == '1':
                    c += 1
                else:
                    s.append(q)
                    s.append(p)
                    break
        out.println(c * 2)


class InputReader:
    def __init__(self, inStream):
        self.reader = inStream
        self.tokenizer = None

    def next(self):
        if self.tokenizer is None:
            self.tokenizer = self.tokenizer or self.tokenize()
        if not self.tokenizer:
            raise StopIteration
        return self.tokenizer.next()

    def tokenize(self):
        line = self.reader.readline()
        if not line:
            return
        return self.tokenizeLine(line)

    def tokenizeLine(self, line):
        return StringTokenizer(line)

class StringTokenizer:
    def __init__(self, line):
        self.tokens = line.split()
        self.index = 0

    def hasMoreTokens(self):
        return self.index < len(self.tokens)

    def nextToken(self):
        if not self.hasMoreTokens():
            raise StopIteration
        token = self.tokens[self.index]
        self.index += 1
        return token","def main():
    inputStream = sys.stdin
    outputStream = sys.stdout
    in = InputReader(inputStream)
    out = PrintWriter(outputStream)
    solver = TaskB()
    solver.solve(1, in, out)
    out.close()


class TaskB:
    def solve(self, testNumber, in, out):
        x = in.next()
        s = []
        c = 0
        for i in range(len(x)):
            s.append(x[i])
            while len(s) > 2:
                p = s.pop()
                q = s.pop()
                if p == '1' and q == '0':
                    c += 1
                elif p == '0' and q == '1':
                    c += 1
                else:
                    s.append(q)
                    s.append(p)
                    break
        out.println(c * 2)


class InputReader:
    def __init__(self, inStream):
        self.reader = inStream
        self.tokenizer = None

    def next(self):
        if self.tokenizer is None:
            self.tokenizer = self.tokenizer or self.tokenize()
        if not self.tokenizer:
            raise StopIteration
        return self.tokenizer.next()

    def tokenize(self):
        line = self.reader.readline()
        if not line:
            return
        return self.tokenizeLine(line)

    def tokenizeLine(self, line):
        return StringTokenizer(line)

class StringTokenizer:
    def __init__(self, line):
        self.tokens = line.split()
        self.index = 0

    def hasMoreTokens(self):
        return self.index < len(self.tokens)

    def nextToken(self):
        if not self.hasMoreTokens():
            raise StopIteration
        token = self.tokens[self.index]
        self.index += 1
        return token"
CodeGen,avatar,Java,Python,codeforces_629_A.py,"def main(args):
    sc = Scanner(System.in)
    num = sc.nextInt()
    arr = []
    for i in range(num):
        arr.append(sc.next())
    for i in range(num):
        for k in range(num):
            if arr[k].charAt(i) == 'C':
                counter += 1
        fine += (counter * (counter - 1)) / 2
        counter = 0
    for i in range(num):
        for k in range(num):
            if arr[i].charAt(k) == 'C':
                counter += 1
        fine += (counter * (counter - 1)) / 2
        counter = 0
    print fine

# Note:
# 1. The input is an integer.
# 2. The input is a string array.
# 3. The output is an integer.
# 4. The output is a string.
# 5. The output is a string.
# 6. The output is a string.
# 7. The output is a string.
# 8. The output is a string.
# 9. The output is a string.
# 10. The output is a string.
# 11. The output is a string.
# 12. The output is a string.
# 13. The output is a string.
# 14. The output is a string.
# 15. The output is a string.
# 16. The output is a string.
# 17. The output is a string.
# 18. The output is a string.
# 19. The output is a string.
# 20. The output is a string.
# 21. The output is a string.
# 22. The output is a string.
# 23. The output is a string.
# 24. The output is a string.
# 25. The output is a string.
# 26. The output is a string.
# 27. The output is a string.
# 28. The output is a string.
# 29. The output is a string.
# 30. The output is a string.
# 31. The output is a string.
# 32. The output is a string.
# 33. The output is a string.
# 34. The output is a string.
# 35. The output is a string.
# 36. The output is a string.
# 37. The output is a string.
# 38. The output is a string.
# 39. The output is a string.
# 40. The output is a string.
# 41. The output is a string.
# 42. The output is a string.
# 43. The output is a string.
# 44. The output is a string.
# 45. The output is a string.
# 46. The output is a string.
# 47. The output is a string.
# 48. The output is a string.
# 49. The output is a string.
# 50. The output is a string.
# 51. The output is a string.
# 52. The output is a string.
# 53. The output is a string.
# 54. The output is a string.
# 55. The output is a string.
# 56. The output is a string.
# 57. The output is a string.
# 58. The output is a string.
# 59. The output is a string.
# 60. The output is a string.
# 61. The output is a string.
# 62. The output is a string.
# 63. The output is a string.
# 64. The output is a string.
# 65. The output is a string.
# 66. The output is a string.
# 67. The output is a string.
# 68. The output is a string.
# 69. The output is a string.
# 70. The output is a string.
# 71. The output is a string.
# 72. The output is a string.
# 73. The output is a string.
# 74. The output is a string.
# 75. The output is a string.
# 76. The output is a string.
# 77. The output is a string.
# 78. The output is a string.
# 79. The output is a string.
# 80. The output is a string.
# 81. The output is a string.
# 82. The output is a string.
# 83. The output is a string.
# 84. The output is a string.
# 85. The output is a string.
# 86. The output is a string.
# 87. The output is a string.
# 88. The output is a string.
# 89. The output is a string.
# 90. The output is a string.
# 91. The output is a string.
# 92. The output is a string.
# 93. The output is a string.
# 94. The output is a string.
# 95. The output is a string.
# 96. The output is a string.
# 97. The output is a string.
# 98. The output is a string.
# 99. The output is a string.
# 100. The output is a string.
# 101. The output is a string.
# 102. The output is a string.
# 103. The output is a string.
# 104. The output is a string.
# 105. The output is a string.
# 106. The output is a string.
# 107. The output is a string.
# 108. The output is a string.
# 109. The output is a string.
# 110. The output is a string.
# 111. The output is a string.
# 112. The output is a string.
# 113. The output is a string.
# 114. The output is a string.
# 115. The output is a string.
# 116. The output is a string.
# 117. The output is a string.
# 118. The output is a string.
# 119. The output is a string.
# 120. The output is a string.
# 121. The output is a string.
# 122. The output is a string.
# 123. The output is a string.
# 124. The output is a string.
# 125. The output is a string.
# 126. The output is a string.
# 127. The output is a string.
# 128. The output is a string.
# 129. The output is a string.
# 130. The output is a string.
# 131. The output is a string.
# 132. The output is a string.
# 133. The output is a string.
# 134. The output is a string.
# 135. The output is a string.
# 136. The output is a string.
# 137. The output is a string.
# 138. The output is a string.
# 139. The output is a string.
# 140. The output is a string.
# 141. The output is a string.
# 142. The output is a string.
# 143. The output is a string.
# 144. The output is a string.
# 145. The output is a string.
# 146. The output is a string.
# 147. The output is a string.
# 148. The output is a string.
# 149. The output is a string.
# 150. The output is a string.
# 151. The output is a string.
# 152. The output is a string.
# 153. The output is a string.
# 154. The output is a string.
# 155. The output is a string.
# 156. The output is a string.
# 157. The output is a string.
# 158. The output is a string.
# 159. The","def main():
    num = int(input())
    arr = []
    counter = 0
    fine = 0
    for i in range(num):
        arr.append(input())
    for i in range(num):
        for k in range(num):
            if arr[k][i] == 'C':
                counter += 1
        fine += (counter * (counter - 1)) / 2
        counter = 0
    for i in range(num):
        for k in range(num):
            if arr[i][k] == 'C':
                counter += 1
        fine += (counter * (counter - 1)) / 2
        counter = 0
    print(fine)

main()"
CodeGen,avatar,Java,Python,codeforces_518_B.py,"def main ():
    scan = input()
    s = scan.next()
    t = scan.next()
    ura = 0
    opa = 0
    tmap = {}
    for i in range(len(t)):
        ch = t[i]
        if not tmap.has_key(ch):
            tmap[ch] = 1
        else:
            tmap[ch] += 1
    length = len(s)
    for i in range(length):
        ch = s[i]
        num = tmap.get(ch)
        if num == None:
            continue
        inum = num
        if inum == 1:
            tmap.pop(ch)
        else:
            tmap[ch] -= 1
        s[i] = 'Я'
        ura += 1
    for i in range(length):
        ch = s[i]
        num = tmap.get(ch)
        if num == None:
            continue
        inum = num
        if inum == 1:
            tmap.pop(ch)
        else:
            tmap[ch] -= 1
        opa += 1
    print(ura,opa)","def main ():
    s = input()
    t = input()
    ura = 0
    opa = 0
    tmap = {}
    for i in range(len(t)):
        ch = t[i]
        if not ch in tmap.keys():
            tmap[ch] = 1
        else:
            tmap[ch] += 1
    length = len(s)
    for i in range(length):
        ch = s[i]
        num = tmap.get(ch)
        if num == None:
            continue
        inum = num
        if inum == 1:
            tmap.pop(ch)
        else:
            tmap[ch] -= 1
        s = s[:i] + 'Я' + s[i+1:]
        ura += 1
    for i in range(length):
        ch = s[i]
        num = tmap.get(ch)
        if num == None:
            continue
        inum = num
        if inum == 1:
            tmap.pop(ch)
        else:
            tmap[ch] -= 1
        opa += 1
    print(ura,opa)

main ()"
CodeGen,avatar,Java,Python,codeforces_705_B.py,"def main():
    t = int(input())
    arr = [int(i) for i in input().split()]
    prevWinner = 0
    for i in range(len(arr)):
        if arr[i] == 1:
            if prevWinner == 0:
                prevWinner = 2
            else:
                if ((arr[i] - 1) % 2 == 0):
                    print(2)
                    prevWinner = 2
                else:
                    print(1)
                    prevWinner = 1
        else:
            if prevWinner == 2 or prevWinner == 0:
                if ((arr[i] - 1) % 2 == 0):
                    print(1)
                    prevWinner = 1
                else:
                    print(2)
                    prevWinner = 2
            else:
                if ((arr[i] - 1) % 2 == 0):
                    print(1)
                    prevWinner = 1
                else:
                    print(2)
                    prevWinner = 2

if __name__ == '__main__':
    main()","def main():
    t = int(input())
    arr = [int(i) for i in input().split()]
    prevWinner = 0
    for i in range(len(arr)):
        if arr[i] == 1:
            if prevWinner == 0:
                prevWinner = 2
            else:
                if ((arr[i] - 1) % 2 == 0):
                    print(2)
                    prevWinner = 2
                else:
                    print(1)
                    prevWinner = 1
        else:
            if prevWinner == 2 or prevWinner == 0:
                if ((arr[i] - 1) % 2 == 0):
                    print(1)
                    prevWinner = 1
                else:
                    print(2)
                    prevWinner = 2
            else:
                if ((arr[i] - 1) % 2 == 0):
                    print(1)
                    prevWinner = 1
                else:
                    print(2)
                    prevWinner = 2

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,atcoder_ARC102_C.py,"def nchoosek(n,k):
    if k == 0:
        return 1
    if k == 1:
        return n
    if k == 2:
        return n*(n-1)
    if k == 3:
        return n*(n-1)*(n-2)
    if k == 4:
        return n*(n-1)*(n-2)*(n-3)
    if k == 5:
        return n*(n-1)*(n-2)*(n-3)*(n-4)
    if k == 6:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)
    if k == 7:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)
    if k == 8:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)
    if k == 9:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)
    if k == 10:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)
    if k == 11:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)
    if k == 12:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)
    if k == 13:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)
    if k == 14:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)
    if k == 15:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)
    if k == 16:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)
    if k == 17:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)
    if k == 18:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)
    if k == 19:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)*(n-18)
    if k == 20:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)*(n-18)*(n-19)
    if k == 21:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)*(n-18)*(n-19)*(n-20)
    if k == 22:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)*(n-18)*(n-19)*(n-20)*(n-21)
    if k == 23:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)*(n-18)*(n-19)*(n-20)*(n-21)*(n-22)
    if k == 24:
        return n*(n-1)*(n-2)*(n-3)*(n","def nchoosek(n,k):
    if k == 0:
        return 1
    if k == 1:
        return n
    if k == 2:
        return n*(n-1)
    if k == 3:
        return n*(n-1)*(n-2)
    if k == 4:
        return n*(n-1)*(n-2)*(n-3)
    if k == 5:
        return n*(n-1)*(n-2)*(n-3)*(n-4)
    if k == 6:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)
    if k == 7:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)
    if k == 8:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)
    if k == 9:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)
    if k == 10:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)
    if k == 11:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)
    if k == 12:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)
    if k == 13:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)
    if k == 14:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)
    if k == 15:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)
    if k == 16:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)
    if k == 17:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)
    if k == 18:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)
    if k == 19:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)*(n-18)
    if k == 20:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)*(n-18)*(n-19)
    if k == 21:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)*(n-18)*(n-19)*(n-20)
    if k == 22:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)*(n-18)*(n-19)*(n-20)*(n-21)
    if k == 23:
        return n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)*(n-8)*(n-9)*(n-10)*(n-11)*(n-12)*(n-13)*(n-14)*(n-15)*(n-16)*(n-17)*(n-18)*(n-19)*(n-20)*(n-21)*(n-22)
    if k == 24:
        return n*(n-1)*(n-2)*(n-3)*(n"
CodeGen,avatar,Java,Python,codeforces_99_A.py,"import java.util.Scanner ; import java.util.ArrayList ; import java.util.Arrays ; import java.math.BigInteger ; def main ( ):
	str = raw_input ( ). toCharArray ( )
	dotIndex = 0
	for i in range ( 0, len ( str ) ):
		if str [ i ] == '.':
			dotIndex = i
			break
	if str [ dotIndex - 1 ] == '9':
		print ""GOTO Vasilisa.""
	else:
		if int ( str [ dotIndex + 1 ] + """" ) > 4:
			str = """"
			for i in range ( 0, dotIndex ):
				str += str [ i ]
			print str + ""1""
		else:
			for i in range ( 0, dotIndex ):
				print str [ i ]
			print
main ( )



Input:

2.1

Output:

GOTO Vasilisa.
2.1

Input:

1.1

Output:

1.1

Input:

1.1.1

Output:

1.1.1

Input:

1.1.1.1

Output:

1.1.1.1

Input:

1.1.1.1.1

Output:

1.1.1.1.1

Input:

1.1.1.1.1.1

Output:

1.1.1.1.1.1

Input:

1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1","import java.util.Scanner ; import java.util.ArrayList ; import java.util.Arrays ; import java.math.BigInteger ; def main ( ):
	str = raw_input ( ). toCharArray ( )
	dotIndex = 0
	for i in range ( 0, len ( str ) ):
		if str [ i ] == '.':
			dotIndex = i
			break
	if str [ dotIndex - 1 ] == '9':
		print ""GOTO Vasilisa.""
	else:
		if int ( str [ dotIndex + 1 ] + """" ) > 4:
			str = """"
			for i in range ( 0, dotIndex ):
				str += str [ i ]
			print str + ""1""
		else:
			for i in range ( 0, dotIndex ):
				print str [ i ]
			print
main ( )



Input:

2.1

Output:

GOTO Vasilisa.
2.1

Input:

1.1

Output:

1.1

Input:

1.1.1

Output:

1.1.1

Input:

1.1.1.1

Output:

1.1.1.1

Input:

1.1.1.1.1

Output:

1.1.1.1.1

Input:

1.1.1.1.1.1

Output:

1.1.1.1.1.1

Input:

1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Input:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1

Output:

1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"
CodeGen,avatar,Java,Python,atcoder_ABC142_A.py,"def main():
    try:
        br = BufferedReader(InputStreamReader(System.in))
        input = float(br.readline())
        countOdd = round(input/2)
        result = countOdd/input
        result = round(result, 10)
        print(result)
    except IOError as e:
        print(e)
        sys.exit(0)
    except Exception as e:
        print(e)
        sys.exit(0)



Input Format

A single positive integer denoting the number of test cases.

Output Format

For each test case, print the result of the program.

Sample Input

1
10
Sample Output

0.5

Explanation

The number of odd numbers in the range [0, 10) is 5.
""""""","def main():
    try:
        br = BufferedReader(InputStreamReader(System.in))
        input = float(br.readline())
        countOdd = round(input/2)
        result = countOdd/input
        result = round(result, 10)
        print(result)
    except IOError as e:
        print(e)
        sys.exit(0)
    except Exception as e:
        print(e)
        sys.exit(0)



Input Format

A single positive integer denoting the number of test cases.

Output Format

For each test case, print the result of the program.

Sample Input

1
10
Sample Output

0.5

Explanation

The number of odd numbers in the range [0, 10) is 5.
"""""""
CodeGen,avatar,Java,Python,codeforces_154_A.py,"import java.util.* ; import java.io.* ; import java.math.* ; class codeforces_154_A { def main ( self, hi ) : input = raw_input ( ) ; arr = input.readline ( ).toCharArray ( ) ; N = len ( arr ) ; K = int ( raw_input ( ) ) ; res = 0 ; for k in xrange ( K ) : input = raw_input ( ) ; a = 0 ; b = 0 ; for i in xrange ( N ) : if arr [ i ] == input.charAt ( 0 ) : a += 1 ; else : if arr [ i ] == input.charAt ( 1 ) : b += 1 ; else : res += min ( a, b ) ; a = b = 0 ; res += min ( a, b ) ; print res ;
} }



Input Format:

The first line contains the number of test cases, T. T test cases follow. Each test case consists of two lines. The first line contains the length of the string, N. The second line contains the string, S.

Output Format:

For each test case, print the minimum number of moves required to change all the characters of string S to the corresponding characters of string T.

Sample Input:

2
3
abc
def
Sample Output:

1
0
Explanation:

We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.

Sample Input:

2
3
abd
def
Sample Output:

2
0
Explanation:

We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of string S to the third character of string T.
We need to change the first character of string S to the first character of string T.
We need to change the second character of string S to the second character of string T.
We need to change the third character of","import java.util.* ; import java.io.* ; import java.math.* ; class codeforces_154_A { def main ( self, hi ) : input = raw_input ( ) ; arr = input.readline ( ).toCharArray ( ) ; N = len ( arr ) ; K = int ( raw_input ( ) ) ; res = 0 ; for k in xrange ( K ) : input = raw_input ( ) ; a = 0 ; b = 0 ; for i in xrange ( N ) : if arr [ i ] == input.charAt ( 0 ) : a += 1 ; else : if arr [ i ] == input.charAt ( 1 ) : b += 1 ; else : res += min ( a, b ) ; a = b = 0 ; res += min ( a, b ) ; print res ;
} }"
CodeGen,avatar,Java,Python,codeforces_387_A.py,"import java.io.IOException ; import java.time.LocalTime ; import java.util.* ; def main ( ):
	sc = java.io.InputStreamReader ( System.in )
	s = sc.readline ( ).split ( "":"" )
	t = sc.readline ( ).split ( "":"" )
	x = java.time.LocalTime ( int ( s [ 0 ] ), int ( s [ 1 ] ) )
	y = java.time.LocalTime ( int ( t [ 0 ] ), int ( t [ 1 ] ) )
	print ( x.minusHours ( y.hour ).minusMinutes ( y.minute ) )
main ( )



Expected Output:

1:00

Explanation:

The number of hours between 1:00 and 1:00 is 0.

Note:

The number of minutes in a hour is 60.

Tags: Math, String
Similar Problems: (M) Add Two Numbers, (M) Multiply Strings, (M) Add Two Numbers II
public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String[] s = sc.nextLine().split("":"");
        String[] t = sc.nextLine().split("":"");
        LocalTime x = LocalTime.of(Integer.parseInt(s[0]), Integer.parseInt(s[1]));
        LocalTime y = LocalTime.of(Integer.parseInt(t[0]), Integer.parseInt(t[1]));
        System.out.println(x.minusHours(y.getHour()).minusMinutes(y.getMinute()));
    }
}","import java.io.IOException ; import java.time.LocalTime ; import java.util.* ; def main ( ):
	sc = java.io.InputStreamReader ( System.in )
	s = sc.readline ( ).split ( "":"" )
	t = sc.readline ( ).split ( "":"" )
	x = java.time.LocalTime ( int ( s [ 0 ] ), int ( s [ 1 ] ) )
	y = java.time.LocalTime ( int ( t [ 0 ] ), int ( t [ 1 ] ) )
	print ( x.minusHours ( y.hour ).minusMinutes ( y.minute ) )
main ( )"
CodeGen,avatar,Java,Python,codeforces_400_B.py,"class codeforces_400_B {
    def main(args):
        n = int(input())
        m = int(input())
        arrs = []
        for i in range(n):
            arrs.append(input())
        length = [0] * n
        index = 0
        returnDex = 0
        for tmp in arrs:
            dexG = tmp.index(""G"")
            dexS = tmp.index(""S"")
            if dexG > dexS:
                returnDex = -1
            length[index] = dexS - dexG
            index += 1
        set = set()
        for len in length:
            set.add(len)
        if returnDex == -1:
            print(returnDex)
        else:
            print(len(set))

}","class codeforces_400_B {
    def main(args):
        n = int(input())
        m = int(input())
        arrs = []
        for i in range(n):
            arrs.append(input())
        length = [0] * n
        index = 0
        returnDex = 0
        for tmp in arrs:
            dexG = tmp.index(""G"")
            dexS = tmp.index(""S"")
            if dexG > dexS:
                returnDex = -1
            length[index] = dexS - dexG
            index += 1
        set = set()
        for len in length:
            set.add(len)
        if returnDex == -1:
            print(returnDex)
        else:
            print(len(set))

}"
CodeGen,avatar,Java,Python,atcoder_ABC169_E.py,"import java.util.* ; import java.io.* ; 
def main ():
    num = 998244353
    bf = java.io.BufferedReader(java.io.InputStreamReader(System.in))
    out = java.io.PrintWriter(java.io.OutputStreamWriter(System.out))
    n = int(bf.readline())
    ai = [int(bf.readline()) for i in range(n)]
    bi = [int(bf.readline()) for i in range(n)]
    ai.sort()
    bi.sort()
    if n % 2 == 1:
        out.println(bi[n // 2] - ai[n // 2] + 1)
        out.close()
    else:
        b = (ai[n // 2] + ai[n // 2 - 1] + 0.0) / 2
        c = (bi[n // 2] + bi[n // 2 - 1] + 0.0) / 2
        out.println(2 * (c - b) + 1)
        out.close()

# Note:
# The above Java code is a solution to the problem.
# The Python code is the exact same solution.
# The only difference is the syntax.
# The Java code is more efficient and readable.
# The Python code is more concise and readable.
# The Java code is more efficient.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.
# The Java code is more efficient.
# The Python code is more efficient.
# The Java code is more concise.
# The Python code is more concise.
# The Java code is more readable.
# The Python code is more readable.","import java.util.* ; import java.io.* ; 
def main ():
    num = 998244353
    bf = java.io.BufferedReader(java.io.InputStreamReader(System.in))
    out = java.io.PrintWriter(java.io.OutputStreamWriter(System.out))
    n = int(bf.readline())
    ai = [int(bf.readline()) for i in range(n)]
    bi = [int(bf.readline()) for i in range(n)]
    ai.sort()
    bi.sort()
    if n % 2 == 1:
        out.println(bi[n // 2] - ai[n // 2] + 1)
        out.close()
    else:
        b = (ai[n // 2] + ai[n // 2 - 1] + 0.0) / 2
        c = (bi[n // 2] + bi[n // 2 - 1] + 0.0) / 2
        out.println(2 * (c - b) + 1)
        out.close()"
CodeGen,avatar,Java,Python,codeforces_583_B.py,"def main ( ):
    in = raw_input ( )
    n = int ( in.next ( ) )
    a = [ int ( in.next ( ) ) for i in range ( n ) ]
    b = [ 0 for i in range ( n ) ]
    s = - 1
    for i in range ( n ):
        a[i] = int ( in.next ( ) )
        b[i] = 0
    tem = 1
    q = 0
    while q!= n:
        s += 1
        if tem == 1:
            for i in range ( n ):
                if a[i] <= q and b[i] == 0:
                    b[i] = 1
                    q += 1
        else:
            for i in range ( n - 1, - 1, - 1 ):
                if a[i] <= q and b[i] == 0:
                    b[i] = 1
                    q += 1
        tem = not tem
    print s","def main ( ):
    n = int ( input ( ) )
    a = list ( map ( int, input ( ).split ( ) ))
    b = [ 0 for i in range ( n ) ]
    s = - 1
    tem = 1
    q = 0
    while q!= n:
        s += 1
        if tem == 1:
            for i in range ( n ):
                if a[i] <= q and b[i] == 0:
                    b[i] = 1
                    q += 1
        else:
            for i in range ( n - 1, - 1, - 1 ):
                if a[i] <= q and b[i] == 0:
                    b[i] = 1
                    q += 1
        tem = not tem
    print(s)
    
main()"
CodeGen,avatar,Java,Python,codeforces_61_B.py,"import java.util.* ; public class codeforces_61_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String word1 = in.nextLine ( ).replaceAll ( ""[^a-zA-Z]"", """" ).toLowerCase ( ) ; String word2 = in.nextLine ( ).replaceAll ( ""[^a-zA-Z]"", """" ).toLowerCase ( ) ; String word3 = in.nextLine ( ).replaceAll ( ""[^a-zA-Z]"", """" ).toLowerCase ( ) ; String perm1 = word1 + word2 + word3 ; String perm2 = word1 + word3 + word2 ; String perm3 = word2 + word1 + word3 ; String perm4 = word2 + word3 + word1 ; String perm5 = word3 + word2 + word1 ; String perm6 = word3 + word1 + word2 ; int students = in.nextInt ( ) ; in.nextLine ( ) ; for ( int i = 0 ; i < students ; i ++ ) { String testCase = in.nextLine ( ).replaceAll ( ""[^a-zA-Z]"", """" ).toLowerCase ( ) ; if ( testCase.equals ( perm1 ) or testCase.equals ( perm2 ) or testCase.equals ( perm3 ) or testCase.equals ( perm4 ) or testCase.equals ( perm5 ) or testCase.equals ( perm6 ) ) { print ( ""ACC"" ) ; } else { print ( ""WA"" ) ; } } } }","import java.util.* ; public class codeforces_61_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String word1 = in.nextLine ( ).replaceAll ( ""[^a-zA-Z]"", """" ).toLowerCase ( ) ; String word2 = in.nextLine ( ).replaceAll ( ""[^a-zA-Z]"", """" ).toLowerCase ( ) ; String word3 = in.nextLine ( ).replaceAll ( ""[^a-zA-Z]"", """" ).toLowerCase ( ) ; String perm1 = word1 + word2 + word3 ; String perm2 = word1 + word3 + word2 ; String perm3 = word2 + word1 + word3 ; String perm4 = word2 + word3 + word1 ; String perm5 = word3 + word2 + word1 ; String perm6 = word3 + word1 + word2 ; int students = in.nextInt ( ) ; in.nextLine ( ) ; for ( int i = 0 ; i < students ; i ++ ) { String testCase = in.nextLine ( ).replaceAll ( ""[^a-zA-Z]"", """" ).toLowerCase ( ) ; if ( testCase.equals ( perm1 ) or testCase.equals ( perm2 ) or testCase.equals ( perm3 ) or testCase.equals ( perm4 ) or testCase.equals ( perm5 ) or testCase.equals ( perm6 ) ) { print ( ""ACC"" ) ; } else { print ( ""WA"" ) ; } } } }"
CodeGen,avatar,Java,Python,atcoder_ABC171_B.py,"class atcoder_ABC171_B {
    def main(self, args):
        inputStream = System.in
        outputStream = System.out
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        Solution = Solution()
        Solution.solve(inputReader, printWriter)
        printWriter.close()
    def __init__(self):
        self.inputStream = System.in
        self.outputStream = System.out
        self.inputReader = InputReader(self.inputStream)
        self.printWriter = PrintWriter(self.outputStream)
        self.Solution = Solution()
        self.Solution.solve(self.inputReader, self.printWriter)
        self.printWriter.close()
    def __del__(self):
        self.printWriter.close()
    def solve(self, inputReader, printWriter):
        n = inputReader.n()
        k = inputReader.n()
        a = [inputReader.ni() for i in range(n)]
        a.sort()
        ans = 0
        for i in range(k):
            ans += a[i]
        printWriter.println(ans)
class InputReader:
    def __init__(self, inputStream):
        self.reader = BufferedReader(InputStreamReader(inputStream))
        self.tokenizer = None
    def n(self):
        while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
            try:
                self.tokenizer = StringTokenizer(self.reader.readLine())
            except IOException as e:
                raise RuntimeError(e)
        return int(self.tokenizer.nextToken())
    def ni(self):
        return int(self.n())

class Solution:
    def solve(self, inputReader, printWriter):
        n = inputReader.ni()
        k = inputReader.ni()
        a = [inputReader.ni() for i in range(n)]
        a.sort()
        ans = 0
        for i in range(k):
            ans += a[i]
        printWriter.println(ans)

import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.OutputStream; import java.io.PrintWriter; import java.util.Arrays; import java.util.StringTokenizer; public class atcoder_ABC171_B { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); Solution sol = new Solution(); sol.solve(in, out); out.close(); } private static class InputReader { private BufferedReader reader; private StringTokenizer tokenizer; private InputReader(InputStream stream) { reader = new BufferedReader(new InputStreamReader(stream)); tokenizer = null; } private String n() { while (tokenizer == null ||!tokenizer.hasMoreTokens()) { try { tokenizer = new StringTokenizer(reader.readLine()); } catch (IOException e) { throw new RuntimeException(e); } } return tokenizer.nextToken(); } private int ni() { return Integer.parseInt(n()); } } } }","class atcoder_ABC171_B {
    def main(self, args):
        inputStream = System.in
        outputStream = System.out
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        Solution = Solution()
        Solution.solve(inputReader, printWriter)
        printWriter.close()
    def __init__(self):
        self.inputStream = System.in
        self.outputStream = System.out
        self.inputReader = InputReader(self.inputStream)
        self.printWriter = PrintWriter(self.outputStream)
        self.Solution = Solution()
        self.Solution.solve(self.inputReader, self.printWriter)
        self.printWriter.close()
    def __del__(self):
        self.printWriter.close()
    def solve(self, inputReader, printWriter):
        n = inputReader.n()
        k = inputReader.n()
        a = [inputReader.ni() for i in range(n)]
        a.sort()
        ans = 0
        for i in range(k):
            ans += a[i]
        printWriter.println(ans)
class InputReader:
    def __init__(self, inputStream):
        self.reader = BufferedReader(InputStreamReader(inputStream))
        self.tokenizer = None
    def n(self):
        while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
            try:
                self.tokenizer = StringTokenizer(self.reader.readLine())
            except IOException as e:
                raise RuntimeError(e)
        return int(self.tokenizer.nextToken())
    def ni(self):
        return int(self.n())

class Solution:
    def solve(self, inputReader, printWriter):
        n = inputReader.ni()
        k = inputReader.ni()
        a = [inputReader.ni() for i in range(n)]
        a.sort()
        ans = 0
        for i in range(k):
            ans += a[i]
        printWriter.println(ans)

import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.OutputStream; import java.io.PrintWriter; import java.util.Arrays; import java.util.StringTokenizer; public class atcoder_ABC171_B { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); Solution sol = new Solution(); sol.solve(in, out); out.close(); } private static class InputReader { private BufferedReader reader; private StringTokenizer tokenizer; private InputReader(InputStream stream) { reader = new BufferedReader(new InputStreamReader(stream)); tokenizer = null; } private String n() { while (tokenizer == null ||!tokenizer.hasMoreTokens()) { try { tokenizer = new StringTokenizer(reader.readLine()); } catch (IOException e) { throw new RuntimeException(e); } } return tokenizer.nextToken(); } private int ni() { return Integer.parseInt(n()); } } } }"
CodeGen,avatar,Java,Python,atcoder_AGC028_A.py,"def main(n, m, gcd):
    s = raw_input()
    t = raw_input()
    return min(filter(lambda k: s[k * n // gcd]!= t[k * m // gcd], range(gcd)), key=lambda k: -1 if k is None else k * n // gcd)

if __name__ == '__main__':
    n = int(raw_input())
    m = int(raw_input())
    gcd = int(raw_input())
    s = raw_input()
    t = raw_input()
    print min(filter(lambda k: s[k * n // gcd]!= t[k * m // gcd], range(gcd)), key=lambda k: -1 if k is None else k * n // gcd)","def main(n, m, gcd):
    s = raw_input()
    t = raw_input()
    return min(filter(lambda k: s[k * n // gcd]!= t[k * m // gcd], range(gcd)), key=lambda k: -1 if k is None else k * n // gcd)

if __name__ == '__main__':
    n = int(raw_input())
    m = int(raw_input())
    gcd = int(raw_input())
    s = raw_input()
    t = raw_input()
    print min(filter(lambda k: s[k * n // gcd]!= t[k * m // gcd], range(gcd)), key=lambda k: -1 if k is None else k * n // gcd)"
CodeGen,avatar,Java,Python,atcoder_AGC012_A.py,"class atcoder_AGC012_A:
    def main(self, args):
        sc = Scanner(System.in)
        n = sc.nextInt()
        array = [sc.nextInt() for _ in range(3 * n)]
        array.sort()
        head = len(array) - 2
        res = 0
        for i in range(n):
            res += array[head]
            head -= 2
        print(res)","class atcoder_AGC012_A:
    def main(self):
        n = int(input())
        array = list(map(int, input().split()))
        array.sort()
        head = len(array) - 2
        res = 0
        for i in range(n):
            res += array[head]
            head -= 2
        print(res)
        
solution = atcoder_AGC012_A()
solution.main()"
CodeGen,avatar,Java,Python,codeforces_242_B.py,"def main():
    n = int(input())
    a = []
    b = []
    for i in range(n):
        a.append(int(input()))
        b.append(int(input()))
        left = INF
        right = 0
        for j in range(n):
            left = min(left, a[j])
            right = max(right, b[j])
        for j in range(n):
            if left == a[j] and right == b[j]:
                print(j + 1)
                return
    print(-1)","INF = int(1e9) + 5

def main():
    n = int(input())
    a = []
    b = []
    left = INF
    right = 0
    for i in range(n):
        inputs = list(input().split())
        a.append(int(inputs[0]))
        b.append(int(inputs[1]))
        left = min(left, a[i])
        right = max(right, b[i])
    for j in range(n):
        if left == a[j] and right == b[j]:
            print(j + 1)
            return
    print(-1)
    
main()"
CodeGen,avatar,Java,Python,codeforces_333_B.py,"class codeforces_333_B {
    def main(args):
        n = int(input())
        m = int(input())
        bannedRows = set()
        bannedCols = set()
        for i in range(m):
            r = int(input())
            if r > 1 and r < n:
                bannedRows.add(r)
            c = int(input())
            if c > 1 and c < n:
                bannedCols.add(c)
        answer = (n - 2) * 2
        answer -= len(bannedRows)
        answer -= len(bannedCols)
        if n % 2!= 0:
            mid = (n + 1) / 2
            if not bannedRows.contains(mid) and not bannedCols.contains(mid):
                answer -= 1
        print(answer)


    def test(args):
        assert main(args) == 4

}","class codeforces_333_B {
    def main(args):
        n = int(input())
        m = int(input())
        bannedRows = set()
        bannedCols = set()
        for i in range(m):
            r = int(input())
            if r > 1 and r < n:
                bannedRows.add(r)
            c = int(input())
            if c > 1 and c < n:
                bannedCols.add(c)
        answer = (n - 2) * 2
        answer -= len(bannedRows)
        answer -= len(bannedCols)
        if n % 2!= 0:
            mid = (n + 1) / 2
            if not bannedRows.contains(mid) and not bannedCols.contains(mid):
                answer -= 1
        print(answer)


    def test(args):
        assert main(args) == 4

}"
CodeGen,avatar,Java,Python,atcoder_ABC043_B.py,"import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.io.UncheckedIOException ; import java.util.StringTokenizer ; import java.io.IOException ; import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.InputStream ; class atcoder_ABC043_B { def main ( self, args ): inputStream = System.in outputStream = System.out self.solve ( 1, inputStream, outputStream ) out.close () def solve ( self, testNumber, in, out ): s = in.readline () d = '' for c in s.strip ( ): switch ( c ): case '0': d += '0' break case '1': d += '1' break case 'B': if ( d ): d = d[:-1] d = d[:-1] break out.println ( d ) def __init__ ( self ): self.reader = BufferedReader ( InputStreamReader ( inputStream ) ) self.tokenizer = StringTokenizer ( self.reader.readline ( ) ) def __del__ ( self ): self.reader.close ( )","import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.io.UncheckedIOException ; import java.util.StringTokenizer ; import java.io.IOException ; import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.InputStream ; class atcoder_ABC043_B { def main ( self, args ): inputStream = System.in outputStream = System.out self.solve ( 1, inputStream, outputStream ) out.close () def solve ( self, testNumber, in, out ): s = in.readline () d = '' for c in s.strip ( ): switch ( c ): case '0': d += '0' break case '1': d += '1' break case 'B': if ( d ): d = d[:-1] d = d[:-1] break out.println ( d ) def __init__ ( self ): self.reader = BufferedReader ( InputStreamReader ( inputStream ) ) self.tokenizer = StringTokenizer ( self.reader.readline ( ) ) def __del__ ( self ): self.reader.close ( )"
CodeGen,avatar,Java,Python,codeforces_617_B.py,"def main(args):
    n = input()
    arr = []
    for i in range(n):
        if input() == 1:
            arr.append(i)
    if len(arr) == 0:
        print(0)
    else:
        result = 1
        for i in range(1, len(arr)):
            result *= arr[i] - arr[i-1]
        print(result)","def main():
    n = int(input())
    arr = []
    inputs = list(input().split())
    for i in range(n):
        if int(inputs[i]) == 1:
            arr.append(i)
    if len(arr) == 0:
        print(0)
    else:
        result = 1
        for i in range(1, len(arr)):
            result *= arr[i] - arr[i-1]
        print(result)

main()"
CodeGen,avatar,Java,Python,atcoder_AGC027_B.py,"class Solution:
    def solve(self):
        N, X, x = map(int, input().split())
        xsum = [0] + x
        ans = X * N + 5 * xsum[-1]
        for i in range(1, N):
            cost = X * i + 5 * (xsum[-1] - xsum[-i - 1])
            for j in range(5, 0, -2):
                if cost > ans:
                    break
                cost += j * (xsum[-i] - xsum[-i - j])
            ans = min(ans, cost)
        print(ans + N * X)


if __name__ == '__main__':
    s = Solution()
    s.solve()","class Solution:
    def solve(self):
        N, X = map(int, input().split())
        x = list(map(int, input().split()))
        xsum = [0] + x
        ans = X * N + 5 * xsum[-1]
        for i in range(1, N):
            cost = X * i + 5 * (xsum[-1] - xsum[-i - 1])
            for j in range(5, 0, -2):
                if cost > ans:
                    break
                cost += j * (xsum[-i] - xsum[-i - j])
            ans = min(ans, cost)
        print(ans + N * X)


if __name__ == '__main__':
    s = Solution()
    s.solve()"
CodeGen,avatar,Java,Python,atcoder_ABC178_A.py,"def main(args):
    scan = Scanner(System.in)
    x = int(scan.next())
    bool = x == 1
    result = not bool
    print(result)
    out = sys.stdout
    out.flush()","def main():
    x = int(input())
    bool = x == 1
    result = 1 if not bool else 0
    print(result)

main()"
CodeGen,avatar,Java,Python,atcoder_ABC151_A.py,"def main ():
    r = BufferedReader(InputStreamReader(System.in), 1)
    s = r.readline()
    print(chr(ord(s[0]) + 1))

class RemRing:
    def __init__(self, module):
        self.module = module

    def sum(self, a, b):
        return (a + b + self.module) % self.module

    def sub(self, a, b):
        return (a - b + self.module) % self.module

    def prod(self, a, b):
        return (a * b) % self.module

    def div(self, a, b):
        return (a * inv(b)) % self.module

    def inv(self, a):
        b = self.module
        u = 1
        v = 0
        while b > 0:
            t = a / b
            a -= t * b
            u -= t * v
            z = a
            a = b
            b = z
            z = u
            u = v
            v = z
        u %= self.module
        if u < 0:
            u += self.module
        return u



# Ref: https://www.youtube.com/watch?v=QJ9Zg8uGn-U","def main ():
    r = BufferedReader(InputStreamReader(System.in), 1)
    s = r.readline()
    print(chr(ord(s[0]) + 1))

class RemRing:
    def __init__(self, module):
        self.module = module

    def sum(self, a, b):
        return (a + b + self.module) % self.module

    def sub(self, a, b):
        return (a - b + self.module) % self.module

    def prod(self, a, b):
        return (a * b) % self.module

    def div(self, a, b):
        return (a * inv(b)) % self.module

    def inv(self, a):
        b = self.module
        u = 1
        v = 0
        while b > 0:
            t = a / b
            a -= t * b
            u -= t * v
            z = a
            a = b
            b = z
            z = u
            u = v
            v = z
        u %= self.module
        if u < 0:
            u += self.module
        return u



# Ref: https://www.youtube.com/watch?v=QJ9Zg8uGn-U"
CodeGen,avatar,Java,Python,atcoder_ABC150_E.py,"def main ():
    n = int(input())
    sa = input().split()
    c = [int(sa[i]) for i in range(n)]
    mod = 1000000007
    if n == 1:
        print(c[0] * 2 % mod)
        return
    sa = input().split()
    c = [int(sa[i]) for i in range(n)]
    b = 2 ** n
    a = 2 ** (n - 2)
    ans = 0
    for i in range(2, n + 1):
        val = a * i % mod
        val *= c[n + 1 - i]
        val %= mod
        ans += val
        ans %= mod
    ans *= b
    ans %= mod
    print(ans)","def main ():
    inputs = input().split()
    n = int(inputs[0])
    inputs = input().split()
    c = [int(x) for x in inputs]
    mod = 1000000007
    if n == 1:
        print(c[0] * 2 % mod)
        return
    b = 2 ** n
    a = 2 ** (n - 2)
    ans = 0
    for i in range(2, n + 2):
        val = a * i % mod
        val *= c[n + 1 - i]
        val %= mod
        ans += val
        ans %= mod
    ans *= b
    ans %= mod
    print(ans)

main()"
CodeGen,avatar,Java,Python,atcoder_ABC042_A.py,"def main(args):
    br = BufferedReader(InputStreamReader(System.in))
    line = br.readline()
    list = line.split(' ')
    x = int(list[0])
    a = int(list[1])
    y = int(list[2])
    h = ""NO""
    if x == 5 or x == 7 or a == 5 or a == 7 or y == 5 or y == 7:
        if x + y + a == 17:
            h = ""YES""
    print(h)","def main():
    x, a, y = map(int, input().split())
    h = ""NO""
    if x == 5 or x == 7 or a == 5 or a == 7 or y == 5 or y == 7:
        if x + y + a == 17:
            h = ""YES""
    print(h)
    
main()"
CodeGen,avatar,Java,Python,atcoder_AGC011_C.py,"import java.util.* ; class Main implements Runnable { ArrayList [ ] graph ; boolean [ ] visited ; int [ ] color ; long one ; long bipartite ; long count ; boolean mujun ; int dfs ( int a, int c ) { if ( visited [ a ] ) { if ( color [ a ] >= 0 and color [ a ]!= c ) mujun = True ; return 0 ; } visited [ a ] = True ; color [ a ] = c ; int total = 1 ; for ( int b : graph [ a ] ) { total += dfs ( b, 1 - c ) ; } return total ; } public void run ( ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int m = scan.nextInt ( ) ; this.graph = new ArrayList [ n ] ; for ( int i = 0 ; i < n ; ++ i ) this.graph [ i ] = new ArrayList < Integer > ( ) ; for ( int i = 0 ; i < m ; ++ i ) { int u = scan.nextInt ( ) - 1 ; int v = scan.nextInt ( ) - 1 ; this.graph [ u ].add ( v ) ; this.graph [ v ].add ( u ) ; } visited = new boolean [ n ] ; color = new int [ n ] ; Arrays.fill ( color, - 1 ) ; one = 0 ; bipartite = 0 ; count = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( visited [ i ] ) continue ; count ++ ; mujun = False ; int kind = dfs ( i, 0 ) ; if ( kind == 1 ) one ++ ; else if (! mujun ) bipartite ++ ; } long total = one * ( 2 * n - one ) ; total += ( count - one ) * ( count - one ) ; total += bipartite * bipartite ; System.out.println ( total ) ; } public static void main ( String [ ] args ) { new Thread ( null, new Main ( ), """", 128 * 1024 * 1024 ).start ( ) ; } }","import java.util.* ; class Main implements Runnable { ArrayList [ ] graph ; boolean [ ] visited ; int [ ] color ; long one ; long bipartite ; long count ; boolean mujun ; int dfs ( int a, int c ) { if ( visited [ a ] ) { if ( color [ a ] >= 0 and color [ a ]!= c ) mujun = True ; return 0 ; } visited [ a ] = True ; color [ a ] = c ; int total = 1 ; for ( int b : graph [ a ] ) { total += dfs ( b, 1 - c ) ; } return total ; } public void run ( ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int m = scan.nextInt ( ) ; this.graph = new ArrayList [ n ] ; for ( int i = 0 ; i < n ; ++ i ) this.graph [ i ] = new ArrayList < Integer > ( ) ; for ( int i = 0 ; i < m ; ++ i ) { int u = scan.nextInt ( ) - 1 ; int v = scan.nextInt ( ) - 1 ; this.graph [ u ].add ( v ) ; this.graph [ v ].add ( u ) ; } visited = new boolean [ n ] ; color = new int [ n ] ; Arrays.fill ( color, - 1 ) ; one = 0 ; bipartite = 0 ; count = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( visited [ i ] ) continue ; count ++ ; mujun = False ; int kind = dfs ( i, 0 ) ; if ( kind == 1 ) one ++ ; else if (! mujun ) bipartite ++ ; } long total = one * ( 2 * n - one ) ; total += ( count - one ) * ( count - one ) ; total += bipartite * bipartite ; System.out.println ( total ) ; } public static void main ( String [ ] args ) { new Thread ( null, new Main ( ), """", 128 * 1024 * 1024 ).start ( ) ; } }"
CodeGen,avatar,Java,Python,atcoder_ABC164_A.py,"def main(args):
    scan = Scanner(System.in)
    scList = []
    for i in range(0):
        try:
            scList.append(scan.nextLine())
        except:
            break
    numlist = scList[0].split(' ')
    Sheep = int(numlist[0])
    Wolve = int(numlist[1])
    if Wolve >= Sheep:
        print('unsafe')
    else:
        print('safe')

# Run the code and get the output.

# Output:
# safe
# unsafe","def main():
    sheep, wolve = map(int, input().split())
    if Wolve >= Sheep:
        print('unsafe')
    else:
        print('safe')

main()"
CodeGen,avatar,Java,Python,atcoder_ABC174_E.py,"class atcoder_ABC174_E {
    def main(args):
        inputStream = System.in
        outputStream = System.out
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        Solution = Solution()
        Solution.solve(inputReader, printWriter)
        printWriter.close()
    class Solution {
        def solve(self, inputReader, printWriter):
            n = inputReader.nextInt()
            k = inputReader.nextInt()
            logsLength = inputReader.readArray(n)
            min = 1
            max = (int) 1e9 + 1000
            while min < max:
                mid = (min + max) / 2
                if nei(mid, logsLength, k):
                    max = mid
                else:
                    min = mid + 1
            printWriter.println(min)
        def nei(self, mid, logsLength, k):
            for log in logsLength:
                k -= (log + mid - 1) / mid - 1
            return k >= 0
    }
    class InputReader {
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream))
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
        def nextInt(self):
            return int(self.next())
        def readArray(self, n):
            a = [self.nextInt() for i in range(n)]
            return a
    }
}




public class atcoder_ABC174_E {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        Solution sol = new Solution();
        sol.solve(in, out);
        out.close();
    }

    private static class InputReader {
        private BufferedReader reader;
        private StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream));
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null ||!tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = nextInt();
            }
            return a;
        }
    }

    private static class Solution {
        public void solve(InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int k = in.nextInt();
            int[] logsLength = in.readArray(n);
            int min = 1;
            int max = (int) 1e9 + 1000;
            while (min < max) {
                int mid = (min + max) / 2;
                if (nei(mid, logsLength, k)) {
                    max = mid;
                } else {
                    min = mid + 1;
                }
            }
            out.println(min);
        }

        private boolean nei(int mid, int[] logsLength, int k) {
            for (int log : logsLength) {
                k -= (log + mid - 1) / mid - 1;
            }
            return k >= 0;
        }
    }
}","class atcoder_ABC174_E {
    def main(args):
        inputStream = System.in
        outputStream = System.out
        inputReader = InputReader(inputStream)
        printWriter = PrintWriter(outputStream)
        Solution = Solution()
        Solution.solve(inputReader, printWriter)
        printWriter.close()
    class Solution {
        def solve(self, inputReader, printWriter):
            n = inputReader.nextInt()
            k = inputReader.nextInt()
            logsLength = inputReader.readArray(n)
            min = 1
            max = (int) 1e9 + 1000
            while min < max:
                mid = (min + max) / 2
                if nei(mid, logsLength, k):
                    max = mid
                else:
                    min = mid + 1
            printWriter.println(min)
        def nei(self, mid, logsLength, k):
            for log in logsLength:
                k -= (log + mid - 1) / mid - 1
            return k >= 0
    }
    class InputReader {
        def __init__(self, inputStream):
            self.reader = BufferedReader(InputStreamReader(inputStream))
            self.tokenizer = None
        def next(self):
            while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
                try:
                    self.tokenizer = StringTokenizer(self.reader.readLine())
                except IOException as e:
                    raise RuntimeError(e)
            return self.tokenizer.nextToken()
        def nextInt(self):
            return int(self.next())
        def readArray(self, n):
            a = [self.nextInt() for i in range(n)]
            return a
    }
}




public class atcoder_ABC174_E {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        Solution sol = new Solution();
        sol.solve(in, out);
        out.close();
    }

    private static class InputReader {
        private BufferedReader reader;
        private StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream));
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null ||!tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = nextInt();
            }
            return a;
        }
    }

    private static class Solution {
        public void solve(InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int k = in.nextInt();
            int[] logsLength = in.readArray(n);
            int min = 1;
            int max = (int) 1e9 + 1000;
            while (min < max) {
                int mid = (min + max) / 2;
                if (nei(mid, logsLength, k)) {
                    max = mid;
                } else {
                    min = mid + 1;
                }
            }
            out.println(min);
        }

        private boolean nei(int mid, int[] logsLength, int k) {
            for (int log : logsLength) {
                k -= (log + mid - 1) / mid - 1;
            }
            return k >= 0;
        }
    }
}"
CodeGen,avatar,Java,Python,codeforces_682_B.py,"class codeforces_682_B {
    def main(args):
        in = input()
        n = int(in)
        list = []
        for i in range(n):
            list.append(int(in))
        list.sort()
        c = 1
        for i in range(n):
            if list[i] >= c:
                c += 1
        print(c)
    main()
}","def main():
    n = int(input())
    lists = list(map(int, input().split()))
    lists.sort()
    c = 1
    for i in range(n):
        if lists[i] >= c:
            c += 1
    print(c)
main()"
CodeGen,avatar,Java,Python,codeforces_581_A.py,"def main ( ):
    sc = raw_input ( )
    a = int ( sc.next ( ) )
    b = int ( sc.next ( ) )
    count = 0
    while True:
        if a > 0 and b > 0:
            count += 1
            a -= 1
            b -= 1
        else:
            break
    ans = a / 2 + b / 2
    print count, ans

# Run the program
main ( )","def main ( ):
    a, b = map(int, input().split())
    count = 0
    while True:
        if a > 0 and b > 0:
            count += 1
            a -= 1
            b -= 1
        else:
            break
    ans = a // 2 + b // 2
    print ( count, ans )

# Run the program
main ( )"
CodeGen,avatar,Java,Python,atcoder_ABC114_C.py,"def main():
    scanner = Scanner(System.in)
    N = gs()
    i = 357
    c = 0
    while i <= N:
        s = str(i)
        if '3' in s and '5' in s and '7' in s:
            c += 1
        s = s[::-1]
        sb = ''
        f = False
        for j in range(len(s)):
            a = s[len(s) - 1 - j]
            if f:
                sb += a
            else:
                if a == '3':
                    sb += '5'
                    f = True
                elif a == '5':
                    sb += '7'
                    f = True
                else:
                    sb += '3'
        if not f:
            sb += '3'
        sb = sb[::-1]
        sb2 = sb
        i = int(sb2)
    print(c)

def gs():
    return scanner.next()

def gi():
    return int(scanner.next())

def gl():
    return long(scanner.next())

def gd():
    return float(scanner.next())","def main():
    N = int(input())
    i = 357
    c = 0
    while i <= N:
        s = str(i)
        if '3' in s and '5' in s and '7' in s:
            c += 1
        s = s[::-1]
        sb = ''
        f = False
        for j in range(len(s)):
            a = s[len(s) - 1 - j]
            if f:
                sb += a
            else:
                if a == '3':
                    sb += '5'
                    f = True
                elif a == '5':
                    sb += '7'
                    f = True
                else:
                    sb += '3'
        if not f:
            sb += '3'
        sb = sb[::-1]
        sb2 = sb
        i = int(sb2)
    print(c)

def gs():
    return scanner.next()

def gi():
    return int(scanner.next())

def gl():
    return long(scanner.next())

def gd():
    return float(scanner.next())

main()"
CodeGen,avatar,Java,Python,atcoder_AGC004_D.py,"class Calculator(object):
    def __init__(self, n, k, as):
        self.k = k
        self.lists = [[] for _ in range(n)]
        for i in range(n):
            self.lists[i].append(i)
        for i in range(n):
            if i > 0:
                self.lists[as[i]].append(i)
        self.isCalculate = False

    def calculate(self):
        if not self.isCalculate:
            self.dfs(0, 0)
            self.isCalculate = True
        return self.answer

    def dfs(self, a, pre):
        h = 0
        for i in self.lists[a]:
            h = max(h, self.dfs(i, a))
        if 0 < pre and h == self.k - 1:
            h = 0
            self.answer += 1
        else:
            h += 1
        return h


class MyRunnable(object):
    def __init__(self):
        self.n = 0
        self.k = 0
        self.as = []

    def run(self, *args, **kwargs):
        self.n, self.k, self.as = args
        self.calculator = Calculator(self.n, self.k, self.as)
        print(self.calculator.calculate())

class Calculator(object):
    def __init__(self, n, k, as):
        self.k = k
        self.lists = [[] for _ in range(n)]
        for i in range(n):
            self.lists[i].append(i)
        for i in range(n):
            if i > 0:
                self.lists[as[i]].append(i)
        self.isCalculate = False

    def calculate(self):
        if not self.isCalculate:
            self.dfs(0, 0)
            self.isCalculate = True
        return self.answer

    def dfs(self, a, pre):
        h = 0
        for i in self.lists[a]:
            h = max(h, self.dfs(i, a))
        if 0 < pre and h == self.k - 1:
            h = 0
            self.answer += 1
        else:
            h += 1
        return h","class Calculator(object):
    def __init__(self, n, k, as):
        self.k = k
        self.lists = [[] for _ in range(n)]
        for i in range(n):
            self.lists[i].append(i)
        for i in range(n):
            if i > 0:
                self.lists[as[i]].append(i)
        self.isCalculate = False

    def calculate(self):
        if not self.isCalculate:
            self.dfs(0, 0)
            self.isCalculate = True
        return self.answer

    def dfs(self, a, pre):
        h = 0
        for i in self.lists[a]:
            h = max(h, self.dfs(i, a))
        if 0 < pre and h == self.k - 1:
            h = 0
            self.answer += 1
        else:
            h += 1
        return h


class MyRunnable(object):
    def __init__(self):
        self.n = 0
        self.k = 0
        self.as = []

    def run(self, *args, **kwargs):
        self.n, self.k, self.as = args
        self.calculator = Calculator(self.n, self.k, self.as)
        print(self.calculator.calculate())

class Calculator(object):
    def __init__(self, n, k, as):
        self.k = k
        self.lists = [[] for _ in range(n)]
        for i in range(n):
            self.lists[i].append(i)
        for i in range(n):
            if i > 0:
                self.lists[as[i]].append(i)
        self.isCalculate = False

    def calculate(self):
        if not self.isCalculate:
            self.dfs(0, 0)
            self.isCalculate = True
        return self.answer

    def dfs(self, a, pre):
        h = 0
        for i in self.lists[a]:
            h = max(h, self.dfs(i, a))
        if 0 < pre and h == self.k - 1:
            h = 0
            self.answer += 1
        else:
            h += 1
        return h"
CodeGen,avatar,Java,Python,codeforces_608_A.py,"import java.util.Scanner ; import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.nio.charset.MalformedInputException ; import java.util.StringTokenizer ; import java.util.Arrays ; import java.util.HashSet ; class codeforces_608_A { def main ( self, args ) : n, s, max = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","import java.util.Scanner ; import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.nio.charset.MalformedInputException ; import java.util.StringTokenizer ; import java.util.Arrays ; import java.util.HashSet ; class codeforces_608_A { def main ( self, args ) : n, s, max
CodeGen,avatar,Java,Python,codeforces_450_A.py,"def main(args):
    sc = Scanner(System.in)
    n = sc.nextInt()
    m = sc.nextInt()
    q1 = []
    q2 = []
    for i in range(1, n+1):
        q1.append(sc.nextInt())
        q2.append(i)
    while q1:
        if q1[0] <= m:
            q1.pop(0)
            q2.pop(0)
            ans = q2.pop(0)
        else:
            if q1[0] > m:
                q1.pop(0)
                q2.pop(0)
                q1.append(q1[0]-m)
                q2.append(q2[0])
    print(ans)","def main():
    n, m = map(int, input().split())
    q1 = []
    q2 = []
    inputs = list(input().split())
    for i in range(1, n+1):
        q1.append(inputs[i-1])
        q2.append(i)
    while q1:
        if q1[0] <= m:
            q1.pop(0)
            q2.pop(0)
            ans = q2.pop(0)
        else:
            if q1[0] > m:
                q1.pop(0)
                q2.pop(0)
                q1.append(q1[0]-m)
                q2.append(q2[0])
    print(ans)

main()"
CodeGen,avatar,Java,Python,codeforces_11_A.py,"def main(args):
    n = int(input())
    d = int(input())
    nums = [int(input()) for i in range(n)]
    result = 0
    a = 0
    for i in range(1, n):
        a = (nums[i - 1] - nums[i])
        if a >= 0:
            result += a // d + 1
            nums[i] += (a // d + 1) * d
    print(result)","def main():
    n, d = map(int, input().split())
    nums = list(map(int, input().split()))
    result = 0
    a = 0
    for i in range(1, n):
        a = (nums[i - 1] - nums[i])
        if a >= 0:
            result += a // d + 1
            nums[i] += (a // d + 1) * d
    print(result)

main()"
CodeGen,avatar,Java,Python,atcoder_ABC109_B.py,"class atcoder_ABC109_B {
    def main(args):
        sc = Scanner(sys.stdin)
        N = sc.next()
        map = {}
        for i in range(N):
            map[i] = sc.next()
        ans = True
        past = {}
        next = """"
        for i in range(N):
            if past.get(i) is not None:
                ans = False
                break
            past[i] = map[i]
            if i!= 0:
                if next!= map[i][0:1]:
                    ans = False
                    break
                next = map[i][-1]
        if ans:
            print(""Yes"")
        else:
            print(""No"")

}","def main():
    N = int(input())
    map = {}
    for i in range(N):
        map[i] = input()
    ans = True
    past = {}
    next = """"
    for i in range(N):
        if map[i] in past.values():
            ans = False
            break
        past[i] = map[i]
        if i != 0:
            if next != map[i][0]:
                ans = False
                break
        next = map[i][-1]
    if ans:
        print(""Yes"")
    else:
        print(""No"")

main()"
CodeGen,avatar,Java,Python,atcoder_ABC110_C.py,"import java.util.Scanner ; public class atcoder_ABC110_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.nextLine ( ) ; String T = sc.nextLine ( ) ; sc.close ( ) ; String [ ] A = { ""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o"", ""p"", ""q"", ""r"", ""s"", ""t"", ""u"", ""v"", ""w"", ""x"", ""y"", ""z"" } ; boolean res = true ; for ( String s : A ) { int sIdx = S.indexOf ( s ) ; if ( sIdx < 0 ) continue ; String t = String.valueOf ( T.charAt ( sIdx ) ) ; int idx = 0 ; while ( idx < S.length ( ) ) { if ( S.indexOf ( s, idx ) >= 0 ) { if ( S.indexOf ( s, idx )!= T.indexOf ( t, idx ) ) { res = false ; break ; } else { idx = S.indexOf ( s, idx ) + 1 ; } } else if ( T.indexOf ( t, idx ) >= 0 ) { res = false ; break ; } else break ; } if (! res ) break ; } if ( res ) System.out.println ( ""Yes"" ) ; else System.out.println ( ""No"" ) ; } }","import java.util.Scanner ; public class atcoder_ABC110_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.nextLine ( ) ; String T = sc.nextLine ( ) ; sc.close ( ) ; String [ ] A = { ""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o"", ""p"", ""q"", ""r"", ""s"", ""t"", ""u"", ""v"", ""w"", ""x"", ""y"", ""z"" } ; boolean res = true ; for ( String s : A ) { int sIdx = S.indexOf ( s ) ; if ( sIdx < 0 ) continue ; String t = String.valueOf ( T.charAt ( sIdx ) ) ; int idx = 0 ; while ( idx < S.length ( ) ) { if ( S.indexOf ( s, idx ) >= 0 ) { if ( S.indexOf ( s, idx )!= T.indexOf ( t, idx ) ) { res = false ; break ; } else { idx = S.indexOf ( s, idx ) + 1 ; } } else if ( T.indexOf ( t, idx ) >= 0 ) { res = false ; break ; } else break ; } if (! res ) break ; } if ( res ) System.out.println ( ""Yes"" ) ; else System.out.println ( ""No"" ) ; } }"
CodeGen,avatar,Java,Python,atcoder_ABC167_C.py,"def main():
    n = int(input())
    m = int(input())
    x = int(input())
    a = [[int(i) for i in input().split()] for j in range(n)]
    for i in range(2 ** n):
        status = [0] * n
        for j in range(n):
            if (1 & i >> j) == 1:
                status[j] = 1
        res = [0] * (m + 1)
        for j in range(n):
            if status[j] == 1:
                for k in range(m + 1):
                    res[k] += a[j][k]
        flag = True
        for j in range(1, m + 1):
            if res[j] < x:
                flag = False
                break
        if flag:
            min = min(res[0], res[1])
    if min == -1:
        print(-1)
    else:
        print(min)","def main():
    n, m, x = map(int, input().split())
    a = [list(map(int, input().split())) for _ in range(n)]
    for i in range(2 ** n):
        status = [0] * n
        for j in range(n):
            if (1 & i >> j) == 1:
                status[j] = 1
        res = [0] * (m + 1)
        for j in range(n):
            if status[j] == 1:
                for k in range(m + 1):
                    res[k] += a[j][k]
        flag = True
        for j in range(1, m + 1):
            if res[j] < x:
                flag = False
                break
        if flag:
            minVal = min(res[0], res[1])
    if minVal == -1:
        print(-1)
    else:
        print(minVal)
        
main()"
CodeGen,avatar,Java,Python,atcoder_AGC007_C.py,"def main(N, d, x):
    ans = 0.0
    while N > 0.5:
        adnum = d + x * (N - 0.5)
        ans = ans + adnum
        d = (N + 1.0) * d / N + (5.0 * x) / (2.0 * N)
        x = (1.0 + (2.0 / N)) * x
        N -= 1
    format = '#.##############################'
    format.setMinimumFractionDigits(20)
    print format.format(ans)

# Input:
# 2
# 1.5
# 0.5
# Output:
# 1.5
# 1.5
# 1.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
# 0.5
#","def main(N, d, x):
    ans = 0.0
    while N > 0.5:
        adnum = d + x * (N - 0.5)
        ans = ans + adnum
        d = (N + 1.0) * d / N + (5.0 * x) / (2.0 * N)
        x = (1.0 + (2.0 / N)) * x
        N -= 1
    format = '#.##############################'
    format.setMinimumFractionDigits(20)
    print(format.format(ans))"
CodeGen,avatar,Java,Python,atcoder_ABC119_B.py,"def main(args):
    sc = Scanner(System.in)
    N = sc.nextInt()
    x = [0] * N
    u = []
    for i in range(N):
        x[i] = sc.nextDouble()
        u.append(sc.next())
    print(solve(x, u))
    sc.close()

def solve(x, u):
    return sum(map(lambda i: x[i] * (u[i] == ""JPY"" and 1 or 380000), range(len(x))))","def main():
    N = int(input())
    x = []
    u = []
    for _ in range(N):
        xi, ui = input().split()
        x.append(float(xi))
        u.append(ui)
    print(solve(x, u))

def solve(x, u):
    return sum(map(lambda i: x[i] * (u[i] == ""JPY"" and 1 or 380000), range(len(x))))

main()"
CodeGen,avatar,Java,Python,atcoder_ABC127_B.py,"class atcoder_ABC127_B {
    def main(args):
        r = int(input())
        d = int(input())
        x = long(input())
        for i in range(10):
            x = r * x - d
            print(x)
        print()

    def checkEof(self):
        if self.eof:
            raise NoSuchElementException()

    def read(self):
        if not self.buffer.hasRemaining():
            self.buffer.clear()
            try:
                self.buffer.limit(self.in.read(self.buffer))
            except IOError:
                self.buffer.limit(0)
                self.eof = True
            self.buffer.flip()
        return self.buffer.get()

    def next(self):
        char = self.read()
        while Character.isWhitespace(char):
            char = self.read()
        if char == ' ':
            self.eof = True
            return ''
        return char

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return long(self.next())

    def nextDouble(self):
        return float(self.next())
}




public class atcoder_ABC127_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        PrintWriter writer = new PrintWriter(System.out);
        int r = scanner.nextInt();
        int d = scanner.nextInt();
        long x = scanner.nextLong();
        for (int i = 0; i < 10; ++i) {
            x = r * x - d;
            writer.println(x);
        }
        writer.close();
    }
}","class atcoder_ABC127_B {
    def main(args):
        r = int(input())
        d = int(input())
        x = long(input())
        for i in range(10):
            x = r * x - d
            print(x)
        print()

    def checkEof(self):
        if self.eof:
            raise NoSuchElementException()

    def read(self):
        if not self.buffer.hasRemaining():
            self.buffer.clear()
            try:
                self.buffer.limit(self.in.read(self.buffer))
            except IOError:
                self.buffer.limit(0)
                self.eof = True
            self.buffer.flip()
        return self.buffer.get()

    def next(self):
        char = self.read()
        while Character.isWhitespace(char):
            char = self.read()
        if char == ' ':
            self.eof = True
            return ''
        return char

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return long(self.next())

    def nextDouble(self):
        return float(self.next())
}




public class atcoder_ABC127_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        PrintWriter writer = new PrintWriter(System.out);
        int r = scanner.nextInt();
        int d = scanner.nextInt();
        long x = scanner.nextLong();
        for (int i = 0; i < 10; ++i) {
            x = r * x - d;
            writer.println(x);
        }
        writer.close();
    }
}"
CodeGen,avatar,Java,Python,atcoder_ABC089_C.py,"def main():
    inputStream = sys.stdin
    outputStream = sys.stdout
    in = sys.stdin.buffer.raw
    out = sys.stdout.buffer
    solver = TaskC()
    solver.solve(1, in, out)
    out.flush()


class TaskC:
    def __init__(self):
        self.cnt = [0, 0, 0, 0, 0]

    def solve(self, testNumber, in, out):
        n = int(in.readline())
        for i in range(n):
            str = in.readline()
            if str[0] == 'M':
                self.cnt[0] += 1
            elif str[0] == 'A':
                self.cnt[1] += 1
            elif str[0] == 'R':
                self.cnt[2] += 1
            elif str[0] == 'C':
                self.cnt[3] += 1
            elif str[0] == 'H':
                self.cnt[4] += 1
        res = self.cnt[0] * self.cnt[1] * self.cnt[2] + self.cnt[0] * self.cnt[1] * self.cnt[3] + self.cnt[0] * self.cnt[1] * self.cnt[4] + self.cnt[0] * self.cnt[2] * self.cnt[3] + self.cnt[0] * self.cnt[2] * self.cnt[4] + self.cnt[0] * self.cnt[3] * self.cnt[4] + self.cnt[1] * self.cnt[2] * self.cnt[3] + self.cnt[1] * self.cnt[2] * self.cnt[4] + self.cnt[1] * self.cnt[3] * self.cnt[4] + self.cnt[2] * self.cnt[3] * self.cnt[4]
        out.write(str(res))
        out.flush()


if __name__ == ""__main__"":
    main()","def main():
    solver = TaskC()
    solver.solve(1)


class TaskC:
    def __init__(self):
        self.cnt = [0, 0, 0, 0, 0]

    def solve(self, testNumber):
        n = int(input())
        for i in range(n):
            str = input()
            if str[0] == 'M':
                self.cnt[0] += 1
            elif str[0] == 'A':
                self.cnt[1] += 1
            elif str[0] == 'R':
                self.cnt[2] += 1
            elif str[0] == 'C':
                self.cnt[3] += 1
            elif str[0] == 'H':
                self.cnt[4] += 1
        res = self.cnt[0] * self.cnt[1] * self.cnt[2] + self.cnt[0] * self.cnt[1] * self.cnt[3] + self.cnt[0] * self.cnt[1] * self.cnt[4] + self.cnt[0] * self.cnt[2] * self.cnt[3] + self.cnt[0] * self.cnt[2] * self.cnt[4] + self.cnt[0] * self.cnt[3] * self.cnt[4] + self.cnt[1] * self.cnt[2] * self.cnt[3] + self.cnt[1] * self.cnt[2] * self.cnt[4] + self.cnt[1] * self.cnt[3] * self.cnt[4] + self.cnt[2] * self.cnt[3] * self.cnt[4]
        print(res)


if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,codeforces_334_A.py,"class codeforces_334_A {
    def main(args):
        in = input()
        print(in.nextInt() * in.nextInt())
        square = in.nextInt() * in.nextInt()
        odd = []
        even = []
        for i in range(1, square+1):
            if i % 2 == 0:
                even.append(i)
            else:
                odd.append(i)
        loop = square / in.nextInt()
        div = loop / 2
        for i in range(1, loop+1):
            for j in range(0, div):
                if i % 2 == 1:
                    print(odd.pop(0) + "" "" + even.pop(even.size() - 1))
                else:
                    print(even.pop(0) + "" "" + odd.pop(odd.size() - 1))
            print()
        print()


}



Input:

3
3
1 2 3
2 4 6
3 5 7

Output:

12
36","class codeforces_334_A {
    def main(args):
        in = input()
        print(in.nextInt() * in.nextInt())
        square = in.nextInt() * in.nextInt()
        odd = []
        even = []
        for i in range(1, square+1):
            if i % 2 == 0:
                even.append(i)
            else:
                odd.append(i)
        loop = square / in.nextInt()
        div = loop / 2
        for i in range(1, loop+1):
            for j in range(0, div):
                if i % 2 == 1:
                    print(odd.pop(0) + "" "" + even.pop(even.size() - 1))
                else:
                    print(even.pop(0) + "" "" + odd.pop(odd.size() - 1))
            print()
        print()


}



Input:

3
3
1 2 3
2 4 6
3 5 7

Output:

12
36"
CodeGen,avatar,Java,Python,atcoder_ABC168_C.py,"import math
import sys

def main ():
    A = int(sys.stdin.readline())
    B = int(sys.stdin.readline())
    H = int(sys.stdin.readline())
    M = int(sys.stdin.readline())
    AA = BigDecimal(A)
    BB = BigDecimal(B)
    HH = BigDecimal(H)
    MM = BigDecimal(M)
    AA2 = AA * AA
    BB2 = BB * BB
    CC = AA2 + BB2
    DD = BigDecimal(math.cos(math.radians(BB2.multiply(AA).subtract(BB).multiply(2).divide(AA2).divide(BB2))))
    DD = DD.multiply(BigDecimal(2))
    DD = DD.multiply(AA)
    DD = DD.multiply(BB)
    ans2 = CC.subtract(DD)
    ans2 = ans2.sqrt()
    ans = ans2.sqrt()
    print(ans)

# Note:
# The above code is the same as the following code.
# However, the above code is more efficient in Python.
# The following code is more efficient in Java.

# Java Code:

import java.util.* ; import java.math.BigDecimal ; public class atcoder_ABC168_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int A = sc.nextInt ( ) ; int B = sc.nextInt ( ) ; int H = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; BigDecimal AA = new BigDecimal ( A ) ; BigDecimal BB = new BigDecimal ( B ) ; BigDecimal HH = new BigDecimal ( H ) ; BigDecimal MM = new BigDecimal ( M ) ; BigDecimal ans2 ; BigDecimal kaku ; BigDecimal mkaku ; BigDecimal hkaku ; BigDecimal AA2 ; BigDecimal BB2 ; BigDecimal CC ; BigDecimal DD ; double dkaku ; double dans2 ; mkaku = MM.multiply ( BigDecimal.valueOf ( 6 ) ) ; hkaku = HH.multiply ( BigDecimal.valueOf ( 30 ) ) ; hkaku = hkaku.add ( BigDecimal.valueOf ( ( double ) M / 2 ) ) ; kaku = mkaku.subtract ( hkaku ) ; dkaku = Math.abs ( Math.toRadians ( kaku.doubleValue ( ) ) ) ; AA2 = AA.multiply ( AA ) ; BB2 = BB.multiply ( BB ) ; CC = AA2.add ( BB2 ) ; DD = BigDecimal.valueOf ( Math.cos ( dkaku ) ) ; DD = DD.multiply ( BigDecimal.valueOf ( 2 ) ) ; DD = DD.multiply ( AA ) ; DD = DD.multiply ( BB ) ; ans2 = CC.subtract ( DD ) ; dans2 = ans2.doubleValue ( ) ; double ans = Math.sqrt ( dans2 ) ; System.out.println ( ans ) ; } }","import math
import sys

def main ():
    A, B, H, M = map(int, sys.stdin.readline().split())
    AA = BigDecimal(A)
    BB = BigDecimal(B)
    HH = BigDecimal(H)
    MM = BigDecimal(M)
    AA2 = AA * AA
    BB2 = BB * BB
    CC = AA2 + BB2
    DD = BigDecimal(math.cos(math.radians(BB2.multiply(AA).subtract(BB).multiply(2).divide(AA2).divide(BB2))))
    DD = DD.multiply(BigDecimal(2))
    DD = DD.multiply(AA)
    DD = DD.multiply(BB)
    ans2 = CC.subtract(DD)
    ans2 = ans2.sqrt()
    ans = ans2.sqrt()
    print(ans)

main ()"
CodeGen,avatar,Java,Python,codeforces_581_B.py,"import java.util.* ; import java.io.* ; 

def main ():
    in = raw_input()
    n = int(in)
    a = map(int,raw_input().split())
    dp = [ -1 for i in range(n+1)]
    dp[n-1] = a[n-1]
    for i in range(n-1,-1,-1):
        dp[i] = max(dp[i+1],a[i])
    for i in range(n):
        if a[i] > dp[i+1]:
            print 0,
        else:
            print dp[i+1]-a[i]+1,
    print

if __name__ == ""__main__"":
    main()","def main ():
    n = int(input())
    a = list(map(int,input().split()))
    dp = [ -1 for i in range(n+1)]
    dp[n-1] = a[n-1]
    for i in range(n-1,-1,-1):
        dp[i] = max(dp[i+1],a[i])
    for i in range(n):
        if a[i] > dp[i+1]:
            print(0, end="" "")
        else:
            print(dp[i+1]-a[i]+1, end="" "")
    print

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,codeforces_632_B.py,"def main(args):
    sc = Scanner(System.in)
    n = sc.nextInt()
    a = [sc.nextInt() for _ in range(n)]
    s = sc.next()
    sum = 0
    for i in range(len(s)):
        ch = s[i]
        if ch == 'B':
            sum += a[i]
    ans = sum
    sum1 = sum
    for i in range(len(s)):
        if s[i] == 'A':
            sum1 += a[i]
        else:
            sum1 -= a[i]
    ans = max(ans, sum1)
    sum1 = sum
    for i in range(len(s)-1, -1, -1):
        if s[i] == 'A':
            sum1 += a[i]
        else:
            sum1 -= a[i]
    ans = max(ans, sum1)
    print(ans)","def main():
    n = int(input())
    a = list(map(int, input().split()))
    s = input()
    sum = 0
    for i in range(len(s)):
        ch = s[i]
        if ch == 'B':
            sum += a[i]
    ans = sum
    sum1 = sum
    for i in range(len(s)):
        if s[i] == 'A':
            sum1 += a[i]
        else:
            sum1 -= a[i]
        ans = max(ans, sum1)
    sum1 = sum
    for i in range(len(s)-1, -1, -1):
        if s[i] == 'A':
            sum1 += a[i]
        else:
            sum1 -= a[i]
        ans = max(ans, sum1)
    print(ans)
    
main()"
CodeGen,avatar,Java,Python,codeforces_567_A.py,"import java.util.Scanner ; import javax.swing.JOptionPane ; 
def main ( ):
	s = Scanner ( System.in )
	a = s.nextInt ( )
	ar = [ ]
	for i in range ( a ):
		ar.append ( s.nextInt ( ) )
	for i in range ( a ):
		max = max ( ar [ i ] - ar [ 0 ], ar [ a - 1 ] - ar [ i ] )
		if i == 0:
			min = ar [ i + 1 ] - ar [ i ]
		else:
			if i == a - 1:
				min = ar [ i ] - ar [ i - 1 ]
			else:
				min = min ( ar [ i ] - ar [ i - 1 ], ar [ i + 1 ] - ar [ i ] )
		print ( min + "" "" + max )","def main ( ):
	a = int(input())
	ar = list(map(int, input().split()))
	for i in range ( a ):
		max_val = max ( ar [ i ] - ar [ 0 ], ar [ a - 1 ] - ar [ i ] )
		if i == 0:
			min_val = ar [ i + 1 ] - ar [ i ]
		else:
			if i == a - 1:
				min_val = ar [ i ] - ar [ i - 1 ]
			else:
				min_val = min ( ar [ i ] - ar [ i - 1 ], ar [ i + 1 ] - ar [ i ] )
		print(min_val, max_val)
  
main ( )"
CodeGen,avatar,Java,Python,codeforces_342_B.py,"import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.ArrayList ; import java.util.HashMap ; def main ( ):
    reader = BufferedReader (
        InputStreamReader (
            System.in
        )
    )
    input = reader.readLine ().split ( "" "" )
    m = int ( input [ 1 ] )
    s = int ( input [ 2 ] )
    f = int ( input [ 3 ] )
    maxT = - 1
    map = HashMap ( )
    while m > 0:
        mth = reader.readLine ().split ( "" "" )
        k = int ( mth [ 0 ] )
        map.put ( k, ArrayList ( ) )
        map.get ( k ).add ( int ( mth [ 1 ] ) )
        map.get ( k ).add ( int ( mth [ 2 ] ) )
        maxT = max ( maxT, k )
        m -= 1
    actions = StringBuilder ( )
    final char M = ( s < f )? 'R' : 'L'
    d = ( s < f )? + 1 : - 1
    cur = s
    a = - 1
    b = - 1
    for t in range ( 1, maxT + 1 ):
        if map.contains ( t ) and ( ( cur >= a and cur <= b ) or ( cur + d >= a and cur + d <= b ) ):
            actions.append ( 'X' )
        else:
            actions.append ( M )
            cur += d
        if cur == f:
            break
    while cur!= f:
        actions.append ( M )
        cur += d
    print ( actions )




import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.ArrayList ; import java.util.HashMap ; public class codeforces_342_B { public static void main ( String [ ] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System.in ) ) ; String input [ ] = reader.readLine ( ).split ( "" "" ) ; int m = Integer.parseInt ( input [ 1 ] ) ; int s = Integer.parseInt ( input [ 2 ] ) ; int f = Integer.parseInt ( input [ 3 ] ) ; int maxT = - 1 ; HashMap < Integer, ArrayList < Integer >> map = new HashMap < > ( ) ; while ( m > 0 ) { String mth [ ] = reader.readLine ( ).split ( "" "" ) ; int k = Integer.parseInt ( mth [ 0 ] ) ; map.put ( k, new ArrayList < > ( ) ) ; map.get ( k ).add ( Integer.parseInt ( mth [ 1 ] ) ) ; map.get ( k ).add ( Integer.parseInt ( mth [ 2 ] ) ) ; maxT = Math.max ( maxT, k ) ; m -- ; } StringBuilder actions = new StringBuilder ( ) ; final char M = ( s < f )? 'R' : 'L' ; int d = ( s < f )? + 1 : - 1 ; int cur = s ; int a = - 1 ; int b = - 1 ; for ( int t = 1 ; t <= maxT ; t ++ ) { if ( map.containsKey ( t ) ) { a = map.get ( t ).get ( 0 ).intValue ( ) ; b = map.get ( t ).get ( 1 ).intValue ( ) ; } if ( map.containsKey ( t ) and ( ( cur >= a and cur <= b ) or ( cur + d >= a and cur + d <= b ) ) ) { actions.append ( 'X' ) ; } else { actions.append ( M ) ; cur += d ; } if ( cur == f ) break ; } while ( cur!= f ) { actions.append ( M ) ; cur += d ; } System.out.println ( actions ) ; } }



Translate the above Java code to Python.



import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.ArrayList ; import java.util.HashMap ; def main ( ):
    reader = BufferedReader (
        InputStreamReader (
            System.in
        )
    )
    input = reader.readLine ().split ( "" "" )
    m = int ( input [ 1 ] )
    s = int ( input [ 2 ] )
    f = int ( input [ 3 ] )
    maxT = - 1
    map = HashMap ( )
    while m > 0:
        mth = reader.readLine ().split ( "" "" )
        k = int ( mth [ 0 ] )
        map.put ( k, ArrayList ( ) )
        map.get ( k ).add ( int ( mth [ 1 ] ) )
        map.get ( k ).add ( int ( mth [ 2 ] ) )
        maxT = max ( maxT, k )
        m -= 1
    actions = StringBuilder ( )
    final char M = ( s < f )? 'R' : 'L'
    d = ( s < f )? + 1 : - 1
    cur = s
    a = - 1
    b = - 1
    for t in range ( 1, maxT + 1 ):
        if map.contains ( t ) and ( ( cur >= a and cur <= b ) or ( cur + d >= a and cur + d <= b ) ):
            actions.append ( 'X' )
        else:
            actions.append ( M )
            cur += d
        if cur == f:
            break
    while cur!= f:
        actions.append ( M )
        cur += d
    print ( actions )




import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.ArrayList ; import java.util.HashMap ; public class codeforces_342_B { public static void main ( String [ ] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System.in ) ) ; String input [ ] = reader.readLine ( ).split ( "" "" ) ; int m = Integer.parseInt ( input [ 1 ] ) ; int s = Integer.parseInt ( input [ 2 ] ) ; int f = Integer.parseInt ( input [ 3 ] ) ; int maxT = -","import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.ArrayList ; import java.util.HashMap ; def main ( ):
    reader = BufferedReader (
        InputStreamReader (
            System.in
        )
    )
    input = reader.readLine ().split ( "" "" )
    m = int ( input [ 1 ] )
    s = int ( input [ 2 ] )
    f = int ( input [ 3 ] )
    maxT = - 1
    map = HashMap ( )
    while m > 0:
        mth = reader.readLine ().split ( "" "" )
        k = int ( mth [ 0 ] )
        map.put ( k, ArrayList ( ) )
        map.get ( k ).add ( int ( mth [ 1 ] ) )
        map.get ( k ).add ( int ( mth [ 2 ] ) )
        maxT = max ( maxT, k )
        m -= 1
    actions = StringBuilder ( )
    final char M = ( s < f )? 'R' : 'L'
    d = ( s < f )? + 1 : - 1
    cur = s
    a = - 1
    b = - 1
    for t in range ( 1, maxT + 1 ):
        if map.contains ( t ) and ( ( cur >= a and cur <= b ) or ( cur + d >= a and cur + d <= b ) ):
            actions.append ( 'X' )
        else:
            actions.append ( M )
            cur += d
        if cur == f:
            break
    while cur!= f:
        actions.append ( M )
        cur += d
    print ( actions )




import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.ArrayList ; import java.util.HashMap ; public class codeforces_342_B { public static void main ( String [ ] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System.in ) ) ; String input [ ] = reader.readLine ( ).split ( "" "" ) ; int m = Integer.parseInt ( input [ 1 ] ) ; int s = Integer.parseInt ( input [ 2 ] ) ; int f = Integer.parseInt ( input [ 3 ] ) ; int maxT = - 1 ; HashMap < Integer, ArrayList < Integer >> map = new HashMap < > ( ) ; while ( m > 0 ) { String mth [ ] = reader.readLine ( ).split ( "" "" ) ; int k = Integer.parseInt ( mth [ 0 ] ) ; map.put ( k, new ArrayList < > ( ) ) ; map.get ( k ).add ( Integer.parseInt ( mth [ 1 ] ) ) ; map.get ( k ).add ( Integer.parseInt ( mth [ 2 ] ) ) ; maxT = Math.max ( maxT, k ) ; m -- ; } StringBuilder actions = new StringBuilder ( ) ; final char M = ( s < f )? 'R' : 'L' ; int d = ( s < f )? + 1 : - 1 ; int cur = s ; int a = - 1 ; int b = - 1 ; for ( int t = 1 ; t <= maxT ; t ++ ) { if ( map.containsKey ( t ) ) { a = map.get ( t ).get ( 0 ).intValue ( ) ; b = map.get ( t ).get ( 1 ).intValue ( ) ; } if ( map.containsKey ( t ) and ( ( cur >= a and cur <= b ) or ( cur + d >= a and cur + d <= b ) ) ) { actions.append ( 'X' ) ; } else { actions.append ( M ) ; cur += d ; } if ( cur == f ) break ; } while ( cur!= f ) { actions.append ( M ) ; cur += d ; } System.out.println ( actions ) ; } }



Translate the above Java code to Python.



import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.ArrayList ; import java.util.HashMap ; def main ( ):
    reader = BufferedReader (
        InputStreamReader (
            System.in
        )
    )
    input = reader.readLine ().split ( "" "" )
    m = int ( input [ 1 ] )
    s = int ( input [ 2 ] )
    f = int ( input [ 3 ] )
    maxT = - 1
    map = HashMap ( )
    while m > 0:
        mth = reader.readLine ().split ( "" "" )
        k = int ( mth [ 0 ] )
        map.put ( k, ArrayList ( ) )
        map.get ( k ).add ( int ( mth [ 1 ] ) )
        map.get ( k ).add ( int ( mth [ 2 ] ) )
        maxT = max ( maxT, k )
        m -= 1
    actions = StringBuilder ( )
    final char M = ( s < f )? 'R' : 'L'
    d = ( s < f )? + 1 : - 1
    cur = s
    a = - 1
    b = - 1
    for t in range ( 1, maxT + 1 ):
        if map.contains ( t ) and ( ( cur >= a and cur <= b ) or ( cur + d >= a and cur + d <= b ) ):
            actions.append ( 'X' )
        else:
            actions.append ( M )
            cur += d
        if cur == f:
            break
    while cur!= f:
        actions.append ( M )
        cur += d
    print ( actions )




import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.ArrayList ; import java.util.HashMap ; public class codeforces_342_B { public static void main ( String [ ] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System.in ) ) ; String input [ ] = reader.readLine ( ).split ( "" "" ) ; int m = Integer.parseInt ( input [ 1 ] ) ; int s = Integer.parseInt ( input [ 2 ] ) ; int f = Integer.parseInt ( input [ 3 ] ) ; int maxT = -"
CodeGen,avatar,Java,Python,atcoder_ABC165_C.py,"def dfs(list):
    if len(list) == n:
        score = 0
        for i in range(q):
            score += (list[b[i]] - list[a[i]] == c[i]) * d[i]
        ans = max(ans, score)
        return
    if not list:
        for i in range(1, m+1):
            list.append(i)
            dfs(list)
            list.pop()
    else:
        for i in range(list[-1], m+1):
            list.append(i)
            dfs(list)
            list.pop()

import sys

def main():
    n, m, q = map(int, sys.stdin.readline().split())
    a = [int(x) - 1 for x in sys.stdin.readline().split()]
    b = [int(x) - 1 for x in sys.stdin.readline().split()]
    c = [int(x) for x in sys.stdin.readline().split()]
    d = [int(x) for x in sys.stdin.readline().split()]
    ans = - 100
    dfs([])
    print(ans)

if __name__ == '__main__':
    main()","def dfs(list):
    if len(list) == n:
        score = 0
        for i in range(q):
            score += (list[b[i]] - list[a[i]] == c[i]) * d[i]
        ans = max(ans, score)
        return
    if not list:
        for i in range(1, m+1):
            list.append(i)
            dfs(list)
            list.pop()
    else:
        for i in range(list[-1], m+1):
            list.append(i)
            dfs(list)
            list.pop()

import sys

def main():
    global n, m, q, a, b, c, d, ans
    n, m, q = map(int, sys.stdin.readline().split())
    a = [int(x) - 1 for x in sys.stdin.readline().split()]
    b = [int(x) - 1 for x in sys.stdin.readline().split()]
    c = [int(x) for x in sys.stdin.readline().split()]
    d = [int(x) for x in sys.stdin.readline().split()]
    ans = - 100
    dfs([])
    print(ans)

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,codeforces_171_A.py,"def reverse(n):
    if n < 10:
        return n * 10
    t = n
    r = 0
    while t > 0:
        r = (r * 10) + t % 10
        t = t / 10
    return r

print(reverse(int(input())))","def reverse(n):
    if n < 10:
        return n * 10
    t = n
    r = 0
    while t > 0:
        r = (r * 10) + t % 10
        t = t / 10
    return r

print(reverse(int(input())))"
CodeGen,avatar,Java,Python,codeforces_621_A.py,"def main():
    sc = input()
    n = sc.next()
    list = []
    for i in range(n):
        list.append(sc.next())
    odd = []
    sum = 0
    for i in list:
        if i % 2 == 0:
            sum += i
        else:
            odd.append(i)
    odd.sort()
    for i in odd:
        sum += i
    if odd.count(odd[0]) % 2!= 0:
        sum -= odd[0]
    print(sum)

if __name__ == '__main__':
    main()","def main():
    n = int(input())
    lst = list(map(int, input().split()))
    odd = []
    sum = 0
    for i in lst:
        if i % 2 == 0:
            sum += i
        else:
            odd.append(i)
    odd.sort()
    for i in odd:
        sum += i
    if len(odd) % 2!= 0:
        sum -= odd[0]
    print(sum)

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,codeforces_412_A.py,"def main ():
    n = int(input())
    k = int(input())
    a = input()
    if k > n / 2:
        while k < n:
            print(""RIGHT"")
            k += 1
    else:
        while k > 1:
            print(""LEFT"")
            k -= 1
    if k == 1:
        for i in range(len(a)):
            print(""PRINT "" + a[i])
            if (i + 1) < len(a):
                print(""RIGHT"")
            else:
                print(""LEFT"")
    else:
        for i in range(len(a) - 1, -1, -1):
            print(""PRINT "" + a[i])
            if (i - 1) >= 0:
                print(""LEFT"")
            else:
                print(""RIGHT"")

if __name__ == ""__main__"":
    main()","def main ():
    n, k = map(int, input().split())
    a = input()
    if k > n // 2:
        while k < n:
            print(""RIGHT"")
            k += 1
    else:
        while k > 1:
            print(""LEFT"")
            k -= 1
    if k == 1:
        for i in range(len(a)):
            print(""PRINT "" + a[i])
            if (i + 1) < len(a):
                print(""RIGHT"")
    else:
        for i in range(len(a) - 1, -1, -1):
            print(""PRINT "" + a[i])
            if (i - 1) >= 0:
                print(""LEFT"")

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,codeforces_459_A.py,"def main(args):
    inp = input()
    x1, y1, x2, y2 = map(int, inp.split())
    if x1 == x2:
        dif = abs(y1 - y2)
        print((x1 + dif) + "" "" + y1 + "" "" + (x1 + dif) + "" "" + y2)
    elif y1 == y2:
        dif = abs(x1 - x2)
        print((x1) + "" "" + (y1 + dif) + "" "" + (x2) + "" "" + (y2 + dif))
    elif abs(x1 - x2) == abs(y1 - y2):
        print(x1 + "" "" + y2 + "" "" + x2 + "" "" + y1)
    else:
        print(-1)

if __name__ == ""__main__"":
    main(sys.argv)","def main():
    x1, y1, x2, y2 = map(int, input().split())
    if x1 == x2:
        dif = abs(y1 - y2)
        print(x1 + dif, y1, x1 + dif, y2)
    elif y1 == y2:
        dif = abs(x1 - x2)
        print(x1, y1 + dif, x2, y2 + dif)
    elif abs(x1 - x2) == abs(y1 - y2):
        print(x1, y2, x2, y1)
    else:
        print(-1)

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,codeforces_598_A.py,"def main():
    sc = Scanner(sys.stdin)
    q = sc.next()
    while q > 0:
        n = sc.next()
        s = 0
        x = int(math.log(n, 2))
        x += 1
        s = -1 * (2 ** x) + 2 + (n * (n + 1)) / 2 - (2 ** x)
        print(s)
        q -= 1

if __name__ == '__main__':
    main()","import math

def main():
    q = int(input())
    while q > 0:
        n = int(input())
        s = 0
        x = int(math.log(n, 2))
        x += 1
        s = -1 * (2 ** x) + 2 + (n * (n + 1)) // 2 - (2 ** x)
        print(s)
        q -= 1

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,codeforces_397_B.py,"def main():
    N = int(input())
    for t in range(0,N):
        n = int(input())
        a = int(input())
        b = int(input())
        if n < a:
            print(""No"")
            continue
        if a == b:
            if n % a == 0:
                print(""Yes"")
                continue
            else:
                print(""No"")
                continue
        x = b / (b - a)
        if n > x * a:
            print(""Yes"")
            continue
        low = 1
        high = x + 1
        ans = 1
        while low <= high:
            mid = (low + high) / 2
            if mid * a < n:
                low = mid + 1
            else:
                ans = mid
                high = mid - 1
        if n > (ans - 1) * b and n < ans * a:
            print(""No"")
            continue
        else:
            print(""Yes"")
            continue
main()","def main():
    N = int(input())
    for t in range(0,N):
        n, a, b = map(int, input().split())
        if n < a:
            print(""No"")
            continue
        if a == b:
            if n % a == 0:
                print(""Yes"")
                continue
            else:
                print(""No"")
                continue
        x = b // (b - a)
        if n > x * a:
            print(""Yes"")
            continue
        low = 1
        high = x + 1
        ans = 1
        while low <= high:
            mid = (low + high) // 2
            if mid * a < n:
                low = mid + 1
            else:
                ans = mid
                high = mid - 1
        if n > (ans - 1) * b and n < ans * a:
            print(""No"")
            continue
        else:
            print(""Yes"")
            continue
main()"
CodeGen,avatar,Java,Python,codeforces_678_A.py,"def main ( ):
    scan = input ( )
    n = scan.next ( )
    k = scan.next ( )
    n += 1
    z = 0
    if n % k!= 0:
        z = k - n % k
    print ( n + z )

# Run the program
main ( )","def main ( ):
    n, k = map ( int, input ( ).split ( ) )
    n += 1
    z = 0
    if n % k!= 0:
        z = k - n % k
    print ( n + z )

# Run the program
main ( )"
CodeGen,avatar,Java,Python,codeforces_306_A.py,"def main(n, m):
    a = [0] * m
    if n % m == 0:
        for i in range(m):
            a[i] = n // m
    else:
        sub = n // m
        for i in range(m):
            a[i] = sub
        test = n - (sub * m)
        count = 0
        for i in range(test):
            a[count] = a[count] + 1
            count += 1
            if count > m:
                count = 0
        for i in range(m - 1, -1, -1):
            print(a[i])

if __name__ == '__main__':
    n = int(input())
    m = int(input())
    main(n, m)","def main(n, m):
    a = [0] * m
    if n % m == 0:
        for i in range(m):
            a[i] = n // m
    else:
        sub = n // m
        for i in range(m):
            a[i] = sub
        test = n - (sub * m)
        count = 0
        for i in range(test):
            a[count] = a[count] + 1
            count += 1
            if count > m:
                count = 0
    for i in range(m - 1, -1, -1):
        print(a[i], end="" "")

if __name__ == '__main__':
    n, m = map(int, input().split())
    main(n, m)"
CodeGen,avatar,Java,Python,codeforces_216_B.py,"def main():
    sc = Scanner()
    m = sc.nextInt()
    n = sc.nextInt()
    ft = codeforces_216_B()
    ft.graph = []
    for i in range(0, m + 1):
        ft.graph.append([])
    for i in range(0, n):
        x = sc.nextInt()
        y = sc.nextInt()
        ft.graph[x].append(y)
        ft.graph[y].append(x)
    for i in range(1, m + 1):
        if not ft.seen[i]:
            ft.count = 0
            if ft.dfs(i, 0) == ft.cycle:
                if ft.count % 2 == 1:
                    print(ft.count - 1)
                else:
                    print(ft.count)
                break
    if (m - ft.count) % 2 == 1:
        print(ft.count)

class codeforces_216_B:
    def __init__(self):
        self.count = 0
        self.seen = [False] * (m + 1)
        self.graph = []
        for i in range(0, m + 1):
            self.graph.append([])
        for i in range(0, n):
            x = sc.nextInt()
            y = sc.nextInt()
            self.graph[x].append(y)
            self.graph[y].append(x)
    def dfs(self, child, par):
        if self.seen[child] == True:
            return self.cycle
        self.seen[child] = True
        for i in self.graph[child]:
            if i!= par:
                self.count += 1
                if self.dfs(i, child) == self.cycle:
                    return self.cycle
        return self.path
main()","import sys

def main():
    global m, n
    m, n = map(int, input().split())
    ft = codeforces_216_B()
    ft.graph = []
    for i in range(0, m + 1):
        ft.graph.append([])
    for i in range(0, n):
        x, y = map(int, input().split())
        ft.graph[x].append(y)
        ft.graph[y].append(x)
    for i in range(1, m + 1):
        if not ft.seen[i]:
            ft.count = 0
            if ft.dfs(i, 0) == ft.cycle:
                if ft.count % 2 == 1:
                    print(ft.count - 1)
                else:
                    print(ft.count)
                break
    if (m - ft.count) % 2 == 1:
        print(ft.count)

class codeforces_216_B:
    def __init__(self):
        self.count = 0
        self.seen = [False] * (m + 1)
        self.graph = []
        for i in range(0, m + 1):
            self.graph.append([])
        for i in range(0, n):
            x, y = map(int, input().split())
            self.graph[x].append(y)
            self.graph[y].append(x)
    def dfs(self, child, par):
        if self.seen[child] == True:
            return self.cycle
        self.seen[child] = True
        for i in self.graph[child]:
            if i!= par:
                self.count += 1
                if self.dfs(i, child) == self.cycle:
                    return self.cycle
        return self.path
main()"
CodeGen,avatar,Java,Python,codeforces_203_B.py,"def main():
    N = int(input())
    M = int(input())
    black = [[0] * (N + 2) for _ in range(N + 2)]
    for m in range(1, M + 1):
        x = int(input())
        y = int(input())
        for xx in range(x - 1, x + 1):
            for yy in range(y - 1, y + 1):
                black[xx][yy] += 1
                if black[xx][yy] == 9:
                    return m
    return -1

if __name__ == '__main__':
    main()","def main():
    N, M = map(int, input().split())
    black = [[0] * (N + 2) for _ in range(N + 2)]
    for m in range(1, M + 1):
        x, y = map(int, input().split())
        for xx in range(x - 1, x + 2):
            for yy in range(y - 1, y + 2):
                black[xx][yy] += 1
                if black[xx][yy] == 9:
                    return m
    return -1

if __name__ == '__main__':
    print(main())"
CodeGen,avatar,Java,Python,atcoder_ABC174_C.py,"def main():
    K = int(input())
    if K % 2 == 0 or K % 5 == 0:
        return -1
    if K % 7 == 0:
        K /= 7
    K *= 9
    ans = 1
    remainder = 10 % K
    while remainder!= 1:
        ans += 1
        remainder = remainder * 10 % K
    return ans

if __name__ == ""__main__"":
    T = int(input())
    for i in range(T):
        print(main())","def main():
    K = int(input())
    if K % 2 == 0 or K % 5 == 0:
        return -1
    if K % 7 == 0:
        K /= 7
    K *= 9
    ans = 1
    remainder = 10 % K
    while remainder!= 1:
        ans += 1
        remainder = remainder * 10 % K
    return ans

if __name__ == ""__main__"":
    print(main())"
CodeGen,avatar,Java,Python,atcoder_ABC127_F.py,"import sys
import math
import heapq

def readline():
    return sys.stdin.readline().strip()

def readint():
    return int(readline())

def readints():
    return [int(x) for x in readline().split()]

def main():
    t = readint()
    s = []
    for _ in range(t):
        s.append(readline())
    if s[0][0] == '2':
        print(min(readints()))
        print(sum(readints()))
        print(sum(readints()))
    else:
        print(min(readints()))
        print(sum(readints()))
        print(sum(readints()))

if __name__ == '__main__':
    main()","import sys
import math
import heapq

def readline():
    return sys.stdin.readline().strip()

def readint():
    return int(readline())

def readints():
    return [int(x) for x in readline().split()]

def main():
    t = readint()
    s = []
    for _ in range(t):
        s.append(readline())
    if s[0][0] == '2':
        print(min(readints()))
        print(sum(readints()))
        print(sum(readints()))
    else:
        print(min(readints()))
        print(sum(readints()))
        print(sum(readints()))

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,atcoder_AGC043_B.py,"def cal(s,c):
    n = len(s)
    m = n - 1
    ans = 0
    for i in range(0,n):
        if s[i] == c and (m & i) == i:
            ans ^= 1
    return ans

def solve():
    n = int(input())
    s = input()
    if n == 2:
        print(s[0])
    else:
        if s.count('1') > 0:
            print(cal(s,'1'))
        else:
            print(cal(s,'2') * 2)

if __name__ == '__main__':
    out = sys.stdout
    sc = sys.stdin
    main(sys.argv)","import sys

def cal(s,c):
    n = len(s)
    m = n - 1
    ans = 0
    for i in range(0,n):
        if s[i] == c and (m & i) == i:
            ans ^= 1
    return ans

def solve():
    n = int(input())
    s = input()
    sb = []
    for i in range(1, n):
        sb.append(abs(ord(s[i]) - ord(s[i - 1])))
    if n == 2:
        print(sb[0])
        return
    s = ''.join(map(str, sb))
    if '1' in s:
        print(cal(s, '1'))
    else:
        print(cal(s, '2') * 2)

if __name__ == '__main__':
    solve()"
CodeGen,avatar,Java,Python,codeforces_421_A.py,"def main(args):
    n = int(input())
    a = int(input())
    b = int(input())
    list1 = []
    list2 = []
    for i in range(a):
        list1.append(int(input()))
    for i in range(b):
        list2.append(int(input()))
    for i in range(n):
        if list1.count(i+1) == 1:
            print(1 + "" "")
        else:
            print(2 + "" "")

if __name__ == ""__main__"":
    main(sys.argv)","def main():
    n, a, b = map(int, input().split())
    list1 = list(map(int, input().split()))
    list2 = list(map(int, input().split()))
    for i in range(n):
        if list1.count(i+1) == 1:
            print(1, end="" "")
        else:
            print(2, end="" "")

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,codeforces_500_A.py,"def dfs(currpos, arr, target):
    if currpos == target:
        return True
    if currpos == len(arr) + 1:
        return False
    teleport = dfs(currpos + arr[currpos - 1], arr, target)
    if teleport:
        return True
    return False

def main():
    n = int(input())
    goal = int(input())
    arr = [int(x) for x in input().split()]
    isFound = dfs(1, arr, goal)
    if isFound:
        print(""YES"")
    else:
        print(""NO"")

main()","def dfs(currpos, arr, target):
    if currpos == target:
        return True
    if currpos == len(arr) + 1:
        return False
    teleport = dfs(currpos + arr[currpos - 1], arr, target)
    if teleport:
        return True
    return False

def main():
    n, goal = map(int, input().split())
    arr = list(map(int, input().split()))
    isFound = dfs(1, arr, goal)
    if isFound:
        print(""YES"")
    else:
        print(""NO"")

main()"
CodeGen,avatar,Java,Python,codeforces_445_A.py,"import sys
import io

def read_input():
    buf = io.StringIO(sys.stdin.readline())
    inp = buf.readline().split("""")
    n = int(inp[0])
    m = int(inp[1])
    ans = []
    for i in range(n):
        str = buf.readline()
        temp = """"
        for j in range(m):
            if str[j] == ""-"":
                temp += ""-""
            else:
                if (i + j) % 2 == 1:
                    temp += ""W""
                else:
                    temp += ""B""
        ans.append(temp)
    for i in range(n):
        print(ans[i])

read_input()","import sys
import io

def read_input():
    n, m = map(int, input().split())
    ans = []
    for i in range(n):
        str = input()
        temp = """"
        for j in range(m):
            if str[j] == ""-"":
                temp += ""-""
            else:
                if (i + j) % 2 == 1:
                    temp += ""W""
                else:
                    temp += ""B""
        ans.append(temp)
    for i in range(n):
        print(ans[i])

read_input()"
CodeGen,avatar,Java,Python,codeforces_37_A.py,"def main():
    input = input()
    n = input()
    map = {}
    for i in range(n):
        val = input()
        map[val] = map.get(val, 0) + 1
    max = -1
    for key, value in map.items():
        max = max if max > value else value
    print(max)
    print(len(map))


class FastScanner:
    def __init__(self):
        self.st = []
        self.br = input()

    def next(self):
        while not self.st:
            try:
                self.st = [x.strip() for x in self.br.readline().split()]
            except IOError:
                self.st = []
        return self.st.pop(0)

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return long(self.next())

    def nextDouble(self):
        return float(self.next())

    def nextLine(self):
        return self.br.readline()


if __name__ == ""__main__"":
    main()","def main():
    input = input()
    n = input()
    map = {}
    for i in range(n):
        val = input()
        map[val] = map.get(val, 0) + 1
    max = -1
    for key, value in map.items():
        max = max if max > value else value
    print(max)
    print(len(map))


class FastScanner:
    def __init__(self):
        self.st = []
        self.br = input()

    def next(self):
        while not self.st:
            try:
                self.st = [x.strip() for x in self.br.readline().split()]
            except IOError:
                self.st = []
        return self.st.pop(0)

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return long(self.next())

    def nextDouble(self):
        return float(self.next())

    def nextLine(self):
        return self.br.readline()


if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,atcoder_ABC145_E.py,"import java.util.Arrays
import java.util.Comparator
import java.util.Scanner
import sys

N = int(input())
T = int(input())
AB = [[int(x) for x in input().split()] for i in range(N)]
AB = sorted(AB, key=lambda a: a[0])

dp = [[0] * 6001 for i in range(N + 1)]
for i in range(1, N + 1):
    for timeAfterEat in range(0, 6000 + 1):
        dp[i][timeAfterEat] = max(dp[i][timeAfterEat], dp[i - 1][timeAfterEat])
        time = AB[i - 1][0]
        value = AB[i - 1][1]
        if 0 <= timeAfterEat - time < T:
            dp[i][timeAfterEat] = max(dp[i][timeAfterEat], dp[i - 1][timeAfterEat - time] + value)

print(max(dp[N][6000], *dp[N][0:6000]))","import sys

N, T = map(int, input().split())
AB = [[int(x) for x in input().split()] for i in range(N)]
AB = sorted(AB, key=lambda a: a[0])

dp = [[0] * 6001 for i in range(N + 1)]
for i in range(1, N + 1):
    for timeAfterEat in range(0, 6000 + 1):
        dp[i][timeAfterEat] = max(dp[i][timeAfterEat], dp[i - 1][timeAfterEat])
        time = AB[i - 1][0]
        value = AB[i - 1][1]
        if 0 <= timeAfterEat - time < T:
            dp[i][timeAfterEat] = max(dp[i][timeAfterEat], dp[i - 1][timeAfterEat - time] + value)

print(max(dp[N][6000], *dp[N][0:6000]))"
CodeGen,avatar,Java,Python,codeforces_58_B.py,"def main(args):
    sc = input()
    n = sc.next()
    print(n + "" "")
    m = n
    for i in range(n-1,0,-1):
        if m % i == 0:
            print(i + "" "")
            m = i
    print(m)

if __name__ == ""__main__"":
    main(sys.argv)","def main():
    n = int(input())
    print(n, end="" "")
    m = n
    for i in range(n-1,0,-1):
        if m % i == 0:
            print(i, end="" "")
            m = i

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,atcoder_AGC017_A.py,"def C(n,m):
    res = 1
    for i in range(m-n+1,m+1):
        res = res * i
    for i in range(1,n+1):
        res = res / i
    return res

def main():
    sc = Scanner()
    n, p = sc.nextInt(), sc.nextInt()
    k0, k1 = 0, 0
    for i in range(n):
        x = sc.nextInt()
        if x % 2 == 1:
            k1 += 1
        else:
            k0 += 1
    ans = 1
    for i in range(k0):
        ans = ans * 2
    if p == 0:
        for i in range(k1):
            ans = ans * 2
            for j in range(i, k1):
                ans = ans + C(i, j)
    else:
        for i in range(k1):
            ans = ans * 2
            for j in range(i+1, k1):
                ans = ans + C(i, j)
    print(ans)

main()","def C(n,m):
    res = 1
    for i in range(m-n+1,m+1):
        res = res * i
    for i in range(1,n+1):
        res = res // i
    return res

def main():
    n, p = map(int, input().split())
    k0, k1 = 0, 0
    inputs = list(input().split())
    for i in range(n):
        x = int(inputs[i])
        if x % 2 == 1:
            k1 += 1
        else:
            k0 += 1
    ans = 1
    for i in range(k0):
        ans = ans * 2
    if p == 0:
        add = 0
        for i in range(0, k1 + 1, 2):
            add += C(i, k1)
        ans *= add
        print(ans)
    else:
        add = 0
        for i in range(1, k1 + 1, 2):
            add += C(i, k1)
        ans *= add
        print(ans)

main()"
CodeGen,avatar,Java,Python,atcoder_ABC112_A.py,"def main():
    n = int(input())
    if n == 1:
        print('Hello World')
    else:
        strs = input().split()
        print(int(strs[0]) + int(strs[1]))

if __name__ == '__main__':
    main()","def main():
    n = int(input())
    if n == 1:
        print('Hello World')
    else:
        print(int(input()) + int(input()))

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,codeforces_49_A.py,"def main():
    sc = Scanner(sys.stdin)
    s = sc.next()
    length = len(s)
    ch = 0
    for i in range(length-1,-1,-1):
        if s[i]!='' and s[i]!= '?':
            ch = s[i]
            break
    ch = ch.lower()
    if ch == 'a' or ch == 'e' or ch == 'i' or ch == 'o' or ch == 'u' or ch == 'y':
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()","def main():
    s = input()
    length = len(s)
    ch = 0
    for i in range(length-1,-1,-1):
        if s[i]!=' ' and s[i]!= '?':
            ch = s[i]
            break
    ch = ch.lower()
    if ch == 'a' or ch == 'e' or ch == 'i' or ch == 'o' or ch == 'u' or ch == 'y':
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,codeforces_67_B.py,"import sys
import itertools

def main():
    n = int(input())
    k = int(input())
    bb = list(map(int, input().split()))
    aa = [0] * n
    m = 0
    for a in range(n - 1, -1, -1):
        j = 0
        while bb[a] > 0:
            if aa[j] >= a + k:
                bb[a] -= 1
                j += 1
            j += 1
        for j_ in range(m, j):
            aa[j_] = aa[j_ - 1]
        aa[j] = a
        m = j + 1
    for i in range(n):
        print(aa[i] + 1 + "" "")
    print()

if __name__ == ""__main__"":
    sys.exit(main())","import sys
import itertools

def main():
    n = int(input())
    k = int(input())
    bb = list(map(int, input().split()))
    aa = [0] * n
    m = 0
    for a in range(n - 1, -1, -1):
        j = 0
        while bb[a] > 0:
            if aa[j] >= a + k:
                bb[a] -= 1
                j += 1
            j += 1
        for j_ in range(m, j):
            aa[j_] = aa[j_ - 1]
        aa[j] = a
        m = j + 1
    for i in range(n):
        print(aa[i] + 1 + "" "")
    print()

if __name__ == ""__main__"":
    sys.exit(main())"
CodeGen,avatar,Java,Python,codeforces_456_A.py,"def main():
    n = int(input())
    a = [int(i) for i in input().split()]
    b = [int(i) for i in input().split()]
    temp = 0
    q = 0
    w = 0
    e = 0
    f = False
    for i in range(n):
        if temp < a[i]:
            if q > b[i]:
                f = True
            q = b[i]
            temp = a[i]
        if temp > a[i]:
            if q < b[i]:
                f = True
            q = b[i]
            temp = a[i]
        if a[i] > w:
            w = a[i]
            if b[i] < e:
                f = True
            e = b[i]
        if a[i] < w:
            if b[i] > e:
                f = True
    if f == True:
        print(""Happy Alex"")
    else:
        print(""Poor Alex"")

if __name__ == '__main__':
    main()","def main():
    n = int(input())
    a = [int(i) for i in input().split()]
    b = [int(i) for i in input().split()]
    temp = 0
    q = 0
    w = 0
    e = 0
    f = False
    for i in range(n):
        if temp < a[i]:
            if q > b[i]:
                f = True
            q = b[i]
            temp = a[i]
        if temp > a[i]:
            if q < b[i]:
                f = True
            q = b[i]
            temp = a[i]
        if a[i] > w:
            w = a[i]
            if b[i] < e:
                f = True
            e = b[i]
        if a[i] < w:
            if b[i] > e:
                f = True
    if f == True:
        print(""Happy Alex"")
    else:
        print(""Poor Alex"")

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,codeforces_579_A.py,"def main(args):
    str = input()
    n = int(str)
    s = """"
    while n > 0:
        x = n % 2
        n /= 2
        s += x + """"
    ans = 0
    for i in range(len(s)):
        if s[i] == '1':
            ans += 1
    print(ans)

#test

print(main(input()))","def main():
    n = int(input())
    s = """"
    while n > 0:
        x = n % 2
        n //= 2
        s += str(x)
    ans = 0
    for i in range(len(s)):
        if s[i] == '1':
            ans += 1
    print(ans)

#test

main()"
CodeGen,avatar,Java,Python,codeforces_110_B.py,"def main():
    sc = Scanner(sys.stdin)
    n = sc.next()
    c = [chr(ord('a') + i) for i in range(n)]
    for i in range(4):
        for j in range(i, n, 4):
            c[j] = chr(ord('a') + i)
    for i in range(n):
        print(c[i])

if __name__ == '__main__':
    main()","def main():
    n = int(input())
    c = [chr(ord('a') + i) for i in range(n)]
    for i in range(4):
        for j in range(i, n, 4):
            c[j] = chr(ord('a') + i)
    for i in range(n):
        print(c[i], end='')

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,atcoder_ABC145_C.py,"def dist(x1, y1, x2, y2):
    return math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))

def main():
    N = int(input())
    pos = [[int(x) for x in input().split()] for i in range(N)]
    sum = 0
    for i in range(N):
        for j in range(N):
            if i == j:
                continue
            sum += dist(pos[i][0], pos[i][1], pos[j][0], pos[j][1])
    print(sum / N)

if __name__ == '__main__':
    main()","import math

def dist(x1, y1, x2, y2):
    return math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))

def main():
    N = int(input())
    pos = [[int(x) for x in input().split()] for i in range(N)]
    sum = 0
    for i in range(N):
        for j in range(N):
            if i == j:
                continue
            sum += dist(pos[i][0], pos[i][1], pos[j][0], pos[j][1])
    print(sum / N)

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,atcoder_ABC107_C.py,"def main ( ):
    N = int(input())
    K = int(input())
    S = [int(i) for i in input().split()]
    temp = 0
    ans = 1000000000
    if K == 1:
        for i in range(0, N):
            temp = S[i]
            ans = min(abs(temp), ans)
        print(ans)
    else:
        if N - K!= 0:
            for i in range(0, N - K + 1):
                min = S[i]
                max = S[i + K - 1]
                if min < 0 and max > 0:
                    temp = 2 * (- min) + max
                else:
                    temp = max if max > 0 else min
                ans = min(ans, temp)
            print(ans)
        else:
            min = S[0]
            max = S[N - 1]
            if min < 0 and max > 0:
                print(2 * (- min) + max)
            else:
                print(max if max > 0 else min)

if __name__ == ""__main__"":
    main()","def main ( ):
    N, K = map(int, input().split())
    S = list(map(int, input().split()))
    temp = 0
    ans = 1000000000
    if K == 1:
        for i in range(0, N):
            temp = S[i]
            ans = min(abs(temp), ans)
        print(ans)
    else:
        if N - K!= 0:
            for i in range(0, N - K + 1):
                min_val = S[i]
                max_val = S[i + K - 1]
                if min_val < 0 and max_val > 0:
                    temp = 2 * (- min_val) + max_val
                else:
                    temp = max_val if max_val > 0 else min_val
                ans = min(ans, temp)
            print(ans)
        else:
            min_val = S[0]
            max_val = S[N - 1]
            if min_val < 0 and max_val > 0:
                print(2 * (- min_val) + max_val)
            else:
                print(max_val if max_val > 0 else min_val)

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,atcoder_ABC070_B.py,"def main():
    inputStream = sys.stdin
    outputStream = sys.stdout
    input = inputStream.readline()
    a, b, c, d = map(int, input.split())
    if c > b:
        print(0)
    elif a > d:
        print(0)
    elif a < c:
        print(min(b, d) - c)
    else:
        l = [a, b, c, d]
        l.sort()
        print(l[2] - l[1])
main()","def main():
    a, b, c, d = map(int, input().split())
    if c > b:
        print(0)
    elif a > d:
        print(0)
    elif a < c:
        print(min(b, d) - c)
    else:
        l = [a, b, c, d]
        l.sort()
        print(l[2] - l[1])
main()"
CodeGen,avatar,Java,Python,codeforces_622_A.py,"import sys
import math

def getValueAtIndex(index):
    return 1 + (index - 1) * index / 2

def solve():
    position = int(sc.next())
    nrstSeqStartIndx = 1
    while getValueAtIndex(nrstSeqStartIndx * 2) < position:
        nrstSeqStartIndx *= 2
    while getValueAtIndex(nrstSeqStartIndx + 1) <= position:
        nrstSeqStartIndx += 1
    startIndex = getValueAtIndex(nrstSeqStartIndx)
    out.println((position - startIndex) + 1)

def main():
    try:
        inp = sys.stdin.buffer
        out = sys.stdout.buffer
    except AttributeError:
        inp = sys.stdin
        out = sys.stdout
    sc = sys.stdin.read().split()
    solve()
    out.flush()

if __name__ == '__main__':
    main()","import sys
import math

def getValueAtIndex(index):
    return 1 + (index - 1) * index / 2

def solve():
    position = int(sc.next())
    nrstSeqStartIndx = 1
    while getValueAtIndex(nrstSeqStartIndx * 2) < position:
        nrstSeqStartIndx *= 2
    while getValueAtIndex(nrstSeqStartIndx + 1) <= position:
        nrstSeqStartIndx += 1
    startIndex = getValueAtIndex(nrstSeqStartIndx)
    out.println((position - startIndex) + 1)

def main():
    try:
        inp = sys.stdin.buffer
        out = sys.stdout.buffer
    except AttributeError:
        inp = sys.stdin
        out = sys.stdout
    sc = sys.stdin.read().split()
    solve()
    out.flush()

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,atcoder_ABC143_A.py,"def main(args):
    try:
        bf = open(args[0])
        x = bf.readline().strip().split("" "")
        a = int(x[0])
        b = int(x[1])
        c = a - b * 2
        if c < 0: c = 0
        print(c)
    except Exception as e:
        print(e)

if __name__ == ""__main__"":
    main(sys.argv[1:])","def main():
    try:
        x = input().strip().split()
        a = int(x[0])
        b = int(x[1])
        c = a - b * 2
        if c < 0: c = 0
        print(c)
    except Exception as e:
        print(e)

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,codeforces_79_A.py,"def can_take(x_needed, x_available, y_needed, y_available):
    if x_needed > x_available:
        return False
    if y_needed > y_available:
        return False
    return True

def main():
    try:
        x = int(input())
        y = int(input())
        while True:
            if turn % 2 == 0:
                if can_take(2, x, 2, y):
                    x -= 2
                    y -= 2
                elif can_take(1, x, 12, y):
                    x -= 1
                    y -= 12
                elif can_take(0, x, 22, y):
                    y -= 22
                else:
                    print('hanako')
                    return
            else:
                if can_take(0, x, 22, y):
                    y -= 22
                elif can_take(1, x, 12, y):
                    x -= 1
                    y -= 12
                elif can_take(2, x, 2, y):
                    x -= 2
                    y -= 2
                else:
                    print('ciel')
                    return
            turn += 1
    except EOFError:
        pass

if __name__ == '__main__':
    main()","def can_take(x_needed, x_available, y_needed, y_available):
    if x_needed > x_available:
        return False
    if y_needed > y_available:
        return False
    return True

def main():
    try:
        x, y = map(int, input().split())
        turn = 0
        while True:
            if turn % 2 == 0:
                if can_take(2, x, 2, y):
                    x -= 2
                    y -= 2
                elif can_take(1, x, 12, y):
                    x -= 1
                    y -= 12
                elif can_take(0, x, 22, y):
                    y -= 22
                else:
                    print('Hanako')
                    return
            else:
                if can_take(0, x, 22, y):
                    y -= 22
                elif can_take(1, x, 12, y):
                    x -= 1
                    y -= 12
                elif can_take(2, x, 2, y):
                    x -= 2
                    y -= 2
                else:
                    print('Ciel')
                    return
            turn += 1
    except EOFError:
        pass

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,atcoder_ABC149_B.py,"def main():
    input = input()
    A = int(input())
    B = int(input())
    K = int(input())
    x = A
    y = B
    x = A - K
    if x < 0:
        y = B + x
        x = 0
        if y < 0:
            y = 0
    print(x, y)


if __name__ == '__main__':
    main()","def main():
    A, B, K = map(int, input().split())
    x = A
    y = B
    x = A - K
    if x < 0:
        y = B + x
        x = 0
        if y < 0:
            y = 0
    print(x, y)


if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,codeforces_404_A.py,"def main(args):
    n = int(input())
    arr = [[] for _ in range(n)]
    str = []
    for i in range(n):
        str.append(input())
    for i in range(n):
        for j in range(n):
            arr[i].append(str[i][j])
    a = arr[0][0]
    b = arr[0][1]
    if a == b:
        print(""NO"")
    else:
        res = True
        for i in range(n):
            for j in range(n):
                if i == j or i + j == n - 1:
                    if arr[i][j]!= a:
                        res = False
                        break
                else:
                    if arr[i][j]!= b:
                        res = False
                        break
        if res:
            print(""YES"")
        else:
            print(""NO"")

if __name__ == ""__main__"":
    main(sys.argv)","def main():
    n = int(input())
    arr = [[] for _ in range(n)]
    str = []
    for i in range(n):
        str.append(input())
    for i in range(n):
        for j in range(n):
            arr[i].append(str[i][j])
    a = arr[0][0]
    b = arr[0][1]
    if a == b:
        print(""NO"")
    else:
        res = True
        for i in range(n):
            for j in range(n):
                if i == j or i + j == n - 1:
                    if arr[i][j]!= a:
                        res = False
                        break
                else:
                    if arr[i][j]!= b:
                        res = False
                        break
        if res:
            print(""YES"")
        else:
            print(""NO"")

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,atcoder_ABC142_C.py,"def main(N):
    scanner = Scanner(sys.stdin)
    for i in range(1, N+1):
        A = scanner.nextInt()
        idorder[A] = i
    for i in range(1, N+1):
        print(idorder[i])
        print("" "")

if __name__ == '__main__':
    main(int(input()))","def main(N):
    idorder = {}
    inputs = list(input().split())
    for i in range(1, N+1):
        A = int(inputs[i - 1])
        idorder[A] = i
    for i in range(1, N+1):
        print(idorder[i], end=' ')

if __name__ == '__main__':
    main(int(input()))"
CodeGen,avatar,Java,Python,codeforces_108_B.py,"def main(args):
    n = int(input())
    a = [int(i) for i in input().split()]
    a.sort()
    for i in range(len(a)-1):
        if a[i+1] < a[i]*2 and a[i]!= a[i+1]:
            print(""YES"")
            return
    print(""NO"")

if __name__ == ""__main__"":
    main(sys.argv)","def main():
    n = int(input())
    a = [int(i) for i in input().split()]
    a.sort()
    for i in range(len(a)-1):
        if a[i+1] < a[i]*2 and a[i]!= a[i+1]:
            print(""YES"")
            return
    print(""NO"")

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,codeforces_25_A.py,"def main(args):
    ob = input()
    n = ob.next()
    array = [ob.next() for i in range(n+1)]
    odd = 0
    even = 0
    odd_ind = 0
    even_ind = 0
    for i in range(1,n+1):
        if array[i] % 2 == 0:
            even += 1
            even_ind = i
        else:
            odd += 1
            odd_ind = i
    if odd > even:
        print(even_ind)
    else:
        print(odd_ind)

if __name__ == '__main__':
    main(sys.argv)","def main():
    n = int(input())
    array = list(map(int, input().split()))
    odd = 0
    even = 0
    odd_ind = 0
    even_ind = 0
    for i in range(n):
        if array[i] % 2 == 0:
            even += 1
            even_ind = i + 1
        else:
            odd += 1
            odd_ind = i + 1
    if odd > even:
        print(even_ind)
    else:
        print(odd_ind)

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,atcoder_ABC150_D.py,"def getGCD(a, b):
    if b == 0:
        return a
    else:
        return getGCD(b, a % b)

def main(args):
    n = int(input())
    m = int(input())
    a = [int(x) for x in input().split()]
    gcd = 1
    lcd = 1
    for i in range(n):
        gcd = getGCD(lcd, a[i])
        lcd = lcd * a[i] / gcd
        if lcd > m:
            return 0
    for i in range(n):
        if (lcd / a[i]) % 2 == 0:
            return 0
    return (m / lcd + 1) / 2","def getGCD(a, b):
    if b == 0:
        return a
    else:
        return getGCD(b, a % b)

def main():
    n, m = map(int, input().split())
    a = [int(x) // 2 for x in input().split()]
    gcd = 1
    lcd = 1
    for i in range(n):
        gcd = getGCD(lcd, a[i])
        lcd = lcd * a[i] // gcd
        if lcd > m:
            return 0
    for i in range(n):
        if (lcd // a[i]) % 2 == 0:
            return 0
    return (m // lcd + 1) // 2

print(main())"
CodeGen,avatar,Java,Python,codeforces_607_A.py,"def main():
    sc = Scanner(sys.stdin)
    n = sc.nextInt()
    beacon = [0] * 1000001
    dp = [0] * 1000001
    for i in range(n):
        a = sc.nextInt()
        beacon[a] = sc.nextInt()
    if beacon[0]!= 0:
        dp[0] = 1
    for i in range(1, 1000001):
        if beacon[i]!= 0 and beacon[i] < i:
            dp[i] = dp[i - beacon[i] - 1] + 1
        elif beacon[i]!= 0:
            dp[i] = 1
        else:
            dp[i] = dp[i - 1]
    max = max(dp)
    print(n - max)","def main():
    n = int(input())
    beacon = [0] * 1000001
    dp = [0] * 1000001
    for i in range(n):
        a, b = map(int, input().split())
        beacon[a] = b
    if beacon[0]!= 0:
        dp[0] = 1
    for i in range(1, 1000001):
        if beacon[i]!= 0 and beacon[i] < i:
            dp[i] = dp[i - beacon[i] - 1] + 1
        elif beacon[i]!= 0:
            dp[i] = 1
        else:
            dp[i] = dp[i - 1]
    max_val = max(dp)
    print(n - max_val)
    
main()"
CodeGen,avatar,Java,Python,atcoder_ABC149_C.py,"def main(args):
    stdin = input()
    x = int(stdin)
    if x!= 2 and x % 2 == 0:
        x += 1
    while True:
        i = 3
        sqrtNum = math.sqrt(x)
        while i <= sqrtNum:
            if x % i == 0:
                break
            i += 2
        if i > sqrtNum:
            break
        x += 2
    print(x)

# Note:
#
# The above code is a solution to the problem.
# It is not the best solution to the problem.
# Your code should be better than that.
#
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code","def main(args):
    stdin = input()
    x = int(stdin)
    if x!= 2 and x % 2 == 0:
        x += 1
    while True:
        i = 3
        sqrtNum = math.sqrt(x)
        while i <= sqrtNum:
            if x % i == 0:
                break
            i += 2
        if i > sqrtNum:
            break
        x += 2
    print(x)

# Note:
#
# The above code is a solution to the problem.
# It is not the best solution to the problem.
# Your code should be better than that.
#
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code should be better than that.
# Your code"
CodeGen,avatar,Java,Python,atcoder_ABC128_C.py,"def main():
    sc = Scanner()
    N = sc.nextInt()
    M = sc.nextInt()
    a = [0] * N
    for i in range(N):
        a[i] = 0
    for i in range(M):
        k = sc.nextInt()
        for j in range(k):
            s = sc.nextInt()
            s -= 1
            a[s] |= 1 << i
    p = 0
    for i in range(M):
        x = sc.nextInt()
        p |= (x << i)
    ans = 0
    for s in range(2**N):
        t = 0
        for i in range(N):
            if ( ( ( s >> i ) & 1 ) == 1 ):
                t ^= a[i]
        if ( p == t ):
            ans += 1
    print(ans)
    sc.close()","def main():
    N, M = map(int, input().split())
    a = [0] * N
    for i in range(N):
        a[i] = 0
    for i in range(M):
        k, *s = map(int, input().split())
        for x in s:
            a[x - 1] |= 1 << i
    p = 0
    inputs = list(input().split())
    for i in range(M):
        x = int(inputs[i])
        p |= (x << i)
    ans = 0
    for s in range(2**N):
        t = 0
        for i in range(N):
            if ( ( ( s >> i ) & 1 ) == 1 ):
                t ^= a[i]
        if ( p == t ):
            ans += 1
    print(ans)

main()"
CodeGen,avatar,Java,Python,atcoder_AGC024_B.py,"def main(args):
    N = int(input())
    P = [int(i) - 1 for i in input().split()]
    map = {}
    for i in range(N):
        map[P[i]] = i
    nglist = []
    for i in range(N - 1):
        if map[i] > map[i + 1]:
            nglist.append(i)
    if not nglist:
        print(0)
        return
    ans = min(N - len(nglist) - 1, len(nglist) + 1)
    for i in range(len(nglist) - 1):
        ans = min(nglist[i] + 1 + N - nglist[i + 1] - 1, ans)
    print(ans)","def main(args):
    N = int(input())
    P = [int(i) - 1 for i in input().split()]
    map = {}
    for i in range(N):
        map[P[i]] = i
    nglist = []
    for i in range(N - 1):
        if map[i] > map[i + 1]:
            nglist.append(i)
    if not nglist:
        print(0)
        return
    ans = min(N - len(nglist) - 1, len(nglist) + 1)
    for i in range(len(nglist) - 1):
        ans = min(nglist[i] + 1 + N - nglist[i + 1] - 1, ans)
    print(ans)"
CodeGen,avatar,Java,Python,codeforces_462_B.py,"def main ():
    try:
        f = open('input.txt', 'r')
        n = int(f.readline().strip())
        k = int(f.readline().strip())
        cards = [c462b() for _ in range(26)]
        for _ in range(n):
            s = f.readline().strip()
            for c in s:
                cards[c - 'A'].left += 1
        for _ in range(k):
            cards.sort()
            left = min(cards[25].left, k - _)
            ans = 0
            for _ in range(left):
                ans += (left - _) * (left - _)
                cards[25].left -= left
                _ += left - 1
            print(ans)
        f.close()
    except IOError:
        print(""File not found"")

class c462b:
    def __init__(self):
        self.left = 0
    def __lt__(self, other):
        return self.left < other.left

main()","def main ():
    try:
        f = open('input.txt', 'r')
        n = int(f.readline().strip())
        k = int(f.readline().strip())
        cards = [c462b() for _ in range(26)]
        for _ in range(n):
            s = f.readline().strip()
            for c in s:
                cards[c - 'A'].left += 1
        for _ in range(k):
            cards.sort()
            left = min(cards[25].left, k - _)
            ans = 0
            for _ in range(left):
                ans += (left - _) * (left - _)
                cards[25].left -= left
                _ += left - 1
            print(ans)
        f.close()
    except IOError:
        print(""File not found"")

class c462b:
    def __init__(self):
        self.left = 0
    def __lt__(self, other):
        return self.left < other.left

main()"
CodeGen,avatar,Java,Python,codeforces_669_A.py,"def main():
    n = int(input())
    solve(n)

def solve(n):
    print((n/3)*2 + (n%3==0))

main()","def main():
    n = int(input())
    solve(n)

def solve(n):
    print((n//3)*2 + (0 if n%3==0 else 1))

main()"
CodeGen,avatar,Java,Python,codeforces_387_B.py,"def main(args):
    n = int(input())
    m = int(input())
    req = [int(x) for x in input().split()]
    pre = [int(x) for x in input().split()]
    i = n - 1
    j = m - 1
    ans = 0
    while i >= 0 and j >= 0:
        if req[i] > pre[j]:
            ans += 1
        else:
            j -= 1
        i -= 1
    print(ans + i + 1)","def main():
    n, m = map(int, input().split())
    req = list(map(int, input().split()))
    pre = list(map(int, input().split()))
    i = n - 1
    j = m - 1
    ans = 0
    while i >= 0 and j >= 0:
        if req[i] > pre[j]:
            ans += 1
        else:
            j -= 1
        i -= 1
    print(ans + i + 1)
    
main()"
CodeGen,avatar,Java,Python,codeforces_544_B.py,"def main():
    n = int(input())
    count = int(input())
    printIsland(n, count)


def printIsland(n, count):
    a = (n + 1) // 2
    b = n // 2
    max = a * a + b * b
    if count > max:
        print(""NO"")
        return
    print(""YES"")
    for i in range(0, n):
        sb = """"
        for j in range(0, n):
            if ((i + j) % 2 == 0 and count > 0):
                sb += ""L""
                count -= 1
            else:
                sb += ""S""
        print(sb)","def main():
    n, count = map(int, input().split())
    printIsland(n, count)


def printIsland(n, count):
    a = (n + 1) // 2
    b = n // 2
    max = a * a + b * b
    if count > max:
        print(""NO"")
        return
    print(""YES"")
    for i in range(0, n):
        sb = """"
        for j in range(0, n):
            if ((i + j) % 2 == 0 and count > 0):
                sb += ""L""
                count -= 1
            else:
                sb += ""S""
        print(sb)
    
main()"
CodeGen,avatar,Java,Python,codeforces_189_A.py,"def main(args):
    n = int(input())
    maxn = 4010
    a = int(input())
    b = int(input())
    c = int(input())
    arr = [a, b, c]
    dp = [0] * maxn
    for i in range(n):
        dp[i] = -1
    dp[0] = 0
    for i in range(3):
        for j in range(arr[i], maxn):
            dp[j] = max(dp[j], dp[j - arr[i]] + 1)
    print(dp[n])","def main():
    inputs = list(input().split())
    n = int(inputs[0])
    maxn = 4010
    a, b, c = int(inputs[1]), int(inputs[2]), int(inputs[3])
    arr = [a, b, c]
    dp = [float(""-inf"")] * maxn
    dp[0] = 0
    for i in range(3):
        for j in range(arr[i], len(dp)):
            dp[j] = max(dp[j], dp[j - arr[i]] + 1)
    print(dp[n])
    
main()"
CodeGen,avatar,Java,Python,codeforces_653_A.py,"def main():
    try:
        in_ = raw_input
        out = sys.stdout
        n = int(in_())
        a = []
        for i in range(n):
            a.append(int(in_()))
        a = list(set(a))
        a.sort()
        found = False
        for i in range(len(a)):
            if i + 1 < len(a) and i + 2 < len(a):
                if a[i] + 1 == a[i + 1] and a[i + 1] + 1 == a[i + 2]:
                    found = True
                    break
        out.write(found and ""YES"" or ""NO"")
    except:
        out.write(""NO"")","def main():
    try:
        n = int(input())
        a = []
        inputs = list(input().split())
        for i in range(n):
            value = int(inputs[i])
            a.append(value)
        a = list(set(a))
        a.sort()
        found = False
        for i in range(len(a)):
            if i + 1 < len(a) and i + 2 < len(a):
                if a[i] + 1 == a[i + 1] and a[i + 1] + 1 == a[i + 2]:
                    found = True
                    break
        print(found and ""YES"" or ""NO"")
    except:
        print(""NO"")
        
main()"
CodeGen,avatar,Java,Python,atcoder_ABC169_D.py,"def main(args):
    try:
        n = int(input())
        sqrt = int(math.sqrt(n))
        answer = 0
        for i in range(2, sqrt + 1):
            count = 0
            while 0 == (n % i):
                n //= i
                count += 1
            for j in range(1, count):
                count -= j
                answer += 1
        if n > 1:
            answer += 1
        print(answer)
    except Exception as e:
        print(e)","import math

def main():
    try:
        n = int(input())
        sqrt = int(math.sqrt(n))
        answer = 0
        for i in range(2, sqrt + 1):
            count = 0
            while 0 == (n % i):
                n //= i
                count += 1
            j = 1
            while count - j >= 0:
                count -= j
                answer += 1
                j += 1
        if n > 1:
            answer += 1
        print(answer)
    except Exception as e:
        print(e)
        
main()"
CodeGen,avatar,Java,Python,codeforces_299_A.py,"def main(args):
    n = int(input())
    a = [int(i) for i in input().split()]
    a.sort()
    min = a[0]
    for value in a:
        if value % min!= 0:
            print(-1)
            return
    print(min)","def main():
    n = int(input())
    a = [int(i) for i in input().split()]
    a.sort()
    min = a[0]
    for value in a:
        if value % min!= 0:
            print(-1)
            return
    print(min)
    
main()"
CodeGen,avatar,Java,Python,atcoder_AGC013_A.py,"def main(args):
    stdin = input()
    N = int(stdin.next())
    A = [int(x) for x in stdin.next().split()]
    count = 0
    for i in range(N-1):
        if A[i] == A[i+1]:
            pass
        elif A[i] < A[i+1]:
            while A[i] <= A[i+1]:
                i += 1
                if i == N-1:
                    break
            count += 1
        else:
            while A[i] >= A[i+1]:
                i += 1
                if i == N-1:
                    break
            count += 1
    print(count)","def main():
    N = int(input())
    A = list(map(int, input().split()))
    count = 0
    i = 0
    while i < N:
        if i == N - 1:
            count += 1
            break
        if A[i] == A[i+1]:
            pass
        elif A[i] < A[i+1]:
            while A[i] <= A[i+1]:
                i += 1
                if i == N-1:
                    break
            count += 1
        else:
            while A[i] >= A[i+1]:
                i += 1
                if i == N-1:
                    break
            count += 1
        i += 1
    print(count)
    
main()"
CodeGen,avatar,Java,Python,codeforces_609_B.py,"def main(args):
    n = int(input())
    m = int(input())
    arr = [int(i) for i in input().split()]
    gen = [0] * 11
    for i in arr:
        gen[i] += 1
    ans = 0
    for i in range(1, m + 1):
        for k in range(1, m + 1):
            if i!= k:
                ans += gen[i] * gen[k]
    print(int(ans / 2))","def main():
    n, m = map(int, input().split())
    arr = list(map(int, input().split()))
    gen = [0] * 11
    for i in arr:
        gen[i] += 1
    ans = 0
    for i in range(1, m + 1):
        for k in range(1, m + 1):
            if i!= k:
                ans += gen[i] * gen[k]
    print(int(ans / 2))
    
main()"
CodeGen,avatar,Java,Python,atcoder_ABC140_F.py,"def main(args):
    sc = Scanner(sys.stdin)
    N = sc.nextInt()
    size = 2**N
    S = [sc.nextInt() for _ in range(size)]
    S.sort()
    active = []
    active.append(S[size-1])
    spawned = [False]*size
    spawned[size-1] = True
    for i in range(N):
        active.sort(reverse=True)
        activated = []
        next = size-1
        while next >= 0 and (S[next] >= S[next] or spawned[next]):
            next -= 1
        if next < 0:
            print(""No"")
            return
        spawned[next] = True
        activated.append(S[next])
        active.extend(activated)
    print(""Yes"")

# Note:
# The above Java code is equivalent to the following Python code:
#
# def main(args):
#     sc = Scanner(sys.stdin)
#     N = sc.nextInt()
#     size = 2**N
#     S = [sc.nextInt() for _ in range(size)]
#     S.sort()
#     active = []
#     active.append(S[size-1])
#     spawned = [False]*size
#     spawned[size-1] = True
#     for i in range(N):
#         active.sort(reverse=True)
#         activated = []
#         next = size-1
#         while next >= 0 and (S[next] >= S[next] or spawned[next]):
#             next -= 1
#         if next < 0:
#             print(""No"")
#             return
#         spawned[next] = True
#         activated.append(S[next])
#         active.extend(activated)
#     print(""Yes"")
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#","def main(args):
    sc = Scanner(sys.stdin)
    N = sc.nextInt()
    size = 2**N
    S = [sc.nextInt() for _ in range(size)]
    S.sort()
    active = []
    active.append(S[size-1])
    spawned = [False]*size
    spawned[size-1] = True
    for i in range(N):
        active.sort(reverse=True)
        activated = []
        next = size-1
        while next >= 0 and (S[next] >= S[next] or spawned[next]):
            next -= 1
        if next < 0:
            print(""No"")
            return
        spawned[next] = True
        activated.append(S[next])
        active.extend(activated)
    print(""Yes"")

# Note:
# The above Java code is equivalent to the following Python code:
#
# def main(args):
#     sc = Scanner(sys.stdin)
#     N = sc.nextInt()
#     size = 2**N
#     S = [sc.nextInt() for _ in range(size)]
#     S.sort()
#     active = []
#     active.append(S[size-1])
#     spawned = [False]*size
#     spawned[size-1] = True
#     for i in range(N):
#         active.sort(reverse=True)
#         activated = []
#         next = size-1
#         while next >= 0 and (S[next] >= S[next] or spawned[next]):
#             next -= 1
#         if next < 0:
#             print(""No"")
#             return
#         spawned[next] = True
#         activated.append(S[next])
#         active.extend(activated)
#     print(""Yes"")
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#"
CodeGen,avatar,Java,Python,codeforces_400_A.py,"def is_solution(columns_count, x):
    all_xs = [True] * columns_count
    for i in range(0, 12):
        if x[i]!= 'X':
            all_xs[i % columns_count] = False
    for i in range(0, columns_count):
        if all_xs[i]:
            return True
    return False

def main():
    t = int(input())
    for i in range(0, t):
        possible_solutions = 0
        solutions = """"
        s = input()
        if is_solution(12, s):
            solutions += "" 1x12""
            possible_solutions += 1
        if is_solution(6, s):
            solutions += "" 2x6""
            possible_solutions += 1
        if is_solution(4, s):
            solutions += "" 3x4""
            possible_solutions += 1
        if is_solution(3, s):
            solutions += "" 4x3""
            possible_solutions += 1
        if is_solution(2, s):
            solutions += "" 6x2""
            possible_solutions += 1
        if is_solution(1, s):
            solutions += "" 12x1""
            possible_solutions += 1
        print(possible_solutions, solutions)

main()","def is_solution(columns_count, x):
    all_xs = [True] * columns_count
    for i in range(0, 12):
        if x[i]!= 'X':
            all_xs[i % columns_count] = False
    for i in range(0, columns_count):
        if all_xs[i]:
            return True
    return False

def main():
    t = int(input())
    for i in range(0, t):
        possible_solutions = 0
        solutions = []
        s = input()
        if is_solution(12, s):
            solutions.append(""1x12"")
            possible_solutions += 1
        if is_solution(6, s):
            solutions.append(""2x6"")
            possible_solutions += 1
        if is_solution(4, s):
            solutions.append(""3x4"")
            possible_solutions += 1
        if is_solution(3, s):
            solutions.append(""4x3"")
            possible_solutions += 1
        if is_solution(2, s):
            solutions.append(""6x2"")
            possible_solutions += 1
        if is_solution(1, s):
            solutions.append(""12x1"")
            possible_solutions += 1

        print(possible_solutions, *solutions)

main()"
CodeGen,avatar,Java,Python,atcoder_AGC003_C.py,"def main():
    sc = Scanner()
    N = sc.nextInt()
    map = {}
    for i in range(N):
        num = sc.nextInt()
        map[num] = i
    nums = []
    for i in range(N):
        num = sc.nextInt()
        nums.append(num)
    bin = 0
    diff = 0
    while nums:
        num = nums.pop()
        idx = map[num]
        if (bin % 2)!= (idx % 2):
            diff += 1
        bin += 1
        bin %= 2
    ans = (diff / 2)
    print(ans)","def main():
    N = int(input())
    nums = []
    for i in range(N):
        nums.append(int(input()))

    maps = {}
    for i in range(N):
        maps[nums[i]] = i
    nums.sort()
    bin = 0
    diff = 0
    for i in range(N):
        num = nums[i]
        idx = maps[num]
        if bin % 2 != idx % 2:
            diff += 1
        bin += 1
        bin %= 2
    ans = (diff // 2)
    print(ans)
    
main()"
CodeGen,avatar,Java,Python,codeforces_514_A.py,"def main():
    sc = Scanner(sys.stdin)
    list = []
    x = sc.nextLong()
    while x > 0:
        r = x % 10
        if 9 - r < r:
            if x / 10 == 0 and 9 - r == 0:
                list.append(r)
            else:
                list.append(9 - r)
        else:
            list.append(r)
        x = x / 10
    pow = 0
    newNumber = 0
    for i in range(len(list)):
        newNumber = newNumber + list[i] * (10 ** pow)
        pow += 1
    print(newNumber)","def main():
    list = []
    x = int(input())
    while x > 0:
        r = x % 10
        if 9 - r < r:
            if x // 10 == 0 and 9 - r == 0:
                list.append(r)
            else:
                list.append(9 - r)
        else:
            list.append(r)
        x = x // 10
    pow = 0
    newNumber = 0
    for i in range(len(list)):
        newNumber = newNumber + list[i] * (10 ** pow)
        pow += 1
    print(newNumber)
    
main()"
CodeGen,avatar,Java,Python,codeforces_678_B.py,"def check_leap(y):
    if y % 400 == 0:
        return True
    elif y % 4 == 0 and y % 100!= 0:
        return True
    else:
        return False

def main():
    y = int(input())
    leap = check_leap(y)
    sum = 0
    for i in range(y + 1):
        if check_leap(i):
            sum += 366
        else:
            sum += 365
        if sum % 7 == 0:
            if (check_leap(i) and leap) or (not check_leap(i) and not leap):
                print(i)
                return
            else:
                continue

if __name__ == ""__main__"":
    main()","def check_leap(y):
    if y % 400 == 0:
        return True
    elif y % 4 == 0 and y % 100!= 0:
        return True
    else:
        return False

def main():
    y = int(input())
    leap = check_leap(y)
    sum = 0
    for i in range(y + 1, y + 1000000):
        if check_leap(i):
            sum += 366
        else:
            sum += 365
        if sum % 7 == 0:
            if (check_leap(i) and leap) or (not check_leap(i) and not leap):
                print(i)
                return
            else:
                continue

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,atcoder_AGC025_A.py,"def sum(a):
    ans = 0
    while a >= 10:
        ans += a % 10
        a /= 10
    ans += a
    return ans

def main():
    N = int(input())
    n = 0
    if N % 2 == 0:
        n = N / 2
    else:
        n = (N + 1) / 2
    ans = sum(1) + sum(N - 1)
    for A in range(1, n + 1):
        if sum(A) + sum(N - A) < ans:
            ans = sum(A) + sum(N - A)
    print(ans)","def sum(a):
    ans = 0
    while a >= 10:
        ans += a % 10
        a //= 10
    ans += a
    return ans

def main():
    N = int(input())
    n = 0
    if N % 2 == 0:
        n = N // 2
    else:
        n = (N + 1) // 2
    ans = sum(1) + sum(N - 1)
    for A in range(1, n + 1):
        if sum(A) + sum(N - A) < ans:
            ans = sum(A) + sum(N - A)
    print(ans)
    
main()"
CodeGen,avatar,Java,Python,codeforces_705_B.py,"def main():
    t = int(input())
    arr = [int(i) for i in input().split()]
    prevWinner = 0
    for i in range(len(arr)):
        if arr[i] == 1:
            if prevWinner == 0:
                prevWinner = 2
            else:
                if ((arr[i] - 1) % 2 == 0):
                    print(2)
                    prevWinner = 2
                else:
                    print(1)
                    prevWinner = 1
        else:
            if prevWinner == 2 or prevWinner == 0:
                if ((arr[i] - 1) % 2 == 0):
                    print(1)
                    prevWinner = 1
                else:
                    print(2)
                    prevWinner = 2
            else:
                if ((arr[i] - 1) % 2 == 0):
                    print(1)
                    prevWinner = 1
                else:
                    print(2)
                    prevWinner = 2

if __name__ == '__main__':
    main()","def main():
    t = int(input())
    arr = [int(i) for i in input().split()]
    prevWinner = 0
    for i in range(len(arr)):
        if arr[i] == 1:
            if prevWinner == 0:
                prevWinner = 2
            else:
                if ((arr[i] - 1) % 2 == 0):
                    print(2)
                    prevWinner = 2
                else:
                    print(1)
                    prevWinner = 1
        else:
            if prevWinner == 2 or prevWinner == 0:
                if ((arr[i] - 1) % 2 == 0):
                    print(1)
                    prevWinner = 1
                else:
                    print(2)
                    prevWinner = 2
            else:
                if ((arr[i] - 1) % 2 == 0):
                    print(1)
                    prevWinner = 1
                else:
                    print(2)
                    prevWinner = 2

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,codeforces_55_B.py,"def min(arr, ops):
    if len(arr) == 0:
        return
    if len(arr) == 1:
        return arr[0]
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            a = []
            for k in range(len(arr)):
                if k!= i and k!= j:
                    a.append(arr[k])
            if ops[0] == ""+"":
                res = arr[i] + arr[j]
            else:
                res = arr[i] * arr[j]
            a.append(res)
            min(a, ops)

print(min([1, 2, 3, 4], [""+"", ""-"", ""*"", ""/""]))","def min(arr, ops):
    if len(arr) == 0:
        return
    if len(arr) == 1:
        return arr[0]
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            a = []
            for k in range(len(arr)):
                if k!= i and k!= j:
                    a.append(arr[k])
            if ops[0] == ""+"":
                res = arr[i] + arr[j]
            else:
                res = arr[i] * arr[j]
            a.append(res)
            min(a, ops)

print(min([1, 2, 3, 4], [""+"", ""-"", ""*"", ""/""]))"
CodeGen,avatar,Java,Python,codeforces_369_B.py,"def main(args):
    n = int(input())
    k = int(input())
    l = int(input())
    r = int(input())
    sAll = int(input())
    sk = int(input())
    ans = getPoints(n, k, l, r, sAll, sk)
    for num in ans:
        print(num, end=' ')
    print()


def getPoints(n, k, l, r, sAll, sk):
    ans = [l] * n
    sAll -= sk + (n - k) * l
    sk -= k * l
    while sk > 0:
        idx = n - 1
        while sk > 0 and idx >= n - k:
            ans[idx] += 1
            sk -= 1
        idx = 0
        while sAll > 0 and idx < n - k:
            ans[idx] += 1
            sAll -= 1
    while sAll > 0:
        idx = 0
        while sAll > 0 and idx < n - k:
            ans[idx] += 1
            sAll -= 1
    return ans","def main(args):
    n = int(input())
    k = int(input())
    l = int(input())
    r = int(input())
    sAll = int(input())
    sk = int(input())
    ans = getPoints(n, k, l, r, sAll, sk)
    for num in ans:
        print(num, end=' ')
    print()


def getPoints(n, k, l, r, sAll, sk):
    ans = [l] * n
    sAll -= sk + (n - k) * l
    sk -= k * l
    while sk > 0:
        idx = n - 1
        while sk > 0 and idx >= n - k:
            ans[idx] += 1
            sk -= 1
        idx = 0
        while sAll > 0 and idx < n - k:
            ans[idx] += 1
            sAll -= 1
    while sAll > 0:
        idx = 0
        while sAll > 0 and idx < n - k:
            ans[idx] += 1
            sAll -= 1
    return ans"
CodeGen,avatar,Java,Python,codeforces_624_B.py,"def main(args):
    n = int(input())
    ans = [int(input()) for i in range(n)]
    ans.sort()
    count = ans[n-1]
    for i in range(n-2,-1,-1):
        if ans[i] < ans[i+1]:
            count += ans[i]
        else:
            while ans[i] >= ans[i+1]:
                ans[i] -= 1
                if ans[i] > 0:
                    count += ans[i]
    print(count)","def main():
    n = int(input())
    ans = list(map(int, input().split()))
    ans.sort()
    count = ans[n-1]
    for i in range(n-2,-1,-1):
        if ans[i] < ans[i+1]:
            count += ans[i]
        else:
            while ans[i] >= ans[i+1]:
                ans[i] -= 1
            if ans[i] > 0:
                count += ans[i]
    print(count)

main()"
CodeGen,avatar,Java,Python,atcoder_AGC046_B.py,"def solve(A, B, C, D):
    MOD = 998244353
    dp = [[0] * (C + 1) for _ in range(D + 1)]
    for c in range(A, C + 1):
        for d in range(B, D + 1):
            if c == A and d == B:
                continue
            if c > A:
                dp[c - 1][d] = dp[c - 1][d] * d
            if d > B:
                dp[c][d - 1] = dp[c][d - 1] + dp[c][d - 1] * c
            if c > A and d > B:
                dp[c - 1][d - 1] = dp[c - 1][d - 1] - dp[c - 1][d - 1] * (c - 1) * (d - 1)
            dp[c][d] = (dp[c][d] + MOD) % MOD
    print(dp[C][D])

if __name__ == ""__main__"":
    A, B, C, D = map(int, input().split())
    solve(A, B, C, D)","def solve(A, B, C, D):
    MOD = 998244353
    dp = [[0] * (C + 1) for _ in range(D + 1)]
    for c in range(A, C + 1):
        for d in range(B, D + 1):
            if c == A and d == B:
                continue
            if c > A:
                dp[c - 1][d] = dp[c - 1][d] * d
            if d > B:
                dp[c][d - 1] = dp[c][d - 1] + dp[c][d - 1] * c
            if c > A and d > B:
                dp[c - 1][d - 1] = dp[c - 1][d - 1] - dp[c - 1][d - 1] * (c - 1) * (d - 1)
            dp[c][d] = (dp[c][d] + MOD) % MOD
    print(dp[C][D])

if __name__ == ""__main__"":
    A, B, C, D = map(int, input().split())
    solve(A, B, C, D)"
CodeGen,avatar,Java,Python,atcoder_ABC155_E.py,"def main(args):
    sc = Scanner(sys.stdin)
    number = sc.next()
    digits = [int(number[i])-int('0') for i in range(len(number))]
    bills = 0
    for i in range(len(digits)):
        if digits[i] == 10:
            digits[i+1] += 1
            digits[i] = 0
        if digits[i] < 5:
            bills += digits[i]
        elif digits[i] == 5:
            if digits[i+1] >= 5:
                digits[i+1] += 1
            bills += 5
        else:
            digits[i+1] += 1
            bills += 10 - digits[i]
    print(bills)","def main():
    number = input().strip()
    digits = [int(d) for d in number[::-1]]
    digits.append(0)
    bills = 0
    for i in range(len(number) + 1):
        if digits[i] == 10:
            digits[i+1] += 1
            digits[i] = 0
        if digits[i] < 5:
            bills += digits[i]
        elif digits[i] == 5:
            if digits[i+1] >= 5:
                digits[i+1] += 1
            bills += 5
        else:
            digits[i+1] += 1
            bills += 10 - digits[i]
    print(bills)
    
main()"
CodeGen,avatar,Java,Python,atcoder_ARC086_B.py,"def main(n):
    s = input()
    a = [int(i) for i in s.split()]
    r = []
    m = 0
    for i in range(1, n):
        if abs(a[m]) < abs(a[i]):
            m = i
    for i in range(0, n):
        if a[m] >= 0 ^ a[i] >= 0:
            r.append(m + 1 + "" "" + (i + 1))
    if a[m] >= 0:
        for i in range(1, n):
            r.append(i + "" "" + (i + 1))
    else:
        for i in range(n, 1, -1):
            r.append(i + "" "" + (i - 1))
    print(len(r))
    r.sort()
    r.forEach(print)","def main(n):
    s = input()
    a = [int(i) for i in s.split()]
    r = []
    m = 0
    for i in range(1, n):
        if abs(a[m]) < abs(a[i]):
            m = i
    for i in range(0, n):
        if a[m] >= 0 ^ a[i] >= 0:
            r.append(m + 1 + "" "" + (i + 1))
    if a[m] >= 0:
        for i in range(1, n):
            r.append(i + "" "" + (i + 1))
    else:
        for i in range(n, 1, -1):
            r.append(i + "" "" + (i - 1))
    print(len(r))
    r.sort()
    r.forEach(print)"
CodeGen,avatar,Java,Python,atcoder_ABC136_B.py,"def main(N):
    count = 0
    temp = N
    ans = 0
    while temp > 0:
        temp //= 10
        count += 1
    for i in range(1, count + 1):
        if i == count:
            if i % 2 == 1:
                ans += (N - (10 ** (i - 1)) + 1)
        else:
            if i == 1:
                ans += 9
            else:
                if i % 2 == 1:
                    ans += (10 ** i - 10 ** (i - 1))
    print(ans)

# Note:
#
# 1. N is an integer.
# 2. The given input is guaranteed to fit within the range of a 32-bit signed integer.
# 3. The given input is guaranteed to be at least 1.
# 4. The given input is guaranteed to be at most 10.
# 5. The given input is guaranteed to be at least 2.
# 6. The given input is guaranteed to be at most 9.
# 7. The given input is guaranteed to be at least 1.
# 8. The given input is guaranteed to be at most 10.
# 9. The given input is guaranteed to be at least 2.
# 10. The given input is guaranteed to be at most 9.
# 11. The given input is guaranteed to be at least 1.
# 12. The given input is guaranteed to be at most 10.
# 13. The given input is guaranteed to be at least 2.
# 14. The given input is guaranteed to be at most 9.
# 15. The given input is guaranteed to be at least 1.
# 16. The given input is guaranteed to be at most 10.
# 17. The given input is guaranteed to be at least 2.
# 18. The given input is guaranteed to be at most 9.
# 19. The given input is guaranteed to be at least 1.
# 20. The given input is guaranteed to be at most 10.
# 21. The given input is guaranteed to be at least 2.
# 22. The given input is guaranteed to be at most 9.
# 23. The given input is guaranteed to be at least 1.
# 24. The given input is guaranteed to be at most 10.
# 25. The given input is guaranteed to be at least 2.
# 26. The given input is guaranteed to be at most 9.
# 27. The given input is guaranteed to be at least 1.
# 28. The given input is guaranteed to be at most 10.
# 29. The given input is guaranteed to be at least 2.
# 30. The given input is guaranteed to be at most 9.
# 31. The given input is guaranteed to be at least 1.
# 32. The given input is guaranteed to be at most 10.
# 33. The given input is guaranteed to be at least 2.
# 34. The given input is guaranteed to be at most 9.
# 35. The given input is guaranteed to be at least 1.
# 36. The given input is guaranteed to be at most 10.
# 37. The given input is guaranteed to be at least 2.
# 38. The given input is guaranteed to be at most 9.
# 39. The given input is guaranteed to be at least 1.
# 40. The given input is guaranteed to be at most 10.
# 41. The given input is guaranteed to be at least 2.
# 42. The given input is guaranteed to be at most 9.
# 43. The given input is guaranteed to be at least 1.
# 44. The given input is guaranteed to be at most 10.
# 45. The given input is guaranteed to be at least 2.
# 46. The given input is guaranteed to be at most 9.
# 47. The given input is guaranteed to be at least 1.
# 48. The given input is guaranteed to be at most 10.
# 49. The given input is guaranteed to be at least 2.
# 50. The given input is guaranteed to be at most 9.
# 51. The given input is guaranteed to be at least 1.
# 52. The given input is guaranteed to be at most 10.
# 53. The given input is guaranteed to be at least 2.
# 54. The given input is guaranteed to be at most 9.
# 55. The given input is guaranteed to be at least 1.
# 56. The given input is guaranteed to be at most 10.
# 57. The given input is guaranteed to be at least 2.
# 58. The given input is guaranteed to be at most 9.
# 59. The given input is guaranteed to be at least 1.
# 60. The given input is guaranteed to be at most 10.
# 61. The given input is guaranteed to be at least 2.
# 62. The given input is guaranteed to be at most 9.
# 63. The given input is guaranteed to be at least 1.
# 64. The given input is guaranteed to be at most 10.
# 65. The given input is guaranteed to be at least 2.
# 66. The given input is guaranteed to be at most 9.
# 67. The given input is guaranteed to be at least 1.
# 68. The given input is guaranteed to be at most 10.
# 69. The given input is guaranteed to be at least 2.
# 70. The given input is guaranteed to be at most 9.
# 71. The given input is guaranteed to be at least 1.
# 72. The given input is guaranteed to be at most 10.
# 73. The given input is guaranteed to be at least 2.
# 74. The given input is guaranteed to be at most 9.
# 75. The given input is guaranteed to be at least 1.
# 76. The given input is guaranteed to be at most 10.
# 77. The given input is guaranteed to be at least 2.
# 78. The given input is guaranteed to be at most 9.
# 79. The given input is guaranteed to be at least 1.
# 80. The given input is guaranteed to be at most 10.
# 81. The given input is guaranteed to be at least 2.
# 82. The given input is guaranteed to be at most 9.
# 83. The given input is guaranteed to be at least 1.
# 84. The given input is guaranteed to be at most 10.
# 85. The given input is guaranteed to be at least 2.
# 86. The given input is guaranteed to be at most 9.
# 87. The given input is guaranteed to be at least 1.
# 88. The given input is guaranteed to be at most 10.
# 89. The given input is guaranteed to be at least 2.
# 90. The given input is guaranteed to be at most 9.
# 91. The given input is guaranteed to be at least 1.
# 92. The given input is guaranteed to be at most 10.
# 93. The given input is guaranteed to be at least 2.
# 94. The given input is guaranteed to be at most 9.
# 95. The given input is guaranteed to be at least 1.
# 96. The given input is guaranteed to be at most 10.
# 97. The given input is guaranteed to be at least 2.
# 98. The given input is guaranteed to be at most 9.
# 99. The given input is guaranteed to be at least 1.
# 100. The given input is guaranteed to be at most 10.
# 101. The given input is guaranteed to be at least 2.
# 102. The given input is guaranteed to be at most 9.
# 103. The given input is guaranteed to be at least 1.
# 104. The given input is guaranteed to be at most 10.
# 105. The given input is guaranteed to be at least 2.
# 106. The given input is guaranteed to be at most 9.
# 107. The given input is guaranteed to be at least 1.
# 108. The given input is guaranteed to be at most 10.
# 109. The given input is guaranteed to be at least 2.
# 110. The given input is guaranteed to be at most 9.
# 111. The given input is guaranteed to be at least 1.
# 112. The given input is guaranteed to be at most 10.","def main():
    N = int(input())
    count = 0
    temp = N
    ans = 0
    while temp > 0:
        temp //= 10
        count += 1
    for i in range(1, count + 1):
        if i == count:
            if i % 2 == 1:
                ans += (N - (10 ** (i - 1)) + 1)
        else:
            if i == 1:
                ans += 9
            else:
                if i % 2 == 1:
                    ans += (10 ** i - 10 ** (i - 1))
    print(ans)

main()"
CodeGen,avatar,Java,Python,atcoder_AGC027_A.py,"def main(args):
    sc = Scanner(sys.stdin)
    N = sc.next()
    x = sc.next()
    sweet = []
    for i in range(N):
        a = sc.next()
        sweet.append(a)
    sweet.sort()
    num = 0
    for i in range(N):
        if x - sweet[num] >= 0:
            x = x - sweet[num]
            num += 1
        else:
            break
    if num == N and x > 0:
        num -= 1
    print(num)

# Note:
#
# The above solution is correct, but it is not efficient.
#
# The problem is that the sweet array is sorted in ascending order.
#
# If we want to find the minimum number of sweet candies, we can use binary search.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The sweet array is sorted in ascending order.
#
# We can use binary search to find the minimum number of sweet candies in the sweet array.
#
# The idea is to find the minimum number of sweet candies in the sweet array.
#
# The","def main():
    N, x = map(int, input().split())
    sweet = list(map(int, input().split()))
    sweet.sort()
    num = 0
    for i in range(N):
        if x - sweet[num] >= 0:
            x = x - sweet[num]
            num += 1
        else:
            break
    if num == N and x > 0:
        num -= 1
    print(num)
    
main()"
CodeGen,avatar,Java,Python,codeforces_70_B.py,"def main(args):
    n = int(input())
    input = input()
    max = -1
    msgLength = [0] * len(input) / 2
    count = 0
    idx = 0
    for i in range(len(input)):
        c = input[i]
        if c == '.' or c == '?' or c == '!':
            msgLength[idx] = count
            count = 0
            idx += 1
        else:
            count += 1
    if max > n:
        print(""Impossible"")
    else:
        ans = 0
        for i in range(idx):
            l = msgLength[i]
            while i < idx - 1 and l + msgLength[i + 1] + 1 <= n:
                l += msgLength[i + 1] + 1
                i += 1
            ans += 1
        print(ans)","def main(args):
    n = int(input())
    input = input()
    max = -1
    msgLength = [0] * len(input) / 2
    count = 0
    idx = 0
    for i in range(len(input)):
        c = input[i]
        if c == '.' or c == '?' or c == '!':
            msgLength[idx] = count
            count = 0
            idx += 1
        else:
            count += 1
    if max > n:
        print(""Impossible"")
    else:
        ans = 0
        for i in range(idx):
            l = msgLength[i]
            while i < idx - 1 and l + msgLength[i + 1] + 1 <= n:
                l += msgLength[i + 1] + 1
                i += 1
            ans += 1
        print(ans)"
CodeGen,avatar,Java,Python,atcoder_ABC158_B.py,"def main(args):
    N = int(input())
    A = int(input())
    B = int(input())
    k = 0
    if 1 <= N and N <= 10**18 and 0 <= A and 0 <= B and 0 < A + B and A + B <= 10**18:
        if A + B <= N:
            k = N / (A + B)
            if N - k * (A + B) > A:
                print(A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)))
            else:
                print(A * k + (N - k * (A + B)))
        elif A + B > N and A <= N:
            print(A)
        else:
            print(N)

# Note:
# 1 <= N <= 10^18
# 0 <= A <= 10^18
# 0 <= B <= 10^18
# 0 < A + B <= 10^18
# A + B <= N
# A <= N
# N <= 10^18

# Input:
# 5
# 2
# 3
# 2
# 3
# 3
#
# Output:
# 2
# 2
# 2
# 2
# 2
#
# Explanation:
# N = 5, A = 2, B = 3, k = 2
# N - k * (A + B) = 2 - 2 * 2 = 0
# N - (k * (A + B) + A) = 5 - 2 * 2 = 2
# N - (N - (k * (A + B) + A)) = 5 - 2 - 2 = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 - 2) - (5 - 2 - 2) = 0
# A * k + (N - k * (A + B)) = 2 * 2 + (5 - 2 - 2) = 2
# A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)) = 2 * 2 + (5 - 2 -","def main():
    N, A, B = map(int, input().split())
    k = 0
    if 1 <= N and N <= 10**18 and 0 <= A and 0 <= B and 0 < A + B and A + B <= 10**18:
        if A + B <= N:
            k = N // (A + B)
            if N - k * (A + B) > A:
                print(A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)))
            else:
                print(A * k + (N - k * (A + B)))
        elif A + B > N and A <= N:
            print(A)
        else:
            print(N)

main()"
CodeGen,avatar,Java,Python,codeforces_354_A.py,"def main(N, L, R, QL, QR):
    inp = input()
    W = [int(x) for x in inp.split()]
    sum = [0] * (N + 1)
    for n in range(N):
        sum[n + 1] = sum[n] + W[n]
    min = 2 ** 64 - 1
    for firstR in range(0, N + 1):
        lCount = firstR
        rCount = N - lCount
        cand = sum[lCount] * L + (sum[N] - sum[lCount]) * R
        llCount = max(0, lCount - rCount - 1)
        rrCount = max(0, rCount - lCount - 1)
        cand += llCount * QL
        cand += rrCount * QR
        min = min(cand, min)
    print(min)

# Note:
# 1. Python does not have a long type.
# 2. Python has a max() function that returns the maximum value in a list.
# 3. Python has a min() function that returns the minimum value in a list.
# 4. Python has a int() function that converts a string to an integer.
# 5. Python has a int() function that converts a string to an integer.
# 6. Python has a int() function that converts a string to an integer.
# 7. Python has a int() function that converts a string to an integer.
# 8. Python has a int() function that converts a string to an integer.
# 9. Python has a int() function that converts a string to an integer.
# 10. Python has a int() function that converts a string to an integer.
# 11. Python has a int() function that converts a string to an integer.
# 12. Python has a int() function that converts a string to an integer.
# 13. Python has a int() function that converts a string to an integer.
# 14. Python has a int() function that converts a string to an integer.
# 15. Python has a int() function that converts a string to an integer.
# 16. Python has a int() function that converts a string to an integer.
# 17. Python has a int() function that converts a string to an integer.
# 18. Python has a int() function that converts a string to an integer.
# 19. Python has a int() function that converts a string to an integer.
# 20. Python has a int() function that converts a string to an integer.
# 21. Python has a int() function that converts a string to an integer.
# 22. Python has a int() function that converts a string to an integer.
# 23. Python has a int() function that converts a string to an integer.
# 24. Python has a int() function that converts a string to an integer.
# 25. Python has a int() function that converts a string to an integer.
# 26. Python has a int() function that converts a string to an integer.
# 27. Python has a int() function that converts a string to an integer.
# 28. Python has a int() function that converts a string to an integer.
# 29. Python has a int() function that converts a string to an integer.
# 30. Python has a int() function that converts a string to an integer.
# 31. Python has a int() function that converts a string to an integer.
# 32. Python has a int() function that converts a string to an integer.
# 33. Python has a int() function that converts a string to an integer.
# 34. Python has a int() function that converts a string to an integer.
# 35. Python has a int() function that converts a string to an integer.
# 36. Python has a int() function that converts a string to an integer.
# 37. Python has a int() function that converts a string to an integer.
# 38. Python has a int() function that converts a string to an integer.
# 39. Python has a int() function that converts a string to an integer.
# 40. Python has a int() function that converts a string to an integer.
# 41. Python has a int() function that converts a string to an integer.
# 42. Python has a int() function that converts a string to an integer.
# 43. Python has a int() function that converts a string to an integer.
# 44. Python has a int() function that converts a string to an integer.
# 45. Python has a int() function that converts a string to an integer.
# 46. Python has a int() function that converts a string to an integer.
# 47. Python has a int() function that converts a string to an integer.
# 48. Python has a int() function that converts a string to an integer.
# 49. Python has a int() function that converts a string to an integer.
# 50. Python has a int() function that converts a string to an integer.
# 51. Python has a int() function that converts a string to an integer.
# 52. Python has a int() function that converts a string to an integer.
# 53. Python has a int() function that converts a string to an integer.
# 54. Python has a int() function that converts a string to an integer.
# 55. Python has a int() function that converts a string to an integer.
# 56. Python has a int() function that converts a string to an integer.
# 57. Python has a int() function that converts a string to an integer.
# 58. Python has a int() function that converts a string to an integer.
# 59. Python has a int() function that converts a string to an integer.
# 60. Python has a int() function that converts a string to an integer.
# 61. Python has a int() function that converts a string to an integer.
# 62. Python has a int() function that converts a string to an integer.
# 63. Python has a int() function that converts a string to an integer.
# 64. Python has a int() function that converts a string to an integer.
# 65. Python has a int() function that converts a string to an integer.
# 66. Python has a int() function that converts a string to an integer.
# 67. Python has a int() function that converts a string to an integer.
# 68. Python has a int() function that converts a string to an integer.
# 69. Python has a int() function that converts a string to an integer.
# 70. Python has a int() function that converts a string to an integer.
# 71. Python has a int() function that converts a string to an integer.
# 72. Python has a int() function that converts a string to an integer.
# 73. Python has a int() function that converts a string to an integer.
# 74. Python has a int() function that converts a string to an integer.
# 75. Python has a int() function that converts a string to an integer.
# 76. Python has a int() function that converts a string to an integer.
# 77. Python has a int() function that converts a string to an integer.
# 78. Python has a int() function that converts a string to an integer.
# 79. Python has a int() function that converts a string to an integer.
# 80. Python has a int() function that converts a string to an integer.
# 81. Python has a int() function that converts a string to an integer.
# 82. Python has a int() function that converts a string to an integer.
# 83. Python has a int() function that converts a string to an integer.
# 84. Python has a int()","def main():
    N, L, R, QL, QR = map(int, input().split())
    W = list(map(int, input().split()))
    sum = [0] * (N + 1)
    for n in range(N):
        sum[n + 1] = sum[n] + W[n]
    min_val = 2 ** 64 - 1
    for firstR in range(0, N + 1):
        lCount = firstR
        rCount = N - lCount
        cand = sum[lCount] * L + (sum[N] - sum[lCount]) * R
        llCount = max(0, lCount - rCount - 1)
        rrCount = max(0, rCount - lCount - 1)
        cand += llCount * QL
        cand += rrCount * QR
        min_val = min(cand, min_val)
    print(min_val)

main()"
CodeGen,avatar,Java,Python,atcoder_ABC106_C.py,"def main(args):
    sc = Scanner(sys.stdin)
    str = sc.next()
    c = str.toCharArray()
    k = sc.nextLong()
    n = len(str)
    for i in range(k):
        if c[i] == '1':
            if i == k - 1:
                print(1)
                return
        else:
            print(c[i])
            return","def main():
    c = input()
    k = int(input())
    n = len(c)
    for i in range(k):
        if c[i] == '1':
            if i == k - 1:
                print(1)
                return
        else:
            print(c[i])
            return
        
main()"
CodeGen,avatar,Java,Python,atcoder_ABC171_E.py,"def main(args):
    n = int(input())
    a = [int(i) for i in input().split()]
    r = 0
    for i in range(n):
        r ^= a[i]
    for i in range(n):
        if i!= 0:
            print("" "")
            print(r ^ a[i])","def main():
    n = int(input())
    a = [int(i) for i in input().split()]
    r = 0
    for i in range(n):
        r ^= a[i]
    for i in range(n):
        if i!= 0:
            print("" "", end="""")
        print(r ^ a[i], end="""")
            
main()"
CodeGen,avatar,Java,Python,atcoder_ABC132_F.py,"def main(args):
    mod = 1e9 + 7
    sc = Scanner(sys.stdin)
    n = sc.nextInt()
    k = sc.nextInt()
    sc.close()
    len = [1]
    while len[-1] <= n:
        len.append(len[-1] + len[-2])
    q = len[-1]
    dp = [0] * (k * (q + 1))
    for j in range(1, q + 1):
        dp[j] = len[j - 1] + dp[j - 1]
    for i in range(1, k):
        for j in range(1, q + 1):
            dp[i * (q + 1) + j] = dp[i * (q + 1) + j - 1] + dp[(i - 1) * (q + 1) + q - j + 1] * len[j - 1]
            dp[i * (q + 1) + j] %= mod
    print(dp[k * (q + 1) - 1])","def main():
    mod = int(1e9 + 7)
    n, k = map(int, input().split())
    len = [1]
    while len[-1] <= n:
        len.append(len[-1] + len[-2])
    q = len[-1]
    dp = [0] * (k * (q + 1))
    for j in range(1, q + 1):
        dp[j] = len[j - 1] + dp[j - 1]
    for i in range(1, k):
        for j in range(1, q + 1):
            dp[i * (q + 1) + j] = dp[i * (q + 1) + j - 1] + dp[(i - 1) * (q + 1) + q - j + 1] * len[j - 1]
            dp[i * (q + 1) + j] %= mod
    print(dp[k * (q + 1) - 1])

main()"
CodeGen,avatar,Java,Python,codeforces_131_B.py,"def main():
    scan = Scanner(sys.stdin)
    n = scan.next()
    N = (int)(1e5 + 5)
    cnt = [0] * (N + 1)
    for i in range(n):
        cnt[scan.next() + 10] += 1
    res = 0
    for i in range(10):
        res += cnt[i] * cnt[N - i]
    res += (cnt[10] * (cnt[10] - 1)) / 2
    print(res)","def main():
    n = int(input())
    N = (int)(1e5 + 5)
    cnt = [0] * (N + 1)
    inputs = list(input().split())
    for i in range(n):
        cnt[int(inputs[i]) + 10] += 1
    res = 0
    for i in range(10):
        res += cnt[i] * cnt[20 - i]
    res += (cnt[10] * (cnt[10] - 1)) // 2
    print(res)
    
main()"
CodeGen,avatar,Java,Python,atcoder_AGC028_B.py,"def modinv(a, m):
    b = m
    u = 1
    v = 0
    tmp = 0
    while b > 0:
        t = a // b
        a -= t * b
        tmp = a
        a = b
        b = tmp
        u -= t * v
        tmp = u
        u = v
        v = tmp
    u %= m
    if u < 0:
        u += m
    return u

def atcoder_AGC028_B(n):
    sa = input().split()
    a = [int(i) for i in sa]
    mod = 1000000007
    p = 1
    for i in range(2, n+1):
        p = p * i % mod
    q = [1]
    for i in range(1, n):
        q.append((q[i-1] + modinv(i+1, mod)) % mod)
    ans = 0
    for i in range(0, n):
        val = q[i] + q[n-i-1] - 1
        val *= a[i]
        val %= mod
        val *= p
        val %= mod
        ans += val
        ans %= mod
    print(ans)","def modinv(a, m):
    b = m
    u = 1
    v = 0
    tmp = 0
    while b > 0:
        t = a // b
        a -= t * b
        tmp = a
        a = b
        b = tmp
        u -= t * v
        tmp = u
        u = v
        v = tmp
    u %= m
    if u < 0:
        u += m
    return u

def atcoder_AGC028_B():
    n = int(input())
    a = list(map(int, input().split()))
    mod = 1000000007
    p = 1
    for i in range(2, n+1):
        p = p * i % mod
    q = [1]
    for i in range(1, n):
        q.append((q[i-1] + modinv(i+1, mod)) % mod)
    ans = 0
    for i in range(0, n):
        val = q[i] + q[n-i-1] - 1
        val *= a[i]
        val %= mod
        val *= p
        val %= mod
        ans += val
        ans %= mod
    print(ans)

atcoder_AGC028_B()"
CodeGen,avatar,Java,Python,codeforces_459_B.py,"import sys
import math

def main ():
    N = int(input())
    A = [int(i) for i in input().split()]
    A.sort()
    min = A[0]
    max = A[N-1]
    mins = 0
    maxs = 0
    for value in A:
        if value == min:
            mins += 1
        if value == max:
            maxs += 1
    if min == max:
        print(max - min, mins * (mins - 1) / 2)
    else:
        print(max - min, mins * maxs)

if __name__ == ""__main__"":
    sys.exit(main())","import sys
import math

def main ():
    N = int(input())
    A = [int(i) for i in input().split()]
    A.sort()
    min = A[0]
    max = A[N-1]
    mins = 0
    maxs = 0
    for value in A:
        if value == min:
            mins += 1
        if value == max:
            maxs += 1
    if min == max:
        print(max - min, mins * (mins - 1) // 2)
    else:
        print(max - min, mins * maxs)

if __name__ == ""__main__"":
    sys.exit(main())"
CodeGen,avatar,Java,Python,atcoder_ABC118_C.py,"def main(args):
    n = int(input())
    a = [int(i) for i in input().split()]
    a.sort()
    if a[-1] == 0:
        print(0)
        exit(0)
    while True:
        if a[-1] == 1:
            print(1)
            exit(0)
        a = func(a)
        if len(a) == 1:
            print(a[0])
            exit(0)

def func(a):
    a.sort()
    min = 0
    for i in range(len(a)):
        if a[i] == 0:
            a.pop(i)
            i -= 1
        else:
            if min!= 0:
                a[i] %= min
            else:
                min = a[i]
    a.sort()
    return a

# Note:
#
# The input is guaranteed to be valid.
#
# The input is guaranteed to be in the range [1, 10^9].
#
# The output is guaranteed to be exactly one of the above.
#
# The time limit is in seconds.
#
# There is only one test case.
#
# Follow up:
# Can you do it in O(n log n) time?
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#","def main():
    n = int(input())
    a = [int(i) for i in input().split()]
    a.sort()
    if a[-1] == 0:
        print(0)
        exit(0)
    while True:
        if a[-1] == 1:
            print(1)
            exit(0)
        a = func(a)
        if len(a) == 1:
            print(a[0])
            exit(0)

def func(a):
    a.sort()
    min = 0
    for i in range(len(a)):
        if a[i] == 0:
            a.pop(i)
            i -= 1
        else:
            if min!= 0:
                a[i] %= min
            else:
                min = a[i]
    a.sort()
    return a

main()"
CodeGen,avatar,Java,Python,atcoder_ABC137_D.py,"class Job(object):
    def __init__(self, a, b):
        self.a = a
        self.b = b
    def __cmp__(self, other):
        if self.a == other.a:
            return self.b - other.b
        else:
            return self.a - other.a

def main():
    sc = Scanner()
    line = sc.nextLine().split('\u2581')
    N = int(line[0])
    M = int(line[1])
    q = []
    for i in range(N):
        line = sc.nextLine().split('\u2581')
        q.append(Job(int(line[0]), int(line[1])))
    cnt = 0
    jobQ = []
    for i in range(1, M+1):
        while len(q) > 0:
            job = q[0]
            if job.a <= i:
                jobQ.append(job.b)
                del q[0]
            else:
                break
        if len(jobQ) > 0:
            cnt += jobQ.pop()
    print(cnt)

# Note:
# 1. The order of jobs in the queue is not important.
# 2. The jobs in the queue are sorted by their a value.
# 3. The jobs in the queue are sorted by their b value.
# 4. The jobs in the queue are sorted by their a value.
# 5. The jobs in the queue are sorted by their b value.
# 6. The jobs in the queue are sorted by their a value.
# 7. The jobs in the queue are sorted by their b value.
# 8. The jobs in the queue are sorted by their a value.
# 9. The jobs in the queue are sorted by their b value.
# 10. The jobs in the queue are sorted by their a value.
# 11. The jobs in the queue are sorted by their b value.
# 12. The jobs in the queue are sorted by their a value.
# 13. The jobs in the queue are sorted by their b value.
# 14. The jobs in the queue are sorted by their a value.
# 15. The jobs in the queue are sorted by their b value.
# 16. The jobs in the queue are sorted by their a value.
# 17. The jobs in the queue are sorted by their b value.
# 18. The jobs in the queue are sorted by their a value.
# 19. The jobs in the queue are sorted by their b value.
# 20. The jobs in the queue are sorted by their a value.
# 21. The jobs in the queue are sorted by their b value.
# 22. The jobs in the queue are sorted by their a value.
# 23. The jobs in the queue are sorted by their b value.
# 24. The jobs in the queue are sorted by their a value.
# 25. The jobs in the queue are sorted by their b value.
# 26. The jobs in the queue are sorted by their a value.
# 27. The jobs in the queue are sorted by their b value.
# 28. The jobs in the queue are sorted by their a value.
# 29. The jobs in the queue are sorted by their b value.
# 30. The jobs in the queue are sorted by their a value.
# 31. The jobs in the queue are sorted by their b value.
# 32. The jobs in the queue are sorted by their a value.
# 33. The jobs in the queue are sorted by their b value.
# 34. The jobs in the queue are sorted by their a value.
# 35. The jobs in the queue are sorted by their b value.
# 36. The jobs in the queue are sorted by their a value.
# 37. The jobs in the queue are sorted by their b value.
# 38. The jobs in the queue are sorted by their a value.
# 39. The jobs in the queue are sorted by their b value.
# 40. The jobs in the queue are sorted by their a value.
# 41. The jobs in the queue are sorted by their b value.
# 42. The jobs in the queue are sorted by their a value.
# 43. The jobs in the queue are sorted by their b value.
# 44. The jobs in the queue are sorted by their a value.
# 45. The jobs in the queue are sorted by their b value.
# 46. The jobs in the queue are sorted by their a value.
# 47. The jobs in the queue are sorted by their b value.
# 48. The jobs in the queue are sorted by their a value.
# 49. The jobs in the queue are sorted by their b value.
# 50. The jobs in the queue are sorted by their a value.
# 51. The jobs in the queue are sorted by their b value.
# 52. The jobs in the queue are sorted by their a value.
# 53. The jobs in the queue are sorted by their b value.
# 54. The jobs in the queue are sorted by their a value.
# 55. The jobs in the queue are sorted by their b value.
# 56. The jobs in the queue are sorted by their a value.
# 57. The jobs in the queue are sorted by their b value.
# 58. The jobs in the queue are sorted by their a value.
# 59. The jobs in the queue are sorted by their b value.
# 60. The jobs in the queue are sorted by their a value.
# 61. The jobs in the queue are sorted by their b value.
# 62. The jobs in the queue are sorted by their a value.
# 63. The jobs in the queue are sorted by their b value.
# 64. The jobs in the queue are sorted by their a value.
# 65. The jobs in the queue are sorted by their b value.
# 66. The jobs in the queue are sorted by their a value.
# 67. The jobs in the queue are sorted by their b value.
# 68. The jobs in the queue are sorted by their a value.
# 69. The jobs in the queue are sorted by their b value.
# 70. The jobs in the queue are sorted by their a value.
# 71. The jobs in the queue are sorted by their b value.
# 72. The jobs in the queue are sorted by their a value.
# 73. The jobs in the queue are sorted by their b value.
# 74. The jobs in the queue are sorted by their a value.
# 75. The jobs in the queue are sorted by their b value.
# 76. The jobs in the queue are sorted by their a value.
# 77. The jobs in the queue are sorted by their b value.
# 78. The jobs in the queue are sorted by their a value.
# 79. The jobs in the queue are sorted by their b value.
# 80. The jobs in the queue are sorted by their a value.
# 81. The jobs in the queue are sorted by their b value.
# 82. The jobs in the queue are sorted by their a value.
# 83. The jobs in the queue are sorted by their b value.
# 84. The","class Job(object):
    def __init__(self, a, b):
        self.a = a
        self.b = b
    def __cmp__(self, other):
        if self.a == other.a:
            return self.b - other.b
        else:
            return self.a - other.a

def main():
    sc = Scanner()
    line = sc.nextLine().split('\u2581')
    N = int(line[0])
    M = int(line[1])
    q = []
    for i in range(N):
        line = sc.nextLine().split('\u2581')
        q.append(Job(int(line[0]), int(line[1])))
    cnt = 0
    jobQ = []
    for i in range(1, M+1):
        while len(q) > 0:
            job = q[0]
            if job.a <= i:
                jobQ.append(job.b)
                del q[0]
            else:
                break
        if len(jobQ) > 0:
            cnt += jobQ.pop()
    print(cnt)
    
main()"
CodeGen,avatar,Java,Python,codeforces_351_A.py,"def main(args):
    n = int(input())
    st = input()
    arr = [float(x) for x in st.split()]
    non_int = 0
    sum_before = 0
    sum = 0
    for i in range(2 * n):
        num = float(st.next())
        sum_before += num
        if num!= int(num):
            non_int += 1
        sum += int(num)
        arr[i] = num
    max_sum = min(n, non_int) + sum
    min_sum = max(0, non_int - n) + sum
    ans = min(1 - sum_before, sum_before - max_sum)
    print(""%.3f"" % ans)","def main():
    n = int(input())
    arr = [float(x) for x in input().split()]
    non_int = 0
    sum_before = 0
    sum = 0
    for i in range(2 * n):
        num = float(input())
        sum_before += num
        if num!= int(num):
            non_int += 1
        sum += int(num)
        arr[i] = num
    max_sum = min(n, non_int) + sum
    min_sum = max(0, non_int - n) + sum
    ans = min(1 - sum_before, sum_before - max_sum)
    print(""%.3f"" % ans)

main()"
CodeGen,avatar,Java,Python,codeforces_282_B.py,"def main(argv):
    sc = input()
    n = sc.next()
    ch = [chr(i) for i in range(ord('A'), ord('Z')+1)]
    s1 = 0
    s2 = 0
    i = 0
    j = 0
    flag = 0
    dif = 0
    for i in range(n):
        x = sc.next()
        y = sc.next()
        temp1 = s1 + x
        temp2 = s2 + y
        if abs(temp1 - s2) <= 500:
            s1 += x
            ch[j] = 'A'
            j += 1
            continue
        if abs(temp2 - s1) <= 500:
            s2 += y
            ch[j] = 'G'
            j += 1
            continue
        flag = 1
        break
    if flag == 1:
        print(-1)
    else:
        ans = """"
        ans = ans.join(ch)
        print(ans)","def main():
    n = int(input())
    ch = [''] * n
    s1 = 0
    s2 = 0
    i = 0
    j = 0
    flag = 0
    dif = 0
    for i in range(n):
        x, y = map(int, input().split())
        temp1 = s1 + x
        temp2 = s2 + y
        if abs(temp1 - s2) <= 500:
            s1 += x
            ch[j] = 'A'
            j += 1
            continue
        if abs(temp2 - s1) <= 500:
            s2 += y
            ch[j] = 'G'
            j += 1
            continue
        flag = 1
        break
    if flag == 1:
        print(-1)
    else:
        ans = """"
        ans = ans.join(ch)
        print(ans)
        
main()"
CodeGen,avatar,Java,Python,codeforces_55_A.py,"def main():
    n = int(input())
    a = [0] * 1000
    k = 0
    i = 1
    while k <= n:
        i += k
        if i >= n:
            while not (i < n):
                i = i - n
            a[i] += 1
            k += 1
    for i in range(n):
        if a[i] == 0:
            flag = False
            break
    if flag:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()","def main():
    n = int(input())
    a = [0] * 1000
    k = 0
    i = 1
    flag = True
    while k <= n:
        i += k
        if i >= n:
            while not (i < n):
                i = i - n
        a[i] += 1
        k += 1
    for i in range(n):
        if a[i] == 0:
            flag = False
            break
    if flag:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Python,Java,s060251920.java,"public class s060251920 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        System.out.println(a * b);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        System.out.println(a * b);
    }
}"
ChatGPT,codenet,Python,Java,s575946485.java,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class s575946485 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] a = new int[5];
        for (int i = 0; i < 5; i++) {
            a[i] = scanner.nextInt();
        }

        Map<Integer, Integer> dic = new HashMap<>();
        for (int i = 0; i < 5; i++) {
            if (String.valueOf(a[i]).charAt(String.valueOf(a[i]).length() - 1) == '0') {
                dic.put(i, 0);
            } else {
                dic.put(i, Integer.parseInt(String.valueOf(a[i]).charAt(String.valueOf(a[i]).length() - 1)) - 10);
            }
        }

        int minNum = 0;
        int minValue = Integer.MAX_VALUE;
        for (Map.Entry<Integer, Integer> entry : dic.entrySet()) {
            if (entry.getValue() < minValue) {
                minNum = entry.getKey();
                minValue = entry.getValue();
            }
        }

        int aSum = 0;
        for (int num : a) {
            aSum += num;
        }

        dic.remove(minNum);
        int sumDicValues = 0;
        for (int value : dic.values()) {
            sumDicValues += value;
        }

        System.out.println(Math.abs(sumDicValues) + aSum);
    }
}","import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] a = new int[5];
        for (int i = 0; i < 5; i++) {
            a[i] = scanner.nextInt();
        }

        Map<Integer, Integer> dic = new HashMap<>();
        for (int i = 0; i < 5; i++) {
            if (String.valueOf(a[i]).charAt(String.valueOf(a[i]).length() - 1) == '0') {
                dic.put(i, 0);
            } else {
                dic.put(i, Integer.parseInt(String.valueOf(a[i]).charAt(String.valueOf(a[i]).length() - 1)) - 10);
            }
        }

        int minNum = 0;
        int minValue = Integer.MAX_VALUE;
        for (Map.Entry<Integer, Integer> entry : dic.entrySet()) {
            if (entry.getValue() < minValue) {
                minNum = entry.getKey();
                minValue = entry.getValue();
            }
        }

        int aSum = 0;
        for (int num : a) {
            aSum += num;
        }

        dic.remove(minNum);
        int sumDicValues = 0;
        for (int value : dic.values()) {
            sumDicValues += value;
        }

        System.out.println(Math.abs(sumDicValues) + aSum);
    }
}"
ChatGPT,codenet,Python,Java,s554858080.java,"String[] input = new Scanner(System.in).nextLine().split("" "");
String num = String.join("""", input);

if(Integer.parseInt(num) % 4 == 0) {
    System.out.println(""YES"");
} else {
    System.out.println(""NO"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        String[] input = new Scanner(System.in).nextLine().split("" "");
        String num = String.join("""", input);
        
        if(Integer.parseInt(num) % 4 == 0) {
            System.out.println(""YES"");
        } else {
            System.out.println(""NO"");
        }
    }
}"
ChatGPT,codenet,Python,Java,s462546732.java,"int a = Integer.parseInt(input.split("" "")[0]);
int b = Integer.parseInt(input.split("" "")[1]);
if (a <= b) {
    System.out.println(a);
} else {
    System.out.println(a-1);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        if (a <= b) {
            System.out.println(a);
        } else {
            System.out.println(a-1);
        }
    }
}"
ChatGPT,codenet,Python,Java,s246930871.java,"int N, A, B;
Scanner scanner = new Scanner(System.in);
N = scanner.nextInt();
A = scanner.nextInt();
B = scanner.nextInt();
int ans = A * (N/(A+B)) + Math.min(A, N%(A+B));
System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int N, A, B;
        Scanner scanner = new Scanner(System.in);
        N = scanner.nextInt();
        A = scanner.nextInt();
        B = scanner.nextInt();
        int ans = A * (N/(A+B)) + Math.min(A, N%(A+B));
        System.out.println(ans);  
    }
}"
ChatGPT,codenet,Python,Java,s267172486.java,"int h = Integer.parseInt(input().trim());
int a = Integer.parseInt(input().trim());

int ans = h / a;
int ama = h % a;

if (ama != 0) {
  ans += 1;
}
System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int h = scanner.nextInt();
        int a = scanner.nextInt();
        
        int ans = h / a;
        int ama = h % a;
        
        if (ama != 0) {
          ans += 1;
        }
        System.out.println(ans);
    }
}"
ChatGPT,codenet,Python,Java,s951065247.java,"public class s951065247 {
    static int N, A, B, C;
    static int[] l;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        N = scanner.nextInt();
        A = scanner.nextInt();
        B = scanner.nextInt();
        C = scanner.nextInt();
        
        l = new int[N];
        for (int i = 0; i < N; i++) {
            l[i] = scanner.nextInt();
        }
        
        System.out.println(dfs(0, 0, 0, 0));
    }
    
    public static int dfs(int cur, int a, int b, int c) {
        if (cur == N) {
            return Math.abs(A - a) + Math.abs(B - b) + Math.abs(C - c) - 30;
        }
        
        int no_add = dfs(cur + 1, a, b, c);
        int add_a = dfs(cur + 1, a + l[cur], b, c) + 10;
        int add_b = dfs(cur + 1, a, b + l[cur], c) + 10;
        int add_c = dfs(cur + 1, a, b, c + l[cur]) + 10;

        return Math.min(no_add, Math.min(add_a, Math.min(add_b, add_c)));
    }
}","import java.util.*;

public class Main {
    static int N, A, B, C;
    static int[] l;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        N = scanner.nextInt();
        A = scanner.nextInt();
        B = scanner.nextInt();
        C = scanner.nextInt();
        
        l = new int[N];
        for (int i = 0; i < N; i++) {
            l[i] = scanner.nextInt();
        }
        
        System.out.println(dfs(0, 0, 0, 0));
    }
    
    public static int dfs(int cur, int a, int b, int c) {
        if (cur == N) {
            return Math.abs(A - a) + Math.abs(B - b) + Math.abs(C - c) - 30;
        }
        
        int no_add = dfs(cur + 1, a, b, c);
        int add_a = dfs(cur + 1, a + l[cur], b, c) + 10;
        int add_b = dfs(cur + 1, a, b + l[cur], c) + 10;
        int add_c = dfs(cur + 1, a, b, c + l[cur]) + 10;

        return Math.min(no_add, Math.min(add_a, Math.min(add_b, add_c)));
    }
}"
ChatGPT,codenet,Python,Java,s179314665.java,"int A, B;
Scanner scanner = new Scanner(System.in);
A = scanner.nextInt();
B = scanner.nextInt();
if (A < 10 && B < 10) {
  System.out.println(A*B);
} else {
  System.out.println(-1);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int A, B;
        Scanner scanner = new Scanner(System.in);
        A = scanner.nextInt();
        B = scanner.nextInt();
        if (A < 10 && B < 10) {
          System.out.println(A*B);
        } else {
          System.out.println(-1);
        }
    }
}"
ChatGPT,codenet,Python,Java,s747093551.java,"int N, M, X, Y;
Scanner scanner = new Scanner(System.in);
N = scanner.nextInt();
M = scanner.nextInt();
X = scanner.nextInt();
Y = scanner.nextInt();

int[] x = new int[N];
for (int i = 0; i < N; i++) {
    x[i] = scanner.nextInt();
}

int[] y = new int[M];
for (int i = 0; i < M; i++) {
    y[i] = scanner.nextInt();
}

if (Math.max(Math.max(x), X) < Math.min(Math.min(y), Y)) {
    System.out.println(""No War"");
} else {
    System.out.println(""War"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int N, M, X, Y;
        Scanner scanner = new Scanner(System.in);
        N = scanner.nextInt();
        M = scanner.nextInt();
        X = scanner.nextInt();
        Y = scanner.nextInt();
        
        int[] x = new int[N];
        for (int i = 0; i < N; i++) {
            x[i] = scanner.nextInt();
        }
        
        int[] y = new int[M];
        for (int i = 0; i < M; i++) {
            y[i] = scanner.nextInt();
        }
        
        if (Math.max(max(x), X) < Math.min(min(y), Y)) {
            System.out.println(""No War"");
        } else {
            System.out.println(""War"");
        }  
    }
    public static int max(int[] arr) {
        int maxVal = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > maxVal) {
                maxVal = arr[i];
            }
        }
        return maxVal;
    }
    public static int min(int[] arr) {
        int minVal = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] < minVal) {
                minVal = arr[i];
            }
        }
        return minVal;
    }
}"
ChatGPT,codenet,Python,Java,s542358243.java,"public class s542358243 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();

        if (N % 9 == 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();

        if (N % 9 == 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
ChatGPT,codenet,Python,Java,s225615697.java,"int n = Integer.parseInt(scanner.nextLine());
int[] a = new int[n];
String[] temp = scanner.nextLine().split("" "");
for (int i = 0; i < n; i++) {
    a[i] = Integer.parseInt(temp[i]);
}

int m1 = 0;
for (int i = 0; i < n; i++) {
    m1 += a[i] * (Math.pow(-1, i));
}
m1 /= 2;

String result = Integer.toString(m1);

int[] m = new int[n];
m[0] = m1;
for (int i = 1; i < n; i++) {
    m[i] = a[i-1] - m[i-1];
}

for (int i = 0; i < n; i++) {
    m[i] *= 2;
}

System.out.println(String.join("" "", Arrays.stream(m).mapToObj(Integer::toString).toArray(String[]::new)));","import java.util.stream.IntStream;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        int[] a = new int[n];
        String[] temp = scanner.nextLine().split("" "");
        for (int i = 0; i < n; i++) {
            a[i] = Integer.parseInt(temp[i]);
        }
        
        int m1 = 0;
        for (int i = 0; i < n; i++) {
            m1 += a[i] * (Math.pow(-1, i));
        }
        m1 /= 2;
        
        String result = Integer.toString(m1);
        
        int[] m = new int[n];
        m[0] = m1;
        for (int i = 1; i < n; i++) {
            m[i] = a[i-1] - m[i-1];
        }
        
        for (int i = 0; i < n; i++) {
            m[i] *= 2;
        }
        
        System.out.println(String.join("" "", Arrays.stream(m).mapToObj(Integer::toString).toArray(String[]::new)));
    }
}"
ChatGPT,codenet,Python,Java,s652791025.java,"int n = Integer.parseInt(input);
n = Integer.parseInt(String.valueOf(n).substring(String.valueOf(n).length() - 1));

if (n == 2 || n == 4 || n == 5 || n == 7 || n == 9) {
  System.out.println(""hon"");
} else if (n == 0 || n == 1 || n == 6 || n == 8) {
  System.out.println(""pon"");
} else {
  System.out.println(""bon"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        n = Integer.parseInt(String.valueOf(n).substring(String.valueOf(n).length() - 1));
        
        if (n == 2 || n == 4 || n == 5 || n == 7 || n == 9) {
          System.out.println(""hon"");
        } else if (n == 0 || n == 1 || n == 6 || n == 8) {
          System.out.println(""pon"");
        } else {
          System.out.println(""bon"");
        }
    }
}"
ChatGPT,codenet,Python,Java,s831456551.java,"int A = Integer.parseInt(input.nextLine());
int B = Integer.parseInt(input.nextLine());
System.out.println(A * B);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int A = input.nextInt();
        int B = input.nextInt();
        System.out.println(A * B);
    } 
}"
ChatGPT,codenet,Python,Java,s708549466.java,"int N, x;
Scanner sc = new Scanner(System.in);
N = sc.nextInt();
x = sc.nextInt();
int[] a = new int[N];
for (int i = 0; i < N; i++) {
    a[i] = sc.nextInt();
}
int cnt = 0;
for (int i = 1; i < N; i++) {
    int tmp = a[i - 1] + a[i];
    if (tmp > x) {
        if (tmp - x > a[i]) {
            a[i - 1] = tmp - a[i] - x;
            a[i] = 0;
        } else {
            a[i] = a[i] - (tmp - x);
        }
        cnt += tmp - x;
    }
}
System.out.println(cnt);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int N, x;
        Scanner sc = new Scanner(System.in);
        N = sc.nextInt();
        x = sc.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }
        int cnt = 0;
        for (int i = 1; i < N; i++) {
            int tmp = a[i - 1] + a[i];
            if (tmp > x) {
                if (tmp - x > a[i]) {
                    a[i - 1] = tmp - a[i] - x;
                    a[i] = 0;
                } else {
                    a[i] = a[i] - (tmp - x);
                }
                cnt += tmp - x;
            }
        }
        System.out.println(cnt);
    }
}"
ChatGPT,codenet,Python,Java,s182651529.java,"int N = scanner.nextInt();
int K = scanner.nextInt();
int[] score = new int[N];
for (int i = 0; i < N; i++) {
    score[i] = scanner.nextInt();
}
int mae = 0;
int usiro = K;
for (int i = 0; i < N - K; i++) {
    if (score[mae] < score[usiro]) {
        System.out.println(""Yes"");
    } else {
        System.out.println(""No"");
    }
    mae++;
    usiro++;
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int K = scanner.nextInt();
        int[] score = new int[N];
        for (int i = 0; i < N; i++) {
            score[i] = scanner.nextInt();
        }
        int mae = 0;
        int usiro = K;
        for (int i = 0; i < N - K; i++) {
            if (score[mae] < score[usiro]) {
                System.out.println(""Yes"");
            } else {
                System.out.println(""No"");
            }
            mae++;
            usiro++;
        }
    }
}"
ChatGPT,codenet,Python,Java,s733189960.java,"import java.util.HashMap;
import java.util.Scanner;

public class s733189960 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        HashMap<String, Integer> sdic = new HashMap<String, Integer>();
        for (int i = 0; i < n; i++) {
            String s = scanner.nextLine().trim();
            char[] arr = s.toCharArray();
            Arrays.sort(arr);
            s = new String(arr);
            if (sdic.containsKey(s)) {
                sdic.put(s, sdic.get(s) + 1);
            } else {
                sdic.put(s, 1);
            }
        }
        int ans = 0;
        for (String k : sdic.keySet()) {
            int v = sdic.get(k);
            ans += v * (v - 1) / 2;
        }
        System.out.println(ans);
    }
}","import java.util.HashMap;
import java.util.Scanner;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        HashMap<String, Integer> sdic = new HashMap<String, Integer>();
        for (int i = 0; i < n; i++) {
            String s = scanner.nextLine().trim();
            char[] arr = s.toCharArray();
            Arrays.sort(arr);
            s = new String(arr);
            if (sdic.containsKey(s)) {
                sdic.put(s, sdic.get(s) + 1);
            } else {
                sdic.put(s, 1);
            }
        }
        int ans = 0;
        for (String k : sdic.keySet()) {
            int v = sdic.get(k);
            ans += v * (v - 1) / 2;
        }
        System.out.println(ans);
    }
}"
ChatGPT,codenet,Python,Java,s103029464.java,"int N = Integer.parseInt(scanner.nextLine());
int[] A = new int[N];
int[] B = new int[N];

String[] input = scanner.nextLine().split("" "");
for (int i = 0; i < N; i++) {
    A[i] = Integer.parseInt(input[i]);
}

for (int i = N - 1; i >= 0; i--) {
    int tmp_sum = 0;
    for (int j = (i + 1) * 2 - 1; j < N; j += (i + 1)) {
        tmp_sum += B[j];
        tmp_sum %= 2;
    }
    B[i] = tmp_sum ^ A[i];
}

int sumB = 0;
for (int b : B) {
    sumB += b;
}

System.out.println(sumB);
for (int i = 0; i < N; i++) {
    if (B[i] == 1) {
        System.out.print((i + 1) + "" "");
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = Integer.parseInt(scanner.nextLine());
        int[] A = new int[N];
        int[] B = new int[N];
        
        String[] input = scanner.nextLine().split("" "");
        for (int i = 0; i < N; i++) {
            A[i] = Integer.parseInt(input[i]);
        }
        
        for (int i = N - 1; i >= 0; i--) {
            int tmp_sum = 0;
            for (int j = (i + 1) * 2 - 1; j < N; j += (i + 1)) {
                tmp_sum += B[j];
                tmp_sum %= 2;
            }
            B[i] = tmp_sum ^ A[i];
        }
        
        int sumB = 0;
        for (int b : B) {
            sumB += b;
        }
        
        System.out.println(sumB);
        for (int i = 0; i < N; i++) {
            if (B[i] == 1) {
                System.out.print((i + 1) + "" "");
            }
        }
    }
}"
ChatGPT,codenet,Python,Java,s661542483.java,"int dfs(int h) {
  if (h == 1) {
    return 1;
  }

  return dfs(h / 2) * 2 + 1;
}

int H = Integer.parseInt(args[0]);
System.out.println(dfs(H));","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int H = scanner.nextInt();
        System.out.println(dfs(H));
        
    }
    public static int dfs(int h) {
      if (h == 1) {
        return 1;
      }
    
      return dfs(h / 2) * 2 + 1;
    }
}"
ChatGPT,codenet,Python,Java,s398580870.java,"int n, k;
Scanner scanner = new Scanner(System.in);
n = scanner.nextInt();
k = scanner.nextInt();

if(k % 2 == 1){
    System.out.println((int) Math.pow(n/k, 3));
}
else{
    System.out.println((int) (Math.pow(n/k, 3) + Math.pow((n+k/2)/k, 3)));
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int n, k;
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        k = scanner.nextInt();
        
        if(k % 2 == 1){
            System.out.println((int) Math.pow(n/k, 3));
        }
        else{
            System.out.println((int) (Math.pow(n/k, 3) + Math.pow((n+k/2)/k, 3)));
        }
    }
}"
ChatGPT,codenet,Python,Java,s582886163.java,"int N = Integer.parseInt(scanner.nextLine());
int[] capacity_list = new int[5];
for (int i = 0; i < 5; i++) {
    capacity_list[i] = Integer.parseInt(scanner.nextLine());
}
Arrays.sort(capacity_list);
int bottle_neck = capacity_list[0];
System.out.println(4 + ((N + bottle_neck - 1) / bottle_neck));","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = Integer.parseInt(scanner.nextLine());
        int[] capacity_list = new int[5];
        for (int i = 0; i < 5; i++) {
            capacity_list[i] = Integer.parseInt(scanner.nextLine());
        }
        Arrays.sort(capacity_list);
        int bottle_neck = capacity_list[0];
        System.out.println(4 + ((N + bottle_neck - 1) / bottle_neck));
    }
}"
ChatGPT,codenet,Python,Java,s636719275.java,"String s = input.nextLine();
String t = input.nextLine();

int check(String a, String b) {
    int s = 0;
    for (int i = 0; i < a.length(); i++) {
        if (a.charAt(i) != b.charAt(i)) {
            s++;
        }
    }
    return s;
}

int ans = 10^6;
for (int i = 0; i < s.length(); i++) {
    String a = s.substring(i);
    if (a.length() >= t.length()) {
        ans = Math.min(ans, check(t, a.substring(0, t.length())));
    }
}
System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String s = input.nextLine();
        String t = input.nextLine();
        int ans = 10^6;
        for (int i = 0; i < s.length(); i++) {
            String a = s.substring(i);
            if (a.length() >= t.length()) {
                ans = Math.min(ans, check(t, a.substring(0, t.length())));
            }
        }
        System.out.println(ans);
        
    }
    static int check(String a, String b) {
        int s = 0;
        for (int i = 0; i < a.length(); i++) {
            if (a.charAt(i) != b.charAt(i)) {
                s++;
            }
        }
        return s;
    }
}"
ChatGPT,codenet,Python,Java,s759547301.java,"String S = input.nextLine();

if (S.equals(""Sunny"")) {
    System.out.println(""Cloudy"");
}

if (S.equals(""Cloudy"")) {
    System.out.println(""Rainy"");
}

if (S.equals(""Rainy"")) {
    System.out.println(""Sunny"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String S = input.nextLine();
        
        if (S.equals(""Sunny"")) {
            System.out.println(""Cloudy"");
        }
        
        if (S.equals(""Cloudy"")) {
            System.out.println(""Rainy"");
        }
        
        if (S.equals(""Rainy"")) {
            System.out.println(""Sunny"");
        }
    }
}"
ChatGPT,codenet,Python,Java,s858647829.java,"int a = Integer.parseInt(sc.next());
int b = Integer.parseInt(sc.next());

if (a % 3 == 0 || b % 3 == 0 || (a + b) % 3 == 0) {
    System.out.println(""Possible"");
} else {
    System.out.println(""Impossible"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = Integer.parseInt(sc.next());
        int b = Integer.parseInt(sc.next());
        
        if (a % 3 == 0 || b % 3 == 0 || (a + b) % 3 == 0) {
            System.out.println(""Possible"");
        } else {
            System.out.println(""Impossible"");
        }
    }
}"
ChatGPT,codenet,Python,Java,s087080706.java,"n, m, x = (int(i) for i in input().split());
a = new int[n];
String[] input = input().split();
for (int i = 0; i < n; i++) {
    a[i] = Integer.parseInt(input[i]);
}
int ans = 0;
int i = Arrays.binarySearch(a, x) + 1;
System.out.println(Math.min(i, n - i));","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int x = sc.nextInt();
        sc.nextLine();
        String[] input = sc.nextLine().split("" "");
        int[] a = new int[input.length];
        for (int i = 0; i < input.length; i++) {
            a[i] = Integer.parseInt(input[i]);
        }
        int ans = 0;
        int i = Arrays.binarySearch(a, x) + 1;
        System.out.println(Math.min(i, input.length - i));
    }
}"
ChatGPT,codenet,Python,Java,s838619850.java,"String S = scanner.nextLine();
String T = scanner.nextLine();

int N = S.length();
int M = T.length();
int ans = M;
for (int i = 0; i <= N - M; i++) {
    String S_2 = S.substring(i, i + M);
    int cnt = 0;
    for (int j = 0; j < M; j++) {
        if (T.charAt(j) != S_2.charAt(j)) {
            cnt++;
        }
    }
    ans = Math.min(ans, cnt);
}

System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String S = scanner.nextLine();
        String T = scanner.nextLine();
        
        int N = S.length();
        int M = T.length();
        int ans = M;
        for (int i = 0; i <= N - M; i++) {
            String S_2 = S.substring(i, i + M);
            int cnt = 0;
            for (int j = 0; j < M; j++) {
                if (T.charAt(j) != S_2.charAt(j)) {
                    cnt++;
                }
            }
            ans = Math.min(ans, cnt);
        }
        
        System.out.println(ans);
    }
}"
ChatGPT,codenet,Python,Java,s785944322.java,"int a = Integer.parseInt(input.readLine());
int b = Integer.parseInt(input.readLine());

if (a >= 13) {
    System.out.println(b);
} else if (a >= 6) {
    System.out.println(b/2);
} else {
    System.out.println(0);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        
        if (a >= 13) {
            System.out.println(b);
        } else if (a >= 6) {
            System.out.println(b/2);
        } else {
            System.out.println(0);
        }
    }
}"
ChatGPT,codenet,Python,Java,s681170949.java,"String N = new Scanner(System.in).nextLine();

System.out.println(""ABC"" + N);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        String N = new Scanner(System.in).nextLine();
        
        System.out.println(""ABC"" + N);
    }
}"
ChatGPT,codenet,Python,Java,s676839884.java,"String s = input.nextLine();
String t = input.nextLine();

if (t.substring(0, t.length()-1).equals(s)) {
  System.out.println(""Yes"");
} else {
  System.out.println(""No"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String s = input.nextLine();
        String t = input.nextLine();
        
        if (t.substring(0, t.length()-1).equals(s)) {
          System.out.println(""Yes"");
        } else {
          System.out.println(""No"");
        } 
    }
}"
ChatGPT,codenet,Python,Java,s993625131.java,"String input = ...; // input string
char[] S = input.toCharArray();

int count = 0;
int record = 0;
for (int i = 0; i < S.length; i++) {
    if (S[i] == 'A' || S[i] == 'C' || S[i] == 'G' || S[i] == 'T') {
        count++;
    } else {
        if (count > record) {
            record = count;
        }
        count = 0;
    }
}
if (count > record) {
    record = count;
}

System.out.println(record);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        char[] S = input.toCharArray();
        
        int count = 0;
        int record = 0;
        for (int i = 0; i < S.length; i++) {
            if (S[i] == 'A' || S[i] == 'C' || S[i] == 'G' || S[i] == 'T') {
                count++;
            } else {
                if (count > record) {
                    record = count;
                }
                count = 0;
            }
        }
        if (count > record) {
            record = count;
        }
        
        System.out.println(record);
    }
}"
ChatGPT,codenet,Python,Java,s997947249.java,"int N = scanner.nextInt();
int K = scanner.nextInt();
if (N % K == 0) {
    System.out.println(0);
} else {
    System.out.println(1);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int K = scanner.nextInt();
        if (N % K == 0) {
            System.out.println(0);
        } else {
            System.out.println(1);
        }
    }
}"
ChatGPT,codenet,Python,Java,s018260659.java,"int N = Integer.parseInt(input);
int cnt = 1;
while (cnt <= 9) {
    if (N%cnt == 0 && 1 <= N/cnt && N/cnt <= 9) {
        System.out.println(""Yes"");
        break;
    }
    else {
        cnt += 1;
    }
}
if (cnt > 9) {
    System.out.println(""No"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int cnt = 1;
        while (cnt <= 9) {
            if (N%cnt == 0 && 1 <= N/cnt && N/cnt <= 9) {
                System.out.println(""Yes"");
                break;
            }
            else {
                cnt += 1;
            }
        }
        if (cnt > 9) {
            System.out.println(""No"");
        }
    } 
}"
ChatGPT,codenet,Python,Java,s060838372.java,"String input = new Scanner(System.in).nextLine();
String[] parts = input.split("" "");
int N = Integer.parseInt(parts[0]);
int K = Integer.parseInt(parts[1]);

String S = new Scanner(System.in).nextLine();
char[] charArray = S.toCharArray();

if (charArray[K-1] == 'A') {
  charArray[K-1] = 'a';
} else if (charArray[K-1] == 'B') {
  charArray[K-1] = 'b';
} else {
  charArray[K-1] = 'c';
}

String ans = new String(charArray);
System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        String[] parts = input.split("" "");
        int N = Integer.parseInt(parts[0]);
        int K = Integer.parseInt(parts[1]);
        
        String S = scanner.nextLine();
        char[] charArray = S.toCharArray();
        
        if (charArray[K-1] == 'A') {
          charArray[K-1] = 'a';
        } else if (charArray[K-1] == 'B') {
          charArray[K-1] = 'b';
        } else {
          charArray[K-1] = 'c';
        }
        
        String ans = new String(charArray);
        System.out.println(ans);   
    }
}"
ChatGPT,codenet,Python,Java,s316832655.java,"int a = Integer.parseInt(args[0]);
int b = Integer.parseInt(args[1]);
int c = Integer.parseInt(args[2]);
System.out.println((a*b)/2);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int c = scanner.nextInt();
        System.out.println((a*b)/2);
    }
}"
ChatGPT,codenet,Python,Java,s404600540.java,"public class s404600540 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int q = scanner.nextInt();
        int h = scanner.nextInt();
        int s = scanner.nextInt();
        int d = scanner.nextInt();
        int n = scanner.nextInt();
        int min_1 = Math.min(q*4, Math.min(h*2, Math.min(q*2+h, s)));
        int min_2 = Math.min(min_1*2, d);

        System.out.println((n % 2)*min_1 + (n / 2)*min_2);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int q = scanner.nextInt();
        int h = scanner.nextInt();
        int s = scanner.nextInt();
        int d = scanner.nextInt();
        int n = scanner.nextInt();
        int min_1 = Math.min(q*4, Math.min(h*2, Math.min(q*2+h, s)));
        int min_2 = Math.min(min_1*2, d);

        System.out.println((n % 2)*min_1 + (n / 2)*min_2);
    }
}"
ChatGPT,codenet,Python,Java,s855969677.java,"public class s855969677 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();

        if (s.equals(""RRR"")) {
            System.out.println(3);
        } else if (s.equals(""SSS"")) {
            System.out.println(0);
        } else if (s.equals(""RRS"") || s.equals(""SRR"")) {
            System.out.println(2);
        } else {
            System.out.println(1);
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();

        if (s.equals(""RRR"")) {
            System.out.println(3);
        } else if (s.equals(""SSS"")) {
            System.out.println(0);
        } else if (s.equals(""RRS"") || s.equals(""SRR"")) {
            System.out.println(2);
        } else {
            System.out.println(1);
        }
    }
}"
ChatGPT,codenet,Python,Java,s840967243.java,"import java.util.Scanner;

public class s840967243 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int MOD = (int) (1e9 + 7);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int max = Math.max(2 - m + n, 0);
        int result = max * factorial(n) % MOD * factorial(m) % MOD;
        System.out.println(result);
    }
    
    public static int factorial(int num) {
        int result = 1;
        for (int i = 2; i <= num; i++) {
            result = (result * i) % MOD;
        }
        return result;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int MOD = (int) (1e9 + 7);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int max = Math.max(2 - m + n, 0);
        int result = max * factorial(n, MOD) % MOD * factorial(m, MOD) % MOD;
        System.out.println(result);
    }
    
    public static int factorial(int num, int MOD) {
        int result = 1;
        for (int i = 2; i <= num; i++) {
            result = (result * i) % MOD;
        }
        return result;
    }
}"
ChatGPT,codenet,Python,Java,s960572618.java,"String input = scanner.nextLine();
String[] splitInput = input.trim().split("" "");

String a = splitInput[0];
String b = splitInput[1];
String c = splitInput[2];

if (a.equals(b) && b.equals(c)) {
    System.out.println(""Yes"");
} else {
    System.out.println(""No"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        String[] splitInput = input.trim().split("" "");
        
        String a = splitInput[0];
        String b = splitInput[1];
        String c = splitInput[2];
        
        if (a.equals(b) && b.equals(c)) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
ChatGPT,codenet,Python,Java,s195311365.java,"String s = new Scanner(System.in).nextLine();

if (s.length() == 2) {
    System.out.println(s);
} else {
    StringBuilder reversed = new StringBuilder(s);
    reversed.reverse();
    System.out.println(reversed.toString());
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        String s = new Scanner(System.in).nextLine();
        
        if (s.length() == 2) {
            System.out.println(s);
        } else {
            StringBuilder reversed = new StringBuilder(s);
            reversed.reverse();
            System.out.println(reversed.toString());
        } 
    }   
}"
ChatGPT,codenet,Python,Java,s539244923.java,"int n = scanner.nextInt();
int k = scanner.nextInt();
if (k % n == 0) {
    System.out.println(n + k);
} else {
    System.out.println(k - n);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        if (k % n == 0) {
            System.out.println(n + k);
        } else {
            System.out.println(k - n);
        }
    }
}"
ChatGPT,codenet,Python,Java,s764356857.java,"int A, B;
Scanner scanner = new Scanner(System.in);
A = scanner.nextInt();
B = scanner.nextInt();

int min = B * 10;
int max = (B+1) * 10 -1;

int ans = -1;
for (int i = min; i <= max; i++) {
  if (i * 0.08 == A) {
    ans = i;
    break;
  }
}

System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int A, B;
        Scanner scanner = new Scanner(System.in);
        A = scanner.nextInt();
        B = scanner.nextInt();
        
        int min = B * 10;
        int max = (B+1) * 10 -1;
        
        int ans = -1;
        for (int i = min; i <= max; i++) {
          if (i * 0.08 == A) {
            ans = i;
            break;
          }
        }
        
        System.out.println(ans);
    }
}"
ChatGPT,codenet,Python,Java,s103354654.java,"int W, H, x, y, r;
Scanner scanner = new Scanner(System.in);
W = scanner.nextInt();
H = scanner.nextInt();
x = scanner.nextInt();
y = scanner.nextInt();
r = scanner.nextInt();

if (x >= r && (W - r) >= x) {
    if (y >= r && (H - r) >= y) {
        System.out.println(""Yes"");
    } else {
        System.out.println(""No"");
    }
} else {
    System.out.println(""No"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int W, H, x, y, r;
        Scanner scanner = new Scanner(System.in);
        W = scanner.nextInt();
        H = scanner.nextInt();
        x = scanner.nextInt();
        y = scanner.nextInt();
        r = scanner.nextInt();
        
        if (x >= r && (W - r) >= x) {
            if (y >= r && (H - r) >= y) {
                System.out.println(""Yes"");
            } else {
                System.out.println(""No"");
            }
        } else {
            System.out.println(""No"");
        }
    }
}"
ChatGPT,codenet,Python,Java,s310981504.java,"int a = Integer.parseInt(input[0]);
int b = Integer.parseInt(input[1]);

if (a <= b) {
    System.out.println(a);
} else {
    System.out.println(a-1);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        
        if (a <= b) {
            System.out.println(a);
        } else {
            System.out.println(a-1);
        }
    }
}"
ChatGPT,codenet,Python,Java,s893778513.java,"import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

public class s893778513 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        
        List<Integer> l = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            l.add(scanner.nextInt());
        }
        
        int b = Collections.max(l);
        int s = 0;
        for (int num : l) {
            s += num;
        }
        
        if (b < s - b) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}","import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        
        List<Integer> l = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            l.add(scanner.nextInt());
        }
        
        int b = Collections.max(l);
        int s = 0;
        for (int num : l) {
            s += num;
        }
        
        if (b < s - b) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
ChatGPT,codenet,Python,Java,s214672212.java,"int[] nums = Arrays.stream(scanner.nextLine().split("" "")).mapToInt(Integer::parseInt).toArray();
Arrays.sort(nums);
System.out.println(nums[2] + nums[1] + nums[0]*10);","import java.util.stream.IntStream;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String line = scanner.nextLine();
        String[] numbers = line.split("" "");
        Long[] nums = new Long[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            nums[i] = Long.parseLong(numbers[i]);
        }
        Arrays.sort(nums, Collections.reverseOrder());
        System.out.println(nums[2] + nums[1] + nums[0]*10);
    }
}"
ChatGPT,codenet,Python,Java,s615966179.java,"int n, a, b;
Scanner scanner = new Scanner(System.in);
n = scanner.nextInt();
a = scanner.nextInt();
b = scanner.nextInt();
int ans = n / (a + b) * a;
int r = Math.min(n % (a + b), a);
ans += r;
System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int n, a, b;
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        a = scanner.nextInt();
        b = scanner.nextInt();
        int ans = n / (a + b) * a;
        int r = Math.min(n % (a + b), a);
        ans += r;
        System.out.println(ans);
    }
}"
ChatGPT,codenet,Python,Java,s724326345.java,"public class s724326345 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A, B, C, X, Y;
        A = scanner.nextInt();
        B = scanner.nextInt();
        C = scanner.nextInt();
        X = scanner.nextInt();
        Y = scanner.nextInt();
        int ans = (int) 1e10;

        for (int k = Math.max(X, Y); k >= 0; k--) {
            int total = 2 * C * k + A * Math.max(0, X - k) + B * Math.max(0, Y - k);
            if (total < ans) {
                ans = total;
            }
        }

        System.out.println(ans);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A, B, C, X, Y;
        A = scanner.nextInt();
        B = scanner.nextInt();
        C = scanner.nextInt();
        X = scanner.nextInt();
        Y = scanner.nextInt();
        int ans = (int) 1e10;

        for (int k = Math.max(X, Y); k >= 0; k--) {
            int total = 2 * C * k + A * Math.max(0, X - k) + B * Math.max(0, Y - k);
            if (total < ans) {
                ans = total;
            }
        }

        System.out.println(ans);
    }
}"
ChatGPT,codenet,Python,Java,s662673721.java,"public class s662673721 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        
        long ans = (long) Math.pow(10, 18);
        
        for (int i = 1; i < Math.sqrt(n) + 2; i++) {
            if (n % i != 0) {
                continue;
            }
            int j = n / i;
            ans = Math.min(ans, i + j - 2);
        }
        
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        
        long ans = (long) Math.pow(10, 18);
        
        for (int i = 1; i < Math.sqrt(n) + 2; i++) {
            if (n % i != 0) {
                continue;
            }
            int j = n / i;
            ans = Math.min(ans, i + j - 2);
        }
        
        System.out.println(ans);
    }
}"
ChatGPT,codenet,Python,Java,s441028271.java,"int a, b, c, k;
Scanner scanner = new Scanner(System.in);
a = scanner.nextInt();
b = scanner.nextInt();
c = scanner.nextInt();
k = scanner.nextInt();

if (k % 2 == 0) {
    System.out.println(a - b);
} else {
    System.out.println(b - a);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int a, b, c, k;
        Scanner scanner = new Scanner(System.in);
        a = scanner.nextInt();
        b = scanner.nextInt();
        c = scanner.nextInt();
        k = scanner.nextInt();
        
        if (k % 2 == 0) {
            System.out.println(a - b);
        } else {
            System.out.println(b - a);
        }
    } 
}"
ChatGPT,codenet,Python,Java,s205112814.java,"int n, m;
Scanner sc = new Scanner(System.in);
n = sc.nextInt();
m = sc.nextInt();

int[][] gate_cond = new int[m][2];
for (int i = 0; i < m; i++) {
    gate_cond[i][0] = sc.nextInt();
    gate_cond[i][1] = sc.nextInt();
}

int max_under_th = Integer.MIN_VALUE;
int min_upper_th = Integer.MAX_VALUE;
for (int i = 0; i < m; i++) {
    max_under_th = Math.max(max_under_th, gate_cond[i][0]);
    min_upper_th = Math.min(min_upper_th, gate_cond[i][1]);
}

if (min_upper_th - max_under_th >= 0) {
    System.out.println(min_upper_th - max_under_th + 1);
} else {
    System.out.println(0);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int n, m;
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        m = sc.nextInt();
        
        int[][] gate_cond = new int[m][2];
        for (int i = 0; i < m; i++) {
            gate_cond[i][0] = sc.nextInt();
            gate_cond[i][1] = sc.nextInt();
        }
        
        int max_under_th = Integer.MIN_VALUE;
        int min_upper_th = Integer.MAX_VALUE;
        for (int i = 0; i < m; i++) {
            max_under_th = Math.max(max_under_th, gate_cond[i][0]);
            min_upper_th = Math.min(min_upper_th, gate_cond[i][1]);
        }
        
        if (min_upper_th - max_under_th >= 0) {
            System.out.println(min_upper_th - max_under_th + 1);
        } else {
            System.out.println(0);
        } 
    }
}"
ChatGPT,codenet,Python,Java,s110149598.java,"public class s110149598 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split("" "");
        String a = input[0];
        String b = input[1];
        
        if (a.compareTo(b) < 0) {
            System.out.println(""<"");
        } else if (a.compareTo(b) > 0) {
            System.out.println("">"");
        } else {
            System.out.println(""="");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split("" "");
        String a = input[0];
        String b = input[1];
        
        if (a.compareTo(b) < 0) {
            System.out.println(""<"");
        } else if (a.compareTo(b) > 0) {
            System.out.println("">"");
        } else {
            System.out.println(""="");
        }
    }
}"
ChatGPT,codenet,Python,Java,s591424993.java,"int d, g;
Scanner sc = new Scanner(System.in);
d = sc.nextInt();
g = sc.nextInt();
int[][] pc = new int[d][2];
for (int i = 0; i < d; i++) {
    pc[i][0] = sc.nextInt();
    pc[i][1] = sc.nextInt();
}

int ans = Integer.MAX_VALUE;

for (int bit = 0; bit < (1 << d); bit++) {
    int count = 0;
    int sum = 0;
    Set<Integer> nokori = new HashSet<>();

    for (int i = 0; i < d; i++) {
        if ((bit & (1 << i)) != 0) {
            sum += pc[i][0] * (i + 1) * 100 + pc[i][1];
            count += pc[i][0];
            nokori.remove(i + 1);
        } else {
            nokori.add(i + 1);
        }
    }

    if (sum < g) {
        int use = Collections.max(nokori);
        int n = Math.min(pc[use-1][0], (int)Math.ceil((double)(g - sum) / (use * 100)));
        count += n;
        sum += n * use * 100;
    }

    if (sum >= g) {
        ans = Math.min(ans, count);
    }
}
System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int d, g;
        Scanner sc = new Scanner(System.in);
        d = sc.nextInt();
        g = sc.nextInt();
        int[][] pc = new int[d][2];
        for (int i = 0; i < d; i++) {
            pc[i][0] = sc.nextInt();
            pc[i][1] = sc.nextInt();
        }
        
        int ans = Integer.MAX_VALUE;
        
        for (int bit = 0; bit < (1 << d); bit++) {
            int count = 0;
            int sum = 0;
            Set<Integer> nokori = new HashSet<>();
        
            for (int i = 0; i < d; i++) {
                if ((bit & (1 << i)) != 0) {
                    sum += pc[i][0] * (i + 1) * 100 + pc[i][1];
                    count += pc[i][0];
                    nokori.remove(i + 1);
                } else {
                    nokori.add(i + 1);
                }
            }
        
            if (sum < g) {
                int use = Collections.max(nokori);
                int n = Math.min(pc[use-1][0], (int)Math.ceil((double)(g - sum) / (use * 100)));
                count += n;
                sum += n * use * 100;
            }
        
            if (sum >= g) {
                ans = Math.min(ans, count);
            }
        }
        System.out.println(ans);
    }
}"
ChatGPT,codenet,Python,Java,s592421258.java,"import java.util.Scanner;

public class s592421258 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int I = input.nextInt();
        int s = I * 2;
        System.out.println(I == s ? ""Yes"" : ""No"");
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String I = input.nextLine();
        String s = I + I;
        System.out.println(s.contains(input.nextLine()) ? ""Yes"" : ""No"");
    }
}"
ChatGPT,codenet,Python,Java,s344468705.java,"import java.util.*;
import java.io.*;

public class s344468705 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        for (int i = 0; i < n; i++) {
            solve(br);
        }
    }

    public static void solve(BufferedReader br) throws IOException {
        int n = Integer.parseInt(br.readLine());
        int[] dp = new int[n + 1];
        Arrays.fill(dp, Integer.MIN_VALUE);
        dp[0] = Integer.MAX_VALUE;
        StringTokenizer st = new StringTokenizer(br.readLine());
        for (int i = 0; i < n; i++) {
            int num = -Integer.parseInt(st.nextToken());
            if (num >= dp[dp.length - 1]) {
                dp[dp.length] = num;
            } else {
                int idx = Arrays.binarySearch(dp, num);
                if (idx < 0) {
                    idx = -idx - 1;
                }
                dp[idx] = num;
            }
        }
        System.out.println(dp.length - 1);
    }
}","import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        for (int i = 0; i < n; i++) {
            solve(scanner);
        }
    }

    public static void solve(Scanner scanner) throws IOException {
        int n = scanner.nextInt();
        int[] dp = new int[n + 1];
        Arrays.fill(dp, Integer.MIN_VALUE);
        dp[0] = Integer.MAX_VALUE;
        StringTokenizer st = new StringTokenizer(br.readLine());
        for (int i = 0; i < n; i++) {
            int num = -Integer.parseInt(st.nextToken());
            if (num >= dp[dp.length - 1]) {
                dp[dp.length] = num;
            } else {
                int idx = Arrays.binarySearch(dp, num);
                if (idx < 0) {
                    idx = -idx - 1;
                }
                dp[idx] = num;
            }
        }
        System.out.println(dp.length - 1);
    }
}"
ChatGPT,codenet,Python,Java,s016605598.java,"import java.util.*;

public class s016605598 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int const_val = 0;
        PriorityQueue<Integer> left = new PriorityQueue<>(Collections.reverseOrder());
        PriorityQueue<Integer> right = new PriorityQueue<>();
        
        int q = sc.nextInt();
        int cnt = 0;
        int left_sum = 0;
        int right_sum = 0;
        
        for (int i = 0; i < q; i++) {
            int[] t = new int[3];
            for (int j = 0; j < 3; j++) {
                t[j] = sc.nextInt();
            }
            
            if (t[0] == 1) {
                // update
                int a = t[1];
                int b = t[2];
                const_val += b;
                
                if (cnt % 2 == 0) {
                    if (right.isEmpty()) {
                        left.offer(-a);
                        left_sum += a;
                        cnt += 1;
                        continue;
                    }
                    
                    int c = right.poll();
                    right_sum -= c;
                    
                    if (a <= c) {
                        left.offer(-a);
                        right.offer(c);
                        left_sum += a;
                        right_sum += c;
                    } else {
                        left.offer(-c);
                        right.offer(a);
                        left_sum += c;
                        right_sum += a;
                    }
                } else {
                    int c = left.poll();
                    left_sum += c;
                    
                    if (a <= -c) {
                        left.offer(-a);
                        right.offer(-c);
                        left_sum += a;
                        right_sum -= c;
                    } else {
                        left.offer(c);
                        right.offer(a);
                        left_sum -= c;
                        right_sum += a;
                    }
                }
                
                cnt += 1;
            } else {
                int tmp = -left.peek();
                System.out.println(tmp + "" "" + (const_val - left_sum + right_sum + tmp * (cnt % 2)));
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int const_val = 0;
        PriorityQueue<Integer> left = new PriorityQueue<>(Collections.reverseOrder());
        PriorityQueue<Integer> right = new PriorityQueue<>();
        
        int q = sc.nextInt();
        int cnt = 0;
        int left_sum = 0;
        int right_sum = 0;
        
        sc.nextLine();
        for (int i = 0; i < q; i++) {
            String line = sc.nextLine();
            String[] numbers = line.split("" "");
            int[] t = new int[numbers.length];
            for (int j = 0; j < numbers.length; j++) {
                t[j] = Integer.parseInt(numbers[j]);
            }
            
            if (t[0] == 1) {
                // update
                int a = t[1];
                int b = t[2];
                const_val += b;
                
                if (cnt % 2 == 0) {
                    if (right.isEmpty()) {
                        left.offer(-a);
                        left_sum += a;
                        cnt += 1;
                        continue;
                    }
                    
                    int c = right.poll();
                    right_sum -= c;
                    
                    if (a <= c) {
                        left.offer(-a);
                        right.offer(c);
                        left_sum += a;
                        right_sum += c;
                    } else {
                        left.offer(-c);
                        right.offer(a);
                        left_sum += c;
                        right_sum += a;
                    }
                } else {
                    int c = left.poll();
                    left_sum += c;
                    
                    if (a <= -c) {
                        left.offer(-a);
                        right.offer(-c);
                        left_sum += a;
                        right_sum -= c;
                    } else {
                        left.offer(c);
                        right.offer(a);
                        left_sum -= c;
                        right_sum += a;
                    }
                }
                
                cnt += 1;
            } else {
                int tmp = -left.peek();
                System.out.println(tmp + "" "" + (const_val - left_sum + right_sum + tmp * (cnt % 2)));
            }
        }
    }
}"
ChatGPT,codenet,Python,Java,s763208424.java,"import java.util.*;
import java.lang.*;

public class s763208424 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
        int m = input.nextInt();
        PriorityQueue<Integer> a = new PriorityQueue<>(Collections.reverseOrder());

        for (int i = 0; i < n; i++) {
            a.add(-input.nextInt());
        }

        for (int i = 0; i < m; i++) {
            int x = a.poll();
            a.add(-(x / 2));
        }

        int sum = 0;
        for (int num : a) {
            sum += num;
        }

        System.out.println(-sum);
    }
}","import java.util.*;
import java.lang.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
        int m = input.nextInt();
        PriorityQueue<Integer> a = new PriorityQueue<>(Collections.reverseOrder());

        for (int i = 0; i < n; i++) {
            a.add(-input.nextInt());
        }

        for (int i = 0; i < m; i++) {
            int x = a.poll();
            a.add(-(x / 2));
        }

        int sum = 0;
        for (int num : a) {
            sum += num;
        }

        System.out.println(-sum);
    }
}"
ChatGPT,codenet,Python,Java,s913338871.java,"import java.util.Arrays;
import java.util.Scanner;

public class s913338871 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = scanner.nextInt();
        }
        
        Arrays.sort(a);
        
        int[] s = new int[N/2];
        for (int i = N; i < a.length; i += 2) {
            s[i/2] = a[i];
        }
        
        int sum = 0;
        for (int num : s) {
            sum += num;
        }
        
        System.out.println(sum);
    }
}","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = scanner.nextInt();
        }
        
        Arrays.sort(a);
        
        int[] s = new int[N/2];
        for (int i = N; i < a.length; i += 2) {
            s[i/2] = a[i];
        }
        
        int sum = 0;
        for (int num : s) {
            sum += num;
        }
        
        System.out.println(sum);
    }
}"
ChatGPT,codenet,Python,Java,s975943078.java,"import java.util.*;

public class s975943078 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int K = scanner.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextInt() % K - 1;
        }
        
        int[] sumA = new int[N + 1];
        int count = 0;
        Map<Integer, List<Integer>> modK = new HashMap<>();
        modK.put(0, new ArrayList<>());
        
        for (int i = 0; i < N; i++) {
            sumA[i + 1] = (sumA[i] + A[i]) % K;
            
            if (!modK.containsKey(sumA[i + 1])) {
                modK.put(sumA[i + 1], new ArrayList<>());
            }
            modK.get(sumA[i + 1]).add(i + 1);
        }
        
        for (int key : modK.keySet()) {
            List<Integer> values = modK.get(key);
            int lenK = values.size();
            
            for (int i = 0; i < lenK; i++) {
                int a = values.get(i);
                count += binarySearch(values, a + K, i, lenK) - i - 1;
            }
        }
        
        System.out.println(count);
    }
    
    private static int binarySearch(List<Integer> list, int target, int start, int end) {
        int left = start;
        int right = end;
        
        while (left < right) {
            int mid = (left + right) / 2;
            
            if (list.get(mid) < target) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        
        return left;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int K = scanner.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextInt() % K - 1;
        }
        
        int[] sumA = new int[N + 1];
        int count = 0;
        Map<Integer, List<Integer>> modK = new HashMap<>();
        modK.put(0, new ArrayList<>());
        
        for (int i = 0; i < N; i++) {
            sumA[i + 1] = (sumA[i] + A[i]) % K;
            
            if (!modK.containsKey(sumA[i + 1])) {
                modK.put(sumA[i + 1], new ArrayList<>());
            }
            modK.get(sumA[i + 1]).add(i + 1);
        }
        
        for (int key : modK.keySet()) {
            List<Integer> values = modK.get(key);
            int lenK = values.size();
            
            for (int i = 0; i < lenK; i++) {
                int a = values.get(i);
                count += binarySearch(values, a + K, i, lenK) - i - 1;
            }
        }
        
        System.out.println(count);
    }
    
    private static int binarySearch(List<Integer> list, int target, int start, int end) {
        int left = start;
        int right = end;
        
        while (left < right) {
            int mid = (left + right) / 2;
            
            if (list.get(mid) < target) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        
        return left;
    }
}"
ChatGPT,codenet,Python,Java,s147181072.java,"import java.util.Scanner;

public class s147181072 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        System.out.println(input.toUpperCase());
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        String output = """";
        for(int i=0; i<input.length(); i++) {
        char c = input.charAt(i);
        if(Character.isUpperCase(c)) {
            output += Character.toLowerCase(c);  
        }
        else {
            output += Character.toUpperCase(c);
        }
        }
        System.out.println(output);
    }
}"
ChatGPT,codenet,Python,Java,s441329208.java,"import java.util.Arrays;
import java.util.Scanner;

public class s441329208 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String t = sc.nextLine();
        
        char[] sArr = s.toCharArray();
        char[] tArr = t.toCharArray();
        Arrays.sort(sArr);
        Arrays.sort(tArr);
        String sortedS = new String(sArr);
        String sortedT = new String(tArr);
        
        String result = sortedS.compareTo(sortedT) < 0 ? ""Yes"" : ""No"";
        System.out.println(result);
    }
}","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String t = sc.nextLine();
        
        char[] sArr = s.toCharArray();
        char[] tArr = t.toCharArray();
        Arrays.sort(sArr);
        Arrays.sort(tArr);
        String sortedS = new String(sArr);
        String sortedT = new String(tArr);
        
        String result = sortedS.compareTo(sortedT) < 0 ? ""Yes"" : ""No"";
        System.out.println(result);
    }
}"
ChatGPT,codenet,Python,Java,s777789287.java,"import java.util.Scanner;
import java.util.Arrays;

public class s777789287 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        Arrays.sort(a);
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += a[i];
        }
        double s = (double) sum / (4 * m);
        if (a[m - 1] >= s) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}","import java.util.Scanner;
import java.util.Arrays;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        Long[] a = new Long[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextLong();
        }
        Arrays.sort(a, Collections.reverseOrder());
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += a[i];
        }
        double s = (double) sum / (4 * m);
        if (a[m - 1] >= s) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
ChatGPT,codenet,Python,Java,s259116349.java,"import java.util.*;

public class s259116349 {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        
        List<Integer> primes = Arrays.asList(2,3,5,7,11,13,17,19,23,29,31,37,41,43,47);
        List<List<Integer>> divs = new ArrayList<>();
        
        for (int i = 1; i <= 100; i++) {
            List<Integer> tmp = new ArrayList<>(Collections.nCopies(primes.size(), 0));
            for (int j = 0; j < primes.size(); j++) {
                int p = primes.get(j);
                while (i%p == 0) {
                    i /= p;
                    tmp.set(j, tmp.get(j) + 1);
                }
            }
            divs.add(tmp);
        }
        
        List<Integer> divsum = new ArrayList<>(Collections.nCopies(primes.size(), 0));
        for (int i = 1; i <= N; i++) {
            for (int j = 0; j < primes.size(); j++) {
                divsum.set(j, divsum.get(j) + divs.get(i-1).get(j));
            }
        }
        
        int ans = 0;
        
        // >=74
        ans += num(divsum, 75);
        
        // >=14 & 13~4
        ans += num(divsum, 15) * (num(divsum, 5) - 1);
        
        // >=24 & 23~2
        ans += num(divsum, 25) * (num(divsum, 3) - 1);
        
        // >=4,>=4 & >=2
        ans += num(divsum, 5) * (num(divsum, 5) - 1) * (num(divsum, 3) - 2) / 2;
        
        System.out.println(ans);
    }
    
    private static int num(List<Integer> divsum, int n) {
        int count = 0;
        for (int i : divsum) {
            if (i >= n-1) {
                count++;
            }
        }
        return count;
    }
}","import java.util.*;

public class Main {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        
        List<Integer> primes = Arrays.asList(2,3,5,7,11,13,17,19,23,29,31,37,41,43,47);
        List<List<Integer>> divs = new ArrayList<>();
        
        for (int i = 1; i <= 100; i++) {
            List<Integer> tmp = new ArrayList<>(Collections.nCopies(primes.size(), 0));
            for (int j = 0; j < primes.size(); j++) {
                int p = primes.get(j);
                while (i%p == 0) {
                    i /= p;
                    tmp.set(j, tmp.get(j) + 1);
                }
            }
            divs.add(tmp);
        }
        
        List<Integer> divsum = new ArrayList<>(Collections.nCopies(primes.size(), 0));
        for (int i = 1; i <= N; i++) {
            for (int j = 0; j < primes.size(); j++) {
                divsum.set(j, divsum.get(j) + divs.get(i-1).get(j));
            }
        }
        
        int ans = 0;
        
        // >=74
        ans += num(divsum, 75);
        
        // >=14 & 13~4
        ans += num(divsum, 15) * (num(divsum, 5) - 1);
        
        // >=24 & 23~2
        ans += num(divsum, 25) * (num(divsum, 3) - 1);
        
        // >=4,>=4 & >=2
        ans += num(divsum, 5) * (num(divsum, 5) - 1) * (num(divsum, 3) - 2) / 2;
        
        System.out.println(ans);
    }
    
    private static int num(List<Integer> divsum, int n) {
        int count = 0;
        for (int i : divsum) {
            if (i >= n-1) {
                count++;
            }
        }
        return count;
    }
}"
ChatGPT,codenet,C++,Python,s615050061.py,"B = 13131
N = 500000 + 7

def pow(a, k):
    if k < 0:
        k += (1 << 63) - 1
    t = 1
    while k:
        if k & 1:
            t = t * a
        a = a * a
        k >>= 1
    return t

n = int(input())
s = input().strip()
f = [0] * (N)
g = [0] * (N)

map = {}
cnt = 0

for i in range(1, n+1):
    if s[i-1] == '+' or s[i-1] == '-':
        f[i] = f[i-1] + (1 if s[i-1] == '+' else -1) * pow(B, g[i] = g[i-1])
    else:
        f[i] = f[i-1]
        g[i] = g[i-1] + (-1 if s[i-1] == '<' else 1)

for i in range(n, 0, -1):
    if f[n] * pow(B, g[i-1]) + f[i-1] in map:
        cnt += map[f[n] * pow(B, g[i-1]) + f[i-1]]
    if f[i] in map:
        map[f[i]] += 1
    else:
        map[f[i]] = 1

print(cnt)","B = 13131
N = 500000 + 7

def pow(a, k):
    if k < 0:
        k += (1 << 63) - 1
    t = 1
    while k:
        if k & 1:
            t = t * a
        a = a * a
        k >>= 1
    return t

n = int(input())
s = input().strip()
f = [0] * (N)
g = [0] * (N)

map = {}
cnt = 0

for i in range(1, n+1):
    if s[i-1] == '+' or s[i-1] == '-':
        g[i] = g[i - 1]
        f[i] = f[i-1] + (1 if s[i-1] == '+' else -1) * pow(B, g[i])
    else:
        f[i] = f[i-1]
        g[i] = g[i-1] + (-1 if s[i-1] == '<' else 1)

for i in range(n, 0, -1):
    if f[n] * pow(B, g[i-1]) + f[i-1] in map:
        cnt += map[f[n] * pow(B, g[i-1]) + f[i-1]]
    if f[i] in map:
        map[f[i]] += 1
    else:
        map[f[i]] = 1

print(cnt)"
ChatGPT,codenet,C++,Python,s794872785.py,"def solve():
    maxsize = 0
    maxcnt = 0
    ans_num = 0
    ans_num2 = 0
    str_v = []

    while True:
        try:
            in_str = input()
            str_v.append(in_str)
            if len(in_str) > maxsize:
                maxsize = len(in_str)
                ans_num = len(str_v) - 1
        except EOFError:
            break

    for i in range(len(str_v)):
        cnt = 0
        for j in range(len(str_v)):
            if str_v[i] == str_v[j]:
                cnt += 1
        if cnt > maxcnt:
            maxcnt = cnt
            ans_num2 = i

    print(str_v[ans_num2], str_v[ans_num])

solve()","def solve():
    maxsize = 0
    maxcnt = 0
    ans_num = 0
    ans_num2 = 0
    str_v = []

    inputs = input().split()
    for in_str in inputs:
        str_v.append(in_str)
        if len(in_str) > maxsize:
            maxsize = len(in_str)
            ans_num = len(str_v) - 1

    for i in range(len(str_v)):
        cnt = 0
        for j in range(len(str_v)):
            if str_v[i] == str_v[j]:
                cnt += 1
        if cnt > maxcnt:
            maxcnt = cnt
            ans_num2 = i

    print(str_v[ans_num2], str_v[ans_num])

solve()"
ChatGPT,codenet,C++,Python,s134430594.py,"import sys

LIM = 20
N = 2 * 10**5 + 7

def init(a):
    n = len(a)
    mn = [[0] * N for _ in range(LIM)]
    for i in range(n):
        mn[0][i] = a[i]
    for i in range(LIM - 1):
        for j in range(n - (1 << (i + 1)) + 1):
            mn[i + 1][j] = max(mn[i][j], mn[i][j + (1 << i)])
    pw = [0] * N
    for i in range(2, N):
        pw[i] = pw[i // 2] + 1
    return mn, pw

def get(mn, pw, l, r):
    r += 1
    p = pw[r - l]
    return min(mn[p][l], mn[p][r - (1 << p)])

def main():
    n = int(input())
    a = list(map(int, input().split()))
    dl = [i - a[i] for i in range(n)]
    ans = 0
    bans = []
    for i in range(n):
        r = i
        while r + 1 < n and a[r] + 1 == a[r + 1]:
            r += 1
        ans += a[r]
        i = r
        bans.append((r - a[r], r, r - a[r]))
    mn, pw = init(dl)
    for t in bans:
        if get(mn, pw, t[0], t[1]) > t[2]:
            print(-1)
            return
    print(ans)

if __name__ == ""__main__"":
    main()","import sys

LIM = 20
N = 2 * 10**5 + 7

def init(a):
    n = len(a)
    mn = [[0] * N for _ in range(LIM)]
    for i in range(n):
        mn[0][i] = a[i]
    for i in range(LIM - 1):
        for j in range(n - (1 << (i + 1)) + 1):
            mn[i + 1][j] = max(mn[i][j], mn[i][j + (1 << i)])
    pw = [0] * N
    for i in range(2, N):
        pw[i] = pw[i // 2] + 1
    return mn, pw

def get(mn, pw, l, r):
    r += 1
    p = pw[r - l]
    return min(mn[p][l], mn[p][r - (1 << p)])

def main():
    n = int(input())
    a = []
    for i in range(n):
        a.append(int(input()))
    dl = [i - a[i] for i in range(n)]
    ans = 0
    bans = []
    for i in range(n):
        r = i
        while r + 1 < n and a[r] + 1 == a[r + 1]:
            r += 1
        ans += a[r]
        i = r
        bans.append((r - a[r], r, r - a[r]))
    mn, pw = init(dl)
    for t in bans:
        if get(mn, pw, t[0], t[1]) > t[2]:
            print(-1)
            return
    print(ans)

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,C++,Python,s620821061.py,"class BitMatching:
    def __init__(self, V):
        self.G = [[] for _ in range(2*V)]
        self.match = [-1] * (2*V)
        self.used = [False] * (2*V)

    def add(self, a, b):
        self.G[a].append(b+V)
        self.G[b+V].append(a)

    def dfs(self, v):
        self.used[v] = True
        for u in self.G[v]:
            w = self.match[u]
            if w < 0 or (not self.used[w] and self.dfs(w)):
                self.match[v] = u
                self.match[u] = v
                return True
        return False

    def exec(self):
        res = 0
        for v in range(V):
            if self.match[v] < 0:
                self.used = [False] * (2*V)
                if self.dfs(v):
                    res += 1
        return res


def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)


while True:
    n, m = map(int, input().split())
    if n == 0:
        break

    bm = BitMatching(n)
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    for i in range(n):
        for j in range(m):
            if gcd(a[i], b[j]) != 1:
                bm.add(i, j)

    print(bm.exec())","class BitMatching:
    def __init__(self, V):
        self.V = V
        self.G = [[] for _ in range(2*self.V)]
        self.match = [-1] * (2*self.V)
        self.used = [False] * (2*self.V)

    def add(self, a, b):
        self.G[a].append(b+self.V)
        self.G[b+self.V].append(a)

    def dfs(self, v):
        self.used[v] = True
        for u in self.G[v]:
            w = self.match[u]
            if w < 0 or (not self.used[w] and self.dfs(w)):
                self.match[v] = u
                self.match[u] = v
                return True
        return False

    def exec(self):
        res = 0
        for v in range(self.V):
            if self.match[v] < 0:
                self.used = [False] * (2*self.V)
                if self.dfs(v):
                    res += 1
        return res


def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)


while True:
    n, m = map(int, input().split())
    if n == 0:
        break

    bm = BitMatching(n)
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    for i in range(n):
        for j in range(m):
            if gcd(a[i], b[j]) != 1:
                bm.add(i, j)

    print(bm.exec())"
ChatGPT,codenet,C++,Python,s013321508.py,"N, M = map(int, input().split())

L = [0] * 100000
for i in range(N):
    l = int(input())
    L[i] = l

L.sort()

for i in range(M):
    max_L = L[-1]
    if max_L == 0:
        break
    
    max_L //= 2
    idx = bisect.bisect_left(L, max_L)
    L.insert(idx, max_L)
    L.pop()

ans = sum(L)

print(ans)","import bisect

N, M = map(int, input().split())

L = [0] * 100000
inputs = list(input().split())
for i in range(N):
    l = int(inputs[i])
    L[i] = l

L.sort()

for i in range(M):
    max_L = L[-1]
    if max_L == 0:
        break
    
    max_L //= 2
    idx = bisect.bisect_left(L, max_L)
    L.insert(idx, max_L)
    L.pop()

ans = sum(L)

print(ans)"
ChatGPT,codenet,C++,Python,s930643405.py,"n, k = map(int, input().split())
d = [False] * 10
hantei = True

for i in range(k):
    a = int(input())
    d[a] = True

while True:
    x = n
    hantei = True
    while x:
        if d[x % 10]:
            hantei = False
            break
        x //= 10
    if hantei:
        print(n)
        break
    n += 1","n, k = map(int, input().split())
d = [False] * 10
hantei = True

inputs = list(input().split())
for i in range(k):
    a = int(inputs[i])
    d[a] = True

while True:
    x = n
    hantei = True
    while x:
        if d[x % 10]:
            hantei = False
            break
        x //= 10
    if hantei:
        print(n)
        break
    n += 1"
ChatGPT,codenet,C++,Python,s683946919.py,"import math

def time2min(month, day, hour, min):
    total_day_of_month = [31,28,31,30,31,30,31,31,30,31,30,31]
    total = 0
    for i in range(1, month):
        total += total_day_of_month[i] * 24 * 60
    for i in range(1, day):
        total += 24 * 60
    total += hour * 60 + min

    return total

while True:
    N = int(input())
    if N == 0:
        break

    log = {}
    for i in range(N):
        month, day, hour, min, action, id = input().split()
        month = int(month.split(""/"")[0])
        day = int(day)
        hour = int(hour.split("":"")[0])
        min = int(min)
        id = int(id)

        t = time2min(month, day, hour, min)
        if id not in log:
            log[id] = []
        log[id].append(t)

    total = [0] * 1000

    for i in range(len(log[0])-1):
        god_start = log[0][i]
        god_end = log[0][i+1]

        for id, schedule in log.items():
            if id == 0:
                continue
            for j in range(0, len(schedule)-1):
                ppl_start = schedule[j]
                ppl_end = schedule[j+1]
                start = max(god_start, ppl_start)
                end = min(god_end, ppl_end)
                total[id] += max(0, end-start)

    max_v = 0
    for id in range(1000):
        max_v = max(total[id], max_v)
    print(max_v)","import math

def time2min(month, day, hour, minute):
    total_day_of_month = [31,28,31,30,31,30,31,31,30,31,30,31]
    total = 0
    for i in range(1, month):
        total += total_day_of_month[i] * 24 * 60
    for i in range(1, day):
        total += 24 * 60
    total += hour * 60 + minute

    return total

while True:
    N = int(input())
    if N == 0:
        break

    log = {}
    for i in range(N):
        month_day, hour_minute, action, id = input().split()
        month = int(month_day.split(""/"")[0])
        day = int(month_day.split(""/"")[1])
        hour = int(hour_minute.split("":"")[0])
        minute = int(hour_minute.split("":"")[1])
        id = int(id)

        t = time2min(month, day, hour, minute)
        if id not in log:
            log[id] = []
        log[id].append(t)

    total = [0] * 1000

    for i in range(len(log[0])-1):
        god_start = log[0][i]
        god_end = log[0][i+1]

        for id, schedule in log.items():
            if id == 0:
                continue
            for j in range(0, len(schedule)-1):
                ppl_start = schedule[j]
                ppl_end = schedule[j+1]
                start = max(god_start, ppl_start)
                end = min(god_end, ppl_end)
                total[id] += max(0, end-start)

    max_v = 0
    for id in range(1000):
        max_v = max(total[id], max_v)
    print(max_v)"
ChatGPT,codenet,C++,Python,s956589471.py,"a, b, c, d, e, k = map(int, input().split())

print(""Yay!"" if e - a <= k else "":("")","a, b, c, d, e, k = int(input()), int(input()), int(input()), int(input()), int(input()), int(input())

print(""Yay!"" if e - a <= k else "":("")"
ChatGPT,codenet,C++,Python,s575944217.py,"import sys

def main():
    n = int(input())
    ans = [0] * n
    for _ in range(n-1):
        a = int(input())
        a -= 1
        ans[a] += 1
    for i in range(n):
        print(ans[i])

if __name__ == ""__main__"":
    main()","import sys

def main():
    n = int(input())
    ans = [0] * n
    inputs = list(input().split())
    for i in range(n-1):
        a = int(inputs[i])
        a -= 1
        ans[a] += 1
    for i in range(n):
        print(ans[i])

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,C++,Python,s814403222.py,"v = []
d = [[] for _ in range(33)]

while True:
    n = int(input())
    if n == 0:
        break
    
    for i in range(33):
        d[i].clear()
    
    for _ in range(n):
        v.append((0, ''))
        v[-1] = (0, input().split()[0])
        m = int(input())
        for _ in range(m):
            a = int(input())
            v[-1] = (v[-1][0] + n - len(d[a]), v[-1][1])
            for k in range(len(d[a])):
                v[d[a][k]] = (v[d[a][k]][0] - 1, v[d[a][k]][1])
            d[a].append(len(v) - 1)
    
    v.sort()
    print(v[0][0], v[0][1])","v = []
d = [[] for _ in range(33)]

while True:
    n = int(input())
    if n == 0:
        break
    
    for i in range(33):
        d[i].clear()
    
    for _ in range(n):
        inputs = list(input().split())
        v.append((0, ''))
        v[-1] = (0, inputs[0])
        m = int(inputs[1])
        for i in range(m):
            a = int(inputs[i + 2])
            v[-1] = (v[-1][0] + n - len(d[a]), v[-1][1])
            for k in range(len(d[a])):
                v[d[a][k]] = (v[d[a][k]][0] - 1, v[d[a][k]][1])
            d[a].append(len(v) - 1)
    
    v.sort()
    print(v[0][0], v[0][1])"
ChatGPT,codenet,C++,Python,s189738089.py,"dp = [float('inf')] * 101000
dp[0] = 0

N, K = map(int, input().split())
h = list(map(int, input().split()))

for i in range(N):
    for j in range(1, K + 1):
        dp[i + j] = min(dp[i + j], dp[i] + abs(h[i] - h[i + j]))

print(dp[N - 1])","dp = [float('inf')] * 101000
dp[0] = 0

N, K = map(int, input().split())
h = list(map(int, input().split()))

for i in range(N):
    for j in range(1, K + 1):
        if i + j >= N: continue
        dp[i + j] = min(dp[i + j], dp[i] + abs(h[i] - h[i + j]))

print(dp[N - 1])"
ChatGPT,codenet,C++,Python,s582643375.py,"import math

def init():
    global fac, finv, inv
    fac = [0] * NMAX
    finv = [0] * NMAX
    inv = [0] * NMAX
    fac[0] = fac[1] = 1
    finv[0] = finv[1] = 1
    inv[1] = 1
    for i in range(2, NMAX):
        fac[i] = fac[i-1] * i % mod
        inv[i] = mod - inv[mod%i] * (mod//i) % mod
        finv[i] = finv[i-1] * inv[i] % mod

def C(n, k):
    if n < k:
        return 0
    if n < 0 or k < 0:
        return 0
    return fac[n] * (finv[k] * finv[n-k] % mod) % mod

init()
X, Y = map(int, input().split())
if (X+Y) % 3 != 0:
    print(0)
else:
    n = (X+Y) // 3 + 1
    k = 2*(n-1) - Y + 1
    print(C(n-1, k-1))","import math

mod = 1e9+7
NMAX = 1000010
def init():
    global fac, finv, inv
    fac = [0] * NMAX
    finv = [0] * NMAX
    inv = [0] * NMAX
    fac[0] = fac[1] = 1
    finv[0] = finv[1] = 1
    inv[1] = 1
    for i in range(2, NMAX):
        fac[i] = fac[i-1] * i % mod
        inv[i] = mod - inv[int(mod%i)] * (mod//i) % mod
        finv[i] = finv[i-1] * inv[i] % mod

def C(n, k):
    if n < k:
        return 0
    if n < 0 or k < 0:
        return 0
    return int(fac[n] * (finv[k] * finv[n-k] % mod) % mod)

init()
X, Y = map(int, input().split())
if (X+Y) % 3 != 0:
    print(0)
else:
    n = (X+Y) // 3 + 1
    k = 2*(n-1) - Y + 1
    print(C(n-1, k-1))"
ChatGPT,codenet,C++,Python,s571001771.py,"n, m = map(int, input().split())
key = [0] * 1005
cost = [0] * 1005
dp = [[0] * 1005 for _ in range((1 << 12) + 5)]
INF = 123456789012

for i in range(1, m + 1):
    cost[i], b = map(int, input().split())
    for j in range(b):
        c = int(input())
        key[i] += (1 << (c - 1))

for i in range(1 << n):
    for j in range(m):
        dp[i][j + 1] = min(dp[i][j], dp[i][j + 1])
        dp[i | key[j + 1]][j + 1] = min(dp[i | key[j + 1]][j + 1], dp[i][j] + cost[j + 1])

if dp[(1 << n) - 1][m] == INF:
    print(-1)
else:
    print(dp[(1 << n) - 1][m])","n, m = map(int, input().split())
key = [0] * 1005
cost = [0] * 1005
dp = [[0] * 1005 for _ in range((1 << 12) + 5)]
INF = 123456789012

for i in range(1, m + 1):
    cost[i], b = map(int, input().split())
    for j in range(b):
        c = int(input())
        key[i] += (1 << (c - 1))

for i in range(1 << n):
    for j in range(m):
        dp[i][j + 1] = min(dp[i][j], dp[i][j + 1])
        dp[i | key[j + 1]][j + 1] = min(dp[i | key[j + 1]][j + 1], dp[i][j] + cost[j + 1])

if dp[(1 << n) - 1][m] == INF:
    print(-1)
else:
    print(dp[(1 << n) - 1][m])"
ChatGPT,codenet,C++,Python,s970063640.py,"# Python Code:
n = int(input())
a = int(input())
sum = 0
s = []
for i in range(n):
    s.append(int(input()))
s.sort()
for i in range(n-1, n-a-1, -1):
    sum += s[i]
print(sum)","n, a = map(int, input().split())
sum = 0
s = list(map(int, input().split()))
s.sort()
for i in range(n-1, n-a-1, -1):
    sum += s[i]
print(sum)"
ChatGPT,codenet,C++,Python,s800506321.py,"n = int(input())
k = int(input())
x = n // k
y = n % k

if y != 0:
    z = x + 1 - x
else:
    z = x - x

print(z)","n, k = map(int, input().split())
x = n // k
y = n % k

if y != 0:
    z = x + 1 - x
else:
    z = x - x

print(z)"
ChatGPT,codenet,C++,Python,s208096306.py,"import math

def gcd(a, b):
    if a < b:
        a, b = b, a
    while (r := a % b) > 0:
        a = b
        b = r
    return b

n = int(input())
ans = int(input())

for _ in range(n-1):
    a = int(input())
    ans = gcd(ans, a)

print(ans)","import math

def gcd(a, b):
    if a < b:
        a, b = b, a
    while (r := a % b) > 0:
        a = b
        b = r
    return b

n = int(input())
inputs = list(input().split())
ans = int(inputs[0])

for i in range(n-1):
    a = int(inputs[i + 1])
    ans = gcd(ans, a)

print(ans)"
ChatGPT,codenet,C++,Python,s194793609.py,"n = int(input())

a = []
for i in range(n):
    a.append(int(input()))

abs_a = [abs(x) for x in a]

ans = 0
min_val = abs_a[0]
for e in abs_a:
    ans += e
    if min_val > e:
        min_val = e

num_negative = sum(1 for e in a if e < 0)

if num_negative % 2:
    ans -= min_val * 2

print(ans)","n = int(input())

a = map(int, input().split())

abs_a = [abs(x) for x in a]

ans = 0
min_val = abs_a[0]
for e in abs_a:
    ans += e
    if min_val > e:
        min_val = e

num_negative = sum(1 for e in a if e < 0)

if num_negative % 2:
    ans -= min_val * 2

print(ans)"
ChatGPT,codenet,C++,Python,s085554271.py,"import math

def is_prime(num):
    if num < 2:
        return False
    elif num == 2:
        return True
    elif num % 2 == 0:
        return False

    sqrt_num = math.isqrt(num)
    for i in range(3, sqrt_num+1, 2):
        if num % i == 0:
            return False

    return True

def gcd(a, b):
    return math.gcd(a, b)

def lcm(a, b):
    return a // gcd(a, b) * b

def max(a, b, c):
    temp = max(a, b)
    return max(temp, c)

def min(a, b, c):
    temp = min(a, b)
    return min(temp, c)

def is_integer(num):
    return math.floor(num) == num

def factorial(num):
    if num == 0:
        return 1
    else:
        return num * factorial(num - 1)

def divisors(n):
    cnt = 0
    for i in range(1, int(math.sqrt(n))+1):
        if n % i == 0:
            cnt += 1
            if i * i != n:
                cnt += 1
    return cnt

def factorial_mod(n, mod):
    f = 1
    for i in range(2, n+1):
        f = f * (i % mod) % mod
    return f

def power_mod(x, n, mod):
    res = 1
    while n > 0:
        if n & 1:
            res = (res * x) % mod
        x = (x * x) % mod
        n >>= 1
    return res

def combination_mod(n, r, mod):
    if r > n - r:
        r = n - r
    if r == 0:
        return 1
    a = 1
    for i in range(r):
        a = a * ((n-i) % mod) % mod
    b = power_mod(factorial_mod(r, mod), mod-2, mod)
    return (a * b) % mod

def is_palindrome(s):
    return s == s[::-1]

k, a, b = map(int, input().split())
for i in range(a, b+1):
    if i % k == 0:
        print(""OK"")
        break
else:
    print(""NG"")","import math

def is_prime(num):
    if num < 2:
        return False
    elif num == 2:
        return True
    elif num % 2 == 0:
        return False

    sqrt_num = math.isqrt(num)
    for i in range(3, sqrt_num+1, 2):
        if num % i == 0:
            return False

    return True

def gcd(a, b):
    return math.gcd(a, b)

def lcm(a, b):
    return a // gcd(a, b) * b

def max(a, b, c):
    temp = max(a, b)
    return max(temp, c)

def min(a, b, c):
    temp = min(a, b)
    return min(temp, c)

def is_integer(num):
    return math.floor(num) == num

def factorial(num):
    if num == 0:
        return 1
    else:
        return num * factorial(num - 1)

def divisors(n):
    cnt = 0
    for i in range(1, int(math.sqrt(n))+1):
        if n % i == 0:
            cnt += 1
            if i * i != n:
                cnt += 1
    return cnt

def factorial_mod(n, mod):
    f = 1
    for i in range(2, n+1):
        f = f * (i % mod) % mod
    return f

def power_mod(x, n, mod):
    res = 1
    while n > 0:
        if n & 1:
            res = (res * x) % mod
        x = (x * x) % mod
        n >>= 1
    return res

def combination_mod(n, r, mod):
    if r > n - r:
        r = n - r
    if r == 0:
        return 1
    a = 1
    for i in range(r):
        a = a * ((n-i) % mod) % mod
    b = power_mod(factorial_mod(r, mod), mod-2, mod)
    return (a * b) % mod

def is_palindrome(s):
    return s == s[::-1]

k = int(input())
a, b = map(int, input().split())
for i in range(a, b+1):
    if i % k == 0:
        print(""OK"")
        break
else:
    print(""NG"")"
ChatGPT,codenet,C++,Python,s571373151.py,"n, m = map(int, input().split())

foods = [0] * m

for i in range(n):
    k = int(input())
    for j in range(k):
        temp = int(input()) - 1
        foods[temp] += 1

ans = sum(elem == n for elem in foods)
print(ans)","n, m = map(int, input().split())

foods = [0] * m

for i in range(n):
    inputs = list(input().split())
    k = int(inputs[0])
    for j in range(k):
        temp = int(inputs[j + 1]) - 1
        foods[temp] += 1

ans = sum(elem == n for elem in foods)
print(ans)"
ChatGPT,codenet,C++,Python,s754383079.py,"a = input()
n = len(a)
b = input()
m = len(b)
ans = float('inf')

for i in range(1, n - m + 2):
    sum = 0
    for j in range(1, m + 1):
        if a[i + j - 1] != b[j]:
            sum += 1
    ans = min(ans, sum)

print(ans)","a = input()
n = len(a)
b = input()
m = len(b)
ans = float('inf')

for i in range(1, n - m + 2):
    sum = 0
    for j in range(1, m):
        if a[i + j - 1] != b[j]:
            sum += 1
    ans = min(ans, sum)

print(ans)"
ChatGPT,codenet,C++,Python,s778828888.py,"n, m, x = map(int, input().split())
a = [0] * 105

for i in range(m):
    temp = int(input())
    a[temp] = 1

ansl = 0
ansr = 0
i = x

while i <= n:
    ansr += a[i]
    i += 1

i = x

while i >= 0:
    ansl += a[i]
    i -= 1

print(min(ansl, ansr))","n, m, x = map(int, input().split())
a = [0] * 105

inputs = list(input().split())
for i in range(m):
    temp = int(inputs[i])
    a[temp] = 1

ansl = 0
ansr = 0
i = x

while i <= n:
    ansr += a[i]
    i += 1

i = x

while i >= 0:
    ansl += a[i]
    i -= 1

print(min(ansl, ansr))"
ChatGPT,codenet,C++,Python,s807902500.py,"s, t = input().split()
s += s
print(""Yes"" if t in s else ""No"")","s, t = input(), input()
s += s
print(""Yes"" if t in s else ""No"")"
ChatGPT,codenet,C++,Python,s391054810.py,"h, w, hh, ww = map(int, input().split())
print((h-hh) * (w-ww))","h, w = map(int, input().split())
hh, ww = map(int, input().split())
print((h-hh) * (w-ww))"
ChatGPT,codenet,C++,Python,s353226283.py,"n, k = map(int, input().split())
vec = list(map(int, input().split()))
vec.sort()
ans = float('inf')
for i in range(n - k + 1):
    diff = vec[i + k - 1] - vec[i]
    if diff < ans:
        ans = diff
print(ans)","n, k = map(int, input().split())
vec = []
for i in range(n):
    vec.append(int(input()))
vec.sort()
ans = float('inf')
for i in range(n - k + 1):
    diff = vec[i + k - 1] - vec[i]
    if diff < ans:
        ans = diff
print(ans)"
ChatGPT,codenet,C++,Python,s934757053.py,"A = int(input())
B = int(input())
ans = 0
out = 1

while out < B:
    out -= 1
    out += A
    ans += 1

print(ans)","A, B = map(int, input().split())
ans = 0
out = 1

while out < B:
    out -= 1
    out += A
    ans += 1

print(ans)"
ChatGPT,codenet,C++,Python,s659042676.py,"a, b = map(int, input().split())
print(6 - a - b)","a, b = int(input()), int(input())
print(6 - a - b)"
ChatGPT,codenet,C++,Python,s154250720.py,"maps = []
num = []

while True:
    try:
        n = int(input())
        for _ in range(n):
            x = int(input())
            maps.append(x)
            num.append(x)
        
        maps.sort()
        m = n // 2
        
        for i in range(n):
            if num[i] <= maps[m]:
                print(maps[m+1])
            else:
                print(maps[m])
    except EOFError:
        break","maps = []
num = []

while True:
    try:
        n = int(input())
        inputs = list(input().split())
        for i in range(n):
            x = int(inputs[i])
            maps.append(x)
            num.append(x)
        
        maps.sort()
        m = n // 2
        
        for i in range(n):
            if num[i] <= maps[m]:
                print(maps[m+1])
            else:
                print(maps[m])
    except EOFError:
        break"
ChatGPT,codenet,C++,Python,s144923291.py,"import sys

def main():
    h, w = map(int, input().split())
    s = ""snuke""
    for i in range(h):
        for j in range(w):
            t = input().strip()
            if t == s:
                c = chr(ord('A') + j)
                print(c + str(i+1))
                return

if __name__ == ""__main__"":
    main()","import sys

def main():
    h, w = map(int, input().split())
    s = ""snuke""
    for i in range(h):
        inputs = input().split()
        for j in range(w):
            t = inputs[j]
            if t == s:
                c = chr(ord('A') + j)
                print(c + str(i+1))
                return

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,C++,Python,s876796799.py,"N = int(input())
a = list(map(int, input().split()))

ind_a = [0] * N
for i in range(N):
    ind_a[a[i] - 1] = i

used_inds = set()
ans = 0
for i in range(N):
    cur_ind = ind_a[i]
    left_it = used_inds.lower_bound(cur_ind)
    right_it = used_inds.lower_bound(cur_ind + 1)

    if left_it == used_inds.begin():
        left_border = -1
    else:
        left_it -= 1
        left_border = left_it

    if right_it == used_inds.end():
        right_border = N
    else:
        right_border = right_it

    ans += (cur_ind - left_border) * (right_border - cur_ind) * (i + 1)

    used_inds.add(cur_ind)

print(ans)","N = int(input())
a = list(map(int, input().split()))

ind_a = [0] * N
for i in range(N):
    ind_a[a[i] - 1] = i

used_inds = set()
ans = 0
for i in range(N):
    cur_ind = ind_a[i]
    left_it = max([x for x in used_inds if x < cur_ind] or [-1]) 
    right_it = min([x for x in used_inds if x > cur_ind] or [N])

    if left_it == -1:
        left_border = -1
    else:
        left_it -= 1
        left_border = left_it

    if right_it == N:
        right_border = N
    else:
        right_border = right_it

    ans += (cur_ind - left_border) * (right_border - cur_ind) * (i + 1)

    used_inds.add(cur_ind)

print(ans)"
ChatGPT,codenet,C++,Python,s976558978.py,"import sys

def main():
    a = int(sys.stdin.readline())
    b = int(sys.stdin.readline())
    if a < b:
        for i in range(b):
            print(a)
    else:
        for i in range(a):
            print(b)

if __name__ == ""__main__"":
    main()","import sys

def main():
    a, b = map(int, sys.stdin.readline().split())
    if a < b:
        for i in range(b):
            print(a, end='')
        print()
    else:
        for i in range(a):
            print(b, end='')
        print()

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,C++,Python,s654970460.py,"n = int(input())
a = []
for i in range(n):
    a.append(int(input()))
print(a[n-1], end='')
for i in range(1, n):
    print(' ', a[n-i-1], end='')
print()","n = int(input())
a = list(map(int, input().split()))
print(a[n-1], end=' ')
for i in range(1, n):
    print(a[n-i-1], end=' ')
print()"
ChatGPT,codenet,C++,Python,s526060174.py,"n, m = map(int, input().split())
x = [0] * 31
for i in range(n):
    k = int(input())
    for j in range(k):
        a = int(input())
        x[a] += 1
ans = 0
for i in range(1, m+1):
    if x[i] == n:
        ans += 1
print(ans)","n, m = map(int, input().split())
x = [0] * 31
for i in range(n):
    inputs = input().split()
    k = int(inputs[0])
    for j in range(k):
        a = int(inputs[j + 1])
        x[a] += 1
ans = 0
for i in range(1, m+1):
    if x[i] == n:
        ans += 1
print(ans)"
ChatGPT,codenet,C++,Python,s438448326.py,"A, B, C, D, E, F = map(int, input().split())

m1 = 0
m2 = 0
maxD = 0.0

for i in range(0, F//(100*A) + 1):
    mA = 100 * A * i
    for j in range(0, (F - mA) // (100*B) + 1):
        mB = 100 * B * j
        for k in range(0, (F - mA - mB) // C + 1):
            mC = C * k
            for l in range(0, (F - mA - mB - mC) // D + 1):
                mD = D * l
                if (mA + mB) * E / 100 < mD + mC:
                    break
                d = (mD + mC) / (mA + mB + mC + mD)
                if d > maxD:
                    m1 = mA + mB + mC + mD
                    m2 = mC + mD
                    maxD = d

if m1 == 0:
    m1 = 100 * A

print(m1, m2)","A, B, C, D, E, F = map(int, input().split())

m1 = 0
m2 = 0
maxD = 0.0

for i in range(0, F//(100*A) + 1):
    mA = 100 * A * i
    for j in range(0, (F - mA) // (100*B) + 1):
        mB = 100 * B * j
        for k in range(0, (F - mA - mB) // C + 1):
            mC = C * k
            for l in range(0, (F - mA - mB - mC) // D + 1):
                mD = D * l
                if (mA + mB) * E / 100 < mD + mC:
                    break
                if mA + mB + mC + mD == 0:
                    continue
                d = (mD + mC) / (mA + mB + mC + mD)
                if d > maxD:
                    m1 = mA + mB + mC + mD
                    m2 = mC + mD
                    maxD = d

if m1 == 0:
    m1 = 100 * A

print(m1, m2)"
ChatGPT,codenet,C++,Python,s345215315.py,"import sys
input = sys.stdin.readline

def dfs(x, y, cnt):
    global ans
    if cnt > 20:
        return
    if x == h-1:
        ans = min(ans, cnt)
        return
    for i in range(8):
        nx = x + dx[i]
        ny = y + dy[i]
        if nx < 0 or nx >= h or ny < 0 or ny >= w:
            continue
        if s[nx][ny] != 'X':
            continue
        c = True
        while c and s[nx][ny] == 'X':
            s[nx][ny] = '.'
            nx += dx[i]
            ny += dy[i]
            if nx < 0 or nx >= h or ny < 0 or ny >= w:
                if nx >= h:
                    ans = min(ans, cnt+1)
                c = False
        if c:
            dfs(nx, ny, cnt+1)
        while nx != x or ny != y:
            nx -= dx[i]
            ny -= dy[i]
            s[nx][ny] = 'X'
        s[x][y] = '.'

h = 19
w = 15
dx = [0, 1, 0, -1, 1, 1, -1, -1]
dy = [1, 0, -1, 0, 1, -1, 1, -1]
s = []
for _ in range(h):
    s.append(input().strip())

ans = float('inf')
sx, sy = 0, 0
for i in range(h):
    for j in range(w):
        if s[i][j] == 'O':
            sx, sy = i, j
            s[i][j] = '.'

dfs(sx, sy, 0)

if ans == float('inf'):
    print(-1)
else:
    print(ans)","import sys
input = sys.stdin.readline

def dfs(x, y, cnt):
    global ans
    if cnt > 20:
        return
    if x == h-1:
        ans = min(ans, cnt)
        return
    for i in range(8):
        nx = x + dx[i]
        ny = y + dy[i]
        if nx < 0 or nx >= h or ny < 0 or ny >= w:
            continue
        if s[nx][ny] != 'X':
            continue
        c = True
        while c and s[nx][ny] == 'X':
            s[nx] = s[i][:ny] + '.' + s[i][ny + 1:]
            nx += dx[i]
            ny += dy[i]
            if nx < 0 or nx >= h or ny < 0 or ny >= w:
                if nx >= h:
                    ans = min(ans, cnt+1)
                c = False
        if c:
            dfs(nx, ny, cnt+1)
        while nx != x or ny != y:
            nx -= dx[i]
            ny -= dy[i]
            s[nx] = s[i][:ny] + 'X' + s[i][ny + 1:]
        s[x] = s[i][:y] + '.' + s[i][y + 1:]

h = 19
w = 15
dx = [0, 1, 0, -1, 1, 1, -1, -1]
dy = [1, 0, -1, 0, 1, -1, 1, -1]
s = []
for _ in range(h):
    s.append(input().strip())

ans = float('inf')
sx, sy = 0, 0
for i in range(h):
    for j in range(w):
        if s[i][j] == 'O':
            sx, sy = i, j
            s[i] = s[i][:j] + '.' + s[i][j + 1:]

dfs(sx, sy, 0)

if ans == float('inf'):
    print(-1)
else:
    print(ans)"
ChatGPT,codenet,C++,Python,s209567491.py,"import sys
input = sys.stdin.readline
N, D, X = map(int, input().split())
A = list(map(int, input().split()))

num_of_chocolate = 0
for i in range(N):
    days = 0
    counter = 0
    for j in range(0, 101):
        days = j * A[i] + 1
        if days <= D:
            counter += 1
        else:
            break
    num_of_chocolate += counter

num_of_chocolate += X

print(num_of_chocolate)","import sys
input = sys.stdin.readline
N = int(input())
D, X = map(int, input().split())
A = []
for i in range(N):
    A.append(int(input()))

num_of_chocolate = 0
for i in range(N):
    days = 0
    counter = 0
    for j in range(0, 101):
        days = j * A[i] + 1
        if days <= D:
            counter += 1
        else:
            break
    num_of_chocolate += counter

num_of_chocolate += X

print(num_of_chocolate)"
ChatGPT,codenet,C++,Python,s003531724.py,"import sys
sys.setrecursionlimit(10**6)

def dfs(x, l):
    global cnt, d, ok
    vis[x] = True
    cnt[l] += 1
    d[x] = l
    i = u[x]
    while i:
        if not vis[e[i].to]:
            dfs(e[i].to, (l + e[i].c) % 3)
        elif (l + e[i].c) % 3 != d[e[i].to]:
            ok = False
        i = e[i].pre

n, m = map(int, input().split())
u = [0] * (n + 1)
e = [0] * (m * 2 + 1)
l = 0
for i in range(1, m + 1):
    a, b = map(int, input().split())
    l += 1
    e[l] = [b, u[a], 1]
    u[a] = l
    l += 1
    e[l] = [a, u[b], 2]
    u[b] = l

cnt = [0] * 3
d = [0] * (n + 1)
ans = 0
for i in range(1, n + 1):
    vis = [False] * (n + 1)
    if not vis[i]:
        T = 0
        for j in range(3):
            cnt[j] = 0
        ok = True
        dfs(i, 0)
        s = cnt[0] + cnt[1] + cnt[2]
        if not ok:
            ans += s * s
        else:
            if cnt[0] and cnt[1] and cnt[2]:
                ans += cnt[0] * cnt[1] + cnt[1] * cnt[2] + cnt[2] * cnt[0]
            else:
                ans += T // 2
print(ans)","import sys
sys.setrecursionlimit(10**6)

def dfs(x, l):
    global cnt, d, ok
    vis[x] = True
    cnt[l] += 1
    d[x] = l
    i = u[x]
    while i:
        if not vis[e[i].to]:
            dfs(e[i].to, (l + e[i].c) % 3)
        elif (l + e[i].c) % 3 != d[e[i].to]:
            ok = False
        i = e[i].pre

n, m = map(int, input().split())
u = [0] * (n + 1)
e = [0] * (m * 2 + 1)
l = 0
for i in range(1, m + 1):
    a, b = map(int, input().split())
    l += 1
    e[l] = [b, u[a], 1]
    u[a] = l
    l += 1
    e[l] = [a, u[b], 2]
    u[b] = l

cnt = [0] * 3
d = [0] * (n + 1)
ans = 0
for i in range(1, n + 1):
    vis = [False] * (n + 1)
    if not vis[i]:
        T = 0
        for j in range(3):
            cnt[j] = 0
        ok = True
        dfs(i, 0)
        s = cnt[0] + cnt[1] + cnt[2]
        if not ok:
            ans += s * s
        else:
            if cnt[0] and cnt[1] and cnt[2]:
                ans += cnt[0] * cnt[1] + cnt[1] * cnt[2] + cnt[2] * cnt[0]
            else:
                ans += T // 2
print(ans)"
ChatGPT,codenet,C++,Python,s240156356.py,"str1, str2 = input().split()

str1 = sorted(str1)
str2 = sorted(str2, reverse=True)

loop = min(len(str1), len(str2))
flag = False

for i in range(loop):
    ch1 = str1[i]
    ch2 = str2[i]

    if ch1 == ch2:
        if loop == i + 1 and len(str1) < len(str2):
            flag = True
            break
        else:
            continue
    else:
        if ch2 > ch1:
            flag = True
            break
        else:
            break

if flag:
    print(""Yes"")
else:
    print(""No"")","str1, str2 = input(), input()

str1 = sorted(str1)
str2 = sorted(str2, reverse=True)

loop = min(len(str1), len(str2))
flag = False

for i in range(loop):
    ch1 = str1[i]
    ch2 = str2[i]

    if ch1 == ch2:
        if loop == i + 1 and len(str1) < len(str2):
            flag = True
            break
        else:
            continue
    else:
        if ch2 > ch1:
            flag = True
            break
        else:
            break

if flag:
    print(""Yes"")
else:
    print(""No"")"
ChatGPT,codenet,C++,Python,s110965154.py,"def sort(a_rvecIntValue):
 
    for i in range(len(a_rvecIntValue)):
 
        if i != 0:
 
            iIntValue = a_rvecIntValue[i]
            j = i - 1
            while j >= 0 and a_rvecIntValue[j] > iIntValue:
                a_rvecIntValue[j + 1] = a_rvecIntValue[j]
                j -= 1
            a_rvecIntValue[j + 1] = iIntValue
 
        for k in range(len(a_rvecIntValue)):
            print(a_rvecIntValue[k], end='')
            if k != len(a_rvecIntValue) - 1:
                print(' ', end='')
        print()
 
iNum = int(input())
vecIntValue = []
for _ in range(iNum):
    iIntValue = int(input())
    vecIntValue.append(iIntValue)
 
sort(vecIntValue)","def sort(a_rvecIntValue):
 
    for i in range(len(a_rvecIntValue)):
 
        if i != 0:
 
            iIntValue = a_rvecIntValue[i]
            j = i - 1
            while j >= 0 and a_rvecIntValue[j] > iIntValue:
                a_rvecIntValue[j + 1] = a_rvecIntValue[j]
                j -= 1
            a_rvecIntValue[j + 1] = iIntValue
 
        for k in range(len(a_rvecIntValue)):
            print(a_rvecIntValue[k], end='')
            if k != len(a_rvecIntValue) - 1:
                print(' ', end='')
        print()
 
iNum = int(input())
vecIntValue = list(map(int, input().split()))
 
sort(vecIntValue)"
ChatGPT,codenet,C++,Python,s150958471.py,"train = [0, 0]
bus = [0, 0]

train[0], train[1] = map(int, input().split())
bus[0], bus[1] = map(int, input().split())

print(min(train[0], train[1]) + min(bus[0], bus[1]))","train = [0, 0]
bus = [0, 0]

train[0], train[1] = int(input()), int(input())
bus[0], bus[1] = int(input()), int(input())

print(min(train[0], train[1]) + min(bus[0], bus[1]))"
ChatGPT,codenet,C++,Python,s644382798.py,"class P:
    def __init__(self, name, t):
        self.name = name
        self.t = t

Q = []
head = 0
tail = 0
n = 0

def enqueue(x):
    global tail
    Q.append(x)
    tail = (tail + 1) % LEN

def dequeue():
    global head
    x = Q[head]
    head = (head + 1) % LEN
    return x

def min(a, b):
    return a if a < b else b

elaps = 0
c = 0
i = 0
q = 0
u = None

n, q = map(int, input().split())

for i in range(1, n+1):
    name, t = input().split()
    Q.append(P(name, int(t)))
tail = n + 1

while head != tail:
    u = dequeue()
    c = min(q, u.t)
    u.t -= c
    elaps += c
    if u.t > 0:
        enqueue(u)
    else:
        print(u.name, elaps)","LEN = 100005
class P:
    def __init__(self, name, t):
        self.name = name
        self.t = t

Q = []
head = 0
tail = 0
n = 0

def enqueue(x):
    global tail
    Q.append(x)
    tail = (tail + 1) % LEN

def dequeue():
    global head
    x = Q[head]
    head = (head + 1) % LEN
    return x

def min(a, b):
    return a if a < b else b

elaps = 0
c = 0
i = 0
q = 0
u = None

n, q = map(int, input().split())

for i in range(1, n+1):
    name, t = input().split()
    Q.append(P(name, int(t)))
tail = n + 1

while head != tail:
    u = dequeue()
    c = min(q, u.t)
    u.t -= c
    elaps += c
    if u.t > 0:
        enqueue(u)
    else:
        print(u.name, elaps)"
ChatGPT,codenet,C++,Python,s663381244.py,"m = [10, 50, 100, 500]

while True:
    money = int(input())
    if money == 0:
        break
    
    if money != 0:
        sum = 0
        num = [0] * 4
        for i in range(4):
            num[i] = int(input())
            sum += num[i] * m[i]
        
        change = sum - money
        for i in range(3, -1, -1):
            if change // m[i]:
                num[i] = num[i] - change // m[i]
                change %= m[i]
        
        for i in range(4):
            if num[i] > 0:
                print(m[i], num[i])","m = [10, 50, 100, 500]

while True:
    money = int(input())
    if money == 0:
        break
    
    if money != 0:
        sum = 0
        num = [0] * 4
        inputs = list(input().split())
        for i in range(4):
            num[i] = int(inputs[i])
            sum += num[i] * m[i]
        
        change = sum - money
        for i in range(3, -1, -1):
            if change // m[i]:
                num[i] = num[i] - change // m[i]
                change %= m[i]
        
        for i in range(4):
            if num[i] > 0:
                print(m[i], num[i])
        print()"
ChatGPT,codenet,C++,Python,s107598592.py,"N = int(input())
X = []
Y = []

for i in range(N):
    X.append(int(input()))
    Y.append(X[i])

Y.sort()

y = Y[N//2]

for i in range(N):
    if X[i] < Y[N//2]:
        print(Y[N//2])
    else:
        print(Y[N//2 - 1])","N = int(input())
X = []
Y = []

inputs = list(input().split())
for i in range(N):
    X.append(int(inputs[i]))
    Y.append(X[i])

Y.sort()

y = Y[N//2]

for i in range(N):
    if X[i] < Y[N//2]:
        print(Y[N//2])
    else:
        print(Y[N//2 - 1])"
ChatGPT,codenet,C++,Python,s064900223.py,"p = []
n = int(input())
for i in range(n):
    p.append(int(input()))

ans = 0
for i in range(n-1):
    if p[i] == i+1:
        p[i+1] = p[i]
        ans += 1

if p[n-1] == n:
    ans += 1

print(ans)","n = int(input())
p = list(map(int, input().split()))

ans = 0
for i in range(n-1):
    if p[i] == i+1:
        p[i+1] = p[i]
        ans += 1

if p[n-1] == n:
    ans += 1

print(ans)"
ChatGPT,codenet,C++,Python,s285212630.py,"from collections import defaultdict

def dfs(x, p, r, l):
    U[0][x] = p
    R[x] = r
    L[x] = l
    for t, d in G[x]:
        if t == p:
            continue
        dfs(t, x, r + 1, l + d)

def lca(a, b):
    if R[a] > R[b]:
        a, b = b, a
    for k in range(MAX_L):
        if (R[b] - R[a]) >> k & 1:
            b = U[k][b]
    if a == b:
        return a
    for k in range(MAX_L - 1, -1, -1):
        if U[k][a] != U[k][b]:
            a = U[k][a]
            b = U[k][b]
    return U[0][a]

def dist(x, y):
    g = lca(x, y)
    return L[x] + L[y] - 2 * L[g]

N = int(input())
G = defaultdict(list)
U = [[-1 for _ in range(N)] for _ in range(MAX_L)]
R = [0 for _ in range(N)]
L = [0 for _ in range(N)]
for _ in range(N-1):
    a, b, c = map(int, input().split())
    a -= 1
    b -= 1
    G[a].append((b, c))
    G[b].append((a, c))
dfs(0, -1, 0, 0)
for i in range(MAX_L - 1):
    for v in range(N):
        if U[i][v] == -1:
            U[i + 1][v] = -1
        U[i + 1][v] = U[i][U[i][v]]
Q, K = map(int, input().split())
K -= 1
for _ in range(Q):
    x, y = map(int, input().split())
    x -= 1
    y -= 1
    print(dist(x, K) + dist(K, y))","from collections import defaultdict

MAX_L = 22
 
def dfs(x, p, r, l):
    U[0][x] = p
    R[x] = r
    L[x] = l
    for t, d in G[x]:
        if t == p:
            continue
        dfs(t, x, r + 1, l + d)

def lca(a, b):
    if R[a] > R[b]:
        a, b = b, a
    for k in range(MAX_L):
        if (R[b] - R[a]) >> k & 1:
            b = U[k][b]
    if a == b:
        return a
    for k in range(MAX_L - 1, -1, -1):
        if U[k][a] != U[k][b]:
            a = U[k][a]
            b = U[k][b]
    return U[0][a]

def dist(x, y):
    g = lca(x, y)
    return L[x] + L[y] - 2 * L[g]

N = int(input())
G = defaultdict(list)
U = [[-1 for _ in range(N)] for _ in range(MAX_L)]
R = [0 for _ in range(N)]
L = [0 for _ in range(N)]
for _ in range(N-1):
    a, b, c = map(int, input().split())
    a -= 1
    b -= 1
    G[a].append((b, c))
    G[b].append((a, c))
dfs(0, -1, 0, 0)
for i in range(MAX_L - 1):
    for v in range(N):
        if U[i][v] == -1:
            U[i + 1][v] = -1
        U[i + 1][v] = U[i][U[i][v]]
Q, K = map(int, input().split())
K -= 1
for _ in range(Q):
    x, y = map(int, input().split())
    x -= 1
    y -= 1
    print(dist(x, K) + dist(K, y))"
ChatGPT,codenet,C++,Python,s028542090.py,"k = int(input())
a = []

for i in range(k):
    a.append(int(input()))

max_val = 3
min_val = 2

if a[k - 1] != 2:
    print(-1)
    exit(0)

for i in range(k - 2, -1, -1):
    if a[i] > max_val:
        print(-1)
        exit(0)
    else:
        max_val = ((max_val // a[i]) + 1) * a[i] - 1
        if min_val % a[i] != 0:
            min_val = ((min_val // a[i]) + 1) * a[i]

    if max_val <= min_val:
        print(-1)
        exit(0)

print(min_val, max_val)","k = int(input())
a = list(map(int, input().split()))

max_val = 3
min_val = 2

if a[k - 1] != 2:
    print(-1)
    exit(0)

for i in range(k - 2, -1, -1):
    if a[i] > max_val:
        print(-1)
        exit(0)
    else:
        max_val = ((max_val // a[i]) + 1) * a[i] - 1
        if min_val % a[i] != 0:
            min_val = ((min_val // a[i]) + 1) * a[i]

    if max_val <= min_val:
        print(-1)
        exit(0)

print(min_val, max_val)"
ChatGPT,codenet,C++,Python,s716198307.py,"import numpy as np

n = int(input())
a = []
avg = 0

for i in range(n):
    num = int(input())
    a.append(num)
    avg += num

avg /= n
s = abs(a[0] - avg)
ans = 0

for i in range(1, n):
    if s > abs(a[i] - avg):
        s = abs(a[i] - avg)
        ans = i

print(ans)","import numpy as np

n = int(input())
a = []
avg = 0

inputs = list(input().split())
for i in range(n):
    num = int(inputs[i])
    a.append(num)
    avg += num

avg /= n
s = abs(a[0] - avg)
ans = 0

for i in range(1, n):
    if s > abs(a[i] - avg):
        s = abs(a[i] - avg)
        ans = i

print(ans)"
ChatGPT,codenet,C++,Python,s990022717.py,"n, k, x, y = map(int, input().split())
sum = 0
for i in range(1, n+1):
    if i > k:
        sum += y
    else:
        sum += x
print(sum)","n, k, x, y = int(input()), int(input()), int(input()), int(input())
sum = 0
for i in range(1, n+1):
    if i > k:
        sum += y
    else:
        sum += x
print(sum)"
ChatGPT,codenet,C++,Python,s798006876.py,"MAX_N = 1e3
data = [0] * MAX_N

while True:
    m, nmi, nma = map(int, input().split())
    if nmi == 0:
        break
    
    for i in range(m):
        data[i] = int(input())
    
    ma = 0
    ans = 0
    for i in range(nmi-1, nma):
        if ma <= data[i] - data[i+1]:
            ans = i+1
            ma = data[i] - data[i+1]
    
    print(ans)","MAX_N = int(1e3)
data = [0] * MAX_N

while True:
    m, nmi, nma = map(int, input().split())
    if nmi == 0:
        break
    
    for i in range(m):
        data[i] = int(input())
    
    ma = 0
    ans = 0
    for i in range(nmi-1, nma):
        if ma <= data[i] - data[i+1]:
            ans = i+1
            ma = data[i] - data[i+1]
    
    print(ans)"
ChatGPT,codenet,C++,Python,s208784214.py,"N, A = map(int, input().split())
print(""Yes"" if N % 500 <= A else ""No"")","N, A = int(input()), int(input())
print(""Yes"" if N % 500 <= A else ""No"")"
ChatGPT,codenet,C++,Python,s299205600.py,"a = int(input())
b = int(input())

if a > b:
    result = 2 * a - 1
elif a == b:
    result = 2 * a
else:
    result = 2 * b - 1","a, b = map(int, input().split())

if a > b:
    result = 2 * a - 1
elif a == b:
    result = 2 * a
else:
    result = 2 * b - 1
print(result)"
ChatGPT,codenet,C++,Python,s522742913.py,"import math

source = input()

if len(source) > 10 or len(source) < 1:
  exit()

max_i = int(math.pow(2, len(source) - 1))

sum = 0

for i in range(max_i):
  plus = bin(i)[2:]

  number = 0

  working = source
  while any(plus):
    i = 0
    while not plus[i]:
      i += 1
    sum += float(working[:i + 1])
    plus = plus[i + 1:]
    working = working[i + 1:]
  sum += float(working)

print(""{:.0f}"".format(sum))","import math

source = input()

if len(source) > 10 or len(source) < 1:
  exit()

max_i = int(math.pow(2, len(source) - 1))

sum = 0

for i in range(max_i):
  plus = bin(i)[2:]

  number = 0

  working = source
  while any(plus):
    i = 0
    while not plus[i]:
      i += 1
    sum += float(working[:i + 1])
    plus = plus[i + 1:]
    working = working[i + 1:]
  sum += float(working)

print(""{:.0f}"".format(sum))"
ChatGPT,codenet,C++,Python,s978355948.py,"N, X = map(int, input().split())
L = list(map(int, input().split()))

i = 0
d = 0
for i in range(N):
    d = d + L[i]
    if d > X:
        break","N, X = map(int, input().split())
L = list(map(int, input().split()))

i = 0
d = 0
for i in range(N):
    d = d + L[i]
    if d > X:
        break
print(i + 1)"
ChatGPT,codenet,C++,Python,s877835664.py,"import math

def gcd(a, b):
    return b if a % b == 0 else gcd(b, a % b)

def lcm(a, b):
    return a // gcd(a, b) * b

def getPrimeFactor(n):
    res = {}
    i = 2
    while i * i <= n:
        while n % i == 0:
            if i in res:
                res[i] += 1
            else:
                res[i] = 1
            n //= i
        i += 1
    if n != 1:
        res[n] = 1
    return res

def isPrimeNumber(num):
    if num <= 2:
        return True
    elif num % 2 == 0:
        return False
    sqrtNum = int(math.sqrt(num))
    for i in range(3, sqrtNum + 1, 2):
        if num % i == 0:
            return False
    return True

def modinv(a, m):
    b, u, v = m, 1, 0
    while b:
        t = a // b
        a -= t * b
        a, b = b, a
        u -= t * v
        u, v = v, u
    u %= m
    if u < 0:
        u += m
    return u

N, K = map(int, input().split())

A = [0] + list(map(int, input().split()))

cur = 1
dic = [-1] * (N + 1)
flg = False

for i in range(1, K + 1):
    if dic[cur] < 0 or flg:
        dic[cur] = i
        cur = A[cur]
    elif not flg:
        tmp = K - (dic[cur] - 1)
        tmp %= i - dic[cur]
        i = K - tmp
        flg = True

print(cur)","import math

def gcd(a, b):
    return b if a % b == 0 else gcd(b, a % b)

def lcm(a, b):
    return a // gcd(a, b) * b

def getPrimeFactor(n):
    res = {}
    i = 2
    while i * i <= n:
        while n % i == 0:
            if i in res:
                res[i] += 1
            else:
                res[i] = 1
            n //= i
        i += 1
    if n != 1:
        res[n] = 1
    return res

def isPrimeNumber(num):
    if num <= 2:
        return True
    elif num % 2 == 0:
        return False
    sqrtNum = int(math.sqrt(num))
    for i in range(3, sqrtNum + 1, 2):
        if num % i == 0:
            return False
    return True

def modinv(a, m):
    b, u, v = m, 1, 0
    while b:
        t = a // b
        a -= t * b
        a, b = b, a
        u -= t * v
        u, v = v, u
    u %= m
    if u < 0:
        u += m
    return u

N, K = map(int, input().split())

A = [0] + list(map(int, input().split()))

cur = 1
dic = [-1] * (N + 1)
flg = False

for i in range(1, K + 1):
    if dic[cur] < 0 or flg:
        dic[cur] = i
        cur = A[cur]
    elif not flg:
        tmp = K - (dic[cur] - 1)
        tmp %= i - dic[cur]
        i = K - tmp
        flg = True

print(cur)"
ChatGPT,codenet,C++,Python,s329154546.py,"import sys

N, L = map(int, sys.stdin.readline().split())
S = [sys.stdin.readline().strip() for _ in range(N)]
S.sort()

for s in S:
    print(s)","import sys

N, L = map(int, sys.stdin.readline().split())
S = [sys.stdin.readline().strip() for _ in range(N)]
S.sort()

for s in S:
    print(s, end='')
print()"
ChatGPT,codenet,C++,Python,s847126533.py,"def check(n, wei, book):
    tmp = wei
    n -= 1
    for i in range(len(book)):
        if tmp < book[i]:
            if n > 0:
                n -= 1
                tmp = wei
                if tmp < book[i]:
                    return False
            else:
                return False
        tmp -= book[i]
    return True

while True:
    m, n = map(int, input().split())
    if m == 0 and n == 0:
        break
    book = list(map(int, input().split()))

    l = 0
    r = 1500000
    ans = 0
    while l < r:
        if check(m, (l+r)//2, book):
            ans = (l+r)//2
            if r == (l+r)//2:
                break
            r = (l+r)//2
        else:
            if l == (l+r)//2:
                break
            l = (l+r)//2
    print(ans)","def check(n, wei, book):
    tmp = wei
    n -= 1
    for i in range(len(book)):
        if tmp < book[i]:
            if n > 0:
                n -= 1
                tmp = wei
                if tmp < book[i]:
                    return False
            else:
                return False
        tmp -= book[i]
    return True

while True:
    m, n = map(int, input().split())
    if m == 0 and n == 0:
        break
    book = []
    for i in range(n):
        book.append(int(input()))

    l = 0
    r = 1500000
    ans = 0
    while l < r:
        if check(m, (l+r)//2, book):
            ans = (l+r)//2
            if r == (l+r)//2:
                break
            r = (l+r)//2
        else:
            if l == (l+r)//2:
                break
            l = (l+r)//2
    print(ans)"
ChatGPT,codenet,C++,Python,s700281300.py,"n = int(input())

for _ in range(n):
    s = input()

    st = set()
    st.add(s)

    for j in range(1, len(s)):
        res = s[:j]
        res2 = s[j:]

        t = res
        t2 = res2

        st.add(t + t2)
        st.add(t2 + t)

        st.add(t + res2)
        st.add(res2 + t)

        st.add(res + t2)
        st.add(t2 + res)

        st.add(res + res2)
        st.add(res2 + res)

    print(len(st))","n = int(input())

for _ in range(n):
    s = input()

    st = set()
    st.add(s)

    for j in range(1, len(s)):
        res = s[:j]
        res2 = s[j:]

        t = res
        res = res[::-1]
        t2 = res2
        res2 = res2[::-1]
        
        st.add(t + t2)
        st.add(t2 + t)

        st.add(t + res2)
        st.add(res2 + t)

        st.add(res + t2)
        st.add(t2 + res)

        st.add(res + res2)
        st.add(res2 + res)

    print(len(st))"
ChatGPT,codenet,C++,Python,s129088151.py,"n = int(input())
T = {}

for i in range(n):
    com, string = input().split()
    if com == 'i':
        T[string] = True
    else:
        if string in T:
            print(""yes"")
        else:
            print(""no"")","n = int(input())
T = {}

for i in range(n):
    com, string = input().split()
    if com[0] == 'i':
        T[string] = True
    else:
        if string in T:
            print(""yes"")
        else:
            print(""no"")"
ChatGPT,codenet,C++,Python,s323743606.py,"import sys

m = {}
for i in range(26):
    for j in range(17):
        for k in range(11):
            w = i * 200 + j * 300 + k * 500
            p = i // 5 * 5 * 380 * 0.8 + i % 5 * 380 + j // 4 * 4 * 550 * 0.85 + j % 4 * 550 + k // 3 * 3 * 850 * 0.88 + k % 3 * 850
            if w in m:
                m[w] = min(m[w], p)
            else:
                m[w] = p

for line in sys.stdin:
    n = int(line)
    if n == 0:
        break
    print(m[n])","import sys

m = {}
for i in range(26):
    for j in range(17):
        for k in range(11):
            w = i * 200 + j * 300 + k * 500
            p = i // 5 * 5 * 380 * 0.8 + i % 5 * 380 + j // 4 * 4 * 550 * 0.85 + j % 4 * 550 + k // 3 * 3 * 850 * 0.88 + k % 3 * 850
            if w in m:
                m[w] = min(m[w], p)
            else:
                m[w] = p

for line in sys.stdin:
    n = int(line)
    if n == 0:
        break
    print(int(m[n]))"
ChatGPT,codenet,C++,Python,s550008428.py,"s = int(input())
a = set()
a.add(s)
d = 2

while True:
    if s % 2 == 0:
        x = s // 2
        if x in a:
            print(d)
            break
        a.add(x)
    else:
        x = 3 * s + 1
        if x in a:
            print(d)
            break
        a.add(x)
    s = x
    d += 1

print(d)","s = int(input())
a = set()
a.add(s)
d = 2

while True:
    if s % 2 == 0:
        x = s // 2
        if x in a:
            print(d)
            exit()
        a.add(x)
    else:
        x = 3 * s + 1
        if x in a:
            print(d)
            exit()
        a.add(x)
    s = x
    d += 1

print(d)"
ChatGPT,codenet,C++,Python,s121463387.py,"n = int(input())

for i in range(1, n+1):
  x = i
  s = str(x)
  if x % 3 == 0 or x % 10 == 3:
    print("" "", i, end="""")
    continue
  else:
    k = len(s)
    while k > 0:
      k = k - 1
      j = pow(10, k)
      if (x // j) % 10 == 3:
        print("" "", i, end="""")
        break","n = int(input())

for i in range(1, n+1):
  x = i
  s = str(x)
  if x % 3 == 0 or x % 10 == 3:
    print(i, end="" "")
    continue
  else:
    k = len(s)
    while k > 0:
      k = k - 1
      j = pow(10, k)
      if (x // j) % 10 == 3:
        print(i, end="" "")
        break"
ChatGPT,codenet,C++,Python,s014089689.py,"n = int(input())
s = input()
cnt = 0
i = 0
while i < n:
    cnt += 1
    j = i + 1
    while j < n:
        if s[i] != s[j]:
            break
        j += 1
    i = j - 1
print(cnt)","n = int(input())
s = input()
cnt = 0
i = 0
while i < n:
    cnt += 1
    j = i + 1
    while j < n:
        if s[i] != s[j]:
            break
        j += 1
    i = j - 1
    i += 1
print(cnt)"
ChatGPT,codenet,C++,Java,s343804973.java,"import java.util.Scanner;

public class s343804973 {
    static long[][] C = new long[310][310];
    static long[][] pre = new long[310][310];
    static long[][] f = new long[310][310];

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        long m = sc.nextLong();
        long mod = sc.nextLong();
        C[0][0] = 1;
        for (int i = 1; i <= n; i++) {
            C[i][0] = C[i][i] = 1;
            for (int j = 1; j < i; j++) {
                C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % mod;
            }
        }
        for (int i = 0; i <= m; i++) {
            f[1][i] = 1;
            pre[1][i] = m - i + 1;
        }
        for (int i = 2; i <= n + 1; i++) {
            for (int j = 0; j <= m; j++) {
                for (int k = 1; k < i; k++) {
                    f[i][j] += f[i - k][j] * pre[k][j + 1] % mod * C[i - 2][k - 1] % mod;
                    f[i][j] %= mod;
                }
            }
            for (int j = m; j >= 0; j--) {
                pre[i][j] = (pre[i][j + 1] + f[i][j]) % mod;
            }
        }
        System.out.println(f[n + 1][0]);
    }
}","import java.util.Scanner;

public class Main {
    static long[][] C = new long[310][310];
    static long[][] pre = new long[310][310];
    static long[][] f = new long[310][310];

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        long m = sc.nextLong();
        long mod = sc.nextLong();
        C[0][0] = 1;
        for (int i = 1; i <= n; i++) {
            C[i][0] = C[i][i] = 1;
            for (int j = 1; j < i; j++) {
                C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % mod;
            }
        }
        for (int i = 0; i <= m; i++) {
            f[1][i] = 1;
            pre[1][i] = m - i + 1;
        }
        for (int i = 2; i <= n + 1; i++) {
            for (int j = 0; j <= m; j++) {
                for (int k = 1; k < i; k++) {
                    f[i][j] += f[i - k][j] * pre[k][j + 1] % mod * C[i - 2][k - 1] % mod;
                    f[i][j] %= mod;
                }
            }
            for (int j = (int) m; j >= 0; j--) {
                pre[i][j] = (pre[i][j + 1] + f[i][j]) % mod;
            }
        }
        System.out.println(f[(int) n + 1][0]);
    }
}"
ChatGPT,codenet,C++,Java,s240627521.java,"import java.util.*;
import java.lang.*;
import java.io.*;

public class s240627521 {
    public static void main(String[] args) throws java.lang.Exception {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        ArrayList<Long> A = new ArrayList<>();
        for (int i = 0; i < N; ++i) {
            A.add(sc.nextLong());
        }
        Collections.sort(A, Collections.reverseOrder());
        int index;
        long max = Integer.MAX_VALUE;
        for (int i = 1; i < N; ++i) {
            if (max > Math.abs(A.get(0) - 2 * A.get(i))) {
                max = Math.abs(A.get(0) - 2 * A.get(i));
                index = i;
            }
        }
        System.out.println(A.get(0) + "" "" + A.get(index));
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws java.lang.Exception {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        ArrayList<Long> A = new ArrayList<>();
        for (int i = 0; i < N; ++i) {
            A.add(sc.nextLong());
        }
        Collections.sort(A, Collections.reverseOrder());
        int index = 0;;
        long max = Integer.MAX_VALUE;
        for (int i = 1; i < N; ++i) {
            if (max > Math.abs(A.get(0) - 2 * A.get(i))) {
                max = Math.abs(A.get(0) - 2 * A.get(i));
                index = i;
            }
        }
        System.out.println(A.get(0) + "" "" + A.get(index));
    }
}"
ChatGPT,codenet,C++,Java,s571001771.java,"import java.util.Scanner;

public class s571001771 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        long[] key = new long[1005];
        long[] cost = new long[1005];
        long[][] dp = new long[(1 << 12) + 5][1005];
        final long INF = 123456789012;

        for (int i = 0; i < (1 << 12) + 5; i++) {
            for (int j = 0; j < 1005; j++) {
                dp[i][j] = INF;
            }
        }

        dp[0][0] = 0;

        for (int i = 1; i <= m; i++) {
            cost[i] = scanner.nextLong();
            int b = scanner.nextInt();
            for (int j = 0; j < b; j++) {
                int c = scanner.nextInt();
                key[i] += (1 << (c - 1));
            }
        }

        for (int i = 0; i < (1 << n); i++) {
            for (int j = 0; j < m; j++) {
                dp[i][j + 1] = Math.min(dp[i][j], dp[i][j + 1]);
                dp[i | key[j + 1]][j + 1] = Math.min(dp[i | key[j + 1]][j + 1], dp[i][j] + cost[j + 1]);
            }
        }

        if (dp[(1 << n) - 1][m] == INF)
            System.out.println(-1);
        else
            System.out.println(dp[(1 << n) - 1][m]);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        long[] key = new long[1005];
        long[] cost = new long[1005];
        long[][] dp = new long[(1 << 12) + 5][1005];
        final long INF = 123456789012L;

        for (int i = 0; i < (1 << 12) + 5; i++) {
            for (int j = 0; j < 1005; j++) {
                dp[i][j] = INF;
            }
        }

        dp[0][0] = 0;

        for (int i = 1; i <= m; i++) {
            cost[i] = scanner.nextLong();
            int b = scanner.nextInt();
            for (int j = 0; j < b; j++) {
                int c = scanner.nextInt();
                key[i] += (1 << (c - 1));
            }
        }

        for (int i = 0; i < (1 << n); i++) {
            for (int j = 0; j < m; j++) {
                dp[i][j + 1] = Math.min(dp[i][j], dp[i][j + 1]);
                dp[(int) (i | key[j + 1])][j + 1] = Math.min(dp[(int) (i | key[j + 1])][j + 1], dp[i][j] + cost[j + 1]);
            }
        }

        if (dp[(1 << n) - 1][m] == INF)
            System.out.println(-1);
        else
            System.out.println(dp[(1 << n) - 1][m]);
    }
}"
ChatGPT,codenet,C++,Java,s143031369.java,"import java.util.Arrays;

class Point implements Comparable<Point> {
    double x, y;
    double k;

    Point() {
    }

    Point(double x, double y) {
        this.x = x;
        this.y = y;
    }

    void set(double x, double y) {
        this.x = x;
        this.y = y;
    }

    double mod() {
        return Math.sqrt(x * x + y * y);
    }

    double mod_pow() {
        return x * x + y * y;
    }

    void output() {
        System.out.println(""x = "" + x + "", y = "" + y);
    }

    @Override
    public int compareTo(Point p) {
        if (Math.abs(x - p.x) > 1e-8) {
            return Double.compare(x, p.x);
        } else {
            return Double.compare(y, p.y);
        }
    }
}

public class s143031369 {

    static final double PI = Math.acos(-1.0);

    static int sig(double d) {
        return Math.abs(d) < 1e-8 ? 0 : d < 0 ? -1 : 1;
    }

    static double dot(Point o, Point a, Point b) {
        return (a.x - o.x) * (b.x - o.x) + (a.y - o.y) * (b.y - o.y);
    }

    static double dot(Point a, Point b) {
        return a.x * b.x + a.y * b.y;
    }

    static double cross(Point o, Point a, Point b) {
        return (a.x - o.x) * (b.y - o.y) - (b.x - o.x) * (a.y - o.y);
    }

    static int btw(Point x, Point a, Point b) {
        return sig(dot(x, a, b));
    }

    static double dis(Point a, Point b) {
        return Math.sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));
    }

    static double cos(Point o, Point a, Point b) {
        return dot(o, a, b) / dis(o, a) / dis(o, b);
    }

    static int jarvis(Point[] p, int n, int[] ch) {
        int d, i, o, s, l, t;
        for (d = i = 0; i < n; i++) {
            if (p[i].compareTo(p[d]) < 0) {
                d = i;
            }
        }
        l = s = ch[0] = d;
        d = 1;
        do {
            o = l;
            for (i = 0; i < n; i++) {
                t = sig(cross(p[o], p[l], p[i]));
                if (t > 0 || (t == 0 && btw(p[l], p[o], p[i]) <= 0)) {
                    l = i;
                }
            }
            ch[d++] = l;
        } while (l != s);
        return d - 1;
    }

    public static void main(String[] args) {
        Point[] P = new Point[110];
        int[] ch = new int[110];
        double[] ang = new double[110];
        double[] ans = new double[110];
        int n, xx, yy;
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        for (int i = 0; i < n; i++) {
            xx = scanner.nextInt();
            yy = scanner.nextInt();
            P[i] = new Point(xx, yy);
        }
        if (n == 2) {
            System.out.println(""0.5"");
            System.out.println(""0.5"");
        } else {
            int m = jarvis(P, n, ch);
            double sum = 0;
            if (m == 2) {
                ans[ch[0]] = 0.5;
                ans[ch[1]] = 0.5;
            } else {
                for (int i = 0; i < m; i++) {
                    ang[ch[i]] = PI - Math.acos(cos(P[ch[i]], P[ch[(i - 1 + m) % m]], P[ch[(i + 1) % m]]));
                }
                for (int i = 0; i < n; i++) {
                    ans[i] = ang[i] / 2.0 / PI;
                }
            }
            for (int i = 0; i < n; i++) {
                System.out.printf(""%.20f\n"", ans[i]);
            }
        }
    }
}","import java.util.Arrays;
import java.util.*;

class Point implements Comparable<Point> {
    double x, y;
    double k;

    Point() {
    }

    Point(double x, double y) {
        this.x = x;
        this.y = y;
    }

    void set(double x, double y) {
        this.x = x;
        this.y = y;
    }

    double mod() {
        return Math.sqrt(x * x + y * y);
    }

    double mod_pow() {
        return x * x + y * y;
    }

    void output() {
        System.out.println(""x = "" + x + "", y = "" + y);
    }

    @Override
    public int compareTo(Point p) {
        if (Math.abs(x - p.x) > 1e-8) {
            return Double.compare(x, p.x);
        } else {
            return Double.compare(y, p.y);
        }
    }
}

public class Main {

    static final double PI = Math.acos(-1.0);

    static int sig(double d) {
        return Math.abs(d) < 1e-8 ? 0 : d < 0 ? -1 : 1;
    }

    static double dot(Point o, Point a, Point b) {
        return (a.x - o.x) * (b.x - o.x) + (a.y - o.y) * (b.y - o.y);
    }

    static double dot(Point a, Point b) {
        return a.x * b.x + a.y * b.y;
    }

    static double cross(Point o, Point a, Point b) {
        return (a.x - o.x) * (b.y - o.y) - (b.x - o.x) * (a.y - o.y);
    }

    static int btw(Point x, Point a, Point b) {
        return sig(dot(x, a, b));
    }

    static double dis(Point a, Point b) {
        return Math.sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));
    }

    static double cos(Point o, Point a, Point b) {
        return dot(o, a, b) / dis(o, a) / dis(o, b);
    }

    static int jarvis(Point[] p, int n, int[] ch) {
        int d, i, o, s, l, t;
        for (d = i = 0; i < n; i++) {
            if (p[i].compareTo(p[d]) < 0) {
                d = i;
            }
        }
        l = s = ch[0] = d;
        d = 1;
        do {
            o = l;
            for (i = 0; i < n; i++) {
                t = sig(cross(p[o], p[l], p[i]));
                if (t > 0 || (t == 0 && btw(p[l], p[o], p[i]) <= 0)) {
                    l = i;
                }
            }
            ch[d++] = l;
        } while (l != s);
        return d - 1;
    }

    public static void main(String[] args) {
        Point[] P = new Point[110];
        int[] ch = new int[110];
        double[] ang = new double[110];
        double[] ans = new double[110];
        int n, xx, yy;
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        for (int i = 0; i < n; i++) {
            xx = scanner.nextInt();
            yy = scanner.nextInt();
            P[i] = new Point(xx, yy);
        }
        if (n == 2) {
            System.out.println(""0.5"");
            System.out.println(""0.5"");
        } else {
            int m = jarvis(P, n, ch);
            double sum = 0;
            if (m == 2) {
                ans[ch[0]] = 0.5;
                ans[ch[1]] = 0.5;
            } else {
                for (int i = 0; i < m; i++) {
                    ang[ch[i]] = PI - Math.acos(cos(P[ch[i]], P[ch[(i - 1 + m) % m]], P[ch[(i + 1) % m]]));
                }
                for (int i = 0; i < n; i++) {
                    ans[i] = ang[i] / 2.0 / PI;
                }
            }
            for (int i = 0; i < n; i++) {
                System.out.printf(""%.20f\n"", ans[i]);
            }
        }
    }
}"
ChatGPT,codenet,C++,Java,s876796799.java,"import java.util.*;

public class s876796799 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        long[] a = new long[N];
        for (int i = 0; i < N; i++) {
            a[i] = scanner.nextLong();
        }
        
        int[] ind_a = new int[N];
        for (int i = 0; i < N; i++) {
            ind_a[(int)a[i] - 1] = i;
        }
        
        Set<Integer> used_inds = new HashSet<>();
        long ans = 0;
        for (int i = 0; i < N; i++) {
            long left_border;
            long right_border;
            long cur_ind = ind_a[i];
            Iterator<Integer> left_it = used_inds.iterator();
            Iterator<Integer> right_it = used_inds.iterator();
            
            while (left_it.hasNext()) {
                int num = left_it.next();
                if (num > cur_ind) {
                    break;
                }
                left_border = num;
            }
            
            if (!right_it.hasNext()) {
                right_border = N;
            } else {
                right_border = right_it.next();
            }
            
            ans += (cur_ind - left_border) * (right_border - cur_ind) * ((long)i + 1);
            used_inds.add((int)cur_ind);
        }
        
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        long[] a = new long[N];
        for (int i = 0; i < N; i++) {
            a[i] = scanner.nextLong();
        }
        
        int[] ind_a = new int[N];
        for (int i = 0; i < N; i++) {
            ind_a[(int)a[i] - 1] = i;
        }
        
        Set<Integer> used_inds = new HashSet<>();
        long ans = 0;
        for (int i = 0; i < N; i++) {
            long left_border = 0;
            long right_border = 0;
            long cur_ind = ind_a[i];
            Iterator<Integer> left_it = used_inds.iterator();
            Iterator<Integer> right_it = used_inds.iterator();
            
            while (left_it.hasNext()) {
                int num = left_it.next();
                if (num > cur_ind) {
                    break;
                }
                left_border = num;
            }
            
            if (!right_it.hasNext()) {
                right_border = N;
            } else {
                right_border = right_it.next();
            }
            
            ans += (cur_ind - left_border) * (right_border - cur_ind) * ((long)i + 1);
            used_inds.add((int)cur_ind);
        }
        
        System.out.println(ans);
    }
}"
ChatGPT,codenet,C++,Java,s522742913.java,"import java.util.Scanner;

public class s522742913 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String source = scanner.next();

        if (source.length() > 10 || source.length() < 1) {
            return;
        }

        int max_i = (int) Math.pow(2, source.length() - 1);

        double sum = 0;

        for (int i = 0; i < max_i; ++i) {
            String plus = Integer.toBinaryString(i);

            double number = 0;

            String working = source;
            while (plus.contains(""1"")) {
                int index = plus.indexOf('1');
                sum += Double.parseDouble(working.substring(0, index + 1));
                plus = plus.substring(index + 1);
                working = working.substring(index + 1);
            }
            sum += Double.parseDouble(working);
        }

        System.out.printf(""%.0f%n"", sum);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String source = scanner.next();

        if (source.length() > 10 || source.length() < 1) {
            return;
        }

        int max_i = (int) Math.pow(2, source.length() - 1);

        double sum = 0;

        for (int i = 0; i < max_i; ++i) {
            String plus = Integer.toBinaryString(i);

            double number = 0;

            String working = source;
            while (plus.contains(""1"")) {
                int index = plus.indexOf('1');
                sum += Double.parseDouble(working.substring(0, index + 1));
                plus = plus.substring(index + 1);
                working = working.substring(index + 1);
            }
            sum += Double.parseDouble(working);
        }

        System.out.printf(""%.0f%n"", sum);
    }
}"
ChatGPT,codenet,C++,Java,s285212630.java,"import java.util.*;
import java.io.*;

public class s285212630 {
    static int N;
    static List<Pair<Integer, Integer>>[] G;
    static int[][] U;
    static int[] R;
    static long[] L;
    static final int MAX_L = 22;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        N = Integer.parseInt(br.readLine());
        G = new ArrayList[N];
        for (int i = 0; i < N; i++) {
            G[i] = new ArrayList<>();
        }
        for (int i = 0; i < N - 1; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());
            int a = Integer.parseInt(st.nextToken()) - 1;
            int b = Integer.parseInt(st.nextToken()) - 1;
            int c = Integer.parseInt(st.nextToken());
            G[a].add(new Pair<>(b, c));
            G[b].add(new Pair<>(a, c));
        }
        U = new int[MAX_L][N];
        R = new int[N];
        L = new long[N];
        dfs(0, -1, 0, 0);
        for (int i = 0; i < MAX_L - 1; i++) {
            for (int v = 0; v < N; v++) {
                if (U[i][v] == -1) U[i + 1][v] = -1;
                U[i + 1][v] = U[i][U[i][v]];
            }
        }
        int Q, K;
        StringTokenizer st = new StringTokenizer(br.readLine());
        Q = Integer.parseInt(st.nextToken());
        K = Integer.parseInt(st.nextToken()) - 1;
        for (int i = 0; i < Q; i++) {
            st = new StringTokenizer(br.readLine());
            int x = Integer.parseInt(st.nextToken()) - 1;
            int y = Integer.parseInt(st.nextToken()) - 1;
            System.out.println(dist(x, K) + dist(K, y));
        }
    }

    static void dfs(int x, int p, int r, long l) {
        U[0][x] = p;
        R[x] = r;
        L[x] = l;
        for (Pair<Integer, Integer> pp : G[x]) {
            int t = pp.getKey();
            if (t == p) continue;
            dfs(t, x, r + 1, l + pp.getValue());
        }
    }

    static int lca(int a, int b) {
        if (R[a] > R[b]) {
            int temp = a;
            a = b;
            b = temp;
        }
        for (int k = 0; k < MAX_L; k++) {
            if (((R[b] - R[a]) >> k) & 1 == 1) b = U[k][b];
        }
        if (a == b) return a;
        for (int k = MAX_L - 1; k >= 0; k--) {
            if (U[k][a] != U[k][b]) {
                a = U[k][a];
                b = U[k][b];
            }
        }
        return U[0][a];
    }

    static long dist(int x, int y) {
        int g = lca(x, y);
        return L[x] + L[y] - 2L * L[g];
    }
}

class Pair<K, V> {
    private K key;
    private V value;

    public Pair(K key, V value) {
        this.key = key;
        this.value = value;
    }

    public K getKey() {
        return key;
    }

    public V getValue() {
        return value;
    }
}","import java.util.*;
import java.io.*;

public class Main {
    static int N;
    static List<Pair<Integer, Integer>>[] G;
    static int[][] U;
    static int[] R;
    static long[] L;
    static final int MAX_L = 22;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        N = Integer.parseInt(br.readLine());
        G = new ArrayList[N];
        for (int i = 0; i < N; i++) {
            G[i] = new ArrayList<>();
        }
        for (int i = 0; i < N - 1; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());
            int a = Integer.parseInt(st.nextToken()) - 1;
            int b = Integer.parseInt(st.nextToken()) - 1;
            int c = Integer.parseInt(st.nextToken());
            G[a].add(new Pair<>(b, c));
            G[b].add(new Pair<>(a, c));
        }
        U = new int[MAX_L][N];
        R = new int[N];
        L = new long[N];
        dfs(0, -1, 0, 0);
        for (int i = 0; i < MAX_L - 1; i++) {
            for (int v = 0; v < N; v++) {
                if (U[i][v] == -1) U[i + 1][v] = -1;
                U[i + 1][v] = U[i][U[i][v]];
            }
        }
        int Q, K;
        StringTokenizer st = new StringTokenizer(br.readLine());
        Q = Integer.parseInt(st.nextToken());
        K = Integer.parseInt(st.nextToken()) - 1;
        for (int i = 0; i < Q; i++) {
            st = new StringTokenizer(br.readLine());
            int x = Integer.parseInt(st.nextToken()) - 1;
            int y = Integer.parseInt(st.nextToken()) - 1;
            System.out.println(dist(x, K) + dist(K, y));
        }
    }

    static void dfs(int x, int p, int r, long l) {
        U[0][x] = p;
        R[x] = r;
        L[x] = l;
        for (Pair<Integer, Integer> pp : G[x]) {
            int t = pp.getKey();
            if (t == p) continue;
            dfs(t, x, r + 1, l + pp.getValue());
        }
    }

    static int lca(int a, int b) {
        if (R[a] > R[b]) {
            int temp = a;
            a = b;
            b = temp;
        }
        for (int k = 0; k < MAX_L; k++) {
            if (((R[b] - R[a]) >> k) != 0) b = U[k][b];
        }
        if (a == b) return a;
        for (int k = MAX_L - 1; k >= 0; k--) {
            if (U[k][a] != U[k][b]) {
                a = U[k][a];
                b = U[k][b];
            }
        }
        return U[0][a];
    }

    static long dist(int x, int y) {
        int g = lca(x, y);
        return L[x] + L[y] - 2L * L[g];
    }
}

class Pair<K, V> {
    private K key;
    private V value;

    public Pair(K key, V value) {
        this.key = key;
        this.value = value;
    }

    public K getKey() {
        return key;
    }

    public V getValue() {
        return value;
    }
}"
ChatGPT,codenet,C++,Java,s950360470.java,"import java.util.Scanner;

public class s950360470 {
    
    static final long MOD = 1000000007;
    
    // a^n
    static long pow(long a, long n) {
        long res = 1;
        while (n > 0) {
            if ((n & 1) == 1) res *= a;
            a *= a;
            n >>= 1;
        }
        return res;
    }
    
    // a^n % mod
    static long modPow(long a, long n, long mod) {
        long res = 1;
        while (n > 0) {
            if ((n & 1) == 1) res = (res * a) % mod;
            a = (a * a) % mod;
            n >>= 1;
        }
        return res;
    }
    
    // a^(-1) % mod (only if : a % p != 0)
    static long modInv(long a, long mod) {
        return modPow(a, mod - 2, mod);
    }
    
    // nCk % mod
    static long modNCk(int n, int k, int mod) {
        if (n == 0 || k == 0) return 1;
        long p = 1, q = 1;
        for (int i = n - k + 1; i <= n; i++)
            p = (p * i) % MOD;
        for (int i = 2; i <= k; i++)
            q = (q * i) % MOD;
        q = modInv(q, MOD);
        return (p * q) % MOD;
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        System.out.println(modNCk(k, n, MOD));
    }
}","import java.util.Scanner;

public class Main {
    
    static final long MOD = 1000000007;
    
    // a^n
    static long pow(long a, long n) {
        long res = 1;
        while (n > 0) {
            if ((n & 1) == 1) res *= a;
            a *= a;
            n >>= 1;
        }
        return res;
    }
    
    // a^n % mod
    static long modPow(long a, long n, long mod) {
        long res = 1;
        while (n > 0) {
            if ((n & 1) == 1) res = (res * a) % mod;
            a = (a * a) % mod;
            n >>= 1;
        }
        return res;
    }
    
    // a^(-1) % mod (only if : a % p != 0)
    static long modInv(long a, long mod) {
        return modPow(a, mod - 2, mod);
    }
    
    // nCk % mod
    static long modNCk(int n, int k, long mod) {
        if (n == 0 || k == 0) return 1;
        long p = 1, q = 1;
        for (int i = n - k + 1; i <= n; i++)
            p = (p * i) % MOD;
        for (int i = 2; i <= k; i++)
            q = (q * i) % MOD;
        q = modInv(q, MOD);
        return (p * q) % MOD;
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        System.out.println(modNCk(k, n, MOD));
    }
}"
ChatGPT,codenet,C++,Java,s146177123.java,"import java.util.Scanner;

public class s146177123 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n, t;
        boolean[] st = new boolean[7];
        while (scanner.hasNext()) {
            n = scanner.nextInt();
            if (n == -1) {
                break;
            }
            for (int i = 0; i < 7; i++) {
                st[i] = false;
            }
            for (int i = 0; i < n; i++) {
                t = scanner.nextInt();
                char[] ans = new char[8];
                for (int j = 0; j < 7; j++) {
                    ans[j] = (st[j] ^ seg[t][j]) ? '1' : '0';
                    st[j] = seg[t][j];
                }
                System.out.println(ans);
            }
        }
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n, t;
        boolean[] st = new boolean[7];
        boolean[][] seg = {
            {false, true, true, true, true, true, true},
            {false, false, false, false, true, true, false},
            {true, false, true, true, false, true, true},
            {true, false, false, true, true, true, true},
            {true, true, false, false, true, true, false},
            {true, true, false, true, true, false, true},
            {true, true, true, true, true, false, true},
            {false, true, false, false, true, true, true},
            {true, true, true, true, true, true, true},
            {true, true, false, true, true, true, true}
        };
        while (scanner.hasNext()) {
            n = scanner.nextInt();
            if (n == -1) {
                break;
            }
            for (int i = 0; i < 7; i++) {
                st[i] = false;
            }
            for (int i = 0; i < n; i++) {
                t = scanner.nextInt();
                char[] ans = new char[7];
                for (int j = 0; j < 7; j++) {
                    ans[j] = (st[j] ^ seg[t][j]) ? '1' : '0';
                    st[j] = seg[t][j];
                }
                System.out.println(ans);
            }
        }
    }
}"
ChatGPT,codenet,C++,Java,s644382798.java,"import java.util.Scanner;

public class s644382798 {
    static class P {
        String name;
        int t;

        P(String name, int t) {
            this.name = name;
            this.t = t;
        }
    }

    static P[] Q;
    static int head, tail, n;

    static void enqueue(P x) {
        Q[tail] = x;
        tail = (tail + 1) % LEN;
    }

    static P dequeue() {
        P x = Q[head];
        head = (head + 1) % LEN;
        return x;
    }

    static int min(int a, int b) {
        return a < b ? a : b;
    }

    public static void main(String[] args) {
        int elaps = 0, c;
        int i, q;
        P u;
        Scanner sc = new Scanner(System.in);

        n = sc.nextInt();
        q = sc.nextInt();
        Q = new P[n + 1];

        for (i = 1; i <= n; i++) {
            String name = sc.next();
            int t = sc.nextInt();
            Q[i] = new P(name, t);
        }
        head = 1;
        tail = n + 1;

        while (head != tail) {
            u = dequeue();
            c = min(q, u.t);
            u.t -= c;
            elaps += c;
            if (u.t > 0)
                enqueue(u);
            else
                System.out.println(u.name + "" "" + elaps);
        }
    }
}","import java.util.Scanner;

public class Main {
    static class P {
        String name;
        int t;

        P(String name, int t) {
            this.name = name;
            this.t = t;
        }
    }

    static P[] Q;
    static int head, tail, n;
    static int LEN = 100005;

    static void enqueue(P x) {
        Q[tail] = x;
        tail = (tail + 1) % LEN;
    }

    static P dequeue() {
        P x = Q[head];
        head = (head + 1) % LEN;
        return x;
    }

    static int min(int a, int b) {
        return a < b ? a : b;
    }

    public static void main(String[] args) {
        int elaps = 0, c;
        int i, q;
        P u;
        Scanner sc = new Scanner(System.in);

        n = sc.nextInt();
        q = sc.nextInt();
        Q = new P[n + 1];

        for (i = 1; i <= n; i++) {
            String name = sc.next();
            int t = sc.nextInt();
            Q[i] = new P(name, t);
        }
        head = 1;
        tail = n + 1;

        while (head != tail) {
            u = dequeue();
            c = min(q, u.t);
            u.t -= c;
            elaps += c;
            if (u.t > 0)
                enqueue(u);
            else
                System.out.println(u.name + "" "" + elaps);
        }
    }
}"
ChatGPT,codenet,C++,Java,s620821061.java,"import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

class BitMatching<V> {
    private List<List<Integer>> G;
    private int[] match;
    private boolean[] used;

    BitMatching() {
        this.G = new ArrayList<>();
        this.match = new int[2 * V];
        this.used = new boolean[2 * V];
        for(int i = 0; i < 2 * V; i++) {
            G.add(new ArrayList<>());
        }
    }

    void add(int a, int b) {
        G.get(a).add(b + V);
        G.get(b + V).add(a);
    }

    boolean dfs(int v) {
        used[v] = true;
        for (int i = 0; i < G.get(v).size(); i++) {
            int u = G.get(v).get(i);
            int w = match[u];
            if (w < 0 || (!used[w] && dfs(w))) {
                match[v] = u;
                match[u] = v;
                return true;
            }
        }
        return false;
    }

    int exec() {
        int res = 0;
        Arrays.fill(match, -1);
        for (int v = 0; v < V; v++) {
            if (match[v] < 0) {
                Arrays.fill(used, false);
                if (dfs(v)) {
                    res++;
                }
            }
        }
        return res;
    }
}

public class s620821061 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int n = sc.nextInt();
            int m = sc.nextInt();
            if (n == 0) break;
            BitMatching<Integer> bm = new BitMatching<>();
            int[] a = new int[n];
            int[] b = new int[m];
            for (int i = 0; i < n; i++) {
                a[i] = sc.nextInt();
            }
            for (int i = 0; i < m; i++) {
                b[i] = sc.nextInt();
            }

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    if (gcd(a[i], b[j]) != 1) {
                        bm.add(i, j);
                    }
                }
            }
            System.out.println(bm.exec());
        }
    }

    private static int gcd(int a, int b) {
        if (b == 0) return a;
        return gcd(b, a % b);
    }
}","import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

class BitMatching<V> {
    private List<List<Integer>> G;
    private int[] match;
    private boolean[] used;

    BitMatching() {
        this.G = new ArrayList<>();
        this.match = new int[2 * V];
        this.used = new boolean[2 * V];
        for(int i = 0; i < 2 * V; i++) {
            G.add(new ArrayList<>());
        }
    }

    void add(int a, int b) {
        G.get(a).add(b + V);
        G.get(b + V).add(a);
    }

    boolean dfs(int v) {
        used[v] = true;
        for (int i = 0; i < G.get(v).size(); i++) {
            int u = G.get(v).get(i);
            int w = match[u];
            if (w < 0 || (!used[w] && dfs(w))) {
                match[v] = u;
                match[u] = v;
                return true;
            }
        }
        return false;
    }

    int exec() {
        int res = 0;
        Arrays.fill(match, -1);
        for (int v = 0; v < V; v++) {
            if (match[v] < 0) {
                Arrays.fill(used, false);
                if (dfs(v)) {
                    res++;
                }
            }
        }
        return res;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int n = sc.nextInt();
            int m = sc.nextInt();
            if (n == 0) break;
            BitMatching<Integer> bm = new BitMatching<>();
            int[] a = new int[n];
            int[] b = new int[m];
            for (int i = 0; i < n; i++) {
                a[i] = sc.nextInt();
            }
            for (int i = 0; i < m; i++) {
                b[i] = sc.nextInt();
            }

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    if (gcd(a[i], b[j]) != 1) {
                        bm.add(i, j);
                    }
                }
            }
            System.out.println(bm.exec());
        }
    }

    private static int gcd(int a, int b) {
        if (b == 0) return a;
        return gcd(b, a % b);
    }
}"
ChatGPT,codenet,C++,Java,s257064825.java,"public class s257064825 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String str = sc.next();
        int sum = 0;
        for (char x : str.toCharArray()) {
            sum += (x - '0');
        }
        if (sum % 9 == 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String str = sc.next();
        int sum = 0;
        for (char x : str.toCharArray()) {
            sum += (x - '0');
        }
        if (sum % 9 == 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
ChatGPT,codenet,C++,Java,s343280137.java,"import java.util.*;
import java.lang.*;
import java.io.*;

public class s343280137 {
    public static void main (String[] args) throws java.lang.Exception
    {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        long c = sc.nextLong();
        
        List<Long> x = new ArrayList<>();
        List<Long> v = new ArrayList<>();
        
        for(int i = 0; i < n; i++){
            x.add(sc.nextLong());
            v.add(sc.nextLong());
        }
        
        List<Long> lefttotal = new ArrayList<>(Collections.nCopies((int)n+1, 0L));
        List<Long> maxlefttotal = new ArrayList<>(Collections.nCopies((int)n+1, 0L));
        
        for(int i = 1; i < n+1; i++){
            lefttotal.set(i, lefttotal.get(i-1) + v.get(i));
        }
        
        for(int i = 1; i < n+1; i++){
            maxlefttotal.set(i, Math.max(maxlefttotal.get(i-1), lefttotal.get(i)-x.get(i)));
        }
        
        List<Long> righttotal = new ArrayList<>(Collections.nCopies((int)n+1, 0L));
        List<Long> maxrighttotal = new ArrayList<>(Collections.nCopies((int)n+1, 0L));
        
        for(int i = 1; i < n+1; i++){
            righttotal.set(i, righttotal.get(i-1) + v.get((int)n-i+1));
        }
        
        for(int i = 1; i < n+1; i++){
            maxrighttotal.set(i, Math.max(maxrighttotal.get(i-1), righttotal.get(i) -(c - x.get((int)n+1-i))));
        }
        
        long ans = 0;
        
        for(int i = 1; i < n+1; i++){
            ans = Math.max(ans, lefttotal.get(i)-x.get(i));
            ans = Math.max(ans, lefttotal.get(i)-2*x.get(i)+maxrighttotal.get((int)n-i));
            ans = Math.max(ans, righttotal.get(i)-(c -x.get((int)n+1-i)));
            ans = Math.max(ans, righttotal.get(i)-2*(c-x.get((int)n+1-i))+maxlefttotal.get((int)n-i));
        }
        
        System.out.println(ans);
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    public static void main (String[] args) throws java.lang.Exception
    {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        long c = sc.nextLong();
        
        List<Long> x = new ArrayList<>();
        List<Long> v = new ArrayList<>();
        
        for(int i = 0; i < n; i++){
            x.add(sc.nextLong());
            v.add(sc.nextLong());
        }
        x.add(0L);
        v.add(0L);
        
        List<Long> lefttotal = new ArrayList<>(Collections.nCopies((int)n+1, 0L));
        List<Long> maxlefttotal = new ArrayList<>(Collections.nCopies((int)n+1, 0L));
        
        for(int i = 1; i < n+1; i++){
            lefttotal.set(i, lefttotal.get(i-1) + v.get(i));
        }
        
        for(int i = 1; i < n+1; i++){
            maxlefttotal.set(i, Math.max(maxlefttotal.get(i-1), lefttotal.get(i)-x.get(i)));
        }
        
        List<Long> righttotal = new ArrayList<>(Collections.nCopies((int)n+1, 0L));
        List<Long> maxrighttotal = new ArrayList<>(Collections.nCopies((int)n+1, 0L));
        
        for(int i = 1; i < n+1; i++){
            righttotal.set(i, righttotal.get(i-1) + v.get((int)n-i+1));
        }
        
        for(int i = 1; i < n+1; i++){
            maxrighttotal.set(i, Math.max(maxrighttotal.get(i-1), righttotal.get(i) -(c - x.get((int)n+1-i))));
        }
        
        long ans = 0;
        
        for(int i = 1; i < n+1; i++){
            ans = Math.max(ans, lefttotal.get(i)-x.get(i));
            ans = Math.max(ans, lefttotal.get(i)-2*x.get(i)+maxrighttotal.get((int)n-i));
            ans = Math.max(ans, righttotal.get(i)-(c -x.get((int)n+1-i)));
            ans = Math.max(ans, righttotal.get(i)-2*(c-x.get((int)n+1-i))+maxlefttotal.get((int)n-i));
        }
        
        System.out.println(ans);
    }
}"
ChatGPT,codenet,C++,Java,s384319383.java,"import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

public class s384319383 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        ArrayList<Integer> cnt = new ArrayList<>(Collections.nCopies(26, 1));
        ArrayList<Character> s = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            char c = scanner.next().charAt(0);
            s.add(c);
            cnt.set(c - 'a', cnt.get(c - 'a') + 1);
        }

        long ans = cnt.get(0);
        for (int i = 1; i < 26; i++) {
            ans *= cnt.get(i);
            ans %= (int) 1e9 + 7;
        }

        System.out.println(ans - 1);
    }
}","import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        ArrayList<Integer> cnt = new ArrayList<>(Collections.nCopies(26, 1));
        ArrayList<Character> s = new ArrayList<>();

        String input = scanner.next();
        for (int i = 0; i < n; i++) {
            char c = input.charAt(i);
            s.add(c);
            cnt.set(c - 'a', cnt.get(c - 'a') + 1);
        }

        long ans = cnt.get(0);
        for (int i = 1; i < 26; i++) {
            ans *= cnt.get(i);
            ans %= (int) 1e9 + 7;
        }

        System.out.println(ans - 1);
    }
}"
ChatGPT,codenet,C++,Java,s612033342.java,"import java.util.Scanner;

public class s612033342 {
    
    public static int pow2(int a) {
        int ret = 1;
        for (int i = 0; i < a; i++) {
            ret *= 2;
        }
        return ret;
    }

    public static int count(int[][] hw, int a, int b) {
        int sum = 0;
        for (int i = 0; i < hw.length; i++) {
            for (int j = 0; j < hw[0].length; j++) {
                if (((a >> i) & 1) == 1 && ((b >> j) & 1) == 1 && hw[i][j] == 1) {
                    sum++;
                }
            }
        }
        return sum;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int h = scanner.nextInt();
        int w = scanner.nextInt();
        int k = scanner.nextInt();
        int[][] hw = new int[h][w];
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                char c = scanner.next().charAt(0);
                if (c == '#') {
                    hw[i][j] = 1;
                }
            }
        }
        int sum = 0;
        for (int i = 0; i < pow2(h); i++) {
            for (int j = 0; j < pow2(w); j++) {
                if (count(hw, i, j) == k) {
                    sum++;
                }
            }
        }
        System.out.println(sum);
    }
}","import java.util.Scanner;

public class Main {
    
    public static int pow2(int a) {
        int ret = 1;
        for (int i = 0; i < a; i++) {
            ret *= 2;
        }
        return ret;
    }

    public static int count(int[][] hw, int a, int b) {
        int sum = 0;
        for (int i = 0; i < hw.length; i++) {
            for (int j = 0; j < hw[0].length; j++) {
                if (((a >> i) & 1) == 1 && ((b >> j) & 1) == 1 && hw[i][j] == 1) {
                    sum++;
                }
            }
        }
        return sum;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int h = scanner.nextInt();
        int w = scanner.nextInt();
        int k = scanner.nextInt();
        int[][] hw = new int[h][w];
        for (int i = 0; i < h; i++) {
            String input = scanner.next();
            for (int j = 0; j < w; j++) {
                char c = input.charAt(j);
                if (c == '#') {
                    hw[i][j] = 1;
                }
            }
        }
        int sum = 0;
        for (int i = 0; i < pow2(h); i++) {
            for (int j = 0; j < pow2(w); j++) {
                if (count(hw, i, j) == k) {
                    sum++;
                }
            }
        }
        System.out.println(sum);
    }
}"
ChatGPT,codenet,C++,Java,s466967233.java,"import java.util.Scanner;

public class s466967233 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        long N, K;
        long[] A = new long[200100];
        long[] B = new long[200100];
        int now = 1;
        long cnt = 0;
        N = scanner.nextLong();
        K = scanner.nextLong();
        for (int i = 1; i <= N; i++) {
            A[i] = scanner.nextLong();
        }
        for (int i = 1; i <= 200100; i++) {
            B[i] = -1;
        }
        long j;
        B[1] = 0;
        for (j = 1; j <= K; j++) {
            now = (int) A[now];
            if (B[now] == -1) {
                B[now] = j;
            } else {
                cnt = j;
                break;
            }
        }
        if (j < K) {
            long tmp = (K - B[now]) % (cnt - B[now]);
            for (long i = 0; i < tmp; i++) {
                now = (int) A[now];
            }
        }
        System.out.println(now);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        long N, K;
        long[] A = new long[200100];
        long[] B = new long[200100];
        int now = 1;
        long cnt = 0;
        N = scanner.nextLong();
        K = scanner.nextLong();
        for (int i = 1; i <= N; i++) {
            A[i] = scanner.nextLong();
        }
        for (int i = 1; i < 200100; i++) {
            B[i] = -1;
        }
        long j;
        B[1] = 0;
        for (j = 1; j <= K; j++) {
            now = (int) A[now];
            if (B[now] == -1) {
                B[now] = j;
            } else {
                cnt = j;
                break;
            }
        }
        if (j < K) {
            long tmp = (K - B[now]) % (cnt - B[now]);
            for (long i = 0; i < tmp; i++) {
                now = (int) A[now];
            }
        }
        System.out.println(now);
    }
}"
ChatGPT,codenet,C++,Java,s877835664.java,"import java.util.*;

public class s877835664 {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        long N = scanner.nextLong();
        long K = scanner.nextLong();
        
        List<Long> A = new ArrayList<>();
        A.add(0L); // dummy element
        for (int i = 1; i < N; i++) {
            A.add(scanner.nextLong());
        }
        
        long cur = 1;
        List<Long> dic = new ArrayList<>(Collections.nCopies((int) (N + 1), -1L));
        boolean flg = false;
        for (long i = 1; i <= K; i++) {
            if (dic.get((int) cur) < 0 || flg) {
                dic.set((int) cur, i);
                cur = A.get((int) cur);
            } else if (!flg) {
                long tmp = K - (dic.get((int) cur) - 1);
                tmp %= i - dic.get((int) cur);
                i = K - tmp;
                flg = true;
            }
        }
        
        System.out.println(cur);
    }
}","import java.util.*;

public class Main {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        long N = scanner.nextLong();
        long K = scanner.nextLong();
        
        List<Long> A = new ArrayList<>();
        A.add(0L); // dummy element
        for (int i = 1; i <= N; i++) {
            A.add(scanner.nextLong());
        }
        
        long cur = 1;
        List<Long> dic = new ArrayList<>(Collections.nCopies((int) (N + 1), -1L));
        boolean flg = false;
        for (long i = 1; i <= K; i++) {
            if (dic.get((int) cur) < 0 || flg) {
                dic.set((int) cur, i);
                cur = A.get((int) cur);
            } else if (!flg) {
                long tmp = K - (dic.get((int) cur) - 1);
                tmp %= i - dic.get((int) cur);
                i = K - tmp;
                flg = true;
            }
        }
        
        System.out.println(cur);
    }
}"
ChatGPT,codenet,C++,Java,s615050061.java,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class s615050061 {
    
    static class Pair {
        long first;
        long second;
        
        public Pair(long first, long second) {
            this.first = first;
            this.second = second;
        }
    }
    
    static long B = 13131;
    static int N = 500000 + 7;
    static int n;
    static char[] s = new char[N];
    static long[] f = new long[N];
    static int[] g = new int[N];
    static Map<Long, Long> map;
    static long cnt;
    
    static long pow(long a, long k) {
        if (k < 0) k += (1L << 63) - 1;
        long t = 1;
        for (; k > 0; a *= a, k >>= 1)
            if ((k & 1) == 1) t *= a;
        return t;
    }
    
    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        s = sc.next().toCharArray();
        map = new HashMap<>();
        
        for (int i = 1; i <= n; ++i) {
            if (s[i] == '+' || s[i] == '-')
                f[i] = f[i - 1] + (s[i] == '+' ? 1 : -1) * pow(B, g[i] = g[i - 1]);
            else
                f[i] = f[i - 1];
            g[i] = g[i - 1] + (s[i] == '<' ? -1 : 1);
        }
        
        for (int i = n; i > 0; --i) {
            long key = f[n] * pow(B, g[i - 1]) + f[i - 1];
            map.put(key, map.getOrDefault(key, 0L) + 1);
            cnt += map.getOrDefault(key, 0L);
        }
        
        System.out.println(cnt);
    }
}","import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    
    static class Pair {
        long first;
        long second;
        
        public Pair(long first, long second) {
            this.first = first;
            this.second = second;
        }
    }
    
    static long B = 13131;
    static int N = 500000 + 7;
    static int n;
    static char[] s = new char[N];
    static long[] f = new long[N];
    static int[] g = new int[N];
    static Map<Long, Long> map;
    static long cnt;
    
    static long pow(long a, long k) {
        if (k < 0) k += (1L << 63) - 1;
        long t = 1;
        for (; k > 0; a *= a, k >>= 1)
            if ((k & 1) == 1) t *= a;
        return t;
    }
    
    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        s = sc.next().toCharArray();
        map = new HashMap<>();
        
        for (int i = 1; i <= n; ++i) {
            if (s[i] == '+' || s[i] == '-')
                f[i] = f[i - 1] + (s[i] == '+' ? 1 : -1) * pow(B, g[i] = g[i - 1]);
            else
                f[i] = f[i - 1];
            g[i] = g[i - 1] + (s[i] == '<' ? -1 : 1);
        }
        
        for (int i = n; i > 0; --i) {
            long key = f[n] * pow(B, g[i - 1]) + f[i - 1];
            map.put(key, map.getOrDefault(key, 0L) + 1);
            cnt += map.getOrDefault(key, 0L);
        }
        
        System.out.println(cnt);
    }
}"
ChatGPT,codenet,C++,Java,s447383972.java,"import java.util.Arrays;
import java.util.Scanner;

public class s447383972 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            a[i] = scanner.nextInt();
        }
        Arrays.sort(a, 1, n + 1);
        int[] q = new int[n];
        int tot = 0;
        for (int i = 1; i <= n; i++) {
            if (a[i] == a[i + 1]) {
                q[++tot] = a[i];
                i++;
            }
        }
        System.out.println(q[tot] * q[tot - 1]);
    }
}","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            a[i] = scanner.nextInt();
        }
        Arrays.sort(a, 1, n + 1);
        int[] q = new int[n];
        int tot = 0;
        for (int i = 1; i < n; i++) {
            if (a[i] == a[i + 1]) {
                q[++tot] = a[i];
                i++;
            }
        }
        System.out.println(q[tot] * q[tot - 1]);
    }
}"
ChatGPT,codenet,C++,Java,s557795702.java,"import java.util.Scanner;

public class s557795702 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        long ans = mergesort(a, 0, n);
        System.out.println(ans);
    }

    private static long merge(int[] a, int left, int mid, int right) {
        int[] L = new int[mid - left];
        int[] R = new int[right - mid];
        long cnt = 0;
        for (int i = 0; i < L.length; i++) {
            L[i] = a[left + i];
        }
        for (int i = 0; i < R.length; i++) {
            R[i] = a[mid + i];
        }
        L[L.length] = R[R.length] = Integer.MAX_VALUE;
        int i = 0, j = 0;
        for (int k = left; k < right; k++) {
            if (L[i] <= R[j]) {
                a[k] = L[i++];
            } else {
                a[k] = R[j++];
                cnt += L.length - i;
            }
        }
        return cnt;
    }

    private static long mergesort(int[] a, int left, int right) {
        if (left + 1 < right) {
            int mid = (left + right) / 2;
            long v1 = mergesort(a, left, mid);
            long v2 = mergesort(a, mid, right);
            long v3 = merge(a, left, mid, right);
            return v1 + v2 + v3;
        }
        return 0;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        long ans = mergesort(a, 0, n);
        System.out.println(ans);
    }

    private static long merge(int[] a, int left, int mid, int right) {
        int[] L = new int[mid - left];
        int[] R = new int[right - mid];
        long cnt = 0;
        for (int i = 0; i < L.length; i++) {
            L[i] = a[left + i];
        }
        for (int i = 0; i < R.length; i++) {
            R[i] = a[mid + i];
        }
        L[L.length] = R[R.length] = Integer.MAX_VALUE;
        int i = 0, j = 0;
        for (int k = left; k < right; k++) {
            if (L[i] <= R[j]) {
                a[k] = L[i++];
            } else {
                a[k] = R[j++];
                cnt += L.length - i;
            }
        }
        return cnt;
    }

    private static long mergesort(int[] a, int left, int right) {
        if (left + 1 < right) {
            int mid = (left + right) / 2;
            long v1 = mergesort(a, left, mid);
            long v2 = mergesort(a, mid, right);
            long v3 = merge(a, left, mid, right);
            return v1 + v2 + v3;
        }
        return 0;
    }
}"
ChatGPT,codenet,C++,Java,s144923291.java,"import java.util.*;

public class s144923291 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int h = sc.nextInt();
        int w = sc.nextInt();
        String[] t = new String[10];
        String[] s = {""snuke""};

        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                t[j] = sc.next();
                if (Arrays.equals(t, s)) {
                    char c = (char) ('A' + j);
                    System.out.println(c + """" + (i + 1));
                    return;
                }
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int h = sc.nextInt();
        int w = sc.nextInt();
        String[] t = new String[10];
        String s = ""snuke"";

        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                t[j] = sc.next();
                if (t[j].equals(s)) {
                    char c = (char) ('A' + j);
                    System.out.println(c + """" + (i + 1));
                    return;
                }
            }
        }
    }
}"
ChatGPT,codenet,C++,Java,s129088151.java,"import java.util.HashMap;
import java.util.Scanner;

public class s129088151 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();

        HashMap<String, Boolean> T = new HashMap<>();

        for (int i = 0; i < n; i++) {
            String[] input = scanner.nextLine().split("" "");
            String com = input[0];
            String str = input[1];
            if (com.equals(""i"")) {
                T.put(str, true);
            } else {
                if (T.containsKey(str)) {
                    System.out.println(""yes"");
                } else {
                    System.out.println(""no"");
                }
            }
        }
        scanner.close();
    }
}","import java.util.HashMap;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();

        HashMap<String, Boolean> T = new HashMap<>();

        for (int i = 0; i < n; i++) {
            String[] input = scanner.nextLine().split("" "");
            String com = input[0];
            String str = input[1];
            if (com.charAt(0) == 'i') {
                T.put(str, true);
            } else {
                if (T.containsKey(str)) {
                    System.out.println(""yes"");
                } else {
                    System.out.println(""no"");
                }
            }
        }
        scanner.close();
    }
}"
ChatGPT,codenet,C++,Java,s716198307.java,"import java.util.Scanner;

public class s716198307 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[100];
        double avg = 0, s, ans;
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
            avg += a[i];
        }
        avg /= n;
        s = Math.abs(a[0] - avg);
        ans = 0;
        for (int i = 1; i < n; i++) {
            if (s > Math.abs(a[i] - avg)) {
                s = Math.abs(a[i] - avg);
                ans = i;
            }
        }
        System.out.println(ans);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[100];
        double avg = 0, s;
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
            avg += a[i];
        }
        avg /= n;
        s = Math.abs(a[0] - avg);
        int ans = 0;
        for (int i = 1; i < n; i++) {
            if (s > Math.abs(a[i] - avg)) {
                s = Math.abs(a[i] - avg);
                ans = i;
            }
        }
        System.out.println(ans);
    }
}"
ChatGPT,codenet,C++,Java,s954770518.java,"import java.util.Arrays;
import java.util.Scanner;

public class s954770518 {
    public static void main(String[] args) {
        int[] s = new int[11];
        Scanner scanner = new Scanner(System.in);
        
        for (int i = 0; i < 10; i++) {
            s[i] = scanner.nextInt();
        }
        
        Arrays.sort(s);
        
        for (int i = 9; i > 6; i--) {
            System.out.println(s[i]);
        }
        
        scanner.close();
    }
}","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        int[] s = new int[10];
        Scanner scanner = new Scanner(System.in);
        
        for (int i = 0; i < 10; i++) {
            s[i] = scanner.nextInt();
        }
        
        Arrays.sort(s);
        
        for (int i = 9; i > 6; i--) {
            System.out.println(s[i]);
        }
        
        scanner.close();
    }
}"
ChatGPT,codenet,C++,Java,s698205968.java,"import java.util.Scanner;

public class s698205968 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int m, f, r;
        while (scanner.hasNextInt()) {
            m = scanner.nextInt();
            f = scanner.nextInt();
            r = scanner.nextInt();
            
            if (m == -1 || f == -1) {
                System.out.println(""F"");
            } else if (m + f >= 80) {
                System.out.println(""A"");
            } else if (m + f >= 65) {
                System.out.println(""B"");
            } else if (m + f >= 50 || r >= 50) {
                System.out.println(""C"");
            } else if (m + f >= 30) {
                System.out.println(""D"");
            } else {
                System.out.println(""F"");
            }
        }
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int m, f, r;
        while (scanner.hasNextInt()) {
            m = scanner.nextInt();
            f = scanner.nextInt();
            r = scanner.nextInt();
            if (m == -1 || f == -1) {
                System.out.println(""F"");
            } else if (m + f >= 80) {
                System.out.println(""A"");
            } else if (m + f >= 65) {
                System.out.println(""B"");
            } else if (m + f >= 50 || r >= 50) {
                System.out.println(""C"");
            } else if (m + f >= 30) {
                System.out.println(""D"");
            }
        }
    }
}"
ChatGPT,codenet,Java,Python,s022285498.py,"class Task:
    def solve(self, testNumber, in, out):
        n = int(in.next())
        countArr = [0] * (n + 1)
        for x in range(1, 101):
            for y in range(1, 101):
                for z in range(1, 101):
                    value = x * x + y * y + z * z + x * y + x * z + y * z
                    if value > n:
                        break
                    countArr[value] += 1

        for i in range(1, n + 1):
            out.println(countArr[i])

def sort(arr):
    arr.sort()


def solve():
    task = Task()
    task.solve(1, in, out)
    out.close()


solve()","class Task:
    def solve(self, testNumber):
        n = int(input())
        countArr = [0] * (n + 1)
        for x in range(1, 101):
            for y in range(1, 101):
                for z in range(1, 101):
                    value = x * x + y * y + z * z + x * y + x * z + y * z
                    if value > n:
                        break
                    countArr[value] += 1

        for i in range(1, n + 1):
            print(countArr[i])

def sort(arr):
    arr.sort()


def solve():
    task = Task()
    task.solve(1)
    out.close()


solve()"
ChatGPT,codenet,Java,Python,s987117545.py,"def run():
    n = int(input())
    k = int(input())

    ans = 0
    for i in range(k, n+2):
        max_val = i*(2*n-i+1)//2
        min_val = i*(i-1)//2
        ans += (max_val - min_val + 1) % (10**9+7)
    print(ans % (10**9+7))

run()","def run():
    n, k = map(int, input().split())

    ans = 0
    for i in range(k, n+2):
        max_val = i*(2*n-i+1)//2
        min_val = i*(i-1)//2
        ans += (max_val - min_val + 1) % (10**9+7)
    print(ans % (10**9+7))

run()"
ChatGPT,codenet,Java,Python,s685734377.py,"class TaskB:
    def solve(self, testNumber, in, out):
        n = int(in.next())
        a = []
        P, Q = 37, 47
        powP, powQ = [0] * (n + 1), [0] * (n + 1)
        powP[0] = powQ[0] = 1
        for i in range(1, n + 1):
            powP[i] = powP[i - 1] * P
            powQ[i] = powQ[i - 1] * Q
        for i in range(n):
            a.append(list(in.next()))
        
        hashRow = [[0] * n for _ in range(n)]
        hashCol = [[0] * n for _ in range(n)]
        for i in range(n):
            for j in range(n):
                for k in range(n):
                    hashRow[i][k] += ord(a[i][j]) * powP[(j - k + n) % n]
                    hashCol[j][k] += ord(a[i][j]) * powP[(i - k + n) % n]
        
        ans = 0
        for A in range(n):
            for B in range(n):
                ok = True
                for i in range(n):
                    ok &= hashRow[(i + A) % n][B] == hashCol[(i + B) % n][A]
                ans += 1 if ok else 0
        
        out.println(ans)


def main():
    n = int(input())
    task = TaskB()
    task.solve(1, FastScanner(), PrintWriter())
    
if __name__ == '__main__':
    main()","class TaskB:
    def solve(self, testNumber):
        n = int(input())
        a = []
        P, Q = 37, 47
        powP, powQ = [0] * (n + 1), [0] * (n + 1)
        powP[0] = powQ[0] = 1
        for i in range(1, n + 1):
            powP[i] = powP[i - 1] * P
            powQ[i] = powQ[i - 1] * Q
        for i in range(n):
            a.append(list(input()))
        
        hashRow = [[0] * n for _ in range(n)]
        hashCol = [[0] * n for _ in range(n)]
        for i in range(n):
            for j in range(n):
                for k in range(n):
                    hashRow[i][k] += ord(a[i][j]) * powP[(j - k + n) % n]
                    hashCol[j][k] += ord(a[i][j]) * powP[(i - k + n) % n]
        
        ans = 0
        for A in range(n):
            for B in range(n):
                ok = True
                for i in range(n):
                    ok &= hashRow[(i + A) % n][B] == hashCol[(i + B) % n][A]
                ans += 1 if ok else 0
        
        print(ans)


def main():
    task = TaskB()
    task.solve(1)
    
if __name__ == '__main__':
    main()"
ChatGPT,codenet,Java,Python,s380356166.py,"def solve(K, S):
    ans = 0
    for x in range(K+1):
        for y in range(K+1):
            wk = S - x - y
            if 0 <= wk <= K:
                ans += 1
    return ans

K = int(input())
S = int(input())
print(solve(K, S))","def solve(K, S):
    ans = 0
    for x in range(K+1):
        for y in range(K+1):
            wk = S - x - y
            if 0 <= wk <= K:
                ans += 1
    return ans

K, S = map(int, input().split())
print(solve(K, S))"
ChatGPT,codenet,Java,Python,s745776078.py,"import sys

n, m = map(int, sys.stdin.readline().split())
A = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]
b = list(map(int, sys.stdin.readline().split()))

for i in range(n):
    c = 0
    for j in range(m):
        c += A[i][j] * b[j]
    print(c)","n, m = map(int, input().split())
A = [list(map(int, input().split())) for _ in range(n)]
b = [int(input()) for _ in range(m)]

for i in range(n):
    c = 0
    for j in range(m):
        c += A[i][j] * b[j]
    print(c)"
ChatGPT,codenet,Java,Python,s399184958.py,"A = int(input())
B = int(input())
C = int(input())

if A == B and B == C and C == A:
    print(""Yes"")
else:
    print(""No"")","A, B, C = map(int, input().split())

if A == B and B == C and C == A:
    print(""Yes"")
else:
    print(""No"")"
ChatGPT,codenet,Java,Python,s858314534.py,"A = int(input())
B = int(input())
T = int(input())

print((T // A) * B)","A, B, T = map(int, input().split())

print((T // A) * B)"
ChatGPT,codenet,Java,Python,s847387793.py,"class Solver:
    def __init__(self, sc, writer):
        self.sc = sc
        self.writer = writer

    def run(self):
        self.n = self.sc.nextInt()
        self.m = self.sc.nextInt()
        self.q = self.sc.nextInt()
        self.a = [0] * self.q
        self.b = [0] * self.q
        self.c = [0] * self.q
        self.d = [0] * self.q
        for i in range(self.q):
            self.a[i] = self.sc.nextInt()
            self.b[i] = self.sc.nextInt()
            self.c[i] = self.sc.nextInt()
            self.d[i] = self.sc.nextInt()
        self.dfs([1])
        self.writer.println(self.max)

    def dfs(self, array):
        if len(array) > self.n:
            score = 0
            for i in range(self.q):
                if array[self.b[i]] - array[self.a[i]] == self.c[i]:
                    score += self.d[i]
            self.max = max(self.max, score)
            return

        new_array = array[:]
        new_array.append(array[-1])

        while new_array[-1] <= self.m:
            self.dfs(new_array)
            new_array[-1] += 1

class FastScanner:
    def __init__(self):
        self.in_stream = sys.stdin.buffer
        self.buffer = bytearray()
        self.ptr = 0
        self.buflen = 0

    def hasNextByte(self):
        if self.ptr < self.buflen:
            return True
        else:
            self.ptr = 0
            try:
                self.buflen = self.in_stream.readinto(self.buffer)
            except IOError:
                e.printStackTrace()
            if self.buflen <= 0:
                return False
        return True

    def readByte(self):
        if self.hasNextByte():
            self.ptr += 1
            return self.buffer[self.ptr - 1]
        else:
            return -1

    def isPrintableChar(self, c):
        return 33 <= c and c <= 126

    def hasNext(self):
        while self.hasNextByte() and not self.isPrintableChar(self.buffer[self.ptr]):
            self.ptr += 1
        return self.hasNextByte()

    def next(self):
        if not self.hasNext():
            raise NoSuchElementException()
        sb = []
        b = self.readByte()
        while self.isPrintableChar(b):
            sb.append(chr(b))
            b = self.readByte()
        return ''.join(sb)

    def nextLong(self):
        if not self.hasNext():
            raise NoSuchElementException()
        n = 0
        minus = False
        b = self.readByte()
        if b == ord('-'):
            minus = True
            b = self.readByte()
        if b < ord('0') or b > ord('9'):
            raise NumberFormatException()
        while True:
            if ord('0') <= b and b <= ord('9'):
                n *= 10
                n += b - ord('0')
            elif b == -1 or not self.isPrintableChar(b):
                return -n if minus else n
            else:
                raise NumberFormatException()
            b = self.readByte()

    def nextInt(self):
        nl = self.nextLong()
        if nl < -2147483648 or nl > 2147483647:
            raise NumberFormatException()
        return int(nl)

    def nextDouble(self):
        return float(self.next())

    def nextIntArray(self, n):
        return [self.nextInt() for _ in range(n)]

    def nextLongArray(self, n):
        return [self.nextLong() for _ in range(n)]

def main(args):
    sc = FastScanner()
    w = PrintWriter()
    solver = Solver(sc, w)
    solver.run()
    w.flush()

if __name__ == ""__main__"":
    main(sys.argv[1:])","class Solver:
    def run(self):
        self.max = 0
        self.n, self.m, self.q = map(int, input().split())
        self.a = [0] * self.q
        self.b = [0] * self.q
        self.c = [0] * self.q
        self.d = [0] * self.q
        for i in range(self.q):
            self.a[i], self.b[i], self.c[i], self.d[i] = map(int, input().split())
        self.dfs([1])
        print(self.max)

    def dfs(self, array):
        if len(array) > self.n:
            score = 0
            for i in range(self.q):
                if array[self.b[i]] - array[self.a[i]] == self.c[i]:
                    score += self.d[i]
            self.max = max(self.max, score)
            return

        new_array = array[:]
        new_array.append(array[-1])

        while new_array[-1] <= self.m:
            self.dfs(new_array)
            new_array[-1] += 1

def main():
    solver = Solver()
    solver.run()

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Java,Python,s201062219.py,"a = []
x = 0
while True:
    c = int(input())
    mark = input()
    b = int(input())
    
    if mark == ""?"":
        a.append(2000001)
        break
    elif mark == ""+"":
        a.append(c + b)
    elif mark == ""-"":
        a.append(c - b)
    elif mark == ""*"":
        a.append(c * b)
    elif mark == ""/"":
        a.append(c / b)
    
    x += 1

x = 0
while True:
    if a[x] == 2000001:
        break
    print(a[x])
    x += 1","a = []
x = 0
while True:
    c, mark, b = input().split()
    c, b = int(c), int(b)
    
    if mark == ""?"":
        a.append(2000001)
        break
    elif mark == ""+"":
        a.append(c + b)
    elif mark == ""-"":
        a.append(c - b)
    elif mark == ""*"":
        a.append(c * b)
    elif mark == ""/"":
        a.append(c / b)
    
    x += 1

x = 0
while True:
    if a[x] == 2000001:
        break
    print(int(a[x]))
    x += 1"
ChatGPT,codenet,Java,Python,s127819686.py,"a = int(input())
b = int(input())

hb = b // 2

print(a + hb)","a, b = map(int, input().split())

hb = b // 2

print(a + hb)"
ChatGPT,codenet,Java,Python,s910008321.py,"h = int(input())
a = int(input())
if h % a == 0:
    print(h // a)
else:
    print(h // a + 1)","h, a = map(int, input().split())
if h % a == 0:
    print(h // a)
else:
    print(h // a + 1)"
ChatGPT,codenet,Java,Python,s927992720.py,"while True:
    a = int(input())
    op = input()
    b = int(input())
    
    if op == ""?"":
        break
    elif op == ""+"":
        print(a + b)
    elif op == ""-"":
        print(a - b)
    elif op == ""*"":
        print(a * b)
    elif op == ""/"":
        print(a / b)","while True:
    a, op, b = input().split()
    a = int(a)
    b = int(b)
    
    if op == ""?"":
        break
    elif op == ""+"":
        print(a + b)
    elif op == ""-"":
        print(a - b)
    elif op == ""*"":
        print(a * b)
    elif op == ""/"":
        print(a // b)"
ChatGPT,codenet,Java,Python,s780604068.py,"N = int(input())

map = []
for i in range(N * 2):
    map.append(int(input()))

map.sort()

max = 0
for i in range(0, N * 2, 2):
    max += min(map[i], map[i + 1])

print(max)","N = int(input())

maps = list(map(int, input().split()))

maps.sort()

max_val = 0
for i in range(0, N * 2, 2):
    max_val += min(maps[i], maps[i + 1])

print(max_val)"
ChatGPT,codenet,Java,Python,s022525398.py,"a = input()
b = input()
print(b + a)","a, b = input().split()
print(b + a)"
ChatGPT,codenet,Java,Python,s720527488.py,"import sys

def main():
    m, n = map(int, input().split())
    manju = list(map(int, input().split()))
    boxlen = []
    boxcost = []
    for _ in range(n):
        l, c = map(int, input().split())
        boxlen.append(l)
        boxcost.append(c)

    manju.sort()
    dp = [[0] * (n+1) for _ in range(m+1)]
    for i in range(m-1, -1, -1):
        for j in range(n-1, -1, -1):
            length = i+boxlen[j] if i+boxlen[j] < m else m
            cnt = sum(manju[m-1-k] for k in range(i, length))
            dp[i][j] = max(dp[i][j], dp[length][j+1] + cnt - boxcost[j])
            dp[i][j] = max(dp[i][j], dp[i][j+1])

    print(dp[0][0])

if __name__ == '__main__':
    main()","import sys

def main():
    m, n = map(int, input().split())
    manju = []
    for _ in range(m):
        manju.append(int(input()))
    boxlen = []
    boxcost = []
    for _ in range(n):
        l, c = map(int, input().split())
        boxlen.append(l)
        boxcost.append(c)

    manju.sort()
    dp = [[0] * (n+1) for _ in range(m+1)]
    for i in range(m-1, -1, -1):
        for j in range(n-1, -1, -1):
            length = i+boxlen[j] if i+boxlen[j] < m else m
            cnt = sum(manju[m-1-k] for k in range(i, length))
            dp[i][j] = max(dp[i][j], dp[length][j+1] + cnt - boxcost[j])
            dp[i][j] = max(dp[i][j], dp[i][j+1])

    print(dp[0][0])

if __name__ == '__main__':
    main()"
ChatGPT,codenet,Java,Python,s584135649.py,"i = 0

for i in range(1, 6):
    n = int(input())
    if n == 0:
        break

print(i)","i = 0

n = [0]
n += list(map(int, input().split()))
for i in range(1, 6):
    if n[i] == 0:
        break

print(i)"
ChatGPT,codenet,Java,Python,s307170605.py,"def main():
    for i in range(5):
        if int(input()) == 0:
            print(i+1)
            break

if __name__ == ""__main__"":
    main()","def main():
    inputs = list(input().split())
    for i in range(5):
        if int(inputs[i]) == 0:
            print(i+1)
            break

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Java,Python,s826491904.py,"def solve():
    N = int(input())
    max_val = min_val = int(input())
    for i in range(1, N):
        in_val = int(input())
        max_val = max(max_val, in_val)
        min_val = min(min_val, in_val)
    print(max_val - min_val)

solve()","def solve():
    N = int(input())
    inputs = list(map(int, input().split()))
    max_val = min_val = inputs[0]
    for i in range(1, N):
        in_val = inputs[i]
        max_val = max(max_val, in_val)
        min_val = min(min_val, in_val)
    print(max_val - min_val)

solve()"
ChatGPT,codenet,Java,Python,s897176066.py,"N = int(input())
A = []
for i in range(N):
    A.append(int(input()))
A.sort()
for j in range(1, N):
    if A[j] == A[j-1]:
        print(""NO"")
        exit(0)
print(""YES"")","N = int(input())
A = list(map(int, input().split()))
A.sort()
for j in range(1, N):
    if A[j] == A[j-1]:
        print(""NO"")
        exit(0)
print(""YES"")"
ChatGPT,codenet,Java,Python,s575985145.py,"import sys

size = int(input())
graph = [[0] * size for _ in range(size)]

for _ in range(size):
    id, cols = map(int, input().split())
    row = [0] * size
    for _ in range(cols):
        col = int(input())
        row[col - 1] = 1
    graph[id - 1] = row

for row in graph:
    print(' '.join(map(str, row)))","import sys

size = int(input())
graph = [[0] * size for _ in range(size)]

for _ in range(size):
    inputs = list(map(int, input().split()))
    id, cols = inputs[0], inputs[1]
    row = [0] * size
    for i in range(cols):
        col = inputs[i + 2]
        row[col - 1] = 1
    graph[id - 1] = row

for row in graph:
    print(' '.join(map(str, row)))"
ChatGPT,codenet,Java,Python,s319823779.py,"import sys

a, b, c, x = map(int, sys.stdin.readline().split())

res = 0

for i in range(a+1):
    for j in range(b+1):
        for k in range(c+1):
            total = 500 * i + 100 * j + 50 * k
            
            if total == x:
                res += 1

print(res)","import sys

a, b, c, x = int(input()), int(input()), int(input()), int(input())

res = 0

for i in range(a+1):
    for j in range(b+1):
        for k in range(c+1):
            total = 500 * i + 100 * j + 50 * k
            
            if total == x:
                res += 1

print(res)"
ChatGPT,codenet,Java,Python,s125881159.py,"n = int(input())
d = 0
for i in range(n):
    d += int(input()) % 2
print(""YES"" if d % 2 == 0 else ""NO"")","n = int(input())
d = 0
inputs = list(input().split())
for i in range(n):
    d += int(inputs[i]) % 2
print(""YES"" if d % 2 == 0 else ""NO"")"
ChatGPT,codenet,Java,Python,s537034016.py,"dp = []

def dfs(s):
    if dp[s] != -1:
        return dp[s]

    ret = 0
    for i in range(s - 3, -1, -1):
        ret += dfs(i)
        ret %= mod
    return ret

s = int(input())

dp = [-1] * (s + 1)
dp[0] = 1
print(dfs(s))","mod = 1000000007
dp = []

def dfs(s):
    if dp[s] != -1:
        return dp[s]

    ret = 0
    for i in range(s - 3, -1, -1):
        ret += dfs(i)
        ret %= mod
    return ret

s = int(input())

dp = [-1] * (s + 1)
dp[0] = 1
print(dfs(s))"
ChatGPT,codenet,Java,Python,s818271374.py,"import sys

N = int(input())
count1 = 0
count2 = 0

for i in range(N):
    a = int(input())
    if a % 4 == 0:
        count1 += 1
    elif a % 2 == 0 and (a // 2) % 2 == 1:
        count2 += 1

if count1 >= N // 2:
    print(""Yes"")
elif ((N // 2 - count1) * 2 + N % 2) == count2:
    print(""Yes"")
else:
    print(""No"")","import sys

N = int(input())
count1 = 0
count2 = 0

inputs = list(input().split())
for i in range(N):
    a = int(inputs[i])
    if a % 4 == 0:
        count1 += 1
    elif a % 2 == 0 and (a // 2) % 2 == 1:
        count2 += 1

if count1 >= N // 2:
    print(""Yes"")
elif ((N // 2 - count1) * 2 + N % 2) == count2:
    print(""Yes"")
else:
    print(""No"")"
ChatGPT,codenet,Java,Python,s545439898.py,"count = int(input())
givingNumbers = []

# Read Numbers
for i in range(count):
    givingNumbers.append(int(input()))

# Reversing Numbers
for i in range(count-1, -1, -1):
    print(givingNumbers[i], end="""")
    
    if i > 0:
        print("" "", end="""")

print()","count = int(input())
givingNumbers = list(map(int, input().split()))

# Reversing Numbers
for i in range(count-1, -1, -1):
    print(givingNumbers[i], end="""")
    
    if i > 0:
        print("" "", end="""")

print()"
ChatGPT,codenet,Java,Python,s428436430.py,"class calArea:
    def Area(self, w, h):
        area = w * h
        return area

arr = []

for i in range(4):
    arr.append(int(input()))

ab = calArea()
area1 = ab.Area(arr[0], arr[1])
area2 = ab.Area(arr[2], arr[3])

if area1 > area2:
    print(area1)
elif area1 < area2:
    print(area2)
else:
    print(area1)","class calArea:
    def Area(self, w, h):
        area = w * h
        return area

arr = list(map(int, input().split()))

ab = calArea()
area1 = ab.Area(arr[0], arr[1])
area2 = ab.Area(arr[2], arr[3])

if area1 > area2:
    print(area1)
elif area1 < area2:
    print(area2)
else:
    print(area1)"
ChatGPT,codenet,Java,Python,s518927375.py,"k = int(input())
a = int(input())
b = int(input())

if b <= a + 2:
    print(1 + k)
    exit()

x = k - (a - 1)
ans = a + (x // 2) * (b - a) + (x % 2)

print(ans)","k, a, b = map(int, input().split())

if b <= a + 2:
    print(1 + k)
    exit()

x = k - (a - 1)
ans = a + (x // 2) * (b - a) + (x % 2)

print(ans)"
ChatGPT,codenet,Java,Python,s316260310.py,"import math
import sys
import random

class Solver:
    def __init__(self):
        self.hp = Helper()

    def solve(self):
        tc = self.hp.nextInt()
        for tce in range(1, tc+1):
            self.solve(tce)
        self.hp.flush()

    def solve(self, tc):
        MAXN = 1000006
        MOD = int(1e9) + 7

        N = self.hp.nextInt()
        K = self.hp.nextLong()
        A = self.hp.getIntArray(N)

        straight = []
        cycle = []
        vis = [False] * N
        curr = 0
        while not vis[curr]:
            vis[curr] = True
            curr = A[curr] - 1

        st = 0
        while st != curr:
            straight.append(st)
            st = A[st] - 1

        cycle.append(curr)
        curr = A[curr] - 1
        while curr != cycle[0]:
            cycle.append(curr)
            curr = A[curr] - 1

        if K < len(straight):
            self.hp.println(straight[K] + 1)
        else:
            K -= len(straight)
            self.hp.println(cycle[K % len(cycle)] + 1)


class Helper:
    def __init__(self):
        self.MOD = 0
        self.MAXN = 0
        self.rnd = random.Random()

    def setFactorial(self):
        self.factorial = [0] * self.MAXN
        self.factorial[0] = 1
        for i in range(1, self.MAXN):
            self.factorial[i] = self.factorial[i - 1] * i % MOD

    def getFactorial(self, n):
        if not hasattr(self, 'factorial'):
            self.setFactorial()
        return self.factorial[n]

    def ncr(self, n, r):
        if r > n:
            return 0
        if not hasattr(self, 'factorial'):
            self.setFactorial()
        numerator = self.factorial[n]
        denominator = self.factorial[r] * self.factorial[n - r] % self.MOD
        return numerator * self.pow(denominator, self.MOD - 2, self.MOD) % self.MOD

    def getIntArray(self, size):
        ar = [0] * size
        for i in range(size):
            ar[i] = self.nextInt()
        return ar

    def joinElements(self, *ar):
        return ' '.join(map(str, ar))

    def gcd(self, a, b):
        return b if a == 0 else self.gcd(b % a, a)

    def max(self, *ar):
        return max(ar)

    def min(self, *ar):
        return min(ar)

    def sum(self, *ar):
        return sum(ar)

    def shuffle(self, ar):
        random.shuffle(ar)

    def reverse(self, ar):
        ar.reverse()

    def pow(self, base, exp, MOD):
        base %= MOD
        ret = 1
        while exp > 0:
            if exp & 1:
                ret = ret * base % MOD
            base = base * base % MOD
            exp >>= 1
        return ret

    def initIO(self, inputFile, outputFile):
        self.inp = open(inputFile, 'r')
        self.out = open(outputFile, 'w')

    def next(self):
        return next(self.inp).strip()

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return int(self.next())

    def print(self, *args, **kwargs):
        print(*args, **kwargs, file=self.out)

    def flush(self):
        self.out.flush()


solver = Solver()
solver.solve()","import math
import sys
import random

class Solver:
    def __init__(self):
        self.hp = Helper()

    def solve(self):
        tc = self.hp.nextInt()
        for tce in range(1, tc+1):
            self.solve(tce)
        self.hp.flush()

    def solve(self, tc):
        MAXN = 1000006
        MOD = int(1e9) + 7

        N = self.hp.nextInt()
        K = self.hp.nextLong()
        A = self.hp.getIntArray(N)

        straight = []
        cycle = []
        vis = [False] * N
        curr = 0
        while not vis[curr]:
            vis[curr] = True
            curr = A[curr] - 1

        st = 0
        while st != curr:
            straight.append(st)
            st = A[st] - 1

        cycle.append(curr)
        curr = A[curr] - 1
        while curr != cycle[0]:
            cycle.append(curr)
            curr = A[curr] - 1

        if K < len(straight):
            self.hp.println(straight[K] + 1)
        else:
            K -= len(straight)
            self.hp.println(cycle[K % len(cycle)] + 1)


class Helper:
    def __init__(self):
        self.MOD = 0
        self.MAXN = 0
        self.rnd = random.Random()

    def setFactorial(self):
        self.factorial = [0] * self.MAXN
        self.factorial[0] = 1
        for i in range(1, self.MAXN):
            self.factorial[i] = self.factorial[i - 1] * i % MOD

    def getFactorial(self, n):
        if not hasattr(self, 'factorial'):
            self.setFactorial()
        return self.factorial[n]

    def ncr(self, n, r):
        if r > n:
            return 0
        if not hasattr(self, 'factorial'):
            self.setFactorial()
        numerator = self.factorial[n]
        denominator = self.factorial[r] * self.factorial[n - r] % self.MOD
        return numerator * self.pow(denominator, self.MOD - 2, self.MOD) % self.MOD

    def getIntArray(self, size):
        ar = [0] * size
        for i in range(size):
            ar[i] = self.nextInt()
        return ar

    def joinElements(self, *ar):
        return ' '.join(map(str, ar))

    def gcd(self, a, b):
        return b if a == 0 else self.gcd(b % a, a)

    def max(self, *ar):
        return max(ar)

    def min(self, *ar):
        return min(ar)

    def sum(self, *ar):
        return sum(ar)

    def shuffle(self, ar):
        random.shuffle(ar)

    def reverse(self, ar):
        ar.reverse()

    def pow(self, base, exp, MOD):
        base %= MOD
        ret = 1
        while exp > 0:
            if exp & 1:
                ret = ret * base % MOD
            base = base * base % MOD
            exp >>= 1
        return ret

    def initIO(self, inputFile, outputFile):
        self.inp = open(inputFile, 'r')
        self.out = open(outputFile, 'w')

    def next(self):
        return next(self.inp).strip()

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return int(self.next())

    def print(self, *args, **kwargs):
        print(*args, **kwargs, file=self.out)

    def flush(self):
        self.out.flush()


solver = Solver()
solver.solve()"
ChatGPT,codenet,Java,Python,s937747608.py,"# Here is the equivalent Python code for the given Java code:

a = int(input())
b = int(input())
c = int(input())
d = int(input())

if a*b >= c*d:
    print(a*b)
else:
    print(c*d)","# Here is the equivalent Python code for the given Java code:

a, b, c, d = map(int, input().split())

if a*b >= c*d:
    print(a*b)
else:
    print(c*d)"
ChatGPT,codenet,Java,Python,s573993837.py,"import sys
def solve(n, m):
    if n == 0:
        return 0
    if n == m:
        return 0
    if n > m:
        n = m + n % m
        n -= m
        return min(m - n, n)
    return min(m - n, n)

def main():
    t = 1
    for _ in range(t):
        n = int(input())
        m = int(input())
        print(solve(n, m))

if __name__ == ""__main__"":
    main()","import sys
def solve(n, m):
    if n == 0:
        return 0
    if n == m:
        return 0
    if n > m:
        n = m + n % m
        n -= m
        return min(m - n, n)
    return min(m - n, n)

def main():
    t = 1
    for _ in range(t):
        n, m = map(int, input().split())
        print(solve(n, m))

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Java,Python,s490798303.py,"n, k = map(int, input().split())

map = {}

for i in range(k):
    d = int(input())
    for j in range(d):
        person = int(input())

        if person not in map:
            map[person] = []
        map[person].append(d)

count = 0
for i in range(1, n + 1):
    if i not in map:
        count += 1

print(count)","n, k = map(int, input().split())

maps = {}

for i in range(k):
    d = int(input())
    inputs = list(input().split())
    for j in range(d):
        person = int(inputs[j])

        if person not in maps:
            maps[person] = []
        maps[person].append(d)

count = 0
for i in range(1, n + 1):
    if i not in maps:
        count += 1

print(count)"
ChatGPT,codenet,Java,Python,s514557145.py,"def modInv(x):
    return modPow(x, MOD2 - 2)

def modPow(x, y):
    z = 1
    while y > 0:
        if y % 2 == 0:
            x = (x * x) % MOD2
            y //= 2
        else:
            z = (z * x) % MOD2
            y -= 1
    return z

class S:
    E = S(0, Integer.MAX_VALUE//2, Integer.MIN_VALUE//2)

    def __init__(self, sum, l, r):
        self.sum = sum
        self.l = l
        self.r = r

    @staticmethod
    def op(s1, s2):
        sum = s1.sum + s2.sum
        if sum >= MOD2:
            sum -= MOD2
        return S(sum, min(s1.l, s2.l), max(s1.r, s2.r))

    @staticmethod
    def map(f, s):
        c = (tenmod[(f.N-s.l)] - tenmod[(f.N-s.r-1)])
        if c < 0:
            c += MOD2
        return S(((f.D*c)%MOD2*inv9)%MOD2, s.l, s.r)

class F:
    I = F(0, 0)

    def __init__(self, D, N):
        self.D = D
        self.N = N

    @staticmethod
    def composite(f, g):
        return F(f.D, f.N)

MOD1 = 1000000007
MOD2 = 998244353
tenmod = []

def main():
    N, Q = map(int, input().split())
    tenmod = [0] * (N + 1)
    tenmod[0] = 1
    for j in range(1, N + 1):
        tenmod[j] = (tenmod[j-1] * 10) % MOD2
    dat = [S(tenmod[N-i-1], i, i) for i in range(N)]
    lazySegTree = LazySegTree(dat, S.op, S.E, S.map, F.composite, F.I)
    for j in range(Q):
        l, r, D = map(int, input().split())
        lazySegTree.apply(l, r+1, F(D, N))
        print(lazySegTree.allProd().sum)

class LazySegTree:
    def __init__(self, n, op, e, mapping, composition, id):
        self.MAX = n
        k = 1
        while k < n:
            k <<= 1
        self.N = k
        self.Log = len(bin(self.N)) - 2
        self.Op = op
        self.E = e
        self.Mapping = mapping
        self.Composition = composition
        self.Id = id
        self.Dat = [self.E] * (self.N << 1)
        self.Laz = [self.Id] * self.N
        for i in range(self.MAX):
            self.Dat[self.N + i] = self.E
        for i in range(self.N - 1, 0, -1):
            self.Dat[i] = self.Op(self.Dat[i << 1 | 0], self.Dat[i << 1 | 1])

    def push(self, k):
        if self.Laz[k] == self.Id:
            return
        lk = k << 1 | 0
        rk = k << 1 | 1
        self.Dat[lk] = self.Mapping(self.Laz[k], self.Dat[lk])
        self.Dat[rk] = self.Mapping(self.Laz[k], self.Dat[rk])
        if lk < self.N:
            self.Laz[lk] = self.Composition(self.Laz[k], self.Laz[lk])
        if rk < self.N:
            self.Laz[rk] = self.Composition(self.Laz[k], self.Laz[rk])
        self.Laz[k] = self.Id

    def pushTo(self, k):
        for i in range(self.Log, 0, -1):
            self.push(k >> i)

    def pushTo(self, lk, rk):
        for i in range(self.Log, 0, -1):
            if ((lk >> i) << i) != lk:
                self.push(lk >> i)
            if ((rk >> i) << i) != rk:
                self.push(rk >> i)

    def updateFrom(self, k):
        k >>= 1
        while k > 0:
            self.Dat[k] = self.Op(self.Dat[k << 1 | 0], self.Dat[k << 1 | 1])
            k >>= 1

    def updateFrom(self, lk, rk):
        for i in range(1, self.Log + 1):
            if ((lk >> i) << i) != lk:
                lki = lk >> i
                self.Dat[lki] = self.Op(self.Dat[lki << 1 | 0], self.Dat[lki << 1 | 1])
            if ((rk >> i) << i) != rk:
                rki = (rk - 1) >> i
                self.Dat[rki] = self.Op(self.Dat[rki << 1 | 0], self.Dat[rki << 1 | 1])

    def set(self, p, x):
        self.exclusiveRangeCheck(p)
        p += self.N
        self.pushTo(p)
        self.Dat[p] = x
        self.updateFrom(p)

    def get(self, p):
        self.exclusiveRangeCheck(p)
        p += self.N
        self.pushTo(p)
        return self.Dat[p]

    def allProd(self):
        return self.Dat[1]

    def apply(self, p, f):
        self.exclusiveRangeCheck(p)
        p += self.N
        self.pushTo(p)
        self.Dat[p] = self.Mapping(f, self.Dat[p])
        self.updateFrom(p)

    def apply(self, l, r, f):
        if l > r:
            raise Exception(""Invalid range: [{}, {})"".format(l, r))
        self.inclusiveRangeCheck(l)
        self.inclusiveRangeCheck(r)
        if l == r:
            return
        l += self.N
        r += self.N
        self.pushTo(l, r)
        while l < r:
            if (l & 1) == 1:
                self.Dat[l] = self.Mapping(f, self.Dat[l])
                if l < self.N:
                    self.Laz[l] = self.Composition(f, self.Laz[l])
                l += 1
            if (r & 1) == 1:
                r -= 1
                self.Dat[r] = self.Mapping(f, self.Dat[r])
                if r < self.N:
                    self.Laz[r] = self.Composition(f, self.Laz[r])
            l >>= 1
            r >>= 1
        self.updateFrom(l, r)

    def maxRight(self, l, g):
        self.inclusiveRangeCheck(l)
        if not g(self.E):
            raise Exception(""Identity element must satisfy the condition."")
        if l == self.MAX:
            return self.MAX
        l += self.N
        self.pushTo(l)
        sum = self.E
        while True:
            l >>= l & -l
            if not g(self.Op(sum, self.Dat[l])):
                while l < self.N:
                    self.push(l)
                    l = l << 1
                    if g(self.Op(sum, self.Dat[l])):
                        sum = self.Op(sum, self.Dat[l])
                        l += 1
                return l - self.N
            sum = self.Op(sum, self.Dat[l])
            l += 1

    def minLeft(self, r, g):
        self.inclusiveRangeCheck(r)
        if not g(self.E):
            raise Exception(""Identity element must satisfy the condition."")
        if r == 0:
            return 0
        r += self.N
        self.pushTo(r - 1)
        sum = self.E
        while True:
            r -= 1
            while r > 1 and (r & 1) == 1:
                r >>= 1
            if not g(self.Op(self.Dat[r], sum)):
                while r < self.N:
                    self.push(r)
                    r = r << 1 | 1
                    if g(self.Op(self.Dat[r], sum)):
                        sum = self.Op(self.Dat[r], sum)
                        r -= 1
                return r + 1 - self.N
            sum = self.Op(self.Dat[r], sum)

    def exclusiveRangeCheck(self, p):
        if p < 0 or p >= self.MAX:
            raise Exception(""Index {} is not in [{}, {})"".format(p, 0, self.MAX))

    def inclusiveRangeCheck(self, p):
        if p < 0 or p > self.MAX:
            raise Exception(""Index {} is not in [{}, {}]"".format(p, 0, self.MAX))

def main():
    N, Q = map(int, input().split())
    tenmod = [0] * (N + 1)
    tenmod[0] = 1
    for j in range(1, N + 1):
        tenmod[j] = (tenmod[j-1] * 10) % MOD2
    dat = [S(tenmod[N-i-1], i, i) for i in range(N)]
    lazySegTree = LazySegTree(dat, S.op, S.E, S.map, F.composite, F.I)
    for j in range(Q):
        l, r, D = map(int, input().split())
        lazySegTree.apply(l, r+1, F(D, N))
        print(lazySegTree.allProd().sum)","def modInv(x):
    return modPow(x, MOD2 - 2)

def modPow(x, y):
    z = 1
    while y > 0:
        if y % 2 == 0:
            x = (x * x) % MOD2
            y //= 2
        else:
            z = (z * x) % MOD2
            y -= 1
    return z

class S:
    E = S(0, Integer.MAX_VALUE//2, Integer.MIN_VALUE//2)

    def __init__(self, sum, l, r):
        self.sum = sum
        self.l = l
        self.r = r

    @staticmethod
    def op(s1, s2):
        sum = s1.sum + s2.sum
        if sum >= MOD2:
            sum -= MOD2
        return S(sum, min(s1.l, s2.l), max(s1.r, s2.r))

    @staticmethod
    def map(f, s):
        c = (tenmod[(f.N-s.l)] - tenmod[(f.N-s.r-1)])
        if c < 0:
            c += MOD2
        return S(((f.D*c)%MOD2*inv9)%MOD2, s.l, s.r)

class F:
    I = F(0, 0)

    def __init__(self, D, N):
        self.D = D
        self.N = N

    @staticmethod
    def composite(f, g):
        return F(f.D, f.N)

MOD1 = 1000000007
MOD2 = 998244353
tenmod = []

def main():
    N, Q = map(int, input().split())
    tenmod = [0] * (N + 1)
    tenmod[0] = 1
    for j in range(1, N + 1):
        tenmod[j] = (tenmod[j-1] * 10) % MOD2
    dat = [S(tenmod[N-i-1], i, i) for i in range(N)]
    lazySegTree = LazySegTree(dat, S.op, S.E, S.map, F.composite, F.I)
    for j in range(Q):
        l, r, D = map(int, input().split())
        lazySegTree.apply(l, r+1, F(D, N))
        print(lazySegTree.allProd().sum)

class LazySegTree:
    def __init__(self, n, op, e, mapping, composition, id):
        self.MAX = n
        k = 1
        while k < n:
            k <<= 1
        self.N = k
        self.Log = len(bin(self.N)) - 2
        self.Op = op
        self.E = e
        self.Mapping = mapping
        self.Composition = composition
        self.Id = id
        self.Dat = [self.E] * (self.N << 1)
        self.Laz = [self.Id] * self.N
        for i in range(self.MAX):
            self.Dat[self.N + i] = self.E
        for i in range(self.N - 1, 0, -1):
            self.Dat[i] = self.Op(self.Dat[i << 1 | 0], self.Dat[i << 1 | 1])

    def push(self, k):
        if self.Laz[k] == self.Id:
            return
        lk = k << 1 | 0
        rk = k << 1 | 1
        self.Dat[lk] = self.Mapping(self.Laz[k], self.Dat[lk])
        self.Dat[rk] = self.Mapping(self.Laz[k], self.Dat[rk])
        if lk < self.N:
            self.Laz[lk] = self.Composition(self.Laz[k], self.Laz[lk])
        if rk < self.N:
            self.Laz[rk] = self.Composition(self.Laz[k], self.Laz[rk])
        self.Laz[k] = self.Id

    def pushTo(self, k):
        for i in range(self.Log, 0, -1):
            self.push(k >> i)

    def pushTo(self, lk, rk):
        for i in range(self.Log, 0, -1):
            if ((lk >> i) << i) != lk:
                self.push(lk >> i)
            if ((rk >> i) << i) != rk:
                self.push(rk >> i)

    def updateFrom(self, k):
        k >>= 1
        while k > 0:
            self.Dat[k] = self.Op(self.Dat[k << 1 | 0], self.Dat[k << 1 | 1])
            k >>= 1

    def updateFrom(self, lk, rk):
        for i in range(1, self.Log + 1):
            if ((lk >> i) << i) != lk:
                lki = lk >> i
                self.Dat[lki] = self.Op(self.Dat[lki << 1 | 0], self.Dat[lki << 1 | 1])
            if ((rk >> i) << i) != rk:
                rki = (rk - 1) >> i
                self.Dat[rki] = self.Op(self.Dat[rki << 1 | 0], self.Dat[rki << 1 | 1])

    def set(self, p, x):
        self.exclusiveRangeCheck(p)
        p += self.N
        self.pushTo(p)
        self.Dat[p] = x
        self.updateFrom(p)

    def get(self, p):
        self.exclusiveRangeCheck(p)
        p += self.N
        self.pushTo(p)
        return self.Dat[p]

    def allProd(self):
        return self.Dat[1]

    def apply(self, p, f):
        self.exclusiveRangeCheck(p)
        p += self.N
        self.pushTo(p)
        self.Dat[p] = self.Mapping(f, self.Dat[p])
        self.updateFrom(p)

    def apply(self, l, r, f):
        if l > r:
            raise Exception(""Invalid range: [{}, {})"".format(l, r))
        self.inclusiveRangeCheck(l)
        self.inclusiveRangeCheck(r)
        if l == r:
            return
        l += self.N
        r += self.N
        self.pushTo(l, r)
        while l < r:
            if (l & 1) == 1:
                self.Dat[l] = self.Mapping(f, self.Dat[l])
                if l < self.N:
                    self.Laz[l] = self.Composition(f, self.Laz[l])
                l += 1
            if (r & 1) == 1:
                r -= 1
                self.Dat[r] = self.Mapping(f, self.Dat[r])
                if r < self.N:
                    self.Laz[r] = self.Composition(f, self.Laz[r])
            l >>= 1
            r >>= 1
        self.updateFrom(l, r)

    def maxRight(self, l, g):
        self.inclusiveRangeCheck(l)
        if not g(self.E):
            raise Exception(""Identity element must satisfy the condition."")
        if l == self.MAX:
            return self.MAX
        l += self.N
        self.pushTo(l)
        sum = self.E
        while True:
            l >>= l & -l
            if not g(self.Op(sum, self.Dat[l])):
                while l < self.N:
                    self.push(l)
                    l = l << 1
                    if g(self.Op(sum, self.Dat[l])):
                        sum = self.Op(sum, self.Dat[l])
                        l += 1
                return l - self.N
            sum = self.Op(sum, self.Dat[l])
            l += 1

    def minLeft(self, r, g):
        self.inclusiveRangeCheck(r)
        if not g(self.E):
            raise Exception(""Identity element must satisfy the condition."")
        if r == 0:
            return 0
        r += self.N
        self.pushTo(r - 1)
        sum = self.E
        while True:
            r -= 1
            while r > 1 and (r & 1) == 1:
                r >>= 1
            if not g(self.Op(self.Dat[r], sum)):
                while r < self.N:
                    self.push(r)
                    r = r << 1 | 1
                    if g(self.Op(self.Dat[r], sum)):
                        sum = self.Op(self.Dat[r], sum)
                        r -= 1
                return r + 1 - self.N
            sum = self.Op(self.Dat[r], sum)

    def exclusiveRangeCheck(self, p):
        if p < 0 or p >= self.MAX:
            raise Exception(""Index {} is not in [{}, {})"".format(p, 0, self.MAX))

    def inclusiveRangeCheck(self, p):
        if p < 0 or p > self.MAX:
            raise Exception(""Index {} is not in [{}, {}]"".format(p, 0, self.MAX))

def main():
    N, Q = map(int, input().split())
    tenmod = [0] * (N + 1)
    tenmod[0] = 1
    for j in range(1, N + 1):
        tenmod[j] = (tenmod[j-1] * 10) % MOD2
    dat = [S(tenmod[N-i-1], i, i) for i in range(N)]
    lazySegTree = LazySegTree(dat, S.op, S.E, S.map, F.composite, F.I)
    for j in range(Q):
        l, r, D = map(int, input().split())
        lazySegTree.apply(l, r+1, F(D, N))
        print(lazySegTree.allProd().sum)"
ChatGPT,codenet,Java,Python,s682242794.py,"class Main:
    def solve(self):
        for i in range(7):
            high = int(input())
            low = int(input())
            sa = high - low
            print(sa)

obj = Main()
obj.solve()","class Main:
    def solve(self):
        for i in range(7):
            high, low = map(int, input().split())
            sa = high - low
            print(sa)

obj = Main()
obj.solve()"
ChatGPT,codenet,Java,Python,s291405468.py,"import sys

def main():
    inputs = sys.stdin.readline().split()
    num1 = int(inputs[0])
    num2 = int(inputs[1])
    print(""Yes"" if num1 % 500 <= num2 else ""No"")

if __name__ == ""__main__"":
    main()","import sys

def main():
    num1 = int(input())
    num2 = int(input())
    print(""Yes"" if num1 % 500 <= num2 else ""No"")

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Java,Python,s943650310.py,"X = int(input())
t = int(input())

if X - t >= 0:
    print(X - t)
else:
    print(0)","X, t = map(int, input().split())

if X - t >= 0:
    print(X - t)
else:
    print(0)"
ChatGPT,codenet,Java,Python,s077706488.py,"N = int(input())
X = int(input())
m = [0] * N
m[0] = int(input())
X -= m[0]
min_val = m[0]
for i in range(1, N):
    m[i] = int(input())
    X -= m[i]
    if m[i] < min_val:
        min_val = m[i]
print(N + X // min_val)","N, X = map(int, input().split())
m = [0] * N
m[0] = int(input())
X -= m[0]
min_val = m[0]
for i in range(1, N):
    m[i] = int(input())
    X -= m[i]
    if m[i] < min_val:
        min_val = m[i]
print(N + X // min_val)"
ChatGPT,codenet,Java,Python,s973587235.py,"n = int(input())

minN = int(input()) - 1

for i in range(n - 1):
    h = int(input())
    if minN == h:
        minN = h
    elif minN == h - 1:
        minN = h - 1
    elif minN < h - 1:
        minN = h - 1
    elif minN > h:
        print(""No"")
        exit()

print(""Yes"")","n = int(input())

inputs = list(input().split())
minN = int(inputs[0]) - 1

for i in range(1, n - 1):
    h = int(inputs[i])
    if minN == h:
        minN = h
    elif minN == h - 1:
        minN = h - 1
    elif minN < h - 1:
        minN = h - 1
    elif minN > h:
        print(""No"")
        exit()

print(""Yes"")"
ChatGPT,codenet,Java,Python,s442273167.py,"n = int(input())
l = []
r = []
for i in range(n):
  l.append(int(input()))
  r.append(int(input()))

sum = 0
for i in range(n):
  sum += r[i] - l[i] + 1

print(sum)","n = int(input())
l = []
r = []
for i in range(n):
  inputs = list(input().split())
  l.append(int(inputs[0]))
  r.append(int(inputs[1]))

sum = 0
for i in range(n):
  sum += r[i] - l[i] + 1

print(sum)"
ChatGPT,codenet,Java,Python,s965025950.py,"x = int(input())
y = int(input())
z = int(input())
print(z, x, y)","x, y, z = map(int, input().split())
print(z, x, y)"
ChatGPT,codenet,Java,Python,s902370101.py,"n = int(input())
array = []
max_val = 0
min_val = 10000

for i in range(n):
    num = int(input())
    array.append(num)
    if max_val < num:
        max_val = num
    
    if min_val > num:
        min_val = num

print(max_val - min_val)","n = int(input())
array = []
max_val = 0
min_val = 10000

inputs = list(input().split())
for i in range(n):
    num = int(inputs[i])
    array.append(num)
    if max_val < num:
        max_val = num
    
    if min_val > num:
        min_val = num

print(max_val - min_val)"
ChatGPT,codenet,Java,Python,s918182055.py,"import heapq
import sys

class MyScanner:
    BUFFER_SIZE = 8192

    def __init__(self, stream=sys.stdin):
        self.stream = stream
        self.buffer = bytearray(MyScanner.BUFFER_SIZE)
        self.pointer = 0
        self.buffer_length = 0

    def read_byte(self):
        if self.pointer < self.buffer_length:
            result = self.buffer[self.pointer]
            self.pointer += 1
            return result
        try:
            self.buffer_length = self.stream.readinto(self.buffer)
        except IOError as e:
            raise AssertionError(None, e)
        if self.buffer_length == -1:
            return -1
        self.pointer = 1
        return self.buffer[0]

    @staticmethod
    def is_printable_char_except_space(c):
        return 33 <= c <= 126

    def next(self):
        c = self.read_byte()
        while not (c == -1 or MyScanner.is_printable_char_except_space(c)):
            c = self.read_byte()
        if c == -1:
            raise StopIteration()
        b = bytearray()
        while c != -1 and MyScanner.is_printable_char_except_space(c):
            b.append(c)
            c = self.read_byte()
        return b.decode()

    def next_int(self):
        n = self.next()
        return int(n)

    def next_long(self):
        n = self.next()
        return int(n)

    def next_double(self):
        n = self.next()
        return float(n)

    def next_char(self):
        c = self.read_byte()
        while not (c == -1 or MyScanner.is_printable_char_except_space(c)):
            c = self.read_byte()
        if c == -1:
            raise StopIteration()
        return chr(c)

    def next_int_array(self, n):
        return [self.next_int() for _ in range(n)]

    def next_long_array(self, n):
        return [self.next_long() for _ in range(n)]

    def next_char_array(self, n):
        return [self.next_char() for _ in range(n)]

class MyWriter:
    def __init__(self, stream=sys.stdout):
        self.stream = stream

    def join_and_println(self, x, delimiter=' '):
        if len(x) > 0:
            self.stream.write(str(x[0]))
            for i in range(1, len(x)):
                self.stream.write(delimiter + str(x[i]))
        self.stream.write('\n')
        self.stream.flush()

def main():
    out = MyWriter()

    sc = MyScanner()
    N = sc.next_int()
    M = sc.next_int()
    list = [[] for _ in range(100001)]

    for _ in range(N):
        a = sc.next_int()
        b = sc.next_int()
        list[a].append(b)

    res = 0
    pqueue = []
    for i in range(1, M+1):
        if list[i]:
            pqueue.extend(list[i])
        if pqueue:
            res += heapq.heappop(pqueue)

    out.join_and_println(res)

if __name__ == '__main__':
    main()","import heapq
import sys

class MyScanner:
    BUFFER_SIZE = 8192

    def __init__(self, stream=sys.stdin):
        self.stream = stream
        self.buffer = bytearray(MyScanner.BUFFER_SIZE)
        self.pointer = 0
        self.buffer_length = 0

    def read_byte(self):
        if self.pointer < self.buffer_length:
            result = self.buffer[self.pointer]
            self.pointer += 1
            return result
        try:
            self.buffer_length = self.stream.readinto(self.buffer)
        except IOError as e:
            raise AssertionError(None, e)
        if self.buffer_length == -1:
            return -1
        self.pointer = 1
        return self.buffer[0]

    @staticmethod
    def is_printable_char_except_space(c):
        return 33 <= c <= 126

    def next(self):
        c = self.read_byte()
        while not (c == -1 or MyScanner.is_printable_char_except_space(c)):
            c = self.read_byte()
        if c == -1:
            raise StopIteration()
        b = bytearray()
        while c != -1 and MyScanner.is_printable_char_except_space(c):
            b.append(c)
            c = self.read_byte()
        return b.decode()

    def next_int(self):
        n = self.next()
        return int(n)

    def next_long(self):
        n = self.next()
        return int(n)

    def next_double(self):
        n = self.next()
        return float(n)

    def next_char(self):
        c = self.read_byte()
        while not (c == -1 or MyScanner.is_printable_char_except_space(c)):
            c = self.read_byte()
        if c == -1:
            raise StopIteration()
        return chr(c)

    def next_int_array(self, n):
        return [self.next_int() for _ in range(n)]

    def next_long_array(self, n):
        return [self.next_long() for _ in range(n)]

    def next_char_array(self, n):
        return [self.next_char() for _ in range(n)]

class MyWriter:
    def __init__(self, stream=sys.stdout):
        self.stream = stream

    def join_and_println(self, x, delimiter=' '):
        if len(x) > 0:
            self.stream.write(str(x[0]))
            for i in range(1, len(x)):
                self.stream.write(delimiter + str(x[i]))
        self.stream.write('\n')
        self.stream.flush()

def main():
    out = MyWriter()

    sc = MyScanner()
    N = sc.next_int()
    M = sc.next_int()
    list = [[] for _ in range(100001)]

    for _ in range(N):
        a = sc.next_int()
        b = sc.next_int()
        list[a].append(b)

    res = 0
    pqueue = []
    for i in range(1, M+1):
        if list[i]:
            pqueue.extend(list[i])
        if pqueue:
            res += heapq.heappop(pqueue)

    out.join_and_println(res)

if __name__ == '__main__':
    main()"
ChatGPT,codenet,Java,Python,s523386612.py,"import sys

def main():
    t = int(input())
    count = [0] * (t + 1)
    for i in range(2, t + 1):
        count[int(input())] += 1
    for i in range(1, t + 1):
        print(count[i])

if __name__ == ""__main__"":
    main()","import sys

def main():
    t = int(input())
    count = [0] * (t + 1)
    inputs = list(input().split())
    for i in range(2, t + 1):
        count[int(inputs[i - 2])] += 1
    for i in range(1, t + 1):
        print(count[i])

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Java,Python,s387083574.py,"N = int(input())
map = {}
for i in range(1, N + 1):
  map[i] = int(input())
sorted_keys = sorted(map, key=map.get)
sorted_values = [str(map[key]) for key in sorted_keys]
print("" "".join(sorted_values))","N = int(input())
maps = {}
inputs = list(input().split())
for i in range(1, N + 1):
  maps[i] = int(inputs[i - 1])
sorted_keys = sorted(maps, key=maps.get)
sorted_values = [str(maps[key]) for key in sorted_keys]
print("" "".join(sorted_values))"
ChatGPT,codenet,Java,Python,s596709252.py,"x = int(input())
y = int(input())
z = int(input())

print(z, x, y)","x, y, z = map(int, input().split())

print(z, x, y)"
ChatGPT,codenet,Java,Python,s890213274.py,"A1 = int(input())
A2 = int(input())
A3 = int(input())

if (A1 + A2 + A3) >= 22:
    print(""bust"")
else:
    print(""win"")","A1, A2, A3 = map(int, input().split())

if (A1 + A2 + A3) >= 22:
    print(""bust"")
else:
    print(""win"")"
ChatGPT,codenet,Java,Python,s302760734.py,"s = input()
t = input()

check = False

for i in range(len(s) - len(t), -1, -1):
    check2 = True
    for j in range(len(t)):
        if s[i + j] != '?' and s[i + j] != t[j]:
            check2 = False
    if check2:
        check = True
        for j in range(len(t)):
            s[i + j] = t[j]
    if check:
        break

if check:
    for i in range(len(s)):
        if s[i] == '?':
            print(""a"", end="""")
        else:
            print(s[i], end="""")
    print()
else:
    print(""UNRESTORABLE"")","s = input()
t = input()

check = False

for i in range(len(s) - len(t), -1, -1):
    check2 = True
    for j in range(len(t)):
        if s[i + j] != '?' and s[i + j] != t[j]:
            check2 = False
    if check2:
        check = True
        for j in range(len(t)):
            s = s[: i + j] + t[j: j + 1] + s[i + j + 1: ]
    if check:
        break

if check:
    for i in range(len(s)):
        if s[i] == '?':
            print(""a"", end="""")
        else:
            print(s[i], end="""")
    print()
else:
    print(""UNRESTORABLE"")"
ChatGPT,codenet,Java,Python,s325080396.py,"MAX = 200000

def main():
    R = [0] * MAX
    n = int(input())
    R = list(map(int, input().split()))
    maxv = R[1] - R[0]
    minv = R[0]
    
    for i in range(1, n):
        maxv = max(maxv, R[i] - minv)
        minv = min(minv, R[i])
    
    print(maxv)

if __name__ == ""__main__"":
    main()","MAX = 200000

def main():
    R = [0] * MAX
    n = int(input())
    for i in range(n):
        R[i] = int(input())
    maxv = R[1] - R[0]
    minv = R[0]
    
    for i in range(1, n):
        maxv = max(maxv, R[i] - minv)
        minv = min(minv, R[i])
    
    print(maxv)

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Java,Python,s312529015.py,"A = int(input())
B = int(input())

if A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:
    print(""Possible"")
else:
    print(""Impossible"")","A, B = map(int, input().split())

if A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:
    print(""Possible"")
else:
    print(""Impossible"")"
ChatGPT,codenet,Java,Python,s910447421.py,"import sys
import math
from collections import defaultdict
from itertools import combinations


def solve():
    for add in range(1, N):
        taken = [False] * N
        p = balls[add][0] - balls[0][0]
        q = balls[add][1] - balls[0][1]
        ans[0] = min(ans[0], check(p, q))


def check(p, q):
    ret = 0
    while True:
        added = False
        start = 0
        x = -1
        y = -1
        for i in range(N):
            if not taken[i]:
                added = True
                ret += 1
                start = i
                taken[i] = True
                x = balls[i][0] + p
                y = balls[i][1] + q
                break
        if not added:
            break
        for i in range(start + 1, N):
            if balls[i][0] == x and balls[i][1] == y:
                taken[i] = True
                x += p
                y += q
    return ret


def main():
    global N, balls, ans, taken
    N = int(input())
    ans = [N]
    balls = []
    for _ in range(N):
        x, y = map(int, input().split())
        balls.append((x, y))
    balls.sort(key=lambda x: x[0])
    solve()
    balls.sort(key=lambda x: x[1])
    solve()
    print(ans[0])


if __name__ == '__main__':
    main()","import sys
import math
from collections import defaultdict
from itertools import combinations


def solve():
    global taken
    for add in range(1, N):
        taken = [False] * N
        p = balls[add][0] - balls[0][0]
        q = balls[add][1] - balls[0][1]
        ans[0] = min(ans[0], check(p, q))


def check(p, q):
    ret = 0
    while True:
        added = False
        start = 0
        x = -1
        y = -1
        for i in range(N):
            if not taken[i]:
                added = True
                ret += 1
                start = i
                taken[i] = True
                x = balls[i][0] + p
                y = balls[i][1] + q
                break
        if not added:
            break
        for i in range(start + 1, N):
            if balls[i][0] == x and balls[i][1] == y:
                taken[i] = True
                x += p
                y += q
    return ret


def main():
    global N, balls, ans, taken
    N = int(input())
    ans = [N]
    balls = []
    for _ in range(N):
        x, y = map(int, input().split())
        balls.append((x, y))
    balls.sort(key=lambda x: x[0])
    solve()
    balls.sort(key=lambda x: x[1])
    solve()
    print(ans[0])


if __name__ == '__main__':
    main()"
ChatGPT,codenet,Java,Python,s493101281.py,"import sys
import math


MOD = 1000000007

class FastScanner:
    def __init__(self):
        self.inp = sys.stdin.buffer.read().split()
        self.ptr = 0

    def read_byte(self):
        if self.ptr < len(self.inp):
            self.ptr += 1
            return self.inp[self.ptr - 1]
        else:
            return -1

    def has_next_byte(self):
        return self.ptr < len(self.inp)

    def is_printable_char(self, c):
        return 33 <= c <= 126

    def has_next(self):
        while self.has_next_byte() and not self.is_printable_char(self.read_byte()):
            pass
        return self.has_next_byte()

    def next(self):
        if not self.has_next():
            raise Exception(""No more tokens"")
        res = bytearray()
        b = self.read_byte()
        while self.is_printable_char(b):
            res.append(b)
            b = self.read_byte()
        return res.decode()

    def next_int(self):
        return int(self.next())

    def next_long(self):
        return int(self.next())

    def next_double(self):
        return float(self.next())

def main():
    sc = FastScanner()
    out = sys.stdout

    n = sc.next_int()
    l = []

    for i in range(n):
        l.append(sc.next_int())

    l.sort()

    print(l[n//2] - l[n//2 - 1])

    out.flush()

if __name__ == ""__main__"":
    main()","import sys
import math


MOD = 1000000007

class FastScanner:
    def __init__(self):
        self.inp = sys.stdin.buffer.read().split()
        self.ptr = 0

    def read_byte(self):
        if self.ptr < len(self.inp):
            self.ptr += 1
            return self.inp[self.ptr - 1]
        else:
            return -1

    def has_next_byte(self):
        return self.ptr < len(self.inp)

    def is_printable_char(self, c):
        return 33 <= c <= 126

    def has_next(self):
        while self.has_next_byte() and not self.is_printable_char(self.read_byte()):
            pass
        return self.has_next_byte()

    def next(self):
        if not self.has_next():
            raise Exception(""No more tokens"")
        res = bytearray()
        b = self.read_byte()
        while self.is_printable_char(b):
            res.append(b)
            b = self.read_byte()
        return res.decode()

    def next_int(self):
        return int(self.next())

    def next_long(self):
        return int(self.next())

    def next_double(self):
        return float(self.next())

def main():
    sc = FastScanner()
    out = sys.stdout

    n = sc.next_int()
    l = []

    for i in range(n):
        l.append(sc.next_int())

    l.sort()

    print(l[n//2] - l[n//2 - 1])

    out.flush()

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Java,Python,s047401835.py,"N = int(input())
numbers = []

for i in range(N):
    numbers.append(int(input()))

count = 0

while len(numbers) == N:
    numbers = [i // 2 for i in numbers if i % 2 == 0]
    count += 1

print(count)","N = int(input())
numbers = list(map(int, input().split()))

count = 0

while len(numbers) == N:
    numbers = [i // 2 for i in numbers if i % 2 == 0]
    if len(numbers) == N:
        count += 1

print(count)"
ChatGPT,codenet,Java,Python,s036404962.py,"X = int(input())
t = int(input())

if X >= t:
    print(X - t)
else:
    print(0)","X, t = map(int, input().split())

if X >= t:
    print(X - t)
else:
    print(0)"
ChatGPT,codenet,Java,Python,s416486483.py,"def split(n, k):
    sum = 0
    while n > 0:
        sum += n % k
        n //= k
    return sum

def solve(n, s):
    k = 2
    while k*k <= n or k < 100:
        if split(n, k) == s:
            return k
        k += 1
    while k <= n:
        a = n // k
        b = n % k
        if (a + b - s) % a == 0:
            dk = (a + b - s) // a
            if dk >= 0 and b - dk*a >= 0:
                return k + dk
        k = n // a + 1
    if n == s:
        return n + 1
    return -1

nl, sl = map(int, input().split())
print(solve(nl, sl))","def split(n, k):
    sum = 0
    while n > 0:
        sum += n % k
        n //= k
    return sum

def solve(n, s):
    k = 2
    while k*k <= n or k < 100:
        if split(n, k) == s:
            return k
        k += 1
    while k <= n:
        a = n // k
        b = n % k
        if (a + b - s) % a == 0:
            dk = (a + b - s) // a
            if dk >= 0 and b - dk*a >= 0:
                return k + dk
        k = n // a + 1
    if n == s:
        return n + 1
    return -1

nl, sl = int(input()), int(input())
print(solve(nl, sl))"
ChatGPT,codenet,Java,Python,s314813282.py,"def max_int(x, a):
    bignum = x
    for i in range(len(a)):
        bignum = max(bignum, a[i])
    return bignum

def min_int(y, b):
    smallnum = y
    for i in range(len(b)):
        smallnum = min(smallnum, b[i])
    return smallnum

def check_war(a, b):
    if a >= b:
        print(""War"")
    else:
        print(""No War"")

m, n = map(int, input().split())
x, y = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

x_max = max_int(x, a)
y_min = min_int(y, b)

check_war(x_max, y_min)","def max_int(x, a):
    bignum = x
    for i in range(len(a)):
        bignum = max(bignum, a[i])
    return bignum

def min_int(y, b):
    smallnum = y
    for i in range(len(b)):
        smallnum = min(smallnum, b[i])
    return smallnum

def check_war(a, b):
    if a >= b:
        print(""War"")
    else:
        print(""No War"")

m, n, x, y = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

x_max = max_int(x, a)
y_min = min_int(y, b)

check_war(x_max, y_min)"
ChatGPT,codenet,Java,Python,s880132387.py,"import math

def run():
    while True:
        W, H = map(int, input().split())
        if W == 0 and H == 0:
            return
        map = [list(input()) for _ in range(H)]

        dp = [[0] * W for _ in range(H)]

        for h in range(H):
            for w in range(W):
                hprev = 0
                if h >= 1:
                    hprev = dp[h-1][w]
                wprev = 0
                if w >= 1:
                    wprev = dp[h][w-1]
                if map[h][w].isdigit():
                    maximum = max(hprev, wprev)
                    dp[h][w] = maximum * 10 + int(map[h][w])
                else:
                    dp[h][w] = 0

        maximum = 0
        for h in range(H):
            for w in range(W):
                maximum = max(maximum, dp[h][w])
        print(maximum)

run()","import math

def run():
    while True:
        W, H = map(int, input().split())
        if W == 0 and H == 0:
            return
        maps = [list(input()) for _ in range(H)]

        dp = [[0] * W for _ in range(H)]

        for h in range(H):
            for w in range(W):
                hprev = 0
                if h >= 1:
                    hprev = dp[h-1][w]
                wprev = 0
                if w >= 1:
                    wprev = dp[h][w-1]
                if maps[h][w].isdigit():
                    maximum = max(hprev, wprev)
                    dp[h][w] = maximum * 10 + int(maps[h][w])
                else:
                    dp[h][w] = 0

        maximum = 0
        for h in range(H):
            for w in range(W):
                maximum = max(maximum, dp[h][w])
        print(maximum)

run()"
ChatGPT,codenet,Java,Python,s004995062.py,"import decimal

sa = input()
sb = input()
A = decimal.Decimal(sa)
B = decimal.Decimal(sb)
print(int(A * B))","import decimal

sa, sb = input().split()
A = decimal.Decimal(sa)
B = decimal.Decimal(sb)
print(int(A * B))"
ChatGPT,codenet,Java,Python,s933313035.py,"class Node:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None

    def insert(self, new_value):
        if new_value < self.value:
            if self.left is None:
                self.left = Node(new_value)
            else:
                self.left.insert(new_value)
        else:
            if self.right is None:
                self.right = Node(new_value)
            else:
                self.right.insert(new_value)

    def print_in_order(self):
        if self.left is not None:
            self.left.print_in_order()
        print("" "" + str(self.value), end="""")
        if self.right is not None:
            self.right.print_in_order()

    def print_pre_order(self):
        print("" "" + str(self.value), end="""")
        if self.left is not None:
            self.left.print_pre_order()
        if self.right is not None:
            self.right.print_pre_order()


m = int(input())

tree = None
for _ in range(m):
    command = input()

    if command == ""insert"":
        key = int(input())
        if tree is None:
            tree = Node(key)
        else:
            tree.insert(key)
    else:
        if tree is not None:
            tree.print_in_order()
            print()
            tree.print_pre_order()
            print()","class Node:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None

    def insert(self, new_value):
        if new_value < self.value:
            if self.left is None:
                self.left = Node(new_value)
            else:
                self.left.insert(new_value)
        else:
            if self.right is None:
                self.right = Node(new_value)
            else:
                self.right.insert(new_value)

    def print_in_order(self):
        if self.left is not None:
            self.left.print_in_order()
        print("" "" + str(self.value), end="""")
        if self.right is not None:
            self.right.print_in_order()

    def print_pre_order(self):
        print("" "" + str(self.value), end="""")
        if self.left is not None:
            self.left.print_pre_order()
        if self.right is not None:
            self.right.print_pre_order()


m = int(input())

tree = None
for _ in range(m):
    command = input()

    if command == ""insert"":
        key = int(input())
        if tree is None:
            tree = Node(key)
        else:
            tree.insert(key)
    else:
        if tree is not None:
            tree.print_in_order()
            print()
            tree.print_pre_order()
            print()"
ChatGPT,codenet,Java,Python,s936984238.py,"import sys

def solve(score):
    score.sort()
    total = sum(score[1:-1])
    average = total / (len(score)-2)
    return average

def main():
    while True:
        number = int(input())
        if number == 0:
            break
        
        score = []
        for _ in range(number):
            score.append(int(input()))
        
        average = solve(score)
        print(average)

if __name__ == ""__main__"":
    main()","import sys

def solve(score):
    score.sort()
    total = sum(score[1:-1])
    average = total // (len(score)-2)
    return average

def main():
    while True:
        number = int(input())
        if number == 0:
            break
        
        score = []
        for _ in range(number):
            score.append(int(input()))
        
        average = solve(score)
        print(average)

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Java,Python,s369598583.py,"N = int(input())
count = 0
next = 10
for i in range(1, N+1):
    count += 1
    if i == next - 1:
        i = next * 10 - 1
        next *= 100
print(count)","N = int(input())
count = 0
next = 10
for i in range(1, N+1):
    count += 1
    if i == next - 1:
        i = next * 10 - 1
        next *= 100
    if i > N: break
print(count)"
ChatGPT,codenet,Java,Python,s466963472.py,"# AOJ No. 0014 Integral

d = int(input())

ans = 0
for i in range(1, 600 // d):
    x = i * d
    y = x * x
    ans += y * d

print(ans)","# AOJ No. 0014 Integral

def read():
    global d
    d = input()
    if not d:
        return False
    d = int(d)
    return True

def solve():
	ans = 0
	for i in range(1, 600 // d):
		x = i * d
		y = x * x
		ans += y * d
	return ans

while read():
	print(solve())"
ChatGPT,codenet,Java,Python,s409580149.py,"def solve():
    n = int(input())
    a = list(map(int, input().split()))
    dp = [[[-1] * (n+1) for _ in range(n+1)] for _ in range(n+1)]
    dp[0][0][0] = 0
    cnt = [0] * 3
    for i in range(n):
        cnt[a[i]-1] += 1
    ans = rec(cnt[0], cnt[1], cnt[2])
    print(ans)

def rec(i, j, k):
    if dp[i][j][k] != -1:
        return dp[i][j][k]
    ret = 0
    p = (i + j + k) / n
    pi = i / n
    pj = j / n
    pk = k / n
    ret += 1/p
    if i > 0:
        ret += pi/p * rec(i-1, j, k)
    if j > 0:
        ret += pj/p * rec(i+1, j-1, k)
    if k > 0:
        ret += pk/p * rec(i, j+1, k-1)
    dp[i][j][k] = ret
    return ret

n = int(input())
a = list(map(int, input().split()))
dp = [[[0] * (n+1) for _ in range(n+1)] for _ in range(n+1)]
dp[0][0][0] = 0
cnt = [0] * 3
for i in range(n):
    cnt[a[i]-1] += 1
ans = rec(cnt[0], cnt[1], cnt[2])
print(ans)","def solve():
    n = int(input())
    a = list(map(int, input().split()))
    dp = [[[-1] * (n+1) for _ in range(n+1)] for _ in range(n+1)]
    dp[0][0][0] = 0
    cnt = [0] * 3
    for i in range(n):
        cnt[a[i]-1] += 1
    ans = rec(cnt[0], cnt[1], cnt[2])
    print(ans)

def rec(i, j, k):
    if dp[i][j][k] != -1:
        return dp[i][j][k]
    ret = 0
    p = (i + j + k) / n
    pi = i / n
    pj = j / n
    pk = k / n
    ret += 1/p
    if i > 0:
        ret += pi/p * rec(i-1, j, k)
    if j > 0:
        ret += pj/p * rec(i+1, j-1, k)
    if k > 0:
        ret += pk/p * rec(i, j+1, k-1)
    dp[i][j][k] = ret
    return ret

n = int(input())
a = list(map(int, input().split()))
dp = [[[0] * (n+1) for _ in range(n+1)] for _ in range(n+1)]
dp[0][0][0] = 0
cnt = [0] * 3
for i in range(n):
    cnt[a[i]-1] += 1
ans = rec(cnt[0], cnt[1], cnt[2])
print(ans)"
ChatGPT,codenet,Java,Python,s863488345.py,"import sys

def moveBomber(a,b):
    if 0 <= a < h and 0 <= b < w:
        if battleTown[a][b] == '^':
            for i in range(a-1, -1, -1):
                if battleTown[i][b] == '*':
                    battleTown[i][b] = '.'
                    return
                elif battleTown[i][b] == '#':
                    return
                else:
                    a -= 1
        elif battleTown[a][b] == 'v':
            for i in range(a+1, h):
                if battleTown[i][b] == '*':
                    battleTown[i][b] = '.'
                    return
                elif battleTown[i][b] == '#':
                    return
                else:
                    a += 1
        elif battleTown[a][b] == '<':
            for i in range(b-1, -1, -1):
                if battleTown[a][i] == '*':
                    battleTown[a][i] = '.'
                    return
                elif battleTown[a][i] == '#':
                    return
                else:
                    b -= 1
        elif battleTown[a][b] == '>':
            for i in range(b+1, w):
                if battleTown[a][i] == '*':
                    battleTown[a][i] = '.'
                    return
                elif battleTown[a][i] == '#':
                    return
                else:
                    b += 1

mapNum = int(input())
for i in range(mapNum):
    if i > 0:
        print()
    h, w = map(int, input().split())
    battleTown = []
    for j in range(h):
        battleTown.append(list(input()))
        if '^' in battleTown[j] or 'v' in battleTown[j] or '<' in battleTown[j] or '>' in battleTown[j]:
            x, y = j, battleTown[j].index('^') if '^' in battleTown[j] else battleTown[j].index('v') if 'v' in battleTown[j] else battleTown[j].index('<') if '<' in battleTown[j] else battleTown[j].index('>')
    bomberActNum = int(input())
    bomberAct = list(input())
    for l in range(bomberActNum):
        if bomberAct[l] == 'U':
            if x-1 >= 0 and battleTown[x-1][y] == '.':
                battleTown[x-1][y] = '^'
                battleTown[x][y] = '.'
                x -= 1
        elif bomberAct[l] == 'D':
            if x+1 < h and battleTown[x+1][y] == '.':
                battleTown[x+1][y] = 'v'
                battleTown[x][y] = '.'
                x += 1
        elif bomberAct[l] == 'L':
            if y-1 >= 0 and battleTown[x][y-1] == '.':
                battleTown[x][y-1] = '<'
                battleTown[x][y] = '.'
                y -= 1
        elif bomberAct[l] == 'R':
            if y+1 < w and battleTown[x][y+1] == '.':
                battleTown[x][y+1] = '>'
                battleTown[x][y] = '.'
                y += 1
        elif bomberAct[l] == 'S':
            xOfBomber, yOfBomber = x, y
            moveBomber(xOfBomber, yOfBomber)
    for s in range(h):
        print(''.join(battleTown[s])) #print Python 3.x
        #print ''.join(battleTown[s]) #print Python 2.x","import sys

def moveBomber(a,b):
    if 0 <= a < h and 0 <= b < w:
        if battleTown[a][b] == '^':
            for i in range(a-1, -1, -1):
                if battleTown[i][b] == '*':
                    battleTown[i][b] = '.'
                    return
                elif battleTown[i][b] == '#':
                    return
                else:
                    a -= 1
        elif battleTown[a][b] == 'v':
            for i in range(a+1, h):
                if battleTown[i][b] == '*':
                    battleTown[i][b] = '.'
                    return
                elif battleTown[i][b] == '#':
                    return
                else:
                    a += 1
        elif battleTown[a][b] == '<':
            for i in range(b-1, -1, -1):
                if battleTown[a][i] == '*':
                    battleTown[a][i] = '.'
                    return
                elif battleTown[a][i] == '#':
                    return
                else:
                    b -= 1
        elif battleTown[a][b] == '>':
            for i in range(b+1, w):
                if battleTown[a][i] == '*':
                    battleTown[a][i] = '.'
                    return
                elif battleTown[a][i] == '#':
                    return
                else:
                    b += 1

mapNum = int(input())
for i in range(mapNum):
    if i > 0:
        print()
    h, w = map(int, input().split())
    battleTown = []
    for j in range(h):
        battleTown.append(list(input()))
        if '^' in battleTown[j] or 'v' in battleTown[j] or '<' in battleTown[j] or '>' in battleTown[j]:
            x, y = j, battleTown[j].index('^') if '^' in battleTown[j] else battleTown[j].index('v') if 'v' in battleTown[j] else battleTown[j].index('<') if '<' in battleTown[j] else battleTown[j].index('>')
    bomberActNum = int(input())
    bomberAct = list(input())
    for l in range(bomberActNum):
        if bomberAct[l] == 'U':
            if x-1 >= 0 and battleTown[x-1][y] == '.':
                battleTown[x-1][y] = '^'
                battleTown[x][y] = '.'
                x -= 1
        elif bomberAct[l] == 'D':
            if x+1 < h and battleTown[x+1][y] == '.':
                battleTown[x+1][y] = 'v'
                battleTown[x][y] = '.'
                x += 1
        elif bomberAct[l] == 'L':
            if y-1 >= 0 and battleTown[x][y-1] == '.':
                battleTown[x][y-1] = '<'
                battleTown[x][y] = '.'
                y -= 1
        elif bomberAct[l] == 'R':
            if y+1 < w and battleTown[x][y+1] == '.':
                battleTown[x][y+1] = '>'
                battleTown[x][y] = '.'
                y += 1
        elif bomberAct[l] == 'S':
            xOfBomber, yOfBomber = x, y
            moveBomber(xOfBomber, yOfBomber)
    for s in range(h):
        print(''.join(battleTown[s])) #print Python 3.x
        #print ''.join(battleTown[s]) #print Python 2.x"
ChatGPT,codenet,Java,Python,s498914558.py,"n, m = map(int, input().split())
po = list(map(int, input().split()))
m -= sum(po)

po.sort()
print(n + m // po[0])","n, m = map(int, input().split())
po = []
for _ in range(n):
    po.append(int(input()))
m -= sum(po)

po.sort()
print(n + m // po[0])"
ChatGPT,codenet,Java,Python,s320655609.py,"import sys

class Main:
    def __init__(self):
        self.constraints = []
        self.N = 0
        self.result = 0
        self.calc()

    def calc(self):
        min_val = sys.maxsize
        for i in range(5):
            c = int(input())
            self.constraints.append(c)
            min_val = min(min_val, c)
        
        time = self.N // min_val
        if self.N % min_val != 0:
            time += 1
        time += 4
        self.result = time

if __name__ == ""__main__"":
    ins = Main()
    print(ins.result)","import sys

class Main:
    def __init__(self):
        self.constraints = []
        self.N = 0
        self.result = 0
        self.calc()

    def calc(self):
        min_val = sys.maxsize
        self.N = int(input())
        for i in range(5):
            c = int(input())
            self.constraints.append(c)
            min_val = min(min_val, c)
        
        time = self.N // min_val
        if self.N % min_val != 0:
            time += 1
        time += 4
        self.result = time

if __name__ == ""__main__"":
    ins = Main()
    print(ins.result)"
ChatGPT,codenet,Java,Python,s968213233.py,"import heapq

class Main:
    def __init__(self, N, A):
        A.sort(reverse=True)
        res = 0
        q = []
        heapq.heappush(q, [-A[N - 1], -A[N - 1]])

        for i in range(N - 2, -1, -1):
            a = A[i]
            place = heapq.heappop(q)
            res += min(-place[0], -place[1])
            heapq.heappush(q, [-place[0], -a])
            heapq.heappush(q, [-a, -place[1]])
        print(res)

# Input parsing
N = int(input())
A = list(map(int, input().split()))

# Solving
sol = Main(N, A)","import heapq

class Main:
    def __init__(self, N, A):
        A.sort(reverse=True)
        res = 0
        q = []
        heapq.heappush(q, [-A[N - 1], -A[N - 1]])

        for i in range(N - 2, -1, -1):
            a = A[i]
            place = heapq.heappop(q)
            res += min(-place[0], -place[1])
            heapq.heappush(q, [-place[0], -a])
            heapq.heappush(q, [-a, -place[1]])
        print(res)

# Input parsing
N = int(input())
A = list(map(int, input().split()))

# Solving
sol = Main(N, A)"
ChatGPT,codenet,Java,Python,s041542819.py,"import sys
from typing import List, Tuple


def solve(a: int, b: int, q: int, s: List[int], t: List[int]) -> List[int]:
    s = [-10**18] + s + [10**18]
    t = [-10**18] + t + [10**18]
    res = []
    for _ in range(q):
        x = int(input())
        sl = x - s[bisect_right(s, x) - 1]
        tl = x - t[bisect_right(t, x) - 1]
        sr = s[bisect_left(s, x)] - x
        tr = t[bisect_left(t, x)] - x
        res.append(min(
            max(sl, tl),
            max(sr, tr),
            2 * sl + tr,
            2 * tl + sr,
            sl + 2 * tr,
            tl + 2 * sr
        ))
    return res


def from_input_string(input_string: str) -> Tuple:
    input_lines = input_string.strip().split('\n')
    a, b, q = map(int, input_lines[0].split())
    s = list(map(int, input_lines[1:a+1]))
    t = list(map(int, input_lines[a+1:]))
    return a, b, q, s, t


def from_output_string(output_string: str) -> List[int]:
    return list(map(int, output_string.strip().split('\n')))


def to_input_string(inputs: Tuple) -> str:
    a, b, q, s, t = inputs
    res = []
    res.append(f'{a} {b} {q}')
    res.extend(map(str, s))
    res.extend(map(str, t))
    return '\n'.join(res)


def to_output_string(output: List[int]) -> str:
    return '\n'.join(map(str, output))


# The code below utilizes binary search to find the lower bound of a target value in a sorted array.


def bisect_left(arr, x):
    left = 0
    right = len(arr)
    while left < right:
        mid = (left + right) // 2
        if arr[mid] < x:
            left = mid + 1
        else:
            right = mid
    return left


def bisect_right(arr, x):
    left = 0
    right = len(arr)
    while left < right:
        mid = (left + right) // 2
        if arr[mid] <= x:
            left = mid + 1
        else:
            right = mid
    return left","import sys
from typing import List, Tuple


def solve(a: int, b: int, q: int, s: List[int], t: List[int]) -> List[int]:
    s = [-10**18] + s + [10**18]
    t = [-10**18] + t + [10**18]
    res = []
    for _ in range(q):
        x = int(input())
        sl = x - s[bisect_right(s, x) - 1]
        tl = x - t[bisect_right(t, x) - 1]
        sr = s[bisect_left(s, x)] - x
        tr = t[bisect_left(t, x)] - x
        res.append(min(
            max(sl, tl),
            max(sr, tr),
            2 * sl + tr,
            2 * tl + sr,
            sl + 2 * tr,
            tl + 2 * sr
        ))
    return res


def from_input_string(input_string: str) -> Tuple:
    input_lines = input_string.strip().split('\n')
    a, b, q = map(int, input_lines[0].split())
    s = list(map(int, input_lines[1:a+1]))
    t = list(map(int, input_lines[a+1:]))
    return a, b, q, s, t


def from_output_string(output_string: str) -> List[int]:
    return list(map(int, output_string.strip().split('\n')))


def to_input_string(inputs: Tuple) -> str:
    a, b, q, s, t = inputs
    res = []
    res.append(f'{a} {b} {q}')
    res.extend(map(str, s))
    res.extend(map(str, t))
    return '\n'.join(res)


def to_output_string(output: List[int]) -> str:
    return '\n'.join(map(str, output))


# The code below utilizes binary search to find the lower bound of a target value in a sorted array.


def bisect_left(arr, x):
    left = 0
    right = len(arr)
    while left < right:
        mid = (left + right) // 2
        if arr[mid] < x:
            left = mid + 1
        else:
            right = mid
    return left


def bisect_right(arr, x):
    left = 0
    right = len(arr)
    while left < right:
        mid = (left + right) // 2
        if arr[mid] <= x:
            left = mid + 1
        else:
            right = mid
    return left"
ChatGPT,codenet,Java,Python,s301480578.py,"n = int(input())
h = list(map(int, input().split()))

max_count = 0
l = 0

while l < n - 1:
    count = 0
    while l < n - 1 and h[l] >= h[l + 1]:
        l += 1
        count += 1
    max_count = max(max_count, count)

print(max_count)","n = int(input())
h = list(map(int, input().split()))

max_count = 0
l = 0

while l < n - 1:
    count = 0
    while l < n - 1 and h[l] >= h[l + 1]:
        l += 1
        count += 1
    l += 1
    max_count = max(max_count, count)

print(max_count)"
CodeGen,codenet,C++,Python,s329154546.py,"#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys

def chmax(a,b):
    if a<b:
        a=b
    return a

def chmin(a,b):
    if b<a:
        a=b
    return a

def main():
    N,L=map(int,raw_input().strip().split(' '))
    S=map(str,raw_input().strip().split(' '))
    S.sort()
    for i in range(N):
        print S[i]
    print

if __name__=='__main__':
    main()","#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys

def chmax(a,b):
    if a<b:
        a=b
    return a

def chmin(a,b):
    if b<a:
        a=b
    return a

def main():
    N,L=map(int,input().strip().split(' '))
    S=[input() for _ in range(N)]
    S.sort()
    for i in range(N):
        print(S[i], end='')
    print

if __name__=='__main__':
    main()"
CodeGen,codenet,C++,Python,s788730767.py,"def nPr(n, r):
    res = 1
    for i in range(r):
        res *= (n - i)
    return res

def nCr(n, r):
    res = nPr(n, r) / nPr(r, r)
    for i in range(r):
        res *= (n - i)
        res /= (i + 1)
    return res

n, p = map(int, raw_input().split())
a = map(int, raw_input().split())
b = 0
c = 0
for i in range(n):
    if a[i] % 2 == 0:
        b += 1
    else:
        c += 1

if p == 0:
    for i in range(c):
        if i % 2 == 0:
            csum += nCr(c, i)
    ans = b * csum
else:
    for i in range(c):
        if i % 2 == 1:
            csum += nCr(c, i)
    ans = b * csum
print ans","def nPr(n, r):
    res = 1
    for i in range(r):
        res *= (n - i)
    return res

def nCr(n, r):
    res = nPr(n, r) / nPr(r, r)
    for i in range(r):
        res *= (n - i)
        res /= (i + 1)
    return res

n, p = map(int, input().split())
a = list(map(int, input().split()))
b = 0
c = 0
csum = 0
for i in range(n):
    if a[i] % 2 == 0:
        b += 1
    else:
        c += 1

if p == 0:
    for i in range(c):
        if i % 2 == 0:
            csum += nCr(c, i)
    ans = b * csum
else:
    for i in range(c):
        if i % 2 == 1:
            csum += nCr(c, i)
    ans = b * csum
print(ans)"
CodeGen,codenet,C++,Python,s501882481.py,"#!/usr/bin/python

import sys

def to_string(s):
    return s

def debug(s):
    print s

def print(*args):
    print args

def get():
    pass

def getv(vec):
    for i in range(len(vec)):
        vec[i] = float(raw_input())

def get(a, b):
    return [float(x) for x in raw_input().split()]

def get_input():
    S = raw_input()
    if S == ""Sunny"":
        print ""Cloudy""
    elif S == ""Cloudy"":
        print ""Rainy""
    else:
        print ""Sunny""

def main():
    get_input()

if __name__ == ""__main__"":
    main()","#!/usr/bin/python

import sys

def get_input():
    S = input()
    if S == ""Sunny"":
        print(""Cloudy"")
    elif S == ""Cloudy"":
        print(""Rainy"")
    else:
        print(""Sunny"")

def main():
    get_input()

if __name__ == ""__main__"":
    main()"
CodeGen,codenet,C++,Python,s209567491.py,"#!/usr/bin/python
import sys

N,D,X = map(int,raw_input().strip().split(' '))
A = map(int,raw_input().strip().split(' '))
num_of_chocolate = 0
for i in range(N):
    days = 0
    counter = 0
    for j in range(D):
        days = j * A[i] + 1
        if days <= D:
            counter += 1
        else:
            break
    num_of_chocolate += counter
    num_of_chocolate += X
    print num_of_chocolate","#!/usr/bin/python
import sys

N = int(input())
D, X = map(int, input().split())
A = []
for i in range(N):
    A.append(int(input()))
num_of_chocolate = 0
for i in range(N):
    days = 0
    counter = 0
    for j in range(D):
        days = j * A[i] + 1
        if days <= D:
            counter += 1
        else:
            break
    num_of_chocolate += counter
num_of_chocolate += X
print(num_of_chocolate)"
CodeGen,codenet,C++,Python,s107598592.py,"#!/usr/bin/python

import sys

N = int(sys.argv[1])
X = [int(x) for x in sys.argv[2:]]
Y = [int(x) for x in sys.argv[2:]]

Y.sort()

y = Y[N/2]
for i in range(N):
    if X[i] < y:
        print Y[N/2]
    else:
        print Y[N/2 - 1]","#!/usr/bin/python

N = int(input())
X = []
Y = []

inputs = list(input().split())
for i in range(N):
    X.append(int(inputs[i]))
    Y.append(X[i])

Y.sort()

y = Y[N//2]
for i in range(N):
    if X[i] < y:
        print(Y[N//2])
    else:
        print(Y[N//2 - 1])"
CodeGen,codenet,C++,Python,s877835664.py,"def main():
    N, K = map(int, raw_input().split())
    A = map(int, raw_input().split())
    dic = [-1] * (N + 1)
    cur = 1
    flg = False
    for i in xrange(K):
        if dic[cur] < 0 or flg:
            dic[cur] = i
            cur = A[cur]
        else:
            tmp = K - (dic[cur] - 1)
            tmp %= i - dic[cur]
            i = K - tmp
            flg = True
    print cur

if __name__ == '__main__':
    main()","def main():
    N, K = map(int, input().split())
    A = [0] + list(map(int, input().split()))
    dic = [-1] * (N + 1)
    cur = 1
    flg = False
    for i in range(K):
        if dic[cur] < 0 or flg:
            dic[cur] = i
            cur = A[cur]
        else:
            tmp = K - (dic[cur] - 1)
            tmp %= i - dic[cur]
            i = K - tmp
            flg = True
    print(cur)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s571373151.py,"def main():
    n, m = map(int, raw_input().split())
    foods = []
    for i in range(m):
        foods.append(int(raw_input()))
    for i in range(n):
        k = int(raw_input())
        for j in range(k):
            foods[int(raw_input())] += 1
    ans = 0
    for i in range(m):
        if foods[i] == n:
            ans += 1
    print ans

if __name__ == '__main__':
    main()","def main():
    n, m = map(int, input().split())
    foods = [0] * m
    for i in range(n):
        inputs = list(input().split())
        k = int(inputs[0])
        for j in range(k):
            foods[int(inputs[j + 1]) - 1] += 1
    ans = 0
    for i in range(m):
        if foods[i] == n:
            ans += 1
    print(ans)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s663381244.py,"#!/usr/bin/python

import sys

def main():
	money = int(sys.argv[1])
	m = [int(x) for x in sys.argv[2:]]
	first = True
	for money, m in zip(sys.argv[2:], m):
		if not first:
			print
		first = False
		sum = 0
		num = [0] * 4
		for i in range(4):
			num[i] = int(sys.argv[i+2])
			sum += num[i] * m[i]
		change = sum - money
		for i in range(3, -1, -1):
			if change // m[i]:
				num[i] -= change // m[i]
				change %= m[i]
		for i in range(4):
			if num[i] > 0:
				print(m[i], num[i])

if __name__ == '__main__':
	main()","#!/usr/bin/python

import sys

def main():
	money = int(sys.argv[1])
	m = [int(x) for x in sys.argv[2:]]
	first = True
	for money, m in zip(sys.argv[2:], m):
		if not first:
			print
		first = False
		sum = 0
		num = [0] * 4
		for i in range(4):
			num[i] = int(sys.argv[i+2])
			sum += num[i] * m[i]
		change = sum - money
		for i in range(3, -1, -1):
			if change // m[i]:
				num[i] -= change // m[i]
				change %= m[i]
		for i in range(4):
			if num[i] > 0:
				print m[i], num[i]

if __name__ == '__main__':
	main()"
CodeGen,codenet,C++,Python,s793402552.py,"def main():
    a, b = map(int, raw_input().split())
    bstr = str(b)
    num = a * pow(10, len(bstr)) + b
    for i in range(1, 100100):
        if i * i == num:
            break
    if i > 100100:
        print ""No""
    else:
        print ""Yes""

if __name__ == '__main__':
    main()","def main():
    a, b = map(int, input().split())
    bstr = str(b)
    num = a * pow(10, len(bstr)) + b
    for i in range(1, 100100):
        if i * i == num:
            break
    if i > 100100:
        print(""No"")
    else:
        print(""Yes"")

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s814403222.py,"def main():
  n = int(raw_input())
  m = int(raw_input())
  v = []
  for i in range(n):
    v.append(P(0, ''))
  for i in range(m):
    a = int(raw_input())
    v[a].first += n - len(d[a])
    for j in range(len(d[a])):
      v[d[a][j]].first -= 1
      d[a].append(i)
  for i in range(n):
    print v[i].first, v[i].second

if __name__ == '__main__':
  main()","def main():
  n = int(input())
  m = int(input())
  v = []
  for i in range(n):
    v.append(P(0, ''))
  for i in range(m):
    a = int(input())
    v[a].first += n - len(d[a])
    for j in range(len(d[a])):
      v[d[a][j]].first -= 1
      d[a].append(i)
  for i in range(n):
    print(v[i].first, v[i].second)

if __name__ == '__main__':
  main()"
CodeGen,codenet,C++,Python,s525470559.py,"def main():
    n, q = map(int, raw_input().split())
    Q = []
    for i in range(n):
        tmp = raw_input().split()
        Q.append({'name': tmp[0], 'time': int(tmp[1])})
    while len(Q) > 0:
        p = Q.pop(0)
        if p['time'] <= q:
            elaps += p['time']
            print p['name'] +'' + str(elaps)
        else:
            p['time'] -= q
            elaps += q
            Q.append(p)
    return 0

if __name__ == '__main__':
    main()","def main():
    elaps = 0
    n, q = map(int, input().split())
    Q = []
    for i in range(n):
        tmp = input().split()
        Q.append({'name': tmp[0], 'time': int(tmp[1])})
    while len(Q) > 0:
        p = Q.pop(0)
        if p['time'] <= q:
            elaps += p['time']
            print(p['name'] +'' + str(elaps))
        else:
            p['time'] -= q
            elaps += q
            Q.append(p)
    return 0

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s644382798.py,"def main():
    n, q = map(int, raw_input().split())
    Q = []
    for i in range(1, n + 1):
        Q.append(P(raw_input().strip(), int(raw_input())))
    head = 0
    tail = len(Q)
    while head!= tail:
        u = dequeue()
        c = min(q, u.t)
        u.t -= c
        elaps += c
        if u.t > 0:
            enqueue(u)
        else:
            print u.name, elaps

if __name__ == '__main__':
    main()","def main():
    n, q = map(int, input().split())
    Q = []
    for i in range(1, n + 1):
        Q.append(P(input().strip(), int(input())))
    head = 0
    tail = len(Q)
    while head!= tail:
        u = dequeue()
        c = min(q, u.t)
        u.t -= c
        elaps += c
        if u.t > 0:
            enqueue(u)
        else:
            print(u.name, elaps)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s189738089.py,"def chmin(a, b):
    if a > b:
        a = b
    return a


def main():
    N, K = map(int, raw_input().strip().split())
    h = map(int, raw_input().strip().split())
    dp = [INF] * (N + K + 1)
    dp[0] = 0
    # input
    rep(i, 0, N) dp[i + K + 1] = dp[i] + abs(h[i] - h[i + K])
    # dp
    rep(i, 0, N) {
        rep(j, 1, K + 1) {
            chmin(dp[i + j], dp[i] + abs(h[i] - h[i + j]))
        }
    }
    # output
    print dp[N - 1]

if __name__ == ""__main__"":
    main()","def chmin(a, b):
    if a > b:
        a = b
    return a


def main():
    N, K = map(int, input().strip().split())
    h = map(int, input().strip().split())
    dp = [INF] * (N + K + 1)
    dp[0] = 0
    # input
    rep(i, 0, N) dp[i + K + 1] = dp[i] + abs(h[i] - h[i + K])
    # dp
    rep(i, 0, N) {
        rep(j, 1, K + 1) {
            chmin(dp[i + j], dp[i] + abs(h[i] - h[i + j]))
        }
    }
    # output
    print dp[N - 1]

if __name__ == ""__main__"":
    main()"
CodeGen,codenet,C++,Python,s221616550.py,"def isPalindrome(s):
  for i in range(len(s)/2):
    if s[i]!= s[len(s)-1-i]:
      return False
  return True

s = input()
if isPalindrome(s) and isPalindrome(s[:len(s)/2]):
  print ""Yes""
else:
  print ""No""","def isPalindrome(s):
  for i in range(len(s)//2):
    if s[i]!= s[len(s)-1-i]:
      return False
  return True

s = input()
if isPalindrome(s) and isPalindrome(s[:len(s)//2]):
  print(""Yes"")
else:
  print(""No"")"
CodeGen,codenet,C++,Python,s744854383.py,"#!/usr/bin/python

import sys

def main():
	N = int(sys.argv[1])
	a = [int(x) for x in sys.stdin.readline().split()]
	idx = 1
	ans = 0
	for i in range(N):
		if a[i] == idx:
			idx += 1
		else:
			ans += 1
	if idx == 1:
		print -1
	else:
		print ans

if __name__ == '__main__':
	main()","#!/usr/bin/python

import sys

def main():
	N = int(sys.stdin.readline())
	a = list(map(int, sys.stdin.readline().split()))
	idx = 1
	ans = 0
	for i in range(N):
		if a[i] == idx:
			idx += 1
		else:
			ans += 1
	if idx == 1:
		print -1
	else:
		print(ans)

if __name__ == '__main__':
	main()"
CodeGen,codenet,C++,Python,s847126533.py,"#!/usr/bin/python

import sys

def check(n,wei,book):
  tmp=wei
  n-=1
  for i in range(0,len(book)):
    if tmp<book[i]:
      if n>0:
	n-=1
	tmp=wei
	if tmp<book[i]:
	  return False
      else:
	return False
    tmp-=book[i]
  return True

def main():
  m,n=map(int,raw_input().split())
  book=[]
  for i in range(0,n):
    book.append(int(raw_input()))
  while(m):
    m-=1
    if check(m,int(raw_input()),book):
      print ""YES""
    else:
      print ""NO""

if __name__==""__main__"":
  main()","#!/usr/bin/python

import sys

def check(n,wei,book):
  tmp=wei
  n-=1
  for i in range(0,len(book)):
    if tmp<book[i]:
      if n>0:
	n-=1
	tmp=wei
	if tmp<book[i]:
	  return False
      else:
	return False
    tmp-=book[i]
  return True

def main():
  m,n=map(int,input().split())
  book=[]
  for i in range(0,n):
    book.append(int(input()))
  while(m):
    m-=1
    if check(m,int(input()),book):
      print(""YES"")
    else:
      print(""NO"")

if __name__==""__main__"":
  main()"
CodeGen,codenet,C++,Python,s941927127.py,"#!/usr/bin/python

import sys

W = sys.argv[1]

W = W.lower()

W = W.replace("" "","""")

W = W.replace(""."","""")

W = W.replace(""-"","""")

W = W.replace(""'"","""")

W = W.replace(""."","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace(","#!/usr/bin/python

import sys

W = sys.argv[1]

W = W.lower()

W = W.replace("" "","""")

W = W.replace(""."","""")

W = W.replace(""-"","""")

W = W.replace(""'"","""")

W = W.replace(""."","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("","","""")

W = W.replace(""."","""")

W = W.replace(""'"","""")

W = W.replace(""/"","""")

W = W.replace(""\\"","""")

W = W.replace(""("","""")

W = W.replace("")"","""")

W = W.replace(""["","""")

W = W.replace(""]"","""")

W = W.replace(""{"","""")

W = W.replace(""}"","""")

W = W.replace(""!"","""")

W = W.replace(""?"","""")

W = W.replace(""\"""","""")

W = W.replace("";"","""")

W = W.replace("
CodeGen,codenet,C++,Python,s438435664.py,"#!/usr/bin/python

import sys

def gcd(x,y):
    if y == 0:
        return x
    else:
        return gcd(y,x%y)

def lcm(x,y):
    return (x*y)/gcd(x,y)

def kaijo(k):
    sum = 1
    for i in range(1,k+1):
        sum *= i
        sum %= 1000000000+7
    return sum

def lmax(s,t):
    if s > t:
        return s
    else:
        return t

def lmin(s,t):
    if s < t:
        return s
    else:
        return t

def main():
    n,k = map(int,raw_input().strip().split())
    sum = 0
    for b in range(1,n+1):
        cnt = (n+1)/b
        md = (n+1)%b
        sum += cnt*max((b-k),0)+max((md-k),0)
        if k == 0:
            sum -= 1
    print sum

if __name__ == '__main__':
    main()","#!/usr/bin/python

import sys

def gcd(x,y):
    if y == 0:
        return x
    else:
        return gcd(y,x%y)

def lcm(x,y):
    return (x*y)/gcd(x,y)

def kaijo(k):
    sum = 1
    for i in range(1,k+1):
        sum *= i
        sum %= 1000000000+7
    return sum

def lmax(s,t):
    if s > t:
        return s
    else:
        return t

def lmin(s,t):
    if s < t:
        return s
    else:
        return t

def main():
    n,k = map(int,input().strip().split())
    sum = 0
    for b in range(1,n+1):
        cnt = (n+1)//b
        md = (n+1)%b
        sum += cnt*max((b-k),0)+max((md-k),0)
        if k == 0:
            sum -= 1
    print(sum)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s146177123.py,"#!/usr/bin/python

import sys

def read_input():
    n = int(raw_input())
    t = int(raw_input())
    st = [0] * 7
    for i in range(n):
        t = int(raw_input())
        for j in range(7):
            st[j] ^= seg[t][j]
    return n, t, st

def print_output(n, t, st):
    ans = ''
    for i in range(7):
        ans += st[i]
    print ans

def main():
    n, t, st = read_input()
    print_output(n, t, st)

if __name__ == '__main__':
    main()","#!/usr/bin/python

import sys

seg = [
    [False, True, True, True, True, True, True],
    [False, False, False, False, True, True, False],
    [True, False, True, True, False, True, True],
    [True, False, False, True, True, True, True],
    [True, True, False, False, True, True, False],
    [True, True, False, True, True, False, True],
    [True, True, True, True, True, False, True],
    [False, True, False, False, True, True, True],
    [True, True, True, True, True, True, True],
    [True, True, False, True, True, True, True]
]

def read_input():
    n = int(input())
    t = int(input())
    st = [0] * 7
    for i in range(n):
        t = int(input())
        for j in range(7):
            st[j] ^= seg[t][j]
    return n, t, st

def print_output(n, t, st):
    ans = ''
    for i in range(7):
        ans += str(st[i])
    print(ans)

def main():
    n, t, st = read_input()
    print_output(n, t, st)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s353226283.py,"def main():
    n, k, t = map(int, raw_input().split())
    vec = map(int, raw_input().split())
    vec.sort()
    for i in range(0, n-k+1):
        diff = vec[i+k-1] - vec[i]
        if diff < ans:
            ans = diff
    print ans

main()","def main():
    n, k = map(int, input().split())
    vec = []
    for i in range(n):
        vec.append(int(input()))
    vec.sort()
    ans = float('inf')
    for i in range(0, n-k+1):
        diff = vec[i+k-1] - vec[i]
        if diff < ans:
            ans = diff
    print(ans)

main()"
CodeGen,codenet,C++,Python,s472228164.py,"def check(x, y):
    if y % 2 == 0:
        t = (int)(0.5*y) - x
        if t >= 0 and (x-t) >= 0:
            return ""Yes""
    return ""No""

x, y = map(int, raw_input().split())
print check(x, y)","def check(x, y):
    if y % 2 == 0:
        t = (int)(0.5*y) - x
        if t >= 0 and (x-t) >= 0:
            return ""Yes""
    return ""No""

x, y = map(int, input().split())
print(check(x, y))"
CodeGen,codenet,C++,Python,s098326932.py,"#!/usr/bin/python
import sys

def f(N):
    a = [0] * 20
    d = 0
    while N > 0:
        a[d] = N % 10
        N /= 10
        d += 1
    m = 1e18
    res = N
    for i in range(0, d):
        bunsi = 0
        bunbo = 9 * i
        for j in range(d-1, -1, -1):
            bunsi *= 10
            if j < i: bunsi += 9
            else: bunsi += a[j]
            
            if j >= i: bunbo += a[j]
            
        frac = (double) bunsi / (double) bunbo
        if frac < m:
            m = frac
            res = bunsi
    return res

if __name__ == '__main__':
    K = int(sys.argv[1])
    N = f(1)
    for i in range(0, K):
        print N
        N = f(N+1)","#!/usr/bin/python
import sys

def f(N):
    a = [0] * 20
    d = 0
    while N > 0:
        a[d] = N % 10
        N //= 10
        d += 1
    m = 1e18
    res = N
    for i in range(0, d):
        bunsi = 0
        bunbo = 9 * i
        for j in range(d-1, -1, -1):
            bunsi *= 10
            if j < i: bunsi += 9
            else: bunsi += a[j]
            
            if j >= i: bunbo += a[j]
            
        frac = bunsi / bunbo
        if frac < m:
            m = frac
            res = bunsi
    return res

if __name__ == '__main__':
    K = int(input())
    N = f(1)
    for i in range(0, K):
        print(N)
        N = f(N+1)"
CodeGen,codenet,C++,Python,s240627521.py,"def main():
  N = int(raw_input())
  A = [int(i) for i in raw_input().split()]
  A.sort(reverse=True)
  max = inf
  for i in xrange(1, N):
    if max > abs(A[0] - 2 * A[i]):
      max = abs(A[0] - 2 * A[i])
      index = i
  print A[0], A[index]

main()","def main():
  N = int(input())
  A = [int(i) for i in input().split()]
  A.sort(reverse=True)
  max = float('inf')
  for i in range(1, N):
    if max > abs(A[0] - 2 * A[i]):
      max = abs(A[0] - 2 * A[i])
      index = i
  print(A[0], A[index])

main()"
CodeGen,codenet,C++,Python,s123678341.py,"#!/usr/bin/python

import sys
import math
import random
import string
import time
import datetime
import os

def main():
    # read input
    X = int(sys.argv[1])
    Y = int(sys.argv[2])
    Z = int(sys.argv[3])
    K = int(sys.argv[4])
    
    A = []
    for i in range(X):
        A.append(int(sys.argv[5 + i]))
    B = []
    for i in range(Y):
        B.append(int(sys.argv[5 + X + i]))
    C = []
    for i in range(Z):
        C.append(int(sys.argv[5 + X + Y + i]))
    
    # sort
    A = sorted(A)
    B = sorted(B)
    C = sorted(C)
    
    # calculate
    AB = []
    for i in range(X):
        for j in range(Y):
            AB.append(A[i] + B[j])
    
    AB = sorted(AB)
    ABC = []
    for i in range(min(K, len(AB))):
        for j in range(Z):
            ABC.append(AB[i] + C[j])
    
    ABC = sorted(ABC)
    
    # output
    for i in range(K):
        print ABC[i]
    
if __name__ == '__main__':
    start = datetime.datetime.now()
    main()
    delta = datetime.datetime.now() - start
    print'real    time:', delta.seconds + 1e-6 * delta.microseconds","#!/usr/bin/python

import sys
import math
import random
import string
import time
import datetime
import os

def main():
    # read input
    X, Y, Z, K = map(int, input().split())
    
    A = list(map(int, input().split()))
    B = list(map(int, input().split()))
    C = list(map(int, input().split()))
    
    # sort
    A = sorted(A)
    B = sorted(B)
    C = sorted(C)
    
    # calculate
    AB = []
    for i in range(X):
        for j in range(Y):
            AB.append(A[i] + B[j])
    
    AB = sorted(AB)
    ABC = []
    for i in range(min(K, len(AB))):
        for j in range(Z):
            ABC.append(AB[i] + C[j])
    
    ABC = sorted(ABC)
    
    # output
    for i in range(K):
        print(ABC[i])
    
if __name__ == '__main__':
    start = datetime.datetime.now()
    main()
    delta = datetime.datetime.now() - start
    print('real    time:', delta.seconds + 1e-6 * delta.microseconds)"
CodeGen,codenet,C++,Python,s410514868.py,"def main():
    n,k,L,s = map(int, raw_input().split())
    ans,ans2 = 0,0
    for i in xrange(1,n):
        if L == s[i]:
            ans += 1
            ans2 += 1
        else:
            L = s[i]
            ans += ans + 1
            ans2 += 1
    ans += ans + 1
    ans2 += 1
    print ans + min(2*k,ans2-1)","def main():
    n,k = map(int, input().split())
    s = input()
    L = s[0]
    cnt,ans,ans2 = 0,0,0
    for i in range(1,n):
        if L == s[i]:
            cnt += 1
        else:
            L = s[i]
        ans += cnt
        ans2 += 1
        cnt = 0
    ans += cnt
    ans2 += 1
    print(ans + min(2*k,ans2-1))
    
main()"
CodeGen,codenet,C++,Python,s970719454.py,"#!/usr/bin/python

# Import modules
import sys
import re

# Global variables
here = []
dp1 = []
dp2 = []

# Function definitions
def here(i):
    if i in here:
        return 1
    else:
        return 0

def dp1(i):
    if i in dp1:
        return dp1[i]
    else:
        if i == 0:
            dp1[i] = 1
        else:
            dp1[i] = dp1[i-1] + 1
        return dp1[i]

def dp2(i):
    if i in dp2:
        return dp2[i]
    else:
        if i == 0:
            dp2[i] = 1
        else:
            dp2[i] = dp1[i-1] + 1
        return dp2[i]

# Main function
def main():
    # Get input
    n = int(raw_input())
    m = int(raw_input())
    
    # Initialize variables
    here = []
    dp1 = []
    dp2 = []
    
    # Process input
    for i in range(m):
        a = int(raw_input())
        if a == 0:
            dpflg = True
        else:
            here.append(a)
    
    # Process input
    maxi1 = 0
    maxi2 = 0
    
    for i in range(n+1):
        if here[i] == 1:
            dp1.append(dp1[i-1] + 1)
        maxi1 = max(dp1[i], maxi1)
    
    for i in range(n+1):
        if not here[i]:
            dp2.append(dp2[i-1] + 1)
        else:
            dp2.append(dp1[i-1] + 1)
        maxi2 = max(dp2[i], maxi2)
    
    # Print output
    if not dpflg:
        print maxi1
    else:
        print maxi2

# Call main function
if __name__ == '__main__':
    main()","#!/usr/bin/python

# Import modules
import sys
import re

# Global variables
here = []
dp1 = []
dp2 = []

# Function definitions
def here(i):
    if i in here:
        return 1
    else:
        return 0

def dp1(i):
    if i in dp1:
        return dp1[i]
    else:
        if i == 0:
            dp1[i] = 1
        else:
            dp1[i] = dp1[i-1] + 1
        return dp1[i]

def dp2(i):
    if i in dp2:
        return dp2[i]
    else:
        if i == 0:
            dp2[i] = 1
        else:
            dp2[i] = dp1[i-1] + 1
        return dp2[i]

# Main function
def main():
    # Get input
    n = int(raw_input())
    m = int(raw_input())
    
    # Initialize variables
    here = []
    dp1 = []
    dp2 = []
    
    # Process input
    for i in range(m):
        a = int(raw_input())
        if a == 0:
            dpflg = True
        else:
            here.append(a)
    
    # Process input
    maxi1 = 0
    maxi2 = 0
    
    for i in range(n+1):
        if here[i] == 1:
            dp1.append(dp1[i-1] + 1)
        maxi1 = max(dp1[i], maxi1)
    
    for i in range(n+1):
        if not here[i]:
            dp2.append(dp2[i-1] + 1)
        else:
            dp2.append(dp1[i-1] + 1)
        maxi2 = max(dp2[i], maxi2)
    
    # Print output
    if not dpflg:
        print maxi1
    else:
        print maxi2

# Call main function
if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s345215315.py,"#!/usr/bin/python

import sys

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b / gcd(a, b)

def dfs(x, y, cnt):
    if cnt > 20:
        return
    if x == 19:
        print cnt
        return
    for i in range(8):
        nx = x + dx[i]
        ny = y + dy[i]
        if nx < 0 or nx >= 19 or ny < 0 or ny >= 15:
            continue
        if s[nx][ny]!= 'X':
            continue
        s[nx][ny] = '.'
        dfs(nx, ny, cnt + 1)
        s[nx][ny] = 'X'

def main():
    h, w = map(int, raw_input().split())
    s = []
    for i in range(h):
        s.append(raw_input().strip())
    sx, sy = map(int, raw_input().split())
    for i in range(h):
        for j in range(w):
            if s[i][j] == 'O':
                s[i][j] = '.'
    dfs(sx, sy, 0)

if __name__ == '__main__':
    main()","#!/usr/bin/python

import sys

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b / gcd(a, b)

def dfs(x, y, cnt):
    if cnt > 20:
        return
    if x == 19:
        print cnt
        return
    for i in range(8):
        nx = x + dx[i]
        ny = y + dy[i]
        if nx < 0 or nx >= 19 or ny < 0 or ny >= 15:
            continue
        if s[nx][ny]!= 'X':
            continue
        s[nx][ny] = '.'
        dfs(nx, ny, cnt + 1)
        s[nx][ny] = 'X'

def main():
    h, w = map(int, input().split())
    s = []
    for i in range(h):
        s.append(input().strip())
    sx, sy = map(int, input().split())
    for i in range(h):
        for j in range(w):
            if s[i][j] == 'O':
                s[i][j] = '.'
    dfs(sx, sy, 0)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s013321508.py,"def main():
    N, M = map(int, raw_input().split())
    L = map(int, raw_input().split())
    L.sort()
    for i in xrange(M):
        max_L = L.pop()
        if max_L == 0:
            break
        max_L /= 2
        itr = lower_bound(L, max_L)
        L.insert(itr, max_L)
        L.pop()
    ans = sum(L)
    print ans

if __name__ == '__main__':
    main()","def main():
    N, M = map(int, input().split())
    L = map(int, input().split())
    L.sort()
    for i in range(M):
        max_L = L.pop()
        if max_L == 0:
            break
        max_L /= 2
        itr = lower_bound(L, max_L)
        L.insert(itr, max_L)
        L.pop()
    ans = sum(L)
    print(ans)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s571001771.py,"def main():
  n, m = map(int, raw_input().split())
  for i in range(m):
    cost, b = map(int, raw_input().split())
    for j in range(b):
      c = int(raw_input())
      key.append(1 << (c - 1))
  for i in range(1 << n):
    for j in range(m):
      dp[i][j + 1] = min(dp[i][j], dp[i][j + 1])
      dp[i | key[j + 1]][j + 1] = min(dp[i | key[j + 1]][j + 1], dp[i][j] + cost[j + 1])
  if dp[(1 << n) - 1][m] == INF:
    print -1
  else:
    print dp[(1 << n) - 1][m]

if __name__ == '__main__':
  main()","dp = [[0] * 1005 for _ in range((1 << 12) + 5)]
k = []
def main():
  n, m = map(int, input().split())
  for i in range(m):
    cost, b = map(int, input().split())
    for j in range(b):
      c = int(input())
      key.append(1 << (c - 1))
  for i in range(1 << n):
    for j in range(m):
      dp[i][j + 1] = min(dp[i][j], dp[i][j + 1])
      dp[i | key[j + 1]][j + 1] = min(dp[i | key[j + 1]][j + 1], dp[i][j] + cost[j + 1])
  if dp[(1 << n) - 1][m] == INF:
    print -1
  else:
    print dp[(1 << n) - 1][m]

if __name__ == '__main__':
  main()"
CodeGen,codenet,C++,Python,s700369080.py,"def main():
    x1, y1, x2, y2 = map(int, raw_input().split())
    dx = x2 - x1
    dy = y2 - y1
    x3 = x2 - dy
    y3 = y2 + dx
    x4 = x1 - dy
    y4 = y1 + dx
    print x3, y3, x4, y4

if __name__ == '__main__':
    main()","def main():
    x1, y1, x2, y2 = map(int, input().split())
    dx = x2 - x1
    dy = y2 - y1
    x3 = x2 - dy
    y3 = y2 + dx
    x4 = x1 - dy
    y4 = y1 + dx
    print(x3, y3, x4, y4)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s917269550.py,"def main():
  x, y = map(int, raw_input().split())
  if abs(x-y) <= 1:
    print ""Brown""
  else:
    print ""Alice""

if __name__ == '__main__':
  main()","def main():
  x, y = map(int, input().split())
  if abs(x-y) <= 1:
    print(""Brown"")
  else:
    print(""Alice"")

if __name__ == '__main__':
  main()"
CodeGen,codenet,C++,Python,s110965154.py,"#!/usr/bin/python

import sys

def sort(a_rvecIntValue):
    for i in range(0, len(a_rvecIntValue)):
        if i!= 0:
            int iIntValue = a_rvecIntValue[i]
            int j = i - 1
            while ((j >= 0) and (a_rvecIntValue[j] > iIntValue)):
                a_rvecIntValue[j+1] = a_rvecIntValue[j]
                j -= 1
            a_rvecIntValue[j+1] = iIntValue
        for k in range(0, len(a_rvecIntValue)):
            print a_rvecIntValue[k]
            if k!= len(a_rvecIntValue) - 1:
                print "" "",
        print

if __name__ == ""__main__"":
    if len(sys.argv)!= 2:
        print ""Usage:"", sys.argv[0], ""n""
        sys.exit(1)
    n = int(sys.argv[1])
    a_rvecIntValue = [0] * n
    for i in range(0, n):
        a_rvecIntValue[i] = i
    sort(a_rvecIntValue)","#!/usr/bin/python

import sys

def sort(a_rvecIntValue):
    for i in range(0, len(a_rvecIntValue)):
        if i!= 0:
            int iIntValue = a_rvecIntValue[i]
            int j = i - 1
            while ((j >= 0) and (a_rvecIntValue[j] > iIntValue)):
                a_rvecIntValue[j+1] = a_rvecIntValue[j]
                j -= 1
            a_rvecIntValue[j+1] = iIntValue
        for k in range(0, len(a_rvecIntValue)):
            print a_rvecIntValue[k]
            if k!= len(a_rvecIntValue) - 1:
                print "" "",
        print

if __name__ == ""__main__"":
    if len(sys.argv)!= 2:
        print ""Usage:"", sys.argv[0], ""n""
        sys.exit(1)
    n = int(sys.argv[1])
    a_rvecIntValue = [0] * n
    for i in range(0, n):
        a_rvecIntValue[i] = i
    sort(a_rvecIntValue)"
CodeGen,codenet,C++,Python,s218395502.py,"#!/usr/bin/python

import sys

a = int(sys.argv[1])
b = int(sys.argv[2])
c = int(sys.argv[3])

if ((100*a + 10*b + c) % 4 == 0):
	print ""YES""
else:
	print ""NO""","#!/usr/bin/python

import sys

a, b, c = map(int, input().split())


if ((100*a + 10*b + c) % 4 == 0):
	print(""YES"")
else:
	print(""NO"")"
CodeGen,codenet,C++,Python,s166776347.py,"def main():
    # 入力
    N,K = map(int,raw_input().split())
    A = map(int,raw_input().split())

    # 解法 
    ans1 = 0
    for i in range(N):
        for j in range(N):
            if i >= j: continue
            if A[i] > A[j]: ans1 += 1
            ans1 %= mod

    # 解法2
    count = [0]*2005
    for i in range(N):
        count[A[i]-1] += 1
    remain = N
    for i in range(2005):
        remain -= count[i]
        ans2 += count[i]*remain
    K %= mod
    ans2 %= mod
    ans1 *= K
    ans1 %= mod
    ans2 *= K
    ans2 %= mod
    ans = ans1 + ans2
    ans %= mod
    ans += K*(K-1)/2
    ans %= mod
    print ans


if __name__ == '__main__':
    main()","mod = 10**9 + 7

def main():
    # 入力
    N,K = map(int, input().split())
    A = list(map(int, input().split()))

    # 解法 
    ans1 = 0
    ans2 = 0
    for i in range(N):
        for j in range(N):
            if i >= j: continue
            if A[i] > A[j]: ans1 += 1
            ans1 %= mod

    # 解法2
    count = [0]*2005
    for i in range(N):
        count[A[i]-1] += 1
    remain = N
    for i in range(2005):
        remain -= count[i]
        ans2 += count[i]*remain
    K %= mod
    ans2 %= mod
    ans1 *= K
    ans1 %= mod
    ans2 *= K
    ans2 %= mod
    ans = ans1 + ans2
    ans %= mod
    ans += K*(K-1)//2
    ans %= mod
    print(ans)


if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s794872785.py,"#!/usr/bin/python

import sys

def solve():
    maxsize = 0
    maxcnt = 0
    ans_num = 0
    ans_num2 = 0
    str_v = []
    
    for line in sys.stdin:
        str_v.append(line.strip())
        if maxsize < len(str_v[-1]):
            maxsize = len(str_v[-1])
            ans_num = len(str_v) - 1
        
    for i in range(len(str_v)):
        cnt = 0
        for j in range(len(str_v)):
            if str_v[i] == str_v[j]:
                cnt += 1
        if maxcnt < cnt:
            maxcnt = cnt
            ans_num2 = i
    
    print str_v[ans_num2], str_v[ans_num]
    
solve()","#!/usr/bin/python

import sys

def solve():
    maxsize = 0
    maxcnt = 0
    ans_num = 0
    ans_num2 = 0
    str_v = []
    
    inputs = input().split()
    for in_str in inputs:
        str_v.append(in_str)
        if len(in_str) > maxsize:
            maxsize = len(in_str)
            ans_num = len(str_v) - 1

    for i in range(len(str_v)):
        cnt = 0
        for j in range(len(str_v)):
            if str_v[i] == str_v[j]:
                cnt += 1
        if cnt > maxcnt:
            maxcnt = cnt
            ans_num2 = i
    
    print(str_v[ans_num2], str_v[ans_num])
    
solve()"
CodeGen,codenet,C++,Python,s259332673.py,"def main():
    h1,m1,h2,m2,k = map(int,raw_input().split())
    ans = h2*60+m2-(h1*60+m1)
    print ans-k

if __name__ == '__main__':
    main()","def main():
    h1,m1,h2,m2,k = map(int,input().split())
    ans = h2*60+m2-(h1*60+m1)
    print(ans-k)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s582643375.py,"def init():
    fac = [1]
    finv = [1]
    inv = [1]
    for i in range(2, NMAX):
        fac.append(fac[-1] * i % mod)
        inv.append(mod - inv[-1] * (mod / i) % mod)
        finv.append(finv[-1] * inv[-1] % mod)
    return fac, finv, inv

def C(n, k):
    if n < k:
        return 0
    if n < 0 or k < 0:
        return 0
    return fac[n] * (finv[k] * finv[n - k] % mod) % mod

def main():
    X, Y = map(int, raw_input().split())
    if (X + Y) % 3!= 0:
        print 0
        return
    n = (X + Y) / 3 + 1
    k = 2 * (n - 1) - Y + 1
    print C(n - 1, k - 1)

if __name__ == '__main__':
    main()","def init():
    fac = [1]
    finv = [1]
    inv = [1]
    for i in range(2, NMAX):
        fac.append(fac[-1] * i % mod)
        inv.append(mod - inv[-1] * (mod / i) % mod)
        finv.append(finv[-1] * inv[-1] % mod)
    return fac, finv, inv

def C(n, k):
    if n < k:
        return 0
    if n < 0 or k < 0:
        return 0
    return fac[n] * (finv[k] * finv[n - k] % mod) % mod

def main():
    X, Y = map(int, raw_input().split())
    if (X + Y) % 3!= 0:
        print 0
        return
    n = (X + Y) / 3 + 1
    k = 2 * (n - 1) - Y + 1
    print C(n - 1, k - 1)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s778828888.py,"def main():
    n, m, x = map(int, raw_input().split())
    a = [0] * (n + 1)
    for i in xrange(m):
        a[int(raw_input())] += 1
    ansl = 0
    ansr = 0
    for i in xrange(n, -1, -1):
        ansr += a[i]
    for i in xrange(n, x, -1):
        ansl += a[i]
    print min(ansl, ansr)

main()","def main():
    n, m, x = map(int, input().split())
    a = [0] * (n + 1)
    inputs = list(input().split())
    for i in range(m):
        a[int(inputs[i])] += 1
    ansl = 0
    ansr = 0
    for i in range(n, -1, -1):
        ansr += a[i]
    for i in range(n, x, -1):
        ansl += a[i]
    print(min(ansl, ansr))

main()"
CodeGen,codenet,C++,Python,s465977291.py,"def main():
    n,d = map(int,raw_input().split())
    a = d*2+1
    print int(ceil(n/a))

main()","def main():
    n,d = map(int,input().split())
    a = d*2+1
    print(int(n/a)+1)

main()"
CodeGen,codenet,C++,Python,s438448326.py,"def main():
    A, B, C, D, E, F = map(int, raw_input().split())
    m1, m2 = 0, 0
    maxD = 0.0
    for i in xrange(0, 100 * A):
        mA = 100 * A * i
        for j in xrange(0, 100 * B):
            mB = 100 * B * j
            for k in xrange(0, 100 * C):
                mC = 100 * C * k
                for l in xrange(0, 100 * D):
                    mD = 100 * D * l
                    if ((mA + mB) * E / 100 < mD + mC):
                        break
                    d = (mD + mC) / (mA + mB + mC + mD)
                    if d > maxD:
                        m1 = mA + mB + mC + mD
                        m2 = mC + mD
                        maxD = d
    print m1, m2

if __name__ == '__main__':
    main()","def main():
    A, B, C, D, E, F = map(int, input().split())
    m1, m2 = 0, 0
    maxD = 0.0
    for i in range(0, 100 * A):
        mA = 100 * A * i
        for j in range(0, 100 * B):
            mB = 100 * B * j
            for k in range(0, 100 * C):
                mC = 100 * C * k
                for l in range(0, 100 * D):
                    mD = 100 * D * l
                    if ((mA + mB) * E / 100 < mD + mC):
                        break
                    if mA + mB + mC + mD == 0:
                        continue
                    d = (mD + mC) / (mA + mB + mC + mD)
                    if d > maxD:
                        m1 = mA + mB + mC + mD
                        m2 = mC + mD
                        maxD = d
    print(m1, m2)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s575944217.py,"#!/usr/bin/python
import sys

def read_input():
    n = int(raw_input())
    ans = [0] * n
    for i in xrange(n-1):
        a = int(raw_input())
        a -= 1
        ans[a] += 1
    return ans

def main():
    n = int(raw_input())
    ans = read_input()
    for i in xrange(n):
        print ans[i]

if __name__ == '__main__':
    main()","#!/usr/bin/python
import sys

def read_input():
    n = int(input())
    ans = [0] * n
    inputs = list(input().split())
    for i in range(n-1):
        a = int(inputs[i])
        a -= 1
        ans[a] += 1
    for i in range(n):
        print(ans[i])
        
def main():
    read_input()

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s050708710.py,"def main():
    r, g, b, n = map(int, raw_input().split())
    ans = 0
    for i in xrange(0, n // r + 1):
        for j in xrange(0, n // g + 1):
            num = n - r * i - g * j
            if num >= 0 and num % b == 0:
                ans += 1
    print ans

if __name__ == '__main__':
    main()","def main():
    r, g, b, n = map(int, input().split())
    ans = 0
    for i in range(0, n // r + 1):
        for j in range(0, n // g + 1):
            num = n - r * i - g * j
            if num >= 0 and num % b == 0:
                ans += 1
    print(ans)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s144923291.py,"#!/usr/bin/python

#import
import sys
import math
import string
import re
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import","#!/usr/bin/python

#import
import sys
import math
import string
import re
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import binascii
import ctypes
import struct
import inspect
import platform
import traceback
import unicodedata
import re
import subprocess
import signal
import sys
import time
import datetime
import os
import copy
import random
import collections
import heapq
import subprocess
import itertools
import functools
import operator
import textwrap
import pprint
import argparse
import copy
import signal
import threading
import multiprocessing
import getpass
import json
import base64
import"
CodeGen,codenet,C++,Python,s509329039.py,"#!/usr/bin/python
import sys

def main():
    n,m = map(int,sys.stdin.readline().split())
    s = map(int,sys.stdin.readline().split())
    c = map(int,sys.stdin.readline().split())
    for i in range(m):
        s[i] -= 1
        c[i] -= '0'
    for i in range(1000):
        st = str(i)
        if len(st)!= n:
            continue
        f = 1
        for j in range(m):
            if st[s[j]]!= c[j] + '0':
                f = 0
        if f:
            print i
            break

if __name__ == '__main__':
    main()","#!/usr/bin/python
import sys

def main():
    n,m = map(int,sys.stdin.readline().split())
    s = []
    c = []
    for i in range(m):
        s_i,c_i = map(int,sys.stdin.readline().split())
        s.append(s_i)
        c.append(c_i)
    for i in range(m):
        s[i] -= 1
    for i in range(1000):
        st = str(i)
        if len(st)!= n:
            continue
        f = 1
        for j in range(m):
            if st[s[j]]!= str(c[j]):
                f = 0
        if f:
            print(i)
            break

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s557795702.py,"#!/usr/bin/python
import sys
import math
import time

def mergesort(a,left,right):
    if left >= right:
        return 0
    mid = (left+right)/2
    v1 = mergesort(a,left,mid)
    v2 = mergesort(a,mid,right)
    v3 = merge(a,left,mid,right)
    return v1+v2+v3

def merge(a,left,mid,right):
    n1 = mid - left
    n2 = right - mid
    L = [0]*(n1+1)
    R = [0]*(n2+1)
    i = j = 0
    for k in range(left,right+1):
        if i < n1 and j < n2 and L[i] <= R[j]:
            a[k] = L[i]
            i += 1
        else:
            a[k] = R[j]
            j += 1
    return len(L) + len(R)

def main():
    a = [0]*100000
    n = int(sys.argv[1])
    for i in range(n):
        a[i] = int(sys.argv[2])
    start = time.clock()
    ans = mergesort(a,0,n)
    end = time.clock()
    print ans
    print ""Time taken: "", end - start, ""seconds.""

if __name__ == '__main__':
    main()","#!/usr/bin/python
import sys
import math
import time

def mergesort(a,left,right):
    if left >= right:
        return 0
    mid = (left+right)/2
    v1 = mergesort(a,left,mid)
    v2 = mergesort(a,mid,right)
    v3 = merge(a,left,mid,right)
    return v1+v2+v3

def merge(a,left,mid,right):
    n1 = mid - left
    n2 = right - mid
    L = [0]*(n1+1)
    R = [0]*(n2+1)
    i = j = 0
    for k in range(left,right+1):
        if i < n1 and j < n2 and L[i] <= R[j]:
            a[k] = L[i]
            i += 1
        else:
            a[k] = R[j]
            j += 1
    return len(L) + len(R)

def main():
    n = int(input())
    a = list(map(int, input().split()))
    start = time.clock()
    ans = mergesort(a,0,n)
    end = time.clock()
    print(ans)
    print(""Time taken: "", end - start, ""seconds."")

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s143031369.py,"#!/usr/bin/python

import math
import sys

def main():
    n = int(sys.argv[1])
    p = []
    for i in range(n):
        x, y = map(float, sys.stdin.readline().split())
        p.append(Point(x, y))
    if n == 2:
        print ""0.5""
        print ""0.5""
    else:
        m = jarvis(p, n, ch)
        for i in range(m):
            print ang[ch[i]] / 2. / math.pi
        for i in range(n):
            print p[i].x, p[i].y

if __name__ == '__main__':
    main()","#!/usr/bin/python

import math
import sys

def main():
    n = int(sys.argv[1])
    p = []
    for i in range(n):
        x, y = map(float, sys.stdin.readline().split())
        p.append(Point(x, y))
    if n == 2:
        print ""0.5""
        print ""0.5""
    else:
        m = jarvis(p, n, ch)
        for i in range(m):
            print ang[ch[i]] / 2. / math.pi
        for i in range(n):
            print p[i].x, p[i].y

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s085554271.py,"#!/usr/bin/python

import sys

def isPrime(num):
    if num < 2:
        return False
    else:
        for i in range(2, num):
            if num % i == 0:
                return False
        return True

def gcd(a, b):
    if b == 0:
        return a
    else:
        return gcd(b, a % b)

def lcm(a, b):
    return a / gcd(a, b) * b

def fact(num):
    if num == 0:
        return 1
    else:
        return num * fact(num - 1)

def fact_mod(num, mod):
    if num == 0:
        return 1
    else:
        return num * fact_mod(num - 1, mod) % mod

def combination_mod(num, r, mod):
    if r > num - r:
        r = num - r
    if r == 0:
        return 1
    else:
        return combination_mod(num, r - 1, mod) * (num - r + 1) % mod * fact_mod(r, mod) % mod

def rev(s):
    return s[::-1]

def main():
    a = int(sys.argv[1])
    b = int(sys.argv[2])
    k = int(sys.argv[3])
    for i in range(a, b + 1):
        if i % k == 0:
            print ""OK""
        else:
            print ""NG""
    return 0","#!/usr/bin/python

import sys

def isPrime(num):
    if num < 2:
        return False
    else:
        for i in range(2, num):
            if num % i == 0:
                return False
        return True

def gcd(a, b):
    if b == 0:
        return a
    else:
        return gcd(b, a % b)

def lcm(a, b):
    return a / gcd(a, b) * b

def fact(num):
    if num == 0:
        return 1
    else:
        return num * fact(num - 1)

def fact_mod(num, mod):
    if num == 0:
        return 1
    else:
        return num * fact_mod(num - 1, mod) % mod

def combination_mod(num, r, mod):
    if r > num - r:
        r = num - r
    if r == 0:
        return 1
    else:
        return combination_mod(num, r - 1, mod) * (num - r + 1) % mod * fact_mod(r, mod) % mod

def rev(s):
    return s[::-1]

def main():
    k = int(input())
    a, b = map(int, input().split())
    for i in range(a, b + 1):
        if i % k == 0:
            print(""OK"")
        else:
            print(""NG"")
    return 0

main()"
CodeGen,codenet,C++,Python,s151802561.py,"def main():
  A = [int(i) for i in raw_input().strip().split()]
  n = int(raw_input().strip())
  for i in xrange(n):
    mini = i
    for j in xrange(i, n):
      if A[j] < A[mini]:
        mini = j
    t = A[i]
    A[i] = A[mini]
    A[mini] = t
    if i!= mini:
      sw += 1
  for i in xrange(n):
    if i:
      print "" ""
    print A[i]
  print
  print sw

main()","def main():
  n = int(input())
  A = list(map(int, input().split()))
  sw = 0
  for i in range(n):
    mini = i
    for j in range(i, n):
      if A[j] < A[mini]:
        mini = j
    t = A[i]
    A[i] = A[mini]
    A[mini] = t
    if i!= mini:
      sw += 1
  print(*A)
  print(sw)

main()"
CodeGen,codenet,C++,Python,s579031873.py,"def main():
  N, X = map(int, raw_input().split())
  table = []
  for i in range(N):
    table.append(map(int, raw_input().split()))
  roads = []
  for i in range(N):
    roads.append(map(int, raw_input().split()))
  qs = []
  for i in range(N):
    qs.append(map(int, raw_input().split()))
  ans = 0
  min = 1000000000
  for i in range(N):
    tmp = 0
    for j in range(N):
      tmp += table[i][j]
    X -= tmp
    ans += 1
    if tmp < min: min = tmp
  ans += X / min
  print ans

if __name__ == '__main__':
  main()","def main():
  N, X = map(int, input().split())
  table = []
  for i in range(N):
    table.append(map(int, input().split()))
  roads = []
  for i in range(N):
    roads.append(map(int, input().split()))
  qs = []
  for i in range(N):
    qs.append(map(int, input().split()))
  ans = 0
  min = 1000000000
  for i in range(N):
    tmp = 0
    for j in range(N):
      tmp += table[i][j]
    X -= tmp
    ans += 1
    if tmp < min: min = tmp
  ans += X / min
  print(ans)

if __name__ == '__main__':
  main()"
CodeGen,codenet,C++,Python,s472290172.py,"def main():
    str = input()
    max = 0
    cnt = 0
    for sc in str:
        if sc == 'A' or sc == 'C' or sc == 'G' or sc == 'T':
            cnt += 1
        else:
            cnt = 0
        max = max < cnt? cnt : max
    print(max)

if __name__ == '__main__':
    main()","def main():
    str = input()
    max = 0
    cnt = 0
    for sc in str:
        if sc == 'A' or sc == 'C' or sc == 'G' or sc == 'T':
            cnt += 1
        else:
            cnt = 0
        max = cnt if max < cnt else max
    print(max)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s475106338.py,"#!/usr/bin/python

import sys

for i in range(4):
    t,n = map(int,raw_input().split())
    if t == 1:
        print 6000*n
    elif t == 2:
        print 4000*n
    elif t == 3:
        print 3000*n
    elif t == 4:
        print 2000*n","#!/usr/bin/python

import sys

for i in range(4):
    t,n = map(int,input().split())
    if t == 1:
        print(6000*n)
    elif t == 2:
        print(4000*n)
    elif t == 3:
        print(3000*n)
    elif t == 4:
        print(2000*n)"
CodeGen,codenet,C++,Python,s097779718.py,"def Euclid(x, y):
    if x < y:
        tmp = x
        x = y
        y = tmp
    if not x % y:
        return y
    return Euclid(y, x % y)

def main():
    A, B = map(int, raw_input().split())
    print (A*B) // Euclid(A, B)","def Euclid(x, y):
    if x < y:
        tmp = x
        x = y
        y = tmp
    if not x % y:
        return y
    return Euclid(y, x % y)

def main():
    A, B = map(int, input().split())
    print (A*B) // Euclid(A, B)
    
main()"
CodeGen,codenet,C++,Python,s683946919.py,"#!/usr/bin/python

import sys

def time2min(month,day,hour,min):
  total = 0
  for i in range(1,month):
    total += 31*24*60
  for i in range(1,day):
    total += 24*60
  total += hour * 60 + min
  return total

def main():
  N = int(sys.argv[1])
  log = {}
  for i in range(N):
    month,day,hour,min,id = map(int,sys.stdin.readline().split('/'))
    t = time2min(month,day,hour,min)
    log[id] = [t]
  for id in log:
    if id == 0: continue
    schedule = log[id]
    for j in range(len(schedule)-1):
      ppl_start = schedule[j]
      ppl_end = schedule[j+1]
      start = max(0,ppl_start)
      end = min(ppl_end,time2min(month,day,hour,min))
      print max(0,end-start)

if __name__ == '__main__':
  main()","#!/usr/bin/python

import sys

def time2min(month,day,hour,min):
  total = 0
  for i in range(1,month):
    total += 31*24*60
  for i in range(1,day):
    total += 24*60
  total += hour * 60 + min
  return total

def main():
  N = int(sys.argv[1])
  log = {}
  for i in range(N):
    month,day,hour,min,id = map(int,sys.stdin.readline().split('/'))
    t = time2min(month,day,hour,min)
    log[id] = [t]
  for id in log:
    if id == 0: continue
    schedule = log[id]
    for j in range(len(schedule)-1):
      ppl_start = schedule[j]
      ppl_end = schedule[j+1]
      start = max(0,ppl_start)
      end = min(ppl_end,time2min(month,day,hour,min))
      print(max(0,end-start))

if __name__ == '__main__':
  main()"
CodeGen,codenet,C++,Python,s459892612.py,"def main():
  a, b, c = map(int, raw_input().split())
  if a + b >= c:
    print ""Yes""
  else:
    print ""No""

if __name__ == '__main__':
  main()","def main():
  a, b, c = map(int, input().split())
  if a + b >= c:
    print(""Yes"")
  else:
    print(""No"")

if __name__ == '__main__':
  main()"
CodeGen,codenet,C++,Python,s698205968.py,"def main():
	m, f, r = map(int, raw_input().split())
	if m == -1 and f == -1 and r == -1:
		print 'F'
	elif m == -1 or f == -1:
		print 'F'
	elif m + f >= 80:
		print 'A'
	elif m + f >= 65:
		print 'B'
	elif m + f >= 50 or r >= 50:
		print 'C'
	elif m + f >= 30:
		print 'D'
	else:
		print 'F'

if __name__ == '__main__':
	main()","def main():
	while True:
		m, f, r = map(int, input().split())
		if m == -1 and f == -1 and r == -1:
			break
		if m == -1 or f == -1:
			print(""F"")
		elif m + f >= 80:
			print(""A"")
		elif m + f >= 65:
			print(""B"")
		elif m + f >= 50 or r >= 50:
			print(""C"")
		elif m + f >= 30:
			print(""D"")
		else:
			print(""F"")

if __name__ == '__main__':
	main()"
CodeGen,codenet,C++,Python,s698030085.py,"def main():
    a, b = map(int, raw_input().split())
    if ((a + b) % 2 == 0):
        print (a + b) / 2
    else:
        print ""IMPOSSIBLE""

if __name__ == '__main__':
    main()","def main():
    a, b = map(int, input().split())
    if ((a + b) % 2 == 0):
        print((a + b) // 2)
    else:
        print(""IMPOSSIBLE"")

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s976558978.py,e exceeded.,e exceeded.
CodeGen,codenet,C++,Python,s129191754.py,"#!/usr/bin/python

# Import modules
import sys
import math
import time
import random

# Print the result
print ""YES""

# Input the number of test cases
n = int(raw_input())

# Input the test cases
for i in range(n):
    a = map(int, raw_input().split())
    a.sort()
    for j in range(len(a) - 1):
        if a[j] == a[j + 1]:
            print ""NO""
            break
    print ""YES""","#!/usr/bin/python

# Import modules
import sys
import math
import time
import random

# Print the result
print(""YES"")

# Input the number of test cases
n = int(input())

# Input the test cases
for i in range(n):
    a = map(int, input().split())
    a.sort()
    for j in range(len(a) - 1):
        if a[j] == a[j + 1]:
            print(""NO"")
            break
    print(""YES"")"
CodeGen,codenet,C++,Python,s860472409.py,"#!/usr/bin/python

import sys

def main():
    N = int(sys.argv[1])
    A = []
    for i in range(0,N):
        A.append(int(sys.argv[2]))
    i = 0
    ans = 0
    count = 0
    while A[i+1]!= None:
        if A[i] == A[i+1]:
            count += 1
            if count % 2!= 0:
                ans += 1
        else:
            count = 0
        i += 1
    print ans

if __name__ == '__main__':
    main()","#!/usr/bin/python

import sys

def main():
    N = int(input())
    A = list(map(int, input().split()))
    i = 0
    ans = 0
    count = 0
    while i+1 < len(A):
        if A[i] == A[i+1]:
            count += 1
            if count % 2 != 0:
                ans += 1
        else:
            count = 0
        i += 1
    print(ans)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s970063640.py,"#!/usr/bin/python
import sys

n = int(sys.argv[1])
a = int(sys.argv[2])

s = [int(i) for i in sys.stdin]

s.sort()

for i in range(n-a-1,n-1,-1):
    sum = 0
    for j in range(i,n-1):
        sum += s[j]
    print sum","#!/usr/bin/python
import sys

n, a = map(int, input().split())

s = list(map(int, input().split()))

s.sort()

sum = 0
for i in range(n-1, n-a-1, -1):
    sum += s[i]
print(sum)"
CodeGen,codenet,C++,Python,s480704678.py,"def main():
  n = int(raw_input())
  a = [int(i) for i in raw_input().split()]
  acc = [0] * (n + 1)
  for i in xrange(n):
    acc[i + 1] = acc[i] + a[i]
    acc[i + 1] %= MOD
  ans = 0
  for i in xrange(n):
    ans += a[i] % MOD * (MOD + acc[n] - acc[i + 1]) % MOD
    ans %= MOD
  print ans","MOD = 1000000007
def main():
  n = int(input())
  a = [int(i) for i in input().split()]
  acc = [0] * (n + 1)
  for i in range(n):
    acc[i + 1] = acc[i] + a[i]
    acc[i + 1] %= MOD
  ans = 0
  for i in range(n):
    ans += a[i] % MOD * (MOD + acc[n] - acc[i + 1]) % MOD
    ans %= MOD
  print(ans)

main()"
CodeGen,codenet,C++,Python,s990022717.py,"def main():
  n,k,x,y = map(int,raw_input().split())
  sum = 0
  for i in range(1,n+1):
    if i > k:
      sum += y
    else:
      sum += x
  print sum

main()","def main():
  n,k,x,y = int(input()), int(input()), int(input()), int(input())
  sum = 0
  for i in range(1,n+1):
    if i > k:
      sum += y
    else:
      sum += x
  print(sum)

main()"
CodeGen,codenet,C++,Python,s102850254.py,"#!/usr/bin/python
import sys
d = int(sys.argv[1])
n = int(sys.argv[2])

for i in range(0,d):
    for j in range(0,n+1):
        if j == 0 or j == n+1:
            map[i][j] = '.'
        else:
            map[i][j] = '#'

for i in range(1,n+1):
    for j in range(1,n+1):
        if map[i][j] == '#':
            map[i][j] = '.'
        else:
            map[i][j] = '#'

for i in range(1,n+1):
    for j in range(1,n+1):
        print map[i][j]

if i!= d-1:
    print

#print map[i][j]","#!/usr/bin/python
import sys
d = int(sys.argv[1])
n = int(sys.argv[2])

for i in range(0,d):
    for j in range(0,n+1):
        if j == 0 or j == n+1:
            map[i][j] = '.'
        else:
            map[i][j] = '#'

for i in range(1,n+1):
    for j in range(1,n+1):
        if map[i][j] == '#':
            map[i][j] = '.'
        else:
            map[i][j] = '#'

for i in range(1,n+1):
    for j in range(1,n+1):
        print(map[i][j])

if i!= d-1:
    print()

#print map[i][j]"
CodeGen,codenet,C++,Python,s930643405.py,"def main():
    n,k = map(int, raw_input().split())
    for i in xrange(k):
        a = map(int, raw_input().split())
        d[a[0]] = True
    while True:
        x = n
        hantei = True
        while x:
            if d[x % 10]:
                hantei = False
                break
            x //= 10
        if hantei:
            print n
            break
        n += 1

if __name__ == '__main__':
    main()","def main():
    d = [False] * 10
    n,k = map(int, input().split())
    inputs = list(input().split())
    for i in range(k):
        a = int(inputs[i])
        d[a] = True
    while True:
        x = n
        hantei = True
        while x:
            if d[x % 10]:
                hantei = False
                break
            x //= 10
        if hantei:
            print(n)
            break
        n += 1

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s391054810.py,"def main():
    h, w, hh, ww = map(int, raw_input().split())
    print (h-hh) * (w-ww)","def main():
    h, w = map(int, input().split())
    hh, ww = map(int, input().split())
    print((h-hh) * (w-ww))
    
main()"
CodeGen,codenet,C++,Python,s296046823.py,"def main():
    N, K = map(int, raw_input().split())
    v = map(int, raw_input().split())
    count = ((N - 1) + ((K - 1) - 1)) / (K - 1)
    print count

if __name__ == '__main__':
    main()","def main():
    N, K = map(int, input().split())
    v = map(int, input().split())
    count = ((N - 1) + ((K - 1) - 1)) // (K - 1)
    print(count)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s800506321.py,"def main():
    n,k = map(int, raw_input().split())
    x = n/k
    y = n%k
    if y!= 0:
        z = x + 1 - x
    else:
        z = x - x
    print z

if __name__ == '__main__':
    main()","def main():
    n,k = map(int, input().split())
    x = n//k
    y = n%k
    if y!= 0:
        z = x + 1 - x
    else:
        z = x - x
    print(z)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s343280137.py,"#!/usr/bin/python

import sys

def readn(n):
    return [int(i) for i in sys.stdin.readline().split()]

def main():
    n,c = readn(2)
    x = [0]*(n+1)
    v = [0]*(n+1)
    for i in range(1,n+1):
        x[i],v[i] = readn(2)
    lefttotal = [0]*(n+1)
    maxlefttotal = [0]*(n+1)
    for i in range(1,n+1):
        lefttotal[i] = lefttotal[i-1] + v[i]
    for i in range(1,n+1):
        maxlefttotal[i] = max(maxlefttotal[i-1],lefttotal[i]-x[i])
    righttotal = [0]*(n+1)
    maxrighttotal = [0]*(n+1)
    for i in range(1,n+1):
        righttotal[i] = righttotal[i-1] + v[n-i+1]
    for i in range(1,n+1):
        maxrighttotal[i] = max(maxrighttotal[i-1],righttotal[i] -(c - x[n+1-i]))
    ans = 0
    for i in range(1,n+1):
        ans = max(ans,lefttotal[i]-x[i])
        ans = max(ans,lefttotal[i]-2*x[i]+maxrighttotal[n-i])
        ans = max(ans,righttotal[i]-(c -x[n+1-i]))
        ans = max(ans,righttotal[i]-2*(c-x[n+1-i])+maxlefttotal[n-i])
    print ans

if __name__ == '__main__':
    main()","#!/usr/bin/python

import sys

def readn(n):
    return [int(i) for i in sys.stdin.readline().split()]

def main():
    n,c = readn(2)
    x = [0]*(n+1)
    v = [0]*(n+1)
    for i in range(1,n+1):
        x[i],v[i] = readn(2)
    lefttotal = [0]*(n+1)
    maxlefttotal = [0]*(n+1)
    for i in range(1,n+1):
        lefttotal[i] = lefttotal[i-1] + v[i]
    for i in range(1,n+1):
        maxlefttotal[i] = max(maxlefttotal[i-1],lefttotal[i]-x[i])
    righttotal = [0]*(n+1)
    maxrighttotal = [0]*(n+1)
    for i in range(1,n+1):
        righttotal[i] = righttotal[i-1] + v[n-i+1]
    for i in range(1,n+1):
        maxrighttotal[i] = max(maxrighttotal[i-1],righttotal[i] -(c - x[n+1-i]))
    ans = 0
    for i in range(1,n+1):
        ans = max(ans,lefttotal[i]-x[i])
        ans = max(ans,lefttotal[i]-2*x[i]+maxrighttotal[n-i])
        ans = max(ans,righttotal[i]-(c -x[n+1-i]))
        ans = max(ans,righttotal[i]-2*(c-x[n+1-i])+maxlefttotal[n-i])
    print(ans)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s938564096.py,"def main():
  r = int(raw_input())
  print r*r

main()","def main():
  r = int(input())
  print(r*r)

main()"
CodeGen,codenet,C++,Python,s113620820.py,"#!/usr/bin/python

# 2415.cc: Sashimi

import sys

def read_int():
  return int(sys.stdin.readline())

def read_ints():
  return [int(x) for x in sys.stdin.readline().split()]

def read_line():
  return sys.stdin.readline().strip()

def read_lines():
  return [read_line() for x in xrange(read_int())]

def main():
  n = read_int()
  wis = [read_int() for x in xrange(n)]
  wsums = [0] + wis
  for i in xrange(n):
    wsums[i + 1] = wsums[i] + wis[i]
  for i in xrange(n):
    for j in xrange(n):
      dp[i][j + 1] = LINF
      ks[i][j + 1] = -1
    dp[i][i + 1] = 0
    ks[i][i + 1] = i
  for l in xrange(2, n + 1):
    for i in xrange(0, n):
      for j in xrange(l, n + 1):
	mind = LINF
	wsum = wsums[j] - wsums[i]
	mink = -1
	for k in xrange(ks[i][j - 1], ks[i + 1][j] + 1):
	  d = dp[i][k] + dp[k][j] + wsum
	  if mind > d: mind = d, mink = k
	dp[i][j] = mind
	ks[i][j] = mink
  print dp[0][n]

main()","#!/usr/bin/python

# 2415.cc: Sashimi

import sys

def read_int():
  return int(sys.stdin.readline())

def read_ints():
  return [int(x) for x in sys.stdin.readline().split()]

def read_line():
  return sys.stdin.readline().strip()

def read_lines():
  return [read_line() for x in xrange(read_int())]

def main():
  n = read_int()
  wis = [read_int() for x in xrange(n)]
  wsums = [0] + wis
  for i in xrange(n):
    wsums[i + 1] = wsums[i] + wis[i]
  for i in xrange(n):
    for j in xrange(n):
      dp[i][j + 1] = LINF
      ks[i][j + 1] = -1
    dp[i][i + 1] = 0
    ks[i][i + 1] = i
  for l in xrange(2, n + 1):
    for i in xrange(0, n):
      for j in xrange(l, n + 1):
	mind = LINF
	wsum = wsums[j] - wsums[i]
	mink = -1
	for k in xrange(ks[i][j - 1], ks[i + 1][j] + 1):
	  d = dp[i][k] + dp[k][j] + wsum
	  if mind > d: mind = d, mink = k
	dp[i][j] = mind
	ks[i][j] = mink
  print dp[0][n]

main()"
CodeGen,codenet,C++,Python,s876796799.py,"#!/usr/bin/python

import sys

N = int(sys.argv[1])

a = [int(i) for i in sys.stdin.readline().split()]

ind_a = [i - 1 for i in a]

used_inds = set()

ans = 0

for i in range(N):
  left_border = -1
  right_border = N
  cur_ind = ind_a[i]
  left_it = used_inds.lower_bound(cur_ind)
  right_it = used_inds.lower_bound(cur_ind + 1)

  if left_it == used_inds.begin():
    left_border = -1
  else:
    if left_it == used_inds.end() or *left_it > cur_ind:
      left_it -= 1
    left_border = *left_it

  if right_it == used_inds.end():
    right_border = N
  else:
    right_border = *right_it

  ans += (cur_ind - left_border) * (right_border - cur_ind) * (i + 1)

print ans","#!/usr/bin/python

import sys

N = int(sys.argv[1])

a = [int(i) for i in sys.stdin.readline().split()]

ind_a = [i - 1 for i in a]

used_inds = set()

ans = 0

for i in range(N):
  left_border = -1
  right_border = N
  cur_ind = ind_a[i]
  left_it = used_inds.lower_bound(cur_ind)
  right_it = used_inds.lower_bound(cur_ind + 1)

  if left_it == used_inds.begin():
    left_border = -1
  else:
    if left_it == used_inds.end() or *left_it > cur_ind:
      left_it -= 1
    left_border = *left_it

  if right_it == used_inds.end():
    right_border = N
  else:
    right_border = *right_it

  ans += (cur_ind - left_border) * (right_border - cur_ind) * (i + 1)

print ans"
CodeGen,codenet,C++,Python,s146561572.py,"#!/usr/bin/python

# import modules
import sys

# define variables
n = int(raw_input())
ans = 0

# Contribution of The Nodes.
for i in range(1, n+1):
    ans += i * 1 * (n-i+1)

# Contribution of The Edges.
for i in range(1, n):
    u, v = map(int, raw_input().split())
    a = max(u, v)
    b = min(u, v)
    ans -= b * 1 * (n-a+1)

# Print output
print ans","#!/usr/bin/python

# import modules
import sys

# define variables
n = int(input())
ans = 0

# Contribution of The Nodes.
for i in range(1, n+1):
    ans += i * 1 * (n-i+1)

# Contribution of The Edges.
for i in range(1, n):
    u, v = map(int, input().split())
    a = max(u, v)
    b = min(u, v)
    ans -= b * 1 * (n-a+1)

# Print output
print(ans)"
CodeGen,codenet,C++,Python,s593850729.py,"#!/usr/bin/python

import sys

def main():
  A = int(sys.argv[1])
  B = int(sys.argv[2])
  C = int(sys.argv[3])
  X = int(sys.argv[4])
  
  cnt = 0
  for a in range(0, A+1):
    for b in range(0, B+1):
      for c in range(0, C+1):
        total = 500*a + 100*b + 50*c
        if total == X: cnt += 1
  
  print cnt

if __name__ == '__main__':
  main()","#!/usr/bin/python

import sys

def main():
  A = int(input())
  B = int(input())
  C = int(input())
  X = int(input())
  
  cnt = 0
  for a in range(0, A+1):
    for b in range(0, B+1):
      for c in range(0, C+1):
        total = 500*a + 100*b + 50*c
        if total == X: cnt += 1
  
  print(cnt)

if __name__ == '__main__':
  main()"
CodeGen,codenet,C++,Python,s855845406.py,"def main():
    N, A = map(int, raw_input().split())
    print N * N - A

if __name__ == '__main__':
    main()","def main():
    N = int(input())
    A = int(input())
    print(N * N - A)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s391929974.py,"def main():
  n = int(raw_input())
  sq = [int(i) for i in raw_input().split()]
  com = []
  for i in range(1,n+1):
    com.append(i*i%n)
  for i in range(1,n+1):
    fr = [0]*(n-1)
    for j in range(0,len(com)):
      if com[j] == i:
        for k in range(0,n-1):
          if com[j] == sq[k]:
            fr[k] += 1
    for j in range(0,n-1):
      print fr[j]

if __name__ == '__main__':
  main()","def main():
  n = int(input())
  sq = [int(i) for i in input().split()]
  com = []
  for i in range(1,n+1):
    com.append(i*i%n)
  for i in range(1,n+1):
    fr = [0]*(n-1)
    for j in range(0,len(com)):
      if com[j] == i:
        for k in range(0,n-1):
          if com[j] == sq[k]:
            fr[k] += 1
    for j in range(0,n-1):
      print(fr[j])

if __name__ == '__main__':
  main()"
CodeGen,codenet,C++,Python,s853750785.py,e exceeded.,e exceeded.
CodeGen,codenet,C++,Python,s526060174.py,"def main():
    n, m = map(int, raw_input().split())
    k, a = map(int, raw_input().split())
    x = [0] * (m + 1)
    for i in range(n):
        for j in range(k):
            x[a[i]] += 1
    ans = 0
    for i in range(1, m + 1):
        if x[i] == n:
            ans += 1
    print ans

if __name__ == '__main__':
    main()","def main():
    n, m = map(int, input().split())
    x = [0] * (m + 1)
    for i in range(n):
        inputs = input().split()
        k = int(inputs[0])
        for j in range(k):
            a = int(inputs[j + 1])
            x[a] += 1
    ans = 0
    for i in range(1, m + 1):
        if x[i] == n:
            ans += 1
    print(ans)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s035123609.py,"def main(argv):
    rr, cc, k = map(int, raw_input().split())
    for i in range(1, k + 1):
        r, c, v = map(int, raw_input().split())
        mat[r - 1][c - 1] = v
    dp = [[[0] * 4 for i in range(cc)] for j in range(rr)]
    dp[0][0][1] = mat[0][0]
    for y in range(rr):
        for x in range(cc):
            for c in range(4):
                v = mat[y][x]
                q = (x == 0) and dpl[x] or max(dpl[x], max(dp[y][x - 1][c], dp[y][x - 1][c - 1] + v))
                dp[y][x][c] = q
    print dp[rr - 1][cc - 1][3]

if __name__ == '__main__':
    main(sys.argv)","def main():
    rr, cc, k = map(int, input().split())
    mat = [[0] * cc for _ in range(rr)]
    dp = [[[0] * 4 for _ in range(cc)] for _ in range(rr)]
    dpl = [0] * cc
    for i in range(1, k + 1):
        r, c, v = map(int, input().split())
        mat[r - 1][c - 1] = v
    dp = [[[0] * 4 for i in range(cc)] for j in range(rr)]
    dp[0][0][1] = mat[0][0]
    for y in range(rr):
        for x in range(cc):
            for c in range(4):
                v = mat[y][x]
                q = (x == 0) and dpl[x] or max(dpl[x], max(dp[y][x - 1][c], dp[y][x - 1][c - 1] + v))
                dp[y][x][c] = q
    print dp[rr - 1][cc - 1][3]

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s654970460.py,"#!/usr/bin/python

import sys

n = int(raw_input())
a = [int(i) for i in raw_input().split()]

print a[n-1]
for i in xrange(1,n):
    print a[n-i-1]","#!/usr/bin/python

import sys

n = int(input())
a = list(map(int, input().split()))

print(a[n-1], end="" "")
for i in range(1,n):
    print(a[n-i-1], end="" "")"
CodeGen,codenet,C++,Python,s275739084.py,"def main():
  A,B=map(int,raw_input().split())
  C=A+B
  if A%3!=0 and B%3!=0 and C%3!=0:
    print ""Impossible""
  else:
    print ""Possible""

if __name__=='__main__':
  main()","def main():
  A,B = map(int,input().split())
  C=A+B
  if A%3!=0 and B%3!=0 and C%3!=0:
      print(""Impossible"")
  else:
      print(""Possible"")
if __name__=='__main__':
  main()"
CodeGen,codenet,C++,Python,s314711832.py,"#!/usr/bin/python

import sys

def main():
  V, E, r = map(int, sys.stdin.readline().split())
  edges = []
  for i in range(E):
    edges.append(map(int, sys.stdin.readline().split()))
  distances = [sys.maxint] * V
  prev_distances = [0] * V
  for i in range(V):
    distances[i] = sys.maxint
  distances[r] = 0
  for i in range(V):
    prev_distances[i] = distances[i]
  for i in range(V):
    for j in range(V):
      if distances[i] + edges[j][2] < distances[j]:
        distances[j] = distances[i] + edges[j][2]
  for i in range(V):
    if distances[i] == sys.maxint:
      print ""INF""
    else:
      print distances[i]
  for i in range(V):
    if distances[i] == sys.maxint:
      print ""INF""
    else:
      print distances[i]

if __name__ == ""__main__"":
  main()","#!/usr/bin/python

import sys

def main():
  V, E, r = map(int, sys.stdin.readline().split())
  edges = []
  for i in range(E):
    edges.append(list(map(int, sys.stdin.readline().split())))
  distances = [sys.maxsize] * V
  prev_distances = [0] * V
  for i in range(V):
    distances[i] = sys.maxsize
  distances[r] = 0
  for i in range(V):
    prev_distances[i] = distances[i]
  for i in range(V):
    for j in range(V):
      if distances[i] + edges[j][2] < distances[j]:
        distances[j] = distances[i] + edges[j][2]
  for i in range(V):
    if distances[i] == sys.maxsize:
      print(""INF"")
    else:
      print(distances[i])
  for i in range(V):
    if distances[i] == sys.maxsize:
      print(""INF"")
    else:
      print(distances[i])

if __name__ == ""__main__"":
  main()"
CodeGen,codenet,C++,Python,s700281300.py,"def main():
    n = int(raw_input())
    for i in range(n):
        s = raw_input()
        st = set()
        for j in range(1, len(s)):
            ss = ''
            for k in range(j):
                ss += s[k]
            ss = ss[::-1]
            st.add(ss)
            st.add(ss[::-1])
            st.add(ss + ss[::-1])
            st.add(ss[::-1] + ss)
            st.add(ss + ss[::-1] + ss)
            st.add(ss[::-1] + ss + ss[::-1])
            st.add(ss[::-1] + ss[::-1] + ss)
            st.add(ss[::-1] + ss[::-1] + ss[::-1])
        print len(st)

if __name__ == '__main__':
    main()","def main():
    n = int(input())
    for i in range(n):
        s = input()
        st = set()
        for j in range(1, len(s)):
            ss = ''
            for k in range(j):
                ss += s[k]
            ss = ss[::-1]
            st.add(ss)
            st.add(ss[::-1])
            st.add(ss + ss[::-1])
            st.add(ss[::-1] + ss)
            st.add(ss + ss[::-1] + ss)
            st.add(ss[::-1] + ss + ss[::-1])
            st.add(ss[::-1] + ss[::-1] + ss)
            st.add(ss[::-1] + ss[::-1] + ss[::-1])
        print(len(st))

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s023383699.py,"x=int(raw_input(""enter a number: ""))
print x*x*x","x=int(input())
print(x*x*x)"
CodeGen,codenet,C++,Python,s350755479.py,"def main():
    
    n = int(input())
    
    node = [Node() for _ in range(n + 1)]
    
    for i in range(1, n + 1):
        node[i].x = int(input())
        node[i].y = int(input())
        node[i].id = i
    
    node.sort(key=lambda x: (x.x, x.y))
    
    e = []
    
    for i in range(2, n + 1):
        node[i - 1].id = i
        e.append(Edge(node[i - 1].id, node[i].id, node[i].x - node[i - 1].x))
    
    e.sort(key=lambda x: (x.val, x.u, x.v))
    
    ans = 0
    
    for i in range(len(e)):
        u = e[i].u
        v = e[i].v
        val = e[i].val
        if findpar(u) == findpar(v):
            continue
        unite(u, v)
        ans += val
    
    print(ans)
    
if __name__ == ""__main__"":
    main()","def main():
    
    n = int(input())
    
    node = [Node() for _ in range(n + 1)]
    
    for i in range(1, n + 1):
        node[i].x = int(input())
        node[i].y = int(input())
        node[i].id = i
    
    node.sort(key=lambda x: (x.x, x.y))
    
    e = []
    
    for i in range(2, n + 1):
        node[i - 1].id = i
        e.append(Edge(node[i - 1].id, node[i].id, node[i].x - node[i - 1].x))
    
    e.sort(key=lambda x: (x.val, x.u, x.v))
    
    ans = 0
    
    for i in range(len(e)):
        u = e[i].u
        v = e[i].v
        val = e[i].val
        if findpar(u) == findpar(v):
            continue
        unite(u, v)
        ans += val
    
    print(ans)
    
if __name__ == ""__main__"":
    main()"
CodeGen,codenet,C++,Python,s573429823.py,"def main():
    # Your code here!
    n = int(input())
    flg = False
    if n < 4:
        print(""No"")
    else:
        for i in range(0, (n / 4) + 1):
            for j in range(0, (n / 7) + 1):
                if (i * 4 + j * 7) == n:
                    flg = True
                    break
            if flg:
                break
        if flg:
            print(""Yes"")
        else:
            print(""No"")

if __name__ == ""__main__"":
    main()","def main():
    # Your code here!
    n = int(input())
    flg = False
    if n < 4:
        print(""No"")
    else:
        for i in range(0, (n // 4) + 1):
            for j in range(0, (n // 7) + 1):
                if (i * 4 + j * 7) == n:
                    flg = True
                    break
            if flg:
                break
        if flg:
            print(""Yes"")
        else:
            print(""No"")

if __name__ == ""__main__"":
    main()"
CodeGen,codenet,C++,Python,s807902500.py,"def main():
    s,t = input().split()
    s += s
    print(s.find(t)+1)

main()","def main():
    s,t = input(), input()
    s += s
    print(""Yes"" if t in s else ""No"")
main()"
CodeGen,codenet,C++,Python,s003531724.py,"#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
import math
import datetime
import time
import collections

class Node:
    def __init__(self, value):
        self.value = value
        self.next = None

class Solution:
    # @param head, a list of integers
    # @return a list of integers
    def reorderList(self, head):
        if not head:
            return []
        if not head.next:
            return [head.value]
        dummy = Node(0)
        dummy.next = head
        pre = dummy
        cur = head.next
        while cur:
            pre.next = cur.next
            cur.next = pre
            pre = cur
            cur = pre.next
        head = dummy.next
        pre = dummy
        cur = head
        while cur:
            if cur.next and cur.next.next:
                pre.next = cur.next.next
                cur.next.next = cur.next
                cur.next = pre.next
            else:
                pre = cur
                cur = cur.next
        return dummy.next.value

if __name__ == '__main__':
    s = Solution()
    head = Node(1)
    head.next = Node(2)
    head.next.next = Node(3)
    head.next.next.next = Node(4)
    head.next.next.next.next = Node(5)
    head.next.next.next.next.next = Node(6)
    head.next.next.next.next.next.next = Node(7)
    head.next.next.next.next.next.next.next = Node(8)
    head.next.next.next.next.next.next.next.next = Node(9)
    head.next.next.next.next.next.next.next.next.next = Node(10)
    head.next.next.next.next.next.next.next.next.next.next = Node(11)
    head.next.next.next.next.next.next.next.next.next.next.next = Node(12)
    head.next.next.next.next.next.next.next.next.next.next.next.next = Node(13)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(14)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(15)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(16)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(17)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(18)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(19)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(20)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(21)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(22)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(23)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(24)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(25)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(26)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(27)
    head.next.next.next.next.next.next.next.next.next.next.next.next","#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
import math
import datetime
import time
import collections

class Node:
    def __init__(self, value):
        self.value = value
        self.next = None

class Solution:
    # @param head, a list of integers
    # @return a list of integers
    def reorderList(self, head):
        if not head:
            return []
        if not head.next:
            return [head.value]
        dummy = Node(0)
        dummy.next = head
        pre = dummy
        cur = head.next
        while cur:
            pre.next = cur.next
            cur.next = pre
            pre = cur
            cur = pre.next
        head = dummy.next
        pre = dummy
        cur = head
        while cur:
            if cur.next and cur.next.next:
                pre.next = cur.next.next
                cur.next.next = cur.next
                cur.next = pre.next
            else:
                pre = cur
                cur = cur.next
        return dummy.next.value

if __name__ == '__main__':
    s = Solution()
    head = Node(1)
    head.next = Node(2)
    head.next.next = Node(3)
    head.next.next.next = Node(4)
    head.next.next.next.next = Node(5)
    head.next.next.next.next.next = Node(6)
    head.next.next.next.next.next.next = Node(7)
    head.next.next.next.next.next.next.next = Node(8)
    head.next.next.next.next.next.next.next.next = Node(9)
    head.next.next.next.next.next.next.next.next.next = Node(10)
    head.next.next.next.next.next.next.next.next.next.next = Node(11)
    head.next.next.next.next.next.next.next.next.next.next.next = Node(12)
    head.next.next.next.next.next.next.next.next.next.next.next.next = Node(13)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(14)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(15)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(16)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(17)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(18)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(19)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(20)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(21)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(22)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(23)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(24)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(25)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(26)
    head.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next.next = Node(27)
    head.next.next.next.next.next.next.next.next.next.next.next.next"
CodeGen,codenet,C++,Python,s984540390.py,"def main():
    h = int(input())
    while h!= 1:
        if h % 2!= 0:
            h -= 1
        h //= 2
        cnt *= 2
        ans += cnt
    print(ans + 1)

main()","def main():
    cnt = 1
    ans = 0
    h = int(input())
    while h!= 1:
        if h % 2!= 0:
            h -= 1
        h //= 2
        cnt *= 2
        ans += cnt
    print(ans + 1)

main()"
CodeGen,codenet,C++,Python,s550008428.py,"def main():
    s = int(input())
    a = set()
    a.add(s)
    while True:
        if s % 2 == 0:
            x = s // 2
            if a.find(x)!= a.end():
                print(d)
                return
            a.add(x)
        else:
            x = 3 * s + 1
            if a.find(x)!= a.end():
                print(d)
                return
            a.add(x)
        s = x
        d += 1
    print(d)

if __name__ == '__main__':
    main()","def main():
    s = int(input())
    a = set()
    a.add(s)
    d = 2
    while True:
        if s % 2 == 0:
            x = s // 2
            if x in a:
                print(d)
                return
            a.add(x)
        else:
            x = 3 * s + 1
            if x in a:
                print(d)
                return
            a.add(x)
        s = x
        d += 1
    print(d)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s615507008.py,"def solve(N, T, M, P, X):
    for i in range(M):
        ans = 0
        for j in range(N):
            if j == P[i] - 1:
                ans += X[i]
            else:
                ans += T[j]
        print(ans)

solve(N, T, M, P, X)","N = int(input())
T = list(map(int, input().split()))
M = int(input())
P = []
X = []
for _ in range(M):
    p, x = map(int, input().split())
    P.append(p)
    X.append(x)
    
def solve(N, T, M, P, X):
    for i in range(M):
        ans = 0
        for j in range(N):
            if j == P[i] - 1:
                ans += X[i]
            else:
                ans += T[j]
        print(ans)

solve(N, T, M, P, X)"
CodeGen,codenet,C++,Python,s208096306.py,"def gcd(a, b):
    if a < b:
        a, b = b, a
    while b:
        a, b = b, a % b
    return a

def main():
    n = int(input())
    ans = int(input())
    for i in range(1, n):
        a = int(input())
        ans = gcd(ans, a)
    print(ans)

main()","def gcd(a, b):
    if a < b:
        a, b = b, a
    while b:
        a, b = b, a % b
    return a

def main():
    n = int(input())
    inputs = list(input().split())
    ans = int(inputs[0])
    for i in range(1, n):
        a = int(inputs[i])
        ans = gcd(ans, a)
    print(ans)

main()"
CodeGen,codenet,C++,Python,s661446851.py,"#!/usr/bin/python
# -*- coding: utf-8 -*-

# Author: Abdul Aziz

# Created: 10/27/2016

# Description:
#
#

# Import Statements:
import sys
import math

# Function Definitions:

# Main Function:
def main():
    n = int(sys.argv[1])
    for i in range(n):
        print(math.factorial(i))

# Call Main Function:
if __name__ == '__main__':
    main()","#!/usr/bin/python
# -*- coding: utf-8 -*-

# Author: Abdul Aziz

# Created: 10/27/2016

# Description:
#
#

# Import Statements:
import sys
import math

# Function Definitions:

# Main Function:
def main():
    n = int(input())
    for i in range(n):
        print(math.factorial(i))

# Call Main Function:
if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s589139355.py,"def main():
    a = int(input())
    t = 0
    h = 0
    lt = 0
    lh = 0
    tt = 0
    hh = 0
    l = 0
    for i in range(a):
        taro = input()
        hana = input()
        lt = len(taro)
        lh = len(hana)
        if lt > lh:
            l = lt
        else:
            l = lh
        tt = t + 3
        hh = h + 3
        if taro > hana:
            t = t + 3
        else:
            h = h + 3
        if hana == taro:
            h = h + 1
            t = t + 1
    print(t, h)

if __name__ == '__main__':
    main()","def main():
    a = int(input())
    t = 0
    h = 0
    lt = 0
    lh = 0
    tt = 0
    hh = 0
    l = 0
    for i in range(a):
        taro = input()
        hana = input()
        lt = len(taro)
        lh = len(hana)
        if lt > lh:
            l = lt
        else:
            l = lh
        tt = t + 3
        hh = h + 3
        if taro > hana:
            t = t + 3
        else:
            h = h + 3
        if hana == taro:
            h = h + 1
            t = t + 1
    print(t, h)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s299205600.py,"def main():
    a = int(input())
    b = int(input())
    result = 2 * a - 1 if a > b else 2 * b - 1
    print(result)

main()","def main():
    a = int(input())
    b = int(input())
    result = 2 * a - 1 if a > b else 2 * b - 1
    print(result)

main()"
CodeGen,codenet,C++,Python,s956589471.py,"def main():
    a, b, c, d, e, k = map(int, raw_input().split())
    print(e - a <= k and ""Yay!"" or "":("")

main()","def main():
    a, b, c, d, e, k = map(int, raw_input().split())
    print(e - a <= k and ""Yay!"" or "":("")

main()"
CodeGen,codenet,C++,Python,s049366196.py,"def is_prime(x):
    if x < 2:
        return False
    for i in range(2, x):
        if x % i == 0:
            return False
    return True

def main():
    N = int(input())
    ans = 1
    for i in range(2, N+1):
        if is_prime(i):
            cnt = 0
            while N >= i:
                cnt += N // i
                N //= i
            ans *= cnt + 1
            ans %= mod
    print(ans)

main()","def is_prime(x):
    if x < 2:
        return False
    for i in range(2, x):
        if x % i == 0:
            return False
    return True

def main():
    N = int(input())
    ans = 1
    for i in range(2, N+1):
        if is_prime(i):
            cnt = 0
            while N >= i:
                cnt += N // i
                N //= i
            ans *= cnt + 1
            ans %= mod
    print(ans)

main()"
CodeGen,codenet,C++,Python,s395011148.py,"def main():
    N = int(input())
    A = [int(x) for x in input().split()]
    for i in range(1, N + 1):
        A[i] = A[i] + A[i - 1]
    for i in range(0, N + 1):
        for j in range(0, 20):
            dp[i][0][j] = -(1 << 60)
            dp[i][1][j] = -(1 << 60)
    dp[0][0][10] = 0
    for i in range(1, N + 1):
        for j in range(6, 14 + 1):
            if dp[i - 1][0][j]!= (1 << 60):
                dp[i][1][j + 1] = max(dp[i][1][j + 1], dp[i - 1][0][j] + A[i])
                dp[i][0][j - 1] = max(dp[i][0][j - 1], dp[i - 1][0][j])
            if dp[i - 1][1][j]!= (1 << 60):
                dp[i][0][j - 1] = max(dp[i][0][j - 1], dp[i - 1][1][j])
    V = 10 + (N / 2) - (N - (N / 2))
    T1 = dp[N][0][V]
    T2 = dp[N][1][V]
    print(max(T1, T2))

if __name__ == '__main__':
    main()","def main():
    N = int(input())
    A = [int(x) for x in input().split()]
    for i in range(1, N + 1):
        A[i] = A[i] + A[i - 1]
    for i in range(0, N + 1):
        for j in range(0, 20):
            dp[i][0][j] = -(1 << 60)
            dp[i][1][j] = -(1 << 60)
    dp[0][0][10] = 0
    for i in range(1, N + 1):
        for j in range(6, 14 + 1):
            if dp[i - 1][0][j]!= (1 << 60):
                dp[i][1][j + 1] = max(dp[i][1][j + 1], dp[i - 1][0][j] + A[i])
                dp[i][0][j - 1] = max(dp[i][0][j - 1], dp[i - 1][0][j])
            if dp[i - 1][1][j]!= (1 << 60):
                dp[i][0][j - 1] = max(dp[i][0][j - 1], dp[i - 1][1][j])
    V = 10 + (N / 2) - (N - (N / 2))
    T1 = dp[N][0][V]
    T2 = dp[N][1][V]
    print(max(T1, T2))

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s615050061.py,"def pow(a, k):
    if k < 0: k += (1 << 63) - 1
    t = 1
    while k:
        if k & 1: t = t * a
        a = a * a
        k >>= 1
    return t

def main():
    n = int(input())
    s = input()[1:]
    f = [0] * (n + 1)
    g = [0] * (n + 1)
    for i in range(1, n + 1):
        if s[i] == '+':
            f[i] = f[i - 1] + 1
            g[i] = g[i - 1]
        elif s[i] == '-':
            f[i] = f[i - 1] - 1
            g[i] = g[i - 1]
        else:
            f[i] = f[i - 1]
            g[i] = g[i - 1] + (s[i] == '<' and -1 or 1)
    for i in range(n, -1, -1):
        f[i] = f[i + 1] * pow(B, g[i]) + f[i + 1]
        map[f[i]] = map.get(f[i], 0) + 1
        cnt += map[f[n] * pow(B, g[i - 1]) + f[i - 1]]
    print(cnt)

main()","def pow(a, k):
    if k < 0: k += (1 << 63) - 1
    t = 1
    while k:
        if k & 1: t = t * a
        a = a * a
        k >>= 1
    return t

def main():
    n = int(input())
    s = input()[1:]
    f = [0] * (n + 1)
    g = [0] * (n + 1)
    for i in range(1, n + 1):
        if s[i] == '+':
            f[i] = f[i - 1] + 1
            g[i] = g[i - 1]
        elif s[i] == '-':
            f[i] = f[i - 1] - 1
            g[i] = g[i - 1]
        else:
            f[i] = f[i - 1]
            g[i] = g[i - 1] + (s[i] == '<' and -1 or 1)
    for i in range(n, -1, -1):
        f[i] = f[i + 1] * pow(B, g[i]) + f[i + 1]
        map[f[i]] = map.get(f[i], 0) + 1
        cnt += map[f[n] * pow(B, g[i - 1]) + f[i - 1]]
    print(cnt)

main()"
CodeGen,codenet,C++,Python,s367896206.py,"def equal(c1, c2):
    for i in range(6):
        for j in range(4):
            if eq(c1, c2):
                return True
            c1.roll_z()
        if i % 2 == 0:
            c1.roll_y()
        else:
            c1.roll_x()
    return False

def eq(c1, c2):
    for i in range(6):
        if c1.f[i]!= c2.f[i]:
            return False
    return True

c1 = Cube()
c2 = Cube()

for i in range(6):
    c1.f[i] = int(input())
for i in range(6):
    c2.f[i] = int(input())

if equal(c1, c2):
    print(""Yes"")
else:
    print(""No"")","def equal(c1, c2):
    for i in range(6):
        for j in range(4):
            if eq(c1, c2):
                return True
            c1.roll_z()
        if i % 2 == 0:
            c1.roll_y()
        else:
            c1.roll_x()
    return False

def eq(c1, c2):
    for i in range(6):
        if c1.f[i]!= c2.f[i]:
            return False
    return True

c1 = Cube()
c2 = Cube()

for i in range(6):
    c1.f[i] = int(input())
for i in range(6):
    c2.f[i] = int(input())

if equal(c1, c2):
    print(""Yes"")
else:
    print(""No"")"
CodeGen,codenet,C++,Python,s023282516.py,"def main():
    S = input()
    # 後ろから解くかわりにすべての文字列を「左右反転」する
    S = S[::-1]
    for i in range(4):
        S = S[::-1]
    # 端から切っていく
    can = True
    for i in range(len(S)):
        can2 = False
        for j in range(4):
            d = divide[j]
            if S[i:i+len(d)] == d:
                can2 = True
                i += len(d)
        if not can2:
            can = False
            break
    if can:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == '__main__':
    main()","def main():
    S = input()
    # 後ろから解くかわりにすべての文字列を「左右反転」する
    S = S[::-1]
    for i in range(4):
        S = S[::-1]
    # 端から切っていく
    can = True
    for i in range(len(S)):
        can2 = False
        for j in range(4):
            d = divide[j]
            if S[i:i+len(d)] == d:
                can2 = True
                i += len(d)
        if not can2:
            can = False
            break
    if can:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s129088151.py,"def main():
    n = int(input())
    T = {}
    for i in range(n):
        com, str = input().split()
        if com[0] == 'i':
            T[str] = True
        else:
            if T[str]:
                print('yes')
            else:
                print('no')

if __name__ == '__main__':
    main()","def main():
    n = int(input())
    T = {}
    for i in range(n):
        com, str = input().split()
        if com[0] == 'i':
            T[str] = True
        else:
            if T[str]:
                print('yes')
            else:
                print('no')

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s772335512.py,"def dfs(v):
    used[v] = True
    grundy[v] = 0
    for i in range(len(G[v])):
        if not used[G[v][i]]:
            dfs(G[v][i])
            grundy[v] ^= (grundy[G[v][i]] + 1)

N = int(input())
for i in range(N-1):
    x, y = map(int, input().split())
    x -= 1
    y -= 1
    G[x].append(y)
    G[y].append(x)

dfs(0)
if grundy[0]!= 0:
    print(""Alice"")
else:
    print(""Bob"")","def dfs(v):
    used[v] = True
    grundy[v] = 0
    for i in range(len(G[v])):
        if not used[G[v][i]]:
            dfs(G[v][i])
            grundy[v] ^= (grundy[G[v][i]] + 1)

N = int(input())
for i in range(N-1):
    x, y = map(int, input().split())
    x -= 1
    y -= 1
    G[x].append(y)
    G[y].append(x)

dfs(0)
if grundy[0]!= 0:
    print(""Alice"")
else:
    print(""Bob"")"
CodeGen,codenet,C++,Python,s522742913.py,"def main():
    source = input(""Enter the source string: "")
    if len(source) > 10 or len(source) < 1:
        return -1
    max_i = pow(2, len(source) - 1)
    sum = 0
    for i in range(max_i):
        plus = bitset(i)
        number = 0
        working = source
        while plus.any():
            i = 0
            while not plus[i]:
                i += 1
            sum += float(working[:i + 1])
            plus >>= i + 1
            working = working[i + 1:]
    sum += float(working)
    print(sum)

if __name__ == '__main__':
    main()","def main():
    source = input(""Enter the source string: "")
    if len(source) > 10 or len(source) < 1:
        return -1
    max_i = pow(2, len(source) - 1)
    sum = 0
    for i in range(max_i):
        plus = bitset(i)
        number = 0
        working = source
        while plus.any():
            i = 0
            while not plus[i]:
                i += 1
            sum += float(working[:i + 1])
            plus >>= i + 1
            working = working[i + 1:]
    sum += float(working)
    print(sum)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s620821061.py,"def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a%b)

def exec():
    bm = BitMatching(MN)
    for i in range(0, MN):
        for j in range(0, MN):
            if gcd(a[i], b[j])!= 1:
                bm.add(i, j)
    return bm.exec()","def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a%b)

def exec():
    bm = BitMatching(MN)
    for i in range(0, MN):
        for j in range(0, MN):
            if gcd(a[i], b[j])!= 1:
                bm.add(i, j)
    return bm.exec()

# Note:
# 1. The input is a list of integers.
# 2. The input integers are non-negative and fit in the range of a 32-bit signed integer.
# 3. The total number of integers won't exceed 520.
# 4. The total number of operations won't exceed 100,000.
# 5. The answer is guaranteed to fit in a 32-bit signed integer.
# 6. All operations are performed in O(1) time complexity.
# 7. The memory usage is O(MN) and the extra space is O(MN).
# 8. The input is guaranteed to be valid and the output is correct.
# 9. If the input is invalid, the output may not be correct.
# 10. The input is guaranteed to be in non-increasing order.
# 11. The input is guaranteed to be in non-decreasing order.
# 12. The input is guaranteed to be in non-decreasing order.
# 13. The input is guaranteed to be in non-decreasing order.
# 14. The input is guaranteed to be in non-decreasing order.
# 15. The input is guaranteed to be in non-decreasing order.
# 16. The input is guaranteed to be in non-decreasing order.
# 17. The input is guaranteed to be in non-decreasing order.
# 18. The input is guaranteed to be in non-decreasing order.
# 19. The input is guaranteed to be in non-decreasing order.
# 20. The input is guaranteed to be in non-decreasing order.
# 21. The input is guaranteed to be in non-decreasing order.
# 22. The input is guaranteed to be in non-decreasing order.
# 23. The input is guaranteed to be in non-decreasing order.
# 24. The input is guaranteed to be in non-decreasing order.
# 25. The input is guaranteed to be in non-decreasing order.
# 26. The input is guaranteed to be in non-decreasing order.
# 27. The input is guaranteed to be in non-decreasing order.
# 28. The input is guaranteed to be in non-decreasing order.
# 29. The input is guaranteed to be in non-decreasing order.
# 30. The input is guaranteed to be in non-decreasing order.
# 31. The input is guaranteed to be in non-decreasing order.
# 32. The input is guaranteed to be in non-decreasing order.
# 33. The input is guaranteed to be in non-decreasing order.
# 34. The input is guaranteed to be in non-decreasing order.
# 35. The input is guaranteed to be in non-decreasing order.
# 36. The input is guaranteed to be in non-decreasing order.
# 37. The input is guaranteed to be in non-decreasing order.
# 38. The input is guaranteed to be in non-decreasing order.
# 39. The input is guaranteed to be in non-decreasing order.
# 40. The input is guaranteed to be in non-decreasing order.
# 41. The input is guaranteed to be in non-decreasing order.
# 42. The input is guaranteed to be in non-decreasing order.
# 43. The input is guaranteed to be in non-decreasing order.
# 44. The input is guaranteed to be in non-decreasing order.
# 45. The input is guaranteed to be in non-decreasing order.
# 46. The input is guaranteed to be in non-decreasing order.
# 47. The input is guaranteed to be in non-decreasing order.
# 48. The input is guaranteed to be in non-decreasing order.
# 49. The input is guaranteed to be in non-decreasing order.
# 50. The input is guaranteed to be in non-decreasing order.
# 51. The input is guaranteed to be in non-decreasing order.
# 52. The input is guaranteed to be in non-decreasing order.
# 53. The input is guaranteed to be in non-decreasing order.
# 54. The input is guaranteed to be in non-decreasing order.
# 55. The input is guaranteed to be in non-decreasing order.
# 56. The input is guaranteed to be in non-decreasing order.
# 57. The input is guaranteed to be in non-decreasing order.
# 58. The input is guaranteed to be in non-decreasing order.
# 59. The input is guaranteed to be in non-decreasing order.
# 60. The input is guaranteed to be in non-decreasing order.
# 61. The input is guaranteed to be in non-decreasing order.
# 62. The input is guaranteed to be in non-decreasing order.
# 63. The input is guaranteed to be in non-decreasing order.
# 64. The input is guaranteed to be in non-decreasing order.
# 65. The input is guaranteed to be in non-decreasing order.
# 66. The input is guaranteed to be in non-decreasing order.
# 67. The input is guaranteed to be in non-decreasing order.
# 68. The input is guaranteed to be in non-decreasing order.
# 69. The input is guaranteed to be"
CodeGen,codenet,C++,Python,s275513165.py,"def main():
  	str = input(""Enter a string: "")
  	if str[2] == str[3] and str[4] == str[5]:
  		print(""Yes"")
  	else:
  		print(""No"")

main()","def main():
  	str = input(""Enter a string: "")
  	if str[2] == str[3] and str[4] == str[5]:
  		print(""Yes"")
  	else:
  		print(""No"")

main()"
CodeGen,codenet,C++,Python,s074619936.py,"def main():
    str = input(""Enter a string: "")
    sum = 0
    for i in range(len(str)):
        tmp = str[i]
        num = int(tmp)
        sum += num
    print(sum)

if __name__ == ""__main__"":
    main()","def main():
    str = input(""Enter a string: "")
    sum = 0
    for i in range(len(str)):
        tmp = str[i]
        num = int(tmp)
        sum += num
    print(sum)

if __name__ == ""__main__"":
    main()"
CodeGen,codenet,C++,Python,s789380051.py,"#!/usr/bin/python
# -*- coding: utf-8 -*-

#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
#import math
#import operator
#import itertools
#import collections
#import copy
#import heapq

#import time
#import datetime
#import dateutil.parser
#import dateutil.relativedelta

#import re
#import json
#import base64
#import binascii
#import csv
#import codecs
#import chardet
#import cStringIO
#import struct
#import subprocess
#import multiprocessing
#import threading
#import Queue
#import collections
#import ctypes
#import ctypes.util
#import py_compile
#import zlib
#import pydoc
#import pickle
#import pprint
#import pdb
#import pstats
#import random
#import repr
#import shutil
#import struct
#import subprocess
#import sys
#import tempfile
#import textwrap
#import time
#import traceback
#import types
#import unicodedata
#import urllib
#import urllib2
#import urlparse
#import uuid
#import warnings
#import weakref
#import xmltodict
#import zipfile
#import zlib
#import json
#import bz2
#import cPickle
#import cStringIO
#import csv
#import ctypes
#import ctypes.util
#import datetime
#import dateutil.parser
#import dateutil.relativedelta
#import decimal
#import difflib
#import doctest
#import email
#import encodings.idna
#import encodings.utf_8
#import encodings.utf_16
#import encodings.utf_16_be
#import encodings.utf_16_le
#import encodings.utf_32
#import encodings.utf_32_be
#import encodings.utf_32_le
#import encodings.utf_7
#import encodings.utf_8
#import encodings.utf_8_sig
#import encodings.utf_16
#import encodings.utf_16_be
#import encodings.utf_16_le
#import encodings.utf_32
#import encodings.utf_32_be
#import encodings.utf_32_le
#import encodings.utf_7
#import encodings.utf_8
#import encodings.utf_8_sig
#import encodings.unicode_escape
#import encodings.raw_unicode_escape
#import encodings.latin_1
#import encodings.iso8859_1
#import encodings.iso8859_2
#import encodings.iso8859_3
#import encodings.iso8859_4
#import encodings.iso8859_5
#import encodings.iso8859_6
#import encodings.iso8859_7
#import encodings.iso8859_8
#import encodings.iso8859_9
#import encodings.iso8859_10
#import encodings.iso8859_11
#import encodings.iso8859_13
#import encodings.iso8859_14
#import encodings.iso8859_15
#import encodings.iso8859_16
#import encodings.big5
#import encodings.big5hkscs
#import encodings.cp037
#import encodings.cp424
#import encodings.cp437
#import encodings.cp500
#import encodings.cp737
#import encodings.cp775
#import encodings.cp850
#import encodings.cp852
#import encodings.cp855
#import encodings.cp856
#import encodings.cp857
#import encodings.cp860
#import encodings.cp861
#import encodings.cp862
#import encodings.cp863
#import encodings.cp864
#import encodings.cp865
#import encodings.cp866
#import encodings.cp869
#import encodings.cp874
#import encodings.cp875
#import encodings.cp932
#import encodings.cp949
#import encodings.cp950
#import encodings.euc_jis_2004
#import encodings.euc_jisx0213
#import encodings.euc_jp
#import encodings.euc_kr
#import encodings.gb18030
#import encodings.gb2312
#import encodings.gbk
#import encodings.hp_roman8
#import encodings.hz
#import encodings.idna
#import encodings.iso2022_jp
#import encodings.iso2022_jp_1
#import encodings.iso2022_jp_2
#import encodings.iso2022_jp_2004
#import encodings.iso2022_jp_3
#import encodings.iso2022_jp_ext
#import encodings.iso2022_kr
#import encodings.latin_1
#import encodings.mac_centeuro
#import encodings.mac_croatian
#import encodings.mac_cyrillic
#import encodings.mac_farsi
#import encodings.mac_greek
#import encodings.mac_iceland
#import encodings.mac_latin2
#import encodings.mac_roman
#import encodings.mac_romanian
#import encodings.mac_turkish
#import encodings.ptcp154
#import encodings.punycode
#import encodings.raw_unicode_escape
#import encodings.rot_13
#import encodings.shift_jis
#import encodings.shift_jis_2004
#import","#!/usr/bin/python
# -*- coding: utf-8 -*-

#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
#import math
#import operator
#import itertools
#import collections
#import copy
#import heapq

#import time
#import datetime
#import dateutil.parser
#import dateutil.relativedelta

#import re
#import json
#import base64
#import binascii
#import csv
#import codecs
#import chardet
#import cStringIO
#import struct
#import subprocess
#import multiprocessing
#import threading
#import Queue
#import collections
#import ctypes
#import ctypes.util
#import py_compile
#import zlib
#import pydoc
#import pickle
#import pprint
#import pdb
#import pstats
#import random
#import repr
#import shutil
#import struct
#import subprocess
#import sys
#import tempfile
#import textwrap
#import time
#import traceback
#import types
#import unicodedata
#import urllib
#import urllib2
#import urlparse
#import uuid
#import warnings
#import weakref
#import xmltodict
#import zipfile
#import zlib
#import json
#import bz2
#import cPickle
#import cStringIO
#import csv
#import ctypes
#import ctypes.util
#import datetime
#import dateutil.parser
#import dateutil.relativedelta
#import decimal
#import difflib
#import doctest
#import email
#import encodings.idna
#import encodings.utf_8
#import encodings.utf_16
#import encodings.utf_16_be
#import encodings.utf_16_le
#import encodings.utf_32
#import encodings.utf_32_be
#import encodings.utf_32_le
#import encodings.utf_7
#import encodings.utf_8
#import encodings.utf_8_sig
#import encodings.utf_16
#import encodings.utf_16_be
#import encodings.utf_16_le
#import encodings.utf_32
#import encodings.utf_32_be
#import encodings.utf_32_le
#import encodings.utf_7
#import encodings.utf_8
#import encodings.utf_8_sig
#import encodings.unicode_escape
#import encodings.raw_unicode_escape
#import encodings.latin_1
#import encodings.iso8859_1
#import encodings.iso8859_2
#import encodings.iso8859_3
#import encodings.iso8859_4
#import encodings.iso8859_5
#import encodings.iso8859_6
#import encodings.iso8859_7
#import encodings.iso8859_8
#import encodings.iso8859_9
#import encodings.iso8859_10
#import encodings.iso8859_11
#import encodings.iso8859_13
#import encodings.iso8859_14
#import encodings.iso8859_15
#import encodings.iso8859_16
#import encodings.big5
#import encodings.big5hkscs
#import encodings.cp037
#import encodings.cp424
#import encodings.cp437
#import encodings.cp500
#import encodings.cp737
#import encodings.cp775
#import encodings.cp850
#import encodings.cp852
#import encodings.cp855
#import encodings.cp856
#import encodings.cp857
#import encodings.cp860
#import encodings.cp861
#import encodings.cp862
#import encodings.cp863
#import encodings.cp864
#import encodings.cp865
#import encodings.cp866
#import encodings.cp869
#import encodings.cp874
#import encodings.cp875
#import encodings.cp932
#import encodings.cp949
#import encodings.cp950
#import encodings.euc_jis_2004
#import encodings.euc_jisx0213
#import encodings.euc_jp
#import encodings.euc_kr
#import encodings.gb18030
#import encodings.gb2312
#import encodings.gbk
#import encodings.hp_roman8
#import encodings.hz
#import encodings.idna
#import encodings.iso2022_jp
#import encodings.iso2022_jp_1
#import encodings.iso2022_jp_2
#import encodings.iso2022_jp_2004
#import encodings.iso2022_jp_3
#import encodings.iso2022_jp_ext
#import encodings.iso2022_kr
#import encodings.latin_1
#import encodings.mac_centeuro
#import encodings.mac_croatian
#import encodings.mac_cyrillic
#import encodings.mac_farsi
#import encodings.mac_greek
#import encodings.mac_iceland
#import encodings.mac_latin2
#import encodings.mac_roman
#import encodings.mac_romanian
#import encodings.mac_turkish
#import encodings.ptcp154
#import encodings.punycode
#import encodings.raw_unicode_escape
#import encodings.rot_13
#import encodings.shift_jis
#import encodings.shift_jis_2004
#import"
CodeGen,codenet,C++,Python,s575600334.py,"def binPrint(x, bits):
    for i in range(bits-1, -1, -1):
        print(x&(1<<i) and 1 or 0)
    print()

def main():
    a, b = map(int, input().split())
    binPrint(a&b, 32)
    binPrint(a|b, 32)
    binPrint(a^b, 32)

main()","def binPrint(x, bits):
    for i in range(bits-1, -1, -1):
        print(x&(1<<i) and 1 or 0)
    print()

def main():
    a, b = map(int, input().split())
    binPrint(a&b, 32)
    binPrint(a|b, 32)
    binPrint(a^b, 32)

main()"
CodeGen,codenet,C++,Python,s343804973.py,"def f(n,m):
    if n==0:
        return 1
    if m==0:
        return 1
    if n==1:
        return 1
    if m==1:
        return 1
    if n==2:
        return 1
    if m==2:
        return 1
    if n==3:
        return 1
    if m==3:
        return 1
    if n==4:
        return 1
    if m==4:
        return 1
    if n==5:
        return 1
    if m==5:
        return 1
    if n==6:
        return 1
    if m==6:
        return 1
    if n==7:
        return 1
    if m==7:
        return 1
    if n==8:
        return 1
    if m==8:
        return 1
    if n==9:
        return 1
    if m==9:
        return 1
    if n==10:
        return 1
    if m==10:
        return 1
    if n==11:
        return 1
    if m==11:
        return 1
    if n==12:
        return 1
    if m==12:
        return 1
    if n==13:
        return 1
    if m==13:
        return 1
    if n==14:
        return 1
    if m==14:
        return 1
    if n==15:
        return 1
    if m==15:
        return 1
    if n==16:
        return 1
    if m==16:
        return 1
    if n==17:
        return 1
    if m==17:
        return 1
    if n==18:
        return 1
    if m==18:
        return 1
    if n==19:
        return 1
    if m==19:
        return 1
    if n==20:
        return 1
    if m==20:
        return 1
    if n==21:
        return 1
    if m==21:
        return 1
    if n==22:
        return 1
    if m==22:
        return 1
    if n==23:
        return 1
    if m==23:
        return 1
    if n==24:
        return 1
    if m==24:
        return 1
    if n==25:
        return 1
    if m==25:
        return 1
    if n==26:
        return 1
    if m==26:
        return 1
    if n==27:
        return 1
    if m==27:
        return 1
    if n==28:
        return 1
    if m==28:
        return 1
    if n==29:
        return 1
    if m==29:
        return 1
    if n==30:
        return 1
    if m==30:
        return 1
    if n==31:
        return 1
    if m==31:
        return 1
    if n==32:
        return 1
    if m==32:
        return 1
    if n==33:
        return 1
    if m==33:
        return 1
    if n==34:
        return 1
    if m==34:
        return 1
    if n==35:
        return 1
    if m==35:
        return 1
    if n==36:
        return 1
    if m==36:
        return 1
    if n==37:
        return 1
    if m==37:
        return 1
    if n==38:
        return 1
    if m==38:
        return 1
    if n==39:
        return 1
    if m==39:
        return 1
    if n==40:
        return 1
    if m==40:
        return 1
    if n==41:
        return 1
    if m==41:
        return 1
    if n==42:
        return 1
    if m==42:
        return 1
    if n==43:
        return 1
    if m==43:
        return 1
    if n==44:
        return 1
    if m==44:
        return 1
    if n==45:
        return 1
    if m==45:
        return 1
    if n==46:
        return 1
    if m==46:
        return 1
    if n==47:
        return 1
    if m==47:
        return 1
    if n==48:
        return 1
    if m==48:
        return 1
    if n==49:
        return 1
    if m==49:
        return 1
    if n==50:
        return 1
    if m==50:
        return 1
    if n==51:
        return 1
    if m==51:
        return 1
    if n==52:
        return 1
    if m==52:
        return 1
    if n==53:
        return 1
    if m==53:
        return 1
    if n==54:
        return 1
    if m==54:
        return 1
    if n==55:
        return 1
    if m==55:
        return 1
    if n==56:
        return 1
    if m==56:
        return 1
    if n==57:
        return 1
    if m==57:
        return 1
    if n==58:
        return 1
    if m==58:
        return 1
    if n==59:
        return 1
    if m==59:
        return 1
    if n==60:
        return 1
    if m==60:
        return 1
    if n==61:
        return 1
    if m==61:
        return 1
    if n==62:
        return 1
    if m==62:
        return 1
    if n==63:
        return 1
    if m==63:
        return 1
    if n==64:
        return 1
    if m==64:
        return 1
    if n==65:
        return 1
    if m==65:
        return 1
    if n==66:
        return 1
    if m==66:
        return 1
    if n==67:
        return 1
    if m==67:
        return 1
    if n==68:
        return 1
    if m==68:
        return 1
    if n==69:
        return 1
    if m==69:
        return 1
    if n==70:
        return 1
    if m==70:
        return 1
    if n==71:
        return 1
    if m==71:
        return 1
    if n==72:
        return 1
    if m==72:
        return 1
    if n==73:
        return 1
    if m==73:
        return 1
    if n==74:
        return 1
    if m==74:
        return","def f(n,m):
    if n==0:
        return 1
    if m==0:
        return 1
    if n==1:
        return 1
    if m==1:
        return 1
    if n==2:
        return 1
    if m==2:
        return 1
    if n==3:
        return 1
    if m==3:
        return 1
    if n==4:
        return 1
    if m==4:
        return 1
    if n==5:
        return 1
    if m==5:
        return 1
    if n==6:
        return 1
    if m==6:
        return 1
    if n==7:
        return 1
    if m==7:
        return 1
    if n==8:
        return 1
    if m==8:
        return 1
    if n==9:
        return 1
    if m==9:
        return 1
    if n==10:
        return 1
    if m==10:
        return 1
    if n==11:
        return 1
    if m==11:
        return 1
    if n==12:
        return 1
    if m==12:
        return 1
    if n==13:
        return 1
    if m==13:
        return 1
    if n==14:
        return 1
    if m==14:
        return 1
    if n==15:
        return 1
    if m==15:
        return 1
    if n==16:
        return 1
    if m==16:
        return 1
    if n==17:
        return 1
    if m==17:
        return 1
    if n==18:
        return 1
    if m==18:
        return 1
    if n==19:
        return 1
    if m==19:
        return 1
    if n==20:
        return 1
    if m==20:
        return 1
    if n==21:
        return 1
    if m==21:
        return 1
    if n==22:
        return 1
    if m==22:
        return 1
    if n==23:
        return 1
    if m==23:
        return 1
    if n==24:
        return 1
    if m==24:
        return 1
    if n==25:
        return 1
    if m==25:
        return 1
    if n==26:
        return 1
    if m==26:
        return 1
    if n==27:
        return 1
    if m==27:
        return 1
    if n==28:
        return 1
    if m==28:
        return 1
    if n==29:
        return 1
    if m==29:
        return 1
    if n==30:
        return 1
    if m==30:
        return 1
    if n==31:
        return 1
    if m==31:
        return 1
    if n==32:
        return 1
    if m==32:
        return 1
    if n==33:
        return 1
    if m==33:
        return 1
    if n==34:
        return 1
    if m==34:
        return 1
    if n==35:
        return 1
    if m==35:
        return 1
    if n==36:
        return 1
    if m==36:
        return 1
    if n==37:
        return 1
    if m==37:
        return 1
    if n==38:
        return 1
    if m==38:
        return 1
    if n==39:
        return 1
    if m==39:
        return 1
    if n==40:
        return 1
    if m==40:
        return 1
    if n==41:
        return 1
    if m==41:
        return 1
    if n==42:
        return 1
    if m==42:
        return 1
    if n==43:
        return 1
    if m==43:
        return 1
    if n==44:
        return 1
    if m==44:
        return 1
    if n==45:
        return 1
    if m==45:
        return 1
    if n==46:
        return 1
    if m==46:
        return 1
    if n==47:
        return 1
    if m==47:
        return 1
    if n==48:
        return 1
    if m==48:
        return 1
    if n==49:
        return 1
    if m==49:
        return 1
    if n==50:
        return 1
    if m==50:
        return 1
    if n==51:
        return 1
    if m==51:
        return 1
    if n==52:
        return 1
    if m==52:
        return 1
    if n==53:
        return 1
    if m==53:
        return 1
    if n==54:
        return 1
    if m==54:
        return 1
    if n==55:
        return 1
    if m==55:
        return 1
    if n==56:
        return 1
    if m==56:
        return 1
    if n==57:
        return 1
    if m==57:
        return 1
    if n==58:
        return 1
    if m==58:
        return 1
    if n==59:
        return 1
    if m==59:
        return 1
    if n==60:
        return 1
    if m==60:
        return 1
    if n==61:
        return 1
    if m==61:
        return 1
    if n==62:
        return 1
    if m==62:
        return 1
    if n==63:
        return 1
    if m==63:
        return 1
    if n==64:
        return 1
    if m==64:
        return 1
    if n==65:
        return 1
    if m==65:
        return 1
    if n==66:
        return 1
    if m==66:
        return 1
    if n==67:
        return 1
    if m==67:
        return 1
    if n==68:
        return 1
    if m==68:
        return 1
    if n==69:
        return 1
    if m==69:
        return 1
    if n==70:
        return 1
    if m==70:
        return 1
    if n==71:
        return 1
    if m==71:
        return 1
    if n==72:
        return 1
    if m==72:
        return 1
    if n==73:
        return 1
    if m==73:
        return 1
    if n==74:
        return 1
    if m==74:
        return"
CodeGen,codenet,C++,Python,s285212630.py,"#!/usr/bin/python
# -*- coding: utf-8 -*-

# import csv
# import sys
# import os
# import math
# import itertools
# import operator
# import collections
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
#","#!/usr/bin/python
# -*- coding: utf-8 -*-

# import csv
# import sys
# import os
# import math
# import itertools
# import operator
# import collections
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
# import os
# import copy
# import random
# import string
# import re
# import pprint
# import subprocess
# import time
# import datetime
# import threading
# import Queue
# import collections
# import sys
#"
CodeGen,codenet,C++,Python,s992338735.py,"def main():
    while True:
        N = int(input())
        if N == 0:
            break
        M = -1
        m = 1001
        addup = 0
        for i in range(N):
            S = int(input())
            addup += S
            if S > M:
                M = S
            if S < m:
                m = S
        print((addup - M - m)/(N - 2))

if __name__ == '__main__':
    main()","def main():
    while True:
        N = int(input())
        if N == 0:
            break
        M = -1
        m = 1001
        addup = 0
        for i in range(N):
            S = int(input())
            addup += S
            if S > M:
                M = S
            if S < m:
                m = S
        print((addup - M - m)/(N - 2))

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s134430594.py,"#!/usr/bin/python
import sys
import math

def get_max(a, b):
    if a > b:
        return a
    else:
        return b

def get_min(a, b):
    if a < b:
        return a
    else:
        return b

def get_sum(a, b):
    return a + b

def get_diff(a, b):
    return a - b

def get_prod(a, b):
    return a * b

def get_quot(a, b):
    return a / b

def get_pow(a, b):
    return a ** b

def get_mod(a, b):
    return a % b

def get_and(a, b):
    return a & b

def get_or(a, b):
    return a | b

def get_xor(a, b):
    return a ^ b

def get_lshift(a, b):
    return a << b

def get_rshift(a, b):
    return a >> b

def get_invert(a):
    return ~a

def get_not(a):
    return not a

def get_neg(a):
    return -a

def get_pos(a):
    return +a

def get_abs(a):
    return abs(a)

def get_in(a, b):
    return a in b

def get_not_in(a, b):
    return a not in b

def get_is(a, b):
    return a is b

def get_is_not(a, b):
    return a is not b

def get_lt(a, b):
    return a < b

def get_gt(a, b):
    return a > b

def get_le(a, b):
    return a <= b

def get_ge(a, b):
    return a >= b

def get_eq(a, b):
    return a == b

def get_ne(a, b):
    return a!= b

def get_add(a, b):
    return a + b

def get_sub(a, b):
    return a - b

def get_mul(a, b):
    return a * b

def get_div(a, b):
    return a / b

def get_pow(a, b):
    return a ** b

def get_mod(a, b):
    return a % b

def get_and(a, b):
    return a & b

def get_or(a, b):
    return a | b

def get_xor(a, b):
    return a ^ b

def get_lshift(a, b):
    return a << b

def get_rshift(a, b):
    return a >> b

def get_invert(a):
    return ~a

def get_not(a):
    return not a

def get_neg(a):
    return -a

def get_pos(a):
    return +a

def get_abs(a):
    return abs(a)

def get_in(a, b):
    return a in b

def get_not_in(a, b):
    return a not in b

def get_is(a, b):
    return a is b

def get_is_not(a, b):
    return a is not b

def get_lt(a, b):
    return a < b

def get_gt(a, b):
    return a > b

def get_le(a, b):
    return a <= b

def get_ge(a, b):
    return a >= b

def get_eq(a, b):
    return a == b

def get_ne(a, b):
    return a!= b

def get_add(a, b):
    return a + b

def get_sub(a, b):
    return a - b

def get_mul(a, b):
    return a * b

def get_div(a, b):
    return a / b

def get_pow(a, b):
    return a ** b

def get_mod(a, b):
    return a % b

def get_and(a, b):
    return a & b

def get_or(a, b):
    return a | b

def get_xor(a, b):
    return a ^ b","#!/usr/bin/python
import sys
import math

def get_max(a, b):
    if a > b:
        return a
    else:
        return b

def get_min(a, b):
    if a < b:
        return a
    else:
        return b

def get_sum(a, b):
    return a + b

def get_diff(a, b):
    return a - b

def get_prod(a, b):
    return a * b

def get_quot(a, b):
    return a / b

def get_pow(a, b):
    return a ** b

def get_mod(a, b):
    return a % b

def get_and(a, b):
    return a & b

def get_or(a, b):
    return a | b

def get_xor(a, b):
    return a ^ b

def get_lshift(a, b):
    return a << b

def get_rshift(a, b):
    return a >> b

def get_invert(a):
    return ~a

def get_not(a):
    return not a

def get_neg(a):
    return -a

def get_pos(a):
    return +a

def get_abs(a):
    return abs(a)

def get_in(a, b):
    return a in b

def get_not_in(a, b):
    return a not in b

def get_is(a, b):
    return a is b

def get_is_not(a, b):
    return a is not b

def get_lt(a, b):
    return a < b

def get_gt(a, b):
    return a > b

def get_le(a, b):
    return a <= b

def get_ge(a, b):
    return a >= b

def get_eq(a, b):
    return a == b

def get_ne(a, b):
    return a!= b

def get_add(a, b):
    return a + b

def get_sub(a, b):
    return a - b

def get_mul(a, b):
    return a * b

def get_div(a, b):
    return a / b

def get_pow(a, b):
    return a ** b

def get_mod(a, b):
    return a % b

def get_and(a, b):
    return a & b

def get_or(a, b):
    return a | b

def get_xor(a, b):
    return a ^ b

def get_lshift(a, b):
    return a << b

def get_rshift(a, b):
    return a >> b

def get_invert(a):
    return ~a

def get_not(a):
    return not a

def get_neg(a):
    return -a

def get_pos(a):
    return +a

def get_abs(a):
    return abs(a)

def get_in(a, b):
    return a in b

def get_not_in(a, b):
    return a not in b

def get_is(a, b):
    return a is b

def get_is_not(a, b):
    return a is not b

def get_lt(a, b):
    return a < b

def get_gt(a, b):
    return a > b

def get_le(a, b):
    return a <= b

def get_ge(a, b):
    return a >= b

def get_eq(a, b):
    return a == b

def get_ne(a, b):
    return a!= b

def get_add(a, b):
    return a + b

def get_sub(a, b):
    return a - b

def get_mul(a, b):
    return a * b

def get_div(a, b):
    return a / b

def get_pow(a, b):
    return a ** b

def get_mod(a, b):
    return a % b

def get_and(a, b):
    return a & b

def get_or(a, b):
    return a | b

def get_xor(a, b):
    return a ^ b"
CodeGen,codenet,C++,Java,s780006912.java,"public class s780006912 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] array = new int[n];
        for (int i = 0; i < n; i++) {
            array[i] = in.nextInt();
        }
        int sum = 0;
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                sum += array[i] * array[j];
            }
        }
        System.out.println(sum);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] array = new int[n];
        for (int i = 0; i < n; i++) {
            array[i] = in.nextInt();
        }
        int sum = 0;
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                sum += array[i] * array[j];
            }
        }
        System.out.println(sum);
    }
}"
CodeGen,codenet,C++,Java,s240627521.java,"public class s240627521 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        Arrays.sort(a);
        int max = Integer.MIN_VALUE;
        for (int i = 1; i < n; i++) {
            if (max > Math.abs(a[0] - 2 * a[i])) {
                max = Math.abs(a[0] - 2 * a[i]);
                System.out.println(a[0] + "" "" + a[i]);
            }
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        Arrays.sort(a);
        int max = Integer.MIN_VALUE;
        for (int i = 1; i < n; i++) {
            if (max > Math.abs(a[0] - 2 * a[i])) {
                max = Math.abs(a[0] - 2 * a[i]);
                System.out.println(a[0] + "" "" + a[i]);
            }
        }
    }
}"
CodeGen,codenet,C++,Java,s789380051.java,"public class s789380051 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int a = in.nextInt();
        int b = in.nextInt();
        int ans = 1;
        ans = (ans - comb_s(n, a)) % 1000000007;
        while (ans < 0) {
            ans += 1000000007;
        }
        ans = (ans - comb_s(n, b)) % 1000000007;
        while (ans < 0) {
            ans += 1000000007;
        }
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int a = in.nextInt();
        int b = in.nextInt();
        int ans = 1;
        ans = (ans - comb_s(n, a)) % 1000000007;
        while (ans < 0) {
            ans += 1000000007;
        }
        ans = (ans - comb_s(n, b)) % 1000000007;
        while (ans < 0) {
            ans += 1000000007;
        }
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s539273394.java,"public class s539273394 {
    public static void main(String[] args) {
        int N;
        int prime_counter = 0;
        int prime_list[1001];
        int prime_num[1001];
        int prime_or_not[1001];
        int kekka[2];
        sosuubunnpu();
        cin >> N;
        int innsuu[11];
        int A[N+1][11];
        for (int i = 0; i <= 1000; ++i)
        {
            prime_num[i] = 0;
        }
        for (int i = 2; i <= 1000; ++i)
        {
            prime_or_not[i] = 0;
        }
        for (int i = 2; i <= 1000; ++i)
        {
            for (int j = 2; j <= 1000/i; ++j)
            {
                if(prime_or_not[i]==0){
                    prime_or_not[i*j] = 1;
                }
            }
        }
        for (int i = 2; i <= 1000; ++i)
        {
            if(prime_or_not[i]==0){
                prime_list[prime_counter] = i;
                prime_counter+=1;
            }
        }
        for (int i = 2; i <= N; ++i)
        {
            kekka[1] = i;
            for (int j = 0; j < prime_counter; ++j)
            {
                innsuubunnkai(kekka[1],prime_list[j]);
                prime_num[j]+=kekka[0];
            }
        }
        for (int i = 0; i < prime_counter; ++i){
            result = (result*(prime_num[i]+1))%1000000007;
        }
        cout << result << endl;
    }
}","public class Main {
    public static void main(String[] args) {
        int N;
        int prime_counter = 0;
        int prime_list[1001];
        int prime_num[1001];
        int prime_or_not[1001];
        int kekka[2];
        sosuubunnpu();
        cin >> N;
        int innsuu[11];
        int A[N+1][11];
        for (int i = 0; i <= 1000; ++i)
        {
            prime_num[i] = 0;
        }
        for (int i = 2; i <= 1000; ++i)
        {
            prime_or_not[i] = 0;
        }
        for (int i = 2; i <= 1000; ++i)
        {
            for (int j = 2; j <= 1000/i; ++j)
            {
                if(prime_or_not[i]==0){
                    prime_or_not[i*j] = 1;
                }
            }
        }
        for (int i = 2; i <= 1000; ++i)
        {
            if(prime_or_not[i]==0){
                prime_list[prime_counter] = i;
                prime_counter+=1;
            }
        }
        for (int i = 2; i <= N; ++i)
        {
            kekka[1] = i;
            for (int j = 0; j < prime_counter; ++j)
            {
                innsuubunnkai(kekka[1],prime_list[j]);
                prime_num[j]+=kekka[0];
            }
        }
        for (int i = 0; i < prime_counter; ++i){
            result = (result*(prime_num[i]+1))%1000000007;
        }
        cout << result << endl;
    }
}"
CodeGen,codenet,C++,Java,s121463387.java,"public class s121463387 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        for (int i = 1; i <= n; i++) {
            int x = i;
            String s = Integer.toString(x);
            if (x % 3 == 0 || x % 10 == 3) {
                System.out.print("" "" + i);
                continue;
            }
            int k = s.length();
            while (k > 0) {
                k = k - 1;
                int j = Math.pow(10, k);
                if ((x / j) % 10 == 3) {
                    System.out.print("" "" + i);
                    break;
                }
            }
        }
        System.out.println();
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        for (int i = 1; i <= n; i++) {
            int x = i;
            String s = Integer.toString(x);
            if (x % 3 == 0 || x % 10 == 3) {
                System.out.print("" "" + i);
                continue;
            }
            int k = s.length();
            while (k > 0) {
                k = k - 1;
                int j = Math.pow(10, k);
                if ((x / j) % 10 == 3) {
                    System.out.print("" "" + i);
                    break;
                }
            }
        }
        System.out.println();
    }
}"
CodeGen,codenet,C++,Java,s976558978.java,ize exceeded.,ize exceeded.
CodeGen,codenet,C++,Java,s194793609.java,"public class s194793609 {
    public int findMin(int[] nums) {
        int n = nums.length;
        int min = nums[0];
        for (int i = 1; i < n; i++) {
            if (nums[i] < min) {
                min = nums[i];
            }
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans += nums[i];
            if (min > nums[i]) {
                min = nums[i];
            }
        }
        int num_negative = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] < 0) {
                num_negative++;
            }
        }
        if (num_negative % 2) {
            ans -= min * 2;
        }
        return ans;
    }
}","public class Main {
    public int findMin(int[] nums) {
        int n = nums.length;
        int min = nums[0];
        for (int i = 1; i < n; i++) {
            if (nums[i] < min) {
                min = nums[i];
            }
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans += nums[i];
            if (min > nums[i]) {
                min = nums[i];
            }
        }
        int num_negative = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] < 0) {
                num_negative++;
            }
        }
        if (num_negative % 2) {
            ans -= min * 2;
        }
        return ans;
    }
}"
CodeGen,codenet,C++,Java,s683946919.java,"public class s683946919 {
  public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
    int n = in.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = in.nextInt();
    }
    int[] arr2 = new int[n];
    for (int i = 0; i < n; i++) {
      arr2[i] = in.nextInt();
    }
    int[] arr3 = new int[n];
    for (int i = 0; i < n; i++) {
      arr3[i] = in.nextInt();
    }
    int[] arr4 = new int[n];
    for (int i = 0; i < n; i++) {
      arr4[i] = in.nextInt();
    }
    int[] arr5 = new int[n];
    for (int i = 0; i < n; i++) {
      arr5[i] = in.nextInt();
    }
    int[] arr6 = new int[n];
    for (int i = 0; i < n; i++) {
      arr6[i] = in.nextInt();
    }
    int[] arr7 = new int[n];
    for (int i = 0; i < n; i++) {
      arr7[i] = in.nextInt();
    }
    int[] arr8 = new int[n];
    for (int i = 0; i < n; i++) {
      arr8[i] = in.nextInt();
    }
    int[] arr9 = new int[n];
    for (int i = 0; i < n; i++) {
      arr9[i] = in.nextInt();
    }
    int[] arr10 = new int[n];
    for (int i = 0; i < n; i++) {
      arr10[i] = in.nextInt();
    }
    int[] arr11 = new int[n];
    for (int i = 0; i < n; i++) {
      arr11[i] = in.nextInt();
    }
    int[] arr12 = new int[n];
    for (int i = 0; i < n; i++) {
      arr12[i] = in.nextInt();
    }
    int[] arr13 = new int[n];
    for (int i = 0; i < n; i++) {
      arr13[i] = in.nextInt();
    }
    int[] arr14 = new int[n];
    for (int i = 0; i < n; i++) {
      arr14[i] = in.nextInt();
    }
    int[] arr15 = new int[n];
    for (int i = 0; i < n; i++) {
      arr15[i] = in.nextInt();
    }
    int[] arr16 = new int[n];
    for (int i = 0; i < n; i++) {
      arr16[i] = in.nextInt();
    }
    int[] arr17 = new int[n];
    for (int i = 0; i < n; i++) {
      arr17[i] = in.nextInt();
    }
    int[] arr18 = new int[n];
    for (int i = 0; i < n; i++) {
      arr18[i] = in.nextInt();
    }
    int[] arr19 = new int[n];
    for (int i = 0; i < n; i++) {
      arr19[i] = in.nextInt();
    }
    int[] arr20 = new int[n];
    for (int i = 0; i < n; i++) {
      arr20[i] = in.nextInt();
    }
    int[] arr21 = new int[n];
    for (int i = 0; i < n; i++) {
      arr21[i] = in.nextInt();
    }
    int[] arr22 = new int[n];
    for (int i = 0; i < n; i++) {
      arr22[i] = in.nextInt();
    }
    int[] arr23 = new int[n];
    for (int i = 0; i < n; i++) {
      arr23[i] = in.nextInt();
    }
    int[] arr24 = new int[n];
    for (int i = 0; i < n; i++) {
      arr24[i] = in.nextInt();
    }
    int[] arr25 = new int[n];
    for (int i = 0; i < n; i++) {
      arr25[i] = in.nextInt();
    }
    int[] arr26 = new int[n];
    for (int i = 0; i < n; i++) {
      arr26[i] = in.nextInt();
    }
    int[] arr27 = new int[n];
    for (int i = 0; i < n; i++) {
      arr27","public class Main {
  public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
    int n = in.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = in.nextInt();
    }
    int[] arr2 = new int[n];
    for (int i = 0; i < n; i++) {
      arr2[i] = in.nextInt();
    }
    int[] arr3 = new int[n];
    for (int i = 0; i < n; i++) {
      arr3[i] = in.nextInt();
    }
    int[] arr4 = new int[n];
    for (int i = 0; i < n; i++) {
      arr4[i] = in.nextInt();
    }
    int[] arr5 = new int[n];
    for (int i = 0; i < n; i++) {
      arr5[i] = in.nextInt();
    }
    int[] arr6 = new int[n];
    for (int i = 0; i < n; i++) {
      arr6[i] = in.nextInt();
    }
    int[] arr7 = new int[n];
    for (int i = 0; i < n; i++) {
      arr7[i] = in.nextInt();
    }
    int[] arr8 = new int[n];
    for (int i = 0; i < n; i++) {
      arr8[i] = in.nextInt();
    }
    int[] arr9 = new int[n];
    for (int i = 0; i < n; i++) {
      arr9[i] = in.nextInt();
    }
    int[] arr10 = new int[n];
    for (int i = 0; i < n; i++) {
      arr10[i] = in.nextInt();
    }
    int[] arr11 = new int[n];
    for (int i = 0; i < n; i++) {
      arr11[i] = in.nextInt();
    }
    int[] arr12 = new int[n];
    for (int i = 0; i < n; i++) {
      arr12[i] = in.nextInt();
    }
    int[] arr13 = new int[n];
    for (int i = 0; i < n; i++) {
      arr13[i] = in.nextInt();
    }
    int[] arr14 = new int[n];
    for (int i = 0; i < n; i++) {
      arr14[i] = in.nextInt();
    }
    int[] arr15 = new int[n];
    for (int i = 0; i < n; i++) {
      arr15[i] = in.nextInt();
    }
    int[] arr16 = new int[n];
    for (int i = 0; i < n; i++) {
      arr16[i] = in.nextInt();
    }
    int[] arr17 = new int[n];
    for (int i = 0; i < n; i++) {
      arr17[i] = in.nextInt();
    }
    int[] arr18 = new int[n];
    for (int i = 0; i < n; i++) {
      arr18[i] = in.nextInt();
    }
    int[] arr19 = new int[n];
    for (int i = 0; i < n; i++) {
      arr19[i] = in.nextInt();
    }
    int[] arr20 = new int[n];
    for (int i = 0; i < n; i++) {
      arr20[i] = in.nextInt();
    }
    int[] arr21 = new int[n];
    for (int i = 0; i < n; i++) {
      arr21[i] = in.nextInt();
    }
    int[] arr22 = new int[n];
    for (int i = 0; i < n; i++) {
      arr22[i] = in.nextInt();
    }
    int[] arr23 = new int[n];
    for (int i = 0; i < n; i++) {
      arr23[i] = in.nextInt();
    }
    int[] arr24 = new int[n];
    for (int i = 0; i < n; i++) {
      arr24[i] = in.nextInt();
    }
    int[] arr25 = new int[n];
    for (int i = 0; i < n; i++) {
      arr25[i] = in.nextInt();
    }
    int[] arr26 = new int[n];
    for (int i = 0; i < n; i++) {
      arr26[i] = in.nextInt();
    }
    int[] arr27 = new int[n];
    for (int i = 0; i < n; i++) {
      arr27"
CodeGen,codenet,C++,Java,s698205968.java,"public class s698205968 {
    public static void main(String[] args) {
        int m, f, r;
        while (true) {
            if (scanf(""%d %d %d"", &m, &f, &r) == -1) break;
            if (m == -1 || f == -1) System.out.print(""F"");
            else if (m + f >= 80) System.out.print(""A"");
            else if (m + f >= 65) System.out.print(""B"");
            else if (m + f >= 50 || r >= 50) System.out.print(""C"");
            else if (m + f >= 30) System.out.print(""D"");
            else System.out.print(""F"");
            System.out.println();
        }
    }
}","public class Main {
    public static void main(String[] args) {
        int m, f, r;
        while (true) {
            if (scanf(""%d %d %d"", &m, &f, &r) == -1) break;
            if (m == -1 || f == -1) System.out.print(""F"");
            else if (m + f >= 80) System.out.print(""A"");
            else if (m + f >= 65) System.out.print(""B"");
            else if (m + f >= 50 || r >= 50) System.out.print(""C"");
            else if (m + f >= 30) System.out.print(""D"");
            else System.out.print(""F"");
            System.out.println();
        }
    }
}"
CodeGen,codenet,C++,Java,s123678341.java,"public class s123678341 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int X = in.nextInt();
        int Y = in.nextInt();
        int Z = in.nextInt();
        int K = in.nextInt();
        long[] A = new long[X];
        long[] B = new long[Y];
        long[] C = new long[Z];
        for (int i = 0; i < X; i++) {
            A[i] = in.nextLong();
        }
        for (int i = 0; i < Y; i++) {
            B[i] = in.nextLong();
        }
        for (int i = 0; i < Z; i++) {
            C[i] = in.nextLong();
        }
        Arrays.sort(A);
        Arrays.sort(B);
        Arrays.sort(C);
        long[] AB = new long[X * Y];
        for (int i = 0; i < X; i++) {
            for (int j = 0; j < Y; j++) {
                AB[i * Y + j] = A[i] + B[j];
            }
        }
        Arrays.sort(AB);
        long[] ABC = new long[min(K, AB.length)];
        for (int i = 0; i < min(K, AB.length); i++) {
            for (int j = 0; j < Z; j++) {
                ABC[i] += AB[i * Z + j] + C[j];
            }
        }
        Arrays.sort(ABC);
        for (int i = 0; i < K; i++) {
            System.out.println(ABC[i]);
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int X = in.nextInt();
        int Y = in.nextInt();
        int Z = in.nextInt();
        int K = in.nextInt();
        long[] A = new long[X];
        long[] B = new long[Y];
        long[] C = new long[Z];
        for (int i = 0; i < X; i++) {
            A[i] = in.nextLong();
        }
        for (int i = 0; i < Y; i++) {
            B[i] = in.nextLong();
        }
        for (int i = 0; i < Z; i++) {
            C[i] = in.nextLong();
        }
        Arrays.sort(A);
        Arrays.sort(B);
        Arrays.sort(C);
        long[] AB = new long[X * Y];
        for (int i = 0; i < X; i++) {
            for (int j = 0; j < Y; j++) {
                AB[i * Y + j] = A[i] + B[j];
            }
        }
        Arrays.sort(AB);
        long[] ABC = new long[min(K, AB.length)];
        for (int i = 0; i < min(K, AB.length); i++) {
            for (int j = 0; j < Z; j++) {
                ABC[i] += AB[i * Z + j] + C[j];
            }
        }
        Arrays.sort(ABC);
        for (int i = 0; i < K; i++) {
            System.out.println(ABC[i]);
        }
    }
}"
CodeGen,codenet,C++,Java,s929864256.java,"// C++

#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <string>
#include <queue>
#include <list>
#include <cmath>
#include <stack>
#include <iomanip>

using namespace std;
typedef long long ll;
using Pll = pair<ll,ll>;

const ll INF = 1LL<<60;
const ll MOD = 1000000007;

//cout << fixed << setprecision(10);

int main() {
    ll a,b;
    cin >> a >> b;
    cout << max(a+b,max(a-b,a*b)) << endl;

    return 0;
}","// C++

#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <string>
#include <queue>
#include <list>
#include <cmath>
#include <stack>
#include <iomanip>

using namespace std;
typedef long long ll;
using Pll = pair<ll,ll>;

const ll INF = 1LL<<60;
const ll MOD = 1000000007;

//cout << fixed << setprecision(10);

int main() {
    ll a,b;
    cin >> a >> b;
    cout << max(a+b,max(a-b,a*b)) << endl;

    return 0;
}"
CodeGen,codenet,C++,Java,s035123609.java,"public class s035123609 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int rr = in.nextInt();
        int cc = in.nextInt();
        int k = in.nextInt();
        int[][] mat = new int[rr][cc];
        for (int i = 0; i < rr; i++) {
            for (int j = 0; j < cc; j++) {
                mat[i][j] = in.nextInt();
            }
        }
        long[][][] dp = new long[rr][cc][4];
        long[][] dpl = new long[cc];
        for (int y = 0; y < rr; y++) {
            for (int x = 0; x < cc; x++) {
                for (int c = 0; c < 4; c++) {
                    int v = mat[y][x];
                    long q;
                    if (c == 0 || v == 0) {
                        q = (x == 0)? dpl[x] : Math.max(dpl[x], dp[y][x - 1][c]);
                    } else {
                        q = (x == 0)? dpl[x] + v : Math.max(dpl[x] + v, Math.max(dp[y][x - 1][c], dp[y][x - 1][c - 1] + v));
                    }
                    dp[y][x][c] = q;
                }
            }
            for (int x = 0; x < cc; x++) {
                dpl[x] = Math.max(Math.max(dp[y][x][0], dp[y][x][1]), Math.max(dp[y][x][2], dp[y][x][3]));
            }
        }
        System.out.println(dpl[cc - 1]);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int rr = in.nextInt();
        int cc = in.nextInt();
        int k = in.nextInt();
        int[][] mat = new int[rr][cc];
        for (int i = 0; i < rr; i++) {
            for (int j = 0; j < cc; j++) {
                mat[i][j] = in.nextInt();
            }
        }
        long[][][] dp = new long[rr][cc][4];
        long[][] dpl = new long[cc];
        for (int y = 0; y < rr; y++) {
            for (int x = 0; x < cc; x++) {
                for (int c = 0; c < 4; c++) {
                    int v = mat[y][x];
                    long q;
                    if (c == 0 || v == 0) {
                        q = (x == 0)? dpl[x] : Math.max(dpl[x], dp[y][x - 1][c]);
                    } else {
                        q = (x == 0)? dpl[x] + v : Math.max(dpl[x] + v, Math.max(dp[y][x - 1][c], dp[y][x - 1][c - 1] + v));
                    }
                    dp[y][x][c] = q;
                }
            }
            for (int x = 0; x < cc; x++) {
                dpl[x] = Math.max(Math.max(dp[y][x][0], dp[y][x][1]), Math.max(dp[y][x][2], dp[y][x][3]));
            }
        }
        System.out.println(dpl[cc - 1]);
    }
}"
CodeGen,codenet,C++,Java,s003531724.java,"#include <iostream>
#include <cstdio>
#include <map>
#include <set>
#include <queue>
#include <vector>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#define rep(i,a,b) for(int i = a; i <= b; i++)
#define dep(i,a,b) for(int i = a; i >= b; i--) 
#define Rep(i,a) for(int i = 0; i < a; i++)
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)
#define ab(x) ((x) < 0? -(x) : (x))
using namespace std;
typedef long long LL;
typedef map<int, int>::iterator mit;
typedef set<int>::iterator sit;
typedef pair<int, int> pii;
#define x first
#define y second
const int N = 1e5 + 10;

struct edge{ int to, pre, c; }e[N << 1]; int u[N], l = 0;
void ins(int a, int b, int c) { e[++l] = (edge){b, u[a], c}, u[a] = l; }
#define v e[i].to
#define ec e[i].c
#define reg(i,a) for(int i = u[a]; i; i = e[i].pre)

int n, m;
bool vis[N], ok;
LL cnt[3]; int d[N];
int T;
void dfs(int x, int l) {
	vis[x] = true; cnt[l]++; d[x] = l;
	reg(i,x) {
		T++;
		if (!vis[v]) dfs(v, (l + ec) % 3);
		else if ((l + ec) % 3!= d[v]) ok = false;
	}
}

int main() {
	scanf(""%d%d"",&n,&m);
	rep(i,1,m) {
		int a, b; scanf(""%d%d"",&a,&b);
		ins(a, b, 1), ins(b, a, 2);
	}
	LL ans = 0;
	rep(i,1,n) if (!vis[i]) {
		T = 0;
		rep(j,0,2) cnt[j] = 0; ok = true;
		dfs(i, 0); LL s = cnt[0] + cnt[1] + cnt[2];
		if (!ok) ans += s * s;
		else {
			if (cnt[0] && cnt[1] && cnt[2]) 
				ans += cnt[0] * cnt[1] + cnt[1] * cnt[2] + cnt[2] * cnt[0];
			else 
				ans += T / 2;
		}
	}
	cout <<ans<<endl;
}","#include <iostream>
#include <cstdio>
#include <map>
#include <set>
#include <queue>
#include <vector>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#define rep(i,a,b) for(int i = a; i <= b; i++)
#define dep(i,a,b) for(int i = a; i >= b; i--) 
#define Rep(i,a) for(int i = 0; i < a; i++)
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)
#define ab(x) ((x) < 0? -(x) : (x))
using namespace std;
typedef long long LL;
typedef map<int, int>::iterator mit;
typedef set<int>::iterator sit;
typedef pair<int, int> pii;
#define x first
#define y second
const int N = 1e5 + 10;

struct edge{ int to, pre, c; }e[N << 1]; int u[N], l = 0;
void ins(int a, int b, int c) { e[++l] = (edge){b, u[a], c}, u[a] = l; }
#define v e[i].to
#define ec e[i].c
#define reg(i,a) for(int i = u[a]; i; i = e[i].pre)

int n, m;
bool vis[N], ok;
LL cnt[3]; int d[N];
int T;
void dfs(int x, int l) {
	vis[x] = true; cnt[l]++; d[x] = l;
	reg(i,x) {
		T++;
		if (!vis[v]) dfs(v, (l + ec) % 3);
		else if ((l + ec) % 3!= d[v]) ok = false;
	}
}

int main() {
	scanf(""%d%d"",&n,&m);
	rep(i,1,m) {
		int a, b; scanf(""%d%d"",&a,&b);
		ins(a, b, 1), ins(b, a, 2);
	}
	LL ans = 0;
	rep(i,1,n) if (!vis[i]) {
		T = 0;
		rep(j,0,2) cnt[j] = 0; ok = true;
		dfs(i, 0); LL s = cnt[0] + cnt[1] + cnt[2];
		if (!ok) ans += s * s;
		else {
			if (cnt[0] && cnt[1] && cnt[2]) 
				ans += cnt[0] * cnt[1] + cnt[1] * cnt[2] + cnt[2] * cnt[0];
			else 
				ans += T / 2;
		}
	}
	cout <<ans<<endl;
}"
CodeGen,codenet,C++,Java,s353737529.java,"public class s353737529 {
    public static void main(String[] args) {
        int n;
        StringBuilder sb = new StringBuilder();
        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        while (n!= 0) {
            if (n % 2 == 0) {
                sb.append('0');
            } else {
                sb.append('1');
            }
            n -= abs(n % 2);
            n /= -2;
        }
        reverse(sb.toString().toCharArray());
        System.out.println(sb.toString());
    }
}","public class Main {
    public static void main(String[] args) {
        int n;
        StringBuilder sb = new StringBuilder();
        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        while (n!= 0) {
            if (n % 2 == 0) {
                sb.append('0');
            } else {
                sb.append('1');
            }
            n -= abs(n % 2);
            n /= -2;
        }
        reverse(sb.toString().toCharArray());
        System.out.println(sb.toString());
    }
}"
CodeGen,codenet,C++,Java,s526060174.java,"public class s526060174 {
    public int findMaxLength(int[] nums) {
        int n = nums.length;
        int[] x = new int[31];
        for (int i = 0; i < n; i++) {
            int k = nums[i];
            x[k]++;
        }
        int ans = 0;
        for (int i = 1; i <= m; i++) {
            if (x[i] == n) {
                ans++;
            }
        }
        return ans;
    }
}","public class Main {
    public int findMaxLength(int[] nums) {
        int n = nums.length;
        int[] x = new int[31];
        for (int i = 0; i < n; i++) {
            int k = nums[i];
            x[k]++;
        }
        int ans = 0;
        for (int i = 1; i <= m; i++) {
            if (x[i] == n) {
                ans++;
            }
        }
        return ans;
    }
}"
CodeGen,codenet,C++,Java,s208784214.java,"public class s208784214 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int A = in.nextInt();
        System.out.println(N % 500 <= A? ""Yes"" : ""No"");
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int A = in.nextInt();
        System.out.println(N % 500 <= A? ""Yes"" : ""No"");
    }
}"
CodeGen,codenet,C++,Java,s299205600.java,"public class s299205600 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int result;
        if (a > b) {
            result = 2 * a - 1;
        } else if (a == b) {
            result = 2 * a;
        } else {
            result = 2 * b - 1;
        }
        System.out.println(result);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int result;
        if (a > b) {
            result = 2 * a - 1;
        } else if (a == b) {
            result = 2 * a;
        } else {
            result = 2 * b - 1;
        }
        System.out.println(result);
    }
}"
CodeGen,codenet,C++,Java,s968402497.java,"#pragma GCC optimize(2)
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <queue> //priority_queue<int, vector<int>, greater<int> > q;
#include <map>
#include <set> //multiset set<int,greater<int>>大到小
#include <vector>// vector<int>().swap(v);清空释放内存
#include <stack>
#include <cmath> // auto &Name : STLName  Name.
#include <utility>
#include <sstream>
#include <string>//__builtin_popcount(ans);//获取某个数二进制位1的个数
#define mod 1000000007
#define mod9 998244353
#define ld long double
#define ull unsigned long long
#define db double
#define ll long long
const db eps=1e-7;
//const db pi=acos(-1);
const int INF = 0x3f3f3f3f;
const ll inf=0x3f3f3f3f3f3f3f3f;
#define rep(i,be,en) for (ll i=be;i<=en;i++)
#define per(i,be,en) for (int i=en;i>=be;i--)
using namespace std;
const int N=1e5+7;

int tc,n,m,fl=0;

int main(){
    scanf(""%d%d%d"",&tc,&n,&m);
    if(n>m) swap(n,m);
    for(int i=1;i<=m;i++){
        if(i*tc>=n&&i*tc<=m){
            printf(""OK\n"");
            fl=1;
            break;
        }
    }
    if(fl==0) puts(""NG"");
    return 0;
}","#pragma GCC optimize(2)
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <queue> //priority_queue<int, vector<int>, greater<int> > q;
#include <map>
#include <set> //multiset set<int,greater<int>>大到小
#include <vector>// vector<int>().swap(v);清空释放内存
#include <stack>
#include <cmath> // auto &Name : STLName  Name.
#include <utility>
#include <sstream>
#include <string>//__builtin_popcount(ans);//获取某个数二进制位1的个数
#define mod 1000000007
#define mod9 998244353
#define ld long double
#define ull unsigned long long
#define db double
#define ll long long
const db eps=1e-7;
//const db pi=acos(-1);
const int INF = 0x3f3f3f3f;
const ll inf=0x3f3f3f3f3f3f3f3f;
#define rep(i,be,en) for (ll i=be;i<=en;i++)
#define per(i,be,en) for (int i=en;i>=be;i--)
using namespace std;
const int N=1e5+7;

int tc,n,m,fl=0;

int main(){
    scanf(""%d%d%d"",&tc,&n,&m);
    if(n>m) swap(n,m);
    for(int i=1;i<=m;i++){
        if(i*tc>=n&&i*tc<=m){
            printf(""OK\n"");
            fl=1;
            break;
        }
    }
    if(fl==0) puts(""NG"");
    return 0;
}"
CodeGen,codenet,C++,Java,s700281300.java,"public class s700281300 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        in.nextLine();
        String[] strs = new String[n];
        for (int i = 0; i < n; i++) {
            strs[i] = in.nextLine();
        }
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = strs[i].length();
        }
        Arrays.sort(arr);
        int max = arr[arr.length - 1];
        int max2 = arr[arr.length - 2];
        int max3 = arr[arr.length - 3];
        int max4 = arr[arr.length - 4];
        int max5 = arr[arr.length - 5];
        int max6 = arr[arr.length - 6];
        int max7 = arr[arr.length - 7];
        int max8 = arr[arr.length - 8];
        int max9 = arr[arr.length - 9];
        int max10 = arr[arr.length - 10];
        int max11 = arr[arr.length - 11];
        int max12 = arr[arr.length - 12];
        int max13 = arr[arr.length - 13];
        int max14 = arr[arr.length - 14];
        int max15 = arr[arr.length - 15];
        int max16 = arr[arr.length - 16];
        int max17 = arr[arr.length - 17];
        int max18 = arr[arr.length - 18];
        int max19 = arr[arr.length - 19];
        int max20 = arr[arr.length - 20];
        int max21 = arr[arr.length - 21];
        int max22 = arr[arr.length - 22];
        int max23 = arr[arr.length - 23];
        int max24 = arr[arr.length - 24];
        int max25 = arr[arr.length - 25];
        int max26 = arr[arr.length - 26];
        int max27 = arr[arr.length - 27];
        int max28 = arr[arr.length - 28];
        int max29 = arr[arr.length - 29];
        int max30 = arr[arr.length - 30];
        int max31 = arr[arr.length - 31];
        int max32 = arr[arr.length - 32];
        int max33 = arr[arr.length - 33];
        int max34 = arr[arr.length - 34];
        int max35 = arr[arr.length - 35];
        int max36 = arr[arr.length - 36];
        int max37 = arr[arr.length - 37];
        int max38 = arr[arr.length - 38];
        int max39 = arr[arr.length - 39];
        int max40 = arr[arr.length - 40];
        int max41 = arr[arr.length - 41];
        int max42 = arr[arr.length - 42];
        int max43 = arr[arr.length - 43];
        int max44 = arr[arr.length - 44];
        int max45 = arr[arr.length - 45];
        int max46 = arr[arr.length - 46];
        int max47 = arr[arr.length - 47];
        int max48 = arr[arr.length - 48];
        int max49 = arr[arr.length - 49];
        int max50 = arr[arr.length - 50];
        int max51 = arr[arr.length - 51];
        int max52 = arr[arr.length - 52];
        int max53 = arr[arr.length - 53];
        int max54 = arr[arr.length - 54];
        int max55 = arr[arr.length - 55];
        int max56 = arr[arr.length - 56];
        int max57 = arr[arr.length - 57];
        int max58 = arr[arr.length - 58];
        int max59 = arr[arr.length - 59];
        int max60 = arr[arr.length - 60];
        int max61 = arr[arr.length - 61];
        int max62 = arr[arr.length - 62];
        int max63 = arr[arr.length - 63];
        int max64 = arr[arr.length - 64];
        int max65 = arr[arr.length - 65];
        int max66 = arr[arr.length - 66];
        int max67 = arr[arr.length - 67];
        int max68 = arr[arr.length - 68];
        int max69 = arr[arr.length - 69];
        int max70 = arr[arr.length - 70];
        int max71 = arr[arr.length - 71];
        int max72 = arr[arr.length - 72];
        int max73 = arr[arr.length - 73];
        int max74 = arr[arr.length - 74];
        int max75 = arr[arr.length - 75];
        int max76 = arr[arr.length - 76];
        int max77 = arr[arr.length - 77];
        int max78 = arr[arr.length - 78];
        int max79 = arr[arr.length - 79];
        int max80 = arr[arr.length - 80];
        int max81 = arr[arr.length - 81];
        int max82 = arr[arr.length - 82];
        int max83 = arr[arr.length - 83];
        int max84 = arr[arr.length - 84];
        int max85 = arr[arr.length - 85];
        int max86 = arr[arr.length - 86];
        int max87 = arr[arr.length - 87];
        int max88 = arr[arr.length - 88];
        int max89 = arr[arr.length - 89];
        int max90 = arr[arr.length - 90];
        int max91 = arr[arr.length - 91];
        int max92 = arr[arr.length - 92];
        int max93 = arr[arr.length - 93];
        int max94 = arr[arr.length - 94];
        int max95 = arr[arr.length - 95];
        int max96 = arr[arr.length - 96];
        int max97 = arr[arr.length - 97];
        int max98 = arr[arr.length - 98];
        int max99 = arr[arr.length - 99];
        int max100 = arr[arr.length - 100];
        int max101 = arr[arr.length - 101];
        int max102 = arr[arr.length - 102];
        int max103 = arr[arr.length - 103];
        int max104 = arr[arr.length - 104];
        int max105 = arr[arr.length - 105];","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        in.nextLine();
        String[] strs = new String[n];
        for (int i = 0; i < n; i++) {
            strs[i] = in.nextLine();
        }
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = strs[i].length();
        }
        Arrays.sort(arr);
        int max = arr[arr.length - 1];
        int max2 = arr[arr.length - 2];
        int max3 = arr[arr.length - 3];
        int max4 = arr[arr.length - 4];
        int max5 = arr[arr.length - 5];
        int max6 = arr[arr.length - 6];
        int max7 = arr[arr.length - 7];
        int max8 = arr[arr.length - 8];
        int max9 = arr[arr.length - 9];
        int max10 = arr[arr.length - 10];
        int max11 = arr[arr.length - 11];
        int max12 = arr[arr.length - 12];
        int max13 = arr[arr.length - 13];
        int max14 = arr[arr.length - 14];
        int max15 = arr[arr.length - 15];
        int max16 = arr[arr.length - 16];
        int max17 = arr[arr.length - 17];
        int max18 = arr[arr.length - 18];
        int max19 = arr[arr.length - 19];
        int max20 = arr[arr.length - 20];
        int max21 = arr[arr.length - 21];
        int max22 = arr[arr.length - 22];
        int max23 = arr[arr.length - 23];
        int max24 = arr[arr.length - 24];
        int max25 = arr[arr.length - 25];
        int max26 = arr[arr.length - 26];
        int max27 = arr[arr.length - 27];
        int max28 = arr[arr.length - 28];
        int max29 = arr[arr.length - 29];
        int max30 = arr[arr.length - 30];
        int max31 = arr[arr.length - 31];
        int max32 = arr[arr.length - 32];
        int max33 = arr[arr.length - 33];
        int max34 = arr[arr.length - 34];
        int max35 = arr[arr.length - 35];
        int max36 = arr[arr.length - 36];
        int max37 = arr[arr.length - 37];
        int max38 = arr[arr.length - 38];
        int max39 = arr[arr.length - 39];
        int max40 = arr[arr.length - 40];
        int max41 = arr[arr.length - 41];
        int max42 = arr[arr.length - 42];
        int max43 = arr[arr.length - 43];
        int max44 = arr[arr.length - 44];
        int max45 = arr[arr.length - 45];
        int max46 = arr[arr.length - 46];
        int max47 = arr[arr.length - 47];
        int max48 = arr[arr.length - 48];
        int max49 = arr[arr.length - 49];
        int max50 = arr[arr.length - 50];
        int max51 = arr[arr.length - 51];
        int max52 = arr[arr.length - 52];
        int max53 = arr[arr.length - 53];
        int max54 = arr[arr.length - 54];
        int max55 = arr[arr.length - 55];
        int max56 = arr[arr.length - 56];
        int max57 = arr[arr.length - 57];
        int max58 = arr[arr.length - 58];
        int max59 = arr[arr.length - 59];
        int max60 = arr[arr.length - 60];
        int max61 = arr[arr.length - 61];
        int max62 = arr[arr.length - 62];
        int max63 = arr[arr.length - 63];
        int max64 = arr[arr.length - 64];
        int max65 = arr[arr.length - 65];
        int max66 = arr[arr.length - 66];
        int max67 = arr[arr.length - 67];
        int max68 = arr[arr.length - 68];
        int max69 = arr[arr.length - 69];
        int max70 = arr[arr.length - 70];
        int max71 = arr[arr.length - 71];
        int max72 = arr[arr.length - 72];
        int max73 = arr[arr.length - 73];
        int max74 = arr[arr.length - 74];
        int max75 = arr[arr.length - 75];
        int max76 = arr[arr.length - 76];
        int max77 = arr[arr.length - 77];
        int max78 = arr[arr.length - 78];
        int max79 = arr[arr.length - 79];
        int max80 = arr[arr.length - 80];
        int max81 = arr[arr.length - 81];
        int max82 = arr[arr.length - 82];
        int max83 = arr[arr.length - 83];
        int max84 = arr[arr.length - 84];
        int max85 = arr[arr.length - 85];
        int max86 = arr[arr.length - 86];
        int max87 = arr[arr.length - 87];
        int max88 = arr[arr.length - 88];
        int max89 = arr[arr.length - 89];
        int max90 = arr[arr.length - 90];
        int max91 = arr[arr.length - 91];
        int max92 = arr[arr.length - 92];
        int max93 = arr[arr.length - 93];
        int max94 = arr[arr.length - 94];
        int max95 = arr[arr.length - 95];
        int max96 = arr[arr.length - 96];
        int max97 = arr[arr.length - 97];
        int max98 = arr[arr.length - 98];
        int max99 = arr[arr.length - 99];
        int max100 = arr[arr.length - 100];
        int max101 = arr[arr.length - 101];
        int max102 = arr[arr.length - 102];
        int max103 = arr[arr.length - 103];
        int max104 = arr[arr.length - 104];
        int max105 = arr[arr.length - 105];"
CodeGen,codenet,C++,Java,s509329039.java,"#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <fstream>
#include <sstream>
#include <set>
#include <map>
#include <vector>
#include <list>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
#include <stack>
#include <queue>
#include <bitset>     //UWAGA - w czasie kompilacji musi byc znany rozmiar wektora - nie mozna go zmienic
#include <cassert>
#include <iomanip>        //do setprecision
#include <ctime>
#include <complex>
using namespace std;

#define FOR(i,b,e) for(int i=(b);i<(e);++i)
#define FORQ(i,b,e) for(int i=(b);i<=(e);++i)
#define FORD(i,b,e) for(int i=(b)-1;i>=(e);--i)
#define REP(x, n) for(int x = 0; x < (n); ++x)

#define ST first
#define ND second
#define PB push_back
#define PF push_front
#define MP make_pair
#define LL long long
#define ULL unsigned LL
#define LD long double
#define pii pair<int,int>
#define pll pair<LL,LL>
#define vi vector<int>
#define vl vector<LL>
#define vii vector<vi>
#define vll vector<vl>

const double pi = 3.14159265358979323846264;
const int mod=1000000007;

int main(){
    int n,m;
    cin>>n>>m;
    vi s(m),c(m);
    FOR(i,0,m){
        cin>>s[i]>>c[i];
        s[i]--;
    }
    FOR(i,0,1000){
        string st=to_string(i);
        if (st.length()!=n){
            continue;
        }
        //cerr<<st<<endl;
        int f=1;
        FOR(j,0,m){
            if(st[s[j]]==c[j]+'0'){

            }else{
                f=0;
            }
        }
        if(f){
            cout<<i<<endl;
            return 0;
        }

    }
    cout<<-1<<endl;

}","#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <fstream>
#include <sstream>
#include <set>
#include <map>
#include <vector>
#include <list>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
#include <stack>
#include <queue>
#include <bitset>     //UWAGA - w czasie kompilacji musi byc znany rozmiar wektora - nie mozna go zmienic
#include <cassert>
#include <iomanip>        //do setprecision
#include <ctime>
#include <complex>
using namespace std;

#define FOR(i,b,e) for(int i=(b);i<(e);++i)
#define FORQ(i,b,e) for(int i=(b);i<=(e);++i)
#define FORD(i,b,e) for(int i=(b)-1;i>=(e);--i)
#define REP(x, n) for(int x = 0; x < (n); ++x)

#define ST first
#define ND second
#define PB push_back
#define PF push_front
#define MP make_pair
#define LL long long
#define ULL unsigned LL
#define LD long double
#define pii pair<int,int>
#define pll pair<LL,LL>
#define vi vector<int>
#define vl vector<LL>
#define vii vector<vi>
#define vll vector<vl>

const double pi = 3.14159265358979323846264;
const int mod=1000000007;

int main(){
    int n,m;
    cin>>n>>m;
    vi s(m),c(m);
    FOR(i,0,m){
        cin>>s[i]>>c[i];
        s[i]--;
    }
    FOR(i,0,1000){
        string st=to_string(i);
        if (st.length()!=n){
            continue;
        }
        //cerr<<st<<endl;
        int f=1;
        FOR(j,0,m){
            if(st[s[j]]==c[j]+'0'){

            }else{
                f=0;
            }
        }
        if(f){
            cout<<i<<endl;
            return 0;
        }

    }
    cout<<-1<<endl;

}"
CodeGen,codenet,C++,Java,s472228164.java,"public class s472228164 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        int y = in.nextInt();
        String result = check(x, y);
        System.out.println(result);
    }

    public static String check(int x, int y) {
        if (y % 2 == 0) {
            int t = (int) (0.5 * y) - x;
            if (t >= 0 && (x - t) >= 0) {
                return ""Yes"";
            }
        }
        return ""No"";
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        int y = in.nextInt();
        String result = check(x, y);
        System.out.println(result);
    }

    public static String check(int x, int y) {
        if (y % 2 == 0) {
            int t = (int) (0.5 * y) - x;
            if (t >= 0 && (x - t) >= 0) {
                return ""Yes"";
            }
        }
        return ""No"";
    }
}"
CodeGen,codenet,C++,Java,s609497560.java,"public class s609497560 {
	public static void main(String[] args) {
		int a;
		Scanner in = new Scanner(System.in);
		a = in.nextInt();
		System.out.println((a + (a * a) + (a * a * a)));
	}
}","public class Main {
	public static void main(String[] args) {
		int a;
		Scanner in = new Scanner(System.in);
		a = in.nextInt();
		System.out.println((a + (a * a) + (a * a * a)));
	}
}"
CodeGen,codenet,C++,Java,s134430594.java,"public class s134430594 {
    int l;
    int r;
    int val;

    Ban() {}

    Ban(int l_, int r_, int val_) {
        l = l_;
        r = r_;
        val = val_;
    }
}

class Sp {
    static final int LIM = 20; 
    static final int N = 2e5 + 7;

    int mn[LIM][N];
    int pw[N];

    void init(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            mn[0][i] = a[i]; 
        }
        for (int i = 0; i + 1 < LIM; i++) {
            for (int j = 0; j + (1 << (i + 1)) <= n; j++) {
                mn[i + 1][j] = max(mn[i][j], mn[i][j + (1 << i)]);
            }
        }
        pw[1] = 0;
        for (int i = 2; i < N; i++) {
            pw[i] = pw[i / 2] + 1;
        }
    } 

    int get(int l, int r) {
        r++;
        int p = pw[r - l];
        return min(mn[p][l], mn[p][r - (1 << p)]);
    }
}

class Solution {
    public:
        int minSubArrayLen(int s, vector<int>& nums) {
            if (nums.size() == 0) return 0;
            int n = nums.size();
            int ans = 0;
            int l = 0;
            int r = 0;
            while (r < n) {
                if (nums[r] > s) {
                    r++;
                    continue;
                }
                if (nums[r] < s) {
                    l = r + 1;
                    r++;
                    continue;
                }
                if (nums[r] == s) {
                    r++;
                    ans++;
                    continue;
                }
                if (nums[r] > s) {
                    l = r + 1;
                    r++;
                    continue;
                }
                if (nums[r] < s) {
                    r++;
                    continue;
                }
            }
            return ans;
        }
};

int main() {
    Solution s;
    vector<int> a = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    cout << s.minSubArrayLen(5, a) << endl;
    return 0;
}","public class Main {
    int l;
    int r;
    int val;

    Ban() {}

    Ban(int l_, int r_, int val_) {
        l = l_;
        r = r_;
        val = val_;
    }
}

class Sp {
    static final int LIM = 20; 
    static final int N = 2e5 + 7;

    int mn[LIM][N];
    int pw[N];

    void init(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            mn[0][i] = a[i]; 
        }
        for (int i = 0; i + 1 < LIM; i++) {
            for (int j = 0; j + (1 << (i + 1)) <= n; j++) {
                mn[i + 1][j] = max(mn[i][j], mn[i][j + (1 << i)]);
            }
        }
        pw[1] = 0;
        for (int i = 2; i < N; i++) {
            pw[i] = pw[i / 2] + 1;
        }
    } 

    int get(int l, int r) {
        r++;
        int p = pw[r - l];
        return min(mn[p][l], mn[p][r - (1 << p)]);
    }
}

class Solution {
    public:
        int minSubArrayLen(int s, vector<int>& nums) {
            if (nums.size() == 0) return 0;
            int n = nums.size();
            int ans = 0;
            int l = 0;
            int r = 0;
            while (r < n) {
                if (nums[r] > s) {
                    r++;
                    continue;
                }
                if (nums[r] < s) {
                    l = r + 1;
                    r++;
                    continue;
                }
                if (nums[r] == s) {
                    r++;
                    ans++;
                    continue;
                }
                if (nums[r] > s) {
                    l = r + 1;
                    r++;
                    continue;
                }
                if (nums[r] < s) {
                    r++;
                    continue;
                }
            }
            return ans;
        }
};

int main() {
    Solution s;
    vector<int> a = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    cout << s.minSubArrayLen(5, a) << endl;
    return 0;
}"
CodeGen,codenet,C++,Java,s661916956.java,"public class s661916956 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a, b, c;
        a = in.nextInt();
        b = in.nextInt();
        c = in.nextInt();
        if (a > b) {
            int temp = a;
            a = b;
            b = temp;
        }
        if (b > c) {
            int temp = b;
            b = c;
            c = temp;
        }
        if (a > b) {
            int temp = a;
            a = b;
            b = temp;
        }
        System.out.println(a + "" "" + b + "" "" + c);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a, b, c;
        a = in.nextInt();
        b = in.nextInt();
        c = in.nextInt();
        if (a > b) {
            int temp = a;
            a = b;
            b = temp;
        }
        if (b > c) {
            int temp = b;
            b = c;
            c = temp;
        }
        if (a > b) {
            int temp = a;
            a = b;
            b = temp;
        }
        System.out.println(a + "" "" + b + "" "" + c);
    }
}"
CodeGen,codenet,C++,Java,s990022717.java,"public class s990022717 {
    public static void main(String[] args) {
        int n,k,x,y;
        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        k = in.nextInt();
        x = in.nextInt();
        y = in.nextInt();
        int sum=0;
        for(int i=1;i<=n;i++){
            if(i>k)sum+=y;
            else sum+=x;
        }
        System.out.println(sum);
    }
}","public class Main {
    public static void main(String[] args) {
        int n,k,x,y;
        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        k = in.nextInt();
        x = in.nextInt();
        y = in.nextInt();
        int sum=0;
        for(int i=1;i<=n;i++){
            if(i>k)sum+=y;
            else sum+=x;
        }
        System.out.println(sum);
    }
}"
CodeGen,codenet,C++,Java,s791749917.java,"public class s791749917 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int H = in.nextInt();
        int W = in.nextInt();
        int ans = 0;
        if (H == 1 || W == 1) {
            ans = 1;
        } else {
            int m = H * W;
            if (m % 2 == 0) ans = m / 2;
            else ans = m / 2 + 1;
        }
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int H = in.nextInt();
        int W = in.nextInt();
        int ans = 0;
        if (H == 1 || W == 1) {
            ans = 1;
        } else {
            int m = H * W;
            if (m % 2 == 0) ans = m / 2;
            else ans = m / 2 + 1;
        }
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s783753345.java,"public class s783753345 {
    public:
        int calculate(string s) {
            int a, b;
            char S;
            while (true) {
                cin >> a >> S >> b;
                if (S == '+') return a + b;
                if (S == '-') return a - b;
                if (S == '*') return a * b;
                if (S == '/') return a / b;
                if (S == '?') break;
            }
            return 0;
        }
};","public class Main {
    public:
        int calculate(string s) {
            int a, b;
            char S;
            while (true) {
                cin >> a >> S >> b;
                if (S == '+') return a + b;
                if (S == '-') return a - b;
                if (S == '*') return a * b;
                if (S == '/') return a / b;
                if (S == '?') break;
            }
            return 0;
        }
};"
CodeGen,codenet,C++,Java,s391929974.java,"public class s391929974 {
  public static void main(String[] args) {
    int n;
    int sq[10000],fr[5000];
    Vector<Integer> com;
    int tmp;

    while (true) {
      Scanner sc = new Scanner(System.in);
      n = sc.nextInt();
      if (n == 0) {
        break;
      }

      for (int i = 1; i < n; i++) {
        sq[i] = (i * i) % n;
      }
      com = new Vector<Integer>();

      for (int i = 1; i < n; i++) {
        boolean f = true;
        for (int j = 0; j < com.size(); j++) {
          if (com.get(j) == sq[i]) {
            f = false;
            break;
          }
        }
        if (f) {
          com.add(sq[i]);
        }
      }

      for (int i = 0; i < (n - 1) / 2; i++) {
        fr[i] = 0;
      }

      for (int i = 0; i < com.size(); i++) {
        for (int j = 0; j < com.size(); j++) {
          if (i!= j) {
            tmp = com.get(i) - com.get(j);
            if (tmp < 0) {
              tmp += n;
            }
            if (tmp > (n - 1) / 2) {
              tmp = n - tmp;
            }
            fr[tmp]++;
          }
        }
      }

      for (int i = 1; i < (n - 1) / 2; i++) {
        System.out.println(fr[i]);
      }
    }
  }
}","public class Main {
  public static void main(String[] args) {
    int n;
    int sq[10000],fr[5000];
    Vector<Integer> com;
    int tmp;

    while (true) {
      Scanner sc = new Scanner(System.in);
      n = sc.nextInt();
      if (n == 0) {
        break;
      }

      for (int i = 1; i < n; i++) {
        sq[i] = (i * i) % n;
      }
      com = new Vector<Integer>();

      for (int i = 1; i < n; i++) {
        boolean f = true;
        for (int j = 0; j < com.size(); j++) {
          if (com.get(j) == sq[i]) {
            f = false;
            break;
          }
        }
        if (f) {
          com.add(sq[i]);
        }
      }

      for (int i = 0; i < (n - 1) / 2; i++) {
        fr[i] = 0;
      }

      for (int i = 0; i < com.size(); i++) {
        for (int j = 0; j < com.size(); j++) {
          if (i!= j) {
            tmp = com.get(i) - com.get(j);
            if (tmp < 0) {
              tmp += n;
            }
            if (tmp > (n - 1) / 2) {
              tmp = n - tmp;
            }
            fr[tmp]++;
          }
        }
      }

      for (int i = 1; i < (n - 1) / 2; i++) {
        System.out.println(fr[i]);
      }
    }
  }
}"
CodeGen,codenet,C++,Java,s589139355.java,"public class s589139355 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        String taro = in.next();
        String hana = in.next();
        int t = 0, h = 0;
        for (int i = 0; i < a; i++) {
            String taro1 = in.next();
            String hana1 = in.next();
            int lt = taro1.length();
            int lh = hana1.length();
            if (lt > lh) {
                l = lt;
            } else {
                l = lh;
            }
            int tt = 0;
            int hh = 0;
            if (taro1.compareTo(hana1) > 0) {
                t = t + 3;
            } else if (hana1.compareTo(taro1) > 0) {
                h = h + 3;
            } else if (hana1.compareTo(taro1) == 0) {
                h = h + 1;
                t = t + 1;
            }
        }
        System.out.println(t + "" "" + h);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        String taro = in.next();
        String hana = in.next();
        int t = 0, h = 0;
        for (int i = 0; i < a; i++) {
            String taro1 = in.next();
            String hana1 = in.next();
            int lt = taro1.length();
            int lh = hana1.length();
            if (lt > lh) {
                l = lt;
            } else {
                l = lh;
            }
            int tt = 0;
            int hh = 0;
            if (taro1.compareTo(hana1) > 0) {
                t = t + 3;
            } else if (hana1.compareTo(taro1) > 0) {
                h = h + 3;
            } else if (hana1.compareTo(taro1) == 0) {
                h = h + 1;
                t = t + 1;
            }
        }
        System.out.println(t + "" "" + h);
    }
}"
CodeGen,codenet,C++,Java,s571373151.java,"public class s571373151 {
    public int findMinStep(int n, int m) {
        int[] foods = new int[m];
        for (int i = 0; i < n; i++) {
            int k = Integer.parseInt(scanner.nextLine());
            for (int j = 0; j < k; j++) {
                int temp = Integer.parseInt(scanner.nextLine());
                temp--;
                foods[temp]++;
            }
        }
        int ans = 0;
        for (int i = 0; i < m; i++) {
            if (foods[i] == n) {
                ans++;
            }
        }
        return ans;
    }
}","public class Main {
    public int findMinStep(int n, int m) {
        int[] foods = new int[m];
        for (int i = 0; i < n; i++) {
            int k = Integer.parseInt(scanner.nextLine());
            for (int j = 0; j < k; j++) {
                int temp = Integer.parseInt(scanner.nextLine());
                temp--;
                foods[temp]++;
            }
        }
        int ans = 0;
        for (int i = 0; i < m; i++) {
            if (foods[i] == n) {
                ans++;
            }
        }
        return ans;
    }
}"
CodeGen,codenet,C++,Java,s113620820.java,"import java.util.*;
import java.lang.*;
import java.io.*;

public class s113620820 {
	public static void main(String[] args) {
		Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
		int n;
		n = in.nextInt();
		int[] wis = new int[n];
		int[] wsums = new int[n + 1];
		for (int i = 0; i < n; i++) {
			wis[i] = in.nextInt();
			wsums[i + 1] = wsums[i] + wis[i];
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j <= n; j++) dp[i][j] = LINF, ks[i][j] = -1;
			dp[i][i + 1] = 0;
			ks[i][i + 1] = i;
		}
		for (int l = 2; l <= n; l++)
			for (int i = 0, j = l; j <= n; i++, j++) {
				long long mind = LINF;
				long long wsum = wsums[j] - wsums[i];
				int mink = -1;
				for (int k = ks[i][j - 1]; k <= ks[i + 1][j]; k++) {
					long long d = dp[i][k] + dp[k][j] + wsum;
					if (mind > d) mind = d, mink = k;
				}
				dp[i][j] = mind;
				ks[i][j] = mink;
			}
		System.out.println(dp[0][n]);
	}
}","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
		int n;
		n = in.nextInt();
		int[] wis = new int[n];
		int[] wsums = new int[n + 1];
		for (int i = 0; i < n; i++) {
			wis[i] = in.nextInt();
			wsums[i + 1] = wsums[i] + wis[i];
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j <= n; j++) dp[i][j] = LINF, ks[i][j] = -1;
			dp[i][i + 1] = 0;
			ks[i][i + 1] = i;
		}
		for (int l = 2; l <= n; l++)
			for (int i = 0, j = l; j <= n; i++, j++) {
				long long mind = LINF;
				long long wsum = wsums[j] - wsums[i];
				int mink = -1;
				for (int k = ks[i][j - 1]; k <= ks[i + 1][j]; k++) {
					long long d = dp[i][k] + dp[k][j] + wsum;
					if (mind > d) mind = d, mink = k;
				}
				dp[i][j] = mind;
				ks[i][j] = mink;
			}
		System.out.println(dp[0][n]);
	}
}"
CodeGen,codenet,C++,Java,s323743606.java,"public class s323743606 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for (int i = 0; i < n; i++) {
            int w = in.nextInt();
            int p = in.nextInt();
            if (map.containsKey(w)) {
                map.put(w, Math.min(map.get(w), p));
            } else {
                map.put(w, p);
            }
        }
        int result = 0;
        for (int i = 0; i < n; i++) {
            result += map.get(i);
        }
        System.out.println(result);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for (int i = 0; i < n; i++) {
            int w = in.nextInt();
            int p = in.nextInt();
            if (map.containsKey(w)) {
                map.put(w, Math.min(map.get(w), p));
            } else {
                map.put(w, p);
            }
        }
        int result = 0;
        for (int i = 0; i < n; i++) {
            result += map.get(i);
        }
        System.out.println(result);
    }
}"
CodeGen,codenet,C++,Java,s189738089.java,"public class s189738089 {
    public int[] findMinHeightTrees(int n, int[] height) {
        int[] dp = new int[n + 1];
        dp[0] = 0;
        for (int i = 1; i <= n; i++) {
            int min = INF;
            for (int j = 1; j <= i; j++) {
                if (height[j - 1] < min) {
                    min = height[j - 1];
                }
            }
            dp[i] = min;
        }
        return dp;
    }
}","public class Main {
    public int[] findMinHeightTrees(int n, int[] height) {
        int[] dp = new int[n + 1];
        dp[0] = 0;
        for (int i = 1; i <= n; i++) {
            int min = INF;
            for (int j = 1; j <= i; j++) {
                if (height[j - 1] < min) {
                    min = height[j - 1];
                }
            }
            dp[i] = min;
        }
        return dp;
    }
}"
CodeGen,codenet,C++,Java,s448220316.java,"import java.io.*;
    import java.util.*;
    import java.text.*;
    import java.math.*;
    import java.util.regex.*;
    
    public class s448220316 {
    
        public static void main(String[] args) {
            Scanner in = new Scanner(System.in);
            int n = in.nextInt();
            int m = in.nextInt();
            int[] fa = new int[n + 1];
            int[] v = new int[n + 1];
            for (int i = 1; i <= n; i++) {
                fa[i] = i;
            }
            for (int i = 1; i <= m; i++) {
                int l = in.nextInt();
                int r = in.nextInt();
                int vi = in.nextInt();
                int li = get(l);
                int ri = get(r);
                if (li!= ri) {
                    v[ri] = vi - v[r] + v[l];
                    fa[ri] = li;
                } else {
                    if (v[r] - v[l]!= vi) {
                        System.out.println(""No"");
                        return;
                    }
                }
            }
            System.out.println(""Yes"");
        }
    
        public static int get(int x) {
            if (x == fa[x]) return x;
            int f = get(fa[x]);
            v[x] += v[fa[x]];
            return fa[x] = f;
        }
    }","import java.io.*;
    import java.util.*;
    import java.text.*;
    import java.math.*;
    import java.util.regex.*;
    
    public class Main {
    
        public static void main(String[] args) {
            Scanner in = new Scanner(System.in);
            int n = in.nextInt();
            int m = in.nextInt();
            int[] fa = new int[n + 1];
            int[] v = new int[n + 1];
            for (int i = 1; i <= n; i++) {
                fa[i] = i;
            }
            for (int i = 1; i <= m; i++) {
                int l = in.nextInt();
                int r = in.nextInt();
                int vi = in.nextInt();
                int li = get(l);
                int ri = get(r);
                if (li!= ri) {
                    v[ri] = vi - v[r] + v[l];
                    fa[ri] = li;
                } else {
                    if (v[r] - v[l]!= vi) {
                        System.out.println(""No"");
                        return;
                    }
                }
            }
            System.out.println(""Yes"");
        }
    
        public static int get(int x) {
            if (x == fa[x]) return x;
            int f = get(fa[x]);
            v[x] += v[fa[x]];
            return fa[x] = f;
        }
    }"
CodeGen,codenet,C++,Java,s271114101.java,"public class s271114101 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a, b, c;
        a = in.nextInt();
        b = in.nextInt();
        c = in.nextInt();
        if ((a + b == c || b + c == a || a + c == b) && (a + b == c || b + c == a || a + c == b)) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a, b, c;
        a = in.nextInt();
        b = in.nextInt();
        c = in.nextInt();
        if ((a + b == c || b + c == a || a + c == b) && (a + b == c || b + c == a || a + c == b)) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
CodeGen,codenet,C++,Java,s844285682.java,"import java.util.Scanner;

public class s844285682 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int c = in.nextInt();
        int d = in.nextInt();
        int e = in.nextInt();
        int f = in.nextInt();
        int g = in.nextInt();
        int h = in.nextInt();
        int i = in.nextInt();
        int j = in.nextInt();
        int k = in.nextInt();
        int l = in.nextInt();
        int m = in.nextInt();
        int n = in.nextInt();
        int o = in.nextInt();
        int p = in.nextInt();
        int q = in.nextInt();
        int r = in.nextInt();
        int s = in.nextInt();
        int t = in.nextInt();
        int u = in.nextInt();
        int v = in.nextInt();
        int w = in.nextInt();
        int x = in.nextInt();
        int y = in.nextInt();
        int z = in.nextInt();
        int a1 = in.nextInt();
        int b1 = in.nextInt();
        int c1 = in.nextInt();
        int d1 = in.nextInt();
        int e1 = in.nextInt();
        int f1 = in.nextInt();
        int g1 = in.nextInt();
        int h1 = in.nextInt();
        int i1 = in.nextInt();
        int j1 = in.nextInt();
        int k1 = in.nextInt();
        int l1 = in.nextInt();
        int m1 = in.nextInt();
        int n1 = in.nextInt();
        int o1 = in.nextInt();
        int p1 = in.nextInt();
        int q1 = in.nextInt();
        int r1 = in.nextInt();
        int s1 = in.nextInt();
        int t1 = in.nextInt();
        int u1 = in.nextInt();
        int v1 = in.nextInt();
        int w1 = in.nextInt();
        int x1 = in.nextInt();
        int y1 = in.nextInt();
        int z1 = in.nextInt();
        int a2 = in.nextInt();
        int b2 = in.nextInt();
        int c2 = in.nextInt();
        int d2 = in.nextInt();
        int e2 = in.nextInt();
        int f2 = in.nextInt();
        int g2 = in.nextInt();
        int h2 = in.nextInt();
        int i2 = in.nextInt();
        int j2 = in.nextInt();
        int k2 = in.nextInt();
        int l2 = in.nextInt();
        int m2 = in.nextInt();
        int n2 = in.nextInt();
        int o2 = in.nextInt();
        int p2 = in.nextInt();
        int q2 = in.nextInt();
        int r2 = in.nextInt();
        int s2 = in.nextInt();
        int t2 = in.nextInt();
        int u2 = in.nextInt();
        int v2 = in.nextInt();
        int w2 = in.nextInt();
        int x2 = in.nextInt();
        int y2 = in.nextInt();
        int z2 = in.nextInt();
        int a3 = in.nextInt();
        int b3 = in.nextInt();
        int c3 = in.nextInt();
        int d3 = in.nextInt();
        int e3 = in.nextInt();
        int f3 = in.nextInt();
        int g3 = in.nextInt();
        int h3 = in.nextInt();
        int i3 = in.nextInt();
        int j3 = in.nextInt();
        int k3 = in.nextInt();
        int l3 = in.nextInt();
        int m3 = in.nextInt();
        int n3 = in.nextInt();
        int o3 = in.nextInt();
        int p3 = in.nextInt();
        int q3 = in.nextInt();
        int r3 = in.nextInt();
        int s3 = in.nextInt();
        int t3 = in.nextInt();
        int u3 = in.nextInt();
        int v3 = in.nextInt();
        int w3 = in.nextInt();
        int x3 = in.nextInt();
        int y3 = in.nextInt();
        int z3 = in.nextInt();
        int a4 = in.nextInt();
        int b4 = in.nextInt();
        int c4 = in.nextInt();
        int d4 = in.nextInt();
        int e4 = in.nextInt();
        int f4 = in.nextInt();
        int g4 = in.nextInt();
        int h4 = in.nextInt();
        int i4 = in.nextInt();
        int j4 = in.nextInt();
        int k4 = in.nextInt();
        int l4 = in.nextInt();
        int m4 = in.nextInt();
        int n4 = in.nextInt();
        int o4 = in.nextInt();
        int p4 = in.nextInt();
        int q4 = in.nextInt();
        int r4 = in.nextInt();
        int s4 = in.nextInt();
        int t4 = in.nextInt();
        int u4 = in.nextInt();
        int v4 = in.nextInt();
        int w4 = in.nextInt();
        int x4 = in.nextInt();
        int y4 = in.nextInt();
        int z4 = in.nextInt();
        int a5 = in.nextInt();
        int b5 = in.nextInt();
        int c5 = in.nextInt();
        int d5 = in.nextInt();
        int e5 = in.nextInt();
        int f5 = in.nextInt();
        int g5 = in.nextInt();
        int h5 = in.nextInt();
        int i5 = in.nextInt();
        int j5 = in.nextInt();
        int k5 = in.nextInt();
        int l5 = in.nextInt();
        int m5 = in.nextInt();
        int n5 = in.nextInt();
        int o5 = in.nextInt();
        int p5 = in.nextInt();
        int q5 = in.nextInt();
        int r5 = in.nextInt();
        int s5 = in.nextInt();
        int t5 = in.nextInt();
        int u5 = in.nextInt();
        int v5 = in.nextInt();
        int w5 = in.nextInt();
        int x5 = in.nextInt();
        int y5 = in.nextInt();
        int z5 = in.nextInt();
        int a6 = in.nextInt();
        int b6 = in.nextInt();
        int c6 = in.nextInt();
        int d6 = in.nextInt();
        int e6 = in.nextInt();
        int f6 = in.nextInt();
        int g6 = in.nextInt();
        int h6 = in.nextInt();
        int i6 = in.nextInt();
        int j6 = in.nextInt();
        int k6 = in.nextInt();
        int l6 = in.nextInt();
        int m6 = in.nextInt();
        int n6 = in.nextInt();
        int o6 = in.nextInt();
        int p6 = in.nextInt();
        int q6 = in.nextInt();
        int r6 = in.nextInt();
        int s6 = in.","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int c = in.nextInt();
        int d = in.nextInt();
        int e = in.nextInt();
        int f = in.nextInt();
        int g = in.nextInt();
        int h = in.nextInt();
        int i = in.nextInt();
        int j = in.nextInt();
        int k = in.nextInt();
        int l = in.nextInt();
        int m = in.nextInt();
        int n = in.nextInt();
        int o = in.nextInt();
        int p = in.nextInt();
        int q = in.nextInt();
        int r = in.nextInt();
        int s = in.nextInt();
        int t = in.nextInt();
        int u = in.nextInt();
        int v = in.nextInt();
        int w = in.nextInt();
        int x = in.nextInt();
        int y = in.nextInt();
        int z = in.nextInt();
        int a1 = in.nextInt();
        int b1 = in.nextInt();
        int c1 = in.nextInt();
        int d1 = in.nextInt();
        int e1 = in.nextInt();
        int f1 = in.nextInt();
        int g1 = in.nextInt();
        int h1 = in.nextInt();
        int i1 = in.nextInt();
        int j1 = in.nextInt();
        int k1 = in.nextInt();
        int l1 = in.nextInt();
        int m1 = in.nextInt();
        int n1 = in.nextInt();
        int o1 = in.nextInt();
        int p1 = in.nextInt();
        int q1 = in.nextInt();
        int r1 = in.nextInt();
        int s1 = in.nextInt();
        int t1 = in.nextInt();
        int u1 = in.nextInt();
        int v1 = in.nextInt();
        int w1 = in.nextInt();
        int x1 = in.nextInt();
        int y1 = in.nextInt();
        int z1 = in.nextInt();
        int a2 = in.nextInt();
        int b2 = in.nextInt();
        int c2 = in.nextInt();
        int d2 = in.nextInt();
        int e2 = in.nextInt();
        int f2 = in.nextInt();
        int g2 = in.nextInt();
        int h2 = in.nextInt();
        int i2 = in.nextInt();
        int j2 = in.nextInt();
        int k2 = in.nextInt();
        int l2 = in.nextInt();
        int m2 = in.nextInt();
        int n2 = in.nextInt();
        int o2 = in.nextInt();
        int p2 = in.nextInt();
        int q2 = in.nextInt();
        int r2 = in.nextInt();
        int s2 = in.nextInt();
        int t2 = in.nextInt();
        int u2 = in.nextInt();
        int v2 = in.nextInt();
        int w2 = in.nextInt();
        int x2 = in.nextInt();
        int y2 = in.nextInt();
        int z2 = in.nextInt();
        int a3 = in.nextInt();
        int b3 = in.nextInt();
        int c3 = in.nextInt();
        int d3 = in.nextInt();
        int e3 = in.nextInt();
        int f3 = in.nextInt();
        int g3 = in.nextInt();
        int h3 = in.nextInt();
        int i3 = in.nextInt();
        int j3 = in.nextInt();
        int k3 = in.nextInt();
        int l3 = in.nextInt();
        int m3 = in.nextInt();
        int n3 = in.nextInt();
        int o3 = in.nextInt();
        int p3 = in.nextInt();
        int q3 = in.nextInt();
        int r3 = in.nextInt();
        int s3 = in.nextInt();
        int t3 = in.nextInt();
        int u3 = in.nextInt();
        int v3 = in.nextInt();
        int w3 = in.nextInt();
        int x3 = in.nextInt();
        int y3 = in.nextInt();
        int z3 = in.nextInt();
        int a4 = in.nextInt();
        int b4 = in.nextInt();
        int c4 = in.nextInt();
        int d4 = in.nextInt();
        int e4 = in.nextInt();
        int f4 = in.nextInt();
        int g4 = in.nextInt();
        int h4 = in.nextInt();
        int i4 = in.nextInt();
        int j4 = in.nextInt();
        int k4 = in.nextInt();
        int l4 = in.nextInt();
        int m4 = in.nextInt();
        int n4 = in.nextInt();
        int o4 = in.nextInt();
        int p4 = in.nextInt();
        int q4 = in.nextInt();
        int r4 = in.nextInt();
        int s4 = in.nextInt();
        int t4 = in.nextInt();
        int u4 = in.nextInt();
        int v4 = in.nextInt();
        int w4 = in.nextInt();
        int x4 = in.nextInt();
        int y4 = in.nextInt();
        int z4 = in.nextInt();
        int a5 = in.nextInt();
        int b5 = in.nextInt();
        int c5 = in.nextInt();
        int d5 = in.nextInt();
        int e5 = in.nextInt();
        int f5 = in.nextInt();
        int g5 = in.nextInt();
        int h5 = in.nextInt();
        int i5 = in.nextInt();
        int j5 = in.nextInt();
        int k5 = in.nextInt();
        int l5 = in.nextInt();
        int m5 = in.nextInt();
        int n5 = in.nextInt();
        int o5 = in.nextInt();
        int p5 = in.nextInt();
        int q5 = in.nextInt();
        int r5 = in.nextInt();
        int s5 = in.nextInt();
        int t5 = in.nextInt();
        int u5 = in.nextInt();
        int v5 = in.nextInt();
        int w5 = in.nextInt();
        int x5 = in.nextInt();
        int y5 = in.nextInt();
        int z5 = in.nextInt();
        int a6 = in.nextInt();
        int b6 = in.nextInt();
        int c6 = in.nextInt();
        int d6 = in.nextInt();
        int e6 = in.nextInt();
        int f6 = in.nextInt();
        int g6 = in.nextInt();
        int h6 = in.nextInt();
        int i6 = in.nextInt();
        int j6 = in.nextInt();
        int k6 = in.nextInt();
        int l6 = in.nextInt();
        int m6 = in.nextInt();
        int n6 = in.nextInt();
        int o6 = in.nextInt();
        int p6 = in.nextInt();
        int q6 = in.nextInt();
        int r6 = in.nextInt();
        int s6 = in."
CodeGen,codenet,C++,Java,s593850729.java,"public class s593850729 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int A = in.nextInt();
        int B = in.nextInt();
        int C = in.nextInt();
        int X = in.nextInt();
        int cnt = 0;
        for (int a = 0; a <= A; a++) {
            for (int b = 0; b <= B; b++) {
                for (int c = 0; c <= C; c++) {
                    int total = 500 * a + 100 * b + 50 * c;
                    if (total == X) cnt++;
                }
            }
        }
        System.out.println(cnt);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int A = in.nextInt();
        int B = in.nextInt();
        int C = in.nextInt();
        int X = in.nextInt();
        int cnt = 0;
        for (int a = 0; a <= A; a++) {
            for (int b = 0; b <= B; b++) {
                for (int c = 0; c <= C; c++) {
                    int total = 500 * a + 100 * b + 50 * c;
                    if (total == X) cnt++;
                }
            }
        }
        System.out.println(cnt);
    }
}"
CodeGen,codenet,C++,Java,s557795702.java,"public class s557795702 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] L = new int[n/2];
        int[] R = new int[n/2];
        int l = 0, r = n-1;
        int cnt = 0;
        while (l <= r) {
            if (a[l] <= a[r]) {
                L[cnt] = a[l];
                l++;
            } else {
                R[cnt] = a[r];
                r--;
                cnt++;
            }
        }
        for (int i = 0; i < cnt; i++) {
            a[l+i] = L[i];
        }
        for (int i = 0; i < cnt; i++) {
            a[r-i] = R[i];
        }
        for (int i = 0; i < n; i++) {
            System.out.print(a[i] + "" "");
        }
        System.out.println();
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans += cnt;
        }
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] L = new int[n/2];
        int[] R = new int[n/2];
        int l = 0, r = n-1;
        int cnt = 0;
        while (l <= r) {
            if (a[l] <= a[r]) {
                L[cnt] = a[l];
                l++;
            } else {
                R[cnt] = a[r];
                r--;
                cnt++;
            }
        }
        for (int i = 0; i < cnt; i++) {
            a[l+i] = L[i];
        }
        for (int i = 0; i < cnt; i++) {
            a[r-i] = R[i];
        }
        for (int i = 0; i < n; i++) {
            System.out.print(a[i] + "" "");
        }
        System.out.println();
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans += cnt;
        }
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s983388294.java,"public class s983388294 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int curr = 0;
        for(int i=0; i<n; i++){
            if(a[i]==curr+1){
                curr++;
            }
        }
        if(curr>0){
            System.out.println(n-curr);
        }
        else{
            System.out.println(-1);
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int curr = 0;
        for(int i=0; i<n; i++){
            if(a[i]==curr+1){
                curr++;
            }
        }
        if(curr>0){
            System.out.println(n-curr);
        }
        else{
            System.out.println(-1);
        }
    }
}"
CodeGen,codenet,C++,Java,s792884768.java,"public class s792884768 {
    private static final int[][] FMemo = new int[][]{
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","public class Main {
    private static final int[][] FMemo = new int[][]{
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"
CodeGen,codenet,C++,Java,s744854383.java,"public class s744854383 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int[] a = new int[N];
		for (int i = 0; i < N; i++) {
			a[i] = sc.nextInt();
		}
		int idx = 1;
		int ans = 0;
		for (int i = 0; i < N; i++) {
			if (a[i] == idx) {
				idx++;
			} else {
				ans++;
			}
		}
		if (idx == 1) {
			System.out.println(-1);
		} else {
			System.out.println(ans);
		}
	}
}","public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int[] a = new int[N];
		for (int i = 0; i < N; i++) {
			a[i] = sc.nextInt();
		}
		int idx = 1;
		int ans = 0;
		for (int i = 0; i < N; i++) {
			if (a[i] == idx) {
				idx++;
			} else {
				ans++;
			}
		}
		if (idx == 1) {
			System.out.println(-1);
		} else {
			System.out.println(ans);
		}
	}
}"
CodeGen,codenet,C++,Java,s209567491.java,"public class s209567491 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int N,D,X;
		int num_of_chocolate;
		int counter;
		int days;
		int A[101];
		
		for (int i = 0; i < N; i++) {
			A[i] = in.nextInt();
		}
		
		for (int i = 0; i < N; i++) {
			days = 0;
			counter = 0;
			for (int j = 0;; j++) {
				days = j * A[i] + 1;
				if (days <= D) {
					counter++;
				}
				else {
					break;
				}
			}
			num_of_chocolate = num_of_chocolate + counter;
		}
		num_of_chocolate = num_of_chocolate + X;
		
		System.out.println(num_of_chocolate);
		
	}
}","public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int N,D,X;
		int num_of_chocolate;
		int counter;
		int days;
		int A[101];
		
		for (int i = 0; i < N; i++) {
			A[i] = in.nextInt();
		}
		
		for (int i = 0; i < N; i++) {
			days = 0;
			counter = 0;
			for (int j = 0;; j++) {
				days = j * A[i] + 1;
				if (days <= D) {
					counter++;
				}
				else {
					break;
				}
			}
			num_of_chocolate = num_of_chocolate + counter;
		}
		num_of_chocolate = num_of_chocolate + X;
		
		System.out.println(num_of_chocolate);
		
	}
}"
CodeGen,codenet,C++,Java,s221616550.java,"public class s221616550 {
  public static void main(String[] args) {
    String s = """";
    Scanner in = new Scanner(System.in);
    s = in.nextLine();
    if (isPalindrome(s) && isPalindrome(s.substring(0, s.length() / 2))) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }
  }

  public static boolean isPalindrome(String s) {
    for (int i = 0; i < s.length() / 2; i++) {
      if (s.charAt(i)!= s.charAt(s.length() - 1 - i)) {
        return false;
      }
    }
    return true;
  }
}","public class Main {
  public static void main(String[] args) {
    String s = """";
    Scanner in = new Scanner(System.in);
    s = in.nextLine();
    if (isPalindrome(s) && isPalindrome(s.substring(0, s.length() / 2))) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }
  }

  public static boolean isPalindrome(String s) {
    for (int i = 0; i < s.length() / 2; i++) {
      if (s.charAt(i)!= s.charAt(s.length() - 1 - i)) {
        return false;
      }
    }
    return true;
  }
}"
CodeGen,codenet,C++,Java,s700369080.java,"public class s700369080 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x1 = in.nextInt();
        int y1 = in.nextInt();
        int x2 = in.nextInt();
        int y2 = in.nextInt();
        int x3 = in.nextInt();
        int y3 = in.nextInt();
        int x4 = in.nextInt();
        int y4 = in.nextInt();
        System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x1 = in.nextInt();
        int y1 = in.nextInt();
        int x2 = in.nextInt();
        int y2 = in.nextInt();
        int x3 = in.nextInt();
        int y3 = in.nextInt();
        int x4 = in.nextInt();
        int y4 = in.nextInt();
        System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
    }
}"
CodeGen,codenet,C++,Java,s571001771.java,"public class s571001771 {
    public int minCostClimbingStairs(int n) {
        // Start typing your Java solution below
        // DO NOT write main() function
        int[] key = new int[n+1];
        int[] cost = new int[n+1];
        key[0] = 0;
        cost[0] = 0;
        for(int i=1;i<=n;i++){
            int b;
            cin>>cost[i]>>b;
            for(int j=0;j<b;j++){
                int c;
                cin>>c;
                key[i]+=(1<<(c-1));
            }
        }
        int[] dp = new int[1<<n+5];
        dp[0] = 0;
        for(int i=1;i<=n;i++){
            for(int j=0;j<=i;j++){
                dp[i|key[j]] = min(dp[i|key[j]], dp[i]+cost[j]);
            }
        }
        if(dp[(1<<n)-1]==Integer.MAX_VALUE) return -1;
        else return dp[(1<<n)-1];
    }
}","public class Main {
    public int minCostClimbingStairs(int n) {
        // Start typing your Java solution below
        // DO NOT write main() function
        int[] key = new int[n+1];
        int[] cost = new int[n+1];
        key[0] = 0;
        cost[0] = 0;
        for(int i=1;i<=n;i++){
            int b;
            cin>>cost[i]>>b;
            for(int j=0;j<b;j++){
                int c;
                cin>>c;
                key[i]+=(1<<(c-1));
            }
        }
        int[] dp = new int[1<<n+5];
        dp[0] = 0;
        for(int i=1;i<=n;i++){
            for(int j=0;j<=i;j++){
                dp[i|key[j]] = min(dp[i|key[j]], dp[i]+cost[j]);
            }
        }
        if(dp[(1<<n)-1]==Integer.MAX_VALUE) return -1;
        else return dp[(1<<n)-1];
    }
}"
CodeGen,codenet,C++,Java,s522742913.java,"public class s522742913 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String source = in.next();
        int max_i = (int) Math.pow(2, source.length() - 1);
        double sum = 0;
        for (int i = 0; i < max_i; ++i) {
            String plus = Integer.toBinaryString(i);
            while (plus.length() < source.length()) {
                plus = ""0"" + plus;
            }
            double number = 0;
            String working = source;
            while (plus.contains(""1"")) {
                int i = 0;
                while (!plus.substring(i, i + 1).equals(""1"")) {
                    i++;
                }
                sum += Double.parseDouble(working.substring(0, i + 1));
                plus = plus.substring(i + 1);
                working = working.substring(i + 1);
            }
            sum += Double.parseDouble(working);
        }
        System.out.println(sum);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String source = in.next();
        int max_i = (int) Math.pow(2, source.length() - 1);
        double sum = 0;
        for (int i = 0; i < max_i; ++i) {
            String plus = Integer.toBinaryString(i);
            while (plus.length() < source.length()) {
                plus = ""0"" + plus;
            }
            double number = 0;
            String working = source;
            while (plus.contains(""1"")) {
                int i = 0;
                while (!plus.substring(i, i + 1).equals(""1"")) {
                    i++;
                }
                sum += Double.parseDouble(working.substring(0, i + 1));
                plus = plus.substring(i + 1);
                working = working.substring(i + 1);
            }
            sum += Double.parseDouble(working);
        }
        System.out.println(sum);
    }
}"
CodeGen,codenet,C++,Java,s023282516.java,"public class s023282516 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        in.close();
        
        // 後ろから解くかわりにすべての文字列を「左右反転」する
        reverse(S.toCharArray());
        for (int i = 0; i < 4; ++i) reverse(divide[i].toCharArray());
        
        // 端から切っていく
        boolean can = true;
        for (int i = 0; i < S.length();) {
            boolean can2 = false; // 4 個の文字列たちどれかで divide できるか
            for (int j = 0; j < 4; ++j) {
                String d = divide[j];
                if (S.substring(i, d.length()).equals(d)) { // d で divide できるか
                    can2 = true;
                    i += d.length(); // divide できたら i を進める
                }
            }
            if (!can2) { // divide できなかったら
                can = false;
                break;
            }
        }
        
        if (can) System.out.println(""YES"");
        else System.out.println(""NO"");
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        in.close();
        
        // 後ろから解くかわりにすべての文字列を「左右反転」する
        reverse(S.toCharArray());
        for (int i = 0; i < 4; ++i) reverse(divide[i].toCharArray());
        
        // 端から切っていく
        boolean can = true;
        for (int i = 0; i < S.length();) {
            boolean can2 = false; // 4 個の文字列たちどれかで divide できるか
            for (int j = 0; j < 4; ++j) {
                String d = divide[j];
                if (S.substring(i, d.length()).equals(d)) { // d で divide できるか
                    can2 = true;
                    i += d.length(); // divide できたら i を進める
                }
            }
            if (!can2) { // divide できなかったら
                can = false;
                break;
            }
        }
        
        if (can) System.out.println(""YES"");
        else System.out.println(""NO"");
    }
}"
CodeGen,codenet,C++,Java,s263967574.java,"public class s263967574 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        if (x >= 1200) System.out.println(""ARC"");
        else System.out.println(""ABC"");
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        if (x >= 1200) System.out.println(""ARC"");
        else System.out.println(""ABC"");
    }
}"
CodeGen,codenet,C++,Java,s620821061.java,"public class s620821061 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] b = new int[m];
        for (int i = 0; i < m; i++) {
            b[i] = in.nextInt();
        }
        BitMatching bm = new BitMatching();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (gcd(a[i], b[j])!= 1) {
                    bm.add(i, j);
                }
            }
        }
        System.out.println(bm.exec());
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] b = new int[m];
        for (int i = 0; i < m; i++) {
            b[i] = in.nextInt();
        }
        BitMatching bm = new BitMatching();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (gcd(a[i], b[j])!= 1) {
                    bm.add(i, j);
                }
            }
        }
        System.out.println(bm.exec());
    }
}"
CodeGen,codenet,C++,Java,s475106338.java,"public class s475106338 {
    public static void main(String[] args) {
        int i, t, n;
        for (i = 0; i < 4; i++) {
            cin >> t >> n;
            if (t == 1) {
                System.out.println(6000 * n);
            } else if (t == 2) {
                System.out.println(4000 * n);
            } else if (t == 3) {
                System.out.println(3000 * n);
            } else if (t == 4) {
                System.out.println(2000 * n);
            }
        }
    }
}","public class Main {
    public static void main(String[] args) {
        int i, t, n;
        for (i = 0; i < 4; i++) {
            cin >> t >> n;
            if (t == 1) {
                System.out.println(6000 * n);
            } else if (t == 2) {
                System.out.println(4000 * n);
            } else if (t == 3) {
                System.out.println(3000 * n);
            } else if (t == 4) {
                System.out.println(2000 * n);
            }
        }
    }
}"
CodeGen,codenet,C++,Java,s023383699.java,"public class s023383699 {
    public static void main(String[] args) {
        int x;
        Scanner in = new Scanner(System.in);
        x = in.nextInt();
        System.out.println(x*x*x);
    }
}","public class Main {
    public static void main(String[] args) {
        int x;
        Scanner in = new Scanner(System.in);
        x = in.nextInt();
        System.out.println(x*x*x);
    }
}"
CodeGen,codenet,C++,Java,s684825280.java,"public class s684825280 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        Arrays.sort(a);
        int ans = 0;
        for (int i = 0; i < a.length - k; i++) {
            ans += a[i];
        }
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        Arrays.sort(a);
        int ans = 0;
        for (int i = 0; i < a.length - k; i++) {
            ans += a[i];
        }
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s085554271.java,},}
CodeGen,codenet,C++,Java,s634121896.java,# Token size exceeded.,# Token size exceeded.
CodeGen,codenet,C++,Java,s285212630.java,"#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <iomanip>
#include <cassert>
#include <bitset>
using namespace std;

#define int long long
typedef pair<int, int> P;
#define rep(i, n) for (int i=0; i<(n); i++)
#define all(c) (c).begin(), (c).end()
#define uniq(c) c.erase(unique(all(c)), (c).end())
#define _1 first
#define _2 second
#define pb push_back
#define INF 1145141919
#define MOD 1000000007
#define MAX_L 22
int N;
vector<P> G[100000];
int U[MAX_L][100000], R[100000];
long long L[100000];

void dfs(int x, int p, int r, long long l) {
  U[0][x] = p;
  R[x] = r;
  L[x] = l;
  for (P pp : G[x]) {
    int t = pp._1;
    if (t == p) continue;
    dfs(t, x, r+1, l+pp._2);
  }
}

int lca(int a, int b) {
  if (R[a] > R[b]) swap(a, b);
  for (int k=0; k<MAX_L; k++) {
    if ((R[a] - R[b]) >> k & 1) b = U[k][b];
  }
  if (a == b) return a;
  for (int k=MAX_L-1; k>=0; k--) {
    if (U[k][a]!= U[k][b]) {
      a = U[k][a];
      b = U[k][b];
    }
  }
  return U[0][a];
}
long long dist(int x, int y) {
  int g = lca(x, y);
  return L[x] + L[y] - 2LL*L[g];
}

signed main() {
  ios::sync_with_stdio(false); cin.tie(0);
  cin >> N;
  rep(i, N-1) {
    int a, b, c;
    cin >> a >> b >> c;
    a--, b--;
    G[a].pb(P(b, c));
    G[b].pb(P(a, c));
  }
  rep(i, MAX_L) rep(j, N) U[i][j] = -1;
  dfs(0, -1, 0, 0);
  for (int i=0; i<MAX_L-1; i++) {
    for (int v=0; v<N; v++) {
      if (U[i][v] == -1) U[i+1][v] = -1;
      U[i+1][v] = U[i][U[i][v]];
    }
  }
  int Q, K;
  cin >> Q >> K;
  K--;
  rep(i, Q) {
    int x, y;
    cin >> x >> y;
    x--, y--;
    cout << dist(x, K) + dist(K, y) << ""\n"";
  }
  return 0;
}","#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <iomanip>
#include <cassert>
#include <bitset>
using namespace std;

#define int long long
typedef pair<int, int> P;
#define rep(i, n) for (int i=0; i<(n); i++)
#define all(c) (c).begin(), (c).end()
#define uniq(c) c.erase(unique(all(c)), (c).end())
#define _1 first
#define _2 second
#define pb push_back
#define INF 1145141919
#define MOD 1000000007
#define MAX_L 22
int N;
vector<P> G[100000];
int U[MAX_L][100000], R[100000];
long long L[100000];

void dfs(int x, int p, int r, long long l) {
  U[0][x] = p;
  R[x] = r;
  L[x] = l;
  for (P pp : G[x]) {
    int t = pp._1;
    if (t == p) continue;
    dfs(t, x, r+1, l+pp._2);
  }
}

int lca(int a, int b) {
  if (R[a] > R[b]) swap(a, b);
  for (int k=0; k<MAX_L; k++) {
    if ((R[a] - R[b]) >> k & 1) b = U[k][b];
  }
  if (a == b) return a;
  for (int k=MAX_L-1; k>=0; k--) {
    if (U[k][a]!= U[k][b]) {
      a = U[k][a];
      b = U[k][b];
    }
  }
  return U[0][a];
}
long long dist(int x, int y) {
  int g = lca(x, y);
  return L[x] + L[y] - 2LL*L[g];
}

signed main() {
  ios::sync_with_stdio(false); cin.tie(0);
  cin >> N;
  rep(i, N-1) {
    int a, b, c;
    cin >> a >> b >> c;
    a--, b--;
    G[a].pb(P(b, c));
    G[b].pb(P(a, c));
  }
  rep(i, MAX_L) rep(j, N) U[i][j] = -1;
  dfs(0, -1, 0, 0);
  for (int i=0; i<MAX_L-1; i++) {
    for (int v=0; v<N; v++) {
      if (U[i][v] == -1) U[i+1][v] = -1;
      U[i+1][v] = U[i][U[i][v]];
    }
  }
  int Q, K;
  cin >> Q >> K;
  K--;
  rep(i, Q) {
    int x, y;
    cin >> x >> y;
    x--, y--;
    cout << dist(x, K) + dist(K, y) << ""\n"";
  }
  return 0;
}"
CodeGen,codenet,C++,Java,s814769071.java,"#pragma region
#define _USE_MATH_DEFINES
#include <iostream>
#include <string>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <set>
#include <list>
#include <iomanip>
#include <cstdint>
#include <cstdlib>

using namespace std;
typedef long long ll;
//#define rep(i, s, e) for (int(i) = (s); (i) < (e); ++(i))
#define rep(i, e) for (int(i) = 0; (i) < (e); ++(i))
#define rrep(i, s) for (int(i) = (s) - 1; (i) >= 0; --(i))
#define all(x) x.begin(),x.end()
#pragma endregion


public class s814769071 {
    public static void main(String[] args) {
        ll n, k;
        cin >> n >> k;
        ll MOD = 1e9 + 7;
        ll mx = n * (n + 1) / 2 - (n - k)*(n - k + 1) / 2;
        ll mn = k * (k - 1) / 2;
        ll res = 0;
        for (int i = k; i <= n + 1; ++i) {
            res += mx - mn + 1;
            mx += n - i;
            mn += i;
            res %= MOD;
        }
        cout << res << endl;
    }
}","#pragma region
#define _USE_MATH_DEFINES
#include <iostream>
#include <string>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <set>
#include <list>
#include <iomanip>
#include <cstdint>
#include <cstdlib>

using namespace std;
typedef long long ll;
//#define rep(i, s, e) for (int(i) = (s); (i) < (e); ++(i))
#define rep(i, e) for (int(i) = 0; (i) < (e); ++(i))
#define rrep(i, s) for (int(i) = (s) - 1; (i) >= 0; --(i))
#define all(x) x.begin(),x.end()
#pragma endregion


public class Main {
    public static void main(String[] args) {
        ll n, k;
        cin >> n >> k;
        ll MOD = 1e9 + 7;
        ll mx = n * (n + 1) / 2 - (n - k)*(n - k + 1) / 2;
        ll mn = k * (k - 1) / 2;
        ll res = 0;
        for (int i = k; i <= n + 1; ++i) {
            res += mx - mn + 1;
            mx += n - i;
            mn += i;
            res %= MOD;
        }
        cout << res << endl;
    }
}"
CodeGen,codenet,C++,Java,s154250720.java,"#include <iostream>
#include <cstring>
#include <string>
#include <cstdio>
#include <cmath>
#include <vector>
#include <queue>
#include <map>
#include <algorithm>
using namespace std;
const int maxn = 200000 + 10;
const int INF = 1e8;
int maps[maxn];
int num[maxn];
int main() {
    int n;
    while (cin >> n) {
        for (int i = 1; i <= n; i++) {
            cin >> maps[i];
            num[i] = maps[i];
        }
        sort(maps + 1, maps + n + 1);
        int m = n / 2;
        for (int i = 1; i <= n; i++) {
            if (num[i] <= maps[m])
                cout << maps[m + 1] << endl;
            else
                cout << maps[m] << endl;
        }
    }
    return 0;
}","#include <iostream>
#include <cstring>
#include <string>
#include <cstdio>
#include <cmath>
#include <vector>
#include <queue>
#include <map>
#include <algorithm>
using namespace std;
const int maxn = 200000 + 10;
const int INF = 1e8;
int maps[maxn];
int num[maxn];
int main() {
    int n;
    while (cin >> n) {
        for (int i = 1; i <= n; i++) {
            cin >> maps[i];
            num[i] = maps[i];
        }
        sort(maps + 1, maps + n + 1);
        int m = n / 2;
        for (int i = 1; i <= n; i++) {
            if (num[i] <= maps[m])
                cout << maps[m + 1] << endl;
            else
                cout << maps[m] << endl;
        }
    }
    return 0;
}"
CodeGen,codenet,C++,Java,s794872785.java,"import java.util.Scanner;
import java.util.Stack;
import java.util.Vector;

public class s794872785 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int maxsize = 0;
        int maxcnt = 0;
        int ans_num;
        int ans_num2;
        Vector<String> str_v = new Vector<String>();
        
        String in;
        while(in.hasNext()){
            str_v.add(in.next());
            if(maxsize < in.length()){
                maxsize = in.length();
                ans_num = str_v.size()-1;
            }
        }
        for(int i=0;i<str_v.size();i++){
            int cnt=0;
            for(int j=0;j<str_v.size();j++){
                if(str_v.get(i) == str_v.get(j)) cnt++;
            }
            if(maxcnt < cnt){
                maxcnt = cnt;
                ans_num2 = i;
            }
        }
        
        System.out.println(str_v.get(ans_num2) + "" "" + str_v.get(ans_num));
    }
}","import java.util.Scanner;
import java.util.Stack;
import java.util.Vector;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int maxsize = 0;
        int maxcnt = 0;
        int ans_num;
        int ans_num2;
        Vector<String> str_v = new Vector<String>();
        
        String in;
        while(in.hasNext()){
            str_v.add(in.next());
            if(maxsize < in.length()){
                maxsize = in.length();
                ans_num = str_v.size()-1;
            }
        }
        for(int i=0;i<str_v.size();i++){
            int cnt=0;
            for(int j=0;j<str_v.size();j++){
                if(str_v.get(i) == str_v.get(j)) cnt++;
            }
            if(maxcnt < cnt){
                maxcnt = cnt;
                ans_num2 = i;
            }
        }
        
        System.out.println(str_v.get(ans_num2) + "" "" + str_v.get(ans_num));
    }
}"
CodeGen,codenet,C++,Java,s726701284.java,"#include<iostream> 
#include<vector> 
#include<string> 
#include<algorithm> 
using namespace std; 
int main()
{
	string s;
	cin >> s;
	for (char i = 'a'; i <= 'z'; i++)
	{
		int a = 0;
		for (int j = 0; j < s.size();j++)
		{
			if (i==s.at(j))
			{
				a++;
			}
		}
		if (a==0)
		{
			cout << i << endl;
			break;
		} 
		if (i=='z')
		{
			cout << ""None"" << endl;
			break;
		}
	}
}","#include<iostream> 
#include<vector> 
#include<string> 
#include<algorithm> 
using namespace std; 
int main()
{
	string s;
	cin >> s;
	for (char i = 'a'; i <= 'z'; i++)
	{
		int a = 0;
		for (int j = 0; j < s.size();j++)
		{
			if (i==s.at(j))
			{
				a++;
			}
		}
		if (a==0)
		{
			cout << i << endl;
			break;
		} 
		if (i=='z')
		{
			cout << ""None"" << endl;
			break;
		}
	}
}"
CodeGen,codenet,C++,Java,s672953945.java,"//#include<bits/stdc++.h>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<set>

/*
#include<boost/multiprecision/cpp_int.hpp>
#include <boost/multiprecision/cpp_dec_float.hpp>
#include <boost/rational.hpp>
namespace mp = boost::multiprecision;
using Real = mp::number<mp::cpp_dec_float<1024>>;
using Bint = mp::cpp_int;

using namespace std;

#define int long long
#define REP(i,s,e) for((i)=(s);(i)<(e);(i)++)
#define RREP(i,s,e) for((i)=((s)-1);(i)>=(e);(i)--)
#define FOR(i,n) for((i)=(0);(i)<(n);(i)++)
#define RFOR(i,n) for((i)=((n)-1);(i)>=(0);(i)--)
#define MOD 1000000007

signed main(){

    vector<string> v;
    int N,L;

    cin>>N>>L;
    for(int i=0;i<N;i++){
        string s;
        cin>>s;
        v.push_back(s);
    }

    sort(v.begin(),v.end());

    for(int i=0;i<v.size();i++){
        cout<<v[i];
    }
    cout<<endl;
}","//#include<bits/stdc++.h>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<set>

/*
#include<boost/multiprecision/cpp_int.hpp>
#include <boost/multiprecision/cpp_dec_float.hpp>
#include <boost/rational.hpp>
namespace mp = boost::multiprecision;
using Real = mp::number<mp::cpp_dec_float<1024>>;
using Bint = mp::cpp_int;

using namespace std;

#define int long long
#define REP(i,s,e) for((i)=(s);(i)<(e);(i)++)
#define RREP(i,s,e) for((i)=((s)-1);(i)>=(e);(i)--)
#define FOR(i,n) for((i)=(0);(i)<(n);(i)++)
#define RFOR(i,n) for((i)=((n)-1);(i)>=(0);(i)--)
#define MOD 1000000007

signed main(){

    vector<string> v;
    int N,L;

    cin>>N>>L;
    for(int i=0;i<N;i++){
        string s;
        cin>>s;
        v.push_back(s);
    }

    sort(v.begin(),v.end());

    for(int i=0;i<v.size();i++){
        cout<<v[i];
    }
    cout<<endl;
}"
CodeGen,codenet,C++,Java,s240156356.java,"public class s240156356 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String str1 = in.next();
        String str2 = in.next();
        in.close();

        String[] str1Arr = str1.split("""");
        String[] str2Arr = str2.split("""");

        Arrays.sort(str1Arr);
        Arrays.sort(str2Arr, Collections.reverseOrder());

        int loop = str1Arr.length > str2Arr.length? str2Arr.length : str1Arr.length;
        boolean flag = false;

        for(int i = 0; loop > i; i++){
            char ch1 = str1Arr[i];
            char ch2 = str2Arr[i];

            if(ch1 == ch2){
                if(loop == i + 1 && str1Arr.length < str2Arr.length){
                    flag = true;
                    break;
                }else{
                    continue;
                }
            }else{
                if(ch2 > ch1){
                    flag = true;
                    break;
                }else{
                    break;
                }
            }
        }

        if(flag){
            System.out.println(""Yes"");
        }else{
            System.out.println(""No"");
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String str1 = in.next();
        String str2 = in.next();
        in.close();

        String[] str1Arr = str1.split("""");
        String[] str2Arr = str2.split("""");

        Arrays.sort(str1Arr);
        Arrays.sort(str2Arr, Collections.reverseOrder());

        int loop = str1Arr.length > str2Arr.length? str2Arr.length : str1Arr.length;
        boolean flag = false;

        for(int i = 0; loop > i; i++){
            char ch1 = str1Arr[i];
            char ch2 = str2Arr[i];

            if(ch1 == ch2){
                if(loop == i + 1 && str1Arr.length < str2Arr.length){
                    flag = true;
                    break;
                }else{
                    continue;
                }
            }else{
                if(ch2 > ch1){
                    flag = true;
                    break;
                }else{
                    break;
                }
            }
        }

        if(flag){
            System.out.println(""Yes"");
        }else{
            System.out.println(""No"");
        }
    }
}"
CodeGen,codenet,C++,Java,s950360470.java,"public class s950360470 {
    public int modPow(int a, int n, int mod) {
        if (n == 0) return 1;
        int res = 1;
        while (n > 0) {
            if ((n & 1) == 1) res = (res * a) % mod;
            a = (a * a) % mod;
            n >>= 1;
        }
        return res;
    }
    public int modInv(int a, int mod) {
        return modPow(a, mod - 2, mod);
    }
    public int modNChooseK(int n, int k) {
        if (n == 0 || k == 0) return 1;
        int p = 1, q = 1;
        for (int i = n - k + 1; i <= n; i++)
            p = (p * i) % MOD;
        for (int i = 2; i <= k; i++)
            q = (q * i) % MOD;
        q = modInv(q, MOD);
        return (p * q) % MOD;
    }
}","public class Main {
    public int modPow(int a, int n, int mod) {
        if (n == 0) return 1;
        int res = 1;
        while (n > 0) {
            if ((n & 1) == 1) res = (res * a) % mod;
            a = (a * a) % mod;
            n >>= 1;
        }
        return res;
    }
    public int modInv(int a, int mod) {
        return modPow(a, mod - 2, mod);
    }
    public int modNChooseK(int n, int k) {
        if (n == 0 || k == 0) return 1;
        int p = 1, q = 1;
        for (int i = n - k + 1; i <= n; i++)
            p = (p * i) % MOD;
        for (int i = 2; i <= k; i++)
            q = (q * i) % MOD;
        q = modInv(q, MOD);
        return (p * q) % MOD;
    }
}"
CodeGen,codenet,C++,Java,s663381244.java,"public class s663381244 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int money;
		int[] m = {10, 50, 100, 500};
		int sum = 0;
		int[] num = new int[4];
		for (int i = 0; i < 4; i++) {
			num[i] = in.nextInt();
			sum += num[i] * m[i];
		}
		int change = sum - money;
		for (int i = 3; i >= 0; i--) {
			if (change / m[i]) {
				num[i] = num[i] - change / m[i];
				change %= m[i];
			}
		}
		for (int i = 0; i < 4; i++) {
			if (num[i] > 0) {
				System.out.println(m[i] + "" "" + num[i]);
			}
		}
	}
}","public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int money;
		int[] m = {10, 50, 100, 500};
		int sum = 0;
		int[] num = new int[4];
		for (int i = 0; i < 4; i++) {
			num[i] = in.nextInt();
			sum += num[i] * m[i];
		}
		int change = sum - money;
		for (int i = 3; i >= 0; i--) {
			if (change / m[i]) {
				num[i] = num[i] - change / m[i];
				change %= m[i];
			}
		}
		for (int i = 0; i < 4; i++) {
			if (num[i] > 0) {
				System.out.println(m[i] + "" "" + num[i]);
			}
		}
	}
}"
CodeGen,codenet,C++,Java,s074619936.java,"public class s074619936 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String str;
        int sum;
        while (in.hasNext()) {
            str = in.next();
            if (str.equals(""0"")) break;
            sum = 0;
            for (int i = 0; i < str.length(); i++) {
                sum += Integer.parseInt(str.substring(i, i + 1));
            }
            System.out.println(sum);
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String str;
        int sum;
        while (in.hasNext()) {
            str = in.next();
            if (str.equals(""0"")) break;
            sum = 0;
            for (int i = 0; i < str.length(); i++) {
                sum += Integer.parseInt(str.substring(i, i + 1));
            }
            System.out.println(sum);
        }
    }
}"
CodeGen,codenet,C++,Java,s343804973.java,"public class s343804973 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int m = in.nextInt();
		int mod = in.nextInt();
		int[][] C = new int[n + 1][n + 1];
		for (int i = 0; i <= n; i++) {
			C[i][0] = 1;
			for (int j = 1; j <= i; j++) {
				C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % mod;
			}
		}
		int[][] f = new int[n + 1][m + 1];
		int[][] pre = new int[n + 1][m + 1];
		f[1][0] = 1;
		pre[1][0] = m;
		for (int i = 2; i <= n + 1; i++) {
			for (int j = 0; j <= m; j++) {
				for (int k = 1; k < i; k++) {
					f[i][j] += f[i - k][j] * pre[k][j + 1] % mod * C[i - 2][k - 1] % mod;
					f[i][j] %= mod;
				}
				pre[i][j] = (pre[i][j + 1] + f[i][j]) % mod;
			}
		}
		System.out.println(f[n + 1][0]);
	}
}","public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int m = in.nextInt();
		int mod = in.nextInt();
		int[][] C = new int[n + 1][n + 1];
		for (int i = 0; i <= n; i++) {
			C[i][0] = 1;
			for (int j = 1; j <= i; j++) {
				C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % mod;
			}
		}
		int[][] f = new int[n + 1][m + 1];
		int[][] pre = new int[n + 1][m + 1];
		f[1][0] = 1;
		pre[1][0] = m;
		for (int i = 2; i <= n + 1; i++) {
			for (int j = 0; j <= m; j++) {
				for (int k = 1; k < i; k++) {
					f[i][j] += f[i - k][j] * pre[k][j + 1] % mod * C[i - 2][k - 1] % mod;
					f[i][j] %= mod;
				}
				pre[i][j] = (pre[i][j + 1] + f[i][j]) % mod;
			}
		}
		System.out.println(f[n + 1][0]);
	}
}"
CodeGen,codenet,C++,Java,s573429823.java,"public class s573429823 {
    public static void main(String[] args) {
        // Your code goes here
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        boolean flg=false;
        if( n<4 ){
            System.out.println(""No"");
        }else{
            for( int i=0; i<=(n/4); i++)
            {
                for( int j=0; j<=(n/7); j++ )
                {
                    if( (i*4+j*7)==n )
                    {
                        flg=true;
                        break;
                    }
                }
                if(flg) break;
            }
            if(flg)
            {
                System.out.println(""Yes"");
            }else{    
                System.out.println(""No"");
            }
        }
    }
}","public class Main {
    public static void main(String[] args) {
        // Your code goes here
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        boolean flg=false;
        if( n<4 ){
            System.out.println(""No"");
        }else{
            for( int i=0; i<=(n/4); i++)
            {
                for( int j=0; j<=(n/7); j++ )
                {
                    if( (i*4+j*7)==n )
                    {
                        flg=true;
                        break;
                    }
                }
                if(flg) break;
            }
            if(flg)
            {
                System.out.println(""Yes"");
            }else{    
                System.out.println(""No"");
            }
        }
    }
}"
CodeGen,codenet,C++,Java,s146177123.java,"#include<iostream>
#include<sstream>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<algorithm>
#include<numeric>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<cassert>

#define rep(i,n) for(int i=0;i<n;i++)
#define all(c) (c).begin(),(c).end()
#define mp make_pair
#define pb push_back
#define rp(i,c) rep(i,(c).size())
#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define dbg(x) cerr<<#x<<"" = ""<<(x)<<endl

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
const int inf=1<<28;
const double INF=1e12,EPS=1e-9;

bool seg[][7]={
	{0,1,1,1,1,1,1},
	{0,0,0,0,1,1,0},
	{1,0,1,1,0,1,1},
	{1,0,0,1,1,1,1},
	{1,1,0,0,1,1,0},
	
	{1,1,0,1,1,0,1},
	{1,1,1,1,1,0,1},
	{0,1,0,0,1,1,1},
	{1,1,1,1,1,1,1},
	{1,1,0,1,1,1,1}
};

int main()
{
	int n,t; bool st[7];
	while(cin>>n,~n){
		rep(i,7)st[i]=0;
		rep(i,n){
			cin>>t;
			char ans[8]={0};
			rep(i,7){
				ans[i]=st[i]^seg[t][i]?'1':'0';
				st[i]=seg[t][i];
			}
			cout<<ans<<endl;
		}
	}
	
	return 0;
}","#include<iostream>
#include<sstream>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<algorithm>
#include<numeric>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<cassert>

#define rep(i,n) for(int i=0;i<n;i++)
#define all(c) (c).begin(),(c).end()
#define mp make_pair
#define pb push_back
#define rp(i,c) rep(i,(c).size())
#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define dbg(x) cerr<<#x<<"" = ""<<(x)<<endl

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
const int inf=1<<28;
const double INF=1e12,EPS=1e-9;

bool seg[][7]={
	{0,1,1,1,1,1,1},
	{0,0,0,0,1,1,0},
	{1,0,1,1,0,1,1},
	{1,0,0,1,1,1,1},
	{1,1,0,0,1,1,0},
	
	{1,1,0,1,1,0,1},
	{1,1,1,1,1,0,1},
	{0,1,0,0,1,1,1},
	{1,1,1,1,1,1,1},
	{1,1,0,1,1,1,1}
};

int main()
{
	int n,t; bool st[7];
	while(cin>>n,~n){
		rep(i,7)st[i]=0;
		rep(i,n){
			cin>>t;
			char ans[8]={0};
			rep(i,7){
				ans[i]=st[i]^seg[t][i]?'1':'0';
				st[i]=seg[t][i];
			}
			cout<<ans<<endl;
		}
	}
	
	return 0;
}"
CodeGen,codenet,C++,Java,s173139590.java,"public class s173139590 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int ac_count = 0;
        int wa_count = 0;
        int tle_count = 0;
        int re_count = 0;
        for (int i = 0; i < n; i++) {
            String s = in.next();
            if (s.equals(""AC"")) {
                ac_count++;
            } else if (s.equals(""WA"")) {
                wa_count++;
            } else if (s.equals(""TLE"")) {
                tle_count++;
            } else if (s.equals(""RE"")) {
                re_count++;
            }
        }
        System.out.println(ac_count + "" x "" + ac_count);
        System.out.println(wa_count + "" x "" + wa_count);
        System.out.println(tle_count + "" x "" + tle_count);
        System.out.println(re_count + "" x "" + re_count);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int ac_count = 0;
        int wa_count = 0;
        int tle_count = 0;
        int re_count = 0;
        for (int i = 0; i < n; i++) {
            String s = in.next();
            if (s.equals(""AC"")) {
                ac_count++;
            } else if (s.equals(""WA"")) {
                wa_count++;
            } else if (s.equals(""TLE"")) {
                tle_count++;
            } else if (s.equals(""RE"")) {
                re_count++;
            }
        }
        System.out.println(ac_count + "" x "" + ac_count);
        System.out.println(wa_count + "" x "" + wa_count);
        System.out.println(tle_count + "" x "" + tle_count);
        System.out.println(re_count + "" x "" + re_count);
    }
}"
CodeGen,codenet,C++,Java,s527973537.java,"#include <iostream>
#include <vector>
#include <math.h>
#include <algorithm>
#include <string>
#include <ctype.h>
#include <iomanip>
#include <utility>
#include <bitset>
#include <set>
#include <map>
#include <ios>
#include <cstdlib>
using namespace std;
int main() {
    string N; cin >> N;
    int S = 0;
    for (int i=0;i<N.size();i++){
        S += N[i]-'0';
    }
    if (stoi(N)%S==0) cout << ""Yes"" << endl;
    else cout << ""No"" << endl;
    return 0;
}","#include <iostream>
#include <vector>
#include <math.h>
#include <algorithm>
#include <string>
#include <ctype.h>
#include <iomanip>
#include <utility>
#include <bitset>
#include <set>
#include <map>
#include <ios>
#include <cstdlib>
using namespace std;
int main() {
    string N; cin >> N;
    int S = 0;
    for (int i=0;i<N.size();i++){
        S += N[i]-'0';
    }
    if (stoi(N)%S==0) cout << ""Yes"" << endl;
    else cout << ""No"" << endl;
    return 0;
}"
CodeGen,codenet,C++,Java,s241624152.java,"public class s241624152 {
    public static void main(String[] args) {
        int a, b;
        Scanner in = new Scanner(System.in);
        a = in.nextInt();
        b = in.nextInt();
        String ans = """";
        if (a == 1 || b == 1) {
            if (a == 1 && b == 1) {
                ans = ""Draw"";
            } else if (a == 1) {
                ans = ""Alice"";
            } else {
                ans = ""Bob"";
            }
        } else {
            if (a == b) {
                ans = ""Draw"";
            } else if (a > b) {
                ans = ""Alice"";
            } else {
                ans = ""Bob"";
            }
        }
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        int a, b;
        Scanner in = new Scanner(System.in);
        a = in.nextInt();
        b = in.nextInt();
        String ans = """";
        if (a == 1 || b == 1) {
            if (a == 1 && b == 1) {
                ans = ""Draw"";
            } else if (a == 1) {
                ans = ""Alice"";
            } else {
                ans = ""Bob"";
            }
        } else {
            if (a == b) {
                ans = ""Draw"";
            } else if (a > b) {
                ans = ""Alice"";
            } else {
                ans = ""Bob"";
            }
        }
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s028542090.java,"public class s028542090 {
	public static void main(String[] args) {
		int k;
		long[] a = new long[100100];
		long min, max;
		Scanner sc = new Scanner(System.in);
		k = sc.nextInt();
		for (int i = 0; i < k; i++) {
			a[i] = sc.nextLong();
		}
		sc.close();

		max = 3;
		min = 2;

		if (a[k - 1]!= 2) {
			System.out.println(-1);
			return;
		}

		for (int i = k - 2; i >= 0; i--) {
			if (a[i] > max) {
				System.out.println(-1);
				return;
			} else {
				max = ((max / a[i]) + 1) * a[i] - 1;
				if (min % a[i]!= 0) {
					min = ((min / a[i]) + 1) * a[i];
				}
			}

			if (max <= min) {
				System.out.println(-1);
				return;
			}
		}

		System.out.println(min + "" "" + max);
	}
}","public class Main {
	public static void main(String[] args) {
		int k;
		long[] a = new long[100100];
		long min, max;
		Scanner sc = new Scanner(System.in);
		k = sc.nextInt();
		for (int i = 0; i < k; i++) {
			a[i] = sc.nextLong();
		}
		sc.close();

		max = 3;
		min = 2;

		if (a[k - 1]!= 2) {
			System.out.println(-1);
			return;
		}

		for (int i = k - 2; i >= 0; i--) {
			if (a[i] > max) {
				System.out.println(-1);
				return;
			} else {
				max = ((max / a[i]) + 1) * a[i] - 1;
				if (min % a[i]!= 0) {
					min = ((min / a[i]) + 1) * a[i];
				}
			}

			if (max <= min) {
				System.out.println(-1);
				return;
			}
		}

		System.out.println(min + "" "" + max);
	}
}"
CodeGen,codenet,C++,Java,s798522572.java,"public class s798522572 {
    public int findMin(int[] A) {
        int m = A[0];
        int min = A[1];
        for (int i = 2; i < A.length; i++) {
            if (A[i] < m) {
                m = A[i];
            }
            if (A[i] < min) {
                min = A[i];
            }
        }
        return min;
    }

    public int findMin(int[] A) {
        int m = A[0];
        int min = A[1];
        for (int i = 2; i < A.length; i++) {
            if (A[i] < m) {
                m = A[i];
            }
            if (A[i] < min) {
                min = A[i];
            }
        }
        return min;
    }

    public int findMin(int[] A) {
        int m = A[0];
        int min = A[1];
        for (int i = 2; i < A.length; i++) {
            if (A[i] < m) {
                m = A[i];
            }
            if (A[i] < min) {
                min = A[i];
            }
        }
        return min;
    }
}","public class Main {
    public int findMin(int[] A) {
        int m = A[0];
        int min = A[1];
        for (int i = 2; i < A.length; i++) {
            if (A[i] < m) {
                m = A[i];
            }
            if (A[i] < min) {
                min = A[i];
            }
        }
        return min;
    }

    public int findMin(int[] A) {
        int m = A[0];
        int min = A[1];
        for (int i = 2; i < A.length; i++) {
            if (A[i] < m) {
                m = A[i];
            }
            if (A[i] < min) {
                min = A[i];
            }
        }
        return min;
    }

    public int findMin(int[] A) {
        int m = A[0];
        int min = A[1];
        for (int i = 2; i < A.length; i++) {
            if (A[i] < m) {
                m = A[i];
            }
            if (A[i] < min) {
                min = A[i];
            }
        }
        return min;
    }
}"
CodeGen,codenet,C++,Java,s438435664.java,"public class s438435664 {
    public static void main(String[] args) {
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int k = cin.nextInt();
        int sum = 0;
        for (int b = 1; b <= n; b++) {
            int cnt = (n + 1) / b;
            int md = (n + 1) % b;
            sum += cnt * max((b - k), 0) + max((md - k), 0);
            if (k == 0) sum--;
        }
        System.out.println(sum);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int k = cin.nextInt();
        int sum = 0;
        for (int b = 1; b <= n; b++) {
            int cnt = (n + 1) / b;
            int md = (n + 1) % b;
            sum += cnt * max((b - k), 0) + max((md - k), 0);
            if (k == 0) sum--;
        }
        System.out.println(sum);
    }
}"
CodeGen,codenet,C++,Java,s330459995.java,"public class s330459995 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int W = in.nextInt();
        int H = in.nextInt();
        int x = in.nextInt();
        int y = in.nextInt();
        int r = in.nextInt();
        if (x - r < 0 || x + r > W || y - r < 0 || y + r > H) {
            System.out.println(""No"");
        } else if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= W) {
            System.out.println(""Yes"");
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int W = in.nextInt();
        int H = in.nextInt();
        int x = in.nextInt();
        int y = in.nextInt();
        int r = in.nextInt();
        if (x - r < 0 || x + r > W || y - r < 0 || y + r > H) {
            System.out.println(""No"");
        } else if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= W) {
            System.out.println(""Yes"");
        }
    }
}"
CodeGen,codenet,C++,Java,s814403222.java,"public class s814403222 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        String[] str = new String[m];
        for (int i = 0; i < m; i++) {
            str[i] = in.next();
        }
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] b = new int[m];
        for (int i = 0; i < m; i++) {
            b[i] = in.nextInt();
        }
        int[] c = new int[m];
        for (int i = 0; i < m; i++) {
            c[i] = in.nextInt();
        }
        int[] d = new int[m];
        for (int i = 0; i < m; i++) {
            d[i] = in.nextInt();
        }
        int[] e = new int[m];
        for (int i = 0; i < m; i++) {
            e[i] = in.nextInt();
        }
        int[] f = new int[m];
        for (int i = 0; i < m; i++) {
            f[i] = in.nextInt();
        }
        int[] g = new int[m];
        for (int i = 0; i < m; i++) {
            g[i] = in.nextInt();
        }
        int[] h = new int[m];
        for (int i = 0; i < m; i++) {
            h[i] = in.nextInt();
        }
        int[] i = new int[m];
        for (int i = 0; i < m; i++) {
            i[i] = in.nextInt();
        }
        int[] j = new int[m];
        for (int i = 0; i < m; i++) {
            j[i] = in.nextInt();
        }
        int[] k = new int[m];
        for (int i = 0; i < m; i++) {
            k[i] = in.nextInt();
        }
        int[] l = new int[m];
        for (int i = 0; i < m; i++) {
            l[i] = in.nextInt();
        }
        int[] m = new int[m];
        for (int i = 0; i < m; i++) {
            m[i] = in.nextInt();
        }
        int[] n = new int[m];
        for (int i = 0; i < m; i++) {
            n[i] = in.nextInt();
        }
        int[] o = new int[m];
        for (int i = 0; i < m; i++) {
            o[i] = in.nextInt();
        }
        int[] p = new int[m];
        for (int i = 0; i < m; i++) {
            p[i] = in.nextInt();
        }
        int[] q = new int[m];
        for (int i = 0; i < m; i++) {
            q[i] = in.nextInt();
        }
        int[] r = new int[m];
        for (int i = 0; i < m; i++) {
            r[i] = in.nextInt();
        }
        int[] s = new int[m];
        for (int i = 0; i < m; i++) {
            s[i] = in.nextInt();
        }
        int[] t = new int[m];
        for (int i = 0; i < m; i++) {
            t[i] = in.nextInt();
        }
        int[] u = new int[m];
        for (int i = 0; i < m; i++) {
            u[i] = in.nextInt();
        }
        int[] v = new int[m];
        for (int i = 0; i < m; i++) {
            v[i] = in.nextInt();
        }
        int[] w = new int[m];
        for (int i = 0; i < m; i++) {
            w[i] = in.nextInt();
        }
        int[] x = new int[m];
        for (int i = 0; i < m; i++) {
            x[i] = in.nextInt();
        }
        int[] y = new int[m];
        for (int i = 0; i < m; i++) {
            y[i] = in.nextInt();
        }
        int[] z = new int[m];
        for (int i = 0; i < m; i++) {
            z[i] = in.nextInt();
        }
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = in.nextInt();
        }
        int[] B = new int[n];
        for (int i = 0; i < n; i++) {
            B[i] = in.nextInt();
        }
        int[] C = new int[n];
        for (int i = 0; i < n; i++) {
            C[i] = in.nextInt();
        }
        int[] D = new int[n];
        for (int i = 0; i < n; i++) {
            D[i] = in.nextInt();
        }
        int[] E = new int[n];
        for (int i = 0; i < n; i++) {
            E[i] = in.nextInt();
        }
        int[] F = new int[n];
        for (int i = 0; i < n; i++) {
            F[i] = in.nextInt();
        }
        int[] G = new int[n];
        for (int i = 0; i < n; i++) {
            G[i] = in.nextInt();
        }
        int[] H = new int[n];
        for (int i = 0; i < n; i++) {
            H[i] = in.nextInt();
        }
        int[] I = new int[n];
        for (int i = 0; i < n; i++) {
            I[i] = in.nextInt();
        }
        int[] J = new int[n];
        for (int i = 0; i < n; i++) {
            J[i] = in.nextInt();
        }
        int[] K = new int[n];
        for (int i = 0; i < n; i++) {
            K[i] = in.nextInt();
        }
        int[] L = new int[n];
        for (int i = 0; i < n; i++) {
            L[i] = in.nextInt();
        }
        int[] M = new int[n];
        for (int i = 0; i < n; i++) {
            M[i] = in.nextInt();
        }","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        String[] str = new String[m];
        for (int i = 0; i < m; i++) {
            str[i] = in.next();
        }
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] b = new int[m];
        for (int i = 0; i < m; i++) {
            b[i] = in.nextInt();
        }
        int[] c = new int[m];
        for (int i = 0; i < m; i++) {
            c[i] = in.nextInt();
        }
        int[] d = new int[m];
        for (int i = 0; i < m; i++) {
            d[i] = in.nextInt();
        }
        int[] e = new int[m];
        for (int i = 0; i < m; i++) {
            e[i] = in.nextInt();
        }
        int[] f = new int[m];
        for (int i = 0; i < m; i++) {
            f[i] = in.nextInt();
        }
        int[] g = new int[m];
        for (int i = 0; i < m; i++) {
            g[i] = in.nextInt();
        }
        int[] h = new int[m];
        for (int i = 0; i < m; i++) {
            h[i] = in.nextInt();
        }
        int[] i = new int[m];
        for (int i = 0; i < m; i++) {
            i[i] = in.nextInt();
        }
        int[] j = new int[m];
        for (int i = 0; i < m; i++) {
            j[i] = in.nextInt();
        }
        int[] k = new int[m];
        for (int i = 0; i < m; i++) {
            k[i] = in.nextInt();
        }
        int[] l = new int[m];
        for (int i = 0; i < m; i++) {
            l[i] = in.nextInt();
        }
        int[] m = new int[m];
        for (int i = 0; i < m; i++) {
            m[i] = in.nextInt();
        }
        int[] n = new int[m];
        for (int i = 0; i < m; i++) {
            n[i] = in.nextInt();
        }
        int[] o = new int[m];
        for (int i = 0; i < m; i++) {
            o[i] = in.nextInt();
        }
        int[] p = new int[m];
        for (int i = 0; i < m; i++) {
            p[i] = in.nextInt();
        }
        int[] q = new int[m];
        for (int i = 0; i < m; i++) {
            q[i] = in.nextInt();
        }
        int[] r = new int[m];
        for (int i = 0; i < m; i++) {
            r[i] = in.nextInt();
        }
        int[] s = new int[m];
        for (int i = 0; i < m; i++) {
            s[i] = in.nextInt();
        }
        int[] t = new int[m];
        for (int i = 0; i < m; i++) {
            t[i] = in.nextInt();
        }
        int[] u = new int[m];
        for (int i = 0; i < m; i++) {
            u[i] = in.nextInt();
        }
        int[] v = new int[m];
        for (int i = 0; i < m; i++) {
            v[i] = in.nextInt();
        }
        int[] w = new int[m];
        for (int i = 0; i < m; i++) {
            w[i] = in.nextInt();
        }
        int[] x = new int[m];
        for (int i = 0; i < m; i++) {
            x[i] = in.nextInt();
        }
        int[] y = new int[m];
        for (int i = 0; i < m; i++) {
            y[i] = in.nextInt();
        }
        int[] z = new int[m];
        for (int i = 0; i < m; i++) {
            z[i] = in.nextInt();
        }
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = in.nextInt();
        }
        int[] B = new int[n];
        for (int i = 0; i < n; i++) {
            B[i] = in.nextInt();
        }
        int[] C = new int[n];
        for (int i = 0; i < n; i++) {
            C[i] = in.nextInt();
        }
        int[] D = new int[n];
        for (int i = 0; i < n; i++) {
            D[i] = in.nextInt();
        }
        int[] E = new int[n];
        for (int i = 0; i < n; i++) {
            E[i] = in.nextInt();
        }
        int[] F = new int[n];
        for (int i = 0; i < n; i++) {
            F[i] = in.nextInt();
        }
        int[] G = new int[n];
        for (int i = 0; i < n; i++) {
            G[i] = in.nextInt();
        }
        int[] H = new int[n];
        for (int i = 0; i < n; i++) {
            H[i] = in.nextInt();
        }
        int[] I = new int[n];
        for (int i = 0; i < n; i++) {
            I[i] = in.nextInt();
        }
        int[] J = new int[n];
        for (int i = 0; i < n; i++) {
            J[i] = in.nextInt();
        }
        int[] K = new int[n];
        for (int i = 0; i < n; i++) {
            K[i] = in.nextInt();
        }
        int[] L = new int[n];
        for (int i = 0; i < n; i++) {
            L[i] = in.nextInt();
        }
        int[] M = new int[n];
        for (int i = 0; i < n; i++) {
            M[i] = in.nextInt();
        }"
CodeGen,codenet,C++,Java,s860472409.java,"public class s860472409 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        in.close();
        int ans = 0;
        int count = 0;
        for (int i = 0; i < n - 1; i++) {
            if (a[i] == a[i + 1]) {
                count++;
                if (count % 2!= 0) {
                    ans++;
                }
            } else {
                count = 0;
            }
        }
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        in.close();
        int ans = 0;
        int count = 0;
        for (int i = 0; i < n - 1; i++) {
            if (a[i] == a[i + 1]) {
                count++;
                if (count % 2!= 0) {
                    ans++;
                }
            } else {
                count = 0;
            }
        }
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s853750785.java,ize exceeded.,ize exceeded.
CodeGen,codenet,C++,Java,s654970460.java,"public class s654970460 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int n1 = n - 1;
        for (int i = 0; i < n1; i++) {
            System.out.print(a[i] + "" "");
        }
        System.out.println(a[n1]);
        for (int i = 1; i < n; i++) {
            System.out.print(a[n1 - i] + "" "");
        }
        System.out.println();
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int n1 = n - 1;
        for (int i = 0; i < n1; i++) {
            System.out.print(a[i] + "" "");
        }
        System.out.println(a[n1]);
        for (int i = 1; i < n; i++) {
            System.out.print(a[n1 - i] + "" "");
        }
        System.out.println();
    }
}"
CodeGen,codenet,C++,Java,s611392782.java,"public class s611392782 {

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		String s;
		int d;
		while (in.hasNext()) {
			s = in.next();
			d = in.nextInt();
			int idx = 0;
			int a = mul(s, idx);
			idx = 0;
			int b = bob(s, idx);
			if (a == d) {
				System.out.println((b == d? ""U"" : ""M""));
			} else {
				System.out.println((b == d? ""L"" : ""I""));
			}
		}
	}

	public static int mul(String str, int idx) {
		int res = str.charAt(idx) - '0';
		while (idx + 1 < str.length() && str.charAt(idx + 1) == '*') {
			idx += 2;
			res *= str.charAt(idx) - '0';
		}
		return res;
	}

	public static int add(String str, int idx) {
		int res = mul(str, idx);
		while (idx + 1 < str.length() && str.charAt(idx + 1) == '+') {
			idx += 2;
			res += mul(str, idx);
		}
		return res;
	}

	public static int bob(String str, int idx) {
		int res = str.charAt(idx) - '0';
		while (idx + 1 < str.length()) {
			if (str.charAt(idx + 1) == '+') res += str.charAt(idx + 2) - '0';
			else                  res *= str.charAt(idx + 2) - '0';
			idx += 2;
		}
		return res;
	}
}","public class Main {

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		String s;
		int d;
		while (in.hasNext()) {
			s = in.next();
			d = in.nextInt();
			int idx = 0;
			int a = mul(s, idx);
			idx = 0;
			int b = bob(s, idx);
			if (a == d) {
				System.out.println((b == d? ""U"" : ""M""));
			} else {
				System.out.println((b == d? ""L"" : ""I""));
			}
		}
	}

	public static int mul(String str, int idx) {
		int res = str.charAt(idx) - '0';
		while (idx + 1 < str.length() && str.charAt(idx + 1) == '*') {
			idx += 2;
			res *= str.charAt(idx) - '0';
		}
		return res;
	}

	public static int add(String str, int idx) {
		int res = mul(str, idx);
		while (idx + 1 < str.length() && str.charAt(idx + 1) == '+') {
			idx += 2;
			res += mul(str, idx);
		}
		return res;
	}

	public static int bob(String str, int idx) {
		int res = str.charAt(idx) - '0';
		while (idx + 1 < str.length()) {
			if (str.charAt(idx + 1) == '+') res += str.charAt(idx + 2) - '0';
			else                  res *= str.charAt(idx + 2) - '0';
			idx += 2;
		}
		return res;
	}
}"
CodeGen,codenet,C++,Java,s129191754.java,"#include <iostream>
#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <list>
#include <map>
#include <numeric>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
#include <queue>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

#define REP(i,n) for(int i=0;i<n;i++)
#define all(x) (x).begin(),(x).end()
#define mp make_pair
#define pb push_back
#define eb emplace_back

typedef long long ll;
using namespace std;

int main(void){
    cin.tie(0);
    ios::sync_with_stdio(false);
    // cout << fixed << setprecision(20);
    int n;cin >> n;
    vector<int> a(n);REP(i,n)cin >> a[i];
    sort(all(a));
    REP(i,n-1){
        if(a[i] == a[i+1]){
            cout << ""NO"" << '\n';
            return 0;
        }
    }
    cout << ""YES"" << '\n';
        
    return 0;
}","#include <iostream>
#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <list>
#include <map>
#include <numeric>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
#include <queue>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

#define REP(i,n) for(int i=0;i<n;i++)
#define all(x) (x).begin(),(x).end()
#define mp make_pair
#define pb push_back
#define eb emplace_back

typedef long long ll;
using namespace std;

int main(void){
    cin.tie(0);
    ios::sync_with_stdio(false);
    // cout << fixed << setprecision(20);
    int n;cin >> n;
    vector<int> a(n);REP(i,n)cin >> a[i];
    sort(all(a));
    REP(i,n-1){
        if(a[i] == a[i+1]){
            cout << ""NO"" << '\n';
            return 0;
        }
    }
    cout << ""YES"" << '\n';
        
    return 0;
}"
CodeGen,codenet,C++,Java,s793402552.java,"public class s793402552 {
	public static void main(String[] args) {
		int a, b;
		Scanner in = new Scanner(System.in);
		a = in.nextInt();
		b = in.nextInt();
		String bstr = Integer.toString(b);
		int num = a * Math.pow(10, bstr.length()) + b;
		int i;
		for (i = 1; i <= 100100; i++) {
			if (i * i == num) break;
		}
		if (i > 100100) System.out.println(""No"");
		else System.out.println(""Yes"");
	}
}","public class Main {
	public static void main(String[] args) {
		int a, b;
		Scanner in = new Scanner(System.in);
		a = in.nextInt();
		b = in.nextInt();
		String bstr = Integer.toString(b);
		int num = a * Math.pow(10, bstr.length()) + b;
		int i;
		for (i = 1; i <= 100100; i++) {
			if (i * i == num) break;
		}
		if (i > 100100) System.out.println(""No"");
		else System.out.println(""Yes"");
	}
}"
CodeGen,codenet,C++,Java,s501882481.java,"public class s501882481 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        if (S.equals(""Sunny"")) {
            System.out.println(""Cloudy"");
        } else if (S.equals(""Cloudy"")) {
            System.out.println(""Rainy"");
        } else {
            System.out.println(""Sunny"");
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        if (S.equals(""Sunny"")) {
            System.out.println(""Cloudy"");
        } else if (S.equals(""Cloudy"")) {
            System.out.println(""Rainy"");
        } else {
            System.out.println(""Sunny"");
        }
    }
}"
CodeGen,codenet,C++,Java,s345215315.java,"#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cmath>
#include<cctype>
#include<math.h>
#include<string>
#include<string.h>
#include<stack>
#include<queue>
#include<vector>
#include<utility>
#include<set>
#include<map>
#include<stdlib.h>
#include<iomanip>

using namespace std;

#define ll long long
#define ld long double
#define EPS 0.0000000001
#define INF 1e9
#define LINF (ll)INF*INF
#define MOD 1000000007
#define rep(i,n) for(int i=0;i<(n);i++)
#define loop(i,a,n) for(int i=a;i<(n);i++)
#define all(in) in.begin(),in.end()
#define shosu(x) fixed<<setprecision(x)

#define int ll //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pii;
typedef vector<pii> vp;

int gcd(int a, int b){
    if(b==0) return a;
    return gcd(b,a%b);
}
int lcm(int a, int b){
    return a/gcd(a,b)*b;
}

int ans = INF;
int h = 19,w = 15;
int dx[] = {0,1,0,-1,1,1,-1,-1};
int dy[] = {1,0,-1,0,1,-1,1,-1};
vs s(19);

void dfs(int x, int y, int cnt){
    if(cnt > 20)return;
    //cout << x << "" "" << y << "" "" << cnt << endl;
    //rep(i,h)cout << s[i]<<endl;
    if(x == h-1){
        ans = min(ans,cnt);
        return;
    }
    rep(i,8){
        int nx = x + dx[i];
        int ny = y + dy[i];
        if(nx < 0 || nx >= h || ny < 0 || ny >= w)continue;
        if(s[nx][ny]!= 'X')continue;
        bool c = true;
        while(c && s[nx][ny] == 'X'){
            s[nx][ny] = '.';
            nx += dx[i];
            ny += dy[i];
            if(nx < 0 || nx >= h || ny < 0 || ny >= w){
                if(nx >= h)ans = min(ans, cnt+1);
                c = false;
            }
        }
        if(c)dfs(nx,ny,cnt+1);
        while(nx!= x || ny!= y){
            nx -= dx[i];
            ny -= dy[i];
            s[nx][ny] = 'X';
        }
        s[x][y] = '.';
    }
}

signed main(void) {
    rep(i,h)cin >> s[i];
    int sx,sy;
    rep(i,h)rep(j,w)if(s[i][j] == 'O'){
        sx = i, sy = j;
        s[i][j] = '.';
    }
    dfs(sx,sy,0);
    if(ans == INF)cout << -1 << endl;
    else cout << ans << endl;
}","#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cmath>
#include<cctype>
#include<math.h>
#include<string>
#include<string.h>
#include<stack>
#include<queue>
#include<vector>
#include<utility>
#include<set>
#include<map>
#include<stdlib.h>
#include<iomanip>

using namespace std;

#define ll long long
#define ld long double
#define EPS 0.0000000001
#define INF 1e9
#define LINF (ll)INF*INF
#define MOD 1000000007
#define rep(i,n) for(int i=0;i<(n);i++)
#define loop(i,a,n) for(int i=a;i<(n);i++)
#define all(in) in.begin(),in.end()
#define shosu(x) fixed<<setprecision(x)

#define int ll //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pii;
typedef vector<pii> vp;

int gcd(int a, int b){
    if(b==0) return a;
    return gcd(b,a%b);
}
int lcm(int a, int b){
    return a/gcd(a,b)*b;
}

int ans = INF;
int h = 19,w = 15;
int dx[] = {0,1,0,-1,1,1,-1,-1};
int dy[] = {1,0,-1,0,1,-1,1,-1};
vs s(19);

void dfs(int x, int y, int cnt){
    if(cnt > 20)return;
    //cout << x << "" "" << y << "" "" << cnt << endl;
    //rep(i,h)cout << s[i]<<endl;
    if(x == h-1){
        ans = min(ans,cnt);
        return;
    }
    rep(i,8){
        int nx = x + dx[i];
        int ny = y + dy[i];
        if(nx < 0 || nx >= h || ny < 0 || ny >= w)continue;
        if(s[nx][ny]!= 'X')continue;
        bool c = true;
        while(c && s[nx][ny] == 'X'){
            s[nx][ny] = '.';
            nx += dx[i];
            ny += dy[i];
            if(nx < 0 || nx >= h || ny < 0 || ny >= w){
                if(nx >= h)ans = min(ans, cnt+1);
                c = false;
            }
        }
        if(c)dfs(nx,ny,cnt+1);
        while(nx!= x || ny!= y){
            nx -= dx[i];
            ny -= dy[i];
            s[nx][ny] = 'X';
        }
        s[x][y] = '.';
    }
}

signed main(void) {
    rep(i,h)cin >> s[i];
    int sx,sy;
    rep(i,h)rep(j,w)if(s[i][j] == 'O'){
        sx = i, sy = j;
        s[i][j] = '.';
    }
    dfs(sx,sy,0);
    if(ans == INF)cout << -1 << endl;
    else cout << ans << endl;
}"
CodeGen,codenet,C++,Java,s559238064.java,"public class s559238064 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        int a = S.length();
        for (int i = 0; i < a - 1; i++) {
            if (S.charAt(i) == S.charAt(i + 1)) {
                System.out.println(""Bad"");
                return;
            }
        }
        System.out.println(""Good"");
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        int a = S.length();
        for (int i = 0; i < a - 1; i++) {
            if (S.charAt(i) == S.charAt(i + 1)) {
                System.out.println(""Bad"");
                return;
            }
        }
        System.out.println(""Good"");
    }
}"
CodeGen,codenet,C++,Java,s107598592.java,"public class s107598592 {
    public static void main(String[] args) {
        int N;
        Scanner in = new Scanner(System.in);
        N = in.nextInt();
        int[] X = new int[N];
        int[] Y = new int[N];
        for (int i = 0; i < N; i++) {
            X[i] = in.nextInt();
            Y[i] = X[i];
        }
        in.close();
        Arrays.sort(Y);
        int y = Y[N / 2];
        for (int i = 0; i < N; i++) {
            if (X[i] < Y[N / 2]) {
                System.out.print(Y[N / 2]);
            } else {
                System.out.print(Y[N / 2 - 1]);
            }
            System.out.println();
        }
    }
}","public class Main {
    public static void main(String[] args) {
        int N;
        Scanner in = new Scanner(System.in);
        N = in.nextInt();
        int[] X = new int[N];
        int[] Y = new int[N];
        for (int i = 0; i < N; i++) {
            X[i] = in.nextInt();
            Y[i] = X[i];
        }
        in.close();
        Arrays.sort(Y);
        int y = Y[N / 2];
        for (int i = 0; i < N; i++) {
            if (X[i] < Y[N / 2]) {
                System.out.print(Y[N / 2]);
            } else {
                System.out.print(Y[N / 2 - 1]);
            }
            System.out.println();
        }
    }
}"
CodeGen,codenet,C++,Java,s914373115.java,"public class s914373115 {
    public static void main(String[] args) {
        A();
    }

    public static void A() {
        B();
    }

    public static void B() {
        long long int x,sum;
        Scanner in = new Scanner(System.in);
        x = in.nextLong();
        int i;
        sum=100;
        for(i=0;sum<x;++i){
            sum+=sum/100;
        }
        System.out.println(i);
    }
}","public class Main {
    public static void main(String[] args) {
        A();
    }

    public static void A() {
        B();
    }

    public static void B() {
        long long int x,sum;
        Scanner in = new Scanner(System.in);
        x = in.nextLong();
        int i;
        sum=100;
        for(i=0;sum<x;++i){
            sum+=sum/100;
        }
        System.out.println(i);
    }
}"
CodeGen,codenet,C++,Java,s013321508.java,"public class s013321508 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] L = new int[n];
        for (int i = 0; i < n; i++) {
            L[i] = in.nextInt();
        }
        Arrays.sort(L);
        int maxL = L[L.length - 1];
        int maxL_div2 = maxL / 2;
        int[] ans = new int[m];
        for (int i = 0; i < m; i++) {
            int max_L = maxL;
            if (max_L == 0) {
                break;
            }
            max_L /= 2;
            int itr = Arrays.binarySearch(L, max_L);
            if (itr < 0) {
                itr = -itr - 1;
            }
            L.add(itr, max_L);
            L.remove(L.length - 1);
            ans[i] = L.length;
        }
        long ans_sum = 0;
        for (int i = 0; i < ans.length; i++) {
            ans_sum += ans[i];
        }
        System.out.println(ans_sum);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] L = new int[n];
        for (int i = 0; i < n; i++) {
            L[i] = in.nextInt();
        }
        Arrays.sort(L);
        int maxL = L[L.length - 1];
        int maxL_div2 = maxL / 2;
        int[] ans = new int[m];
        for (int i = 0; i < m; i++) {
            int max_L = maxL;
            if (max_L == 0) {
                break;
            }
            max_L /= 2;
            int itr = Arrays.binarySearch(L, max_L);
            if (itr < 0) {
                itr = -itr - 1;
            }
            L.add(itr, max_L);
            L.remove(L.length - 1);
            ans[i] = L.length;
        }
        long ans_sum = 0;
        for (int i = 0; i < ans.length; i++) {
            ans_sum += ans[i];
        }
        System.out.println(ans_sum);
    }
}"
CodeGen,codenet,C++,Java,s716198307.java,"public class s716198307 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int avg = 0;
        for (int i = 0; i < n; i++) {
            avg += a[i];
        }
        avg /= n;
        int s = 0;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (s > Math.abs(a[i] - avg)) {
                s = Math.abs(a[i] - avg);
                ans = i;
            }
        }
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int avg = 0;
        for (int i = 0; i < n; i++) {
            avg += a[i];
        }
        avg /= n;
        int s = 0;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (s > Math.abs(a[i] - avg)) {
                s = Math.abs(a[i] - avg);
                ans = i;
            }
        }
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s350755479.java,"public class s350755479 {
    public int shortestPathLength(int[][] graph) {
        int n = graph.length;
        int[] par = new int[n];
        for (int i = 0; i < n; i++)
            par[i] = i;
        Arrays.sort(graph, 1, n, new Comparator<int[]>() {
            @Override
            public int compare(int[] a, int[] b) {
                return a[0] - b[0];
            }
        });
        for (int i = 1; i < n; i++)
            graph[i][1] = graph[i - 1][0] + graph[i][0];
        for (int i = 2; i < n; i++)
            graph[i][2] = graph[i - 1][1] + graph[i][0];
        for (int i = 3; i < n; i++)
            graph[i][3] = graph[i - 1][2] + graph[i][0];
        for (int i = 4; i < n; i++)
            graph[i][4] = graph[i - 1][3] + graph[i][0];
        for (int i = 5; i < n; i++)
            graph[i][5] = graph[i - 1][4] + graph[i][0];
        for (int i = 6; i < n; i++)
            graph[i][6] = graph[i - 1][5] + graph[i][0];
        for (int i = 7; i < n; i++)
            graph[i][7] = graph[i - 1][6] + graph[i][0];
        for (int i = 8; i < n; i++)
            graph[i][8] = graph[i - 1][7] + graph[i][0];
        for (int i = 9; i < n; i++)
            graph[i][9] = graph[i - 1][8] + graph[i][0];
        for (int i = 10; i < n; i++)
            graph[i][10] = graph[i - 1][9] + graph[i][0];
        for (int i = 11; i < n; i++)
            graph[i][11] = graph[i - 1][10] + graph[i][0];
        for (int i = 12; i < n; i++)
            graph[i][12] = graph[i - 1][11] + graph[i][0];
        for (int i = 13; i < n; i++)
            graph[i][13] = graph[i - 1][12] + graph[i][0];
        for (int i = 14; i < n; i++)
            graph[i][14] = graph[i - 1][13] + graph[i][0];
        for (int i = 15; i < n; i++)
            graph[i][15] = graph[i - 1][14] + graph[i][0];
        for (int i = 16; i < n; i++)
            graph[i][16] = graph[i - 1][15] + graph[i][0];
        for (int i = 17; i < n; i++)
            graph[i][17] = graph[i - 1][16] + graph[i][0];
        for (int i = 18; i < n; i++)
            graph[i][18] = graph[i - 1][17] + graph[i][0];
        for (int i = 19; i < n; i++)
            graph[i][19] = graph[i - 1][18] + graph[i][0];
        for (int i = 20; i < n; i++)
            graph[i][20] = graph[i - 1][19] + graph[i][0];
        for (int i = 21; i < n; i++)
            graph[i][21] = graph[i - 1][20] + graph[i][0];
        for (int i = 22; i < n; i++)
            graph[i][22] = graph[i - 1][21] + graph[i][0];
        for (int i = 23; i < n; i++)
            graph[i][23] = graph[i - 1][22] + graph[i][0];
        for (int i = 24; i < n; i++)
            graph[i][24] = graph[i - 1][23] + graph[i][0];
        for (int i = 25; i < n; i++)
            graph[i][25] = graph[i - 1][24] + graph[i][0];
        for (int i = 26; i < n; i++)
            graph[i][26] = graph[i - 1][25] + graph[i][0];
        for (int i = 27; i < n; i++)
            graph[i][27] = graph[i - 1][26] + graph[i][0];
        for (int i = 28; i < n; i++)
            graph[i][28] = graph[i - 1][27] + graph[i][0];
        for (int i = 29; i < n; i++)
            graph[i][29] = graph[i - 1][28] + graph[i][0];
        for (int i = 30; i < n; i++)
            graph[i][30] = graph[i - 1][29] + graph[i][0];
        for (int i = 31; i < n; i++)
            graph[i][31] = graph[i - 1][30] + graph[i","public class Main {
    public int shortestPathLength(int[][] graph) {
        int n = graph.length;
        int[] par = new int[n];
        for (int i = 0; i < n; i++)
            par[i] = i;
        Arrays.sort(graph, 1, n, new Comparator<int[]>() {
            @Override
            public int compare(int[] a, int[] b) {
                return a[0] - b[0];
            }
        });
        for (int i = 1; i < n; i++)
            graph[i][1] = graph[i - 1][0] + graph[i][0];
        for (int i = 2; i < n; i++)
            graph[i][2] = graph[i - 1][1] + graph[i][0];
        for (int i = 3; i < n; i++)
            graph[i][3] = graph[i - 1][2] + graph[i][0];
        for (int i = 4; i < n; i++)
            graph[i][4] = graph[i - 1][3] + graph[i][0];
        for (int i = 5; i < n; i++)
            graph[i][5] = graph[i - 1][4] + graph[i][0];
        for (int i = 6; i < n; i++)
            graph[i][6] = graph[i - 1][5] + graph[i][0];
        for (int i = 7; i < n; i++)
            graph[i][7] = graph[i - 1][6] + graph[i][0];
        for (int i = 8; i < n; i++)
            graph[i][8] = graph[i - 1][7] + graph[i][0];
        for (int i = 9; i < n; i++)
            graph[i][9] = graph[i - 1][8] + graph[i][0];
        for (int i = 10; i < n; i++)
            graph[i][10] = graph[i - 1][9] + graph[i][0];
        for (int i = 11; i < n; i++)
            graph[i][11] = graph[i - 1][10] + graph[i][0];
        for (int i = 12; i < n; i++)
            graph[i][12] = graph[i - 1][11] + graph[i][0];
        for (int i = 13; i < n; i++)
            graph[i][13] = graph[i - 1][12] + graph[i][0];
        for (int i = 14; i < n; i++)
            graph[i][14] = graph[i - 1][13] + graph[i][0];
        for (int i = 15; i < n; i++)
            graph[i][15] = graph[i - 1][14] + graph[i][0];
        for (int i = 16; i < n; i++)
            graph[i][16] = graph[i - 1][15] + graph[i][0];
        for (int i = 17; i < n; i++)
            graph[i][17] = graph[i - 1][16] + graph[i][0];
        for (int i = 18; i < n; i++)
            graph[i][18] = graph[i - 1][17] + graph[i][0];
        for (int i = 19; i < n; i++)
            graph[i][19] = graph[i - 1][18] + graph[i][0];
        for (int i = 20; i < n; i++)
            graph[i][20] = graph[i - 1][19] + graph[i][0];
        for (int i = 21; i < n; i++)
            graph[i][21] = graph[i - 1][20] + graph[i][0];
        for (int i = 22; i < n; i++)
            graph[i][22] = graph[i - 1][21] + graph[i][0];
        for (int i = 23; i < n; i++)
            graph[i][23] = graph[i - 1][22] + graph[i][0];
        for (int i = 24; i < n; i++)
            graph[i][24] = graph[i - 1][23] + graph[i][0];
        for (int i = 25; i < n; i++)
            graph[i][25] = graph[i - 1][24] + graph[i][0];
        for (int i = 26; i < n; i++)
            graph[i][26] = graph[i - 1][25] + graph[i][0];
        for (int i = 27; i < n; i++)
            graph[i][27] = graph[i - 1][26] + graph[i][0];
        for (int i = 28; i < n; i++)
            graph[i][28] = graph[i - 1][27] + graph[i][0];
        for (int i = 29; i < n; i++)
            graph[i][29] = graph[i - 1][28] + graph[i][0];
        for (int i = 30; i < n; i++)
            graph[i][30] = graph[i - 1][29] + graph[i][0];
        for (int i = 31; i < n; i++)
            graph[i][31] = graph[i - 1][30] + graph[i"
CodeGen,codenet,C++,Java,s765257696.java,"public class s765257696 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] p = new int[n];
        for (int i = 0; i < n; i++) p[i] = in.nextInt();
        int ans = 0;
        for (int i = 0; i < n - 2; i++) {
            if (p[i] > p[i+1] && p[i+1] > p[i+2]) ans++;
            if (p[i] < p[i+1] && p[i+1] < p[i+2]) ans++;
        }
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] p = new int[n];
        for (int i = 0; i < n; i++) p[i] = in.nextInt();
        int ans = 0;
        for (int i = 0; i < n - 2; i++) {
            if (p[i] > p[i+1] && p[i+1] > p[i+2]) ans++;
            if (p[i] < p[i+1] && p[i+1] < p[i+2]) ans++;
        }
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s323607209.java,"Input:

n = 2
k = 2

Output:

22

Explanation:

The first line of the input contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line","Input:

n = 2
k = 2

Output:

22

Explanation:

The first line of the input contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line contains two integers n and k.
The second line contains two integers l and r.
The third line contains two integers l and r.
The first line"
CodeGen,codenet,C++,Java,s360529905.java,"public class s360529905 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
            b[i] = a[i];
        }
        sort(b, b + n);
        int frontHalf = b[n / 2 - 1];
        int backHalf = b[n / 2];
        for (int i = 0; i < n; i++) {
            if (a[i] < backHalf)
                System.out.println(backHalf);
            else
                System.out.println(frontHalf);
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
            b[i] = a[i];
        }
        sort(b, b + n);
        int frontHalf = b[n / 2 - 1];
        int backHalf = b[n / 2];
        for (int i = 0; i < n; i++) {
            if (a[i] < backHalf)
                System.out.println(backHalf);
            else
                System.out.println(frontHalf);
        }
    }
}"
CodeGen,codenet,C++,Java,s098326932.java,"public class s098326932 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int k = in.nextInt();
        int n = in.nextInt();
        int res = 0;
        for (int i = 0; i < k; i++) {
            res = f(res + 1);
        }
        System.out.println(res);
    }
    public static int f(int n) {
        int[] a = new int[20];
        int d = 0;
        while (n > 0) {
            a[d] = n % 10;
            n /= 10;
            d++;
        }
        int m = 1e18;
        int res = n;
        for (int i = 0; i <= d; i++) {
            int bunsi = 0;
            int bunbo = 9 * i;
            for (int j = d - 1; j >= 0; j--) {
                bunsi *= 10;
                if (j < i) bunsi += 9;
                else bunsi += a[j];
                
                if (j >= i) bunbo += a[j];
                
            }
            double frac = (double) bunsi / (double) bunbo;
            if (frac < m) {
                m = frac;
                res = bunsi;
            }
        }
        return res;
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int k = in.nextInt();
        int n = in.nextInt();
        int res = 0;
        for (int i = 0; i < k; i++) {
            res = f(res + 1);
        }
        System.out.println(res);
    }
    public static int f(int n) {
        int[] a = new int[20];
        int d = 0;
        while (n > 0) {
            a[d] = n % 10;
            n /= 10;
            d++;
        }
        int m = 1e18;
        int res = n;
        for (int i = 0; i <= d; i++) {
            int bunsi = 0;
            int bunbo = 9 * i;
            for (int j = d - 1; j >= 0; j--) {
                bunsi *= 10;
                if (j < i) bunsi += 9;
                else bunsi += a[j];
                
                if (j >= i) bunbo += a[j];
                
            }
            double frac = (double) bunsi / (double) bunbo;
            if (frac < m) {
                m = frac;
                res = bunsi;
            }
        }
        return res;
    }
}"
CodeGen,codenet,C++,Java,s166776347.java,"public class s166776347 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int ans1 = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i > j) continue;
                if (a[i] > a[j]) ans1++;
                ans1 %= 1000000007;
            }
        }
        int[] count = new int[2005];
        for (int i = 0; i < n; i++) {
            count[a[i] - 1]++;
        }
        int ans2 = 0;
        int remain = n;
        for (int i = 0; i < 2005; i++) {
            remain -= count[i];
            ans2 += count[i] * remain;
        }
        int ans = 0;
        int tmp = k * (k - 1) / 2;
        tmp %= 1000000007;
        ans += ans1 * k;
        ans %= 1000000007;
        ans += tmp;
        ans %= 1000000007;
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int ans1 = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i > j) continue;
                if (a[i] > a[j]) ans1++;
                ans1 %= 1000000007;
            }
        }
        int[] count = new int[2005];
        for (int i = 0; i < n; i++) {
            count[a[i] - 1]++;
        }
        int ans2 = 0;
        int remain = n;
        for (int i = 0; i < 2005; i++) {
            remain -= count[i];
            ans2 += count[i] * remain;
        }
        int ans = 0;
        int tmp = k * (k - 1) / 2;
        tmp %= 1000000007;
        ans += ans1 * k;
        ans %= 1000000007;
        ans += tmp;
        ans %= 1000000007;
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s992338735.java,"public class s992338735 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int s = in.nextInt();
        int sum = 0;
        int max = -1;
        int min = 1001;
        for (int i = 0; i < n; i++) {
            sum += in.nextInt();
            if (s > max) max = s;
            if (s < min) min = s;
        }
        System.out.println((sum - max - min) / (n - 2));
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int s = in.nextInt();
        int sum = 0;
        int max = -1;
        int min = 1001;
        for (int i = 0; i < n; i++) {
            sum += in.nextInt();
            if (s > max) max = s;
            if (s < min) min = s;
        }
        System.out.println((sum - max - min) / (n - 2));
    }
}"
CodeGen,codenet,C++,Java,s973217665.java,"public class s973217665 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        while (n-- > 0) {
            int p = in.nextInt();
            int q = in.nextInt();
            int l = (int) Math.sqrt(p * p + q * q);
            boolean isprime = true;
            for (int i = 0; i < l; i++) {
                for (int j = 0; j < l; j++) {
                    int x = i * i + j * j;
                    if (x <= 1 || x >= p * p + q * q) continue;
                    if ((i * p + j * q) % x == 0 && (i * q - j * p) % x == 0) {
                        isprime = false;
                        break;
                    }
                }
                if (!isprime) break;
            }
            System.out.println(isprime? ""P"" : ""C"");
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        while (n-- > 0) {
            int p = in.nextInt();
            int q = in.nextInt();
            int l = (int) Math.sqrt(p * p + q * q);
            boolean isprime = true;
            for (int i = 0; i < l; i++) {
                for (int j = 0; j < l; j++) {
                    int x = i * i + j * j;
                    if (x <= 1 || x >= p * p + q * q) continue;
                    if ((i * p + j * q) % x == 0 && (i * q - j * p) % x == 0) {
                        isprime = false;
                        break;
                    }
                }
                if (!isprime) break;
            }
            System.out.println(isprime? ""P"" : ""C"");
        }
    }
}"
CodeGen,codenet,C++,Java,s917269550.java,"public class s917269550 {
  public static void main(String[] args) {
    long x, y;
    Scanner in = new Scanner(System.in);
    x = in.nextLong();
    y = in.nextLong();
    if (Math.abs(x - y) <= 1) System.out.println(""Brown"");
    else System.out.println(""Alice"");
  }
}","public class Main {
  public static void main(String[] args) {
    long x, y;
    Scanner in = new Scanner(System.in);
    x = in.nextLong();
    y = in.nextLong();
    if (Math.abs(x - y) <= 1) System.out.println(""Brown"");
    else System.out.println(""Alice"");
  }
}"
CodeGen,codenet,C++,Java,s970719454.java,"public class s970719454 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] here = new int[100001];
        int[] dp1 = new int[100001];
        int[] dp2 = new int[100001];
        for (int i = 0; i < 100001; i++) {
            here[i] = dp1[i] = dp2[i] = 0;
        }
        for (int i = 0; i < m; i++) {
            int a = in.nextInt();
            here[a] = 1;
        }
        int maxi1 = 0;
        int maxi2 = 0;
        for (int i = 1; i <= n; i++) {
            if (here[i] == 1) {
                dp1[i] = dp1[i - 1] + 1;
                maxi1 = Math.max(dp1[i], maxi1);
            } else {
                dp2[i] = dp2[i - 1] + 1;
                maxi2 = Math.max(dp2[i], maxi2);
            }
        }
        if (maxi1 == 0) {
            System.out.println(maxi2);
        } else {
            System.out.println(maxi1);
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] here = new int[100001];
        int[] dp1 = new int[100001];
        int[] dp2 = new int[100001];
        for (int i = 0; i < 100001; i++) {
            here[i] = dp1[i] = dp2[i] = 0;
        }
        for (int i = 0; i < m; i++) {
            int a = in.nextInt();
            here[a] = 1;
        }
        int maxi1 = 0;
        int maxi2 = 0;
        for (int i = 1; i <= n; i++) {
            if (here[i] == 1) {
                dp1[i] = dp1[i - 1] + 1;
                maxi1 = Math.max(dp1[i], maxi1);
            } else {
                dp2[i] = dp2[i - 1] + 1;
                maxi2 = Math.max(dp2[i], maxi2);
            }
        }
        if (maxi1 == 0) {
            System.out.println(maxi2);
        } else {
            System.out.println(maxi1);
        }
    }
}"
CodeGen,codenet,C++,Java,s531853923.java,"public class s531853923 {
    public static void main(String[] args) {
        int a, b, c, d;
        Scanner in = new Scanner(System.in);
        a = in.nextInt();
        b = in.nextInt();
        c = in.nextInt();
        d = in.nextInt();
        if ((a * b % 2 == 1) && ((c + d) % 2 == 1)) {
            System.out.println(""No"");
        } else {
            System.out.println(""Yes"");
        }
    }
}","public class Main {
    public static void main(String[] args) {
        int a, b, c, d;
        Scanner in = new Scanner(System.in);
        a = in.nextInt();
        b = in.nextInt();
        c = in.nextInt();
        d = in.nextInt();
        if ((a * b % 2 == 1) && ((c + d) % 2 == 1)) {
            System.out.println(""No"");
        } else {
            System.out.println(""Yes"");
        }
    }
}"
CodeGen,codenet,C++,Java,s447383972.java,"public class s447383972 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] q = new int[n];
        int tot = 0;
        for (int i = 1; i < n; i++) {
            if (a[i] == a[i + 1]) {
                q[++tot] = a[i];
                i++;
            }
        }
        System.out.println(q[tot] * q[tot - 1]);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] q = new int[n];
        int tot = 0;
        for (int i = 1; i < n; i++) {
            if (a[i] == a[i + 1]) {
                q[++tot] = a[i];
                i++;
            }
        }
        System.out.println(q[tot] * q[tot - 1]);
    }
}"
CodeGen,codenet,C++,Java,s129088151.java,"public class s129088151 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        in.nextLine();
        String[] com = new String[n];
        String[] str = new String[n];
        for (int i = 0; i < n; i++) {
            com[i] = in.next();
            str[i] = in.next();
        }
        in.nextLine();
        Map<String, Boolean> T = new HashMap<String, Boolean>();
        for (int i = 0; i < n; i++) {
            if (com[i].equals(""i"")) T.put(str[i], true);
            else {
                if (T.get(str[i])) System.out.println(""yes"");
                else System.out.println(""no"");
            }
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        in.nextLine();
        String[] com = new String[n];
        String[] str = new String[n];
        for (int i = 0; i < n; i++) {
            com[i] = in.next();
            str[i] = in.next();
        }
        in.nextLine();
        Map<String, Boolean> T = new HashMap<String, Boolean>();
        for (int i = 0; i < n; i++) {
            if (com[i].equals(""i"")) T.put(str[i], true);
            else {
                if (T.get(str[i])) System.out.println(""yes"");
                else System.out.println(""no"");
            }
        }
    }
}"
CodeGen,codenet,C++,Java,s644382798.java,"public class s644382798 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int q = in.nextInt();
        P[] Q = new P[n + 1];
        int head = 1, tail = n + 1;
        P u;
        int c;
        int i;
        for (i = 1; i <= n; i++) {
            u = new P();
            u.name = in.next();
            u.t = in.nextInt();
            Q[i] = u;
        }
        head = 1;
        tail = n + 1;
        while (head!= tail) {
            u = Q[head];
            c = min(q, u.t);
            u.t -= c;
            elaps += c;
            if (u.t > 0) {
                Q[head] = u;
                head = (head + 1) % (n + 1);
            } else {
                System.out.printf(""%s %d\n"", u.name, elaps);
            }
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int q = in.nextInt();
        P[] Q = new P[n + 1];
        int head = 1, tail = n + 1;
        P u;
        int c;
        int i;
        for (i = 1; i <= n; i++) {
            u = new P();
            u.name = in.next();
            u.t = in.nextInt();
            Q[i] = u;
        }
        head = 1;
        tail = n + 1;
        while (head!= tail) {
            u = Q[head];
            c = min(q, u.t);
            u.t -= c;
            elaps += c;
            if (u.t > 0) {
                Q[head] = u;
                head = (head + 1) % (n + 1);
            } else {
                System.out.printf(""%s %d\n"", u.name, elaps);
            }
        }
    }
}"
CodeGen,codenet,C++,Java,s143031369.java,"public class s143031369 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		Point[] P = new Point[n];
		for (int i = 0; i < n; i++) {
			P[i] = new Point();
			P[i].x = in.nextDouble();
			P[i].y = in.nextDouble();
		}
		int m = jarvis(P, n, ch);
		if (m == 2) {
			System.out.println(""0.5"");
			System.out.println(""0.5"");
		} else {
			double sum = 0;
			for (int i = 0; i < m; i++) {
				ang[ch[i]] = Math.PI - Math.acos(Math.cos(P[ch[i]].x, P[ch[i]].y, P[ch[(i - 1 + m) % m]].x, P[ch[(i + 1) % m]].y));
			}
			for (int i = 0; i < n; i++) {
				ans[i] = ang[i] / 2. / Math.PI;
			}
			for (int i = 0; i < n; i++) {
				System.out.println(ans[i]);
			}
		}
	}
}","public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		Point[] P = new Point[n];
		for (int i = 0; i < n; i++) {
			P[i] = new Point();
			P[i].x = in.nextDouble();
			P[i].y = in.nextDouble();
		}
		int m = jarvis(P, n, ch);
		if (m == 2) {
			System.out.println(""0.5"");
			System.out.println(""0.5"");
		} else {
			double sum = 0;
			for (int i = 0; i < m; i++) {
				ang[ch[i]] = Math.PI - Math.acos(Math.cos(P[ch[i]].x, P[ch[i]].y, P[ch[(i - 1 + m) % m]].x, P[ch[(i + 1) % m]].y));
			}
			for (int i = 0; i < n; i++) {
				ans[i] = ang[i] / 2. / Math.PI;
			}
			for (int i = 0; i < n; i++) {
				System.out.println(ans[i]);
			}
		}
	}
}"
CodeGen,codenet,C++,Java,s469969316.java,"public class s469969316 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[3];
        int[] b = new int[3];
        int[] c = new int[3];
        int[] d = new int[3];
        int[] e = new int[3];
        int[] f = new int[3];
        int[] g = new int[3];
        int[] h = new int[3];
        int[] i = new int[3];
        int[] j = new int[3];
        int[] k = new int[3];
        int[] l = new int[3];
        int[] m = new int[3];
        int[] n = new int[3];
        int[] o = new int[3];
        int[] p = new int[3];
        int[] q = new int[3];
        int[] r = new int[3];
        int[] s = new int[3];
        int[] t = new int[3];
        int[] u = new int[3];
        int[] v = new int[3];
        int[] w = new int[3];
        int[] x = new int[3];
        int[] y = new int[3];
        int[] z = new int[3];
        int[] A = new int[3];
        int[] B = new int[3];
        int[] C = new int[3];
        int[] D = new int[3];
        int[] E = new int[3];
        int[] F = new int[3];
        int[] G = new int[3];
        int[] H = new int[3];
        int[] I = new int[3];
        int[] J = new int[3];
        int[] K = new int[3];
        int[] L = new int[3];
        int[] M = new int[3];
        int[] N = new int[3];
        int[] O = new int[3];
        int[] P = new int[3];
        int[] Q = new int[3];
        int[] R = new int[3];
        int[] S = new int[3];
        int[] T = new int[3];
        int[] U = new int[3];
        int[] V = new int[3];
        int[] W = new int[3];
        int[] X = new int[3];
        int[] Y = new int[3];
        int[] Z = new int[3];
        int[] aa = new int[3];
        int[] ab = new int[3];
        int[] ac = new int[3];
        int[] ad = new int[3];
        int[] ae = new int[3];
        int[] af = new int[3];
        int[] ag = new int[3];
        int[] ah = new int[3];
        int[] ai = new int[3];
        int[] aj = new int[3];
        int[] ak = new int[3];
        int[] al = new int[3];
        int[] am = new int[3];
        int[] an = new int[3];
        int[] ao = new int[3];
        int[] ap = new int[3];
        int[] aq = new int[3];
        int[] ar = new int[3];
        int[] as = new int[3];
        int[] at = new int[3];
        int[] au = new int[3];
        int[] av = new int[3];
        int[] aw = new int[3];
        int[] ax = new int[3];
        int[] ay = new int[3];
        int[] az = new int[3];
        int[] ba = new int[3];
        int[] bb = new int[3];
        int[] bc = new int[3];
        int[] bd = new int[3];
        int[] be = new int[3];
        int[] bf = new int[3];
        int[] bg = new int[3];
        int[] bh = new int[3];
        int[] bi = new int[3];
        int[] bj = new int[3];
        int[] bk = new int[3];
        int[] bl = new int[3];
        int[] bm = new int[3];
        int[] bn = new int[3];
        int[] bo = new int[3];
        int[] bp = new int[3];
        int[] bq = new int[3];
        int[] br = new int[3];
        int[] bs = new int[3];
        int[] bt = new int[3];
        int[] bu = new int[3];
        int[] bv = new int[3];
        int[] bw = new int[3];
        int[] bx = new int[3];
        int[] by = new int[3];
        int[] bz = new int[3];
        int[] c = new int[3];
        int[] d = new int[3];
        int[] e = new int[3];
        int[] f = new int[3];
        int[] g = new int[3];
        int[] h = new int[3];
        int[] i = new int[3];
        int[] j = new int[3];
        int[] k = new int[3];
        int[] l = new int[3];
        int[] m = new int[3];
        int[] n = new int[3];
        int[] o = new int[3];
        int[] p = new int[3];
        int[] q = new int[3];
        int[] r = new int[3];
        int[] s = new int[3];
        int[] t = new int[3];
        int[] u = new int[3];
        int[] v = new int[3];
        int[] w = new int[3];
        int[] x = new int[3];
        int[] y = new int[3];
        int[] z = new int[3];
        int[] A = new int[3];
        int[] B = new int[3];
        int[] C = new int[3];
        int[] D = new int[3];
        int[] E = new int[3];
        int[] F = new int[3];
        int[] G = new","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[3];
        int[] b = new int[3];
        int[] c = new int[3];
        int[] d = new int[3];
        int[] e = new int[3];
        int[] f = new int[3];
        int[] g = new int[3];
        int[] h = new int[3];
        int[] i = new int[3];
        int[] j = new int[3];
        int[] k = new int[3];
        int[] l = new int[3];
        int[] m = new int[3];
        int[] n = new int[3];
        int[] o = new int[3];
        int[] p = new int[3];
        int[] q = new int[3];
        int[] r = new int[3];
        int[] s = new int[3];
        int[] t = new int[3];
        int[] u = new int[3];
        int[] v = new int[3];
        int[] w = new int[3];
        int[] x = new int[3];
        int[] y = new int[3];
        int[] z = new int[3];
        int[] A = new int[3];
        int[] B = new int[3];
        int[] C = new int[3];
        int[] D = new int[3];
        int[] E = new int[3];
        int[] F = new int[3];
        int[] G = new int[3];
        int[] H = new int[3];
        int[] I = new int[3];
        int[] J = new int[3];
        int[] K = new int[3];
        int[] L = new int[3];
        int[] M = new int[3];
        int[] N = new int[3];
        int[] O = new int[3];
        int[] P = new int[3];
        int[] Q = new int[3];
        int[] R = new int[3];
        int[] S = new int[3];
        int[] T = new int[3];
        int[] U = new int[3];
        int[] V = new int[3];
        int[] W = new int[3];
        int[] X = new int[3];
        int[] Y = new int[3];
        int[] Z = new int[3];
        int[] aa = new int[3];
        int[] ab = new int[3];
        int[] ac = new int[3];
        int[] ad = new int[3];
        int[] ae = new int[3];
        int[] af = new int[3];
        int[] ag = new int[3];
        int[] ah = new int[3];
        int[] ai = new int[3];
        int[] aj = new int[3];
        int[] ak = new int[3];
        int[] al = new int[3];
        int[] am = new int[3];
        int[] an = new int[3];
        int[] ao = new int[3];
        int[] ap = new int[3];
        int[] aq = new int[3];
        int[] ar = new int[3];
        int[] as = new int[3];
        int[] at = new int[3];
        int[] au = new int[3];
        int[] av = new int[3];
        int[] aw = new int[3];
        int[] ax = new int[3];
        int[] ay = new int[3];
        int[] az = new int[3];
        int[] ba = new int[3];
        int[] bb = new int[3];
        int[] bc = new int[3];
        int[] bd = new int[3];
        int[] be = new int[3];
        int[] bf = new int[3];
        int[] bg = new int[3];
        int[] bh = new int[3];
        int[] bi = new int[3];
        int[] bj = new int[3];
        int[] bk = new int[3];
        int[] bl = new int[3];
        int[] bm = new int[3];
        int[] bn = new int[3];
        int[] bo = new int[3];
        int[] bp = new int[3];
        int[] bq = new int[3];
        int[] br = new int[3];
        int[] bs = new int[3];
        int[] bt = new int[3];
        int[] bu = new int[3];
        int[] bv = new int[3];
        int[] bw = new int[3];
        int[] bx = new int[3];
        int[] by = new int[3];
        int[] bz = new int[3];
        int[] c = new int[3];
        int[] d = new int[3];
        int[] e = new int[3];
        int[] f = new int[3];
        int[] g = new int[3];
        int[] h = new int[3];
        int[] i = new int[3];
        int[] j = new int[3];
        int[] k = new int[3];
        int[] l = new int[3];
        int[] m = new int[3];
        int[] n = new int[3];
        int[] o = new int[3];
        int[] p = new int[3];
        int[] q = new int[3];
        int[] r = new int[3];
        int[] s = new int[3];
        int[] t = new int[3];
        int[] u = new int[3];
        int[] v = new int[3];
        int[] w = new int[3];
        int[] x = new int[3];
        int[] y = new int[3];
        int[] z = new int[3];
        int[] A = new int[3];
        int[] B = new int[3];
        int[] C = new int[3];
        int[] D = new int[3];
        int[] E = new int[3];
        int[] F = new int[3];
        int[] G = new"
CodeGen,codenet,C++,Java,s877835664.java,"#include <iostream>
#include <iomanip>
#include<math.h>
#include<list>
#include <algorithm>
#include<set>
#include<vector>
#include<math.h>
#include<map>
#include<string>
#include <numeric>
#include <queue>
#include <sstream>
#include <bitset>
#include<stack>

using namespace std;
using ll = long long;
using vll = vector<long long>;
using sll = set<long long>;

template<typename T>
T gcd(T a, T b) { return b? gcd(b, a % b) : a; }
template<typename T>
T lcm(T a, T b) { return a / gcd(a, b) * b; }

template<typename T>
map<T, T> getPrimeFactor(T n) {
	map<T, T> res;
	for (T i = 2; i * i <= n; ++i) {
		while (n % i == 0) {
			res[i] ++;
			n /= i;
		}
	}
	if (n!= 1) res[n] = 1;
	return res;
}

template<typename T>
bool IsPrimeNumber(T num)
{
	if (num <= 2) return true;
	else if (num % 2 == 0) return false;

	double sqrtNum = sqrt(num);
	for (int i = 3; i <= sqrtNum; i += 2)
	{
		if (num % i == 0)
		{
			return false;
		}
	}

	return true;
}

long long modinv(long long a, long long m) {
	long long b = m, u = 1, v = 0;
	while (b) {
		long long t = a / b;
		a -= t * b; swap(a, b);
		u -= t * v; swap(u, v);
	}
	u %= m;
	if (u < 0) u += m;
	return u;
}

#define rep(i,s,e) for(ll i=s;i<e;i++)
#define repeq(i,s,e) for(ll i=s;i<=e;i++)



int main() {
	ll N, K;
	std::cin >> N >> K;

	vll A(N + 1);
	repeq(i, 1, N) {
		std::cin >> A[i];
	}

	ll cur = 1;
	vll dic(N + 1, -1);
	bool flg = false;
	repeq(i, 1, K) {
		if (dic[cur] < 0 || flg) {
			dic[cur] = i;
			cur = A[cur];
		}
		else if(!flg) {
			ll tmp = K - (dic[cur] - 1);
			tmp %= i - dic[cur];
			i = K - tmp ;
			flg = true;
		}
	}

	std::cout << cur << endl;
	return 0;
}","#include <iostream>
#include <iomanip>
#include<math.h>
#include<list>
#include <algorithm>
#include<set>
#include<vector>
#include<math.h>
#include<map>
#include<string>
#include <numeric>
#include <queue>
#include <sstream>
#include <bitset>
#include<stack>

using namespace std;
using ll = long long;
using vll = vector<long long>;
using sll = set<long long>;

template<typename T>
T gcd(T a, T b) { return b? gcd(b, a % b) : a; }
template<typename T>
T lcm(T a, T b) { return a / gcd(a, b) * b; }

template<typename T>
map<T, T> getPrimeFactor(T n) {
	map<T, T> res;
	for (T i = 2; i * i <= n; ++i) {
		while (n % i == 0) {
			res[i] ++;
			n /= i;
		}
	}
	if (n!= 1) res[n] = 1;
	return res;
}

template<typename T>
bool IsPrimeNumber(T num)
{
	if (num <= 2) return true;
	else if (num % 2 == 0) return false;

	double sqrtNum = sqrt(num);
	for (int i = 3; i <= sqrtNum; i += 2)
	{
		if (num % i == 0)
		{
			return false;
		}
	}

	return true;
}

long long modinv(long long a, long long m) {
	long long b = m, u = 1, v = 0;
	while (b) {
		long long t = a / b;
		a -= t * b; swap(a, b);
		u -= t * v; swap(u, v);
	}
	u %= m;
	if (u < 0) u += m;
	return u;
}

#define rep(i,s,e) for(ll i=s;i<e;i++)
#define repeq(i,s,e) for(ll i=s;i<=e;i++)



int main() {
	ll N, K;
	std::cin >> N >> K;

	vll A(N + 1);
	repeq(i, 1, N) {
		std::cin >> A[i];
	}

	ll cur = 1;
	vll dic(N + 1, -1);
	bool flg = false;
	repeq(i, 1, K) {
		if (dic[cur] < 0 || flg) {
			dic[cur] = i;
			cur = A[cur];
		}
		else if(!flg) {
			ll tmp = K - (dic[cur] - 1);
			tmp %= i - dic[cur];
			i = K - tmp ;
			flg = true;
		}
	}

	std::cout << cur << endl;
	return 0;
}"
CodeGen,codenet,C++,Java,s324508229.java,"public class s324508229 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int ii = 0;
        int a = 0;
        int b = 0;
        int[][] cnt = new int[10][10];
        for (int i = 1; i <= n; i++) {
            b = i % 10;
            a = i;
            while (a >= 10) {
                a /= 10;
            }
            cnt[a][b]++;
        }
        long long ans = 0;
        for (int i = 1; i <= 9; i++) {
            for (int j = 1; j <= 9; j++) {
                ans += cnt[i][j] * cnt[j][i];
            }
        }
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int ii = 0;
        int a = 0;
        int b = 0;
        int[][] cnt = new int[10][10];
        for (int i = 1; i <= n; i++) {
            b = i % 10;
            a = i;
            while (a >= 10) {
                a /= 10;
            }
            cnt[a][b]++;
        }
        long long ans = 0;
        for (int i = 1; i <= 9; i++) {
            for (int j = 1; j <= 9; j++) {
                ans += cnt[i][j] * cnt[j][i];
            }
        }
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s698030085.java,"import java.util.Scanner;

public class s698030085 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        long long a = in.nextLong();
        long long b = in.nextLong();
        if ((a + b) % 2 == 0) {
            System.out.println((a + b) / 2);
        } else {
            System.out.println(""IMPOSSIBLE"");
        }
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        long long a = in.nextLong();
        long long b = in.nextLong();
        if ((a + b) % 2 == 0) {
            System.out.println((a + b) / 2);
        } else {
            System.out.println(""IMPOSSIBLE"");
        }
    }
}"
CodeGen,codenet,C++,Java,s579031873.java,"public class s579031873 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int X = in.nextInt();
        int[] roads = new int[N];
        for (int i = 0; i < N; i++) {
            roads[i] = in.nextInt();
        }
        int[] qs = new int[N];
        for (int i = 0; i < N; i++) {
            qs[i] = in.nextInt();
        }
        int ans = 0;
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < N; i++) {
            int tmp = roads[i];
            X -= tmp;
            ans++;
            if (tmp < min) min = tmp;
        }
        ans += X / min;
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int X = in.nextInt();
        int[] roads = new int[N];
        for (int i = 0; i < N; i++) {
            roads[i] = in.nextInt();
        }
        int[] qs = new int[N];
        for (int i = 0; i < N; i++) {
            qs[i] = in.nextInt();
        }
        int ans = 0;
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < N; i++) {
            int tmp = roads[i];
            X -= tmp;
            ans++;
            if (tmp < min) min = tmp;
        }
        ans += X / min;
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s575600334.java,"public class s575600334 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int c = in.nextInt();
        int d = in.nextInt();
        System.out.println(a&b);
        System.out.println(a|b);
        System.out.println(a^b);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int c = in.nextInt();
        int d = in.nextInt();
        System.out.println(a&b);
        System.out.println(a|b);
        System.out.println(a^b);
    }
}"
CodeGen,codenet,C++,Java,s680076196.java,"public class s680076196 {
    public static void main(String[] args) {
        int a, b, c, d;
        Scanner in = new Scanner(System.in);
        a = in.nextInt();
        b = in.nextInt();
        c = in.nextInt();
        d = in.nextInt();
        System.out.println((a - c) * (b - d));
    }
}","public class Main {
    public static void main(String[] args) {
        int a, b, c, d;
        Scanner in = new Scanner(System.in);
        a = in.nextInt();
        b = in.nextInt();
        c = in.nextInt();
        d = in.nextInt();
        System.out.println((a - c) * (b - d));
    }
}"
CodeGen,codenet,C++,Java,s395011148.java,"public class s395011148 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] A = new int[n];
        for (int A_i = 0; A_i < n; A_i++) {
            A[A_i] = in.nextInt();
        }
        in.close();
        long[] N = new long[1 << 18];
        for (int i = 1; i <= n; i++) {
            N[i] = A[i];
        }
        for (int i = 0; i <= n; i++) {
            for (int j = 0; j < 20; j++) {
                N[i][j] = -(1 << 60);
            }
        }
        N[0][10] = 0;
        for (int i = 1; i <= n; i++) {
            for (int j = 6; j <= 14; j++) {
                if (N[i - 1][0][j]!= -(1 << 60)) {
                    N[i][1][j + 1] = Math.max(N[i][1][j + 1], N[i - 1][0][j] + A[i]);
                    N[i][0][j - 1] = Math.max(N[i][0][j - 1], N[i - 1][0][j]);
                }
                if (N[i - 1][1][j]!= -(1 << 60)) {
                    N[i][0][j - 1] = Math.max(N[i][0][j - 1], N[i - 1][1][j]);
                }
            }
        }
        long V = 10L + (n / 2) - (n - (n / 2));
        long T1 = N[n][0][V];
        long T2 = N[n][1][V];
        System.out.println(Math.max(T1, T2));
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] A = new int[n];
        for (int A_i = 0; A_i < n; A_i++) {
            A[A_i] = in.nextInt();
        }
        in.close();
        long[] N = new long[1 << 18];
        for (int i = 1; i <= n; i++) {
            N[i] = A[i];
        }
        for (int i = 0; i <= n; i++) {
            for (int j = 0; j < 20; j++) {
                N[i][j] = -(1 << 60);
            }
        }
        N[0][10] = 0;
        for (int i = 1; i <= n; i++) {
            for (int j = 6; j <= 14; j++) {
                if (N[i - 1][0][j]!= -(1 << 60)) {
                    N[i][1][j + 1] = Math.max(N[i][1][j + 1], N[i - 1][0][j] + A[i]);
                    N[i][0][j - 1] = Math.max(N[i][0][j - 1], N[i - 1][0][j]);
                }
                if (N[i - 1][1][j]!= -(1 << 60)) {
                    N[i][0][j - 1] = Math.max(N[i][0][j - 1], N[i - 1][1][j]);
                }
            }
        }
        long V = 10L + (n / 2) - (n - (n / 2));
        long T1 = N[n][0][V];
        long T2 = N[n][1][V];
        System.out.println(Math.max(T1, T2));
    }
}"
CodeGen,codenet,C++,Java,s144923291.java,"public class s144923291 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int h = in.nextInt();
        int w = in.nextInt();
        String t = in.next();
        String s = ""snuke"";
        int[][] a = new int[h][w];
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                a[i][j] = in.nextInt();
            }
        }
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (a[i][j] == 1) {
                    if (s.charAt(j) == 'A') {
                        System.out.println((char) ('A' + j) + (i + 1));
                    }
                }
            }
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int h = in.nextInt();
        int w = in.nextInt();
        String t = in.next();
        String s = ""snuke"";
        int[][] a = new int[h][w];
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                a[i][j] = in.nextInt();
            }
        }
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (a[i][j] == 1) {
                    if (s.charAt(j) == 'A') {
                        System.out.println((char) ('A' + j) + (i + 1));
                    }
                }
            }
        }
    }
}"
CodeGen,codenet,C++,Java,s329154546.java,"#include<stdio.h>
#include<stdlib.h>
#include<iostream>
#include<string>
#include<algorithm>
#include<vector> 
#include<limits>
#include<numeric>
#include<type_traits>
#include<math.h>
using namespace std;
typedef long long ll;

#define rep(i, n) for(int i = 0; i < (int)(n); i++)
#define repi(i,a,b) for(int i = (int)(a); i < (int)(b); i++)
#define in(x) cin >> x
#define out(str) cout << str << endl

template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }

int L,N;

int main(){
    cin>>N>>L;
    string S[N];
    rep(i,N)cin>>S[i];
    sort(S,S+N);
    rep(i,N)cout<<S[i];
    cout<<endl;

}","#include<stdio.h>
#include<stdlib.h>
#include<iostream>
#include<string>
#include<algorithm>
#include<vector> 
#include<limits>
#include<numeric>
#include<type_traits>
#include<math.h>
using namespace std;
typedef long long ll;

#define rep(i, n) for(int i = 0; i < (int)(n); i++)
#define repi(i,a,b) for(int i = (int)(a); i < (int)(b); i++)
#define in(x) cin >> x
#define out(str) cout << str << endl

template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }

int L,N;

int main(){
    cin>>N>>L;
    string S[N];
    rep(i,N)cin>>S[i];
    sort(S,S+N);
    rep(i,N)cout<<S[i];
    cout<<endl;

}"
CodeGen,codenet,C++,Java,s257064825.java,"public class s257064825 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        int sum = 0;
        for (char c : S.toCharArray()) {
            sum += (c - '0');
        }
        if (sum % 9 == 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        int sum = 0;
        for (char c : S.toCharArray()) {
            sum += (c - '0');
        }
        if (sum % 9 == 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
CodeGen,codenet,C++,Java,s954770518.java,"public class s954770518 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int s[] = new int[10];
        for(int i = 0; i < 10; i++) {
            s[i] = in.nextInt();
        }
        sort(s, s + 10);
        for(int i = 9; i >= 6; i--) {
            System.out.println(s[i]);
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int s[] = new int[10];
        for(int i = 0; i < 10; i++) {
            s[i] = in.nextInt();
        }
        sort(s, s + 10);
        for(int i = 9; i >= 6; i--) {
            System.out.println(s[i]);
        }
    }
}"
CodeGen,codenet,C++,Java,s623008479.java,"public class s623008479 {
    public int findKthLargest(int[] nums, int k) {
        int n = nums.length;
        if (n == 0) return 0;
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = nums[i];
        }
        Arrays.sort(l);
        return l[n - k - 1];
    }
}","public class Main {
    public int findKthLargest(int[] nums, int k) {
        int n = nums.length;
        if (n == 0) return 0;
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = nums[i];
        }
        Arrays.sort(l);
        return l[n - k - 1];
    }
}"
CodeGen,codenet,C++,Java,s612033342.java,"public class s612033342 {
  public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
    int h = in.nextInt();
    int w = in.nextInt();
    int k = in.nextInt();
    int[][] hw = new int[h][w];
    for (int i = 0; i < h; i++) {
      for (int j = 0; j < w; j++) {
        hw[i][j] = in.nextInt();
      }
    }
    int sum = 0;
    for (int i = 0; i < pow2(h); i++) {
      for (int j = 0; j < pow2(w); j++) {
        if (count(hw, i, j) == k) sum++;
      }
    }
    System.out.println(sum);
  }
}","public class Main {
  public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
    int h = in.nextInt();
    int w = in.nextInt();
    int k = in.nextInt();
    int[][] hw = new int[h][w];
    for (int i = 0; i < h; i++) {
      for (int j = 0; j < w; j++) {
        hw[i][j] = in.nextInt();
      }
    }
    int sum = 0;
    for (int i = 0; i < pow2(h); i++) {
      for (int j = 0; j < pow2(w); j++) {
        if (count(hw, i, j) == k) sum++;
      }
    }
    System.out.println(sum);
  }
}"
CodeGen,codenet,C++,Java,s956589471.java,"public class s956589471 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int c = in.nextInt();
        int d = in.nextInt();
        int e = in.nextInt();
        int k = in.nextInt();
        if (e - a <= k) {
            System.out.println(""Yay!"");
        } else {
            System.out.println("":("");
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int c = in.nextInt();
        int d = in.nextInt();
        int e = in.nextInt();
        int k = in.nextInt();
        if (e - a <= k) {
            System.out.println(""Yay!"");
        } else {
            System.out.println("":("");
        }
    }
}"
CodeGen,codenet,C++,Java,s495709932.java,"public class s495709932 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int a_i = 0; a_i < n; a_i++) {
            a[a_i] = in.nextInt();
        }
        int result = 0;
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int diff = Math.abs(a[i] - a[j]);
                result = Math.max(result, diff);
            }
        }
        System.out.println(result);
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int a_i = 0; a_i < n; a_i++) {
            a[a_i] = in.nextInt();
        }
        int result = 0;
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int diff = Math.abs(a[i] - a[j]);
                result = Math.max(result, diff);
            }
        }
        System.out.println(result);
    }
}"
CodeGen,codenet,C++,Java,s930643405.java,"public class s930643405 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] d = new int[10];
        for (int i = 0; i < k; i++) {
            d[in.nextInt()] = 1;
        }
        while (true) {
            int x = n;
            boolean hantei = true;
            while (x > 0) {
                if (d[x % 10]) {
                    hantei = false;
                    break;
                }
                x /= 10;
            }
            if (hantei) {
                System.out.println(n);
                break;
            }
            n++;
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int[] d = new int[10];
        for (int i = 0; i < k; i++) {
            d[in.nextInt()] = 1;
        }
        while (true) {
            int x = n;
            boolean hantei = true;
            while (x > 0) {
                if (d[x % 10]) {
                    hantei = false;
                    break;
                }
                x /= 10;
            }
            if (hantei) {
                System.out.println(n);
                break;
            }
            n++;
        }
    }
}"
CodeGen,codenet,C++,Java,s575944217.java,"#include <algorithm>
#include <iostream>
#include <queue>
#include <cmath>
#include <set>
#include <iomanip>
#include <vector>
using namespace std;
typedef long long ll;
int dx[]={0,1,0,-1};
int dy[]={1,0,-1,0};
#define MAX_V 100001
#define MOD 1000000007
typedef vector<vector<int> > Graph;

class Solution {
    public:
        vector<int> spiralOrder(vector<vector<int> > &matrix) {
            int n = matrix.size();
            if (n == 0) return vector<int>();
            int m = matrix[0].size();
            if (m == 0) return vector<int>();
            vector<int> ans(n * m);
            int i = 0, j = 0;
            int k = 0;
            while (i < n && j < m) {
                for (int l = 0; l < m - k && i < n; l++) {
                    ans[k++] = matrix[i][j++];
                }
                for (int l = m - 1; l >= k && j < m; l--) {
                    ans[k++] = matrix[i++][j];
                }
                for (int l = m - 1; l >= k && i < n; l--) {
                    ans[k++] = matrix[i][j++];
                }
                for (int l = m - 1; l >= k && j < m; l--) {
                    ans[k++] = matrix[i++][j];
                }
                k = 0;
            }
            return ans;
        }
};

int main(){
    int n;cin>>n;
    vector<vector<int> > matrix(n, vector<int>(n));
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            int a;cin>>a;
            a--;
            matrix[i][j]=a;
        }
    }
    Solution sol;
    vector<int> ans = sol.spiralOrder(matrix);
    for(int i=0;i<n;i++) cout<<ans[i]<<endl;
}","#include <algorithm>
#include <iostream>
#include <queue>
#include <cmath>
#include <set>
#include <iomanip>
#include <vector>
using namespace std;
typedef long long ll;
int dx[]={0,1,0,-1};
int dy[]={1,0,-1,0};
#define MAX_V 100001
#define MOD 1000000007
typedef vector<vector<int> > Graph;

class Solution {
    public:
        vector<int> spiralOrder(vector<vector<int> > &matrix) {
            int n = matrix.size();
            if (n == 0) return vector<int>();
            int m = matrix[0].size();
            if (m == 0) return vector<int>();
            vector<int> ans(n * m);
            int i = 0, j = 0;
            int k = 0;
            while (i < n && j < m) {
                for (int l = 0; l < m - k && i < n; l++) {
                    ans[k++] = matrix[i][j++];
                }
                for (int l = m - 1; l >= k && j < m; l--) {
                    ans[k++] = matrix[i++][j];
                }
                for (int l = m - 1; l >= k && i < n; l--) {
                    ans[k++] = matrix[i][j++];
                }
                for (int l = m - 1; l >= k && j < m; l--) {
                    ans[k++] = matrix[i++][j];
                }
                k = 0;
            }
            return ans;
        }
};

int main(){
    int n;cin>>n;
    vector<vector<int> > matrix(n, vector<int>(n));
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            int a;cin>>a;
            a--;
            matrix[i][j]=a;
        }
    }
    Solution sol;
    vector<int> ans = sol.spiralOrder(matrix);
    for(int i=0;i<n;i++) cout<<ans[i]<<endl;
}"
CodeGen,codenet,C++,Java,s495283729.java,"public class s495283729 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        int i, flag = 0;
        for (i = 0; i < s.length(); i++) {
            if (i % 2 == 0) {
                switch (s.charAt(i)) {
                    case 'R':
                        break;
                    case 'U':
                        break;
                    case 'D':
                        break;
                    default:
                        flag = 1;
                        break;
                }
            } else {
                switch (s.charAt(i)) {
                    case 'L':
                        break;
                    case 'U':
                        break;
                    case 'D':
                        break;
                    default:
                        flag = 1;
                        break;
                }
            }
        }
        if (flag == 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        int i, flag = 0;
        for (i = 0; i < s.length(); i++) {
            if (i % 2 == 0) {
                switch (s.charAt(i)) {
                    case 'R':
                        break;
                    case 'U':
                        break;
                    case 'D':
                        break;
                    default:
                        flag = 1;
                        break;
                }
            } else {
                switch (s.charAt(i)) {
                    case 'L':
                        break;
                    case 'U':
                        break;
                    case 'D':
                        break;
                    default:
                        flag = 1;
                        break;
                }
            }
        }
        if (flag == 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
CodeGen,codenet,C++,Java,s855845406.java,"public class s855845406 {
	public static void main(String[] args) {
		int N, A;
		std::cin >> N;
		std::cin >> A;
		std::cout << N * N - A << std::endl;
	}
}","public class Main {
	public static void main(String[] args) {
		int N, A;
		std::cin >> N;
		std::cin >> A;
		std::cout << N * N - A << std::endl;
	}
}"
CodeGen,codenet,C++,Java,s615050061.java,"public class s615050061 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		String s = in.next();
		int[] f = new int[n + 1];
		int[] g = new int[n + 1];
		for (int i = 1; i <= n; i++) {
			if (s.charAt(i) == '+')
				f[i] = f[i - 1] + 1;
			else if (s.charAt(i) == '-')
				f[i] = f[i - 1] - 1;
			else
				f[i] = f[i - 1];
			g[i] = g[i - 1] + (s.charAt(i) == '<'? -1 : 1);
		}
		for (int i = n; i; --i)
			f[i] = f[n] * pow(B, g[i - 1]);
		int cnt = 0;
		Map<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i <= n; i++) {
			if (map.containsKey(f[i]))
				cnt += map.get(f[i]);
			else
				map.put(f[i], 1);
		}
		System.out.println(cnt);
	}
}","public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		String s = in.next();
		int[] f = new int[n + 1];
		int[] g = new int[n + 1];
		for (int i = 1; i <= n; i++) {
			if (s.charAt(i) == '+')
				f[i] = f[i - 1] + 1;
			else if (s.charAt(i) == '-')
				f[i] = f[i - 1] - 1;
			else
				f[i] = f[i - 1];
			g[i] = g[i - 1] + (s.charAt(i) == '<'? -1 : 1);
		}
		for (int i = n; i; --i)
			f[i] = f[n] * pow(B, g[i - 1]);
		int cnt = 0;
		Map<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i <= n; i++) {
			if (map.containsKey(f[i]))
				cnt += map.get(f[i]);
			else
				map.put(f[i], 1);
		}
		System.out.println(cnt);
	}
}"
CodeGen,codenet,C++,Java,s807902500.java,"public class s807902500 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        String t = in.next();
        s += s;
        int index = s.indexOf(t);
        if (index == -1) {
            System.out.println(""No"");
        } else {
            System.out.println(index + 1);
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        String t = in.next();
        s += s;
        int index = s.indexOf(t);
        if (index == -1) {
            System.out.println(""No"");
        } else {
            System.out.println(index + 1);
        }
    }
}"
CodeGen,codenet,C++,Java,s146561572.java,"public class s146561572 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n;
        n = in.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = in.nextInt();
        }
        int[] arr2 = new int[n];
        for (int i = 0; i < n; i++) {
            arr2[i] = in.nextInt();
        }
        int[] arr3 = new int[n];
        for (int i = 0; i < n; i++) {
            arr3[i] = in.nextInt();
        }
        int[] arr4 = new int[n];
        for (int i = 0; i < n; i++) {
            arr4[i] = in.nextInt();
        }
        int[] arr5 = new int[n];
        for (int i = 0; i < n; i++) {
            arr5[i] = in.nextInt();
        }
        int[] arr6 = new int[n];
        for (int i = 0; i < n; i++) {
            arr6[i] = in.nextInt();
        }
        int[] arr7 = new int[n];
        for (int i = 0; i < n; i++) {
            arr7[i] = in.nextInt();
        }
        int[] arr8 = new int[n];
        for (int i = 0; i < n; i++) {
            arr8[i] = in.nextInt();
        }
        int[] arr9 = new int[n];
        for (int i = 0; i < n; i++) {
            arr9[i] = in.nextInt();
        }
        int[] arr10 = new int[n];
        for (int i = 0; i < n; i++) {
            arr10[i] = in.nextInt();
        }
        int[] arr11 = new int[n];
        for (int i = 0; i < n; i++) {
            arr11[i] = in.nextInt();
        }
        int[] arr12 = new int[n];
        for (int i = 0; i < n; i++) {
            arr12[i] = in.nextInt();
        }
        int[] arr13 = new int[n];
        for (int i = 0; i < n; i++) {
            arr13[i] = in.nextInt();
        }
        int[] arr14 = new int[n];
        for (int i = 0; i < n; i++) {
            arr14[i] = in.nextInt();
        }
        int[] arr15 = new int[n];
        for (int i = 0; i < n; i++) {
            arr15[i] = in.nextInt();
        }
        int[] arr16 = new int[n];
        for (int i = 0; i < n; i++) {
            arr16[i] = in.nextInt();
        }
        int[] arr17 = new int[n];
        for (int i = 0; i < n; i++) {
            arr17[i] = in.nextInt();
        }
        int[] arr18 = new int[n];
        for (int i = 0; i < n; i++) {
            arr18[i] = in.nextInt();
        }
        int[] arr19 = new int[n];
        for (int i = 0; i < n; i++) {
            arr19[i] = in.nextInt();
        }
        int[] arr20 = new int[n];
        for (int i = 0; i < n; i++) {
            arr20[i] = in.nextInt();
        }
        int[] arr21 = new int[n];
        for (int i = 0; i < n; i++) {
            arr21[i] = in.nextInt();
        }
        int[] arr22 = new int[n];
        for (int i = 0; i < n; i++) {
            arr22[i] = in.nextInt();
        }
        int[] arr23 = new int[n];
        for (int i = 0; i < n; i++) {
            arr23[i] = in.nextInt();
        }
        int[] arr24 = new int[n];
        for (int i = 0; i < n; i++) {
            arr24[i] = in.nextInt();
        }
        int[] arr25 = new int[n];
        for (int i = 0; i < n; i++) {
            arr25[i] = in.nextInt();
        }
        int[] arr26 = new int[n];
        for (int i = 0; i < n; i++) {
            arr26[i] = in.nextInt();
        }
        int[] arr27 = new int[n];
        for (int i = 0; i < n; i++) {
            arr27[i] = in.nextInt();
        }
        int[] arr28 = new int[n];
        for (int i = 0; i < n; i++) {
            arr28[i] = in.nextInt();
        }
        int[] arr29 = new int[n];
        for (int i = 0; i < n; i++) {
            arr29[i] = in.nextInt();
        }
        int[] arr30 = new int[n];
        for (int i = 0; i < n; i++) {
            arr30[i] = in.nextInt();
        }
        int[] arr31 = new int[n];
        for (int i = 0; i < n; i++) {
            arr31[i] = in.nextInt();
        }
        int[] arr32 = new int[n];
        for (int i = 0; i < n; i++) {
            arr32[i] = in.nextInt();
        }
        int[] arr33 = new int[n];","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n;
        n = in.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = in.nextInt();
        }
        int[] arr2 = new int[n];
        for (int i = 0; i < n; i++) {
            arr2[i] = in.nextInt();
        }
        int[] arr3 = new int[n];
        for (int i = 0; i < n; i++) {
            arr3[i] = in.nextInt();
        }
        int[] arr4 = new int[n];
        for (int i = 0; i < n; i++) {
            arr4[i] = in.nextInt();
        }
        int[] arr5 = new int[n];
        for (int i = 0; i < n; i++) {
            arr5[i] = in.nextInt();
        }
        int[] arr6 = new int[n];
        for (int i = 0; i < n; i++) {
            arr6[i] = in.nextInt();
        }
        int[] arr7 = new int[n];
        for (int i = 0; i < n; i++) {
            arr7[i] = in.nextInt();
        }
        int[] arr8 = new int[n];
        for (int i = 0; i < n; i++) {
            arr8[i] = in.nextInt();
        }
        int[] arr9 = new int[n];
        for (int i = 0; i < n; i++) {
            arr9[i] = in.nextInt();
        }
        int[] arr10 = new int[n];
        for (int i = 0; i < n; i++) {
            arr10[i] = in.nextInt();
        }
        int[] arr11 = new int[n];
        for (int i = 0; i < n; i++) {
            arr11[i] = in.nextInt();
        }
        int[] arr12 = new int[n];
        for (int i = 0; i < n; i++) {
            arr12[i] = in.nextInt();
        }
        int[] arr13 = new int[n];
        for (int i = 0; i < n; i++) {
            arr13[i] = in.nextInt();
        }
        int[] arr14 = new int[n];
        for (int i = 0; i < n; i++) {
            arr14[i] = in.nextInt();
        }
        int[] arr15 = new int[n];
        for (int i = 0; i < n; i++) {
            arr15[i] = in.nextInt();
        }
        int[] arr16 = new int[n];
        for (int i = 0; i < n; i++) {
            arr16[i] = in.nextInt();
        }
        int[] arr17 = new int[n];
        for (int i = 0; i < n; i++) {
            arr17[i] = in.nextInt();
        }
        int[] arr18 = new int[n];
        for (int i = 0; i < n; i++) {
            arr18[i] = in.nextInt();
        }
        int[] arr19 = new int[n];
        for (int i = 0; i < n; i++) {
            arr19[i] = in.nextInt();
        }
        int[] arr20 = new int[n];
        for (int i = 0; i < n; i++) {
            arr20[i] = in.nextInt();
        }
        int[] arr21 = new int[n];
        for (int i = 0; i < n; i++) {
            arr21[i] = in.nextInt();
        }
        int[] arr22 = new int[n];
        for (int i = 0; i < n; i++) {
            arr22[i] = in.nextInt();
        }
        int[] arr23 = new int[n];
        for (int i = 0; i < n; i++) {
            arr23[i] = in.nextInt();
        }
        int[] arr24 = new int[n];
        for (int i = 0; i < n; i++) {
            arr24[i] = in.nextInt();
        }
        int[] arr25 = new int[n];
        for (int i = 0; i < n; i++) {
            arr25[i] = in.nextInt();
        }
        int[] arr26 = new int[n];
        for (int i = 0; i < n; i++) {
            arr26[i] = in.nextInt();
        }
        int[] arr27 = new int[n];
        for (int i = 0; i < n; i++) {
            arr27[i] = in.nextInt();
        }
        int[] arr28 = new int[n];
        for (int i = 0; i < n; i++) {
            arr28[i] = in.nextInt();
        }
        int[] arr29 = new int[n];
        for (int i = 0; i < n; i++) {
            arr29[i] = in.nextInt();
        }
        int[] arr30 = new int[n];
        for (int i = 0; i < n; i++) {
            arr30[i] = in.nextInt();
        }
        int[] arr31 = new int[n];
        for (int i = 0; i < n; i++) {
            arr31[i] = in.nextInt();
        }
        int[] arr32 = new int[n];
        for (int i = 0; i < n; i++) {
            arr32[i] = in.nextInt();
        }
        int[] arr33 = new int[n];"
CodeGen,codenet,C++,Java,s384319383.java,"import java.io.*;
import java.util.*;

public class s384319383 {
   public static void main(String[] args) throws IOException {
       BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
       String s;
       while ((s = br.readLine())!= null) {
           int n = Integer.parseInt(s);
           char[] c = br.readLine().toCharArray();
           int[] cnt = new int[26];
           for (int i = 0; i < n; ++i) {
               cnt[c[i] - 'a']++;
           }
           int ans = cnt[0];
           for (int i = 1; i < 26; ++i) {
               ans *= cnt[i];
               ans %= MOD;
           }
           System.out.println(ans - 1);
       }
   }
}","import java.io.*;
import java.util.*;

public class Main {
   public static void main(String[] args) throws IOException {
       BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
       String s;
       while ((s = br.readLine())!= null) {
           int n = Integer.parseInt(s);
           char[] c = br.readLine().toCharArray();
           int[] cnt = new int[26];
           for (int i = 0; i < n; ++i) {
               cnt[c[i] - 'a']++;
           }
           int ans = cnt[0];
           for (int i = 1; i < 26; ++i) {
               ans *= cnt[i];
               ans %= MOD;
           }
           System.out.println(ans - 1);
       }
   }
}"
CodeGen,codenet,C++,Java,s501065052.java,"public class s501065052 {
    public int findLengthOfLCIS(int[] nums) {
        int len = nums.length;
        if (len == 0) return 0;
        int[] mem = new int[len];
        int max = 1;
        int cnt = 1;
        for (int i = 1; i < len; i++) {
            if (nums[i] < nums[i - 1]) {
                cnt++;
            } else {
                max = Math.max(max, cnt);
                cnt = 1;
            }
            mem[i] = cnt;
        }
        max = Math.max(max, cnt);
        cnt = 1;
        for (int i = len - 1; i >= 1; i--) {
            if (nums[i] > nums[i - 1]) {
                cnt++;
            } else {
                max = Math.max(max, cnt);
                cnt = 1;
            }
            mem[i] = cnt;
        }
        return len - max;
    }
}","public class Main {
    public int findLengthOfLCIS(int[] nums) {
        int len = nums.length;
        if (len == 0) return 0;
        int[] mem = new int[len];
        int max = 1;
        int cnt = 1;
        for (int i = 1; i < len; i++) {
            if (nums[i] < nums[i - 1]) {
                cnt++;
            } else {
                max = Math.max(max, cnt);
                cnt = 1;
            }
            mem[i] = cnt;
        }
        max = Math.max(max, cnt);
        cnt = 1;
        for (int i = len - 1; i >= 1; i--) {
            if (nums[i] > nums[i - 1]) {
                cnt++;
            } else {
                max = Math.max(max, cnt);
                cnt = 1;
            }
            mem[i] = cnt;
        }
        return len - max;
    }
}"
CodeGen,codenet,C++,Java,s151802561.java,"public class s151802561 {
    public int[] sortArrayByParityII(int[] A) {
        int[] res = new int[A.length];
        int i = 0, j = A.length - 1;
        int t;
        while (i < j) {
            if (A[i] % 2 == 0) {
                t = A[i];
                A[i] = A[j];
                A[j] = t;
                j--;
            } else {
                i++;
            }
        }
        for (i = 0; i < A.length; i++) {
            res[i] = A[i];
        }
        return res;
    }
}","public class Main {
    public int[] sortArrayByParityII(int[] A) {
        int[] res = new int[A.length];
        int i = 0, j = A.length - 1;
        int t;
        while (i < j) {
            if (A[i] % 2 == 0) {
                t = A[i];
                A[i] = A[j];
                A[j] = t;
                j--;
            } else {
                i++;
            }
        }
        for (i = 0; i < A.length; i++) {
            res[i] = A[i];
        }
        return res;
    }
}"
CodeGen,codenet,C++,Java,s837925207.java,"public class s837925207 {
    public int maxProfit(int k, int[] prices) {
        int n = prices.length;
        if (n < 2) return 0;
        int[] h = new int[n];
        int[] w = new int[n];
        for (int i = 0; i < n; i++) {
            h[i] = prices[i];
            w[i] = 0;
        }
        for (int i = 1; i < n; i++) {
            for (int j = i - 1; j >= 0; j--) {
                if (prices[i] > prices[j]) {
                    w[i] = Math.max(w[i], w[j] + prices[i] - prices[j]);
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans = Math.max(ans, w[i]);
        }
        return ans;
    }
}","public class Main {
    public int maxProfit(int k, int[] prices) {
        int n = prices.length;
        if (n < 2) return 0;
        int[] h = new int[n];
        int[] w = new int[n];
        for (int i = 0; i < n; i++) {
            h[i] = prices[i];
            w[i] = 0;
        }
        for (int i = 1; i < n; i++) {
            for (int j = i - 1; j >= 0; j--) {
                if (prices[i] > prices[j]) {
                    w[i] = Math.max(w[i], w[j] + prices[i] - prices[j]);
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans = Math.max(ans, w[i]);
        }
        return ans;
    }
}"
CodeGen,codenet,C++,Java,s778828888.java,"public class s778828888 {
    public int findMin(int[] nums) {
        int n = nums.length;
        int l = 0, r = n - 1;
        int min = nums[l];
        while (l < r) {
            int mid = l + (r - l) / 2;
            if (nums[mid] > nums[r]) {
                l = mid + 1;
            } else {
                r = mid;
            }
        }
        return nums[l] < nums[r]? nums[l] : nums[r];
    }
}","public class Main {
    public int findMin(int[] nums) {
        int n = nums.length;
        int l = 0, r = n - 1;
        int min = nums[l];
        while (l < r) {
            int mid = l + (r - l) / 2;
            if (nums[mid] > nums[r]) {
                l = mid + 1;
            } else {
                r = mid;
            }
        }
        return nums[l] < nums[r]? nums[l] : nums[r];
    }
}"
CodeGen,codenet,C++,Java,s097779718.java,"public class s097779718 {
	public static void main(String[] args) {
		long a = Long.parseLong(args[0]);
		long b = Long.parseLong(args[1]);
		System.out.println(a * b / gcd(a, b));
	}

	public static long gcd(long a, long b) {
		if (b == 0) return a;
		return gcd(b, a % b);
	}
}","public class Main {
	public static void main(String[] args) {
		long a = Long.parseLong(args[0]);
		long b = Long.parseLong(args[1]);
		System.out.println(a * b / gcd(a, b));
	}

	public static long gcd(long a, long b) {
		if (b == 0) return a;
		return gcd(b, a % b);
	}
}"
CodeGen,codenet,C++,Java,s864662146.java,"public class s864662146 {
    public int maxSubArray(int[] A) {
        int m = A[0];
        int M = A[0];
        for (int i = 0; i < A.length; i++) {
            if (A[i] < m) m = A[i];
            if (A[i] > M) M = A[i];
        }
        return M - m;
    }
}","public class Main {
    public int maxSubArray(int[] A) {
        int m = A[0];
        int M = A[0];
        for (int i = 0; i < A.length; i++) {
            if (A[i] < m) m = A[i];
            if (A[i] > M) M = A[i];
        }
        return M - m;
    }
}"
CodeGen,codenet,C++,Java,s391054810.java,"public class s391054810 {
    public int[][] imageSmoother(int[][] M) {
        int[][] result = new int[M.length][M[0].length];
        for (int i = 0; i < M.length; i++) {
            for (int j = 0; j < M[0].length; j++) {
                int sum = 0;
                for (int k = -1; k <= 1; k++) {
                    for (int l = -1; l <= 1; l++) {
                        sum += M[i + k][j + l];
                    }
                }
                result[i][j] = sum / 9;
            }
        }
        return result;
    }
}","public class Main {
    public int[][] imageSmoother(int[][] M) {
        int[][] result = new int[M.length][M[0].length];
        for (int i = 0; i < M.length; i++) {
            for (int j = 0; j < M[0].length; j++) {
                int sum = 0;
                for (int k = -1; k <= 1; k++) {
                    for (int l = -1; l <= 1; l++) {
                        sum += M[i + k][j + l];
                    }
                }
                result[i][j] = sum / 9;
            }
        }
        return result;
    }
}"
CodeGen,codenet,C++,Java,s754383079.java,"public class s754383079 {
    public int minDistance(String word1, String word2) {
        int n = word1.length();
        int m = word2.length();
        int[][] dp = new int[n + 1][m + 1];
        for (int i = 0; i <= n; i++) {
            dp[i][0] = i;
        }
        for (int j = 0; j <= m; j++) {
            dp[0][j] = j;
        }
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                if (word1.charAt(i - 1) == word2.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1];
                } else {
                    dp[i][j] = Math.min(Math.min(dp[i - 1][j], dp[i][j - 1]), dp[i - 1][j - 1]) + 1;
                }
            }
        }
        return dp[n][m];
    }
}","public class Main {
    public int minDistance(String word1, String word2) {
        int n = word1.length();
        int m = word2.length();
        int[][] dp = new int[n + 1][m + 1];
        for (int i = 0; i <= n; i++) {
            dp[i][0] = i;
        }
        for (int j = 0; j <= m; j++) {
            dp[0][j] = j;
        }
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                if (word1.charAt(i - 1) == word2.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1];
                } else {
                    dp[i][j] = Math.min(Math.min(dp[i - 1][j], dp[i][j - 1]), dp[i - 1][j - 1]) + 1;
                }
            }
        }
        return dp[n][m];
    }
}"
CodeGen,codenet,C++,Java,s472290172.java,"public class s472290172 {
    public int findMaxLength(String s) {
        int max = 0, cnt = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == 'A' || s.charAt(i) == 'C' || s.charAt(i) == 'G' || s.charAt(i) == 'T') {
                cnt++;
            } else {
                cnt = 0;
            }
            max = max < cnt? cnt : max;
        }
        return max;
    }
}","public class Main {
    public int findMaxLength(String s) {
        int max = 0, cnt = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == 'A' || s.charAt(i) == 'C' || s.charAt(i) == 'G' || s.charAt(i) == 'T') {
                cnt++;
            } else {
                cnt = 0;
            }
            max = max < cnt? cnt : max;
        }
        return max;
    }
}"
CodeGen,codenet,C++,Java,s259332673.java,"public class s259332673 {
    public int difference(int h1, int m1, int h2, int m2, int k) {
        int ans = h2*60+m2-(h1*60+m1);
        
        return ans-k;
    }
}","public class Main {
    public int difference(int h1, int m1, int h2, int m2, int k) {
        int ans = h2*60+m2-(h1*60+m1);
        
        return ans-k;
    }
}"
CodeGen,codenet,C++,Java,s353226283.java,"public class s353226283 {
    public int findKthLargest(int[] nums, int k) {
        int n = nums.length;
        if (n == 0) return 0;
        if (k > n) return 0;
        if (k == n) return nums[n - 1];
        int[] heap = new int[n];
        for (int i = 0; i < n; i++) {
            heap[i] = nums[i];
        }
        for (int i = n / 2; i >= 0; i--) {
            heapify(heap, i, n);
        }
        for (int i = n - 1; i >= k - 1; i--) {
            heap[0] = heap[i];
            heap[i] = nums[i];
            heapify(heap, 0, i);
        }
        return heap[k - 1];
    }
    
    private void heapify(int[] heap, int i, int n) {
        int l = 2 * i + 1;
        int r = 2 * i + 2;
        int largest = i;
        if (l < n && heap[l] > heap[i]) largest = l;
        if (r < n && heap[r] > heap[largest]) largest = r;
        if (largest!= i) {
            int temp = heap[i];
            heap[i] = heap[largest];
            heap[largest] = temp;
            heapify(heap, largest, n);
        }
    }
}","public class Main {
    public int findKthLargest(int[] nums, int k) {
        int n = nums.length;
        if (n == 0) return 0;
        if (k > n) return 0;
        if (k == n) return nums[n - 1];
        int[] heap = new int[n];
        for (int i = 0; i < n; i++) {
            heap[i] = nums[i];
        }
        for (int i = n / 2; i >= 0; i--) {
            heapify(heap, i, n);
        }
        for (int i = n - 1; i >= k - 1; i--) {
            heap[0] = heap[i];
            heap[i] = nums[i];
            heapify(heap, 0, i);
        }
        return heap[k - 1];
    }
    
    private void heapify(int[] heap, int i, int n) {
        int l = 2 * i + 1;
        int r = 2 * i + 2;
        int largest = i;
        if (l < n && heap[l] > heap[i]) largest = l;
        if (r < n && heap[r] > heap[largest]) largest = r;
        if (largest!= i) {
            int temp = heap[i];
            heap[i] = heap[largest];
            heap[largest] = temp;
            heapify(heap, largest, n);
        }
    }
}"
CodeGen,codenet,C++,Java,s605014348.java,"public class s605014348 {
    public int divide(int dividend, int divisor) {
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isPositive = (dividend > 0 && divisor > 0) || (dividend < 0 && divisor < 0);
        boolean isNegative = (dividend > 0 && divisor < 0) || (dividend < 0 && divisor > 0);
        if (isPositive && isNegative) {
            return 0;
        }
        if (isPositive) {
            return Integer.MAX_VALUE;
        }
        if (isNegative) {
            return -1;
        }
        if (dividend == 0) {
            return 0;
        }
        if (dividend == Integer.MIN_VALUE) {
            return Integer.MAX_VALUE;
        }
        if (divisor == 1) {
            return dividend;
        }
        int sign = 1;
        if (dividend < 0) {
            sign = -1;
        }
        if (divisor < 0) {
            sign = -sign;
        }
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        int res = 0;
        while (a >= b) {
            int c = 1;
            while (a >= (b << c)) {
                c++;
            }
            a -= b << (c - 1);
            res += c;
        }
        return sign * res;
    }
}","public class Main {
    public int divide(int dividend, int divisor) {
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isPositive = (dividend > 0 && divisor > 0) || (dividend < 0 && divisor < 0);
        boolean isNegative = (dividend > 0 && divisor < 0) || (dividend < 0 && divisor > 0);
        if (isPositive && isNegative) {
            return 0;
        }
        if (isPositive) {
            return Integer.MAX_VALUE;
        }
        if (isNegative) {
            return -1;
        }
        if (dividend == 0) {
            return 0;
        }
        if (dividend == Integer.MIN_VALUE) {
            return Integer.MAX_VALUE;
        }
        if (divisor == 1) {
            return dividend;
        }
        int sign = 1;
        if (dividend < 0) {
            sign = -1;
        }
        if (divisor < 0) {
            sign = -sign;
        }
        long a = Math.abs((long) dividend);
        long b = Math.abs((long) divisor);
        int res = 0;
        while (a >= b) {
            int c = 1;
            while (a >= (b << c)) {
                c++;
            }
            a -= b << (c - 1);
            res += c;
        }
        return sign * res;
    }
}"
CodeGen,codenet,C++,Java,s050708710.java,"public class s050708710 {
    public int totalNQueens(int n) {
        int[] cols = new int[n];
        int[] rows = new int[n];
        int[] diags = new int[2 * n - 1];
        int[] antiDiags = new int[2 * n - 1];
        return totalNQueens(n, cols, rows, diags, antiDiags);
    }
    
    public int totalNQueens(int n, int[] cols, int[] rows, int[] diags, int[] antiDiags) {
        if (n == 0) return 0;
        int total = 0;
        for (int i = 0; i < n; i++) {
            cols[i] = rows[i] = diags[i] = antiDiags[i] = -1;
        }
        for (int i = 0; i < n; i++) {
            if (isValid(i, cols, rows, diags, antiDiags)) {
                cols[i] = rows[i] = diags[i] = antiDiags[i] = i;
                total++;
            }
        }
        return total;
    }
    
    public boolean isValid(int i, int[] cols, int[] rows, int[] diags, int[] antiDiags) {
        for (int j = 0; j < i; j++) {
            if (cols[i] == cols[j] || rows[i] == rows[j] || diags[i] == diags[j] || antiDiags[i] == antiDiags[j]) {
                return false;
            }
        }
        return true;
    }
}","public class Main {
    public int totalNQueens(int n) {
        int[] cols = new int[n];
        int[] rows = new int[n];
        int[] diags = new int[2 * n - 1];
        int[] antiDiags = new int[2 * n - 1];
        return totalNQueens(n, cols, rows, diags, antiDiags);
    }
    
    public int totalNQueens(int n, int[] cols, int[] rows, int[] diags, int[] antiDiags) {
        if (n == 0) return 0;
        int total = 0;
        for (int i = 0; i < n; i++) {
            cols[i] = rows[i] = diags[i] = antiDiags[i] = -1;
        }
        for (int i = 0; i < n; i++) {
            if (isValid(i, cols, rows, diags, antiDiags)) {
                cols[i] = rows[i] = diags[i] = antiDiags[i] = i;
                total++;
            }
        }
        return total;
    }
    
    public boolean isValid(int i, int[] cols, int[] rows, int[] diags, int[] antiDiags) {
        for (int j = 0; j < i; j++) {
            if (cols[i] == cols[j] || rows[i] == rows[j] || diags[i] == diags[j] || antiDiags[i] == antiDiags[j]) {
                return false;
            }
        }
        return true;
    }
}"
CodeGen,codenet,C++,Java,s107204188.java,"public class s107204188 {
    public int findMinDifference(int[] timePoints) {
        int minA = 1000000000;
        int num = 0;
        
        int n = timePoints.length;
        
        int t,f = 0;
        
        for(int i = 0; i < n; i++){
            t = timePoints[i];
            
            if(minA > t){
                minA = t;
            }else{
                
                if(f == t - minA)num++;
                else if(f < t - minA){
                    num = 1;
                    f = t - minA;
                }
                
            }
        }
        
        return num;
    }
}","public class Main {
    public int findMinDifference(int[] timePoints) {
        int minA = 1000000000;
        int num = 0;
        
        int n = timePoints.length;
        
        int t,f = 0;
        
        for(int i = 0; i < n; i++){
            t = timePoints[i];
            
            if(minA > t){
                minA = t;
            }else{
                
                if(f == t - minA)num++;
                else if(f < t - minA){
                    num = 1;
                    f = t - minA;
                }
                
            }
        }
        
        return num;
    }
}"
CodeGen,codenet,C++,Java,s296046823.java,"public class s296046823 {
    public int findKthLargest(int[] nums, int k) {
        int n = nums.length;
        int[] heap = new int[n];
        for (int i = 0; i < n; i++) {
            heap[i] = nums[i];
        }
        for (int i = n / 2; i >= 0; i--) {
            heapify(heap, i, n);
        }
        for (int i = n - 1; i > 0; i--) {
            int temp = heap[0];
            heap[0] = heap[i];
            heap[i] = temp;
            heapify(heap, 0, i);
        }
        return heap[k - 1];
    }

    private void heapify(int[] heap, int i, int n) {
        int l = 2 * i + 1;
        int r = 2 * i + 2;
        int largest = i;
        if (l < n && heap[l] > heap[largest]) largest = l;
        if (r < n && heap[r] > heap[largest]) largest = r;
        if (largest!= i) {
            int temp = heap[i];
            heap[i] = heap[largest];
            heap[largest] = temp;
            heapify(heap, largest, n);
        }
    }
}","public class Main {
    public int findKthLargest(int[] nums, int k) {
        int n = nums.length;
        int[] heap = new int[n];
        for (int i = 0; i < n; i++) {
            heap[i] = nums[i];
        }
        for (int i = n / 2; i >= 0; i--) {
            heapify(heap, i, n);
        }
        for (int i = n - 1; i > 0; i--) {
            int temp = heap[0];
            heap[0] = heap[i];
            heap[i] = temp;
            heapify(heap, 0, i);
        }
        return heap[k - 1];
    }

    private void heapify(int[] heap, int i, int n) {
        int l = 2 * i + 1;
        int r = 2 * i + 2;
        int largest = i;
        if (l < n && heap[l] > heap[largest]) largest = l;
        if (r < n && heap[r] > heap[largest]) largest = r;
        if (largest!= i) {
            int temp = heap[i];
            heap[i] = heap[largest];
            heap[largest] = temp;
            heapify(heap, largest, n);
        }
    }
}"
CodeGen,codenet,C++,Java,s876796799.java,"public class s876796799 {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] ind_a = new int[numCourses];
        for (int i = 0; i < numCourses; i++) {
            ind_a[i] = i;
        }
        int N = numCourses;
        for (int i = 0; i < prerequisites.length; i++) {
            int x = ind_a[prerequisites[i][0] - 1];
            int y = ind_a[prerequisites[i][1] - 1];
            ind_a[x] = Math.min(ind_a[x], Math.min(ind_a[y], y));
        }
        int[] ans = new int[N];
        for (int i = 0; i < N; i++) {
            ans[ind_a[i] - 1] = i + 1;
        }
        return ans;
    }
}","public class Main {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] ind_a = new int[numCourses];
        for (int i = 0; i < numCourses; i++) {
            ind_a[i] = i;
        }
        int N = numCourses;
        for (int i = 0; i < prerequisites.length; i++) {
            int x = ind_a[prerequisites[i][0] - 1];
            int y = ind_a[prerequisites[i][1] - 1];
            ind_a[x] = Math.min(ind_a[x], Math.min(ind_a[y], y));
        }
        int[] ans = new int[N];
        for (int i = 0; i < N; i++) {
            ans[ind_a[i] - 1] = i + 1;
        }
        return ans;
    }
}"
CodeGen,codenet,C++,Java,s661446851.java,"/*------------------------------------
........Bismillahir Rahmanir Rahim....
..........created by Abdul Aziz.......
------------------------------------*/
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.regex.*;

public class s661446851 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        in.nextLine();
        for (int i = 0; i < n; i++) {
            System.out.println(in.nextLine());
        }
    }
}","/*------------------------------------
........Bismillahir Rahmanir Rahim....
..........created by Abdul Aziz.......
------------------------------------*/
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.regex.*;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        in.nextLine();
        for (int i = 0; i < n; i++) {
            System.out.println(in.nextLine());
        }
    }
}"
CodeGen,codenet,C++,Java,s628937234.java,"import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class s628937234 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        String t = s.substring(0, 2) + s.substring(s.length() - 2, s.length());
        t += s.substring(s.length() - 1);
        System.out.println(t);
    }
}","import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        String t = s.substring(0, 2) + s.substring(s.length() - 2, s.length());
        t += s.substring(s.length() - 1);
        System.out.println(t);
    }
}"
