model,dataset,source,target,file,invalid,valid
ChatGPT,avatar,Python,Java,atcoder_ABC107_D.java,"class BIT {
    int size;
    int[] tree;
    int depth;

    public BIT(int N) {
        size = N;
        tree = new int[N + 1];
        depth = Integer.bitCount(N);
    }

    private int _bitsum(int i) {
        int ret = 0;
        while (i != 0) {
            ret += tree[i];
            i ^= i & -i;
        }
        return ret;
    }

    public int bitsum(int l, Integer r) {
        if (r == null) {
            return _bitsum(l);
        } else {
            return _bitsum(r) - _bitsum(l);
        }
    }

    public void bitadd(int i, int x) {
        i += 1;
        while (i <= size) {
            tree[i] += x;
            i += i & -i;
        }
    }
}

public class atcoder_ABC107_D {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = n * (n + 1) / 4;
        int[] a = new int[n];
        Map<Integer, Integer> d = new HashMap<>();
        List<Integer> _a = new ArrayList<>();
        
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
            _a.add(a[i]);
        }
        
        _a.add(0);
        Collections.sort(_a);
        
        for (int i = 0; i < _a.size(); i++) {
            d.put(_a.get(i), i);
        }
        
        for (int i = 0; i < n; i++) {
            a[i] = d.get(a[i]);
        }
        
        int[] b = new int[n + 1];
        for (int i = 0; i < n; i++) {
            b[i + 1] = b[i] + (a[i] >= X ? 2 : -1);
        }
        
        int c = Integer.MAX_VALUE;
        for (int i = 0; i <= n; i++) {
            c = Math.min(c, b[i]);
        }
        
        for (int i = 0; i <= n; i++) {
            b[i] -= c;
        }
        
        BIT bit = new BIT(Collections.max(Arrays.asList(b)) + 2);
        
        int ans = 0;
        for (int i = 0; i <= n; i++) {
            ans += bit.bitsum(b[i] + 1);
            bit.bitadd(b[i], 1);
        }
        
        if (ans >= m) {
            System.out.println(_a.get(1));
        } else {
            System.out.println(_a.get(0));
        }
    }
}","import java.util.*;

class BIT {
    int size;
    int[] tree;
    int depth;

    public BIT(int N) {
        size = N;
        tree = new int[N + 1];
        depth = Integer.bitCount(N);
    }

    private int _bitsum(int i) {
        int ret = 0;
        while (i != 0) {
            ret += tree[i];
            i ^= i & -i;
        }
        return ret;
    }

    public int bitsum(int l, Integer r) {
        if (r == null) {
            return _bitsum(l);
        } else {
            return _bitsum(r) - _bitsum(l);
        }
    }

    public void bitadd(int i, int x) {
        i += 1;
        while (i <= size) {
            tree[i] += x;
            i += i & -i;
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = n * (n + 1) / 4;
        int[] a = new int[n];
        Map<Integer, Integer> d = new HashMap<>();
        List<Integer> _a = new ArrayList<>();
        
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
            _a.add(a[i]);
        }
        
        _a.add(0);
        Collections.sort(_a);
        
        for (int i = 0; i < _a.size(); i++) {
            d.put(_a.get(i), i);
        }
        
        for (int i = 0; i < n; i++) {
            a[i] = d.get(a[i]);
        }
        
        int[] b = new int[n + 1];
        Arrays.fill(b, 0);
        for (int i = 0; i < n; i++) {
            b[i + 1] = b[i] + (a[i] >= ((b[0] + b[1]) / 2) ? 2 : -1);
        }
        
        int c = Integer.MAX_VALUE;
        for (int i = 0; i <= n; i++) {
            c = Math.min(c, b[i]);
        }
        
        for (int i = 0; i <= n; i++) {
            b[i] -= c;
        }
        
        int maxB = 0;
        for (int x : b) {
            maxB = Math.max(maxB, x); 
        }
        BIT bit = new BIT(maxB + 2);
        
        int ans = 0;
        for (int i = 0; i <= n; i++) {
            ans += bit.bitsum(b[i] + 1, null);
            bit.bitadd(b[i], 1);
        }
        
        if (ans >= m) {
            System.out.println(_a.get(1));
        } else {
            System.out.println(_a.get(0));
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_456_A.java,"int n = Integer.parseInt(scanner.nextLine());
List<int[]> m = new ArrayList<>();
for (int i = 0; i < n; i++) {
    String[] input = scanner.nextLine().split("" "");
    int[] row = new int[input.length];
    for (int j = 0; j < input.length; j++) {
        row[j] = Integer.parseInt(input[j]);
    }
    m.add(row);
}
Collections.sort(m, new Comparator<int[]>() {
    @Override
    public int compare(int[] a, int[] b) {
        return Integer.compare(b[0], a[0]);
    }
});
int[] a = m.get(0);
for (int i = 1; i < m.size(); i++) {
    int[] current = m.get(i);
    if (current[1] > a[1]) {
        System.out.println(""Happy Alex"");
        break;
    }
    a = current;
}
if (m.size() == 1 || m.size() == 0) {
    System.out.println(""Poor Alex"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        List<int[]> m = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            String[] input = scanner.nextLine().split("" "");
            int[] row = new int[input.length];
            for (int j = 0; j < input.length; j++) {
                row[j] = Integer.parseInt(input[j]);
            }
            m.add(row);
        }
        Collections.sort(m, new Comparator<int[]>() {
            @Override
            public int compare(int[] a, int[] b) {
                return Integer.compare(b[0], a[0]);
            }
        });
        int[] a = m.get(0);
        for (int i = 1; i < m.size(); i++) {
            int[] current = m.get(i);
            if (current[1] > a[1]) {
                System.out.println(""Happy Alex"");
                break;
            }
            a = current;
        }
        if (m.size() == 1 || m.size() == 0) {
            System.out.println(""Poor Alex"");
        } 
    }
}"
ChatGPT,avatar,Python,Java,codeforces_651_A.java,"int x, y;
Scanner scanner = new Scanner(System.in);
x = scanner.nextInt();
y = scanner.nextInt();
System.out.println(Math.max(x + y - 3 + ((y - x) % 3 > 0), 0));","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int x, y;
        Scanner scanner = new Scanner(System.in);
        x = scanner.nextInt();
        y = scanner.nextInt();
        System.out.println(Math.max(x + y - 3 + (((y - x) % 3 + 3) % 3 > 0 ? 1 : 0), 0));
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC021_B.java,"import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class atcoder_AGC021_B {
    public static void main(String[] args) {
        int N;
        List<Integer> XY = new ArrayList<>();
        List<Double> D;

        // Read input
        Scanner scanner = new Scanner(System.in);
        N = scanner.nextInt();
        for (int i = 0; i < 2 * N; i++) {
            XY.add(scanner.nextInt());
        }
        
        // Convert XY list to list of (x, y) tuples
        List<Pair<Integer, Integer>> points = new ArrayList<>();
        for (int i = 0; i < XY.size(); i += 2) {
            int x = XY.get(i);
            int y = XY.get(i + 1);
            points.add(new Pair<>(x, y));
        }
        
        // Calculate ans for each point
        for (int i = 0; i < N; i++) {
            int x = points.get(i).getKey();
            int y = points.get(i).getValue();
            
            D = new ArrayList<>();
            for (int j = 0; j < N; j++) {
                if (j != i) {
                    int X = points.get(j).getKey();
                    int Y = points.get(j).getValue();
                    double atan2Result = Math.atan2(X - x, Y - y);
                    D.add(atan2Result);
                }
            }
            
            D.sort(null);
            D.add(D.get(0) + 2 * Math.PI);
            
            double ans = 0;
            for (int j = 0; j < D.size() - 1; j++) {
                double a = D.get(j);
                double b = D.get(j + 1);
                if (b - a >= Math.PI) {
                    ans = (b - a) - Math.PI;
                }
            }
            
            System.out.println(ans / (2 * Math.PI));
        }
    }
}","import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.*;
import java.util.AbstractMap.SimpleEntry;

public class Main {
    public static void main(String[] args) {
        int N;
        List<Integer> XY = new ArrayList<>();
        List<Double> D;

        // Read input
        Scanner scanner = new Scanner(System.in);
        N = scanner.nextInt();
        for (int i = 0; i < 2 * N; i++) {
            XY.add(scanner.nextInt());
        }
        
        // Convert XY list to list of (x, y) tuples
        List<SimpleEntry<Integer, Integer>> points = new ArrayList<>();
        for (int i = 0; i < XY.size(); i += 2) {
            int x = XY.get(i);
            int y = XY.get(i + 1);
            points.add(new SimpleEntry<>(x, y));
        }
        
        // Calculate ans for each point
        for (int i = 0; i < N; i++) {
            int x = points.get(i).getKey();
            int y = points.get(i).getValue();
            
            D = new ArrayList<>();
            for (int j = 0; j < N; j++) {
                if (j != i) {
                    int X = points.get(j).getKey();
                    int Y = points.get(j).getValue();
                    double atan2Result = Math.atan2(X - x, Y - y);
                    D.add(atan2Result);
                }
            }
            
            D.sort(null);
            D.add(D.get(0) + 2 * Math.PI);
            
            double ans = 0;
            for (int j = 0; j < D.size() - 1; j++) {
                double a = D.get(j);
                double b = D.get(j + 1);
                if (b - a >= Math.PI) {
                    ans = (b - a) - Math.PI;
                }
            }
            
            System.out.println(ans / (2 * Math.PI));
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_612_B.java,"int n = Integer.parseInt(scanner.nextLine());
int[] a = Arrays.stream(scanner.nextLine().split("" "")).mapToInt(Integer::parseInt).toArray();
int[] b = new int[n];
for (int i = 0; i < n; i++) {
    b[a[i] - 1] = i;
}
int res = 0;
for (int i = 1; i < n; i++) {
    res += Math.abs(b[i] - b[i - 1]);
}
System.out.println(res);","import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            b[a[i] - 1] = i;
        }
        int res = 0;
        for (int i = 1; i < n; i++) {
            res += Math.abs(b[i] - b[i - 1]);
        }
        System.out.println(res);  
    }
}"
ChatGPT,avatar,Python,Java,codeforces_632_B.java,"public class codeforces_632_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        scanner.nextLine();
        String[] piecesInput = scanner.nextLine().split("" "");
        String[] typesInput = scanner.nextLine().split("" "");
        int[] pieces = new int[piecesInput.length];
        String[] types = new String[typesInput.length];
        for (int i = 0; i < piecesInput.length; i++) {
            pieces[i] = Integer.parseInt(piecesInput[i]);
            types[i] = typesInput[i];
        }
        System.out.println(bobMaxStrength(pieces, types));
    }

    public static int bobMaxStrength(int[] pieces, String[] types) {
        int pScore = 0;
        int sScore = 0;
        int pMaxScore = 0;
        int sMaxScore = 0;
        for (int i = 0; i < pieces.length; i++) {
            if (types[i].equals(""B"")) {
                pScore += pieces[i];
                sScore += pieces[i];
            }
        }
        pMaxScore = pScore;
        sMaxScore = sScore;

        for (int i = 0; i < pieces.length; i++) {
            if (types[i].equals(""A"")) {
                pScore += pieces[i];
                if (pScore > pMaxScore) {
                    pMaxScore = pScore;
                }
            } else {
                pScore -= pieces[i];
            }
        }

        for (int i = pieces.length - 1; i >= 0; i--) {
            if (types[i].equals(""A"")) {
                sScore += pieces[i];
                if (sScore > sMaxScore) {
                    sMaxScore = sScore;
                }
            } else {
                sScore -= pieces[i];
            }
        }

        if (pMaxScore > sMaxScore) {
            return pMaxScore;
        } else {
            return sMaxScore;
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        scanner.nextLine();
        String[] piecesInput = scanner.nextLine().split("" "");
        String[] typesInput = scanner.nextLine().split("""");
        int[] pieces = new int[piecesInput.length];
        String[] types = new String[typesInput.length];
        for (int i = 0; i < piecesInput.length; i++) {
            pieces[i] = Integer.parseInt(piecesInput[i]);
            types[i] = typesInput[i];
        }
        System.out.println(bobMaxStrength(pieces, types));
    }

    public static int bobMaxStrength(int[] pieces, String[] types) {
        int pScore = 0;
        int sScore = 0;
        int pMaxScore = 0;
        int sMaxScore = 0;
        for (int i = 0; i < pieces.length; i++) {
            if (types[i].equals(""B"")) {
                pScore += pieces[i];
                sScore += pieces[i];
            }
        }
        pMaxScore = pScore;
        sMaxScore = sScore;

        for (int i = 0; i < pieces.length; i++) {
            if (types[i].equals(""A"")) {
                pScore += pieces[i];
                if (pScore > pMaxScore) {
                    pMaxScore = pScore;
                }
            } else {
                pScore -= pieces[i];
            }
        }

        for (int i = pieces.length - 1; i >= 0; i--) {
            if (types[i].equals(""A"")) {
                sScore += pieces[i];
                if (sScore > sMaxScore) {
                    sMaxScore = sScore;
                }
            } else {
                sScore -= pieces[i];
            }
        }

        if (pMaxScore > sMaxScore) {
            return pMaxScore;
        } else {
            return sMaxScore;
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC124_A.java,"int a = Integer.parseInt(input());
int b = Integer.parseInt(input());
int c = 0;

for (int i = 0; i < 2; i++) {
    c += Math.max(a, b);
    if (a >= b) {
        a -= 1;
    } else {
        b -= 1;
    }
}

System.out.println(c);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int c = 0;
        
        for (int i = 0; i < 2; i++) {
            c += Math.max(a, b);
            if (a >= b) {
                a -= 1;
            } else {
                b -= 1;
            }
        }
        
        System.out.println(c);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC174_C.java,"public class atcoder_ABC174_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int k = sc.nextInt();
        int t = 0;
        for (int i = 1; i <= k; i++) {
            t = (t % k) * 10 + 7;
            if (t % k == 0) {
                System.out.println(i);
                break;
            }
        }
        System.out.println(-1);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int k = sc.nextInt();
        int t = 0;
        for (int i = 1; i <= k; i++) {
            t = (t % k) * 10 + 7;
            if (t % k == 0) {
                System.out.println(i);
                break;
            }
        }
        if (t % k != 0) {
            System.out.println(-1);
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_154_A.java,"String s = input.nextLine();
int n = Integer.parseInt(input.nextLine());
int ans = 0;
for (int i = 0; i < n; i++) {
    String x = input.nextLine();
    int a = 0, b = 0;
    for (int j = 0; j < s.length(); j++) {
        if (s.charAt(j) == x.charAt(0)) {
            a += 1;
        } else if (s.charAt(j) == x.charAt(1)) {
            b += 1;
        } else {
            ans = ans + Math.min(a, b);
            a = 0;
            b = 0;
        }
    }
    ans = ans + Math.min(a, b);
}
System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String s = input.nextLine();
        int n = Integer.parseInt(input.nextLine());
        int ans = 0;
        for (int i = 0; i < n; i++) {
            String x = input.nextLine();
            int a = 0, b = 0;
            for (int j = 0; j < s.length(); j++) {
                if (s.charAt(j) == x.charAt(0)) {
                    a += 1;
                } else if (s.charAt(j) == x.charAt(1)) {
                    b += 1;
                } else {
                    ans = ans + Math.min(a, b);
                    a = 0;
                    b = 0;
                }
            }
            ans = ans + Math.min(a, b);
        }
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC149_C.java,"public class atcoder_ABC149_C {
    
    public static void main(String[] args) {
        int X = Integer.parseInt(args[0]);
        boolean[] prime = new boolean[100010];
        for (int i = 0; i < 100010; i++) {
            prime[i] = true;
        }
        prime[0] = false;
        prime[1] = false;
        
        for (int i = 4; i < 100010; i += 2) {
            prime[i] = false;
        }
        
        int i = 3;
        while (i * i <= 100008) {
            if (prime[i]) {
                for (int j = i + i; j < 100008; j += i) {
                    prime[j] = false;
                }
            }
            i += 2;
        }
        
        for (int i = X; i < 100008; i++) {
            if (prime[i]) {
                System.out.println(i);
                break;
            }
        }
    }
}","import java.util.*;

public class Main {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int X = scanner.nextInt();
        boolean[] prime = new boolean[100010];
        for (int i = 0; i < 100010; i++) {
            prime[i] = true;
        }
        prime[0] = false;
        prime[1] = false;
        
        for (int i = 4; i < 100010; i += 2) {
            prime[i] = false;
        }
        
        int i = 3;
        while (i * i <= 100008) {
            if (prime[i]) {
                for (int j = i + i; j < 100008; j += i) {
                    prime[j] = false;
                }
            }
            i += 2;
        }
        
        for (i = X; i < 100008; i++) {
            if (prime[i]) {
                System.out.println(i);
                break;
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_669_A.java,"int n = Integer.parseInt( input() );
System.out.println( ( n * 2 + 1 ) / 3 );","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        System.out.println( ( n * 2 + 1 ) / 3 );
    }
}"
ChatGPT,avatar,Python,Java,codeforces_665_A.java,"int a, at;
int b, bt;
int t1, t2;
Scanner scanner = new Scanner(System.in);
String[] input1 = scanner.nextLine().split("" "");
String[] input2 = scanner.nextLine().split("" "");
String[] input3 = scanner.nextLine().split("":"");
a = Integer.parseInt(input1[0]);
at = Integer.parseInt(input1[1]);
b = Integer.parseInt(input2[0]);
bt = Integer.parseInt(input2[1]);
t1 = Integer.parseInt(input3[0]);
t2 = Integer.parseInt(input3[1]);

int st = t2 + (t1 - 5) * 60;
int fin = st + at;
int now = 0;
int ans = 0;
while (now < fin && now < 1140) {
    if (now + bt > st) {
        ans++;
    }
    now += b;
}
System.out.println(ans);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int a, at;
        int b, bt;
        int t1, t2;
        Scanner scanner = new Scanner(System.in);
        String[] input1 = scanner.nextLine().split("" "");
        String[] input2 = scanner.nextLine().split("" "");
        String[] input3 = scanner.nextLine().split("":"");
        a = Integer.parseInt(input1[0]);
        at = Integer.parseInt(input1[1]);
        b = Integer.parseInt(input2[0]);
        bt = Integer.parseInt(input2[1]);
        t1 = Integer.parseInt(input3[0]);
        t2 = Integer.parseInt(input3[1]);
        
        int st = t2 + (t1 - 5) * 60;
        int fin = st + at;
        int now = 0;
        int ans = 0;
        while (now < fin && now < 1140) {
            if (now + bt > st) {
                ans++;
            }
            now += b;
        }
        System.out.println(ans);
    } 
}"
ChatGPT,avatar,Python,Java,codeforces_333_B.java,"int n, m;
Scanner sc = new Scanner(System.in);
n = sc.nextInt();
m = sc.nextInt();
int[] b = new int[n*2];
Arrays.fill(b, 1);
b[0] = b[n-1] = b[n] = b[2*n-1] = 0;
for (int i = 0; i < m; i++) {
    int r = sc.nextInt();
    int c = sc.nextInt();
    b[r-1] = b[n+c-1] = 0;
}
if (n % 2 == 1 && b[n/2] == 1 && b[n+n/2] == 1) {
    b[n/2] = 0;
}
int sum = 0;
for (int i = 0; i < b.length; i++) {
    sum += b[i];
}
System.out.println(sum);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int n, m;
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        m = sc.nextInt();
        int[] b = new int[n*2];
        Arrays.fill(b, 1);
        b[0] = b[n-1] = b[n] = b[2*n-1] = 0;
        for (int i = 0; i < m; i++) {
            int r = sc.nextInt();
            int c = sc.nextInt();
            b[r-1] = b[n+c-1] = 0;
        }
        if (n % 2 == 1 && b[n/2] == 1 && b[n+n/2] == 1) {
            b[n/2] = 0;
        }
        int sum = 0;
        for (int i = 0; i < b.length; i++) {
            sum += b[i];
        }
        System.out.println(sum); 
    } 
}"
ChatGPT,avatar,Python,Java,codeforces_148_B.java,"int princess = Integer.parseInt(scanner.nextLine());
int dragon = Integer.parseInt(scanner.nextLine());
int t = Integer.parseInt(scanner.nextLine());
int f = Integer.parseInt(scanner.nextLine());
int c = Integer.parseInt(scanner.nextLine());
if (dragon <= princess) {
    System.out.println(0);
    System.exit(0);
}
int result = 0;
int position = t * princess;
position += princess * position / (dragon - princess);
while (position < c) {
    result += 1;
    position += princess * position / dragon;
    position += princess * f;
    position += princess * position / (dragon - princess);
}
System.out.println(result);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int princess = Integer.parseInt(scanner.nextLine());
        int dragon = Integer.parseInt(scanner.nextLine());
        int t = Integer.parseInt(scanner.nextLine());
        int f = Integer.parseInt(scanner.nextLine());
        int c = Integer.parseInt(scanner.nextLine());
        if (dragon <= princess) {
            System.out.println(0);
            System.exit(0);
        }
        int result = 0;
        double position = t * princess;
        position += princess * position / (dragon - princess);
        while (position < c) {
            result += 1;
            position += princess * position / dragon;
            position += princess * f;
            position += princess * position / (dragon - princess);
        }
        System.out.println(result);
    }
}"
ChatGPT,avatar,Python,Java,codeforces_397_B.java,"public class codeforces_397_B {
    private String result;
    private int t;
    private List<int[]> queries;

    public codeforces_397_B() {
        this.result = """";
        this.t = 0;
        this.queries = new ArrayList<>();
    }

    public void readInput() {
        Scanner scanner = new Scanner(System.in);
        this.t = scanner.nextInt();
        for (int i = 0; i < this.t; i++) {
            int[] query = new int[3];
            for (int j = 0; j < 3; j++) {
                query[j] = scanner.nextInt();
            }
            this.queries.add(query);
        }
        scanner.close();
    }

    public void processTask() {
        List<String> res = new ArrayList<>();
        for (int[] query : this.queries) {
            int k = query[0] / query[1];
            res.add((k * query[2] >= query[0]) ? ""Yes"" : ""No"");
        }
        this.result = String.join(""\n"", res);
    }

    public String getResult() {
        return this.result;
    }

    public static void main(String[] args) {
        codeforces_397_B solution = new codeforces_397_B();
        solution.readInput();
        solution.processTask();
        System.out.println(solution.getResult());
    }
}","import java.util.*;

public class Main {
    private String result;
    private int t;
    private List<int[]> queries;

    public Main() {
        this.result = """";
        this.t = 0;
        this.queries = new ArrayList<>();
    }

    public void readInput() {
        Scanner scanner = new Scanner(System.in);
        this.t = scanner.nextInt();
        for (int i = 0; i < this.t; i++) {
            int[] query = new int[3];
            for (int j = 0; j < 3; j++) {
                query[j] = scanner.nextInt();
            }
            this.queries.add(query);
        }
        scanner.close();
    }

    public void processTask() {
        List<String> res = new ArrayList<>();
        for (int[] query : this.queries) {
            int k = query[0] / query[1];
            res.add((k * query[2] >= query[0]) ? ""Yes"" : ""No"");
        }
        this.result = String.join(""\n"", res);
    }

    public String getResult() {
        return this.result;
    }

    public static void main(String[] args) {
        Main solution = new Main();
        solution.readInput();
        solution.processTask();
        System.out.println(solution.getResult());
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC122_C.java,"import java.util.*;

public class atcoder_ABC122_C {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int q = scanner.nextInt();
        String s = scanner.next();
        int[][] problems = new int[q][2];
        for (int i = 0; i < q; i++) {
            problems[i][0] = scanner.nextInt();
            problems[i][1] = scanner.nextInt();
        }

        int[] cumsum = new int[n+1];
        cumsum[0] = 0;
        for (int i = 1; i <= n; i++) {
            cumsum[i] = count(cumsum[i-1], s, i);
        }

        for (int i = 0; i < q; i++) {
            int l = problems[i][0];
            int r = problems[i][1];
            System.out.println(cumsum[r] - cumsum[l-1]);
        }
    }

    public static int count(int total, String s, int i) {
        if (s.substring(i-1, i+1).equals(""AC"")) {
            return total + 1;
        } else {
            return total;
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int q = scanner.nextInt();
        scanner.nextLine();
        String s = scanner.nextLine();
        int[][] problems = new int[q][2];
        for (int i = 0; i < q; i++) {
            problems[i][0] = scanner.nextInt();
            problems[i][1] = scanner.nextInt();
        }

        int[] cumsum = new int[n+1];
        cumsum[0] = 0;
        for (int i = 1; i <= n; i++) {
            cumsum[i] = count(cumsum[i-1], s, i);
        }

        for (int i = 0; i < q; i++) {
            int l = problems[i][0];
            int r = problems[i][1];
            System.out.println(cumsum[r] - cumsum[l-1]);
        }
    }

    public static int count(int total, String s, int i) {
        int end = i+1;
        if (end > s.length()) end = s.length();
        if (s.substring(i-1, end).equals(""AC"")) {
            return total + 1;
        } else {
            return total;
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC155_D.java,"import java.util.Arrays;
import java.util.Scanner;

public class atcoder_ABC155_D {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        int K = input.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = input.nextInt();
        }
        Arrays.sort(A);
        long ll = -1000000000000000000L - 1;
        long rr = 1000000000000000000L + 1;
        while (ll + 1 < rr) {
            long x = (ll + rr) / 2;
            long tot = 0;
            for (int i = 0; i < N; i++) {
                if (A[i] < 0) {
                    int l = -1;
                    int r = N;
                    while (l + 1 < r) {
                        int c = (l + r) / 2;
                        if ((long) A[i] * A[c] < x) {
                            r = c;
                        } else {
                            l = c;
                        }
                    }
                    tot += N - r;
                } else {
                    int l = -1;
                    int r = N;
                    while (l + 1 < r) {
                        int c = (l + r) / 2;
                        if ((long) A[i] * A[c] < x) {
                            l = c;
                        } else {
                            r = c;
                        }
                    }
                    tot += r;
                }
                if ((long) A[i] * A[i] < x) {
                    tot -= 1;
                }
            }
            tot /= 2;
            if (tot < K) {
                ll = x;
            } else {
                rr = x;
            }
        }
        System.out.println(ll);
    }
}","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        long K = input.nextLong();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = input.nextInt();
        }
        Arrays.sort(A);
        long ll = -1000000000000000000L - 1;
        long rr = 1000000000000000000L + 1;
        while (ll + 1 < rr) {
            long x = (ll + rr) / 2;
            long tot = 0;
            for (int i = 0; i < N; i++) {
                if (A[i] < 0) {
                    int l = -1;
                    int r = N;
                    while (l + 1 < r) {
                        int c = (l + r) / 2;
                        if ((long) A[i] * A[c] < x) {
                            r = c;
                        } else {
                            l = c;
                        }
                    }
                    tot += N - r;
                } else {
                    int l = -1;
                    int r = N;
                    while (l + 1 < r) {
                        int c = (l + r) / 2;
                        if ((long) A[i] * A[c] < x) {
                            l = c;
                        } else {
                            r = c;
                        }
                    }
                    tot += r;
                }
                if ((long) A[i] * A[i] < x) {
                    tot -= 1;
                }
            }
            tot /= 2;
            if (tot < K) {
                ll = x;
            } else {
                rr = x;
            }
        }
        System.out.println(ll);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC123_D.java,"import java.util.*;

public class atcoder_ABC123_D {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int x = input.nextInt();
        int y = input.nextInt();
        int z = input.nextInt();
        int k = input.nextInt();

        int[] a = new int[x];
        int[] b = new int[y];
        int[] c = new int[z];

        for (int i = 0; i < x; i++) {
            a[i] = input.nextInt();
        }
        for (int i = 0; i < y; i++) {
            b[i] = input.nextInt();
        }
        for (int i = 0; i < z; i++) {
            c[i] = input.nextInt();
        }

        List<Integer> ab = new ArrayList<>();
        for (int i = 0; i < x; i++) {
            for (int j = 0; j < y; j++) {
                ab.add(a[i] + b[j]);
            }
        }
        Collections.sort(ab, Collections.reverseOrder());

        List<Integer> abc = new ArrayList<>();
        for (int i = 0; i < Math.min(k, x * y); i++) {
            for (int j = 0; j < z; j++) {
                abc.add(ab.get(i) + c[j]);
            }
        }
        Collections.sort(abc, Collections.reverseOrder());

        for (int i = 0; i < k; i++) {
            System.out.println(abc.get(i));
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int x = input.nextInt();
        int y = input.nextInt();
        int z = input.nextInt();
        int k = input.nextInt();

        long[] a = new long[x];
        long[] b = new long[y];
        long[] c = new long[z];

        for (int i = 0; i < x; i++) {
            a[i] = input.nextLong();
        }
        for (int i = 0; i < y; i++) {
            b[i] = input.nextLong();
        }
        for (int i = 0; i < z; i++) {
            c[i] = input.nextLong();
        }

        List<Long> ab = new ArrayList<>();
        for (int i = 0; i < x; i++) {
            for (int j = 0; j < y; j++) {
                ab.add(a[i] + b[j]);
            }
        }
        Collections.sort(ab, Collections.reverseOrder());

        List<Long> abc = new ArrayList<>();
        for (int i = 0; i < Math.min(k, x * y); i++) {
            for (int j = 0; j < z; j++) {
                abc.add(ab.get(i) + c[j]);
            }
        }
        Collections.sort(abc, Collections.reverseOrder());

        for (int i = 0; i < k; i++) {
            System.out.println(abc.get(i));
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC167_C.java,"import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class atcoder_ABC167_C {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int x = scanner.nextInt();
        int[][] c = new int[n][m];
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                c[i][j] = scanner.nextInt();
            }
        }
        
        List<List<Integer>> l = new ArrayList<>();
        List<Integer> rem = new ArrayList<>();
        int ans = 0;
        
        for (int i = 1; i <= n; i++) {
            combinations(l, new ArrayList<>(), 0, n, i);
        }
        
        for (int i = 1; i <= m; i++) {
            for (int j = 0; j < l.size(); j++) {
                int ca = 0;
                for (int ii : l.get(j)) {
                    ca += c[ii][i];
                }
                if (ca < x) {
                    rem.add(0, j);
                } else {
                    // do nothing
                }
            }
            
            if (rem.size() > 0) {
                for (int j : rem) {
                    l.remove(j);
                }
                rem = new ArrayList<>();
            }
            
            if (l.size() == 0) {
                System.out.println(-1);
                break;
            }
        }
        
        if (l.size() > 0) {
            for (List<Integer> i : l) {
                int ca = 0;
                for (int j : i) {
                    ca += c[j][0];
                }
                if (ans == 0) {
                    ans = ca;
                } else {
                    ans = Math.min(ans, ca);
                }
            }
            System.out.println(ans);
        }
    }
    
    public static void combinations(List<List<Integer>> result, List<Integer> tempList, int start, int n, int k) {
        if (k == 0) {
            result.add(new ArrayList<>(tempList));
        } else {
            for (int i = start; i < n; i++) {
                tempList.add(i);
                combinations(result, tempList, i + 1, n, k - 1);
                tempList.remove(tempList.size() - 1);
            }
        }
    }
}","import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int x = scanner.nextInt();
        int[][] c = new int[n][m];
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                c[i][j] = scanner.nextInt();
            }
        }
        
        List<List<Integer>> l = new ArrayList<>();
        List<Integer> rem = new ArrayList<>();
        int ans = 0;
        
        for (int i = 1; i <= n; i++) {
            combinations(l, new ArrayList<>(), 0, n, i);
        }
        
        for (int i = 1; i <= m; i++) {
            for (int j = 0; j < l.size(); j++) {
                int ca = 0;
                for (int ii : l.get(j)) {
                    ca += c[ii][i];
                }
                if (ca < x) {
                    rem.add(0, j);
                } else {
                    // do nothing
                }
            }
            
            if (rem.size() > 0) {
                for (int j : rem) {
                    l.remove(j);
                }
                rem = new ArrayList<>();
            }
            
            if (l.size() == 0) {
                System.out.println(-1);
                break;
            }
        }
        
        if (l.size() > 0) {
            for (List<Integer> i : l) {
                int ca = 0;
                for (int j : i) {
                    ca += c[j][0];
                }
                if (ans == 0) {
                    ans = ca;
                } else {
                    ans = Math.min(ans, ca);
                }
            }
            System.out.println(ans);
        }
    }
    
    public static void combinations(List<List<Integer>> result, List<Integer> tempList, int start, int n, int k) {
        if (k == 0) {
            result.add(new ArrayList<>(tempList));
        } else {
            for (int i = start; i < n; i++) {
                tempList.add(i);
                combinations(result, tempList, i + 1, n, k - 1);
                tempList.remove(tempList.size() - 1);
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_469_A.java,"import java.util.HashSet;
import java.util.Scanner;

public class codeforces_469_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int max_level = scanner.nextInt();
        int[] x = new int[max_level];
        int[] y = new int[max_level];
        
        for (int i = 0; i < max_level; i++) {
            x[i] = scanner.nextInt();
        }
        for (int i = 0; i < max_level; i++) {
            y[i] = scanner.nextInt();
        }
        
        HashSet<Integer> xSet = new HashSet<>();
        HashSet<Integer> ySet = new HashSet<>();
        
        for (int i = 0; i < max_level; i++) {
            if (x[i] != 0) {
                xSet.add(x[i]);
            }
            if (y[i] != 0) {
                ySet.add(y[i]);
            }
        }
        
        xSet.remove(0);
        ySet.remove(0);
        
        HashSet<Integer> z = new HashSet<>(xSet);
        z.addAll(ySet);
        
        if (z.size() != max_level) {
            System.out.println(""Oh, my keyboard!"");
        } else {
            System.out.println(""I become the guy."");
        }
    }
}","import java.util.HashSet;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int max_level = scanner.nextInt();

        scanner.nextLine();
        String line = scanner.nextLine();
        String[] numbers = line.split("" "");
        int[] x = new int[numbers.length];

        for (int i = 0; i < numbers.length; i++) {
            x[i] = Integer.parseInt(numbers[i]);
        }
        
        HashSet<Integer> xSet = new HashSet<>();

        for (int i = 1; i < numbers.length; i++) {
            if (x[i] != 0) {
                xSet.add(x[i]);
            }
        }

        line = scanner.nextLine();
        numbers = line.split("" "");
        int[] y = new int[numbers.length];

        for (int i = 0; i < numbers.length; i++) {
            y[i] = Integer.parseInt(numbers[i]);
        }

        HashSet<Integer> ySet = new HashSet<>();
        
        for (int i = 1; i < numbers.length; i++) {
            if (y[i] != 0) {
                ySet.add(y[i]);
            }
        }
        
        xSet.remove(0);
        ySet.remove(0);
        
        HashSet<Integer> z = new HashSet<>(xSet);
        z.addAll(ySet);
        if (z.size() != max_level) {
            System.out.println(""Oh, my keyboard!"");
        } else {
            System.out.println(""I become the guy."");
        }
    }
}"
ChatGPT,avatar,Python,Java,codeforces_596_B.java,"import java.util.Scanner;

public class codeforces_596_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] r = new int[n];
        for (int i = 0; i < n; i++) {
            r[i] = scanner.nextInt();
        }
        int ans = Math.abs(r[0]);
        for (int i = 1; i < n; i++) {
            ans += Math.abs(r[i] - r[i - 1]);
        }
        System.out.println(ans);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        long[] r = new long[n];
        for (int i = 0; i < n; i++) {
            r[i] = scanner.nextLong();
        }
        long ans = Math.abs(r[0]);
        for (int i = 1; i < n; i++) {
            ans += Math.abs(r[i] - r[i - 1]);
        }
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC034_B.java,"import java.util.Scanner;

public class atcoder_AGC034_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        String t = """";
        int i = 0;
        while (i < s.length()) {
            if (s.charAt(i) == 'A') {
                t += 'A';
                i += 1;
            } else if (s.charAt(i) == 'B') {
                if (i < s.length() - 1) {
                    if (s.charAt(i + 1) == 'C') {
                        t += 'D';
                        i += 2;
                    } else {
                        t += 'X';
                        i += 1;
                    }
                } else {
                    t += 'X';
                    i += 1;
                }
            } else {
                t += 'X';
                i += 1;
            }
        }
        int total = 0;
        int numA = 0;
        for (int j = 0; j < t.length(); j++) {
            if (t.charAt(j) == 'X') {
                numA = 0;
            } else {
                if (t.charAt(j) == 'A') numA += 1;
                else total += numA;
            }
        }
        System.out.println(total);
        long INF = (long) Math.pow(10, 25);
        long mod = 7 + (long) Math.pow(10, 9);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        String t = """";
        int i = 0;
        while (i < s.length()) {
            if (s.charAt(i) == 'A') {
                t += 'A';
                i += 1;
            } else if (s.charAt(i) == 'B') {
                if (i < s.length() - 1) {
                    if (s.charAt(i + 1) == 'C') {
                        t += 'D';
                        i += 2;
                    } else {
                        t += 'X';
                        i += 1;
                    }
                } else {
                    t += 'X';
                    i += 1;
                }
            } else {
                t += 'X';
                i += 1;
            }
        }
        long total = 0;
        long numA = 0;
        for (int j = 0; j < t.length(); j++) {
            if (t.charAt(j) == 'X') {
                numA = 0;
            } else {
                if (t.charAt(j) == 'A') numA += 1;
                else total += numA;
            }
        }
        System.out.println(total);
        long INF = (long) Math.pow(10, 25);
        long mod = 7 + (long) Math.pow(10, 9);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC002_B.java,"import java.util.*;
import java.io.*;

public class atcoder_AGC002_B {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());
        int[][] balls = new int[N][2];
        balls[0][0] = 0;
        balls[0][1] = 1;
        for (int i = 0; i < M; i++) {
            st = new StringTokenizer(br.readLine());
            int x = Integer.parseInt(st.nextToken());
            int y = Integer.parseInt(st.nextToken());
            int w_x = balls[x - 1][0];
            int r_x = balls[x - 1][1];
            int w_y = balls[y - 1][0];
            int r_y = balls[y - 1][1];
            if (w_x >= 1 && r_x >= 1) {
                balls[x - 1][0] -= 1;
                balls[y - 1][1] += 1;
            } else if (w_x == 0) {
                balls[x - 1][1] -= 1;
                balls[y - 1][1] += 1;
            } else {
                balls[x - 1][0] -= 1;
                balls[y - 1][0] += 1;
            }
        }
        int ans = 0;
        for (int i = 0; i < N; i++) {
            if (balls[i][1] > 0) {
                ans += 1;
            }
        }
        System.out.println(ans);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());
        int[][] balls = new int[N][2];
        balls[0][0] = 0;
        balls[0][1] = 1;
        for (int i = 0; i < M; i++) {
            st = new StringTokenizer(br.readLine());
            int x = Integer.parseInt(st.nextToken());
            int y = Integer.parseInt(st.nextToken());
            int w_x = balls[x - 1][0];
            int r_x = balls[x - 1][1];
            int w_y = balls[y - 1][0];
            int r_y = balls[y - 1][1];
            if (w_x >= 1 && r_x >= 1) {
                balls[x - 1][0] -= 1;
                balls[y - 1][1] += 1;
            } else if (w_x == 0) {
                balls[x - 1][1] -= 1;
                balls[y - 1][1] += 1;
            } else {
                balls[x - 1][0] -= 1;
                balls[y - 1][0] += 1;
            }
        }
        int ans = 0;
        for (int i = 0; i < N; i++) {
            if (balls[i][1] > 0) {
                ans += 1;
            }
        }
        System.out.println(ans);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC005_B.java,"import java.util.Scanner;

public class atcoder_AGC005_B {

    private static int[] par;
    private static int[] rank;
    private static int[] size;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        par = new int[n];
        rank = new int[n];
        size = new int[n];
        for (int i = 0; i < n; i++) {
            par[i] = i;
        }
        for (int i = 0; i < n; i++) {
            size[i] = 1;
        }
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            b[a[i] - 1] = i;
        }
        int c = 0;
        for (int k : b) {
            int l = 1;
            int r = 1;
            if (k > 0 && a[k - 1] > a[k]) {
                l += size[root(k - 1)];
                unite(k - 1, k);
            }
            if (k + 1 < n && a[k + 1] > a[k]) {
                r += size[root(k + 1)];
                unite(k + 1, k);
            }
            c += l * r * a[k];
        }
        System.out.println(c);
    }

    private static int root(int x) {
        return (par[x] == x) ? x : root(par[x]);
    }

    private static boolean same(int x, int y) {
        return root(x) == root(y);
    }

    private static void unite(int... z) {
        int x = root(z[0]);
        int y = root(z[1]);
        if (x != y) {
            if (rank[x] < rank[y]) {
                par[x] = y;
                size[y] += size[x];
            } else {
                par[y] = x;
                size[x] += size[y];
                if (rank[x] == rank[y]) {
                    rank[x]++;
                }
            }
        }
    }
}","import java.util.Scanner;

public class Main {

    private static int[] par;
    private static int[] rank;
    private static int[] size;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        par = new int[n];
        rank = new int[n];
        size = new int[n];
        for (int i = 0; i < n; i++) {
            par[i] = i;
        }
        for (int i = 0; i < n; i++) {
            size[i] = 1;
        }
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            b[a[i] - 1] = i;
        }
        int c = 0;
        for (int k : b) {
            int l = 1;
            int r = 1;
            if (k > 0 && a[k - 1] > a[k]) {
                l += size[root(k - 1)];
                unite(k - 1, k);
            }
            if (k + 1 < n && a[k + 1] > a[k]) {
                r += size[root(k + 1)];
                unite(k + 1, k);
            }
            c += l * r * a[k];
        }
        System.out.println(c);
    }

    private static int root(int x) {
        return (par[x] == x) ? x : root(par[x]);
    }

    private static boolean same(int x, int y) {
        return root(x) == root(y);
    }

    private static void unite(int... z) {
        int x = root(z[0]);
        int y = root(z[1]);
        if (x != y) {
            if (rank[x] < rank[y]) {
                par[x] = y;
                size[y] += size[x];
            } else {
                par[y] = x;
                size[x] += size[y];
                if (rank[x] == rank[y]) {
                    rank[x]++;
                }
            }
        }
    }
}"
ChatGPT,avatar,Python,Java,atcoder_AGC027_B.java,"import java.util.*;

public class atcoder_AGC027_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int X = scanner.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextInt();
        }
        
        int[] S = new int[N];
        S[0] = A[0];
        for (int i = 1; i < N; i++) {
            S[i] = S[i-1] + A[i];
        }
        
        int ans = Integer.MAX_VALUE;
        for (int k = 1; k <= N; k++) {
            int E = k * X + 2 * sum(S, N - 2 * k - 1, -k);
            ans = Math.min(ans, E);
        }
        
        System.out.println(ans + N * X + 5 * S[N-1]);
    }
    
    public static int sum(int[] S, int start, int step) {
        int sum = 0;
        for (int i = start; i >= 0; i += step) {
            sum += S[i];
        }
        return sum;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int X = scanner.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextInt();
        }
        
        int[] S = new int[N];
        S[0] = A[0];
        for (int i = 1; i < N; i++) {
            S[i] = S[i-1] + A[i];
        }
        
        int ans = Integer.MAX_VALUE;
        for (int k = 1; k <= N; k++) {
            int E = k * X + 2 * sum(S, N - 2 * k - 1, -k);
            ans = Math.min(ans, E);
        }
        
        System.out.println(ans + N * X + 5 * S[N-1]);
    }
    
    public static int sum(int[] S, int start, int step) {
        int sum = 0;
        for (int i = start; i >= 0; i += step) {
            sum += S[i];
        }
        return sum;
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC145_C.java,"import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

public class atcoder_ABC145_C {
    
    public static void solve(int N, List<Integer> x, List<Integer> y) {
        List<List<Integer>> permutations = new ArrayList<>();
        generatePermutations(x.size(), new ArrayList<>(), x, y, permutations);
        
        List<Double> distances = new ArrayList<>();
        for (List<Integer> permutation : permutations) {
            double totalDistance = 0;
            for (int i = 0; i < N - 1; i++) {
                int f = permutation.get(i);
                int t = permutation.get(i + 1);
                double distance = Math.sqrt(Math.pow((x.get(t) - x.get(f)), 2) + Math.pow((y.get(t) - y.get(f)), 2));
                totalDistance += distance;
            }
            distances.add(totalDistance);
        }
        
        double result = calculateAverage(distances);
        System.out.println(result);
    }
    
    private static void generatePermutations(int N, List<Integer> permutation, List<Integer> x, List<Integer> y, List<List<Integer>> permutations) {
        if (permutation.size() == N) {
            permutations.add(new ArrayList<>(permutation));
        } else {
            for (int i = 0; i < N; i++) {
                if (!permutation.contains(i)) {
                    permutation.add(i);
                    generatePermutations(N, permutation, x, y, permutations);
                    permutation.remove(permutation.size() - 1);
                }
            }
        }
    }
    
    private static double calculateAverage(List<Double> distances) {
        double sum = 0;
        for (double distance : distances) {
            sum += distance;
        }
        return sum / distances.size();
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        List<Integer> x = new ArrayList<>();
        List<Integer> y = new ArrayList<>();
        for (int i = 0; i < N; i++) {
            x.add(scanner.nextInt());
            y.add(scanner.nextInt());
        }
        solve(N, x, y);
    }
}","import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

public class Main {
    
    public static void solve(int N, List<Integer> x, List<Integer> y) {
        List<List<Integer>> permutations = new ArrayList<>();
        generatePermutations(x.size(), new ArrayList<>(), x, y, permutations);
        
        List<Double> distances = new ArrayList<>();
        for (List<Integer> permutation : permutations) {
            double totalDistance = 0;
            for (int i = 0; i < N - 1; i++) {
                int f = permutation.get(i);
                int t = permutation.get(i + 1);
                double distance = Math.sqrt(Math.pow((x.get(t) - x.get(f)), 2) + Math.pow((y.get(t) - y.get(f)), 2));
                totalDistance += distance;
            }
            distances.add(totalDistance);
        }
        
        double result = calculateAverage(distances);
        System.out.println(result);
    }
    
    private static void generatePermutations(int N, List<Integer> permutation, List<Integer> x, List<Integer> y, List<List<Integer>> permutations) {
        if (permutation.size() == N) {
            permutations.add(new ArrayList<>(permutation));
        } else {
            for (int i = 0; i < N; i++) {
                if (!permutation.contains(i)) {
                    permutation.add(i);
                    generatePermutations(N, permutation, x, y, permutations);
                    permutation.remove(permutation.size() - 1);
                }
            }
        }
    }
    
    private static double calculateAverage(List<Double> distances) {
        double sum = 0;
        for (double distance : distances) {
            sum += distance;
        }
        return sum / distances.size();
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        List<Integer> x = new ArrayList<>();
        List<Integer> y = new ArrayList<>();
        for (int i = 0; i < N; i++) {
            x.add(scanner.nextInt());
            y.add(scanner.nextInt());
        }
        solve(N, x, y);
    }
}"
ChatGPT,avatar,Python,Java,atcoder_ABC164_D.java,"import java.util.Scanner;

public class atcoder_ABC164_D {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        int l = 2019;
        int[] m = new int[l];
        int a = 0;
        int r = 0;
        
        for (int i = 0; i < s.length(); i++) {
            char e = s.charAt(s.length() - 1 - i);
            a += Integer.parseInt(String.valueOf(e)) * pow(10, i, l);
            r += m[a % l];
            m[a % l]++;
        }
        
        System.out.println(r);
    }
    
    private static int pow(int base, int exponent, int modulus) {
        int result = 1;
        
        while (exponent > 0) {
            if (exponent % 2 == 1) {
                result = (result * base) % modulus;
            }
            
            base = (base * base) % modulus;
            exponent /= 2;
        }
        
        return result;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        int l = 2019;
        int[] m = new int[l + 1];
        m[0] = 1;
        for (int i = 1; i < l + 1; i++) {
            m[i] = 0;
        }

        int a = 0;
        int r = 0;
        
        for (int i = 0; i < s.length(); i++) {
            char e = s.charAt(s.length() - 1 - i);
            a += Integer.parseInt(String.valueOf(e)) * pow(10, i, l);
            r += m[a % l];
            m[a % l]++;
        }
        
        System.out.println(r);
    }
    
    private static int pow(int base, int exponent, int modulus) {
        int result = 1;
        
        while (exponent > 0) {
            if (exponent % 2 == 1) {
                result = (result * base) % modulus;
            }
            
            base = (base * base) % modulus;
            exponent /= 2;
        }
        
        return result;
    }
}"
ChatGPT,avatar,Java,Python,atcoder_AGC034_B.py,"class BABC:
    def solve(self, testNumber, in, out):
        s = in.next().replace(""BC"", ""D"")
        cnt = 0
        tmp = 0
        for i in range(len(s)):
            if s[i] == 'A':
                tmp += 1
            elif s[i] == 'D':
                cnt += tmp
            else:
                tmp = 0
        out.println(cnt)

solver = BABC()
solver.solve(1, in, out)","class BABC:
    def solve(self, testNumber):
        s = input().replace(""BC"", ""D"")
        cnt = 0
        tmp = 0
        for i in range(len(s)):
            if s[i] == 'A':
                tmp += 1
            elif s[i] == 'D':
                cnt += tmp
            else:
                tmp = 0
        print(cnt)

solver = BABC()
solver.solve(1)"
ChatGPT,avatar,Java,Python,atcoder_ABC146_D.py,"class Edge:
    def __init__(self, id, to):
        self.id = id
        self.to = to

def dfs(to, color, parents):
    k = 1
    for e in g[to]:
        if e.to == parents:
            continue
        if k == color:
            k += 1
        ans[e.id] = k
        dfs(e.to, k, to)
        k += 1

n = int(input())
g = [[] for _ in range(n)]

for _ in range(n - 1):
    a, b = map(int, input().split())
    g[a - 1].append(Edge(_, b - 1))
    g[b - 1].append(Edge(_, a - 1))

ans = [0] * (n - 1)
dfs(0, -1, -1)

max_val = max(ans)
print(max_val)

for c in ans:
    print(c)","class Edge:
    def __init__(self, id, to):
        self.id = id
        self.to = to

def dfs(to, color, parents):
    k = 1
    for e in g[to]:
        if e.to == parents:
            continue
        if k == color:
            k += 1
        ans[e.id] = k
        dfs(e.to, k, to)
        k += 1

n = int(input())
g = [[] for _ in range(n)]

for _ in range(n - 1):
    a, b = map(int, input().split())
    g[a - 1].append(Edge(_, b - 1))
    g[b - 1].append(Edge(_, a - 1))

ans = [0] * (n - 1)
dfs(0, -1, -1)

max_val = max(ans)
print(max_val)

for c in ans:
    print(c)"
ChatGPT,avatar,Java,Python,codeforces_272_B.py,"import sys

def rec(x):
    answer = 0
    for k in range(31, -1, -1):
        if (x & (1 << k)) != 0:
            answer += 1
    return answer

n = int(input())
a = [0] * 33
for i in range(n):
    a[rec(int(input()))] += 1

answer = 0
for i in range(len(a)):
    summ = (1 + a[i] - 1) / 2.0 * (a[i] - 1)
    answer += summ

print(int(answer))","import sys

def rec(x):
    answer = 0
    for k in range(31, -1, -1):
        if (x & (1 << k)) != 0:
            answer += 1
    return answer

n = int(input())
a = [0] * 33
inputs = list(input().split())
for i in range(n):
    a[rec(int(inputs[i]))] += 1

answer = 0
for i in range(len(a)):
    summ = (1 + a[i] - 1) / 2.0 * (a[i] - 1)
    answer += summ

print(int(answer))"
ChatGPT,avatar,Java,Python,codeforces_350_B.py,"n = int(input())
a = [0] * (n + 1)
b = [0] * (n + 1)
num = [0] * (n + 1)

for i in range(1, n + 1):
    a[i] = int(input())

for i in range(1, n + 1):
    b[i] = int(input())

for i in range(1, n + 1):
    num[b[i]] += 1

ss = """"
ans = 0
st = [False] * (n + 1)

for i in range(1, n + 1):
    if a[i] == 1:
        st[i] = True
        sb = []
        x = b[i]
        sss = [str(i)]
        sb.append("" "" + """".join(sss[::-1]))
        s = 1

        while not st[x] and num[x] == 1 and x != 0 and a[x] != 1:
            sss = [str(x)]
            sb.append("" "" + """".join(sss[::-1]))
            st[x] = True
            x = b[x]
            s += 1

        if s > ans:
            ans = s
            ss = """".join(sb[::-1])

print(ans)
print(ss)","n = int(input())
a = [0] * (n + 1)
b = [0] * (n + 1)
num = [0] * (n + 1)

inputs = list(input().split())
for i in range(1, n + 1):
    a[i] = int(inputs[i - 1])

inputs = list(input().split())
for i in range(1, n + 1):
    b[i] = int(inputs[i - 1])

for i in range(1, n + 1):
    num[b[i]] += 1

ss = """"
ans = 0
st = [False] * (n + 1)

for i in range(1, n + 1):
    if a[i] == 1:
        st[i] = True
        sb = []
        x = b[i]
        sss = [str(i)]
        sb.append("""".join(sss[::-1]) + "" "")
        s = 1

        while not st[x] and num[x] == 1 and x != 0 and a[x] != 1:
            sss = [str(x)]
            sb.append("""".join(sss[::-1]) + "" "")
            st[x] = True
            x = b[x]
            s += 1

        if s > ans:
            ans = s
            ss = """".join(sb[::-1])

print(ans)
print(ss)"
ChatGPT,avatar,Java,Python,atcoder_ABC123_D.py,"import sys

x = list(map(int, sys.stdin.readline().split()))
k = int(sys.stdin.readline())

a = []
for _ in range(3):
    a.append(sorted(list(map(int, sys.stdin.readline().split()))))

ans = []
for i in range(x[0]):
    for j in range(x[1]):
        for m in range(x[2]):
            if (i + 1) * (j + 1) * (m + 1) <= k:
                tmp = a[0][x[0] - i - 1] + a[1][x[1] - j - 1] + a[2][x[2] - m - 1]
                ans.append(tmp)

ans.sort(reverse=True)
for i in range(k):
    print(ans[i])","import sys

inputs = list(map(int, sys.stdin.readline().split()))
x = inputs[:3]
k = inputs[3]

a = []
for _ in range(3):
    a.append(sorted(list(map(int, sys.stdin.readline().split()))))

ans = []
for i in range(x[0]):
    for j in range(x[1]):
        for m in range(x[2]):
            if (i + 1) * (j + 1) * (m + 1) <= k:
                tmp = a[0][x[0] - i - 1] + a[1][x[1] - j - 1] + a[2][x[2] - m - 1]
                ans.append(tmp)

ans.sort(reverse=True)
for i in range(k):
    print(ans[i])"
ChatGPT,avatar,Java,Python,codeforces_612_B.py,"n = int(input())
dp = [0] * 200001
for i in range(n):
    dp[int(input())] = i

ans = 0
for i in range(2, n+1):
    ans += abs(dp[i] - dp[i-1])

print(ans)","n = int(input())
dp = [0] * 200001
inputs = list(input().split())
for i in range(n):
    dp[int(inputs[i])] = i

ans = 0
for i in range(2, n+1):
    ans += abs(dp[i] - dp[i-1])

print(ans)"
ChatGPT,avatar,Java,Python,atcoder_ABC107_D.py,"import bisect

def solve(arr):
    n = len(arr)
    sorted_arr = sorted(arr)
    total = n * (n + 1) // 2
    l, r = 0, n - 1
    
    while l < r:
        mid = l + (r - l) // 2
        target = sorted_arr[mid]
        cur = 0
        cnt = 0
        bit = [0] * (2 * n + 2)
        
        for x in range(n + 1, len(bit), x + (x & -x)):
            bit[x] += 1
        
        for i in range(n):
            cur += 1 if arr[i] <= target else -1
            
            for x in range(cur + n + 1, len(bit), x + (x & -x)):
                bit[x] += 1
            
            for x in range(cur + n, 0, x - (x & -x)):
                cnt += bit[x]
        
        if cnt >= total // 2 + 1:
            r = mid
        else:
            l = mid + 1
    
    return sorted_arr[l]

N = int(input())
arr = list(map(int, input().split()))

print(solve(arr))","import bisect

def solve(arr):
    n = len(arr)
    sorted_arr = sorted(arr)
    total = n * (n + 1) // 2
    l, r = 0, n - 1
    
    while l < r:
        mid = l + (r - l) // 2
        target = sorted_arr[mid]
        cur = 0
        cnt = 0
        bit = [0] * (2 * n + 2)
        
        x = n + 1
        while x < len(bit):
            bit[x] += 1
            x += x & -x
        
        for i in range(n):
            cur += 1 if arr[i] <= target else -1
            
            x = cur + n + 1
            while x < len(bit):
                bit[x] += 1
                x += x & -x
            
            x = cur + n
            while x > 0:
                cnt += bit[x]
                x -= x & -x
        
        if cnt >= total // 2 + 1:
            r = mid
        else:
            l = mid + 1
    
    return sorted_arr[l]

N = int(input())
arr = list(map(int, input().split()))

print(solve(arr))"
ChatGPT,avatar,Java,Python,codeforces_222_A.py,"n, k = map(int, input().split())
l, c = 0, 1

for i in range(n):
    a = int(input())
    if a == l:
        c += 1
    else:
        c = 1
    l = a

if c + k > n:
    print(n - c)
else:
    print(-1)","n, k = map(int, input().split())
l, c = 0, 1

inputs = list(input().split())
for i in range(n):
    a = int(inputs[i])
    if a == l:
        c += 1
    else:
        c = 1
    l = a

if c + k > n:
    print(n - c)
else:
    print(-1)"
ChatGPT,avatar,Java,Python,codeforces_673_A.py,"n = int(input())
a = []
for _ in range(n):
    value = int(input())
    a.append(value)

result = 0
pos = 0
flag = 0

if a[0] > 15:
    result = 15
else:
    for i in range(1, n):
        if a[i] - a[i - 1] > 15:
            pos = i - 1
            flag = 1
            break
    
    if flag == 1:
        result = a[pos] + 15
    else:
        result = a[n - 1] + 15

if result > 90:
    result = 90

print(result)","n = int(input())
a = []
inputs = list(input().split())
for i in range(n):
    value = int(inputs[i])
    a.append(value)

result = 0
pos = 0
flag = 0

if a[0] > 15:
    result = 15
else:
    for i in range(1, n):
        if a[i] - a[i - 1] > 15:
            pos = i - 1
            flag = 1
            break
    
    if flag == 1:
        result = a[pos] + 15
    else:
        result = a[n - 1] + 15

if result > 90:
    result = 90

print(result)"
ChatGPT,avatar,Java,Python,atcoder_ABC108_B.py,"def revpos(p, q):
    vec = [0, 0]
    for i in range(len(vec)):
        vec[i] = p[i] - q[i]
    tmp = vec[0]
    vec[0] = vec[1]
    vec[1] = -tmp
    newpos = [0, 0]
    for i in range(len(newpos)):
        newpos[i] = q[i] + vec[i]
    return newpos

input = [0, 0, 0, 0]
for i in range(len(input)):
    input[i] = int(input())

position = [[0, 0], [0, 0], [0, 0], [0, 0]]
position[0][0] = input[0]
position[0][1] = input[1]
position[1][0] = input[2]
position[1][1] = input[3]
position[2] = revpos(position[0], position[1])
position[3] = revpos(position[1], position[2])

if position[0] == revpos(position[2], position[3]):
    print(""OK"")

output = [0, 0, 0, 0]
output[0] = position[2][0]
output[1] = position[2][1]
output[2] = position[3][0]
output[3] = position[3][1]
for i in output:
    print(i)","def revpos(p, q):
    vec = [0, 0]
    for i in range(len(vec)):
        vec[i] = p[i] - q[i]
    tmp = vec[0]
    vec[0] = vec[1]
    vec[1] = -tmp
    newpos = [0, 0]
    for i in range(len(newpos)):
        newpos[i] = q[i] + vec[i]
    return newpos

inputs = list(map(int, input().split()))

position = [[0, 0], [0, 0], [0, 0], [0, 0]]
position[0][0] = inputs[0]
position[0][1] = inputs[1]
position[1][0] = inputs[2]
position[1][1] = inputs[3]
position[2] = revpos(position[0], position[1])
position[3] = revpos(position[1], position[2])

output = [0, 0, 0, 0]
output[0] = position[2][0]
output[1] = position[2][1]
output[2] = position[3][0]
output[3] = position[3][1]
for i in output:
    print(i, end=' ')
print()"
ChatGPT,avatar,Java,Python,atcoder_ABC150_C.py,"import itertools

def permutation(target, ans):
    if len(target) <= 1:
        return [ans + target]
    else:
        result = []
        for i in range(len(target)):
            result.extend(permutation(target[:i] + target[i+1:], ans + target[i]))
        return result

def main():
    n = int(input())
    line = [[""""] for _ in range(2)]
    for i in range(2):
        for _ in range(n):
            line[i][0] += input()
    
    number = """".join(str(i) for i in range(1, n+1))
    listA = permutation(number, """")
    
    sum = 0
    for j in range(len(line)):
        for i in range(len(listA)):
            if listA[i] == line[j][0]:
                if sum == 0:
                    sum += i
                else:
                    sum -= i
    
    print(abs(sum))

if __name__ == ""__main__"":
    main()","import itertools

def permutation(target, ans):
    if len(target) <= 1:
        return [ans + target]
    else:
        result = []
        for i in range(len(target)):
            result.extend(permutation(target[:i] + target[i+1:], ans + target[i]))
        return result

def main():
    n = int(input())
    line = [[""""] for _ in range(2)]
    for i in range(2):
        inputs = list(input().split())
        for j in range(n):
            line[i][0] += inputs[j]
    
    number = """".join(str(i) for i in range(1, n+1))
    listA = permutation(number, """")
    
    sum = 0
    for j in range(len(line)):
        for i in range(len(listA)):
            if listA[i] == line[j][0]:
                if sum == 0:
                    sum += i
                else:
                    sum -= i
    
    print(abs(sum))

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,atcoder_ABC126_E.py,"class UnionFindTree:
    def __init__(self, n):
        self.n = n
        self.par = [i for i in range(n)]
        self.rank = [0 for _ in range(n)]

    def find(self, x):
        if self.par[x] == x:
            return x
        else:
            self.par[x] = self.find(self.par[x])
            return self.par[x]

    def unite(self, x, y):
        x = self.find(x)
        y = self.find(y)
        if x == y:
            return
        if self.rank[x] < self.rank[y]:
            self.par[x] = y
        else:
            self.par[y] = x
            if self.rank[x] == self.rank[y]:
                self.rank[x] += 1

    def same(self, x, y):
        return self.find(x) == self.find(y)


def doIt():
    n = int(input())
    utf = UnionFindTree(n)
    m = int(input())
    for i in range(m):
        x, y, z = map(int, input().split())
        utf.unite(x - 1, y - 1)
    cnt = 0
    for i in range(n):
        if utf.par[i] == i:
            cnt += 1
    print(cnt)


doIt()","class UnionFindTree:
    def __init__(self, n):
        self.n = n
        self.par = [i for i in range(n)]
        self.rank = [0 for _ in range(n)]

    def find(self, x):
        if self.par[x] == x:
            return x
        else:
            self.par[x] = self.find(self.par[x])
            return self.par[x]

    def unite(self, x, y):
        x = self.find(x)
        y = self.find(y)
        if x == y:
            return
        if self.rank[x] < self.rank[y]:
            self.par[x] = y
        else:
            self.par[y] = x
            if self.rank[x] == self.rank[y]:
                self.rank[x] += 1

    def same(self, x, y):
        return self.find(x) == self.find(y)


def doIt():
    n, m = map(int, input().split())
    utf = UnionFindTree(n)
    for i in range(m):
        x, y, z = map(int, input().split())
        utf.unite(x - 1, y - 1)
    cnt = 0
    for i in range(n):
        if utf.par[i] == i:
            cnt += 1
    print(cnt)


doIt()"
ChatGPT,avatar,Java,Python,codeforces_519_B.py,"n = int(input())
a = 0
b = 0
c = 0

for i in range(n):
    a += int(input())

for i in range(n - 1):
    b += int(input())

for i in range(n - 2):
    c += int(input())

x = a - b
y = b - c

print(x)
print(y)","n = int(input())
a = 0
b = 0
c = 0

inputs = list(input().split())
for i in range(n):
    a += int(inputs[i])

inputs = list(input().split())
for i in range(n - 1):
    b += int(inputs[i])

inputs = list(input().split())
for i in range(n - 2):
    c += int(inputs[i])

x = a - b
y = b - c

print(x)
print(y)"
ChatGPT,avatar,Java,Python,codeforces_31_A.py,"n = int(input())
a = list(map(int, input().split()))

f = 0
for k in range(n):
    t = a[k]
    for i in range(n):
        for j in range(n - 1):
            if i != j and t == (a[i] + a[j]):
                f = 1
                break
        if f == 1:
            break
    if f == 1:
        break

if f == 1:
    print(k + 1, j + 1, i + 1)
else:
    print(-1)","n = int(input())
a = list(map(int, input().split()))

f = 0
for k in range(n):
    t = a[k]
    for i in range(n):
        for j in range(n - 1):
            if i != j and t == (a[i] + a[j]):
                f = 1
                break
        if f == 1:
            break
    if f == 1:
        break
    

if f == 1:
    print(k + 1, j + 1, i + 1)
else:
    print(-1)"
ChatGPT,avatar,Java,Python,codeforces_637_A.py,"import sys

def main():
    n = int(sys.stdin.readline())
    ara = list(map(int, sys.stdin.readline().split()))
    freq = {}
    for num in ara:
        if num in freq:
            freq[num] += 1
        else:
            freq[num] = 1
    max_freq = max(freq.values())
    for num in ara:
        if freq[num] == max_freq:
            print(num)
            break

if __name__ == ""__main__"":
    main()","import sys
from collections import defaultdict

def main():
    n = int(sys.stdin.readline())
    ara = list(map(int, sys.stdin.readline().split()))
    freq = {}
    for num in ara:
        if num in freq:
            freq[num] += 1
        else:
            freq[num] = 1
    max_freq = max(freq.values())
    mm = defaultdict(int)    
    for i in range(n):
        mm[ara[i]] += 1
        if mm[ara[i]] == max_freq:
            print(ara[i])
            break

if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,codeforces_313_B.py,"import sys

def sol():
    s = sys.stdin.readline().strip()
    cum = [0] * (len(s) + 1)
    for i in range(1, len(s)):
        if s[i] == s[i - 1]:
            cum[i] = cum[i - 1] + 1
        else:
            cum[i] = cum[i - 1]
    q = int(sys.stdin.readline().strip())
    for _ in range(q):
        l, r = map(int, sys.stdin.readline().strip().split())
        print(cum[r - 1] - cum[l - 2] if l > 1 else cum[r - 1])

sol()","import sys

def sol():
    s = sys.stdin.readline().strip()
    cum = [0] * (len(s) + 1)
    for i in range(1, len(s)):
        if s[i] == s[i - 1]:
            cum[i] = cum[i - 1] + 1
        else:
            cum[i] = cum[i - 1]
    q = int(sys.stdin.readline().strip())
    for _ in range(q):
        l, r = map(int, sys.stdin.readline().strip().split())
        print(cum[r] - cum[l - 1])

sol()"
ChatGPT,avatar,Java,Python,codeforces_203_A.py,"import sys


def solve():
    x, t, a, b, da, db = map(int, sys.stdin.readline().split())
    first = a
    second = b
    ok = False
    for i in range(t):
        first -= da
        for j in range(t):
            second -= db
            if second + first == x or second == x or first == x or x == 0:
                ok = True
                break
        if ok:
            break
    if ok:
        print(""YES"")
    else:
        print(""NO"")


def main():
    solve()


if __name__ == ""__main__"":
    main()","import sys


def solve():
    x, t, a, b, da, db = map(int, sys.stdin.readline().split())
    first = a
    second = b
    ok = False
    for i in range(t):
        first = a - (da * i)
        for j in range(t):
            second = b - (db * j)
            if second + first == x or second == x or first == x or x == 0:
                ok = True
                break
        if ok:
            break
    if ok:
        print(""YES"")
    else:
        print(""NO"")


def main():
    solve()


if __name__ == ""__main__"":
    main()"
ChatGPT,avatar,Java,Python,codeforces_265_B.py,"n = int(input())
arr = list(map(int, input().split()))

ans = arr[0] + 1
for i in range(1, len(arr)):
    ans += abs(arr[i] - arr[i - 1]) + 2

print(ans)","n = int(input())
arr = []
for i in range(n):
    arr.append(int(input()))

ans = arr[0] + 1
for i in range(1, len(arr)):
    ans += abs(arr[i] - arr[i - 1]) + 2

print(ans)"
ChatGPT,avatar,Java,Python,codeforces_96_B.py,"number = int(input())
ans = -1
value = 0
mask = 2

while value < number:
    s = bin(mask)[2:]
    s = s.zfill(len(s) + 1)
    zeros = s.count('0')
    
    if zeros != len(s) - zeros:
        continue
    
    s = s.replace('0', '4')
    s = s.replace('1', '7')
    value = int(s)
    mask += 1

print(value)","number = int(input())
ans = -1
value = 0
mask = 2

while value < number:
    s = bin(mask)[2:]
    s = s.zfill(len(s) + 1)
    zeros = s.count('0')
    
    if zeros != len(s) - zeros:
        continue
    
    s = s.replace('0', '4')
    s = s.replace('1', '7')
    value = int(s)
    mask += 1

print(value)"
CodeGen,avatar,Python,Java,codeforces_354_A.java,"public class codeforces_354_A {
    public int minEnergy ( int n, int L, int R, int QL, int QR ) {
        int[] sum_el = new int[ n + 1 ];
        sum_el[ 0 ] = 0;
        for ( int i = 1 ; i <= n ; i++ ) {
            sum_el[ i ] = sum_el[ i - 1 ] + W[ i - 1 ];
        }
        int answer = QR * ( n - 1 ) + sum_el[ n ] * R;
        for ( int i = 1 ; i <= n ; i++ ) {
            int energy = L * sum_el[ i ] + R * ( sum_el[ n ] - sum_el[ i ] );
            if ( i > ( n - i ) ) {
                energy = energy + ( i - ( n - i ) - 1 ) * QL;
            } else if ( ( n - i ) > i ) {
                energy = energy + ( ( n - i ) - i - 1 ) * QR;
            }
            if ( energy < answer ) {
                answer = energy;
            }
        }
        return answer;
    }
}","import java.util.*;

public class Main {
    public static void main ( String [ ] args ) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt ( );
        int L = scanner.nextInt ( );
        int R = scanner.nextInt ( );
        int QL = scanner.nextInt ( );
        int QR = scanner.nextInt ( );
        int[] W = new int[n];
        for (int i = 0; i < n; i++) {
            W[i] = scanner.nextInt();
        }
        System.out.println ( minEnergy ( n, L, R, QL, QR, W) );
    }
    public static int minEnergy ( int n, int L, int R, int QL, int QR, int[] W) {
        int[] sum_el = new int[ n + 1 ];
        sum_el[ 0 ] = 0;
        for ( int i = 1 ; i <= n ; i++ ) {
            sum_el[ i ] = sum_el[ i - 1 ] + W[ i - 1 ];
        }
        int answer = QR * ( n - 1 ) + sum_el[ n ] * R;
        for ( int i = 1 ; i <= n ; i++ ) {
            int energy = L * sum_el[ i ] + R * ( sum_el[ n ] - sum_el[ i ] );
            if ( i > ( n - i ) ) {
                energy = energy + ( i - ( n - i ) - 1 ) * QL;
            } else if ( ( n - i ) > i ) {
                energy = energy + ( ( n - i ) - i - 1 ) * QR;
            }
            if ( energy < answer ) {
                answer = energy;
            }
        }
        return answer;
    }
}"
CodeGen,avatar,Python,Java,codeforces_632_B.java,"public class codeforces_632_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] pieces = new int[n];
        for (int i = 0; i < n; i++) {
            pieces[i] = in.nextInt();
        }
        int pScore = 0;
        int sScore = 0;
        int pMaxScore = 0;
        int sMaxScore = 0;
        for (int i = 0; i < n; i++) {
            if (pieces[i] > 0) {
                pScore += pieces[i];
                if (pScore > pMaxScore) {
                    pMaxScore = pScore;
                }
            } else {
                pScore -= pieces[i];
            }
        }
        for (int i = 0; i < n - 1; i++) {
            if (pieces[i] > 0) {
                sScore += pieces[i];
                if (sScore > sMaxScore) {
                    sMaxScore = sScore;
                }
            } else {
                sScore -= pieces[i];
            }
        }
        if (pMaxScore > sMaxScore) {
            System.out.println(pMaxScore);
        } else {
            System.out.println(sMaxScore);
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] pieces = new int[n];
        for (int i = 0; i < n; i++) {
            pieces[i] = in.nextInt();
        }
        int pScore = 0;
        int sScore = 0;
        int pMaxScore = 0;
        int sMaxScore = 0;
        for (int i = 0; i < n; i++) {
            if (pieces[i] > 0) {
                pScore += pieces[i];
                if (pScore > pMaxScore) {
                    pMaxScore = pScore;
                }
            } else {
                pScore -= pieces[i];
            }
        }
        for (int i = 0; i < n - 1; i++) {
            if (pieces[i] > 0) {
                sScore += pieces[i];
                if (sScore > sMaxScore) {
                    sMaxScore = sScore;
                }
            } else {
                sScore -= pieces[i];
            }
        }
        if (pMaxScore > sMaxScore) {
            System.out.println(pMaxScore);
        } else {
            System.out.println(sMaxScore);
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_148_B.java,"public class codeforces_148_B {
    public int getNumber(int n, int k) {
        int result = 0;
        int position = k;
        while (position < n) {
            result++;
            position += k * position / n;
            position += k * (position / n) * f;
            position += k * (position / n) * (position / n);
        }
        return result;
    }
}","public class Main {
    public int getNumber(int n, int k) {
        int result = 0;
        int position = k;
        while (position < n) {
            result++;
            position += k * position / n;
            position += k * (position / n) * f;
            position += k * (position / n) * (position / n);
        }
        return result;
    }
}"
CodeGen,avatar,Python,Java,codeforces_287_A.java,"public class codeforces_287_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] t = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                t[i][j] = in.nextInt();
            }
        }
        int black = 0;
        int white = 0;
        int correct = 0;
        for (int i = 0; i < n - 2; i++) {
            for (int j = 0; j < n - 2; j++) {
                if (t[i][j] == '#') {
                    black++;
                } else {
                    white++;
                }
                if (t[i][j + 1] == '#') {
                    black++;
                } else {
                    white++;
                }
                if (t[i + 1][j] == '#') {
                    black++;
                } else {
                    white++;
                }
                if (t[i + 1][j + 1] == '#') {
                    black++;
                } else {
                    white++;
                }
                if (black == 0 || black == 3 || white == 0 || white == 3 || white == 4 || black == 4) {
                    correct = 1;
                    break;
                }
                black = 0;
                white = 0;
            }
            if (correct == 1) {
                break;
            }
        }
        if (correct == 1) {
            System.out.println(""YES"");
        } else {
            System.out.println(""NO"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        char[][] t = new char[4][4];
        for (int i = 0; i < 4; i++) {
            String input = in.nextLine();
            t[i] = input.toCharArray();
        }
        int black = 0;
        int white = 0;
        int correct = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (t[i][j] == '#') {
                    black++;
                } else {
                    white++;
                }
                if (t[i][j + 1] == '#') {
                    black++;
                } else {
                    white++;
                }
                if (t[i + 1][j] == '#') {
                    black++;
                } else {
                    white++;
                }
                if (t[i + 1][j + 1] == '#') {
                    black++;
                } else {
                    white++;
                }
                if (black == 0 || black == 3 || white == 0 || white == 3 || white == 4 || black == 4) {
                    correct = 1;
                    break;
                }
                black = 0;
                white = 0;
            }
            if (correct == 1) {
                break;
            }
        }
        if (correct == 1) {
            System.out.println(""YES"");
        } else {
            System.out.println(""NO"");
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC169_E.java,"public class atcoder_ABC169_E {
    public int[] twoSum(int[] numbers, int target) {
        int[] result = new int[2];
        if (numbers == null || numbers.length < 2) {
            return result;
        }
        Arrays.sort(numbers);
        int low = 0;
        int high = numbers.length - 1;
        while (low < high) {
            int sum = numbers[low] + numbers[high];
            if (sum == target) {
                result[0] = low + 1;
                result[1] = high + 1;
                return result;
            } else if (sum < target) {
                low++;
            } else {
                high--;
            }
        }
        return result;
    }
}","public class Main {
    public int[] twoSum(int[] numbers, int target) {
        int[] result = new int[2];
        if (numbers == null || numbers.length < 2) {
            return result;
        }
        Arrays.sort(numbers);
        int low = 0;
        int high = numbers.length - 1;
        while (low < high) {
            int sum = numbers[low] + numbers[high];
            if (sum == target) {
                result[0] = low + 1;
                result[1] = high + 1;
                return result;
            } else if (sum < target) {
                low++;
            } else {
                high--;
            }
        }
        return result;
    }
}"
CodeGen,avatar,Python,Java,codeforces_469_A.java,"public class codeforces_469_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int max_level = in.nextInt();
        int[] x = new int[max_level];
        for (int i = 0; i < max_level; i++) {
            x[i] = in.nextInt();
        }
        int[] y = new int[max_level];
        for (int i = 0; i < max_level; i++) {
            y[i] = in.nextInt();
        }
        x.pop(0);
        y.pop(0);
        x.remove(0);
        y.remove(0);
        Set<Integer> z = new HashSet<Integer>();
        z.addAll(x);
        z.addAll(y);
        if (z.contains(0)) {
            z.remove(0);
        }
        if (z.size()!= max_level) {
            System.out.println(""Oh, my keyboard!"");
        } else {
            System.out.println(""I become the guy."");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int max_level = in.nextInt();
        int[] x = new int[max_level];
        for (int i = 0; i < max_level; i++) {
            x[i] = in.nextInt();
        }
        int[] y = new int[max_level];
        for (int i = 0; i < max_level; i++) {
            y[i] = in.nextInt();
        }
        x.pop(0);
        y.pop(0);
        x.remove(0);
        y.remove(0);
        Set<Integer> z = new HashSet<Integer>();
        z.addAll(x);
        z.addAll(y);
        if (z.contains(0)) {
            z.remove(0);
        }
        if (z.size()!= max_level) {
            System.out.println(""Oh, my keyboard!"");
        } else {
            System.out.println(""I become the guy."");
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC104_C.java,"public class atcoder_ABC104_C {
    public int minCostII(int[][] costs) {
        int n = costs.length;
        int[][] dp = new int[n][2];
        for (int i = 0; i < n; i++) {
            dp[i][0] = costs[i][0];
            dp[i][1] = costs[i][1];
        }
        int[][] p = new int[n][2];
        for (int i = 0; i < n; i++) {
            p[i][0] = costs[i][0];
            p[i][1] = costs[i][1];
        }
        int ans = 10 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9","public class Main {
    public int minCostII(int[][] costs) {
        int n = costs.length;
        int[][] dp = new int[n][2];
        for (int i = 0; i < n; i++) {
            dp[i][0] = costs[i][0];
            dp[i][1] = costs[i][1];
        }
        int[][] p = new int[n][2];
        for (int i = 0; i < n; i++) {
            p[i][0] = costs[i][0];
            p[i][1] = costs[i][1];
        }
        int ans = 10 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9 * 9"
CodeGen,avatar,Python,Java,atcoder_ABC167_C.java,"public class atcoder_ABC167_C {
    public int minSubArrayLen(int s, int[] nums) {
        int[] c = new int[nums.length];
        int[] pre = new int[nums.length];
        int[] l = new int[nums.length];
        int[] rem = new int[nums.length];
        int ans = 0;
        int n = nums.length;
        for (int i = 0; i < n; i++) {
            c[i] = nums[i];
            pre[i] = i;
        }
        for (int i = 1; i < s + 1; i++) {
            int ca = 0;
            for (int j = 0; j < n; j++) {
                ca += c[j];
            }
            if (ca < s) {
                rem[0] = j;
            } else {
                rem[0] = -1;
            }
            for (int j = 1; j < n; j++) {
                ca = 0;
                for (int k = 0; k < rem[j - 1]; k++) {
                    ca += c[k];
                }
                if (ca < s) {
                    rem[j] = j;
                } else {
                    rem[j] = -1;
                }
            }
            if (rem[n - 1]!= -1) {
                for (int j = rem[n - 1]; j < n; j++) {
                    l[j] = j;
                }
                for (int j = 0; j < n; j++) {
                    if (rem[j]!= -1) {
                        l[rem[j]] = rem[j];
                    }
                }
                for (int j = 0; j < n; j++) {
                    if (l[j]!= j) {
                        l[j] = l[l[j]];
                    }
                }
                for (int j = 0; j < n; j++) {
                    if (l[j]!= j) {
                        rem[j] = l[j];
                    }
                }
            }
        }
        for (int i = 0; i < n; i++) {
            ca = 0;
            for (int j = 0; j < n; j++) {
                ca += c[j];
            }
            if (ans == 0) {
                ans = ca;
            } else {
                ans = Math.min(ans, ca);
            }
        }
        return ans;
    }
}","public class Main {
    public int minSubArrayLen(int s, int[] nums) {
        int[] c = new int[nums.length];
        int[] pre = new int[nums.length];
        int[] l = new int[nums.length];
        int[] rem = new int[nums.length];
        int ans = 0;
        int n = nums.length;
        for (int i = 0; i < n; i++) {
            c[i] = nums[i];
            pre[i] = i;
        }
        for (int i = 1; i < s + 1; i++) {
            int ca = 0;
            for (int j = 0; j < n; j++) {
                ca += c[j];
            }
            if (ca < s) {
                rem[0] = j;
            } else {
                rem[0] = -1;
            }
            for (int j = 1; j < n; j++) {
                ca = 0;
                for (int k = 0; k < rem[j - 1]; k++) {
                    ca += c[k];
                }
                if (ca < s) {
                    rem[j] = j;
                } else {
                    rem[j] = -1;
                }
            }
            if (rem[n - 1]!= -1) {
                for (int j = rem[n - 1]; j < n; j++) {
                    l[j] = j;
                }
                for (int j = 0; j < n; j++) {
                    if (rem[j]!= -1) {
                        l[rem[j]] = rem[j];
                    }
                }
                for (int j = 0; j < n; j++) {
                    if (l[j]!= j) {
                        l[j] = l[l[j]];
                    }
                }
                for (int j = 0; j < n; j++) {
                    if (l[j]!= j) {
                        rem[j] = l[j];
                    }
                }
            }
        }
        for (int i = 0; i < n; i++) {
            ca = 0;
            for (int j = 0; j < n; j++) {
                ca += c[j];
            }
            if (ans == 0) {
                ans = ca;
            } else {
                ans = Math.min(ans, ca);
            }
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,codeforces_456_A.java,"public class codeforces_456_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] m = new int[n][2];
        for(int i = 0; i < n; i++){
            String[] mItem = in.next().split("" "");
            m[i][0] = Integer.parseInt(mItem[0]);
            m[i][1] = Integer.parseInt(mItem[1]);
        }
        m = sort(m, true);
        int a = m[0][0];
        for(int i = 1; i < n; i++){
            if(m[i][1] > a){
                System.out.println(""Happy Alex"");
                break;
            }
            a = m[i][0];
        }
        if(a == m[n-1][0]){
            System.out.println(""Poor Alex"");
        }
    }
    public static int[][] sort(int[][] m, boolean reverse){
        int n = m.length;
        for(int i = 0; i < n; i++){
            for(int j = i+1; j < n; j++){
                if(m[i][1] > m[j][1]){
                    int temp = m[i][0];
                    m[i][0] = m[j][0];
                    m[j][0] = temp;
                }
            }
        }
        if(reverse){
            for(int i = 0; i < n; i++){
                for(int j = 0; j < n; j++){
                    m[i][j] = m[i][j] * -1;
                }
            }
        }
        return m;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] m = new int[n][2];
        for(int i = 0; i < n; i++){
            String[] mItem = in.nextLine().split("" "");
            m[i][0] = Integer.parseInt(mItem[0]);
            m[i][1] = Integer.parseInt(mItem[1]);
        }
        m = sort(m, true);
        int a = m[0][0];
        for(int i = 1; i < n; i++){
            if(m[i][1] > a){
                System.out.println(""Happy Alex"");
                break;
            }
            a = m[i][0];
        }
        if(a == m[n-1][0]){
            System.out.println(""Poor Alex"");
        }
    }
    public static int[][] sort(int[][] m, boolean reverse){
        int n = m.length;
        for(int i = 0; i < n; i++){
            for(int j = i+1; j < n; j++){
                if(m[i][1] > m[j][1]){
                    int temp = m[i][0];
                    m[i][0] = m[j][0];
                    m[j][0] = temp;
                }
            }
        }
        if(reverse){
            for(int i = 0; i < n; i++){
                for(int j = 0; j < n; j++){
                    m[i][j] = m[i][j] * -1;
                }
            }
        }
        return m;
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC021_B.java,"public class atcoder_AGC021_B {
    public double findRadius ( int[] x, int[] y ) {
        int N = x.length;
        int[] X = new int[N];
        int[] Y = new int[N];
        for ( int i = 0 ; i < N ; i ++ ) {
            X[i] = x[i];
            Y[i] = y[i];
        }
        Arrays.sort(X);
        Arrays.sort(Y);
        double ans = 0;
        for ( int i = 0 ; i < N ; i ++ ) {
            double[] D = new double[N];
            for ( int j = 0 ; j < N ; j ++ ) {
                if ( j!= i ) {
                    D[j] = Math.atan2(X[i] - X[j], Y[i] - Y[j]);
                }
            }
            D[i] += 2 * Math.PI;
            for ( int j = 0 ; j < N ; j ++ ) {
                if ( j!= i ) {
                    if ( D[j] - D[i] >= Math.PI ) {
                        ans += ( D[j] - D[i] ) - Math.PI;
                    }
                }
            }
        }
        return ans / ( 2 * Math.PI );
    }
}","public class Main {
    public double findRadius ( int[] x, int[] y ) {
        int N = x.length;
        int[] X = new int[N];
        int[] Y = new int[N];
        for ( int i = 0 ; i < N ; i ++ ) {
            X[i] = x[i];
            Y[i] = y[i];
        }
        Arrays.sort(X);
        Arrays.sort(Y);
        double ans = 0;
        for ( int i = 0 ; i < N ; i ++ ) {
            double[] D = new double[N];
            for ( int j = 0 ; j < N ; j ++ ) {
                if ( j!= i ) {
                    D[j] = Math.atan2(X[i] - X[j], Y[i] - Y[j]);
                }
            }
            D[i] += 2 * Math.PI;
            for ( int j = 0 ; j < N ; j ++ ) {
                if ( j!= i ) {
                    if ( D[j] - D[i] >= Math.PI ) {
                        ans += ( D[j] - D[i] ) - Math.PI;
                    }
                }
            }
        }
        return ans / ( 2 * Math.PI );
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC109_B.java,"public class atcoder_ABC109_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String[] strs = new String[n];
        for(int i = 0; i < n; i++){
            strs[i] = in.next();
        }
        int[] arr = new int[26];
        for(int i = 0; i < n; i++){
            for(int j = 0; j < strs[i].length(); j++){
                arr[strs[i].charAt(j) - 'a']++;
            }
        }
        boolean f = true;
        for(int i = 0; i < 26; i++){
            if(arr[i] >= 2){
                f = false;
                break;
            }
        }
        if(f){
            System.out.println(""Yes"");
        }else{
            System.out.println(""No"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String[] strs = new String[n];
        for(int i = 0; i < n; i++){
            strs[i] = in.next();
        }
        int[] arr = new int[26];
        for(int i = 0; i < n; i++){
            for(int j = 0; j < strs[i].length(); j++){
                arr[strs[i].charAt(j) - 'a']++;
            }
        }
        boolean f = true;
        for(int i = 0; i < 26; i++){
            if(arr[i] >= 2){
                f = false;
                break;
            }
        }
        if(f){
            System.out.println(""Yes"");
        }else{
            System.out.println(""No"");
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC107_D.java,"class BIT {
    int size;
    int[] tree;
    int depth;
    public BIT(int size) {
        this.size = size;
        tree = new int[size + 1];
        depth = bit_length(size);
    }
    public int bitsum(int l, int r) {
        if (r == null) {
            return tree[l];
        }
        return tree[r] - tree[l];
    }
    public void bitadd(int i, int x) {
        i += 1;
        while (i <= size) {
            tree[i] += x;
            i += i & -i;
        }
    }
    public static int bit_length(int n) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, int m) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, long m) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, int m) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, long m) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, int m, int k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, long m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, long m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, int m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, int m, int k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, int m, int k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, long m, int k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, int m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, long m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, int m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1","class BIT {
    int size;
    int[] tree;
    int depth;
    public BIT(int size) {
        this.size = size;
        tree = new int[size + 1];
        depth = bit_length(size);
    }
    public int bitsum(int l, int r) {
        if (r == null) {
            return tree[l];
        }
        return tree[r] - tree[l];
    }
    public void bitadd(int i, int x) {
        i += 1;
        while (i <= size) {
            tree[i] += x;
            i += i & -i;
        }
    }
    public static int bit_length(int n) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, int m) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, long m) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, int m) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, long m) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, int m, int k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, long m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, long m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, int m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, int m, int k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, int m, int k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, long m, int k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, int m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(int n, long m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1;
            ret++;
        }
        while (m!= 0) {
            m >>= 1;
            ret++;
        }
        while (k!= 0) {
            k >>= 1;
            ret++;
        }
        return ret;
    }
    public static int bit_length(long n, int m, long k) {
        int ret = 0;
        while (n!= 0) {
            n >>= 1"
CodeGen,avatar,Python,Java,atcoder_ABC123_D.java,"public class atcoder_ABC123_D {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        int y = in.nextInt();
        int z = in.nextInt();
        int k = in.nextInt();
        int[] a = new int[x];
        for(int a_i=0; a_i < x; a_i++) {
            a[a_i] = in.nextInt();
        }
        int[] b = new int[y];
        for(int b_i=0; b_i < y; b_i++) {
            b[b_i] = in.nextInt();
        }
        int[] c = new int[z];
        for(int c_i=0; c_i < z; c_i++) {
            c[c_i] = in.nextInt();
        }
        int[] ab = new int[k];
        for(int ab_i=0; ab_i < k; ab_i++) {
            ab[ab_i] = a[ab_i%x] + b[ab_i/x];
        }
        Arrays.sort(ab, Collections.reverseOrder());
        int[] abc = new int[k];
        for(int abc_i=0; abc_i < k; abc_i++) {
            abc[abc_i] = ab[abc_i] + c[abc_i%z];
        }
        Arrays.sort(abc, Collections.reverseOrder());
        for(int abc_i=0; abc_i < k; abc_i++) {
            System.out.println(abc[abc_i]);
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x = in.nextInt();
        int y = in.nextInt();
        int z = in.nextInt();
        int k = in.nextInt();
        long[] a = new long[x];
        for(int a_i=0; a_i < x; a_i++) {
            a[a_i] = in.nextLong();
        }
        long[] b = new long[y];
        for(int b_i=0; b_i < y; b_i++) {
            b[b_i] = in.nextLong();
        }
        long[] c = new long[z];
        for(int c_i=0; c_i < z; c_i++) {
            c[c_i] = in.nextLong();
        }
        List<Long> ab = new ArrayList<>();
        for (int i = 0; i < x; i++) {
            for (int j = 0; j < y; j++) {
                ab.add(a[i] + b[j]);
            }
        }
        Collections.sort(ab, Collections.reverseOrder());
        List<Long> abc = new ArrayList<>();
        for (int i = 0; i < Math.min(k, x * y); i++) {
            for (int j = 0; j < z; j++) {
                abc.add(ab.get(i) + c[j]);
            }
        }
        Collections.sort(abc, Collections.reverseOrder());
        for(int abc_i=0; abc_i < k; abc_i++) {
            System.out.println(abc.get(abc_i));
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_108_B.java,"public class codeforces_108_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int arr_i=0; arr_i < n; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        in.close();
        Arrays.sort(arr);
        for(int i=1; i<n; i++){
            if(arr[i]!= arr[i-1] && arr[i] < arr[i-1]*2){
                System.out.println(""YES"");
                return;
            }
        }
        System.out.println(""NO"");
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int arr_i=0; arr_i < n; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        in.close();
        Arrays.sort(arr);
        for(int i=1; i<n; i++){
            if(arr[i]!= arr[i-1] && arr[i] < arr[i-1]*2){
                System.out.println(""YES"");
                return;
            }
        }
        System.out.println(""NO"");
    }
}"
CodeGen,avatar,Python,Java,codeforces_369_B.java,"public class codeforces_369_B {
    public int[] getRow(int rowIndex) {
        int[] ans = new int[rowIndex + 1];
        for (int i = 0; i < rowIndex + 1; i++) {
            int t = i;
            int[] nums = new int[i + 1];
            for (int j = 0; j < i + 1; j++) {
                if (j >= t) {
                    nums[j] = t / j + 1;
                } else {
                    nums[j] = t / j;
                }
                t = t % j;
            }
            ans[i] = nums[i];
        }
        return ans;
    }
}","import java.util.*;

public class Main {
    public int[] getRow(int rowIndex) {
        int[] ans = new int[rowIndex + 1];
        for (int i = 0; i < rowIndex + 1; i++) {
            int t = i;
            int[] nums = new int[i + 1];
            for (int j = 0; j < i + 1; j++) {
                if (j >= t) {
                    nums[j] = t / j + 1;
                } else {
                    nums[j] = t / j;
                }
                t = t % j;
            }
            ans[i] = nums[i];
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC149_C.java,"public class atcoder_ABC149_C {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int X = in.nextInt();
        boolean[] prime = new boolean[100010];
        prime[0] = false;
        prime[1] = false;
        for (int i = 4; i < 100010; i += 2) {
            prime[i] = false;
        }
        int i = 3;
        while (i * i <= 100008) {
            if (prime[i]) {
                for (int j = i + i; j < 100008; j += i) {
                    prime[j] = false;
                }
            }
            i += 2;
        }
        for (int i = X; i < 100008; i++) {
            if (prime[i]) {
                System.out.println(i);
                break;
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int X = in.nextInt();
        boolean[] prime = new boolean[100010];
        for (int i = 0; i < 100010; i++) {
            prime[i] = true;
        }
        prime[0] = false;
        prime[1] = false;
        for (int i = 4; i < 100010; i += 2) {
            prime[i] = false;
        }
        int i = 3;
        while (i * i <= 100008) {
            if (prime[i]) {
                for (int j = i + i; j < 100008; j += i) {
                    prime[j] = false;
                }
            }
            i += 2;
        }
        for (i = X; i < 100008; i++) {
            if (prime[i]) {
                System.out.println(i);
                break;
            }
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC105_D.java,"public class atcoder_ABC105_D {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int M = in.nextInt();
        int[] A = new int[N];
        for(int A_i=0; A_i < N; A_i++){
            A[A_i] = in.nextInt();
        }
        int[] cum_remainders = new int[N+1];
        cum_remainders[0] = 0;
        for(int i=0; i < N; i++){
            cum_remainders[i+1] = (cum_remainders[i] + A[i]) % M;
        }
        int[] remainder_counts = new int[M];
        for(int i=0; i < M; i++){
            remainder_counts[i] = 0;
        }
        for(int i=0; i < N; i++){
            remainder_counts[cum_remainders[i+1]]++;
        }
        int combinations = 0;
        for(int i=0; i < M; i++){
            combinations += remainder_counts[i] * (remainder_counts[i] - 1) / 2;
        }
        System.out.println(combinations);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int M = in.nextInt();
        int[] A = new int[N];
        for(int A_i=0; A_i < N; A_i++){
            A[A_i] = in.nextInt();
        }
        int[] cum_remainders = new int[N+1];
        cum_remainders[0] = 0;
        for(int i=0; i < N; i++){
            cum_remainders[i+1] = (cum_remainders[i] + A[i]) % M;
        }
        long[] remainder_counts = new long[M];
        for(int i=0; i < M; i++){
            remainder_counts[i] = 0;
        }
        for(int i=0; i < N; i++){
            remainder_counts[cum_remainders[i+1]]++;
        }
        long combinations = 0;
        for(int i=0; i < M; i++){
            combinations += (long) remainder_counts[i] * (remainder_counts[i] - 1) / 2;
        }
        System.out.println(combinations);
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC002_B.java,"import java.util.*;
import java.math.*;
import java.text.*;
import java.awt.Point;

import static java.lang.Math.*;

public class atcoder_AGC002_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int[] b = new int[m];
        for(int b_i=0; b_i < m; b_i++){
            b[b_i] = in.nextInt();
        }
        int[] c = new int[m];
        for(int c_i=0; c_i < m; c_i++){
            c[c_i] = in.nextInt();
        }
        int[] d = new int[m];
        for(int d_i=0; d_i < m; d_i++){
            d[d_i] = in.nextInt();
        }
        int[] e = new int[m];
        for(int e_i=0; e_i < m; e_i++){
            e[e_i] = in.nextInt();
        }
        int[] f = new int[m];
        for(int f_i=0; f_i < m; f_i++){
            f[f_i] = in.nextInt();
        }
        int[] g = new int[m];
        for(int g_i=0; g_i < m; g_i++){
            g[g_i] = in.nextInt();
        }
        int[] h = new int[m];
        for(int h_i=0; h_i < m; h_i++){
            h[h_i] = in.nextInt();
        }
        int[] i = new int[m];
        for(int i_i=0; i_i < m; i_i++){
            i[i_i] = in.nextInt();
        }
        int[] j = new int[m];
        for(int j_i=0; j_i < m; j_i++){
            j[j_i] = in.nextInt();
        }
        int[] k = new int[m];
        for(int k_i=0; k_i < m; k_i++){
            k[k_i] = in.nextInt();
        }
        int[] l = new int[m];
        for(int l_i=0; l_i < m; l_i++){
            l[l_i] = in.nextInt();
        }
        int[] m = new int[m];
        for(int m_i=0; m_i < m; m_i++){
            m[m_i] = in.nextInt();
        }
        int[] n = new int[m];
        for(int n_i=0; n_i < m; n_i++){
            n[n_i] = in.nextInt();
        }
        int[] o = new int[m];
        for(int o_i=0; o_i < m; o_i++){
            o[o_i] = in.nextInt();
        }
        int[] p = new int[m];
        for(int p_i=0; p_i < m; p_i++){
            p[p_i] = in.nextInt();
        }
        int[] q = new int[m];
        for(int q_i=0; q_i < m; q_i++){
            q[q_i] = in.nextInt();
        }
        int[] r = new int[m];
        for(int r_i=0; r_i < m; r_i++){
            r[r_i] = in.nextInt();
        }
        int[] s = new int[m];
        for(int s_i=0; s_i < m; s_i++){
            s[s_i] = in.nextInt();
        }
        int[] t = new int[m];
        for(int t_i=0; t_i < m; t_i++){
            t[t_i] = in.nextInt();
        }
        int[] u = new int[m];
        for(int u_i=0; u_i < m; u_i++){
            u[u_i] = in.nextInt();
        }
        int[] v = new int[m];
        for(int v_i=0; v_i < m; v_i++){
            v[v_i] = in.nextInt();
        }
        int[] w = new int[m];
        for(int w_i=0; w_i < m; w_i++){
            w[w_i] = in.nextInt();
        }
        int[] x = new int[m];
        for(int x_i=0; x_i < m; x_i++){
            x[x_i] = in.nextInt();
        }
        int[] y = new int[m];
        for(int y_i=0; y_i < m; y_i++){
            y[y_i] = in.nextInt();
        }
        int[] z = new int[m];
        for(int z_i=0; z_i < m; z_i++){
            z[z_i] = in.nextInt();
        }
        int[] aa = new int[n];
        for(int aa_i=0; aa_i < n; aa_i++){
            aa[aa_i] = in.nextInt();
        }
        int[] bb = new int[m];
        for(int bb_i=0; bb_i < m; bb_i++){
            bb[bb_i] = in.nextInt();
        }
        int[] cc = new int[m];
        for(int cc_i=0; cc_i < m; cc_i++){
            cc[cc_i] = in.nextInt();","import java.util.*;
import java.math.*;
import java.text.*;
import java.awt.Point;

import static java.lang.Math.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int[] b = new int[m];
        for(int b_i=0; b_i < m; b_i++){
            b[b_i] = in.nextInt();
        }
        int[] c = new int[m];
        for(int c_i=0; c_i < m; c_i++){
            c[c_i] = in.nextInt();
        }
        int[] d = new int[m];
        for(int d_i=0; d_i < m; d_i++){
            d[d_i] = in.nextInt();
        }
        int[] e = new int[m];
        for(int e_i=0; e_i < m; e_i++){
            e[e_i] = in.nextInt();
        }
        int[] f = new int[m];
        for(int f_i=0; f_i < m; f_i++){
            f[f_i] = in.nextInt();
        }
        int[] g = new int[m];
        for(int g_i=0; g_i < m; g_i++){
            g[g_i] = in.nextInt();
        }
        int[] h = new int[m];
        for(int h_i=0; h_i < m; h_i++){
            h[h_i] = in.nextInt();
        }
        int[] i = new int[m];
        for(int i_i=0; i_i < m; i_i++){
            i[i_i] = in.nextInt();
        }
        int[] j = new int[m];
        for(int j_i=0; j_i < m; j_i++){
            j[j_i] = in.nextInt();
        }
        int[] k = new int[m];
        for(int k_i=0; k_i < m; k_i++){
            k[k_i] = in.nextInt();
        }
        int[] l = new int[m];
        for(int l_i=0; l_i < m; l_i++){
            l[l_i] = in.nextInt();
        }
        int[] m = new int[m];
        for(int m_i=0; m_i < m; m_i++){
            m[m_i] = in.nextInt();
        }
        int[] n = new int[m];
        for(int n_i=0; n_i < m; n_i++){
            n[n_i] = in.nextInt();
        }
        int[] o = new int[m];
        for(int o_i=0; o_i < m; o_i++){
            o[o_i] = in.nextInt();
        }
        int[] p = new int[m];
        for(int p_i=0; p_i < m; p_i++){
            p[p_i] = in.nextInt();
        }
        int[] q = new int[m];
        for(int q_i=0; q_i < m; q_i++){
            q[q_i] = in.nextInt();
        }
        int[] r = new int[m];
        for(int r_i=0; r_i < m; r_i++){
            r[r_i] = in.nextInt();
        }
        int[] s = new int[m];
        for(int s_i=0; s_i < m; s_i++){
            s[s_i] = in.nextInt();
        }
        int[] t = new int[m];
        for(int t_i=0; t_i < m; t_i++){
            t[t_i] = in.nextInt();
        }
        int[] u = new int[m];
        for(int u_i=0; u_i < m; u_i++){
            u[u_i] = in.nextInt();
        }
        int[] v = new int[m];
        for(int v_i=0; v_i < m; v_i++){
            v[v_i] = in.nextInt();
        }
        int[] w = new int[m];
        for(int w_i=0; w_i < m; w_i++){
            w[w_i] = in.nextInt();
        }
        int[] x = new int[m];
        for(int x_i=0; x_i < m; x_i++){
            x[x_i] = in.nextInt();
        }
        int[] y = new int[m];
        for(int y_i=0; y_i < m; y_i++){
            y[y_i] = in.nextInt();
        }
        int[] z = new int[m];
        for(int z_i=0; z_i < m; z_i++){
            z[z_i] = in.nextInt();
        }
        int[] aa = new int[n];
        for(int aa_i=0; aa_i < n; aa_i++){
            aa[aa_i] = in.nextInt();
        }
        int[] bb = new int[m];
        for(int bb_i=0; bb_i < m; bb_i++){
            bb[bb_i] = in.nextInt();
        }
        int[] cc = new int[m];
        for(int cc_i=0; cc_i < m; cc_i++){
            cc[cc_i] = in.nextInt();"
CodeGen,avatar,Python,Java,codeforces_189_A.java,"public class codeforces_189_A {
    public int cutRibbon(int n) {
        int[] arr = new int[4];
        int length = arr[0];
        arr = Arrays.stream(arr).sorted().toArray();
        if (length % arr[0] == 0) {
            return (int) (length / arr[0]);
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            int k = 0;
            for (int i = 0; i < n; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    k = check / arr[0];
                    ans = Math.max(ans, k + i);
                }
            }
        } else {
            int k = 0;
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        k = check / arr[0];
                        ans = Math.max(ans, k + i + j);
                    }
                }
            }
        }
        return ans;
    }
}","public class Main {
    public int cutRibbon(int n) {
        int[] arr = new int[4];
        int length = arr[0];
        arr = Arrays.stream(arr).sorted().toArray();
        if (length % arr[0] == 0) {
            return (int) (length / arr[0]);
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            int k = 0;
            for (int i = 0; i < n; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    k = check / arr[0];
                    ans = Math.max(ans, k + i);
                }
            }
        } else {
            int k = 0;
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        k = check / arr[0];
                        ans = Math.max(ans, k + i + j);
                    }
                }
            }
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC108_B.java,"public class atcoder_ABC108_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x1 = in.nextInt();
        int y1 = in.nextInt();
        int x2 = in.nextInt();
        int y2 = in.nextInt();
        int DIF1 = x2 - x1;
        int DIF2 = y2 - y1;
        int x3 = x2 - DIF2;
        int y3 = y2 + DIF1;
        int x4 = x1 - DIF2;
        int y4 = y1 + DIF1;
        System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x1 = in.nextInt();
        int y1 = in.nextInt();
        int x2 = in.nextInt();
        int y2 = in.nextInt();
        int DIF1 = x2 - x1;
        int DIF2 = y2 - y1;
        int x3 = x2 - DIF2;
        int y3 = y2 + DIF1;
        int x4 = x1 - DIF2;
        int y4 = y1 + DIF1;
        System.out.println(x3 + "" "" + y3 + "" "" + x4 + "" "" + y4);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC174_C.java,"public class atcoder_ABC174_C {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        for(int a0 = 0; a0 < t; a0++){
            int k = in.nextInt();
            int t = 0;
            for(int a1 = 1; a1 <= k; a1++){
                t = (t % k) * 10 + 7;
                if(t % k == 0){
                    System.out.println(a1);
                    break;
                }
            }
            if(a1 > k){
                System.out.println(-1);
            }
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int k = sc.nextInt();
        int t = 0;
        for (int i = 1; i <= k; i++) {
            t = (t % k) * 10 + 7;
            if (t % k == 0) {
                System.out.println(i);
                break;
            }
        }
        if (t % k != 0) {
            System.out.println(-1);
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC034_B.java,"import java.util.Scanner;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.PriorityQueue;
import java.util.Iterator;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.LinkedList;
import java.util.Deque;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.LinkedHashMap;
import java.util.Hashtable;
import java.util.HashSet;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java","import java.util.Scanner;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.PriorityQueue;
import java.util.Iterator;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.LinkedList;
import java.util.Deque;
import java.util.Stack;
import java.util.LinkedStack;
import java.util.LinkedHashMap;
import java.util.Hashtable;
import java.util.HashSet;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java"
CodeGen,avatar,Python,Java,codeforces_56_B.java,"public class codeforces_56_B {
    public int[] nextGreaterElement(int[] nums) {
        int[] result = new int[2];
        int mn = nums.length + 1;
        int mx = -1;
        for (int i = 0; i < nums.length; i++) {
            if (i + 1!= nums[i]) {
                mn = Math.min(mn, i);
                mx = Math.max(mx, i);
            }
        }
        if (mx == -1) {
            result[0] = 0;
            result[1] = 0;
        } else {
            int[] res = new int[nums.length];
            int j = mn;
            for (int i = 0; i < nums.length; i++) {
                if (i + 1!= nums[i]) {
                    res[j++] = nums[i];
                }
            }
            for (int i = mn; i <= mx; i++) {
                res[i] = nums[i];
            }
            if (Arrays.equals(res, nums)) {
                result[0] = mn;
                result[1] = mx;
            } else {
                result[0] = 0;
                result[1] = 0;
            }
        }
        return result;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextInt();
        }
        int[] result = nextGreaterElement(A);
        System.out.println(result[0] + "" "" + result[1]);
    }
    public static int[] nextGreaterElement(int[] nums) {
        int[] result = new int[2];
        int mn = nums.length + 1;
        int mx = -1;
        for (int i = 0; i < nums.length; i++) {
            if (i + 1!= nums[i]) {
                mn = Math.min(mn, i);
                mx = Math.max(mx, i);
            }
        }
        if (mx == -1) {
            result[0] = 0;
            result[1] = 0;
        } else {
            int[] res = new int[nums.length];
            int j = mn;
            for (int i = 0; i < nums.length; i++) {
                if (i + 1!= nums[i]) {
                    res[j++] = nums[i];
                }
            }
            for (int i = mn; i <= mx; i++) {
                res[i] = nums[i];
            }
            if (Arrays.equals(res, nums)) {
                result[0] = mn;
                result[1] = mx;
            } else {
                result[0] = 0;
                result[1] = 0;
            }
        }
        return result;
    }
}"
CodeGen,avatar,Python,Java,codeforces_397_B.java,"public class codeforces_397_B {
    public String[] readInput() {
        int t = Integer.parseInt(br.readLine());
        String[] queries = new String[t];
        for (int i = 0; i < t; i++) {
            String[] line = br.readLine().split("" "");
            int k = Integer.parseInt(line[0]) / Integer.parseInt(line[1]);
            int x = Integer.parseInt(line[2]);
            queries[i] = (k * x >= Integer.parseInt(line[0])? ""Yes"" : ""No"");
        }
        return queries;
    }

    public void processTask() {
        String[] res = new String[queries.length];
        for (int i = 0; i < queries.length; i++) {
            int k = queries[i].split("" "")[0] / queries[i].split("" "")[1];
            int x = queries[i].split("" "")[2];
            res[i] = (k * x >= queries[i].split("" "")[0]? ""Yes"" : ""No"");
        }
        System.out.println(java.util.Arrays.toString(res));
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        CodeforcesTask397BSolution solution = new CodeforcesTask397BSolution();
        solution.readInput();
        solution.processTask();
    }
}","import java.util.*;

public class Main {
    public String[] readInput(Scanner scanner) {
        int t = Integer.parseInt(scanner.nextLine());
        String[] queries = new String[t];
        for (int i = 0; i < t; i++) {
            String[] line = scanner.nextLine().split("" "");
            int k = Integer.parseInt(line[0]) / Integer.parseInt(line[1]);
            int x = Integer.parseInt(line[2]);
            queries[i] = (k * x >= Integer.parseInt(line[0])? ""Yes"" : ""No"");
            System.out.println((k * x >= Integer.parseInt(line[0])? ""Yes"" : ""No""));
        }
        return queries;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Main solution = new Main();
        solution.readInput(scanner);
    }
}"
CodeGen,avatar,Python,Java,codeforces_8_B.java,"public class codeforces_8_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] moves = new int[n][2];
        for(int i = 0; i < n; i++){
            moves[i][0] = in.nextInt();
            moves[i][1] = in.nextInt();
        }
        int x = 0, y = 0;
        boolean bug = false;
        for(int move : moves){
            int tempX = x, tempY = y;
            x += move[0];
            y += move[1];
            if(x < 0 || y < 0 || x >= n || y >= n) bug = true;
            else if(!d.containsKey(x, y)){
                for(int step : d_movement){
                    if(x + step[0] == tempX && y + step[1] == tempY) bug = true;
                }
            }
            else bug = true;
            if(bug) break;
            d.put(x, y, """");
        }
        if(bug) System.out.println(""BUG"");
        else System.out.println(""OK"");
    }
    static Map<Integer, Integer> d = new HashMap<>();
    static Map<Integer, Integer> d_movement = new HashMap<>();
    static {
        d_movement.put(0, -1);
        d_movement.put(1, 0);
        d_movement.put(0, 1);
        d_movement.put(-1, 0);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] moves = new int[n][2];
        for(int i = 0; i < n; i++){
            moves[i][0] = in.nextInt();
            moves[i][1] = in.nextInt();
        }
        int x = 0, y = 0;
        boolean bug = false;
        for(int[] move : moves){
            int tempX = x, tempY = y;
            x += move[0];
            y += move[1];
            if(x < 0 || y < 0 || x >= n || y >= n) bug = true;
            else if(!d.containsKey(x, y)){
                for(int step : d_movement){
                    if(x + step[0] == tempX && y + step[1] == tempY) bug = true;
                }
            }
            else bug = true;
            if(bug) break;
            d.put(x, y, """");
        }
        if(bug) System.out.println(""BUG"");
        else System.out.println(""OK"");
    }
    static Map<Integer, Integer> d = new HashMap<>();
    static Map<Integer, Integer> d_movement = new HashMap<>();
    static {
        d_movement.put(0, -1);
        d_movement.put(1, 0);
        d_movement.put(0, 1);
        d_movement.put(-1, 0);
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC005_B.java,"public class atcoder_AGC005_B {
    public int findContentChildren(int[] g, int[] b) {
        int n = g.length;
        int[] par = new int[n];
        int[] rank = new int[n];
        int[] size = new int[n];
        for (int i = 0; i < n; i++) {
            par[i] = i;
            size[i] = 1;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (g[i] > g[j] && b[i] < b[j]) {
                    unite(i, j);
                }
            }
        }
        int c = 0;
        for (int i = 0; i < n; i++) {
            int l = 1;
            int r = 1;
            if (i > 0 && g[i - 1] > g[i]) {
                l += size[par[i - 1]];
                unite(i - 1, i);
            }
            if (i + 1 < n && g[i + 1] > g[i]) {
                r += size[par[i + 1]];
                unite(i + 1, i);
            }
            c += l * r * g[i];
        }
        return c;
    }
    
    private void unite(int x, int y) {
        int px = par[x];
        int py = par[y];
        if (px!= py) {
            if (rank[px] < rank[py]) {
                par[px] = py;
                size[py] += size[px];
            } else {
                par[py] = px;
                size[px] += size[py];
                if (rank[px] == rank[py]) rank[px] += 1;
            }
        }
    }
}","public class Main {
    public int findContentChildren(int[] g, int[] b) {
        int n = g.length;
        int[] par = new int[n];
        int[] rank = new int[n];
        int[] size = new int[n];
        for (int i = 0; i < n; i++) {
            par[i] = i;
            size[i] = 1;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (g[i] > g[j] && b[i] < b[j]) {
                    unite(i, j);
                }
            }
        }
        int c = 0;
        for (int i = 0; i < n; i++) {
            int l = 1;
            int r = 1;
            if (i > 0 && g[i - 1] > g[i]) {
                l += size[par[i - 1]];
                unite(i - 1, i);
            }
            if (i + 1 < n && g[i + 1] > g[i]) {
                r += size[par[i + 1]];
                unite(i + 1, i);
            }
            c += l * r * g[i];
        }
        return c;
    }
    
    private void unite(int x, int y) {
        int px = par[x];
        int py = par[y];
        if (px!= py) {
            if (rank[px] < rank[py]) {
                par[px] = py;
                size[py] += size[px];
            } else {
                par[py] = px;
                size[px] += size[py];
                if (rank[px] == rank[py]) rank[px] += 1;
            }
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC155_D.java,"public class atcoder_ABC155_D {
    public int findKthLargest(int[] nums, int k) {
        int N = nums.length;
        if (N == 0) return 0;
        if (N == 1) return nums[0];
        if (k == 1) return nums[0];
        if (k == N) return nums[N - 1];
        int l = 0, r = N - 1;
        while (l < r) {
            int m = l + (r - l) / 2;
            if (nums[m] < nums[r]) {
                l = m + 1;
            } else {
                r = m;
            }
        }
        if (nums[l] < nums[r]) {
            l++;
        }
        if (k < l) return findKthLargest(nums, k);
        if (k > r) return findKthLargest(nums, k - (r - l + 1));
        int lt = l, rt = r;
        while (lt < rt) {
            int m = lt + (rt - lt) / 2;
            if (nums[m] < nums[rt]) {
                lt = m + 1;
            } else {
                rt = m;
            }
        }
        if (nums[lt] < nums[rt]) {
            lt++;
        }
        if (k == lt) return nums[lt];
        if (k == rt) return nums[rt];
        int lt2 = lt, rt2 = rt;
        while (lt2 < rt2) {
            int m = lt2 + (rt2 - lt2) / 2;
            if (nums[m] < nums[rt2]) {
                lt2 = m + 1;
            } else {
                rt2 = m;
            }
        }
        if (nums[lt2] < nums[rt2]) {
            lt2++;
        }
        if (k == lt2) return nums[lt2];
        if (k == rt2) return nums[rt2];
        return nums[k];
    }
}","public class Main {
    public int findKthLargest(int[] nums, int k) {
        int N = nums.length;
        if (N == 0) return 0;
        if (N == 1) return nums[0];
        if (k == 1) return nums[0];
        if (k == N) return nums[N - 1];
        int l = 0, r = N - 1;
        while (l < r) {
            int m = l + (r - l) / 2;
            if (nums[m] < nums[r]) {
                l = m + 1;
            } else {
                r = m;
            }
        }
        if (nums[l] < nums[r]) {
            l++;
        }
        if (k < l) return findKthLargest(nums, k);
        if (k > r) return findKthLargest(nums, k - (r - l + 1));
        int lt = l, rt = r;
        while (lt < rt) {
            int m = lt + (rt - lt) / 2;
            if (nums[m] < nums[rt]) {
                lt = m + 1;
            } else {
                rt = m;
            }
        }
        if (nums[lt] < nums[rt]) {
            lt++;
        }
        if (k == lt) return nums[lt];
        if (k == rt) return nums[rt];
        int lt2 = lt, rt2 = rt;
        while (lt2 < rt2) {
            int m = lt2 + (rt2 - lt2) / 2;
            if (nums[m] < nums[rt2]) {
                lt2 = m + 1;
            } else {
                rt2 = m;
            }
        }
        if (nums[lt2] < nums[rt2]) {
            lt2++;
        }
        if (k == lt2) return nums[lt2];
        if (k == rt2) return nums[rt2];
        return nums[k];
    }
}"
CodeGen,avatar,Python,Java,codeforces_705_B.java,"import java.util.*;
import java.lang.*;
import java.io.*;

class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int[] w = new int[n];
		for(int w_i=0; w_i < n; w_i++){
			w[w_i] = in.nextInt();
		}
		int c = 2;
		for(int i=0; i < n; i++){
			if(w[i] == 1){
				c = 2;
			} else if(w[i] % 2 == 0){
				c = 3 - c;
			} else {
				c = 3 - c;
			}
			System.out.println(c);
		}
	}
}","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int[] w = new int[n];
		for(int w_i=0; w_i < n; w_i++){
			w[w_i] = in.nextInt();
		}
		int c = 2;
		for(int i=0; i < n; i++){
			if(w[i] % 2 == 0){
				c = 3 - c;
			}
			System.out.println(c);
		}
	}
}"
CodeGen,avatar,Python,Java,atcoder_AGC013_A.java,"public class atcoder_AGC013_A {
    public int findMinStep(int[] A, int K) {
        int N = A.length;
        int[] dp = new int[N];
        dp[0] = 0;
        for (int i = 1; i < N; i++) {
            dp[i] = dp[i - 1] + A[i - 1];
        }
        int ans = 0;
        for (int i = 0; i < N; i++) {
            int cur = dp[i] + K;
            int prev = dp[i - 1];
            if (cur < prev) {
                ans = i + 1;
                break;
            }
        }
        return ans;
    }
}","public class Main {
    public int findMinStep(int[] A, int K) {
        int N = A.length;
        int[] dp = new int[N];
        dp[0] = 0;
        for (int i = 1; i < N; i++) {
            dp[i] = dp[i - 1] + A[i - 1];
        }
        int ans = 0;
        for (int i = 0; i < N; i++) {
            int cur = dp[i] + K;
            int prev = dp[i - 1];
            if (cur < prev) {
                ans = i + 1;
                break;
            }
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC122_C.java,"import java.util.*;
import java.lang.*;
import java.io.*;

public class atcoder_ABC122_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int q = sc.nextInt();
        String s = sc.next();
        int[] problems = new int[q];
        for(int i = 0; i < q; i++) {
            problems[i] = sc.nextInt();
        }
        int[] cumsum = new int[n];
        cumsum[0] = 0;
        for(int i = 1; i < n; i++) {
            cumsum[i] = cumsum[i-1] + 1;
        }
        for(int i = 0; i < q; i++) {
            int l = problems[i];
            int r = problems[i+1];
            int count = cumsum[r] - cumsum[l-1];
            System.out.println(count);
        }
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
        public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int q = sc.nextInt();
        String s = sc.next();
        int[] problems = new int[q];
        for(int i = 0; i < q; i++) {
            problems[i] = sc.nextInt();
        }
        int[] cumsum = new int[n];
        cumsum[0] = 0;
        for(int i = 1; i < n; i++) {
            cumsum[i] = cumsum[i-1] + 1;
        }
        for(int i = 0; i < q; i++) {
            int l = problems[i];
            int r = problems[i+1];
            int count = cumsum[r] - cumsum[l-1];
            System.out.println(count);
        }
    }
}"
CodeGen,avatar,Python,Java,codeforces_665_A.java,"import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;

public class codeforces_665_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int t1 = in.nextInt();
        int t2 = in.nextInt();
        int st = t2 + (t1 - 5) * 60;
        int fin = st + a;
        int now = 0;
        int ans = 0;
        while (now < fin && now < 1140) {
            if (now + b > st) {
                ans += 1;
            }
            now += b;
        }
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int a, at;
        int b, bt;
        int t1, t2;
        Scanner scanner = new Scanner(System.in);
        String[] input1 = scanner.nextLine().split("" "");
        String[] input2 = scanner.nextLine().split("" "");
        String[] input3 = scanner.nextLine().split("":"");
        a = Integer.parseInt(input1[0]);
        at = Integer.parseInt(input1[1]);
        b = Integer.parseInt(input2[0]);
        bt = Integer.parseInt(input2[1]);
        t1 = Integer.parseInt(input3[0]);
        t2 = Integer.parseInt(input3[1]);
        int st = t2 + (t1 - 5) * 60;
        int fin = st + at;
        int now = 0;
        int ans = 0;
        while (now < fin && now < 1140) {
            if (now + bt > st) {
                ans += 1;
            }
            now += b;
        }
        System.out.println(ans);
    } 
}"
CodeGen,avatar,Python,Java,atcoder_ABC171_B.java,"public class atcoder_ABC171_B {
    public int findKthLargest(int[] nums, int k) {
        int[] heap = new int[nums.length];
        for (int i = 0; i < heap.length; i++) {
            heap[i] = nums[i];
        }
        heapify(heap, heap.length - k);
        return heap[heap.length - k];
    }

    private void heapify(int[] heap, int heapSize) {
        for (int i = heapSize / 2; i >= 0; i--) {
            heapify(heap, i, heapSize);
        }
    }

    private void heapify(int[] heap, int i, int heapSize) {
        int left = 2 * i + 1;
        int right = 2 * i + 2;
        int largest = i;
        if (left < heapSize && heap[left] > heap[i]) {
            largest = left;
        }
        if (right < heapSize && heap[right] > heap[largest]) {
            largest = right;
        }
        if (largest!= i) {
            int temp = heap[i];
            heap[i] = heap[largest];
            heap[largest] = temp;
            heapify(heap, largest, heapSize);
        }
    }
}","public class Main {
    public int findKthLargest(int[] nums, int k) {
        int[] heap = new int[nums.length];
        for (int i = 0; i < heap.length; i++) {
            heap[i] = nums[i];
        }
        heapify(heap, heap.length - k);
        return heap[heap.length - k];
    }

    private void heapify(int[] heap, int heapSize) {
        for (int i = heapSize / 2; i >= 0; i--) {
            heapify(heap, i, heapSize);
        }
    }

    private void heapify(int[] heap, int i, int heapSize) {
        int left = 2 * i + 1;
        int right = 2 * i + 2;
        int largest = i;
        if (left < heapSize && heap[left] > heap[i]) {
            largest = left;
        }
        if (right < heapSize && heap[right] > heap[largest]) {
            largest = right;
        }
        if (largest!= i) {
            int temp = heap[i];
            heap[i] = heap[largest];
            heap[largest] = temp;
            heapify(heap, largest, heapSize);
        }
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC145_C.java,"import java.util.*;
import java.io.*;

public class atcoder_ABC145_C {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String line = br.readLine();
        int N = Integer.parseInt(line);
        int[] x = new int[N];
        int[] y = new int[N];
        for (int i = 0; i < N; i++) {
            x[i] = Integer.parseInt(br.readLine());
            y[i] = Integer.parseInt(br.readLine());
        }
        int result = 0;
        for (int i = 0; i < N - 1; i++) {
            int f = i;
            int t = i + 1;
            int distance = (int) Math.sqrt((x[t] - x[f]) * (x[t] - x[f]) + (y[t] - y[f]) * (y[t] - y[f]));
            result += distance;
        }
        result /= N - 1;
        System.out.println(result);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String line = br.readLine();
        int N = Integer.parseInt(line);
        int[] x = new int[N];
        int[] y = new int[N];
        for (int i = 0; i < N; i++) {
            x[i] = Integer.parseInt(br.readLine());
            y[i] = Integer.parseInt(br.readLine());
        }
        int result = 0;
        for (int i = 0; i < N - 1; i++) {
            int f = i;
            int t = i + 1;
            int distance = (int) Math.sqrt((x[t] - x[f]) * (x[t] - x[f]) + (y[t] - y[f]) * (y[t] - y[f]));
            result += distance;
        }
        result /= N - 1;
        System.out.println(result);
    }
}"
CodeGen,avatar,Python,Java,codeforces_333_B.java,"public class codeforces_333_B {
    public int totalNQueens(int n) {
        int[] b = new int[n * 2];
        b[0] = b[n - 1] = b[n] = b[2 * n - 1] = 0;
        for (int i = 0; i < n; i++) {
            b[i] = 1;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (isValid(b, i, j, n)) {
                    b[i + j] = 0;
                }
            }
        }
        return b[0];
    }
    private boolean isValid(int[] b, int i, int j, int n) {
        for (int k = 0; k < n; k++) {
            if (i == k || j == k || i + j == k || i - j == k || -i + j == k || -i - j == k) {
                return false;
            }
        }
        return true;
    }
}","public class Main {
    public int totalNQueens(int n) {
        int[] b = new int[n * 2];
        b[0] = b[n - 1] = b[n] = b[2 * n - 1] = 0;
        for (int i = 0; i < n; i++) {
            b[i] = 1;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (isValid(b, i, j, n)) {
                    b[i + j] = 0;
                }
            }
        }
        return b[0];
    }
    private boolean isValid(int[] b, int i, int j, int n) {
        for (int k = 0; k < n; k++) {
            if (i == k || j == k || i + j == k || i - j == k || -i + j == k || -i - j == k) {
                return false;
            }
        }
        return true;
    }
}"
CodeGen,avatar,Python,Java,codeforces_534_B.java,"public class codeforces_534_B {
    public int distanceBetweenBusStops(int v1, int v2, int t, int d) {
        int a = 1;
        int v = v1;
        int distance = 0;
        for (int i = 0; i < t; i++) {
            if (v - v2 > (t - i - 1) * d) {
                a *= -1;
                v = (t - i - 1) * d + v2;
            }
            distance += v;
            v += a * d;
        }
        return distance;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] vValues = scanner.nextLine().split("" "");
        String[] tValues = scanner.nextLine().split("" "");
        int v1 = Integer.parseInt(vValues[0]);
        int v2 = Integer.parseInt(vValues[1]);
        int t = Integer.parseInt(tValues[0]);
        int d = Integer.parseInt(tValues[1]);
        System.out.println(distanceBetweenBusStops(v1, v2, t, d));
    }
    public static int distanceBetweenBusStops(int v1, int v2, int t, int d) {
        int a = 1;
        int v = v1;
        int distance = 0;
        for (int i = 0; i < t; i++) {
            if (v - v2 > (t - i - 1) * d) {
                a *= -1;
                v = (t - i - 1) * d + v2;
            }
            distance += v;
            v += a * d;
        }
        return distance;
    }
}"
CodeGen,avatar,Python,Java,codeforces_609_B.java,"public class codeforces_609_B {
    public int findMaxForm (String[] strs, int m, int n) {
        int[] l = new int[26];
        for (int i = 0; i < n; i++) {
            l[strs[i].charAt(0) - 'a']++;
        }
        int res = 0;
        for (int i = 0; i < 26; i++) {
            if (l[i] > 1) {
                res += n - i - l[i];
                l[i]--;
            } else {
                res += n - i - 1;
            }
        }
        return res;
    }
}","public class Main {
    public int findMaxForm (String[] strs, int m, int n) {
        int[] l = new int[26];
        for (int i = 0; i < n; i++) {
            l[strs[i].charAt(0) - 'a']++;
        }
        int res = 0;
        for (int i = 0; i < 26; i++) {
            if (l[i] > 1) {
                res += n - i - l[i];
                l[i]--;
            } else {
                res += n - i - 1;
            }
        }
        return res;
    }
}"
CodeGen,avatar,Python,Java,codeforces_546_A.java,"public class codeforces_546_A {
    public int findKthNumber(int k, int n, int w) {
        int total = 0;
        for (int i = 1; i <= w; i++) {
            total += i * k;
            if (total > n) {
                return total - n;
            }
        }
        return total;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int k = scanner.nextInt();
        int n = scanner.nextInt();
        int w = scanner.nextInt();
        System.out.println(findKthNumber(k, n, w));
    }
    public static int findKthNumber(int k, int n, int w) {
        if (1 <= k && w <= 1000) {
            int total = 0;
            for (int i = 1; i <= w; i++) {
                total += i * k;
            }
            if (total > n) {
                return total - n;
            } else {
                return 0;
            }
        }
        return 0;
    }
}"
CodeGen,avatar,Python,Java,atcoder_AGC027_B.java,"public class atcoder_AGC027_B {
    public int minCostII(int N, int[][] costs) {
        int[] S = new int[N + 1];
        int[] E = new int[N + 1];
        for (int i = 0; i < N; i++) {
            S[i] = 0;
            E[i] = 0;
        }
        S[0] = 0;
        E[0] = 0;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < i; j++) {
                S[i] += costs[i][j];
            }
            for (int j = i + 1; j < N; j++) {
                E[i] += costs[i][j];
            }
        }
        int ans = Integer.MAX_VALUE;
        for (int i = 0; i < N; i++) {
            int k = i;
            int s = S[i];
            int e = E[i];
            while (k > 0) {
                s += costs[k][i - 1];
                e += costs[k][i];
                k--;
            }
            ans = Math.min(ans, e + s);
        }
        return ans + N * costs[0][0] + 5 * S[N];
    }
}","public class Main {
    public int minCostII(int N, int[][] costs) {
        int[] S = new int[N + 1];
        int[] E = new int[N + 1];
        for (int i = 0; i < N; i++) {
            S[i] = 0;
            E[i] = 0;
        }
        S[0] = 0;
        E[0] = 0;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < i; j++) {
                S[i] += costs[i][j];
            }
            for (int j = i + 1; j < N; j++) {
                E[i] += costs[i][j];
            }
        }
        int ans = Integer.MAX_VALUE;
        for (int i = 0; i < N; i++) {
            int k = i;
            int s = S[i];
            int e = E[i];
            while (k > 0) {
                s += costs[k][i - 1];
                e += costs[k][i];
                k--;
            }
            ans = Math.min(ans, e + s);
        }
        return ans + N * costs[0][0] + 5 * S[N];
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC165_C.java,"import java.util.*;
import java.io.*;

public class atcoder_ABC165_C {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] line = br.readLine().split("" "");
        int N = Integer.parseInt(line[0]);
        int M = Integer.parseInt(line[1]);
        int Q = Integer.parseInt(line[2]);
        int[] a = new int[Q];
        int[] b = new int[Q];
        int[] c = new int[Q];
        int[] d = new int[Q];
        for (int i = 0; i < Q; i++) {
            a[i] = Integer.parseInt(br.readLine());
            b[i] = Integer.parseInt(br.readLine());
            c[i] = Integer.parseInt(br.readLine());
            d[i] = Integer.parseInt(br.readLine());
        }
        solve(N, M, Q, a, b, c, d);
    }

    public static void solve(int N, int M, int Q, int[] a, int[] b, int[] c, int[] d) {
        int res = 0;
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = i + 1;
        }
        for (int i = 0; i < Q; i++) {
            int last_max = 1;
            if (A.length == 0) {
                res = 0;
                break;
            }
            for (int j = last_max; j <= M; j++) {
                int[] A_new = Arrays.copyOf(A, A.length);
                A_new[A_new.length - 1] = j;
                if (A_new[A_new.length - 1] - A[A_new.length - 2] == c[i]) {
                    A_new[A_new.length - 2] = j;
                    res = Math.max(res, d[i]);
                }
            }
        }
        System.out.println(res);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int M = scanner.nextInt();
        int Q = scanner.nextInt();
        int[] a = new int[Q];
        int[] b = new int[Q];
        int[] c = new int[Q];
        int[] d = new int[Q];
        for (int i = 0; i < Q; i++) {
            a[i] = scanner.nextInt();
            b[i] = scanner.nextInt();
            c[i] = scanner.nextInt();
            d[i] = scanner.nextInt();
        }
        solve(N, M, Q, a, b, c, d);
    }

    public static void solve(int N, int M, int Q, int[] a, int[] b, int[] c, int[] d) {
        int res = 0;
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = i + 1;
        }
        for (int i = 0; i < Q; i++) {
            int last_max = 1;
            if (A.length == 0) {
                res = 0;
                break;
            }
            for (int j = last_max; j <= M; j++) {
                int[] A_new = Arrays.copyOf(A, A.length);
                A_new[A_new.length - 1] = j;
                if (A_new[A_new.length - 1] - A[A_new.length - 2] == c[i]) {
                    A_new[A_new.length - 2] = j;
                    res = Math.max(res, d[i]);
                }
            }
        }
        System.out.println(res);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC164_D.java,"public class atcoder_ABC164_D {
    public int findMaxForm ( String[] strs, int m, int n ) {
        int[] m1 = new int [ m + 1 ];
        int[] a = new int [ m + 1 ];
        int[] r = new int [ n ];
        for ( int i = 0 ; i < strs. length ; i ++ ) {
            int[] e = new int [ strs [ i ]. length ( ) ];
            for ( int j = 0 ; j < strs [ i ]. length ( ) ; j ++ ) {
                e [ j ] = strs [ i ]. charAt ( j ) - '0';
            }
            a [ i + 1 ] = a [ i ] + e [ 0 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 1 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 2 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 3 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 4 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 5 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 6 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 7 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 8 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 9 ];
            m1 [ a [ i ] % m ] ++;
        }
        for ( int i = 0 ; i < m1. length ; i ++ ) {
            m1 [ i ] = m1 [ i ] / m;
        }
        for ( int i = 0 ; i < a. length ; i ++ ) {
            a [ i ] = a [ i ] / m;
        }
        for ( int i = 0 ; i < r. length ; i ++ ) {
            r [ i ] = 0;
        }
        for ( int i = 0 ; i < a. length ; i ++ ) {
            r [ a [ i ] % n ] += m1 [ a [ i ] % m ];
        }
        return r [ 0 ];
    }
}","public class Main {
    public int findMaxForm ( String[] strs, int m, int n ) {
        int[] m1 = new int [ m + 1 ];
        int[] a = new int [ m + 1 ];
        int[] r = new int [ n ];
        for ( int i = 0 ; i < strs. length ; i ++ ) {
            int[] e = new int [ strs [ i ]. length ( ) ];
            for ( int j = 0 ; j < strs [ i ]. length ( ) ; j ++ ) {
                e [ j ] = strs [ i ]. charAt ( j ) - '0';
            }
            a [ i + 1 ] = a [ i ] + e [ 0 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 1 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 2 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 3 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 4 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 5 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 6 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 7 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 8 ];
            m1 [ a [ i ] % m ] ++;
            a [ i + 1 ] = a [ i ] + e [ 9 ];
            m1 [ a [ i ] % m ] ++;
        }
        for ( int i = 0 ; i < m1. length ; i ++ ) {
            m1 [ i ] = m1 [ i ] / m;
        }
        for ( int i = 0 ; i < a. length ; i ++ ) {
            a [ i ] = a [ i ] / m;
        }
        for ( int i = 0 ; i < r. length ; i ++ ) {
            r [ i ] = 0;
        }
        for ( int i = 0 ; i < a. length ; i ++ ) {
            r [ a [ i ] % n ] += m1 [ a [ i ] % m ];
        }
        return r [ 0 ];
    }
}"
CodeGen,avatar,Python,Java,codeforces_612_B.java,"public class codeforces_612_B {
    public int findLengthOfLCIS(int[] nums) {
        int n = nums.length;
        int[] b = new int[n];
        b[0] = 1;
        for (int i = 1; i < n; i++) {
            b[i] = 1;
            for (int j = 0; j < i; j++) {
                if (nums[i] > nums[j]) {
                    b[i] = Math.max(b[i], b[j] + 1);
                }
            }
        }
        int res = 0;
        for (int i = 1; i < n; i++) {
            res += Math.abs(b[i] - b[i - 1]);
        }
        return res;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        System.out.println(findLengthOfLCIS(a));  
    }
    public static int findLengthOfLCIS(int[] nums) {
        int n = nums.length;
        int[] b = new int[n];
        b[0] = 1;
        for (int i = 1; i < n; i++) {
            b[i] = 1;
            for (int j = 0; j < i; j++) {
                if (nums[i] > nums[j]) {
                    b[i] = Math.max(b[i], b[j] + 1);
                }
            }
        }
        int res = 0;
        for (int i = 1; i < n; i++) {
            res += Math.abs(b[i] - b[i - 1]);
        }
        return res;
    }
}"
CodeGen,avatar,Python,Java,codeforces_154_A.java,"public class codeforces_154_A {
    public int findMinStep(String board, String hand) {
        int n = board.length();
        int m = hand.length();
        int[][] dp = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board.charAt(i) == hand.charAt(j)) {
                    dp[i][j] = 0;
                } else {
                    dp[i][j] = Integer.MAX_VALUE;
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (i == 0 && j == 0) {
                    dp[i][j] = 0;
                } else if (i == 0) {
                    dp[i][j] = dp[i][j - 1] + 1;
                } else if (j == 0) {
                    dp[i][j] = dp[i - 1][j] + 1;
                } else {
                    dp[i][j] = Math.min(dp[i - 1][j], dp[i][j - 1]) + 1;
                }
            }
        }
        return dp[n - 1][m - 1];
    }
}","public class Main {
    public int findMinStep(String board, String hand) {
        int n = board.length();
        int m = hand.length();
        int[][] dp = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board.charAt(i) == hand.charAt(j)) {
                    dp[i][j] = 0;
                } else {
                    dp[i][j] = Integer.MAX_VALUE;
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (i == 0 && j == 0) {
                    dp[i][j] = 0;
                } else if (i == 0) {
                    dp[i][j] = dp[i][j - 1] + 1;
                } else if (j == 0) {
                    dp[i][j] = dp[i - 1][j] + 1;
                } else {
                    dp[i][j] = Math.min(dp[i - 1][j], dp[i][j - 1]) + 1;
                }
            }
        }
        return dp[n - 1][m - 1];
    }
}"
CodeGen,avatar,Python,Java,codeforces_596_B.java,"public class codeforces_596_B {
    public int maxAbsoluteDifference(int[] A) {
        int n = A.length;
        int[] r = new int[n];
        int ans = 0;
        for (int i = 0; i < n; i++) {
            r[i] = A[i];
        }
        for (int i = 0; i < n - 1; i++) {
            ans += Math.abs(r[i] - r[i + 1]);
        }
        return ans;
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        long[] r = new long[n];
        for (int i = 0; i < n; i++) {
            r[i] = scanner.nextLong();
        }
        System.out.println(maxAbsoluteDifference(r));
    }
    public static long maxAbsoluteDifference(long[] r) {
        int n = r.length;
        long ans = Math.abs(r[0]);
        for (int i = 1; i < n; i++) {
            ans += Math.abs(r[i] - r[i - 1]);
        }
        return ans;
    }
}"
CodeGen,avatar,Python,Java,codeforces_669_A.java,"public class codeforces_669_A {
    public int divide(int dividend, int divisor) {
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        int result = 0;
        if (dividend < 0) {
            dividend = -dividend;
        }
        if (divisor < 0) {
            divisor = -divisor;
        }
        while (dividend >= divisor) {
            int temp = divisor;
            divisor <<= 1;
            result <<= 1;
            while (dividend >= temp) {
                dividend -= temp;
                result++;
            }
        }
        return isNegative? -result : result;
    }
}","public class Main {
    public int divide(int dividend, int divisor) {
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        int result = 0;
        if (dividend < 0) {
            dividend = -dividend;
        }
        if (divisor < 0) {
            divisor = -divisor;
        }
        while (dividend >= divisor) {
            int temp = divisor;
            divisor <<= 1;
            result <<= 1;
            while (dividend >= temp) {
                dividend -= temp;
                result++;
            }
        }
        return isNegative? -result : result;
    }
}"
CodeGen,avatar,Python,Java,codeforces_131_B.java,"import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;

public class codeforces_131_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        Map<Integer, Integer> w = new HashMap<Integer, Integer>();
        for(int w_i=0; w_i < n; w_i++){
            int w_item = in.nextInt();
            int w_count = in.nextInt();
            w.put(w_item, w_count);
        }
        int c = 0;
        for(Integer key : w.keySet()){
            if(key == 0){
                c += w.get(key) * (w.get(key) - 1);
            } else {
                if(w.containsKey(-key)){
                    c += w.get(key) * w.get(-key);
                }
            }
        }
        System.out.println(c / 2);
    }
}","import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        Map<Integer, Integer> w = new HashMap<Integer, Integer>();
        for(int w_i=0; w_i < n; w_i++){
            int w_item = in.nextInt();
            w.put(w_item, w.getOrDefault(w_item, 0) + 1);
        }
        int c = 0;
        for(Integer key : w.keySet()){
            if(key == 0){
                c += w.get(key) * (w.get(key) - 1);
            } else {
                if(w.containsKey(-key)){
                    c += w.get(key) * w.get(-key);
                }
            }
        }
        System.out.println(c / 2);
    }
}"
CodeGen,avatar,Python,Java,atcoder_ABC124_A.java,"public class atcoder_ABC124_A {
    public int maxProfit(int k, int[] prices) {
        int a = 0, b = 0;
        int c = 0;
        for (int i = 0; i < prices.length; i++) {
            if (i < k) {
                a = prices[i];
            } else {
                b = prices[i];
            }
            c = Math.max(c, a - b);
            if (a >= b) {
                a--;
            } else {
                b--;
            }
        }
        return c;
    }
}","public class Main {
    public int maxProfit(int k, int[] prices) {
        int a = 0, b = 0;
        int c = 0;
        for (int i = 0; i < prices.length; i++) {
            if (i < k) {
                a = prices[i];
            } else {
                b = prices[i];
            }
            c = Math.max(c, a - b);
            if (a >= b) {
                a--;
            } else {
                b--;
            }
        }
        return c;
    }
}"
CodeGen,avatar,Python,Java,codeforces_651_A.java,"public class codeforces_651_A {
    public int maxProfit(int[] prices) {
        int n = prices.length;
        if (n < 2) return 0;
        int[] left = new int[n];
        int[] right = new int[n];
        int max = 0;
        for (int i = 0; i < n; i++) {
            left[i] = Math.max(0, prices[i] - prices[i + 1]);
            right[i] = Math.max(0, prices[i + 1] - prices[i]);
            max = Math.max(max, left[i] + right[i]);
        }
        return max;
    }
}","public class Main {
    public int maxProfit(int[] prices) {
        int n = prices.length;
        if (n < 2) return 0;
        int[] left = new int[n];
        int[] right = new int[n];
        int max = 0;
        for (int i = 0; i < n; i++) {
            left[i] = Math.max(0, prices[i] - prices[i + 1]);
            right[i] = Math.max(0, prices[i + 1] - prices[i]);
            max = Math.max(max, left[i] + right[i]);
        }
        return max;
    }
}"
CodeGen,avatar,Python,Java,codeforces_629_A.java,"public class codeforces_629_A {
    public int findContentChildren(String[] cake) {
        int n = cake.length;
        int[] chocCount = new int[n];
        int happiness = 0;
        int nfat = 1;
        for (int i = 0; i < n; i++) {
            String line = cake[i];
            for (int j = 0; j < line.length(); j++) {
                if (line.charAt(j) == 'C') {
                    chocCount[i]++;
                }
            }
            if (chocCount[i] > 1) {
                for (int j = chocCount[i]; j > 1; j--) {
                    nfat *= j;
                }
                happiness += nfat / 2;
            }
            nfat = 1;
            chocCount[i] = 0;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (cake[i].charAt(j) == 'C') {
                    chocCount[i]++;
                }
            }
            if (chocCount[i] > 1) {
                for (int j = chocCount[i]; j > 1; j--) {
                    nfat *= j;
                }
                happiness += nfat / 2;
            }
            nfat = 1;
            chocCount[i] = 0;
        }
        return happiness;
    }
}","public class Main {
    public int findContentChildren(String[] cake) {
        int n = cake.length;
        int[] chocCount = new int[n];
        int happiness = 0;
        int nfat = 1;
        for (int i = 0; i < n; i++) {
            String line = cake[i];
            for (int j = 0; j < line.length(); j++) {
                if (line.charAt(j) == 'C') {
                    chocCount[i]++;
                }
            }
            if (chocCount[i] > 1) {
                for (int j = chocCount[i]; j > 1; j--) {
                    nfat *= j;
                }
                happiness += nfat / 2;
            }
            nfat = 1;
            chocCount[i] = 0;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (cake[i].charAt(j) == 'C') {
                    chocCount[i]++;
                }
            }
            if (chocCount[i] > 1) {
                for (int j = chocCount[i]; j > 1; j--) {
                    nfat *= j;
                }
                happiness += nfat / 2;
            }
            nfat = 1;
            chocCount[i] = 0;
        }
        return happiness;
    }
}"
CodeGen,avatar,Java,Python,codeforces_313_B.py,"def main():
    br = BufferedReader(InputStreamReader(System.in))
    pw = PrintWriter(OutputStreamWriter(System.out))
    Fast = class Fast:
        def sol(self, br, pw):
            st = StringTokenizer(br.readLine())
            s = st.nextToken()
            cum = [0] * (s.length() + 1)
            cum[0] = cum[s.length()] = 0
            for i in range(1, s.length()):
                if s[i] == s[i-1]:
                    cum[i] = cum[i-1] + 1
                else:
                    cum[i] = cum[i-1]
            st = StringTokenizer(br.readLine())
            q = int(st.nextToken())
            while q > 0:
                st = StringTokenizer(br.readLine())
                l = int(st.nextToken())
                r = int(st.nextToken()) - 1
                pw.println(cum[r] - cum[l - 1])
                q -= 1

if __name__ == '__main__':
    main()","def main():
    br = BufferedReader(InputStreamReader(System.in))
    pw = PrintWriter(OutputStreamWriter(System.out))
    Fast = class Fast:
        def sol(self, br, pw):
            st = StringTokenizer(br.readLine())
            s = st.nextToken()
            cum = [0] * (s.length() + 1)
            cum[0] = cum[s.length()] = 0
            for i in range(1, s.length()):
                if s[i] == s[i-1]:
                    cum[i] = cum[i-1] + 1
                else:
                    cum[i] = cum[i-1]
            st = StringTokenizer(br.readLine())
            q = int(st.nextToken())
            while q > 0:
                st = StringTokenizer(br.readLine())
                l = int(st.nextToken())
                r = int(st.nextToken()) - 1
                pw.println(cum[r] - cum[l - 1])
                q -= 1

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,codeforces_134_A.py,"def main ():
    sc = input()
    n = sc.next()
    arr = [sc.next() for _ in range(n)]
    sum = 0
    for i in range(n):
        sum += arr[i]
    c = 0
    sb = []
    for i in range(n):
        if (sum - arr[i]) % (n - 1) == 0 and (sum - arr[i]) / (n - 1) == arr[i]:
            c += 1
            sb.append(i + 1)
    print(c)
    print(''.join(sb))","def main ():
    n = int(input())
    arr = list(map(int, input().split()))
    sum = 0
    for i in range(len(arr)):
        sum += arr[i]
    c = 0
    sb = []
    for i in range(n):
        if (sum - arr[i]) % (n - 1) == 0 and (sum - arr[i]) // (n - 1) == arr[i]:
            c += 1
            sb.append(str(i + 1))
    print(c)
    print(' '.join(sb))
    
main ()"
CodeGen,avatar,Java,Python,atcoder_ABC145_B.py,"def main(args):
    cin = input()
    a = """"
    b = """"
    n = int(input())
    for i in range(n//2):
        a += input()
    if a+a == str(n)+str(n):
        print(""Yes"")
    else:
        print(""No"")","def main():
    a = """"
    b = """"
    n = int(input())
    str = input()
    for i in range(n//2):
        a += str[i]
    if a+a == str:
        print(""Yes"")
    else:
        print(""No"")
main()"
CodeGen,avatar,Java,Python,codeforces_672_A.py,"def generateString():
    sb = StringBuilder()
    for i in range(1,1000):
        sb.append(i)
    return sb.toString().toCharArray()

def main():
    sc = Scanner(System.in)
    n = sc.nextInt()
    print(generateString()[n-1])","def generateString():
    sb = StringBuilder()
    for i in range(1,1000):
        sb.append(i)
    return sb.toString().toCharArray()

def main():
    sc = Scanner(System.in)
    n = sc.nextInt()
    print(generateString()[n-1])

main()"
CodeGen,avatar,Java,Python,atcoder_ABC051_A.py,"def main(args):
    br = BufferedReader(InputStreamReader(System.in))
    sb = StringBuilder()
    a = br.readline()
    sb.append(a.replace("","","" ""))
    print(sb)

# 1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.","def main(args):
    br = BufferedReader(InputStreamReader(System.in))
    sb = StringBuilder()
    a = br.readline()
    sb.append(a.replace("","","" ""))
    print(sb)

# 1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1."
CodeGen,avatar,Java,Python,codeforces_408_B.py,"def isValid(s1, s2):
    s1 = list(s1)
    s2 = list(s2)
    n1 = len(s1)
    n2 = len(s2)
    if n1!= n2:
        return False
    m1 = {}
    m2 = {}
    for c in s1:
        if c in m1:
            m1[c] += 1
        else:
            m1[c] = 1
    for c in s2:
        if c in m2:
            m2[c] += 1
        else:
            m2[c] = 1
    ans = 0
    hs = set()
    for c in s2:
        if c not in hs:
            hs.add(c)
            x1 = m1[c]
            x2 = m2[c]
            x1 = min(x1, x2)
            ans += x1
    return ans == len(s2)

print(isValid(""abc"", ""abc""))
print(isValid(""abc"", ""abd""))
print(isValid(""abcd"", ""abc""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abce""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij","def isValid(s1, s2):
    s1 = list(s1)
    s2 = list(s2)
    n1 = len(s1)
    n2 = len(s2)
    if n1!= n2:
        return False
    m1 = {}
    m2 = {}
    for c in s1:
        if c in m1:
            m1[c] += 1
        else:
            m1[c] = 1
    for c in s2:
        if c in m2:
            m2[c] += 1
        else:
            m2[c] = 1
    ans = 0
    hs = set()
    for c in s2:
        if c not in hs:
            hs.add(c)
            x1 = m1[c]
            x2 = m2[c]
            x1 = min(x1, x2)
            ans += x1
    return ans == len(s2)

print(isValid(""abc"", ""abc""))
print(isValid(""abc"", ""abd""))
print(isValid(""abcd"", ""abc""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abce""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij""))
print(isValid(""abcd"", ""abkl""))
print(isValid(""abcd"", ""abmn""))
print(isValid(""abcd"", ""abop""))
print(isValid(""abcd"", ""abqr""))
print(isValid(""abcd"", ""abst""))
print(isValid(""abcd"", ""abtu""))
print(isValid(""abcd"", ""abuv""))
print(isValid(""abcd"", ""abwx""))
print(isValid(""abcd"", ""abyz""))
print(isValid(""abcd"", ""abcd""))
print(isValid(""abcd"", ""abde""))
print(isValid(""abcd"", ""abdf""))
print(isValid(""abcd"", ""abfg""))
print(isValid(""abcd"", ""abgh""))
print(isValid(""abcd"", ""abij"
CodeGen,avatar,Java,Python,codeforces_651_A.py,"def main():
    inp = input()
    a = int(inp[0])
    b = int(inp[1])
    c = 0
    if a == 1 and b == 1:
        print(0)
    else:
        while a >= 1 or b >= 1:
            if a >= b:
                b += 2
                a -= 2
            else:
                a += 2
                b -= 2
            if a <= 0 or b <= 0:
                c += 1
                break
            c += 1
        print(c)
main()



Input:

1 1

Output:

0

Explanation:

The first while loop is executed once.
The second while loop is never executed.
The third while loop is executed once.
The fourth while loop is never executed.
The fifth while loop is executed once.
The sixth while loop is never executed.
The seventh while loop is executed once.
The eighth while loop is never executed.
The ninth while loop is executed once.
The tenth while loop is never executed.
The eleventh while loop is executed once.
The twelfth while loop is never executed.
The thirteenth while loop is executed once.
The fourteenth while loop is never executed.
The fifteenth while loop is executed once.
The sixteenth while loop is never executed.
The seventeenth while loop is executed once.
The eighteenth while loop is never executed.
The nineteenth while loop is executed once.
The twentieth while loop is never executed.
The twenty-first while loop is executed once.
The twenty-second while loop is never executed.
The twenty-third while loop is executed once.
The twenty-fourth while loop is never executed.
The twenty-fifth while loop is executed once.
The twenty-sixth while loop is never executed.
The twenty-seventh while loop is executed once.
The twenty-eighth while loop is never executed.
The twenty-ninth while loop is executed once.
The thirty-first while loop is never executed.
The thirty-second while loop is executed once.
The thirty-third while loop is never executed.
The thirty-fourth while loop is executed once.
The thirty-fifth while loop is never executed.
The thirty-sixth while loop is executed once.
The thirty-seventh while loop is never executed.
The thirty-eighth while loop is executed once.
The thirty-ninth while loop is never executed.
The thirty-tenth while loop is executed once.
The thirty-eleventh while loop is never executed.
The thirty-twelfth while loop is executed once.
The thirty-thirteenth while loop is never executed.
The thirty-fourteenth while loop is executed once.
The thirty-fifteenth while loop is never executed.
The thirty-sixteenth while loop is executed once.
The thirty-seventeenth while loop is never executed.
The thirty-eighteenth while loop is executed once.
The thirty-nineteenth while loop is never executed.
The thirty-twentieth while loop is executed once.
The thirty-twenty-first while loop is never executed.
The thirty-twenty-second while loop is executed once.
The thirty-twenty-third while loop is never executed.
The thirty-twenty-fourth while loop is executed once.
The thirty-twenty-fifth while loop is never executed.
The thirty-twenty-sixth while loop is executed once.
The thirty-twenty-seventh while loop is never executed.
The thirty-twenty-eighth while loop is executed once.
The thirty-twenty-ninth while loop is never executed.
The thirty-thirty-first while loop is executed once.
The thirty-thirty-second while loop is never executed.
The thirty-thirty-third while loop is executed once.
The thirty-thirty-fourth while loop is never executed.
The thirty-thirty-fifth while loop is executed once.
The thirty-thirty-sixth while loop is never executed.
The thirty-thirty-seventh while loop is executed once.
The thirty-thirty-eighth while loop is never executed.
The thirty-thirty-ninth while loop is executed once.
The thirty-forty-first while loop is never executed.
The thirty-forty-second while loop is executed once.
The thirty-forty-third while loop is never executed.
The thirty-forty-fourth while loop is executed once.
The thirty-forty-fifth while loop is never executed.
The thirty-forty-sixth while loop is executed once.
The thirty-forty-seventh while loop is never executed.
The thirty-forty-eighth while loop is executed once.
The thirty-forty-ninth while loop is never executed.
The thirty-fifty-first while loop is executed once.
The thirty-fifty-second while loop is never executed.
The thirty-fifty-third while loop is executed once.
The thirty-fifty-fourth while loop is never executed.
The thirty-fifty-fifth while loop is executed once.
The thirty-fifty-sixth while loop is never executed.
The thirty-fifty-seventh while loop is executed once.
The thirty-fifty-eighth while loop is never executed.
The thirty-fifty-ninth while loop is executed once.
The three-hundred-first while loop is never executed.
The three-hundred-second while loop is executed once.
The three-hundred-third while loop is never executed.
The three-hundred-fourth while loop is executed once.
The three-hundred-fifth while loop is never executed.
The three-hundred-sixth while loop is executed once.
The three-hundred-seventh while loop is never executed.
The three-hundred-eighth while loop is executed once.
The three-hundred-ninth while loop is never executed.
The three-hundred-tenth while loop is executed once.
The three-hundred-eleventh while loop is never executed.
The three-hundred-twelfth while loop is executed once.
The three-hundred-thirteenth while loop is never executed.
The three-hundred-fourteenth while loop is executed once.
The three-hundred-fifteenth while loop is never executed.
The three-hundred-sixteenth while loop is executed once.
The three-hundred-seventeenth while loop is never executed.
The three-hundred-eighteenth while loop is executed once.
The three-hundred-nineteenth while loop is never executed.
The three-hundred-twentieth while loop is executed once.
The three-hundred-twenty-first while loop is never executed.
The three-hundred-twenty-second while loop is executed once.
The three-hundred-twenty-third while loop is never executed.
The three-hundred-twenty-fourth while loop is executed once.
The three-hundred-twenty-fifth while loop is never executed.
The three-hundred-twenty-sixth while loop is executed once.
The three-hundred-twenty-seventh while loop is never executed.
The three-hundred-twenty-eighth while loop is executed once.
The three-hundred-twenty-ninth while loop is never executed.
The three-hundred-thirty-first while loop is executed once.
The three-hundred-thirty-second while loop is never executed.
The three-hundred-thirty-third while loop is executed once.
The three-hundred-thirty-fourth while loop is never executed.
The three-hundred-thirty-fifth while loop is executed once.
The three-hundred-thirty-sixth while loop is never executed.
The three-hundred-thirty-seventh while loop is executed once.
The","def main():
    inp = input()
    a = int(inp[0])
    b = int(inp[1])
    c = 0
    if a == 1 and b == 1:
        print(0)
    else:
        while a >= 1 or b >= 1:
            if a >= b:
                b += 2
                a -= 2
            else:
                a += 2
                b -= 2
            if a <= 0 or b <= 0:
                c += 1
                break
            c += 1
        print(c)
main()"
CodeGen,avatar,Java,Python,atcoder_AGC010_B.py,"def possible(N, A):
    sum = 0
    for i in range(N):
        sum += A[i]
    NS = (N * (N + 1)) // 2
    K = sum // NS
    for i in range(N):
        j = i == 0 and N - 1 or i - 1
        d = K - (A[i] - A[j])
        if d < 0 or d % N!= 0:
            return False
    return True","def possible(N, A):
    sum = 0
    for i in range(N):
        sum += A[i]
    NS = (N * (N + 1)) // 2
    K = sum // NS
    for i in range(N):
        j = i == 0 and N - 1 or i - 1
        d = K - (A[i] - A[j])
        if d < 0 or d % N!= 0:
            return False
    return True"
CodeGen,avatar,Java,Python,atcoder_AGC034_B.py,"def main():
    inputStream = sys.stdin
    outputStream = sys.stdout
    in = sys.stdin
    out = sys.stdout
    BABC = atcoder_AGC034_B()
    BABC.solve(1, in, out)
    out.close()

class atcoder_AGC034_B:
    def solve(self, testNumber, in, out):
        s = in.read().replace('BC', 'D')
        cnt = 0
        tmp = 0
        for i in range(len(s)):
            if s[i] == 'A':
                tmp += 1
            else:
                cnt += tmp
                tmp = 0
        out.write(str(cnt))

if __name__ == '__main__':
    main()","def main():
    BABC = atcoder_AGC034_B()
    BABC.solve(1)

class atcoder_AGC034_B:
    def solve(self, testNumber):
        s = input().replace('BC', 'D')
        cnt = 0
        tmp = 0
        for i in range(len(s)):
            if s[i] == 'A':
                tmp += 1
            else:
                cnt += tmp
                tmp = 0
        print(str(cnt))

if __name__ == '__main__':
    main()"
CodeGen,avatar,Java,Python,codeforces_203_A.py,"import java.io.* ; import java.util.* ; class codeforces_203_A { def solve ( self ):
    x = self.nextInt ( )
    t = self.nextInt ( )
    a = self.nextInt ( )
    b = self.nextInt ( )
    da = self.nextInt ( )
    db = self.nextInt ( )
    first = a - ( da * 0 )
    for i in range ( 0, t ):
        second = b - ( db * i )
        if second + first == x or second == x or first == x or x == 0:
            print ""YES""
            break
    else:
        print ""NO""

def nextInt ( self ):
    return int ( raw_input ( ) )

def next ( self ):
    return raw_input ( )

def main ( ):
    try:
        br = BufferedReader ( file ( ""in.txt"" ) )
        out = file ( ""out.txt"", ""w"" )
        solve ( )
        br.close ( )
        out.close ( )
    except IOError:
        print ""Error""

class BufferedReader:
    def __init__ ( self, file ):
        self.file = file
        self.line = """"
        self.index = 0
    def readline ( self ):
        if self.line == """":
            self.line = self.file.readline ( )
        self.index = 0
        return self.line
    def readline ( self ):
        if self.line == """":
            self.line = self.file.readline ( )
        self.index = 0
        return self.line
    def hasNext ( self ):
        return self.line!= """"

if __name__ == ""__main__"":
    main ( )","import java.io.* ; import java.util.* ; class codeforces_203_A { def solve ( self ):
    x = self.nextInt ( )
    t = self.nextInt ( )
    a = self.nextInt ( )
    b = self.nextInt ( )
    da = self.nextInt ( )
    db = self.nextInt ( )
    first = a - ( da * 0 )
    for i in range ( 0, t ):
        second = b - ( db * i )
        if second + first == x or second == x or first == x or x == 0:
            print ""YES""
            break
    else:
        print ""NO""

def nextInt ( self ):
    return int ( raw_input ( ) )

def next ( self ):
    return raw_input ( )

def main ( ):
    try:
        br = BufferedReader ( file ( ""in.txt"" ) )
        out = file ( ""out.txt"", ""w"" )
        solve ( )
        br.close ( )
        out.close ( )
    except IOError:
        print ""Error""

class BufferedReader:
    def __init__ ( self, file ):
        self.file = file
        self.line = """"
        self.index = 0
    def readline ( self ):
        if self.line == """":
            self.line = self.file.readline ( )
        self.index = 0
        return self.line
    def readline ( self ):
        if self.line == """":
            self.line = self.file.readline ( )
        self.index = 0
        return self.line
    def hasNext ( self ):
        return self.line!= """"

if __name__ == ""__main__"":
    main ( )"
CodeGen,avatar,Java,Python,atcoder_ABC107_D.py,"def main(args):
    scan = Scanner(BufferedInputStream(System.in))
    N = scan.nextInt()
    arr = [scan.nextInt() for _ in range(N)]
    tsk = Task()
    print(tsk.solve(arr))


class Task:
    def solve(self, arr):
        n = len(arr)
        sorted = arr[:]
        sorted.sort()
        total = (n * (n + 1)) // 2
        l = 0
        r = n - 1
        while l < r:
            mid = l + (r - l) // 2
            target = sorted[mid]
            cur = 0
            cnt = 0
            bit = [0] * (2 * n + 2)
            for x in range(n + 1, bit.length):
                bit[x] += 1
            for i in range(n):
                cur += arr[i] <= target and 1 or - 1
                for x in range(cur + n + 1, bit.length):
                    bit[x] += bit[x - cur - n - 1]
                for x in range(cur + n):
                    cnt += bit[x]
            if cnt >= total // 2 + 1:
                r = mid
            else:
                l = mid + 1
        return sorted[l]","def main():
    N = int(input())
    arr = list(map(int, input().split()))
    tsk = Task()
    print(tsk.solve(arr))


class Task:
    def solve(self, arr):
        n = len(arr)
        sorted = arr[:]
        sorted.sort()
        total = (n * (n + 1)) // 2
        l = 0
        r = n - 1
        while l < r:
            mid = l + (r - l) // 2
            target = sorted[mid]
            cur = 0
            cnt = 0
            bit = [0] * (2 * n + 2)
            for x in range(n + 1, bit.length):
                bit[x] += 1
            for i in range(n):
                cur += arr[i] <= target and 1 or - 1
                for x in range(cur + n + 1, bit.length):
                    bit[x] += bit[x - cur - n - 1]
                for x in range(cur + n):
                    cnt += bit[x]
            if cnt >= total // 2 + 1:
                r = mid
            else:
                l = mid + 1
        return sorted[l]
    
main()"
CodeGen,avatar,Java,Python,codeforces_534_B.py,"def main ():
    v1, v2, t, d = map (int, raw_input().split())
    dp = [[-1] * 1150 for _ in range(t - 1)]
    for i in range(t - 1):
        dp[i][v1] = v1
    for i in range(1, t - 1):
        for j in range(1150):
            for x in range(d + 1):
                if j + x < 1150:
                    dp[i][j] = max(dp[i][j], dp[i - 1][j + x] + j)
                for x in range(d, 0, -1):
                    if j - x >= 0:
                        dp[i][j] = max(dp[i][j], dp[i - 1][j - x] + j)
    ans = -1
    for i in range(t - 2, t - 1):
        for j in range(1150):
            if abs(j - v2) <= d:
                ans = max(ans, dp[i][j] + v2)
    print ans","def main ():
    v1, v2 = map(int, input().split())
    t, d = map(int, input().split())
    dp = [[-1] * 1150 for _ in range(t - 1)]
    for i in range(t - 1):
        dp[i][v1] = v1
    for i in range(1, t - 1):
        for j in range(1150):
            for x in range(d + 1):
                if j + x < 1150:
                    dp[i][j] = max(dp[i][j], dp[i - 1][j + x] + j)
                for x in range(d, 0, -1):
                    if j - x >= 0:
                        dp[i][j] = max(dp[i][j], dp[i - 1][j - x] + j)
    ans = -1
    for i in range(t - 2, t - 1):
        for j in range(1150):
            if abs(j - v2) <= d:
                ans = max(ans, dp[i][j] + v2)
    print(ans)
    
main()"
CodeGen,avatar,Java,Python,atcoder_AGC035_B.py,"class atcoder_AGC035_B {
    def main(args):
        sc = Scanner(sys.stdin)
        numNode = sc.nextInt()
        numEdge = sc.nextInt()
        connect = [[] for _ in range(numNode)]
        for i in range(numEdge):
            a = sc.nextInt() - 1
            b = sc.nextInt() - 1
            connect[a].append(b)
            connect[b].append(a)
        if numEdge % 2!= 0:
            print(-1)
            return
        visited = [0] * numNode
        odd = [False] * numNode
        print_ = []
        dfs(0, -1)
        print(print_)
        print(sum(odd))

    def dfs(crt, parent):
        visited[crt] = 1
        crtConnect = connect[crt]
        for child in crtConnect:
            if child == parent or visited[child] == 1:
                continue
            elif visited[child] == 2:
                print_ += [crt + 1, child + 1]
                odd[crt] = not odd[crt]
            else:
                dfs(child, crt)
                if odd[child]:
                    print_ += [child + 1, crt + 1]
                    odd[child] = not odd[child]
                else:
                    print_ += [crt + 1, child + 1]
                    odd[crt] = not odd[crt]
        visited[crt] = 2

}","class atcoder_AGC035_B {
    def main(args):
        sc = Scanner(sys.stdin)
        numNode = sc.nextInt()
        numEdge = sc.nextInt()
        connect = [[] for _ in range(numNode)]
        for i in range(numEdge):
            a = sc.nextInt() - 1
            b = sc.nextInt() - 1
            connect[a].append(b)
            connect[b].append(a)
        if numEdge % 2!= 0:
            print(-1)
            return
        visited = [0] * numNode
        odd = [False] * numNode
        print_ = []
        dfs(0, -1)
        print(print_)
        print(sum(odd))

    def dfs(crt, parent):
        visited[crt] = 1
        crtConnect = connect[crt]
        for child in crtConnect:
            if child == parent or visited[child] == 1:
                continue
            elif visited[child] == 2:
                print_ += [crt + 1, child + 1]
                odd[crt] = not odd[crt]
            else:
                dfs(child, crt)
                if odd[child]:
                    print_ += [child + 1, crt + 1]
                    odd[child] = not odd[child]
                else:
                    print_ += [crt + 1, child + 1]
                    odd[crt] = not odd[crt]
        visited[crt] = 2

}"
CodeGen,avatar,Java,Python,codeforces_519_B.py,"import java.util.* ; import java.io.* ; 
def main ( ):
    sc = java.util.Scanner ( System.in )
    n = sc.nextInt ( )
    a = 0
    b = 0
    c = 0
    for i in range ( 0, n ):
        a += sc.nextInt ( )
    for i in range ( 0, n - 1 ):
        b += sc.nextInt ( )
    for i in range ( 0, n - 2 ):
        c += sc.nextInt ( )
    x = a - b
    y = b - c
    print x
    print y

# Run the program
main ( )","def main ( ):
    n = int ( input ( ) )
    a = 0
    b = 0
    c = 0
    inputs = list ( input ( ).split ( ) )
    for i in range ( n ):
        a += int ( inputs [ i ] )

    inputs = list ( input ( ).split ( ) )
    for i in range ( n - 1 ):
        b += int ( inputs [ i ] )

    inputs = list ( input ( ).split ( ) )
    for i in range ( n - 2 ):
        c += int ( inputs [ i ] )
    x = a - b
    y = b - c
    print ( x )
    print ( y )

# Run the program
main ( )"
CodeGen,avatar,Java,Python,codeforces_265_B.py,"def main():
    scn = raw_input()
    n = scn.next()
    arr = [int(scn.next()) for i in range(n)]
    ans = arr[0] + 1
    for i in range(1, n):
        ans += abs(arr[i] - arr[i-1]) + 2
    print ans","def main():
    n = int(input())
    arr = [int(input()) for i in range(n)]
    ans = arr[0] + 1
    for i in range(1, n):
        ans += abs(arr[i] - arr[i-1]) + 2
    print(ans)

main()"
CodeGen,avatar,Java,Python,codeforces_612_B.py,"def main():
    s = input()
    n = int(s.next())
    dp = [0] * 200001
    for i in range(n):
        dp[int(s.next())] = i
    ans = 0
    for i in range(2, n+1):
        ans += abs(dp[i] - dp[i-1])
    print(ans)","def main():
    n = int(input())
    dp = [0] * 200001
    inputs = list(input().split())
    for i in range(n):
        dp[int(inputs[i])] = i
    ans = 0
    for i in range(2, n+1):
        ans += abs(dp[i] - dp[i-1])
    print(ans)
    
main()"
CodeGen,avatar,Java,Python,atcoder_AGC033_B.py,"def main(args):
    scanner = Scanner(System.in)
    h = scanner.nextInt()
    w = scanner.nextInt()
    n = scanner.nextInt()
    sr = scanner.nextInt()
    sc = scanner.nextInt()
    s = scanner.next()
    t = scanner.next()
    end = False
    usafe = 1
    dsafe = h
    for i in range(n-1,-1,-1):
        if s[i] == 'U':
            usafe += 1
        elif s[i] == 'D':
            dsafe -= 1
        if usafe > dsafe:
            end = True
            break
        if i > 0:
            if t[i-1] == 'U':
                dsafe = min(dsafe+1,h)
            elif t[i-1] == 'D':
                usafe = max(usafe-1,1)
        if i > 0:
            if t[i-1] == 'L':
                rsafe = min(rsafe+1,w)
            elif t[i-1] == 'R':
                lsafe = max(lsafe-1,1)
    if sr >= usafe and sr <= dsafe and sc >= lsafe and sc <= rsafe and not end:
        print(""YES"")
    else:
        print(""NO"")

# Note:
#
# 1. The input string s is guaranteed to be a substring of t.
# 2. The input string t is guaranteed to be a substring of s.
# 3. The input string s is guaranteed to be a substring of t.
# 4. The input string t is guaranteed to be a substring of s.
# 5. The input string s is guaranteed to be a substring of t.
# 6. The input string t is guaranteed to be a substring of s.
# 7. The input string s is guaranteed to be a substring of t.
# 8. The input string t is guaranteed to be a substring of s.
# 9. The input string s is guaranteed to be a substring of t.
# 10. The input string t is guaranteed to be a substring of s.
# 11. The input string s is guaranteed to be a substring of t.
# 12. The input string t is guaranteed to be a substring of s.
# 13. The input string s is guaranteed to be a substring of t.
# 14. The input string t is guaranteed to be a substring of s.
# 15. The input string s is guaranteed to be a substring of t.
# 16. The input string t is guaranteed to be a substring of s.
# 17. The input string s is guaranteed to be a substring of t.
# 18. The input string t is guaranteed to be a substring of s.
# 19. The input string s is guaranteed to be a substring of t.
# 20. The input string t is guaranteed to be a substring of s.
# 21. The input string s is guaranteed to be a substring of t.
# 22. The input string t is guaranteed to be a substring of s.
# 23. The input string s is guaranteed to be a substring of t.
# 24. The input string t is guaranteed to be a substring of s.
# 25. The input string s is guaranteed to be a substring of t.
# 26. The input string t is guaranteed to be a substring of s.
# 27. The input string s is guaranteed to be a substring of t.
# 28. The input string t is guaranteed to be a substring of s.
# 29. The input string s is guaranteed to be a substring of t.
# 30. The input string t is guaranteed to be a substring of s.
# 31. The input string s is guaranteed to be a substring of t.
# 32. The input string t is guaranteed to be a substring of s.
# 33. The input string s is guaranteed to be a substring of t.
# 34. The input string t is guaranteed to be a substring of s.
# 35. The input string s is guaranteed to be a substring of t.
# 36. The input string t is guaranteed to be a substring of s.
# 37. The input string s is guaranteed to be a substring of t.
# 38. The input string t is guaranteed to be a substring of s.
# 39. The input string s is guaranteed to be a substring of t.
# 40. The input string t is guaranteed to be a substring of s.
# 41. The input string s is guaranteed to be a substring of t.
# 42. The input string t is guaranteed to be a substring of s.
# 43. The input string s is guaranteed to be a substring of t.
# 44. The input string t is guaranteed to be a substring of s.
# 45. The input string s is guaranteed to be a substring of t.
# 46. The input string t is guaranteed to be a substring of s.
# 47. The input string s is guaranteed to be a substring of t.
# 48. The input string t is guaranteed to be a substring of s.
# 49. The input string s is guaranteed to be a substring of t.
# 50. The input string t is guaranteed to be a substring of s.
# 51. The input string s is guaranteed to be a substring of t.
# 52. The input string t is guaranteed to be a substring of s.
# 53. The input string s is guaranteed to be a substring of t.
# 54. The input string t is guaranteed to be a substring of s.
# 55. The input string s is guaranteed to be a substring of t.
# 56. The input string t is guaranteed to be a substring of s.
# 57. The input string s is guaranteed to be a substring of t.
# 58. The input string t is guaranteed to be a substring of s.
# 59. The input string s is guaranteed to be a substring of t.
# 60. The input string t is guaranteed to be a substring of s.
# 61. The input string s is guaranteed to be a substring of t.
# 62. The input string t is guaranteed to be a substring of s.
# 63. The input string s is guaranteed to be a substring of t.
# 64. The input string t is guaranteed to be a substring of s.
# 65. The input string s is guaranteed to be a substring of t.
# 66. The input string t is guaranteed to be a substring of s.
# 67","def main():
    h, w, n = map(int, input().split())
    sr, sc = map(int, input().split())
    s = input()
    t = input()
    end = False
    usafe = 1
    dsafe = h
    lsafe = 1
    rsafe = w
    for i in range(n-1,-1,-1):
        if s[i] == 'U':
            usafe += 1
        elif s[i] == 'D':
            dsafe -= 1
        if usafe > dsafe:
            end = True
            break
        if i > 0:
            if t[i-1] == 'U':
                dsafe = min(dsafe+1,h)
            elif t[i-1] == 'D':
                usafe = max(usafe-1,1)
        if i > 0:
            if t[i-1] == 'L':
                rsafe = min(rsafe+1,w)
            elif t[i-1] == 'R':
                lsafe = max(lsafe-1,1)
    if sr >= usafe and sr <= dsafe and sc >= lsafe and sc <= rsafe and not end:
        print(""YES"")
    else:
        print(""NO"")
        
main()"
CodeGen,avatar,Java,Python,codeforces_276_B.py,"def main():
    input_str = raw_input()
    odd_count = 0
    for i in range(len(input_str)):
        ch = input_str[i]
        if map.has_key(ch):
            map[ch] += 1
        else:
            map[ch] = 1
    for key, value in map.iteritems():
        if value % 2!= 0:
            odd_count += 1
    if odd_count <= 1 or odd_count % 2!= 0:
        print ""First""
    else:
        print ""Second""

if __name__ == ""__main__"":
    main()","def main():
    input_str = input()
    odd_count = 0
    for i in range(len(input_str)):
        ch = input_str[i]
        if map.has_key(ch):
            map[ch] += 1
        else:
            map[ch] = 1
    for key, value in map.iteritems():
        if value % 2!= 0:
            odd_count += 1
    if odd_count <= 1 or odd_count % 2!= 0:
        print(""First"")
    else:
        print(""Second"")

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,codeforces_96_B.py,"def main ( ):
	in = raw_input ( )
	number = long ( in )
	ans = - 1
	value = 0
	mask = 2
	while value < number:
		s = bin ( mask )[2:]
		zeros = 0
		for c in s:
			if c == '0':
				zeros += 1
		if zeros!= len ( s ) - zeros:
			continue
		s = s.replace ( '0', '4' )
		s = s.replace ( '1', '7' )
		value = long ( s )
		ans = value
	print ans

def bin ( n ):
	return '{0:b}'.format ( n )

main ( )","def main ( ):
	number = int ( input ( ) )
	ans = - 1
	value = 0
	mask = 2
	while value < number:
		s = bin ( mask )[2:]
		zeros = 0
		for c in s:
			if c == '0':
				zeros += 1
		if zeros!= len ( s ) - zeros:
			continue
		s = s.replace ( '0', '4' )
		s = s.replace ( '1', '7' )
		value = int ( s )
		ans = value
	print(ans)

def bin ( n ):
	return '{0:b}'.format ( n )

main ( )"
CodeGen,avatar,Java,Python,codeforces_637_A.py,"def main(args):
    in = raw_input()
    n = int(in)
    ara = [int(i) for i in raw_input().split()]
    map = {}
    for i in range(n):
        v = int(in)
        ara[i] = v
        if not map.has_key(v):
            map[v] = 1
        else:
            map[v] = map[v] + 1
    max = 0
    for i in map.values():
        max = max if max > i else i
    mm = {}
    for i in range(n):
        if not mm.has_key(ara[i]):
            mm[ara[i]] = 1
        else:
            mm[ara[i]] = mm[ara[i]] + 1
        if mm[ara[i]] == max:
            print ara[i]
            break

if __name__ == ""__main__"":
    main(sys.argv)","def main():
    n = int(input())
    ara = list(map(int, input().split()))
    maps = {}
    for i in range(n):
        v = ara[i]
        if v in maps.keys():
            maps[v] = 1
        else:
            maps[v] = maps[v] + 1
    max = 0
    for i in maps.values():
        max = max if max > i else i
    mm = {}
    for i in range(n):
        if not mm.has_key(ara[i]):
            mm[ara[i]] = 1
        else:
            mm[ara[i]] = mm[ara[i]] + 1
        if mm[ara[i]] == max:
            print(ara[i])
            break

if __name__ == ""__main__"":
    main()"
CodeGen,avatar,Java,Python,codeforces_596_B.py,"def main(args):
    scan = Scanner(System.in)
    n = scan.nextInt()
    arr = [scan.nextInt() for _ in range(n)]
    answer = abs(arr[0])
    for i in range(1, n):
        answer += abs(arr[i] - arr[i-1])
    print(answer)


# Run the code below to see how your program works.

#print(main(['10']))","def main():
    n = int(input())
    arr = list(map(int, input().split()))
    answer = abs(arr[0])
    for i in range(1, n):
        answer += abs(arr[i] - arr[i-1])
    print(answer)

main()"
CodeGen,avatar,Java,Python,codeforces_8_B.py,"import java.util.Scanner ; public class codeforces_8_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int i, j, x = 0, y = 0, k = 0, dx, dy ; boolean flag = true ; String s ; char [ ] ch = new char [ 100 ] ; int [ ] [ ] co = new int [ 2 ] [ 101 ] ; s = scan.next ( ) ; ch = s.toCharArray ( ) ; co [ 0 ] [ k ] = x ; co [ 1 ] [ k ] = y ; ++ k ; for ( i = 0 ; i < s.length ( ) ; ++ i ) { switch ( ch [ i ] ) { case 'L' : -- x ; break ; case 'R' : ++ x ; break ; case 'U' : ++ y ; break ; case 'D' : -- y ; break ; } co [ 0 ] [ k ] = x ; co [ 1 ] [ k ] = y ; ++ k ; } for ( i = 0 ; i < k - 3 ; ++ i ) { for ( j = i + 3 ; j < k ; ++ j ) { dx = co [ 0 ] [ i ] - co [ 0 ] [ j ] ; dy = co [ 1 ] [ i ] - co [ 1 ] [ j ] ; if ( dx < 0 ) dx *= ( - 1 ) ; if ( dy < 0 ) dy *= ( - 1 ) ; if ( ( dx <= 1 && dy == 0 ) || ( dy <= 1 && dx == 0 ) ) { flag = false ; break ; } } if (! flag ) break ; } if ( flag ) System.out.println ( ""OK"" ) ; else System.out.println ( ""BUG"" ) ; } }","import java.util.Scanner ; public class codeforces_8_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int i, j, x = 0, y = 0, k = 0, dx, dy ; boolean flag = true ; String s ; char [ ] ch = new char [ 100 ] ; int [ ] [ ] co = new int [ 2 ] [ 101 ] ; s = scan.next ( ) ; ch = s.toCharArray ( ) ; co [ 0 ] [ k ] = x ; co [ 1 ] [ k ] = y ; ++ k ; for ( i = 0 ; i < s.length ( ) ; ++ i ) { switch ( ch [ i ] ) { case 'L' : -- x ; break ; case 'R' : ++ x ; break ; case 'U' : ++ y ; break ; case 'D' : -- y ; break ; } co [ 0 ] [ k ] = x ; co [ 1 ] [ k ] = y ; ++ k ; } for ( i = 0 ; i < k - 3 ; ++ i ) { for ( j = i + 3 ; j < k ; ++ j ) { dx = co [ 0 ] [ i ] - co [ 0 ] [ j ] ; dy = co [ 1 ] [ i ] - co [ 1 ] [ j ] ; if ( dx < 0 ) dx *= ( - 1 ) ; if ( dy < 0 ) dy *= ( - 1 ) ; if ( ( dx <= 1 && dy == 0 ) || ( dy <= 1 && dx == 0 ) ) { flag = false ; break ; } } if (! flag ) break ; } if ( flag ) System.out.println ( ""OK"" ) ; else System.out.println ( ""BUG"" ) ; } }"
CodeGen,avatar,Java,Python,atcoder_ABC166_C.py,"def main():
    N = int(input())
    M = int(input())
    H = [int(input()) for i in range(N)]
    ans = [True for i in range(N)]
    for i in range(M):
        temp1 = int(input())
        temp2 = int(input())
        if H[temp1-1] < H[temp2-1]:
            ans[temp1-1] = False
        elif H[temp1-1] > H[temp2-1]:
            ans[temp2-1] = False
        else:
            ans[temp1-1] = False
            ans[temp2-1] = False
    ans2 = 0
    for i in range(N):
        if ans[i]:
            ans2 += 1
    print(ans2)","def main():
    N, M = map(int, input().split())
    H = list(map(int, input().split()))
    ans = [True for i in range(N)]
    for i in range(M):
        temp1, temp2 = map(int, input().split())
        if H[temp1-1] < H[temp2-1]:
            ans[temp1-1] = False
        elif H[temp1-1] > H[temp2-1]:
            ans[temp2-1] = False
        else:
            ans[temp1-1] = False
            ans[temp2-1] = False
    ans2 = 0
    for i in range(N):
        if ans[i]:
            ans2 += 1
    print(ans2)

main()"
CodeGen,avatar,Java,Python,codeforces_379_A.py,"def main ( ):
    scan = input ( )
    a = int ( scan.next ( ) )
    b = int ( scan.next ( ) )
    res = a
    while a >= b:
        res += ( a / b )
        a = ( a / b ) + ( a % b )
    print ( res )



Input Format

The first line contains an integer,, denoting the number of test cases.
The next  lines contain two integers,, denoting the respective values of a and b.

Output Format

For each test case, print the value of the function on a new line.

Sample Input

2
1 2
3 4
Sample Output

2
3
Explanation

For the first test case, the input is 1 2, and the output is 2.
For the second test case, the input is 3 4, and the output is 3.


#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    int n;
    cin >> n;
    for(int i=0;i<n;i++) {
        int a,b;
        cin >> a >> b;
        int res = a;
        while(a >= b) {
            res += (a/b);
            a = (a/b) + (a%b);
        }
        cout << res << endl;
    }
    return 0;
}","def main ( ):
    a, b = map(int, input().split())
    res = a
    while a >= b:
        res += ( a // b )
        a = ( a // b ) + ( a % b )
    print ( res )

main ( )"
CodeGen,avatar,Java,Python,codeforces_146_A.py,"def main(args):
    in = input()
    n = int(in)
    str = in.next()
    l = list(str)
    for i in range(n):
        if l[i]!= '4' and l[i]!= '7':
            t = 1
        else:
            t = 0
    if t == 1:
        print(""NO"")
    else:
        for i in range(n//2):
            x = x + int(l[i])
        for i in range(n-1,n//2-1,-1):
            y = y + int(l[i])
        if x == y:
            print(""YES"")
        else:
            print(""NO"")","def main():
    n = int(input())
    str = input()
    l = list(str)
    t = 0
    x = 0
    y = 0
    for i in range(n):
        if l[i]!= '4' and l[i]!= '7':
            t = 1

    if t == 1:
        print(""NO"")
    else:
        for i in range(n//2):
            x = x + int(l[i])
        for i in range(n-1,n//2-1,-1):
            y = y + int(l[i])
        if x == y:
            print(""YES"")
        else:
            print(""NO"")
            
main()"
CodeGen,avatar,Java,Python,codeforces_287_A.py,"def main(args):
    sc = Scanner(System.in)
    str = ['','','','','']
    i = -1
    while i!= 3:
        i = i + 1
        str[i] = sc.next()
    u = -1
    i = -1
    yes = 0
    while u!= 2:
        u = u + 1
        i = -1
        while i!= 2:
            i = i + 1
            if (str[u][i] == str[u][i+1] and (str[u+1][i] == str[u][i] or str[u+1][i+1] == str[u][i])) or (str[u+1][i] == str[u+1][i+1] and (str[u][i] == str[u+1][i] or str[u][i+1] == str[u+1][i])):
                yes = 1
                break
        if yes == 1:
            break
    if yes == 0:
        print(""NO"")
    else:
        print(""YES"")","def main():
    str = []
    for i in range(4):
        str.append(input())
    u = -1
    i = -1
    yes = 0
    while u!= 2:
        u = u + 1
        i = -1
        while i!= 2:
            i = i + 1
            if (str[u][i] == str[u][i+1] and (str[u+1][i] == str[u][i] or str[u+1][i+1] == str[u][i])) or (str[u+1][i] == str[u+1][i+1] and (str[u][i] == str[u+1][i] or str[u][i+1] == str[u+1][i])):
                yes = 1
                break
        if yes == 1:
            break
    if yes == 0:
        print(""NO"")
    else:
        print(""YES"")

main()"
CodeGen,avatar,Java,Python,atcoder_AGC005_B.py,"def main ( ):
    N = int(input())
    a = [int(i) for i in input().split()]
    leftl = [0] * N
    rightl = [0] * N
    que = []
    index = 0
    while index < N:
        while len(que) > 0 and a[que[-1]] > a[index]:
            ind = que.pop()
            rightl[ind] = index - ind - 1
        que.append(index)
        index += 1
    while len(que) > 0:
        ind = que.pop()
        rightl[ind] = N - ind - 1
    index = N - 1
    while index >= 0:
        while len(que) > 0 and a[que[-1]] > a[index]:
            ind = que.pop()
            leftl[ind] = ind - index - 1
        que.append(index)
        index -= 1
    while len(que) > 0:
        ind = que.pop()
        leftl[ind] = ind - index - 1
    ans = 0
    for i in range(N):
        ans += (a[i] * (leftl[i] + 1) * (rightl[i] + 1))
    print(ans)



Java Output:

5
1 2 3 4 5

Python Output:

14

Explanation:

a = [1, 2, 3, 4, 5]

leftl = [0, 0, 0, 0, 0]
rightl = [0, 0, 0, 0, 0]
que = []
index = 0
while index < 5:
    while len(que) > 0 and a[que[-1]] > a[index]:
        ind = que.pop()
        rightl[ind] = index - ind - 1
    que.append(index)
    index += 1
while len(que) > 0:
    ind = que.pop()
    rightl[ind] = N - ind - 1
index = N - 1
while index >= 0:
    while len(que) > 0 and a[que[-1]] > a[index]:
        ind = que.pop()
        leftl[ind] = ind - index - 1
    que.append(index)
    index -= 1
while len(que) > 0:
    ind = que.pop()
    leftl[ind] = ind - index - 1
ans = 0
for i in range(N):
    ans += (a[i] * (leftl[i] + 1) * (rightl[i] + 1))
print(ans)","def main ( ):
    N = int(input())
    a = list(map(int, input().split()))
    leftl = [0] * N
    rightl = [0] * N
    que = []
    index = 0
    while index < N:
        while len(que) > 0 and a[que[-1]] > a[index]:
            ind = que.pop()
            rightl[ind] = index - ind - 1
        que.append(index)
        index += 1
    while len(que) > 0:
        ind = que.pop()
        rightl[ind] = N - ind - 1
    index = N - 1
    while index >= 0:
        while len(que) > 0 and a[que[-1]] > a[index]:
            ind = que.pop()
            leftl[ind] = ind - index - 1
        que.append(index)
        index -= 1
    while len(que) > 0:
        ind = que.pop()
        leftl[ind] = ind - index - 1
    ans = 0
    for i in range(N):
        ans += (a[i] * (leftl[i] + 1) * (rightl[i] + 1))
    print(ans)

main ( )"
CodeGen,avatar,Java,Python,atcoder_AGC046_A.py,"class atcoder_AGC046_A {
    def main(args):
        sc = FastReader()
        pw = PrintWriter(sys.stdout)
        x = sc.nextInt()
        count = 0
        tmp = x
        x = 0
        while x!= 360:
            x = x + tmp
            if x > 360:
                x = x - 360
            count += 1
        pw.println(count)


class FastReader {
    def __init__(self):
        self.br = BufferedReader(InputStreamReader(sys.stdin))
    def next(self):
        while True:
            try:
                return self.br.readline()[:-1]
            except IOError as e:
                if e.errno!= errno.EINTR:
                    raise
    def nextInt(self):
        return int(next(self))
    def nextLong(self):
        return long(next(self))
    def nextDouble(self):
        return float(next(self))
    def nextLine(self):
        return next(self).strip()
}



Input Format

The first line contains an integer,, denoting the number of test cases.
The  subsequent lines contain a single integer,, denoting the number of degrees in the circle.
The  subsequent lines contain two integers,, and, denoting the latitude and longitude of the center of the circle, respectively.

Output Format

For each test case, output one line containing the number of degrees in the circle.

Sample Input

2
1
1 2 0
2
2 0 1
Sample Output

3
0
Explanation

The center of the circle is at (1, 2) and the radius is 1.
The circle contains 3 degrees.


#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <iomanip>
using namespace std;

int main() {
    int t;
    cin >> t;
    for (int i = 0; i < t; i++) {
        int n;
        cin >> n;
        int a[n];
        for (int j = 0; j < n; j++) {
            cin >> a[j];
        }
        int ans = 0;
        for (int j = 0; j < n; j++) {
            int x = a[j];
            int y = a[(j + 1) % n];
            int r = sqrt(x * x + y * y);
            if (r == 0) {
                ans++;
            } else {
                int d = acos((x / r) * (x / r) + (y / r) * (y / r)) * 180 / 3.1415926;
                if (d > 360) {
                    d = d - 360;
                }
                ans += d;
            }
        }
        cout << ans << endl;
    }
    return 0;
}","class atcoder_AGC046_A {
    def main(args):
        sc = FastReader()
        pw = PrintWriter(sys.stdout)
        x = sc.nextInt()
        count = 0
        tmp = x
        x = 0
        while x!= 360:
            x = x + tmp
            if x > 360:
                x = x - 360
            count += 1
        pw.println(count)


class FastReader {
    def __init__(self):
        self.br = BufferedReader(InputStreamReader(sys.stdin))
    def next(self):
        while True:
            try:
                return self.br.readline()[:-1]
            except IOError as e:
                if e.errno!= errno.EINTR:
                    raise
    def nextInt(self):
        return int(next(self))
    def nextLong(self):
        return long(next(self))
    def nextDouble(self):
        return float(next(self))
    def nextLine(self):
        return next(self).strip()
}



Input Format

The first line contains an integer,, denoting the number of test cases.
The  subsequent lines contain a single integer,, denoting the number of degrees in the circle.
The  subsequent lines contain two integers,, and, denoting the latitude and longitude of the center of the circle, respectively.

Output Format

For each test case, output one line containing the number of degrees in the circle.

Sample Input

2
1
1 2 0
2
2 0 1
Sample Output

3
0
Explanation

The center of the circle is at (1, 2) and the radius is 1.
The circle contains 3 degrees.


#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <iomanip>
using namespace std;

int main() {
    int t;
    cin >> t;
    for (int i = 0; i < t; i++) {
        int n;
        cin >> n;
        int a[n];
        for (int j = 0; j < n; j++) {
            cin >> a[j];
        }
        int ans = 0;
        for (int j = 0; j < n; j++) {
            int x = a[j];
            int y = a[(j + 1) % n];
            int r = sqrt(x * x + y * y);
            if (r == 0) {
                ans++;
            } else {
                int d = acos((x / r) * (x / r) + (y / r) * (y / r)) * 180 / 3.1415926;
                if (d > 360) {
                    d = d - 360;
                }
                ans += d;
            }
        }
        cout << ans << endl;
    }
    return 0;
}"
CodeGen,avatar,Java,Python,codeforces_474_B.py,"def fun(arr,q,n,m):
    res = 0
    i = 0
    j = n
    while i <= j:
        md = i + (j - i) / 2
        if arr[md] == q:
            return md
        elif arr[md] > q:
            res = md
            j = md - 1
        else:
            i = md + 1
    return res

#!/bin/python
import sys

n = int(raw_input())
arr = [int(i) for i in raw_input().split()]
m = int(raw_input())
q = [int(i) for i in raw_input().split()]

print fun(arr,q,n,m)","def fun(arr,q,n,m):
    res = 0
    i = 0
    j = n
    while i <= j:
        md = i + (j - i) / 2
        if arr[md] == q:
            return md
        elif arr[md] > q:
            res = md
            j = md - 1
        else:
            i = md + 1
    return res

#!/bin/python
import sys

n = int(raw_input())
arr = [int(i) for i in raw_input().split()]
m = int(raw_input())
q = [int(i) for i in raw_input().split()]

print fun(arr,q,n,m)"
CodeGen,avatar,Java,Python,atcoder_ABC126_E.py,"class atcoder_ABC126_E {
    def doIt(self):
        n = int(input())
        uf = UnionFindTree(n)
        m = int(input())
        for i in range(m):
            x, y, z = map(int, input().split())
            uf.unite(x, y)
        cnt = 0
        for i in range(n):
            if uf.par[i] == i:
                cnt += 1
        print(cnt)

    class UnionFindTree:
        def __init__(self, n):
            self.n = n
            self.par = [i for i in range(n)]
            self.rank = [0 for i in range(n)]

        def find(self, x):
            if self.par[x] == x:
                return x
            else:
                return self.find(self.par[x])

        def unite(self, x, y):
            x, y = self.find(x), self.find(y)
            if x == y:
                return
            if self.rank[x] < self.rank[y]:
                self.par[x] = y
            else:
                self.par[y] = x
                if self.rank[x] == self.rank[y]:
                    self.rank[x] += 1

        def same(self, x, y):
            return self.find(x) == self.find(y)
}

if __name__ == '__main__':
    s = atcoder_ABC126_E()
    s.doIt()","class atcoder_ABC126_E:
    def doIt(self):
        n, m = map(int, input().split())
        uf = UnionFindTree(n)
        for i in range(m):
            x, y, z = map(int, input().split())
            uf.unite(x, y)
        cnt = 0
        for i in range(n):
            if uf.par[i] == i:
                cnt += 1
        print(cnt)

    class UnionFindTree:
        def __init__(self, n):
            self.n = n
            self.par = [i for i in range(n)]
            self.rank = [0 for i in range(n)]

        def find(self, x):
            if self.par[x] == x:
                return x
            else:
                return self.find(self.par[x])

        def unite(self, x, y):
            x, y = self.find(x), self.find(y)
            if x == y:
                return
            if self.rank[x] < self.rank[y]:
                self.par[x] = y
            else:
                self.par[y] = x
                if self.rank[x] == self.rank[y]:
                    self.rank[x] += 1

        def same(self, x, y):
            return self.find(x) == self.find(y)


if __name__ == '__main__':
    s = atcoder_ABC126_E()
    s.doIt()"
CodeGen,avatar,Java,Python,atcoder_ABC123_D.py,"import java.util.* ; public class atcoder_ABC123_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x [ ] = new int [ 3 ] ; int max = 0 ; for ( int i = 0 ; i < 3 ; ++ i ) { x [ i ] = sc.nextInt ( ) ; max = Math.max ( max, x [ i ] ) ; } int k = sc.nextInt ( ) ; List < Long > a [ ] = new List [ 3 ] ; for ( int i = 0 ; i < 3 ; ++ i ) a [ i ] = new ArrayList < Long > ( ) ; for ( int i = 0 ; i < 3 ; ++ i ) { for ( int j = 0 ; j < x [ i ] ; ++ j ) a [ i ].add ( sc.nextLong ( ) ) ; Collections.sort ( a [ i ] ) ; } sc.close ( ) ; List < Long > ans = new List < Long > ( ) ; for ( int i = 0 ; i < x [ 0 ] ; ++ i ) { for ( int j = 0 ; j < x [ 1 ] ; ++ j ) { for ( int m = 0 ; m < x [ 2 ] ; ++ m ) { if ( ( i + 1 ) * ( j + 1 ) * ( m + 1 ) <= k ) { long tmp = a [ 0 ].get ( x [ 0 ] - i - 1 ) + a [ 1 ].get ( x [ 1 ] - j - 1 ) + a [ 2 ].get ( x [ 2 ] - m - 1 ) ; ans.add ( tmp ) ; } } } } Collections.sort ( ans ) ; int n = ans.size ( ) ; for ( int i = 0 ; i < k ; ++ i ) System.out.println ( ans.get ( n - i - 1 ) ) ; } }","import java.util.* ; public class atcoder_ABC123_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x [ ] = new int [ 3 ] ; int max = 0 ; for ( int i = 0 ; i < 3 ; ++ i ) { x [ i ] = sc.nextInt ( ) ; max = Math.max ( max, x [ i ] ) ; } int k = sc.nextInt ( ) ; List < Long > a [ ] = new List [ 3 ] ; for ( int i = 0 ; i < 3 ; ++ i ) a [ i ] = new ArrayList < Long > ( ) ; for ( int i = 0 ; i < 3 ; ++ i ) { for ( int j = 0 ; j < x [ i ] ; ++ j ) a [ i ].add ( sc.nextLong ( ) ) ; Collections.sort ( a [ i ] ) ; } sc.close ( ) ; List < Long > ans = new List < Long > ( ) ; for ( int i = 0 ; i < x [ 0 ] ; ++ i ) { for ( int j = 0 ; j < x [ 1 ] ; ++ j ) { for ( int m = 0 ; m < x [ 2 ] ; ++ m ) { if ( ( i + 1 ) * ( j + 1 ) * ( m + 1 ) <= k ) { long tmp = a [ 0 ].get ( x [ 0 ] - i - 1 ) + a [ 1 ].get ( x [ 1 ] - j - 1 ) + a [ 2 ].get ( x [ 2 ] - m - 1 ) ; ans.add ( tmp ) ; } } } } Collections.sort ( ans ) ; int n = ans.size ( ) ; for ( int i = 0 ; i < k ; ++ i ) System.out.println ( ans.get ( n - i - 1 ) ) ; } }"
CodeGen,avatar,Java,Python,codeforces_350_B.py,"def main ():
    n = int(input())
    a = [int(i) for i in input().split()]
    b = [int(i) for i in input().split()]
    num = [0] * (n + 1)
    for i in range(1, n + 1):
        num[b[i]] += 1
    st = [False] * (n + 1)
    for i in range(1, n + 1):
        if a[i] == 1:
            st[i] = True
            ss = """"
            x = b[i]
            sss = """"
            s = 1
            while not st[x] and num[x] == 1 and x!= 0 and a[x]!= 1:
                sss = sss + str(x)
                st[x] = True
                x = b[x]
                s += 1
            if s > ans:
                ans = s
                ss = sss.reverse()
    print(ans)
    print(ss)","def main ():
    n = int(input())
    a = [0] * (n + 1)
    b = [0] * (n + 1)
    inputs = list(input().split())
    for i in range(1, n + 1):
        a[i] = int(inputs[i - 1])
    inputs = list(input().split())
    for i in range(1, n + 1):
        b[i] = int(inputs[i - 1])
    num = [0] * (n + 1)
    for i in range(1, n + 1):
        num[b[i]] += 1
    ans = 0
    st = [False] * (n + 1)
    for i in range(1, n + 1):
        if a[i] == 1:
            st[i] = True
            ss = """"
            x = b[i]
            sss = """"
            s = 1
            while not st[x] and num[x] == 1 and x!= 0 and a[x]!= 1:
                sss = sss + str(x)
                st[x] = True
                x = b[x]
                s += 1
            if s > ans:
                ans = s
                ss = sss.reverse()
    print(ans)
    print(ss)
    
main ()"
CodeGen,avatar,Java,Python,atcoder_ABC125_C.py,"import java.util.Scanner ; public class atcoder_ABC125_C { public static int [ ] A ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } sc.close ( ) ; int [ ] M = new int [ N ] ; int [ ] L = new int [ N ] ; int [ ] R = new int [ N ] ; L [ 0 ] = A [ 0 ] ; for ( int i = 1 ; i < N ; i ++ ) { L [ i ] = gcd ( L [ i - 1 ], A [ i ] ) ; } R [ N - 1 ] = A [ N - 1 ] ; for ( int i = N - 2 ; i >= 0 ; i -- ) { R [ i ] = gcd ( R [ i + 1 ], A [ i ] ) ; } int answer = max ( L [ N - 2 ], R [ 1 ] ) ; for ( int i = 1 ; i < N - 1 ; i ++ ) { ; answer = max ( answer, gcd ( L [ i - 1 ], R [ i + 1 ] ) ) ; } System.out.println ( answer ) ; } public static int gcd ( int a, int b ) { int tmp ; if ( b > a ) { tmp = a ; a = b ; b = tmp ; } if ( b == 0 ) { return a ; } int r = - 1 ; do { r = a % b ; a = b ; b = r ; } while ( r!= 0 ) ; return a ; } }","import java.util.Scanner ; public class atcoder_ABC125_C { public static int [ ] A ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } sc.close ( ) ; int [ ] M = new int [ N ] ; int [ ] L = new int [ N ] ; int [ ] R = new int [ N ] ; L [ 0 ] = A [ 0 ] ; for ( int i = 1 ; i < N ; i ++ ) { L [ i ] = gcd ( L [ i - 1 ], A [ i ] ) ; } R [ N - 1 ] = A [ N - 1 ] ; for ( int i = N - 2 ; i >= 0 ; i -- ) { R [ i ] = gcd ( R [ i + 1 ], A [ i ] ) ; } int answer = max ( L [ N - 2 ], R [ 1 ] ) ; for ( int i = 1 ; i < N - 1 ; i ++ ) { ; answer = max ( answer, gcd ( L [ i - 1 ], R [ i + 1 ] ) ) ; } System.out.println ( answer ) ; } public static int gcd ( int a, int b ) { int tmp ; if ( b > a ) { tmp = a ; a = b ; b = tmp ; } if ( b == 0 ) { return a ; } int r = - 1 ; do { r = a % b ; a = b ; b = r ; } while ( r!= 0 ) ; return a ; } }"
CodeGen,avatar,Java,Python,codeforces_95_A.py,"def main():
    n = int(input())
    ss = [[]] * n
    for i in range(n):
        ss[i] = input().strip()
    cc = input().strip()
    m = len(cc)
    c = cc[0]
    c_ = c.upper()
    a = c == 'a' and 'b' or 'a'
    a_ = a.upper()
    lucky = [False] * m
    for j in range(m):
        for i in range(n):
            l = len(ss[i])
            if m - j >= l and compare(cc, j, ss[i], 0, l) == 0:
                for h in range(l):
                    lucky[j + h] = True
    for j in range(m):
        if lucky[j]:
            if cc[j] == c: cc[j] = a_
            else: cc[j] = c_
    print(cc)


def compare(a, i, b, j, m):
    while m > 0:
        if a[i]!= b[j]:
            return a[i] - b[j]
        i += 1
        j += 1
        m -= 1
    return 0


main()","def main():
    n = int(input())
    ss = [[]] * n
    for i in range(n):
        ss[i] = input().strip()
    cc = input().strip()
    m = len(cc)
    c = cc[0]
    c_ = c.upper()
    a = c == 'a' and 'b' or 'a'
    a_ = a.upper()
    lucky = [False] * m
    for j in range(m):
        for i in range(n):
            l = len(ss[i])
            if m - j >= l and compare(cc, j, ss[i], 0, l) == 0:
                for h in range(l):
                    lucky[j + h] = True
    for j in range(m):
        if lucky[j]:
            if cc[j] == c: cc[j] = a_
            else: cc[j] = c_
    print(cc)


def compare(a, i, b, j, m):
    while m > 0:
        if a[i]!= b[j]:
            return a[i] - b[j]
        i += 1
        j += 1
        m -= 1
    return 0


main()"
CodeGen,avatar,Java,Python,atcoder_ABC155_D.py,"def main():
    n = int(input())
    k = int(input())
    a = [int(x) for x in input().split()]
    a.sort()
    INF = 1e18
    l = -INF
    r = INF
    while l + 1 < r:
        c = (l + r) // 2
        if check(c):
            l = c
        else:
            r = c
    print(l)

def check(x):
    tot = 0
    for i in range(n):
        now = a[i]
        if now >= 0:
            while l < r:
                c = (l + r) // 2
                if now * a[c] < x:
                    l = c + 1
                else:
                    r = c
            tot += l
        else:
            while l < r:
                c = (l + r) // 2
                if now * a[c] >= x:
                    l = c + 1
                else:
                    r = c
            tot += (n - l)
        if now * now < x:
            tot -= 1
    return tot // 2 < k

main()","def main():
    n, k = map(int, input().split())
    a = list(map(int, input().split()))
    a.sort()
    INF = 1e18
    l = -INF
    r = INF
    while l + 1 < r:
        c = (l + r) // 2
        if check(c):
            l = c
        else:
            r = c
    print(l)

def check(x):
    tot = 0
    for i in range(n):
        now = a[i]
        if now >= 0:
            while l < r:
                c = (l + r) // 2
                if now * a[c] < x:
                    l = c + 1
                else:
                    r = c
            tot += l
        else:
            while l < r:
                c = (l + r) // 2
                if now * a[c] >= x:
                    l = c + 1
                else:
                    r = c
            tot += (n - l)
        if now * now < x:
            tot -= 1
    return tot // 2 < k

main()"
CodeGen,avatar,Java,Python,atcoder_AGC006_A.py,"def getFail(b,m):
    j = 0
    f = [0,0]
    for i in range(2,m+1):
        while j > 0 and b[j+1]!= b[i]:
            j = f[j]
        if b[j+1] == b[i]:
            j += 1
        f[i] = j
    return f

def main():
    n = int(input())
    s1 = input()
    str = input()
    cnt = 0
    b = [0]*(n+1)
    for i in range(1,n+1):
        b[i] = str[i-1]
    for i in range(1,n+1):
        b[i] = s1[i-1]
    f = getFail(b,n)
    len = min(f[n],min(n,n))
    print(2*n-len)

main()","def getFail(b,m):
    j = 0
    f = [0]*(m+1)
    for i in range(2,m+1):
        while j > 0 and b[j+1]!= b[i]:
            j = f[j]
        if b[j+1] == b[i]:
            j += 1
        f[i] = j
    return f

def main():
    n = int(input())
    s1 = input()
    str = input()
    cnt = 0
    b = [0]*(2*n+1)
    for i in range(1,n+1):
        cnt+=1
        b[cnt] = str[i-1]
    for i in range(1,n+1):
        cnt+=1
        b[cnt] = s1[i-1]
    f = getFail(b,cnt)
    len = min(f[cnt],min(n,n))
    print(2*n-len)

main()"
CodeGen,avatar,Java,Python,codeforces_272_B.py,"def rec(x):
    answer = 0
    for k in range(31, -1, -1):
        if (x & (1 << k)):
            answer += 1
    return answer

def main():
    n = int(input())
    a = [0] * 33
    for i in range(n):
        a[rec(int(input()))] += 1
    answer = 0
    for i in range(33):
        answer += (1 + a[i] - 1) / 2.0 * (a[i] - 1)
    print(answer)

main()","def rec(x):
    answer = 0
    for k in range(31, -1, -1):
        if (x & (1 << k)):
            answer += 1
    return answer

def main():
    n = int(input())
    a = [0] * 33
    inputs = list(input().split())
    for i in range(n):
        a[rec(int(inputs[i]))] += 1
    answer = 0
    for i in range(33):
        answer += (1 + a[i] - 1) / 2.0 * (a[i] - 1)
    print(answer)

main()"
CodeGen,avatar,Java,Python,codeforces_267_A.py,"def sub(a, b):
    min = min(a, b)
    max = max(a, b)
    result = 0
    while min > 0:
        result += max // min
        max = max % min
        min = min // max
    return result","def sub(a, b):
    min = min(a, b)
    max = max(a, b)
    result = 0
    while min > 0:
        result += max // min
        max = max % min
        min = min // max
    return result"
CodeGen,avatar,Java,Python,atcoder_ABC146_D.py,"def main():
    n = int(input())
    g = []
    for i in range(n):
        g.append([])
    for i in range(n-1):
        a = int(input())
        b = int(input())
        g[a-1].append(Edge(i,b-1))
        g[b-1].append(Edge(i,a-1))
    ans = [0]*(n-1)
    dfs(0,-1,-1)
    max = 0
    for i in ans:
        max = max if max > i else i
    print(max)
    for i in ans:
        print(i)

class Edge:
    def __init__(self,id,to):
        self.id = id
        self.to = to

def dfs(to,color,parents):
    k = 1
    for e in g[to]:
        if e.to == parents:
            continue
        if k == color:
            k += 1
        ans[e.id] = k
        dfs(e.to,k,to)
        k += 1

main()","def main():
    n = int(input())
    g = []
    for i in range(n):
        g.append([])
    for i in range(n-1):
        a = int(input())
        b = int(input())
        g[a-1].append(Edge(i,b-1))
        g[b-1].append(Edge(i,a-1))
    ans = [0]*(n-1)
    dfs(0,-1,-1)
    max = 0
    for i in ans:
        max = max if max > i else i
    print(max)
    for i in ans:
        print(i)

class Edge:
    def __init__(self,id,to):
        self.id = id
        self.to = to

def dfs(to,color,parents):
    k = 1
    for e in g[to]:
        if e.to == parents:
            continue
        if k == color:
            k += 1
        ans[e.id] = k
        dfs(e.to,k,to)
        k += 1

main()"
CodeGen,avatar,Java,Python,atcoder_ABC158_A.py,"import sys
import itertools

def read_input():
    in_str = sys.stdin.readline()
    in_str = in_str.strip()
    in_str = in_str.replace(' ', '')
    in_str = in_str.replace('\n', '')
    return in_str


def solve(testNumber, in_str):
    if 'A' in in_str and 'B' in in_str:
        print('Yes')
    else:
        print('No')


if __name__ == '__main__':
    testNumber = int(read_input())
    for i in range(testNumber):
        in_str = read_input()
        solve(i + 1, in_str)","import sys
import itertools

def solve(in_str):
    if 'A' in in_str and 'B' in in_str:
        print('Yes')
    else:
        print('No')


if __name__ == '__main__':
    in_str = input()
    solve(in_str)"
CodeGen,avatar,Java,Python,codeforces_222_A.py,"def main(args):
    n = int(input())
    k = int(input())
    l = 0
    c = 1
    for i in range(n):
        a = int(input())
        if a == l:
            c += 1
        else:
            c = 1
        l = a
    if c + k > n:
        print(n - c)
    else:
        print(-1)","def main():
    n, k = map(int, input().split())
    l = 0
    c = 1
    inputs = list(input().split())
    for i in range(n):
        a = int(inputs[i])
        if a == l:
            c += 1
        else:
            c = 1
        l = a
    if c + k > n:
        print(n - c)
    else:
        print(-1)
        
main()"
CodeGen,avatar,Java,Python,atcoder_ABC111_C.py,"def main(args):
    sc = Scanner(sys.stdin)
    n = int(sc.next())
    v = [int(sc.next()) for i in range(n)]
    vo = [0] * 100010
    ve = [0] * 100010
    vt = [0] * 100010
    for i in range(n):
        vt[v[i]] += 1
        if i % 2 == 0:
            ve[v[i]] += 1
        else:
            vo[v[i]] += 1
    vo.sort(reverse=True)
    ve.sort(reverse=True)
    vt.sort(reverse=True)
    ans = 0
    if vo[0] + ve[0] == vt[0]:
        ans = min(n - vo[0] - ve[1], n - vo[1] - ve[0])
    else:
        ans = n - vo[0] - ve[0]
    print(ans)
    sc.close()","def main():
    n = int(input())
    v = list(map(int, input().split()))
    vo = [0] * 100010
    ve = [0] * 100010
    vt = [0] * 100010
    for i in range(n):
        vt[v[i]] += 1
        if i % 2 == 0:
            ve[v[i]] += 1
        else:
            vo[v[i]] += 1
    vo.sort(reverse=True)
    ve.sort(reverse=True)
    vt.sort(reverse=True)
    ans = 0
    if vo[0] + ve[0] == vt[0]:
        ans = min(n - vo[0] - ve[1], n - vo[1] - ve[0])
    else:
        ans = n - vo[0] - ve[0]
    print(ans)
    
main()"
CodeGen,avatar,Java,Python,atcoder_AGC029_C.py,"def main():
    n = int(input())
    a = [int(i) for i in input().split()]
    s = {}
    for i in range(n):
        if a[i] <= i:
            if i == 0:
                return False
            while s and s[-1] >= a[i]:
                s.pop()
            s[i] = s.get(i-1, 0) + 1
    if len(s)!= n:
        return False
    for i in range(n):
        if s[i]!= k:
            return False
    return True


class atcoder_AGC029_C:
    def __init__(self):
        self.n = int(input())
        self.a = [int(i) for i in input().split()]
        self.s = {}

    def solve(self):
        self.set()
        ng = 0
        ok = self.n
        while ok - ng > 1:
            k = (ng + ok) // 2
            if self.is_possible(k):
                ok = k
            else:
                ng = k
        print(ok)

    def is_possible(self, k):
        self.s.clear()
        current = 0
        for ai in self.a:
            if ai <= current:
                if k == 1:
                    return False
                while self.s and self.s[-1] >= ai:
                    self.s.pop()
                self.s[ai] = self.s.get(ai-1, 0) + 1
            current = ai
        if len(self.s)!= self.n:
            return False
        for i in range(self.n):
            if self.s[i]!= k:
                return False
        return True","def main():
    n = int(input())
    a = [int(i) for i in input().split()]
    s = {}
    for i in range(n):
        if a[i] <= i:
            if i == 0:
                return False
            while s and s[-1] >= a[i]:
                s.pop()
            s[i] = s.get(i-1, 0) + 1
    if len(s)!= n:
        return False
    for i in range(n):
        if s[i]!= k:
            return False
    return True


class atcoder_AGC029_C:
    def __init__(self):
        self.n = int(input())
        self.a = [int(i) for i in input().split()]
        self.s = {}

    def solve(self):
        self.set()
        ng = 0
        ok = self.n
        while ok - ng > 1:
            k = (ng + ok) // 2
            if self.is_possible(k):
                ok = k
            else:
                ng = k
        print(ok)

    def is_possible(self, k):
        self.s.clear()
        current = 0
        for ai in self.a:
            if ai <= current:
                if k == 1:
                    return False
                while self.s and self.s[-1] >= ai:
                    self.s.pop()
                self.s[ai] = self.s.get(ai-1, 0) + 1
            current = ai
        if len(self.s)!= self.n:
            return False
        for i in range(self.n):
            if self.s[i]!= k:
                return False
        return True"
CodeGen,avatar,Java,Python,codeforces_665_A.py,"def main ():
    br = input ( )
    a = int ( br. readline ( ) )
    tA = int ( br. readline ( ) )
    b = int ( br. readline ( ) )
    tB = int ( br. readline ( ) )
    timing = br. readline ( )
    hrs = int ( timing. substring ( 0, 2 ) )
    mins = int ( timing. substring ( 3 ) )
    simDeparture = hrs * 60 + mins
    simArrival = simDeparture + tA
    counter = 0
    for i in range ( 300, 1440 ):
        busDeparture = i
        busArrival = i + tB
        if busDeparture >= simArrival or simDeparture >= busArrival:
            continue
        counter += 1
    print ( counter )","def main ():
    a, tA = map ( int, input ( ).split ( ) )
    b, tB = map ( int, input ( ).split ( ) )
    timing = input ( ).strip()
    hrs = int(timing[:2])
    mins = int(timing[3:])
    simDeparture = hrs * 60 + mins
    simArrival = simDeparture + tA
    counter = 0
    for i in range ( 300, 1440, b ):
        busDeparture = i
        busArrival = i + tB
        if busDeparture >= simArrival or simDeparture >= busArrival:
            continue
        counter += 1
    print ( counter )
    
main()"
CodeGen,avatar,Java,Python,codeforces_673_A.py,"def main(args):
    sc = input()
    n = sc.next()
    a = []
    for i in range(n):
        a.append(sc.next())
    result = 0
    if a[0] > 15:
        result = 15
    else:
        for i in range(1, n):
            if a[i] - a[i-1] > 15:
                pos = i - 1
                flag = 1
                break
        if flag == 1:
            result = a[pos] + 15
        else:
            result = a[n-1] + 15
    if result > 90:
        result = 90
    print(result)","def main():
    n = int(input())
    a = []
    inputs = list(input().split())
    for i in range(n):
        a.append(int(inputs[i]))
    result = 0
    pos = 0
    flag = 0
    if a[0] > 15:
        result = 15
    else:
        for i in range(1, n):
            if a[i] - a[i-1] > 15:
                pos = i - 1
                flag = 1
                break
        if flag == 1:
            result = a[pos] + 15
        else:
            result = a[n-1] + 15
    if result > 90:
        result = 90
    print(result)
    
main()"
CodeGen,avatar,Java,Python,atcoder_ABC147_D.py,"def main(args):
    startTime = time.time()
    sc = Scanner(sys.stdin)
    n = sc.next()
    div = 10**9 + 7
    A = [sc.next() for i in range(n)]
    for i in range(60):
        a = 0
        count1 = 0
        for j in range(n):
            if A[j] >> i & 1 == 1:
                count1 += 1
        a = a + count1 * (n - count1)
        for j in range(i):
            a = a << 1
            a %= div
        ans += a
        ans %= div
    print(ans)
    endTime = time.time()
    print(""Time taken: {} seconds"".format(endTime - startTime))","def main():
    n = int(input())
    div = 10**9 + 7
    A = list(map(int, input().split()))
    ans = 0
    for i in range(60):
        a = 0
        count1 = 0
        for j in range(n):
            if A[j] >> i & 1 == 1:
                count1 += 1
        a = a + count1 * (n - count1)
        for j in range(i):
            a = a << 1
            a %= div
        ans += a
        ans %= div
    print(ans)
    
main()"
CodeGen,avatar,Java,Python,codeforces_23_B.py,"def maxLeft(n):
    return n > 2 and n - 2 or 0

print(maxLeft(5))
print(maxLeft(4))
print(maxLeft(3))
print(maxLeft(2))
print(maxLeft(1))
print(maxLeft(0))
print(maxLeft(-1))
print(maxLeft(-2))
print(maxLeft(-3))
print(maxLeft(-4))
print(maxLeft(-5))
print(maxLeft(-6))
print(maxLeft(-7))
print(maxLeft(-8))
print(maxLeft(-9))
print(maxLeft(-10))
print(maxLeft(-11))
print(maxLeft(-12))
print(maxLeft(-13))
print(maxLeft(-14))
print(maxLeft(-15))
print(maxLeft(-16))
print(maxLeft(-17))
print(maxLeft(-18))
print(maxLeft(-19))
print(maxLeft(-20))
print(maxLeft(-21))
print(maxLeft(-22))
print(maxLeft(-23))
print(maxLeft(-24))
print(maxLeft(-25))
print(maxLeft(-26))
print(maxLeft(-27))
print(maxLeft(-28))
print(maxLeft(-29))
print(maxLeft(-30))
print(maxLeft(-31))
print(maxLeft(-32))
print(maxLeft(-33))
print(maxLeft(-34))
print(maxLeft(-35))
print(maxLeft(-36))
print(maxLeft(-37))
print(maxLeft(-38))
print(maxLeft(-39))
print(maxLeft(-40))
print(maxLeft(-41))
print(maxLeft(-42))
print(maxLeft(-43))
print(maxLeft(-44))
print(maxLeft(-45))
print(maxLeft(-46))
print(maxLeft(-47))
print(maxLeft(-48))
print(maxLeft(-49))
print(maxLeft(-50))
print(maxLeft(-51))
print(maxLeft(-52))
print(maxLeft(-53))
print(maxLeft(-54))
print(maxLeft(-55))
print(maxLeft(-56))
print(maxLeft(-57))
print(maxLeft(-58))
print(maxLeft(-59))
print(maxLeft(-60))
print(maxLeft(-61))
print(maxLeft(-62))
print(maxLeft(-63))
print(maxLeft(-64))
print(maxLeft(-65))
print(maxLeft(-66))
print(maxLeft(-67))
print(maxLeft(-68))
print(maxLeft(-69))
print(maxLeft(-70))
print(maxLeft(-71))
print(maxLeft(-72))
print(maxLeft(-73))
print(maxLeft(-74))
print(maxLeft(-75))
print(maxLeft(-76))
print(maxLeft(-77))
print(maxLeft(-78))
print(maxLeft(-79))
print(maxLeft(-80))
print(maxLeft(-81))
print(maxLeft(-82))
print(maxLeft(-83))
print(maxLeft(-84))
print(maxLeft(-85))
print(maxLeft(-86))
print(maxLeft(-87))
print(maxLeft(-88))
print(maxLeft(-89))
print(maxLeft(-90))
print(maxLeft(-91))
print(maxLeft(-92))
print(maxLeft(-93))
print(maxLeft(-94))
print(maxLeft(-95))
print(maxLeft(-96))
print(maxLeft(-97))
print(maxLeft(-98))
print(maxLeft(-99))
print(maxLeft(-100))
print(maxLeft(-101))
print(maxLeft(-102))
print(maxLeft(-103))
print(maxLeft(-104))
print(maxLeft(-105))
print(maxLeft(-106))
print(maxLeft(-107))
print(maxLeft(-108))
print(maxLeft(-109))
print(maxLeft(-110))
print(maxLeft(-111))
print(maxLeft(-112))
print(maxLeft(-113))
print(maxLeft(-114))
print(maxLeft(-115))
print(maxLeft(-116))
print(maxLeft(-117))
print(maxLeft(-118))
print(maxLeft(-119))
print(maxLeft(-120))
print(maxLeft(-121))
print(maxLeft(-122))
print(maxLeft(-123))
print(maxLeft(-124))
print(maxLeft(-125))
print(maxLeft(-126))
print(maxLeft(-127))
print(maxLeft(-128))
print(maxLeft(-129))
print(maxLeft(-130))
print(maxLeft(-131))
print(maxLeft(-132))
print(maxLeft(-133))
print(maxLeft(-134))
print(maxLeft(-135))
print(maxLeft(-136))
print(maxLeft(-137))
print(maxLeft(-138))
print(maxLeft(-139))
print(maxLeft(-140))
print(maxLeft(-141))
print(maxLeft(-142))
print(maxLeft(-143))
print(maxLeft(-144))
print(maxLeft(-145))
print(maxLeft(-146))
print(maxLeft(-147))
print(maxLeft(-148))
print(maxLeft(-149))
print(maxLeft(-150))
print(maxLeft(-151))
print(maxLeft(-152))
print(maxLeft(-153))
print(maxLeft(-154))
print(maxLeft(-155))
print(maxLeft(-156))
print(maxLeft(-157))
print(maxLeft(-158))
print(maxLeft(-159))
print(maxLeft(-160))
print(maxLeft(-161))
print(maxLeft(-162))
print(maxLeft(-163))
print(maxLeft(-164))
print(maxLeft(-165))
print(maxLeft(-166))
print(maxLeft(-167))
print(maxLeft(-168))
print(maxLeft(-169))
print(maxLeft(-170))
print(maxLeft(-171))
print(maxLeft(-172))
print(maxLeft(-173))
print(maxLeft(-174))
print(maxLeft(-175))
print(maxLeft(-176))
print(maxLeft(-177))
print(maxLeft(-178))
print(maxLeft(-179))
print(maxLeft(-180))
print(maxLeft(-181))
print(maxLeft(-182))
print(maxLeft(-183))
print(maxLeft(-184))
print(maxLeft(-185))
print(maxLeft(-186))
print(maxLeft(-187))
print(maxLeft(-188))
print(maxLeft(-189))
print(maxLeft(-190))
print(maxLeft(-191))
print(maxLeft(-192))
print(maxLeft(-193))
print(maxLeft(-194))
print(maxLeft(-195))
print(maxLeft(-196))
print(maxLeft(-197))
print(maxLeft(-198))
print(maxLeft(-199))
print(maxLeft(-200))
print(maxLeft(-201))
print(maxLeft(-202))
print(maxLeft(-203))
print(maxLeft(-204))
print(maxLeft(-205))
print(maxLeft(-206))
print(maxLeft(-207))
print(maxLeft(-208))
print(maxLeft(-209))
print(maxLeft(-210))
print(maxLeft(-211))
print(maxLeft(-212))
print(maxLeft(-213))
print(maxLeft(-214))
print(maxLeft(-215))
print(maxLeft(-216))
print(maxLeft(-217))
print(maxLeft(-218))
print(maxLeft(-219))
print(maxLeft(-220))
print(maxLeft(-221))
print(maxLeft(-222))
print(maxLeft(-223))
print(maxLeft(-224))
print(maxLeft(-225))
print(maxLeft(-226))
print(maxLeft(-227))
print(maxLeft(-228))
print(maxLeft(-229))
print(maxLeft(-230))
print","def maxLeft(n):
    return n > 2 and n - 2 or 0

print(maxLeft(5))
print(maxLeft(4))
print(maxLeft(3))
print(maxLeft(2))
print(maxLeft(1))
print(maxLeft(0))
print(maxLeft(-1))
print(maxLeft(-2))
print(maxLeft(-3))
print(maxLeft(-4))
print(maxLeft(-5))
print(maxLeft(-6))
print(maxLeft(-7))
print(maxLeft(-8))
print(maxLeft(-9))
print(maxLeft(-10))
print(maxLeft(-11))
print(maxLeft(-12))
print(maxLeft(-13))
print(maxLeft(-14))
print(maxLeft(-15))
print(maxLeft(-16))
print(maxLeft(-17))
print(maxLeft(-18))
print(maxLeft(-19))
print(maxLeft(-20))
print(maxLeft(-21))
print(maxLeft(-22))
print(maxLeft(-23))
print(maxLeft(-24))
print(maxLeft(-25))
print(maxLeft(-26))
print(maxLeft(-27))
print(maxLeft(-28))
print(maxLeft(-29))
print(maxLeft(-30))
print(maxLeft(-31))
print(maxLeft(-32))
print(maxLeft(-33))
print(maxLeft(-34))
print(maxLeft(-35))
print(maxLeft(-36))
print(maxLeft(-37))
print(maxLeft(-38))
print(maxLeft(-39))
print(maxLeft(-40))
print(maxLeft(-41))
print(maxLeft(-42))
print(maxLeft(-43))
print(maxLeft(-44))
print(maxLeft(-45))
print(maxLeft(-46))
print(maxLeft(-47))
print(maxLeft(-48))
print(maxLeft(-49))
print(maxLeft(-50))
print(maxLeft(-51))
print(maxLeft(-52))
print(maxLeft(-53))
print(maxLeft(-54))
print(maxLeft(-55))
print(maxLeft(-56))
print(maxLeft(-57))
print(maxLeft(-58))
print(maxLeft(-59))
print(maxLeft(-60))
print(maxLeft(-61))
print(maxLeft(-62))
print(maxLeft(-63))
print(maxLeft(-64))
print(maxLeft(-65))
print(maxLeft(-66))
print(maxLeft(-67))
print(maxLeft(-68))
print(maxLeft(-69))
print(maxLeft(-70))
print(maxLeft(-71))
print(maxLeft(-72))
print(maxLeft(-73))
print(maxLeft(-74))
print(maxLeft(-75))
print(maxLeft(-76))
print(maxLeft(-77))
print(maxLeft(-78))
print(maxLeft(-79))
print(maxLeft(-80))
print(maxLeft(-81))
print(maxLeft(-82))
print(maxLeft(-83))
print(maxLeft(-84))
print(maxLeft(-85))
print(maxLeft(-86))
print(maxLeft(-87))
print(maxLeft(-88))
print(maxLeft(-89))
print(maxLeft(-90))
print(maxLeft(-91))
print(maxLeft(-92))
print(maxLeft(-93))
print(maxLeft(-94))
print(maxLeft(-95))
print(maxLeft(-96))
print(maxLeft(-97))
print(maxLeft(-98))
print(maxLeft(-99))
print(maxLeft(-100))
print(maxLeft(-101))
print(maxLeft(-102))
print(maxLeft(-103))
print(maxLeft(-104))
print(maxLeft(-105))
print(maxLeft(-106))
print(maxLeft(-107))
print(maxLeft(-108))
print(maxLeft(-109))
print(maxLeft(-110))
print(maxLeft(-111))
print(maxLeft(-112))
print(maxLeft(-113))
print(maxLeft(-114))
print(maxLeft(-115))
print(maxLeft(-116))
print(maxLeft(-117))
print(maxLeft(-118))
print(maxLeft(-119))
print(maxLeft(-120))
print(maxLeft(-121))
print(maxLeft(-122))
print(maxLeft(-123))
print(maxLeft(-124))
print(maxLeft(-125))
print(maxLeft(-126))
print(maxLeft(-127))
print(maxLeft(-128))
print(maxLeft(-129))
print(maxLeft(-130))
print(maxLeft(-131))
print(maxLeft(-132))
print(maxLeft(-133))
print(maxLeft(-134))
print(maxLeft(-135))
print(maxLeft(-136))
print(maxLeft(-137))
print(maxLeft(-138))
print(maxLeft(-139))
print(maxLeft(-140))
print(maxLeft(-141))
print(maxLeft(-142))
print(maxLeft(-143))
print(maxLeft(-144))
print(maxLeft(-145))
print(maxLeft(-146))
print(maxLeft(-147))
print(maxLeft(-148))
print(maxLeft(-149))
print(maxLeft(-150))
print(maxLeft(-151))
print(maxLeft(-152))
print(maxLeft(-153))
print(maxLeft(-154))
print(maxLeft(-155))
print(maxLeft(-156))
print(maxLeft(-157))
print(maxLeft(-158))
print(maxLeft(-159))
print(maxLeft(-160))
print(maxLeft(-161))
print(maxLeft(-162))
print(maxLeft(-163))
print(maxLeft(-164))
print(maxLeft(-165))
print(maxLeft(-166))
print(maxLeft(-167))
print(maxLeft(-168))
print(maxLeft(-169))
print(maxLeft(-170))
print(maxLeft(-171))
print(maxLeft(-172))
print(maxLeft(-173))
print(maxLeft(-174))
print(maxLeft(-175))
print(maxLeft(-176))
print(maxLeft(-177))
print(maxLeft(-178))
print(maxLeft(-179))
print(maxLeft(-180))
print(maxLeft(-181))
print(maxLeft(-182))
print(maxLeft(-183))
print(maxLeft(-184))
print(maxLeft(-185))
print(maxLeft(-186))
print(maxLeft(-187))
print(maxLeft(-188))
print(maxLeft(-189))
print(maxLeft(-190))
print(maxLeft(-191))
print(maxLeft(-192))
print(maxLeft(-193))
print(maxLeft(-194))
print(maxLeft(-195))
print(maxLeft(-196))
print(maxLeft(-197))
print(maxLeft(-198))
print(maxLeft(-199))
print(maxLeft(-200))
print(maxLeft(-201))
print(maxLeft(-202))
print(maxLeft(-203))
print(maxLeft(-204))
print(maxLeft(-205))
print(maxLeft(-206))
print(maxLeft(-207))
print(maxLeft(-208))
print(maxLeft(-209))
print(maxLeft(-210))
print(maxLeft(-211))
print(maxLeft(-212))
print(maxLeft(-213))
print(maxLeft(-214))
print(maxLeft(-215))
print(maxLeft(-216))
print(maxLeft(-217))
print(maxLeft(-218))
print(maxLeft(-219))
print(maxLeft(-220))
print(maxLeft(-221))
print(maxLeft(-222))
print(maxLeft(-223))
print(maxLeft(-224))
print(maxLeft(-225))
print(maxLeft(-226))
print(maxLeft(-227))
print(maxLeft(-228))
print(maxLeft(-229))
print(maxLeft(-230))
print"
CodeGen,avatar,Java,Python,atcoder_ABC112_C.py,"def main(args):
    n = int(input())
    x = [int(i) for i in input().split()]
    y = [int(i) for i in input().split()]
    h = [int(i) for i in input().split()]
    for i in range(0, MAX+1):
        for j in range(0, MAX+1):
            ch = check(n, x, y, h, i, j)
            if ch > 0:
                print(i, j, ch)

def check(n, x, y, h, cx, cy):
    ch = -1
    for i in range(0, n):
        if h[i] > 0:
            ch = abs(x[i] - cx) + abs(y[i] - cy) + h[i]
            break
    for i in range(0, n):
        if h[i]!= max(ch - abs(x[i] - cx) - abs(y[i] - cy), 0):
            return -1
    return ch","def main():
    MAX = 100
    n = int(input())
    x = [0] * n
    y = [0] * n
    h = [0] * n

    for i in range(n):
        x[i], y[i], h[i] = map(int, input().split())
    for i in range(0, MAX+1):
        for j in range(0, MAX+1):
            ch = check(n, x, y, h, i, j)
            if ch > 0:
                print(i, j, ch)

def check(n, x, y, h, cx, cy):
    ch = -1
    for i in range(0, n):
        if h[i] > 0:
            ch = abs(x[i] - cx) + abs(y[i] - cy) + h[i]
            break
    for i in range(0, n):
        if h[i]!= max(ch - abs(x[i] - cx) - abs(y[i] - cy), 0):
            return -1
    return ch

main()"
CodeGen,avatar,Java,Python,atcoder_ABC152_C.py,"def main():
    N = int(input())
    arr = [int(i) for i in input().split()]
    sum = 0
    q = []
    for i in range(N):
        q.append(arr[i])
        if arr[i] <= q[0]:
            sum += 1
    return sum

if __name__ == '__main__':
    main()","import heapq

def main():
    N = int(input())
    arr = [int(i) for i in input().split()]
    sum = 0
    q = []
    for i in range(len(arr)):
        heapq.heappush(q, arr[i])
        if arr[i] <= q[0]:
            sum += 1
    return sum

if __name__ == '__main__':
    print(main())"
CodeGen,avatar,Java,Python,atcoder_ABC129_E.py,"def main ():
    M = 1000000007
    s = input().strip().lower()
    n = len(s)
    dp = [[0, 0] for i in range(n + 1)]
    dp[0][0] = 1
    for i in range(n):
        if s[i] == '0':
            dp[i + 1][0] = dp[i][0]
            dp[i + 1][1] = dp[i][1]
        else:
            dp[i + 1][1] = (dp[i][0] + dp[i][1]) % M
            if s[i] == '0':
                dp[i + 1][1] += (dp[i][1] * 2) % M
                dp[i + 1][1] %= M
            else:
                dp[i + 1][0] += (dp[i][0] * 2) % M
                dp[i + 1][1] += (dp[i][1] * 2) % M
                dp[i + 1][0] %= M
                dp[i + 1][1] %= M
    print((dp[n][0] + dp[n][1]) % M)

# Note:
# 1. The input string is lowercase.
# 2. The length of the input string is in the range of [1, 1000000].
# 3. The answer is guaranteed to fit in a 32-bit integer.
# 4. The given input string may contain '0' only once.
# 5. The given input string may contain '1' only once.
# 6. The given input string may contain '0' and '1' both.
# 7. The given input string may contain '0' and '1' both.
# 8. The given input string may contain '0' and '1' both.
# 9. The given input string may contain '0' and '1' both.
# 10. The given input string may contain '0' and '1' both.
# 11. The given input string may contain '0' and '1' both.
# 12. The given input string may contain '0' and '1' both.
# 13. The given input string may contain '0' and '1' both.
# 14. The given input string may contain '0' and '1' both.
# 15. The given input string may contain '0' and '1' both.
# 16. The given input string may contain '0' and '1' both.
# 17. The given input string may contain '0' and '1' both.
# 18. The given input string may contain '0' and '1' both.
# 19. The given input string may contain '0' and '1' both.
# 20. The given input string may contain '0' and '1' both.
# 21. The given input string may contain '0' and '1' both.
# 22. The given input string may contain '0' and '1' both.
# 23. The given input string may contain '0' and '1' both.
# 24. The given input string may contain '0' and '1' both.
# 25. The given input string may contain '0' and '1' both.
# 26. The given input string may contain '0' and '1' both.
# 27. The given input string may contain '0' and '1' both.
# 28. The given input string may contain '0' and '1' both.
# 29. The given input string may contain '0' and '1' both.
# 30. The given input string may contain '0' and '1' both.
# 31. The given input string may contain '0' and '1' both.
# 32. The given input string may contain '0' and '1' both.
# 33. The given input string may contain '0' and '1' both.
# 34. The given input string may contain '0' and '1' both.
# 35. The given input string may contain '0' and '1' both.
# 36. The given input string may contain '0' and '1' both.
# 37. The given input string may contain '0' and '1' both.
# 38. The given input string may contain '0' and '1' both.
# 39. The given input string may contain '0' and '1' both.
# 40. The given input string may contain '0' and '1' both.
# 41. The given input string may contain '0' and '1' both.
# 42. The given input string may contain '0' and '1' both.
# 43. The given input string may contain '0' and '1' both.
# 44. The given input string may contain '0' and '1' both.
# 45. The given input string may contain '0' and '1' both.
# 46. The given input string may contain '0' and '1' both.
# 47. The given input string may contain '0' and '1' both.
# 48. The given input string may contain '0' and '1' both.
# 49. The given input string may contain '0' and '1' both.
# 50. The given input string may contain '0' and '1' both.
# 51. The given input string may contain '0' and '1' both.
# 52. The given input string may contain '0' and '1' both.
# 53. The given input string may contain '0' and '1' both.
# 54. The given input string may contain '0' and '1' both.
# 55. The given input string may contain '0' and '1' both.
# 56. The given input string may contain '0' and '1' both.
# 57. The given input string may contain '0' and '1' both.
# 58. The given input string may contain '0' and '1' both.
# 59. The given input string may contain '0' and '1' both.
# 60. The given input string may contain '0' and '1' both.
# 61. The given input string may contain '0' and '1' both.
# 62. The given input string may contain '0' and '1' both.
# 63. The given input string may contain '0' and '1' both.
# 64. The given input string may contain '0' and '1' both.
# 65. The given input string may contain '0' and '1' both.
# 66. The given input string may contain '0' and '1' both.
# 67. The given input string may contain '0' and '1' both.
# 68. The given input string may contain '0' and '1' both.
# 69. The given input string may contain '0' and '1' both.
# 70. The given input string may contain '0' and '1' both.
# 71. The given input string may contain '0' and '1' both.
# 72. The given input string may contain '0' and '1' both.","def main ():
    M = 1000000007
    s = input()
    n = len(s)
    dp = [[0, 0] for i in range(n + 1)]
    dp[0][0] = 1
    for i in range(n):
        if s[i] == '0':
            dp[i + 1][0] = dp[i][0]
            dp[i + 1][1] = dp[i][1]
        else:
            dp[i + 1][1] = (dp[i][0] + dp[i][1]) % M
        if s[i] == '0':
            dp[i + 1][1] += (dp[i][1] * 2) % M
            dp[i + 1][1] %= M
        else:
            dp[i + 1][0] += (dp[i][0] * 2) % M
            dp[i + 1][1] += (dp[i][1] * 2) % M
            dp[i + 1][0] %= M
            dp[i + 1][1] %= M
    print((dp[n][0] + dp[n][1]) % M)
    
main()"
ChatGPT,codenet,Python,Java,s167793578.java,"int N, M;
Scanner scanner = new Scanner(System.in);
N = scanner.nextInt();
M = scanner.nextInt();

int a = N * (N - 1) / 2;
int b = M * (M - 1) / 2;

System.out.println(a + b);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int N, M;
        Scanner scanner = new Scanner(System.in);
        N = scanner.nextInt();
        M = scanner.nextInt();
        
        int a = N * (N - 1) / 2;
        int b = M * (M - 1) / 2;
        
        System.out.println(a + b);
    } 
}"
ChatGPT,codenet,Python,Java,s013976107.java,"int A = scanner.nextInt();
int B = scanner.nextInt();
String S = scanner.next();
if (S.charAt(A) == '-' && S.chars().filter(ch -> ch == '-').count() == 1) {
    System.out.println(""Yes"");
} else {
    System.out.println(""No"");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        String S = scanner.next();
        if (S.charAt(A) == '-' && S.chars().filter(ch -> ch == '-').count() == 1) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
ChatGPT,codenet,Python,Java,s142939923.java,"int a = sc.nextInt();
int b = sc.nextInt();

// A + B
int x1 = a + b;
// A - B
int x2 = a - b;
// A * B
int x3 = a * b;
System.out.println(Math.max(x1, Math.max(x2, x3)));","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        
        // A + B
        int x1 = a + b;
        // A - B
        int x2 = a - b;
        // A * B
        int x3 = a * b;
        System.out.println(Math.max(x1, Math.max(x2, x3)));
    }
}"
ChatGPT,codenet,Python,Java,s706119740.java,"int[] candy = new int[3];
Scanner scanner = new Scanner(System.in);
String input = scanner.nextLine();
String[] inputArr = input.split("" "");
for (int i = 0; i < 3; i++) {
    candy[i] = Integer.parseInt(inputArr[i]);
}
Arrays.sort(candy);
System.out.println((candy[0] + candy[1] == candy[2]) ? ""Yes"" : ""No"");","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int[] candy = new int[3];
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        String[] inputArr = input.split("" "");
        for (int i = 0; i < 3; i++) {
            candy[i] = Integer.parseInt(inputArr[i]);
        }
        Arrays.sort(candy);
        System.out.println((candy[0] + candy[1] == candy[2]) ? ""Yes"" : ""No"");
    }
}"
ChatGPT,codenet,Python,Java,s357377130.java,"int A, B, K;
Scanner scanner = new Scanner(System.in);
A = scanner.nextInt();
B = scanner.nextInt();
K = scanner.nextInt();

if (A + K - 1 >= B - K + 1) {
    while (A <= B) {
        System.out.println(A);
        A++;
    }
} else {
    int i = 0;
    while (i <= K - 1) {
        System.out.println(A + i);
        i++;
    }
    while (B - K + 1 <= B) {
        System.out.println(B - K + 1);
        K--;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int A, B, K;
        Scanner scanner = new Scanner(System.in);
        A = scanner.nextInt();
        B = scanner.nextInt();
        K = scanner.nextInt();
        
        if (A + K - 1 >= B - K + 1) {
            while (A <= B) {
                System.out.println(A);
                A++;
            }
        } else {
            int i = 0;
            while (i <= K - 1) {
                System.out.println(A + i);
                i++;
            }
            while (B - K + 1 <= B) {
                System.out.println(B - K + 1);
                K--;
            }
        }
    }
}"
ChatGPT,codenet,Python,Java,s062747389.java,"int a = input.nextInt();
int b = input.nextInt();
if (a == b) {
    System.out.println(a + b);
} else {
    System.out.println(Math.max(a, b) * 2 - 1);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int a = input.nextInt();
        int b = input.nextInt();
        if (a == b) {
            System.out.println(a + b);
        } else {
            System.out.println(Math.max(a, b) * 2 - 1);
        }
    }
}"
ChatGPT,codenet,Python,Java,s790754864.java,"public class s790754864 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int K = scanner.nextInt();
        int R = N - K;
        int mod = (int) (1e9 + 7);
        
        for (int i = 1; i <= K; i++) {
            int ans;
            if (N - K + 1 < i) {
                ans = 0;
            } else {
                ans = fact(R + 1, i) * fact(K - 1, i - 1);
            }
            System.out.println(ans % mod);
        }
    }
    
    public static int fact(int n, int r) {
        int result = 1;
        for (int i = 0; i < r; i++) {
            result *= (n - i);
            result /= (i + 1);
        }
        return result;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int K = scanner.nextInt();
        int R = N - K;
        int mod = (int) (1e9 + 7);
        
        for (int i = 1; i <= K; i++) {
            int ans;
            if (N - K + 1 < i) {
                ans = 0;
            } else {
                ans = fact(R + 1, i) * fact(K - 1, i - 1);
            }
            System.out.println(ans % mod);
        }
    }
    
    public static int fact(int n, int r) {
        int result = 1;
        for (int i = 0; i < r; i++) {
            result *= (n - i);
            result /= (i + 1);
        }
        return result;
    }
}"
ChatGPT,codenet,Python,Java,s197514717.java,"int A = scanner.nextInt();
int B = scanner.nextInt();
int C = scanner.nextInt();

System.out.println(Math.max(10*A+B+C, Math.max(10*B+C+A, 10*C+A+B)));","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        int C = scanner.nextInt();
        
        System.out.println(Math.max(10*A+B+C, Math.max(10*B+C+A, 10*C+A+B)));
    }
}"
ChatGPT,codenet,Python,Java,s486032847.java,"public class s486032847 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String N = scanner.nextLine();
        
        if (keta(N) % 9 == 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
    
    public static int keta(String s) {
        if (s.length() < 2) {
            return Integer.parseInt(s);
        }
        int n = 0;
        for (char c : s.toCharArray()) {
            n += Character.getNumericValue(c);
        }
        return keta(String.valueOf(n));
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String N = scanner.nextLine();
        
        if (keta(N) % 9 == 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
    
    public static int keta(String s) {
        if (s.length() < 2) {
            return Integer.parseInt(s);
        }
        int n = 0;
        for (char c : s.toCharArray()) {
            n += Character.getNumericValue(c);
        }
        return keta(String.valueOf(n));
    }
}"
ChatGPT,codenet,Python,Java,s287369394.java,"int N = Integer.parseInt(scanner.nextLine());
int[] A = Arrays.stream(scanner.nextLine().split("" "")).mapToInt(Integer::parseInt).toArray();
int[] B = Arrays.stream(scanner.nextLine().split("" "")).mapToInt(Integer::parseInt).toArray();

int ans = 0;
for (int i = 0; i < N; i++) {
    int d = Math.min(A[i], B[i]);
    ans += d;
    A[i] -= d;
    B[i] -= d;
    d = Math.min(A[i + 1], B[i]);
    ans += d;
    A[i + 1] -= d;
    B[i] -= d;
}

System.out.println(ans);","import java.util.stream.IntStream;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = Integer.parseInt(scanner.nextLine());
        int[] A = Arrays.stream(scanner.nextLine().split("" "")).mapToInt(Integer::parseInt).toArray();
        int[] B = Arrays.stream(scanner.nextLine().split("" "")).mapToInt(Integer::parseInt).toArray();
        
        int ans = 0;
        for (int i = 0; i < N; i++) {
            int d = Math.min(A[i], B[i]);
            ans += d;
            A[i] -= d;
            B[i] -= d;
            d = Math.min(A[i + 1], B[i]);
            ans += d;
            A[i + 1] -= d;
            B[i] -= d;
        }
        
        System.out.println(ans);
    }
}"
ChatGPT,codenet,Python,Java,s895229833.java,"int N = Integer.parseInt(scanner.nextLine());
String[] input = scanner.nextLine().split("" "");
int[] H = new int[N];

for (int i = 0; i < N; i++) {
    H[i] = Integer.parseInt(input[i]);
}

int count_best = 0;
int count_tmp = 0;

for (int i = 0; i < N-1; i++) {
    if (H[i] >= H[i+1]) {
        count_tmp += 1;
    } else {
        if (count_tmp > count_best) {
            count_best = count_tmp;
        }
        count_tmp = 0;
    }
}

if (count_tmp > count_best) {
    count_best = count_tmp;
}

System.out.println(count_best);","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = Integer.parseInt(scanner.nextLine());
        String[] input = scanner.nextLine().split("" "");
        int[] H = new int[N];
        
        for (int i = 0; i < N; i++) {
            H[i] = Integer.parseInt(input[i]);
        }
        
        int count_best = 0;
        int count_tmp = 0;
        
        for (int i = 0; i < N-1; i++) {
            if (H[i] >= H[i+1]) {
                count_tmp += 1;
            } else {
                if (count_tmp > count_best) {
                    count_best = count_tmp;
                }
                count_tmp = 0;
            }
        }
        
        if (count_tmp > count_best) {
            count_best = count_tmp;
        }
        
        System.out.println(count_best);
    }
}"
ChatGPT,codenet,Python,Java,s423256012.java,"int A, B;
Scanner scanner = new Scanner(System.in);
A = scanner.nextInt();
B = scanner.nextInt();

if ((A + B) % 2 == 1) {
    System.out.println(""IMPOSSIBLE"");
} else {
    System.out.println((A + B) / 2);
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int A, B;
        Scanner scanner = new Scanner(System.in);
        A = scanner.nextInt();
        B = scanner.nextInt();
        
        if ((A + B) % 2 == 1) {
            System.out.println(""IMPOSSIBLE"");
        } else {
            System.out.println((A + B) / 2);
        }
    }
}"
ChatGPT,codenet,Python,Java,s828550015.java,"import java.util.*;

public class s828550015 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int x = scanner.nextInt();
        int y = scanner.nextInt();
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int c = scanner.nextInt();
        
        List<Integer> p = new ArrayList<>();
        for (int i = 0; i < x; i++) {
            p.add(scanner.nextInt());
        }
        Collections.sort(p, Collections.reverseOrder());
        p = p.subList(0, x);
        
        List<Integer> q = new ArrayList<>();
        for (int i = 0; i < y; i++) {
            q.add(scanner.nextInt());
        }
        Collections.sort(q, Collections.reverseOrder());
        q = q.subList(0, y);
        
        List<Integer> r = new ArrayList<>();
        for (int i = 0; i < c; i++) {
            r.add(scanner.nextInt());
        }
        Collections.sort(r, Collections.reverseOrder());
        
        List<Integer> pq = new ArrayList<>(p);
        pq.addAll(q);
        Collections.sort(pq);
        
        for (int i = 0; i < Math.min(x + y, a + b, c); i++) {
            if (pq.get(i) < r.get(i)) {
                pq.set(i, r.get(i));
            }
        }
        
        int sum = 0;
        for (int num : pq) {
            sum += num;
        }
        System.out.println(sum);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int x = scanner.nextInt();
        int y = scanner.nextInt();
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int c = scanner.nextInt();
        
        List<Integer> p = new ArrayList<>();
        for (int i = 0; i < x; i++) {
            p.add(scanner.nextInt());
        }
        Collections.sort(p, Collections.reverseOrder());
        p = p.subList(0, x);
        
        List<Integer> q = new ArrayList<>();
        for (int i = 0; i < y; i++) {
            q.add(scanner.nextInt());
        }
        Collections.sort(q, Collections.reverseOrder());
        q = q.subList(0, y);
        
        List<Integer> r = new ArrayList<>();
        for (int i = 0; i < c; i++) {
            r.add(scanner.nextInt());
        }
        Collections.sort(r, Collections.reverseOrder());
        
        List<Integer> pq = new ArrayList<>(p);
        pq.addAll(q);
        Collections.sort(pq);
        
        for (int i = 0; i < Math.min(Math.min(x + y, a + b), c); i++) {
            if (pq.get(i) < r.get(i)) {
                pq.set(i, r.get(i));
            }
        }
        
        int sum = 0;
        for (int num : pq) {
            sum += num;
        }
        System.out.println(sum);
    }
}"
ChatGPT,codenet,Python,Java,s048491063.java,"public class s048491063 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int N = scanner.nextInt();
        int M = scanner.nextInt();
        int Q = scanner.nextInt();

        int[][] train = new int[N][N];
        for (int i = 0; i < M; i++) {
            int l = scanner.nextInt();
            int r = scanner.nextInt();
            train[l-1][r-1] += 1;
        }

        int[][] accum = new int[N+1][N+1];
        for (int i = 0; i < N; i++) {
            int v = 0;
            for (int j = 0; j < N; j++) {
                v += train[i][j];
                accum[i+1][j+1] = accum[i][j+1] + v;
            }
        }

        for (int i = 0; i < Q; i++) {
            int p = scanner.nextInt();
            int q = scanner.nextInt();
            int v = accum[q][q] - accum[p-1][q] - accum[q][p-1] + accum[p-1][p-1];
            System.out.println(v);
        }
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int N = scanner.nextInt();
        int M = scanner.nextInt();
        int Q = scanner.nextInt();

        int[][] train = new int[N][N];
        for (int i = 0; i < M; i++) {
            int l = scanner.nextInt();
            int r = scanner.nextInt();
            train[l-1][r-1] += 1;
        }

        int[][] accum = new int[N+1][N+1];
        for (int i = 0; i < N; i++) {
            int v = 0;
            for (int j = 0; j < N; j++) {
                v += train[i][j];
                accum[i+1][j+1] = accum[i][j+1] + v;
            }
        }

        for (int i = 0; i < Q; i++) {
            int p = scanner.nextInt();
            int q = scanner.nextInt();
            int v = accum[q][q] - accum[p-1][q] - accum[q][p-1] + accum[p-1][p-1];
            System.out.println(v);
        }
    }
}"
ChatGPT,codenet,Python,Java,s453478465.java,"int a, b;
Scanner scanner = new Scanner(System.in);
a = scanner.nextInt();
b = scanner.nextInt();

if (a <= 8 && b <= 8) {
    System.out.println(""Yay!"");
} else {
    System.out.println("":("");
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        int a, b;
        Scanner scanner = new Scanner(System.in);
        a = scanner.nextInt();
        b = scanner.nextInt();
        
        if (a <= 8 && b <= 8) {
            System.out.println(""Yay!"");
        } else {
            System.out.println("":("");
        } 
    }
}"
ChatGPT,codenet,Python,Java,s269975433.java,"import java.util.Scanner;

public class s269975433 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int M = scanner.nextInt();
        int Q = scanner.nextInt();
        
        int[][] Q_groups = new int[Q][4];
        for (int i = 0; i < Q; i++) {
            for (int j = 0; j < 4; j++) {
                Q_groups[i][j] = scanner.nextInt();
            }
        }
        
        int max_score = 0;
        for (int i = 1; i <= M; i++) {
            for (int j = 1; j <= M; j++) {
                for (int k = 1; k <= M; k++) {
                    for (int l = 1; l <= M; l++) {
                        int[] p = new int[N];
                        p[0] = i;
                        p[1] = j;
                        p[2] = k;
                        p[3] = l;
                        
                        int temp_score = 0;
                        for (int[] q : Q_groups) {
                            if (p[q[1] - 1] - p[q[0] - 1] == q[2]) {
                                temp_score += q[3];
                            }
                        }
                        
                        max_score = Math.max(max_score, temp_score);
                    }
                }
            }
        }
        
        System.out.println(max_score);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int M = scanner.nextInt();
        int Q = scanner.nextInt();
        
        int[][] Q_groups = new int[Q][4];
        for (int i = 0; i < Q; i++) {
            for (int j = 0; j < 4; j++) {
                Q_groups[i][j] = scanner.nextInt();
            }
        }
        
        int max_score = 0;
        for (int i = 1; i <= M; i++) {
            for (int j = 1; j <= M; j++) {
                for (int k = 1; k <= M; k++) {
                    for (int l = 1; l <= M; l++) {
                        int[] p = new int[N + 1];
                        p[0] = i;
                        p[1] = j;
                        p[2] = k;
                        p[3] = l;
                        
                        int temp_score = 0;
                        for (int[] q : Q_groups) {
                            if (p[q[1] - 1] - p[q[0] - 1] == q[2]) {
                                temp_score += q[3];
                            }
                        }
                        
                        max_score = Math.max(max_score, temp_score);
                    }
                }
            }
        }
        
        System.out.println(max_score);
    }
}"
ChatGPT,codenet,Python,Java,s546174362.java,"import java.util.Arrays;
import java.util.Scanner;

public class s546174362 {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = scanner.nextInt();
    }

    Arrays.sort(A);

    while (M > 0) {
      A[N - 1] /= 2;
      M--;
      int i = -2;
      while (M > 0 && (-N <= i && A[i] >= A[N - 1])) {
        A[i] /= 2;
        M--;
        i--;
      }
      Arrays.sort(A);
    }

    int sum = 0;
    for (int i = 0; i < N; i++) {
      sum += A[i];
    }
    System.out.println(sum);
  }
}","import java.util.Arrays;
import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = scanner.nextInt();
    }

    Arrays.sort(A);

    while (M > 0) {
      A[N - 1] /= 2;
      M--;
      int i = -2;
      while (M > 0 && (-N <= i && A[(i + N) % N] >= A[N - 1])) {
        A[(i + N) % N] /= 2;
        M--;
        i--;
      }
      Arrays.sort(A);
    }

    int sum = 0;
    for (int i = 0; i < N; i++) {
      sum += A[i];
    }
    System.out.println(sum);
  }
}"
ChatGPT,codenet,Python,Java,s454986054.java,"import java.util.Scanner;

public class s454986054 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        System.out.println(Math.pow(n, 3));
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        System.out.println((int) Math.pow(n, 3));
    }
}"
ChatGPT,codenet,Python,Java,s681105182.java,"import java.util.Arrays;
import java.util.Scanner;

public class s681105182 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] a_li = new int[N];
        for (int i = 0; i < N; i++) {
            a_li[i] = scanner.nextInt();
        }

        Arrays.sort(a_li);

        int n = a_li[N-1];

        int dif = (int)1e18;
        int prev_dif = dif;
        int r = 0;
        for (int i = 0; i < N-1; i++) {
            int a = a_li[i];
            dif = Math.min(Math.abs(n/2 - a), dif);
            if (dif != prev_dif) {
                r = a;
                prev_dif = dif;
            }
        }

        System.out.println(n + "" "" + r);
    }
}","import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] a_li = new int[N];
        for (int i = 0; i < N; i++) {
            a_li[i] = scanner.nextInt();
        }

        Arrays.sort(a_li);

        int n = a_li[N-1];

        int dif = (int)1e18;
        int prev_dif = dif;
        int r = 0;
        for (int i = 0; i < N-1; i++) {
            int a = a_li[i];
            dif = (int) Math.min(Math.abs((double) n/2 - a), dif);
            if (dif != prev_dif) {
                r = a;
                prev_dif = dif;
            }
        }

        System.out.println(n + "" "" + r);
    }
}"
ChatGPT,codenet,Python,Java,s289483518.java,"import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class s289483518 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        Arrays.sort(a);
        int[][] ope = new int[m][2];
        for (int i = 0; i < m; i++) {
            ope[i][0] = scanner.nextInt();
            ope[i][1] = scanner.nextInt();
        }
        Arrays.sort(ope, Comparator.comparingInt(o -> o[1]));
        int j = 0;
        for (int i = 0; i < n; i++) {
            if (a[i] < ope[j][1]) {
                a[i] = ope[j][1];
                ope[j][0]--;
                if (ope[j][0] == 0) {
                    j++;
                    if (j == ope.length) {
                        break;
                    }
                }
            } else {
                break;
            }
        }
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += a[i];
        }
        System.out.println(sum);
    }
}","import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        Arrays.sort(a);
        int[][] ope = new int[m][2];
        for (int i = 0; i < m; i++) {
            ope[i][0] = scanner.nextInt();
            ope[i][1] = scanner.nextInt();
        }
        Arrays.sort(ope, Comparator.comparingInt(o -> o[1]));
        int j = 0;
        for (int i = 0; i < n; i++) {
            if (a[i] < ope[j][1]) {
                a[i] = ope[j][1];
                ope[j][0]--;
                if (ope[j][0] == 0) {
                    j++;
                    if (j == ope.length) {
                        break;
                    }
                }
            } else {
                break;
            }
        }
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += a[i];
        }
        System.out.println(sum);
    }
}"
ChatGPT,codenet,C++,Python,s539273394.py,"Here is the translated Python code:


def sosuubunnpu():
    global prime_or_not, prime_list, prime_num, prime_counter
    prime_or_not = [0] * 1001
    prime_list = [0] * 1001
    prime_num = [0] * 1001
    prime_counter = 0
    for i in range(2, 1001):
        for j in range(2, 1001 // i + 1):
            if prime_or_not[i] == 0:
                prime_or_not[i * j] = 1
    for i in range(2, 1001):
        if prime_or_not[i] == 0:
            prime_list[prime_counter] = i
            prime_counter += 1

def innsuubunnkai(N, n):
    global kekka
    time = 0
    while True:
        if N % n == 0:
            N = N // n
            time += 1
        else:
            break
    kekka = [time, N]

sosuubunnpu()
N = int(input())
innsuu = [0] * 11
A = [[0] * 11 for _ in range(N + 1)]
prime_num = [0] * 1001
result = 1

for current_num in range(2, N + 1):
    kekka[1] = current_num
    for i in range(prime_counter):
        innsuubunnkai(kekka[1], prime_list[i])
        prime_num[i] += kekka[0]

for current_num in range(2, N + 1):
    for i in range(11):
        innsuu[i] += A[current_num][i]

for i in range(prime_counter):
    result = (result * (prime_num[i] + 1)) % 1000000007

print(result)","kekka = [0, 0]
def sosuubunnpu():
    global prime_or_not, prime_list, prime_num, prime_counter
    prime_or_not = [0] * 1001
    prime_list = [0] * 1001
    prime_num = [0] * 1001
    prime_counter = 0
    for i in range(2, 1001):
        for j in range(2, 1000 // i + 1):
            if prime_or_not[i] == 0:
                prime_or_not[i * j] = 1
    for i in range(2, 1001):
        if prime_or_not[i] == 0:
            prime_list[prime_counter] = i
            prime_counter += 1

def innsuubunnkai(N, n):
    global kekka
    time = 0
    while True:
        if N % n == 0:
            N = N // n
            time += 1
        else:
            break
    kekka = [time, N]

sosuubunnpu()
N = int(input())
innsuu = [0] * 11
A = [[0] * 11 for _ in range(N + 1)]
prime_num = [0] * 1001
result = 1

for current_num in range(2, N + 1):
    kekka[1] = current_num
    for i in range(prime_counter):
        innsuubunnkai(kekka[1], prime_list[i])
        prime_num[i] += kekka[0]

for current_num in range(2, N + 1):
    for i in range(11):
        innsuu[i] += A[current_num][i]

for i in range(prime_counter):
    result = (result * (prime_num[i] + 1)) % 1000000007

print(result)"
ChatGPT,codenet,C++,Python,s107204188.py,"import math

minA = 10**9 + 1
num = 0

n, t = map(int, input().split())
A = list(map(int, input().split()))

for i in range(n):
    if minA > A[i]:
        minA = A[i]
    else:
        if f == A[i] - minA:
            num += 1
        elif f < A[i] - minA:
            num = 1
            f = A[i] - minA

print(num)","import math

minA = 10**9 + 1
num = 0
f = 0

n, t = map(int, input().split())
A = list(map(int, input().split()))

for i in range(n):
    if minA > A[i]:
        minA = A[i]
    else:
        if f == A[i] - minA:
            num += 1
        elif f < A[i] - minA:
            num = 1
            f = A[i] - minA

print(num)"
ChatGPT,codenet,C++,Python,s469969316.py,"def Not(x):
    return 2 - x

def And(x, y):
    if x * y == 0:
        return 0
    if x == 2 and y == 2:
        return 2
    return 1

def Or(x, y):
    if x == 2 or y == 2:
        return 2
    if x == 1 or y == 1:
        return 1
    return 0

def parse(ss, it):
    c = ss[it]
    it += 1
    if '0' <= c <= '2':
        return int(c)
    if c == '-':
        return Not(parse(ss, it))

    x = parse(ss, it)
    c = ss[it]
    it += 1
    y = parse(ss, it)
    it += 1
    if c == '*':
        return And(x, y)
    return Or(x, y)

while True:
    input_str = input().strip()
    if input_str == '.':
        break

    a = [0, 1, 2]
    cnt = 0
    for i in range(3):
        for j in range(3):
            for k in range(3):
                a[0] = i
                a[1] = j
                a[2] = k
                ss = input_str
                for idx, c in enumerate(ss):
                    if c == 'P':
                        ss = ss[:idx] + str(a[0]) + ss[idx+1:]
                    elif c == 'Q':
                        ss = ss[:idx] + str(a[1]) + ss[idx+1:]
                    elif c == 'R':
                        ss = ss[:idx] + str(a[2]) + ss[idx+1:]
                it = 0
                if parse(ss, it) == 2:
                    cnt += 1
    print(cnt)","def Not(x):
    return 2 - x

def And(x, y):
    if x * y == 0:
        return 0
    if x == 2 and y == 2:
        return 2
    return 1

def Or(x, y):
    if x == 2 or y == 2:
        return 2
    if x == 1 or y == 1:
        return 1
    return 0

def parse(ss, it):
    c = ss[it]
    it += 1
    if '0' <= c <= '2':
        return int(c)
    if c == '-':
        return Not(parse(ss, it))

    x = parse(ss, it)
    c = ss[it]
    it += 1
    y = parse(ss, it)
    it += 1
    if c == '*':
        return And(x, y)
    return Or(x, y)

while True:
    input_str = input().strip()
    if input_str == '.':
        break

    a = [0, 1, 2]
    cnt = 0
    for i in range(3):
        for j in range(3):
            for k in range(3):
                a[0] = i
                a[1] = j
                a[2] = k
                ss = input_str
                for idx, c in enumerate(ss):
                    if c == 'P':
                        ss = ss[:idx] + str(a[0]) + ss[idx+1:]
                    elif c == 'Q':
                        ss = ss[:idx] + str(a[1]) + ss[idx+1:]
                    elif c == 'R':
                        ss = ss[:idx] + str(a[2]) + ss[idx+1:]
                it = 0
                if parse(ss, it) == 2:
                    cnt += 1
    print(cnt)"
ChatGPT,codenet,C++,Python,s611392782.py,"def mul(s, idx):
    res = int(s[idx])
    while idx + 1 < len(s) and s[idx + 1] == '*':
        idx += 2
        res *= int(s[idx])
    return res

def add(s, idx):
    res = mul(s, idx)
    while idx + 1 < len(s) and s[idx + 1] == '+':
        idx += 2
        res += mul(s, idx)
    return res

def bob(s, idx):
    res = int(s[idx])
    while idx + 1 < len(s):
        if s[idx + 1] == '+':
            res += int(s[idx + 2])
        else:
            res *= int(s[idx + 2])
        idx += 2
    return res

while True:
    try:
        s, d = input().split()
        idx = 0
        a = add(s, idx)
        idx = 0
        b = bob(s, idx)
        if a == int(d):
            print(""U"" if b == int(d) else ""M"")
        else:
            print(""L"" if b == int(d) else ""I"")
    except EOFError:
        break","def mul(s, idx):
    res = int(s[idx])
    while idx + 1 < len(s) and s[idx + 1] == '*':
        idx += 2
        res *= int(s[idx])
    return res

def add(s, idx):
    res = mul(s, idx)
    while idx + 1 < len(s) and s[idx + 1] == '+':
        idx += 2
        res += mul(s, idx)
    return res

def bob(s, idx):
    res = int(s[idx])
    while idx + 1 < len(s):
        if s[idx + 1] == '+':
            res += int(s[idx + 2])
        else:
            res *= int(s[idx + 2])
        idx += 2
    return res

while True:
    try:
        s, d = input(), input()
        idx = 0
        a = add(s, idx)
        idx = 0
        b = bob(s, idx)
        if a == int(d):
            print(""U"" if b == int(d) else ""M"")
        else:
            print(""L"" if b == int(d) else ""I"")
    except EOFError:
        break"
ChatGPT,codenet,C++,Python,s680076196.py,"a, b, c, d = map(int, input().split())
print((a-c)*(b-d))","a, b = map(int, input().split())
c, d = map(int, input().split())
print((a-c)*(b-d))"
ChatGPT,codenet,C++,Python,s669128523.py,"#depth first search
#not lie in stack

N=100
WHITE=0
GRAY=1
BLACK=2

M=[[0]*N for i in range(N)]
n=0
color=[0]*N
d=[0]*N
f=[0]*N
tt=0

def dfs_visit(u):
    global tt
    v=0
    color[u]=GRAY
    d[u]=tt+1
    while v<n:
        if M[u][v]==0:
            v+=1
            continue
        if color[v]==WHITE:
            dfs_visit(v)
        v+=1
    color[u]=BLACK
    tt+=1
    f[u]=tt

def dfs():
    global tt
    u=0
    for i in range(n):
        color[i]=WHITE
    tt=0
    while u<n:
        if color[u]==WHITE:
            dfs_visit(u)
        u+=1
    for i in range(n):
        print(i+1,d[i],f[i])

n=int(input())
for i in range(n):
    for j in range(n):
        M[i][j]=0
for i in range(n):
    u,k=map(int,input().split())
    u-=1
    for j in range(k):
        v=int(input())
        v-=1
        M[u][v]=1

dfs()","#depth first search
#not lie in stack

N=100
WHITE=0
GRAY=1
BLACK=2

M=[[0]*N for i in range(N)]
n=0
color=[0]*N
d=[0]*N
f=[0]*N
tt=0

def dfs_visit(u):
    global tt
    v=0
    color[u]=GRAY
    d[u]=tt+1
    while v<n:
        if M[u][v]==0:
            v+=1
            continue
        if color[v]==WHITE:
            dfs_visit(v)
        v+=1
    color[u]=BLACK
    tt+=1
    f[u]=tt

def dfs():
    global tt
    u=0
    for i in range(n):
        color[i]=WHITE
    tt=0
    while u<n:
        if color[u]==WHITE:
            dfs_visit(u)
        u+=1
    for i in range(n):
        print(i+1,d[i],f[i])

n=int(input())
for i in range(n):
    for j in range(n):
        M[i][j]=0
for i in range(n):
    inputs = input().split()
    u,k=int(inputs[0]), int(inputs[1])
    u-=1
    for j in range(k):
        v=int(inputs[j + 2])
        v-=1
        M[u][v]=1

dfs()"
ChatGPT,codenet,C++,Python,s085712108.py,"a = input()
b = input()
c = input()

queue = []
visited = set()

queue.append((a, b, c, 0))

while queue:
    fro = queue.pop(0)
    a, b, c, tot = fro

    if a == b and b == c:
        print(tot)
        break

    for f in [(1, 1, 0), (1, 0, 1), (0, 1, 1), (2, 0, 0), (0, 2, 0), (0, 0, 2)]:
        push = (a + f[0], b + f[1], c + f[2], tot + 1)
        n = push[0]*10000 + push[1]*100 + push[2]

        if n not in visited:
            visited.add(n)
            queue.append(push)","a, b, c = map(int, input().split())
queue = []
visited = set()

queue.append((a, b, c, 0))

while queue:
    fro = queue.pop(0)
    a, b, c, tot = fro

    if a == b and b == c:
        print(tot)
        break

    for f in [(1, 1, 0), (1, 0, 1), (0, 1, 1), (2, 0, 0), (0, 2, 0), (0, 0, 2)]:
        push = (a + f[0], b + f[1], c + f[2], tot + 1)
        n = push[0]*10000 + push[1]*100 + push[2]

        if n not in visited:
            visited.add(n)
            queue.append(push)"
ChatGPT,codenet,C++,Python,s568362035.py,"n, m = map(int, input().split())
Q = int(input())
a = list(map(int, input().split()))

MAXN = int(1E5 + 10)
b = [0] * MAXN
id = [0] * MAXN
vis = [False] * MAXN
cnt = [0] * MAXN

for i in range(Q, 0, -1):
    if not vis[a[i]]:
        j = Q - i + 1
        b[j] = a[i]
        vis[a[i]] = True

j = m
for i in range(m, 0, -1):
    if not vis[i]:
        b[j] = i
        j -= 1

for i in range(1, m + 1):
    id[b[i]] = i

flag = True
cnt[0] = n
for i in range(Q, 0, -1):
    t = id[a[i]]
    if cnt[t - 1] > 0:
        cnt[t - 1] -= 1
        cnt[t] += 1
        vis[t] = True
    elif not vis[t]:
        flag = False
        break

l = 0
while cnt[l] == 0:
    l += 1

for i in range(l + 1, m):
    flag = flag and b[i] < b[i + 1]

print(""Yes"" if flag else ""No"")","n, m = map(int, input().split())
Q = int(input())

MAXN = int(1E5 + 10)
a = [0] * MAXN
b = [0] * MAXN
id = [0] * MAXN
vis = [False] * MAXN
cnt = [0] * MAXN

inputs = list(map(int, input().split()))
for i in range(1, Q + 1):
	a[i] = inputs[i - 1]

for i in range(Q, 0, -1):
    if not vis[a[i]]:
        j = Q - i + 1
        b[j] = a[i]
        vis[a[i]] = True

j = m
for i in range(m, 0, -1):
    if not vis[i]:
        b[j] = i
        j -= 1

for i in range(1, m + 1):
    id[b[i]] = i

flag = True
cnt[0] = n
for i in range(Q, 0, -1):
    t = id[a[i]]
    if cnt[t - 1] > 0:
        cnt[t - 1] -= 1
        cnt[t] += 1
        vis[t] = True
    elif not vis[t]:
        flag = False
        break

l = 0
while cnt[l] == 0:
    l += 1

for i in range(l + 1, m):
    flag = flag and b[i] < b[i + 1]

print(""Yes"" if flag else ""No"")"
ChatGPT,codenet,C++,Python,s360529905.py,"import sys
def main():
    N = int(input())
    a = []
    b = []
    for i in range(N):
        a.append(int(input()))
        b.append(a[i])
    b.sort()
    frontHalf = b[N//2-1]
    backHalf = b[N//2]
    del b
    for i in range(N):
        if a[i] < backHalf:
            print(backHalf)
        else:
            print(frontHalf)
    del a

if __name__ == ""__main__"":
    main()","import sys
def main():
    N = int(input())
    a = []
    b = []
    inputs = list(input().split())
    for i in range(N):
        a.append(int(inputs[i]))
        b.append(a[i])
    b.sort()
    frontHalf = b[N//2-1]
    backHalf = b[N//2]
    del b
    for i in range(N):
        if a[i] < backHalf:
            print(backHalf)
        else:
            print(frontHalf)
    del a

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,C++,Python,s968402497.py,"tc, n, m, fl = map(int, input().split())
if n > m:
  n, m = m, n
for i in range(1, m+1):
  if i*tc >= n and i*tc <= m:
    print(""OK"")
    fl = 1
    break
if fl == 0:
  print(""NG"")","tc = int(input())
n, m = map(int, input().split())
if n > m:
  n, m = m, n
for i in range(1, m+1):
  if i*tc >= n and i*tc <= m:
    print(""OK"")
    fl = 1
    break
if fl == 0:
  print(""NG"")"
ChatGPT,codenet,C++,Python,s447383972.py,"n = int(input())
a = list(map(int, input().split()))
a.sort()
q = []
for i in range(1, n):
    if a[i] == a[i+1]:
        q.append(a[i])
q.sort()
print(q[-1] * q[-2])","n = int(input())
a = list(map(int, input().split()))
a.sort()
q = []
for i in range(n):
    if a[i] == a[(i+1) % n]:
        q.append(a[i])
q.sort()
print(q[-1] * q[-2])"
ChatGPT,codenet,C++,Python,s634121896.py,"import sys
from typing import List, Tuple, Dict, Any, Union


def solve(n: int, nums: List[int]) -> int:
    dp = [0] * (n + 1)
    dp[0] = 1
    kek = {}
    prev = {}
    for i in range(1, n + 1):
        dp[i] = dp[i - 1] + (kek[nums[i - 1]] if prev.get(nums[i - 1]) != i - 1 else 0)
        dp[i] %= 10**9 + 7
        kek[nums[i - 1]] = dp[i]
        prev[nums[i - 1]] = i
    return dp[n]


def from_input_string(input_string: str) -> Tuple:
    lines = input_string.strip().split('\n')
    n = int(lines[0])
    nums = list(map(int, lines[1].strip().split()))
    return n, nums


def to_input_string(inputs: Tuple) -> str:
    n, nums = inputs
    res = []
    res.append(str(n))
    res.append(' '.join(str(x) for x in nums))
    return '\n'.join(res)


def from_output_string(output_string: str) -> Any:
    return int(output_string.strip())


def to_output_string(output: Any) -> str:
    return str(output)


def from_output_string(output_string: str) -> Any:
    return int(output_string.strip())


def to_output_string(output: Any) -> str:
    return str(output)


def from_output_string(output_string: str) -> Any:
    return int(output_string.strip())


def to_output_string(output: Any) -> str:
    return str(output)


if __name__ == '__main__':
    input_str = sys.stdin.read()
    inputs = from_input_string(input_str)
    print(inputs)","import sys
from typing import List, Tuple, Dict, Any, Union


def solve(n: int, nums: List[int]) -> int:
    dp = [0] * (n + 1)
    dp[0] = 1
    kek = {}
    prev = {}
    for i in range(1, n + 1):
        dp[i] = dp[i - 1] + (kek[nums[i - 1]] if prev.get(nums[i - 1]) != i - 1 else 0)
        dp[i] %= 10**9 + 7
        kek[nums[i - 1]] = dp[i]
        prev[nums[i - 1]] = i
    return dp[n]


def from_input_string(input_string: str) -> Tuple:
    lines = input_string.strip().split('\n')
    n = int(lines[0])
    nums = list(map(int, lines[1].strip().split()))
    return n, nums


def to_input_string(inputs: Tuple) -> str:
    n, nums = inputs
    res = []
    res.append(str(n))
    res.append(' '.join(str(x) for x in nums))
    return '\n'.join(res)


def from_output_string(output_string: str) -> Any:
    return int(output_string.strip())


def to_output_string(output: Any) -> str:
    return str(output)


def from_output_string(output_string: str) -> Any:
    return int(output_string.strip())


def to_output_string(output: Any) -> str:
    return str(output)


def from_output_string(output_string: str) -> Any:
    return int(output_string.strip())


def to_output_string(output: Any) -> str:
    return str(output)


if __name__ == '__main__':
    input_str = sys.stdin.read()
    inputs = from_input_string(input_str)
    print(solve(inputs[0], inputs[1]))"
ChatGPT,codenet,C++,Python,s783753345.py,"while True:
    a, S, b = input().split()
    a = int(a)
    b = int(b)
    if S == '+':
        print(a + b)
    elif S == '-':
        print(a - b)
    elif S == '*':
        print(a * b)
    elif S == '/':
        print(a / b)
    elif S == '?':
        break","while True:
    a, S, b = input().split()
    a = int(a)
    b = int(b)
    if S == '+':
        print(a + b)
    elif S == '-':
        print(a - b)
    elif S == '*':
        print(a * b)
    elif S == '/':
        print(a // b)
    elif S == '?':
        break"
ChatGPT,codenet,C++,Python,s605014348.py,"import math

def div(n):
    if n % 2 == 0:
        return 2
    s = int(math.sqrt(n))
    for i in range(3, s+1, 2):
        if n % i == 0:
            return i
    return n

num = int(input())
print(num, end="":"")
while num != 1:
    print("" "", div(num), end="""")
    num = num // div(num)
print()","import math

def div(n):
    if n % 2 == 0:
        return 2
    s = int(math.sqrt(n))
    for i in range(3, s+1, 2):
        if n % i == 0:
            return i
    return n

num = int(input())
print(num, end="": "")
while num != 1:
    print(div(num), end="" "")
    num = num // div(num)
print()"
ChatGPT,codenet,C++,Python,s798522572.py,"N, T = map(int, input().split())
A = list(map(int, input().split()))
B = [0] * N
m = A[0]
B[1] = A[1] - m
m = min(m, A[1])
for i in range(2, N):
    B[i] = A[i] - m
    m = min(m, A[i])","N, T = map(int, input().split())
A = list(map(int, input().split()))
B = [0] * N
m = A[0]
B[1] = A[1] - m
m = min(m, A[1])
for i in range(2, N):
    B[i] = A[i] - m
    m = min(m, A[i])
print(B.count(max(B)))"
ChatGPT,codenet,C++,Java,s338629964.java,"import java.util.Scanner;

public class s338629964 {
    static final int MOD2 = 1000000007;
    static final int MOD = 998244353;
    static final int INF = ((1<<30)-1);
    static final long LINF = (1LL<<60);
    static final double EPS = (1e-10);
    static final int MAX = 1100000;

    static long[] fact = new long[MAX];
    static long[] revfact = new long[MAX];
    static long[] rev = new long[MAX];

    public static void init(){
        int m = MOD;
        fact[0] = 1;
        revfact[0] = 1;
        rev[0] = 0;
        rev[1] = 1;
        for(int i = 1;i < MAX;i++){
            fact[i] = fact[i-1] * i % m;
            if(i>1)rev[i] = MOD / i * (MOD-rev[MOD % i]) % MOD;
            revfact[i] = revfact[i-1] * rev[i] % MOD;
        }
    }

    static long[][] comb = new long[1100][1100];

    public static long nCk(long n, long k){
        if(n < k)return 0;
        if(comb[(int)n][(int)k] != 0)return comb[(int)n][(int)k];
        long res = fact[(int)n] * revfact[(int)(n-k)] % MOD * revfact[(int)k] % MOD;
        comb[(int)n][(int)k] = res;
        return res;
    }

    public static long mod_pow(long x, long a, long m){
        if(a == 0)return 1;
        long res = mod_pow(x, a / 2, m);
        res = res * res % m;
        if(a % 2)res *= x;
        return res % m;
    }

    public static long inv(long x, long m){
        return mod_pow(x, m-2, m);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        init();
        long aall = 0;
        long ball = 0;
        long n = sc.nextLong();
        long ans = 0;
        long[] a = new long[440];
        long[] b = new long[440];
        long[][][][] dp = new long[440][440][2][2];

        for(int i = 0;i < n;i++){
            a[i] = sc.nextLong();
            b[i] = sc.nextLong();
            aall += a[i];
            ball += b[i];
        }

        dp[0][0][0][0] = 1;
        for(int i = 1;i <= n;i++){
            int id = i % 2;
            for(int asum = (int)aall;asum >= 0;asum--){
                for(int cnt = 0;cnt <= ball;cnt++){
                    for(int p = 0;p < 2;p++){
                        if(asum-a[i-1] < 0)continue;
                        long pw = 1;
                        for(int use = 0;use < b[i-1];use++){
                            if(cnt-use >= 0){
                                long tmp =  nCk(cnt, use) % MOD * pw %  MOD;
                                dp[asum][cnt][p][0] += dp[asum-(int)a[i-1]][cnt-use][p^1][0] * tmp % MOD;
                                dp[asum][cnt][p][1] += dp[asum-(int)a[i-1]][cnt-use][p^1][1] * tmp % MOD;
                            }
                            else break;
                            pw = pw * a[i-1] % MOD;
                        }
                        if(cnt-b[i-1]+1 >= 0)
                            dp[asum][cnt][p][1] += dp[asum-(int)a[i-1]][cnt-(int)b[i-1]+1][p^1][0] * nCk(cnt, (int)b[i-1]-1) % MOD * pw %  MOD;
                        dp[asum][cnt][p][0] %= MOD;
                        dp[asum][cnt][p][1] %= MOD;
                    }
                }
            }
        }

        for(int asum = 0;asum <= aall;asum++){
            long rev_asum_pow = 1;
            for(int cnt = 0;cnt <= ball;cnt++){
                rev_asum_pow = rev_asum_pow * rev[asum] % MOD;
                for(int p = 0;p < 2;p++){
                    long x = dp[asum][cnt][p][1] * rev_asum_pow  % MOD * (cnt+1) % MOD * aall % MOD * rev[asum] % MOD;
                    if(p == 1)ans += x;
                    else ans -= x;
                    ans %= MOD;
                }
            }
        }
        if(ans < 0)ans += MOD;
        System.out.println(ans);
    }
}","import java.util.Scanner;

public class Main {
    static final int MOD2 = 1000000007;
    static final int MOD = 998244353;
    static final int INF = ((1<<30)-1);
    static final long LINF = (1L<<60);
    static final double EPS = (1e-10);
    static final int MAX = 1100000;

    static long[] fact = new long[MAX];
    static long[] revfact = new long[MAX];
    static long[] rev = new long[MAX];

    public static void init(){
        int m = MOD;
        fact[0] = 1;
        revfact[0] = 1;
        rev[0] = 0;
        rev[1] = 1;
        for(int i = 1;i < MAX;i++){
            fact[i] = fact[i-1] * i % m;
            if(i>1)rev[i] = MOD / i * (MOD-rev[MOD % i]) % MOD;
            revfact[i] = revfact[i-1] * rev[i] % MOD;
        }
    }

    static long[][] comb = new long[1100][1100];

    public static long nCk(long n, long k){
        if(n < k)return 0;
        if(comb[(int)n][(int)k] != 0)return comb[(int)n][(int)k];
        long res = fact[(int)n] * revfact[(int)(n-k)] % MOD * revfact[(int)k] % MOD;
        comb[(int)n][(int)k] = res;
        return res;
    }

    public static long mod_pow(long x, long a, long m){
        if(a == 0)return 1;
        long res = mod_pow(x, a / 2, m);
        res = res * res % m;
        if(a % 2 != 0)res *= x;
        return res % m;
    }

    public static long inv(long x, long m){
        return mod_pow(x, m-2, m);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        init();
        long aall = 0;
        long ball = 0;
        long n = sc.nextLong();
        long ans = 0;
        long[] a = new long[440];
        long[] b = new long[440];
        long[][][][] dp = new long[440][440][2][2];

        for(int i = 0;i < n;i++){
            a[i] = sc.nextLong();
            b[i] = sc.nextLong();
            aall += a[i];
            ball += b[i];
        }

        dp[0][0][0][0] = 1;
        for(int i = 1;i <= n;i++){
            int id = i % 2;
            for(int asum = (int)aall;asum >= 0;asum--){
                for(int cnt = 0;cnt <= ball;cnt++){
                    for(int p = 0;p < 2;p++){
                        if(asum-a[i-1] < 0)continue;
                        long pw = 1;
                        for(int use = 0;use < b[i-1];use++){
                            if(cnt-use >= 0){
                                long tmp =  nCk(cnt, use) % MOD * pw %  MOD;
                                dp[asum][cnt][p][0] += dp[asum-(int)a[i-1]][cnt-use][p^1][0] * tmp % MOD;
                                dp[asum][cnt][p][1] += dp[asum-(int)a[i-1]][cnt-use][p^1][1] * tmp % MOD;
                            }
                            else break;
                            pw = pw * a[i-1] % MOD;
                        }
                        if(cnt-b[i-1]+1 >= 0)
                            dp[asum][cnt][p][1] += dp[asum-(int)a[i-1]][cnt-(int)b[i-1]+1][p^1][0] * nCk(cnt, (int)b[i-1]-1) % MOD * pw %  MOD;
                        dp[asum][cnt][p][0] %= MOD;
                        dp[asum][cnt][p][1] %= MOD;
                    }
                }
            }
        }

        for(int asum = 0;asum <= aall;asum++){
            long rev_asum_pow = 1;
            for(int cnt = 0;cnt <= ball;cnt++){
                rev_asum_pow = rev_asum_pow * rev[asum] % MOD;
                for(int p = 0;p < 2;p++){
                    long x = dp[asum][cnt][p][1] * rev_asum_pow  % MOD * (cnt+1) % MOD * aall % MOD * rev[asum] % MOD;
                    if(p == 1)ans += x;
                    else ans -= x;
                    ans %= MOD;
                }
            }
        }
        if(ans < 0)ans += MOD;
        System.out.println(ans);
    }
}"
ChatGPT,codenet,C++,Java,s550008428.java,"import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class s550008428 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int s = scanner.nextInt();
        int x;
        int d = 2;
        Set<Integer> a = new HashSet<>();
        a.add(s);

        while (true) {
            if (s % 2 == 0) {
                x = s / 2;
                if (a.contains(x)) {
                    System.out.println(d);
                    break;
                }
                a.add(x);
            } else {
                x = 3 * s + 1;
                if (a.contains(x)) {
                    System.out.println(d);
                    break;
                }
                a.add(x);
            }
            s = x;
            d++;
        }
        System.out.println(d);
    }
}","import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int s = scanner.nextInt();
        int x;
        int d = 2;
        Set<Integer> a = new HashSet<>();
        a.add(s);
        boolean flag = false;
        while (true) {
            if (s % 2 == 0) {
                x = s / 2;
                if (a.contains(x)) {
                    System.out.println(d);
                    flag = true;
                    break;
                }
                a.add(x);
            } else {
                x = 3 * s + 1;
                if (a.contains(x)) {
                    System.out.println(d);
                    flag = true;
                    break;
                }
                a.add(x);
            }
            s = x;
            d++;
        }
        if (!flag) {
            System.out.println(d);
        }
    }
}"
ChatGPT,codenet,C++,Java,s085712108.java,"import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

public class s085712108 {
    static class QUEUE {
        int a, b, c, tot;

        public QUEUE(int a, int b, int c, int tot) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.tot = tot;
        }
    }

    static int[][] F = {{1, 1, 0}, {1, 0, 1}, {0, 1, 1}, {2, 0, 0}, {0, 2, 0}, {0, 0, 2}};
    static ArrayList<Integer>[] Hash;
    static int MOD = 7007;

    static boolean HASH(int n) {
        if (Hash[n % MOD].contains(n))
            return false;
        Hash[n % MOD].add(n);
        return true;
    }

    public static void main(String[] args) {
        Hash = new ArrayList[MOD];
        for (int i = 0; i < MOD; i++) {
            Hash[i] = new ArrayList<>();
        }
        QUEUE Push = new QUEUE(0, 0, 0, 0);
        Queue<QUEUE> que = new LinkedList<>();
        Push.tot = 0;
        Push.a = 1; // Input the value for a
        Push.b = 1; // Input the value for b
        Push.c = 1; // Input the value for c
        que.add(Push);
        while (!que.isEmpty()) {
            QUEUE Fro = que.peek();
            if (Fro.a == Fro.b && Fro.b == Fro.c) {
                System.out.println(Fro.tot);
                return;
            }
            for (int i = 0; i < 6; i++) {
                Push = new QUEUE(Fro.a, Fro.b, Fro.c, Fro.tot);
                Push.tot++;
                Push.a += F[i][0];
                Push.b += F[i][1];
                Push.c += F[i][2];
                int n = Push.a * 10000 + Push.b * 100 + Push.c;
                if (!HASH(n))
                    continue;
                que.add(Push);
            }
            que.poll();
        }
    }
}","import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

public class Main {
    static class QUEUE {
        int a, b, c, tot;

        public QUEUE(int a, int b, int c, int tot) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.tot = tot;
        }
    }

    static int[][] F = {{1, 1, 0}, {1, 0, 1}, {0, 1, 1}, {2, 0, 0}, {0, 2, 0}, {0, 0, 2}};
    static ArrayList<Integer>[] Hash;
    static int MOD = 7007;

    static boolean HASH(int n) {
        if (Hash[n % MOD].contains(n))
            return false;
        Hash[n % MOD].add(n);
        return true;
    }

    public static void main(String[] args) {
        Hash = new ArrayList[MOD];
        for (int i = 0; i < MOD; i++) {
            Hash[i] = new ArrayList<>();
        }
        QUEUE Push = new QUEUE(0, 0, 0, 0);
        Queue<QUEUE> que = new LinkedList<>();
        Push.tot = 0;
        Push.a = 1; // Input the value for a
        Push.b = 1; // Input the value for b
        Push.c = 1; // Input the value for c
        que.add(Push);
        while (!que.isEmpty()) {
            QUEUE Fro = que.peek();
            if (Fro.a == Fro.b && Fro.b == Fro.c) {
                System.out.println(Fro.tot);
                return;
            }
            for (int i = 0; i < 6; i++) {
                Push = new QUEUE(Fro.a, Fro.b, Fro.c, Fro.tot);
                Push.tot++;
                Push.a += F[i][0];
                Push.b += F[i][1];
                Push.c += F[i][2];
                int n = Push.a * 10000 + Push.b * 100 + Push.c;
                if (!HASH(n))
                    continue;
                que.add(Push);
            }
            que.poll();
        }
    }
}"
ChatGPT,codenet,C++,Java,s669128523.java,"import java.util.Scanner;

public class s669128523 {
    private static final int N = 100;
    private static final int WHITE = 0;
    private static final int GRAY = 1;
    private static final int BLACK = 2;

    private static int[][] M = new int[N][N];
    private static int[] color = new int[N];
    private static int[] d = new int[N];
    private static int[] f = new int[N];
    private static int tt;

    private static void dfs_visit(int u) {
        int v;
        color[u] = GRAY;
        d[u] = ++tt;
        for (v = 0; v < N; v++) {
            if (M[u][v] == 0)
                continue;
            if (color[v] == WHITE) {
                dfs_visit(v);
            }
        }
        color[u] = BLACK;
        f[u] = ++tt;
    }

    private static void dfs() {
        int u;
        for (int i = 0; i < N; i++) {
            color[i] = WHITE;
        }
        tt = 0;

        for (u = 0; u < N; u++) {
            if (color[u] == WHITE)
                dfs_visit(u);
        }

        for (int i = 0; i < N; i++)
            System.out.println((i + 1) + "" "" + d[i] + "" "" + f[i]);
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        int n = input.nextInt();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++)
                M[i][j] = 0;
        }
        for (int i = 0; i < n; i++) {
            int u = input.nextInt() - 1;
            int k = input.nextInt();
            for (int j = 0; j < k; j++) {
                int v = input.nextInt() - 1;
                M[u][v] = 1;
            }
        }

        dfs();
    }
}","import java.util.Scanner;

public class Main {
    private static final int N = 100;
    private static final int WHITE = 0;
    private static final int GRAY = 1;
    private static final int BLACK = 2;

    private static int[][] M = new int[N][N];
    private static int[] color = new int[N];
    private static int[] d = new int[N];
    private static int[] f = new int[N];
    private static int tt;

    private static void dfs_visit(int u) {
        int v;
        color[u] = GRAY;
        d[u] = ++tt;
        for (v = 0; v < N; v++) {
            if (M[u][v] == 0)
                continue;
            if (color[v] == WHITE) {
                dfs_visit(v);
            }
        }
        color[u] = BLACK;
        f[u] = ++tt;
    }

    private static void dfs() {
        int u;
        for (int i = 0; i < N; i++) {
            color[i] = WHITE;
        }
        tt = 0;

        for (u = 0; u < N; u++) {
            if (color[u] == WHITE)
                dfs_visit(u);
        }

        for (int i = 0; i < N; i++)
            System.out.println((i + 1) + "" "" + d[i] + "" "" + f[i]);
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        int n = input.nextInt();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++)
                M[i][j] = 0;
        }
        for (int i = 0; i < n; i++) {
            int u = input.nextInt() - 1;
            int k = input.nextInt();
            for (int j = 0; j < k; j++) {
                int v = input.nextInt() - 1;
                M[u][v] = 1;
            }
        }

        dfs();
    }
}"
ChatGPT,codenet,C++,Java,s568362035.java,"import java.util.Scanner;

public class s568362035 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        int MAXN = (int) 1E5 + 10;

        int n, m, Q;
        int[] a = new int[MAXN];
        int[] b = new int[MAXN];
        int[] id = new int[MAXN];
        boolean[] vis = new boolean[MAXN];
        int[] cnt = new int[MAXN];

        n = input.nextInt();
        m = input.nextInt();
        Q = input.nextInt();
        for (int i = 1; i <= Q; ++i)
            a[i] = input.nextInt();
        for (int k = 0, j = Q; j > 0; --j)
            if (!vis[a[j]])
                b[++k] = a[j];
        for (int j = m, i = m; i > 0; --i)
            if (!vis[i])
                b[j--] = i;
        for (int i = 1; i <= m; ++i)
            id[b[i]] = i;

        boolean flag = true;
        cnt[0] = n;
        for (int i = Q; i > 0; --i) {
            int t = id[a[i]];
            if (cnt[t - 1] > 0) {
                --cnt[t - 1];
                ++cnt[t];
                vis[t] = true;
            } else if (!vis[t]) {
                flag = false;
                break;
            }
        }

        int l;
        for (l = 0; cnt[l] == 0; ++l);
        for (int i = l + 1; i < m; ++i)
            flag &= b[i] < b[i + 1];

        System.out.println(flag ? ""Yes"" : ""No"");
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        int MAXN = (int) 1E5 + 10;

        int n, m, Q;
        int[] a = new int[MAXN];
        int[] b = new int[MAXN];
        int[] id = new int[MAXN];
        boolean[] vis = new boolean[MAXN];
        int[] cnt = new int[MAXN];

        n = input.nextInt();
        m = input.nextInt();
        Q = input.nextInt();
        for (int i = 1; i <= Q; ++i)
            a[i] = input.nextInt();
        for (int k = 0, j = Q; j > 0; --j)
            if (!vis[a[j]])
                b[++k] = a[j];
        for (int j = m, i = m; i > 0; --i)
            if (!vis[i])
                b[j--] = i;
        for (int i = 1; i <= m; ++i)
            id[b[i]] = i;

        boolean flag = true;
        cnt[0] = n;
        for (int i = Q; i > 0; --i) {
            int t = id[a[i]];
            if (cnt[t - 1] > 0) {
                --cnt[t - 1];
                ++cnt[t];
                vis[t] = true;
            } else if (!vis[t]) {
                flag = false;
                break;
            }
        }

        int l;
        for (l = 0; cnt[l] == 0; ++l);
        for (int i = l + 1; i < m; ++i)
            flag &= b[i] < b[i + 1];

        System.out.println(flag ? ""Yes"" : ""No"");
    }
}"
ChatGPT,codenet,Java,Python,s221078931.py,"import sys

class IntegralRect:
    def __init__(self, h, w):
        self.height = h
        self.width = w

    def diagonal(self):
        if self.height >= self.width:
            return sys.maxsize
        return self.height*self.height + self.width*self.width

    def __lt__(self, other):
        d1 = self.diagonal()
        d2 = other.diagonal()
        return d1 == d2 ? self.height - other.height : d1 - d2

def main():
    rects = [IntegralRect(i + 1, j + 1) for i in range(200) for j in range(200)]
    rects.sort()

    while True:
        h, w = map(int, input().split())

        if h == 0 and w == 0:
            break

        tmpRect = IntegralRect(h, w)
        diag = tmpRect.diagonal()

        for rect in rects:
            if rect > tmpRect:
                print(rect.height, rect.width)
                break

if __name__ == ""__main__"":
    main()","import sys

class IntegralRect:
    def __init__(self, h, w):
        self.height = h
        self.width = w

    def diagonal(self):
        if self.height >= self.width:
            return sys.maxsize
        return self.height*self.height + self.width*self.width

    def __lt__(self, other):
        d1 = self.diagonal()
        d2 = other.diagonal()
        return self.height - other.height if d1 == d2 else d1 - d2

def main():
    rects = [IntegralRect(i + 1, j + 1) for i in range(200) for j in range(200)]
    rects.sort()

    while True:
        h, w = map(int, input().split())

        if h == 0 and w == 0:
            break

        tmpRect = IntegralRect(h, w)
        diag = tmpRect.diagonal()

        for rect in rects:
            if rect > tmpRect:
                print(rect.height, rect.width)
                break

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Java,Python,s893190600.py,"class Solver:
	def __init__(self, in, out):
		self.in = in
		self.out = out

	def solve(self):
		H = self.ni()
		W = self.ni()
		C = []
		for i in range(H+2):
			C.append([0]*(W+2))
		for i in range(H):
			c = list(self.ns())
			for j in range(W):
				C[i+1][j+1] = c[j]
		if H == 1 and W == 1:
			self.prn(""No"")
			return
		for i in range(1, H+1):
			for j in range(1, W+1):
				if C[i][j] == '#' and C[i-1][j] != '#' and C[i+1][j] != '#' and C[i][j-1] != '#' and C[i][j+1] != '#':
					self.prn(""No"")
					return
		self.prn(""Yes"")

	def prn(self, s):
		self.out.println(s)

	def ni(self):
		return int(self.in.nextLine())

	def ns(self):
		return self.in.nextLine()

	def nd(self):
		return float(self.in.nextLine())

	def nl(self):
		return long(self.in.nextLine())

	def ndi(self, n):
		return [int(x) for x in self.in.nextLine().split()]

	def nds(self, n):
		return self.in.nextLine().split()

	def ndd(self, n):
		return [float(x) for x in self.in.nextLine().split()]

	def ndl(self, n):
		return [long(x) for x in self.in.nextLine().split()]

	def nddl(self, n","class Solver:
	def __init__(self, in, out):
		self.in = in
		self.out = out

	def solve(self):
		H = self.ni()
		W = self.ni()
		C = []
		for i in range(H+2):
			C.append([0]*(W+2))
		for i in range(H):
			c = list(self.ns())
			for j in range(W):
				C[i+1][j+1] = c[j]
		if H == 1 and W == 1:
			self.prn(""No"")
			return
		for i in range(1, H+1):
			for j in range(1, W+1):
				if C[i][j] == '#' and C[i-1][j] != '#' and C[i+1][j] != '#' and C[i][j-1] != '#' and C[i][j+1] != '#':
					self.prn(""No"")
					return
		self.prn(""Yes"")

	def prn(self, s):
		self.out.println(s)

	def ni(self):
		return int(self.in.nextLine())

	def ns(self):
		return self.in.nextLine()

	def nd(self):
		return float(self.in.nextLine())

	def nl(self):
		return long(self.in.nextLine())

	def ndi(self, n):
		return [int(x) for x in self.in.nextLine().split()]

	def nds(self, n):
		return self.in.nextLine().split()

	def ndd(self, n):
		return [float(x) for x in self.in.nextLine().split()]

	def ndl(self, n):
		return [long(x) for x in self.in.nextLine().split()]

	def nddl(self, n"
ChatGPT,codenet,Java,Python,s193347311.py,"import sys

def main():
    intLoop = int(input())
    strTaro = """"
    strHana = """"
    intTaro = 0
    intHana = 0

    for i in range(intLoop):
        strTaro = input()
        strHana = input()
        intJudge = strTaro.compare(strHana)
        if intJudge < 0:
            intHana += 3
        elif intJudge == 0:
            intTaro += 1
            intHana += 1
        elif intJudge > 0:
            intTaro += 3

    print(intTaro, intHana)

if __name__ == ""__main__"":
    main()","import sys

def main():
    intLoop = int(input())
    strTaro = """"
    strHana = """"
    intTaro = 0
    intHana = 0

    for i in range(intLoop):
        strTaro, strHana = input().split()
        intJudge = compareTo(strTaro, strHana)
        if intJudge < 0:
            intHana += 3
        elif intJudge == 0:
            intTaro += 1
            intHana += 1
        elif intJudge > 0:
            intTaro += 3

    print(intTaro, intHana)

def compareTo(str1, str2):
  if str1 < str2:
    return -1
  elif str1 > str2:
    return 1
  else:
    return 0

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Java,Python,s356471394.py,"N, M, D = map(int, input().split())
room = []

for _ in range(N):
    room.append(list(input()))

num = 0

def setWE():
    global num
    canPut = True
    
    for i in range(N):
        for j in range(M - D + 1):
            canPut = True
            
            for k in range(D):
                if room[i][j + k] == '#':
                    canPut = False
                    break
            
            if canPut == True:
                num += 1

def setNS():
    global num
    canPut = True
    
    for i in range(M):
        for j in range(N - D + 1):
            canPut = True
            
            for k in range(D):
                if room[j + k][i] == '#':
                    canPut = False
                    break
            
            if canPut == True:
                num += 1

def inputRoom():
    global room
    for i in range(N):
        room.append(list(input()))

inputRoom()

if M >= D:
    setWE()

if N >= D:
    setNS()

print(num)","N, M, D = map(int, input().split())
room = []

num = 0

def setWE():
    global num
    canPut = True
    
    for i in range(N):
        for j in range(M - D + 1):
            canPut = True
            
            for k in range(D):
                if room[i][j + k] == '#':
                    canPut = False
                    break
            
            if canPut == True:
                num += 1

def setNS():
    global num
    canPut = True
    
    for i in range(M):
        for j in range(N - D + 1):
            canPut = True
            
            for k in range(D):
                if room[j + k][i] == '#':
                    canPut = False
                    break
            
            if canPut == True:
                num += 1

def inputRoom():
    global room
    for i in range(N):
        room.append(list(input()))

inputRoom()

if M >= D:
    setWE()

if N >= D:
    setNS()

print(num)"
ChatGPT,codenet,Java,Python,s967858671.py,"Num = []
for i in range(10):
    Num.append(int(input()))

for a in range(9, 0, -1):
    for b in range(a):
        if Num[b] < Num[b+1]:
            Num[10] = Num[b]
            Num[b] = Num[b+1]
            Num[b+1] = Num[10]

print(Num[0])
print(Num[1])
print(Num[2])","Num = []
for i in range(10):
    Num.append(int(input()))
Num.append(0)

for a in range(9, 0, -1):
    for b in range(a):
        if Num[b] < Num[b+1]:
            Num[10] = Num[b]
            Num[b] = Num[b+1]
            Num[b+1] = Num[10]

print(Num[0])
print(Num[1])
print(Num[2])"
ChatGPT,codenet,Java,Python,s824230885.py,"CONVSTR = {8: "" "", 9: ""\n"", 0: """"}
inputLine = []
index = 0
read = ''

def hasNext():
    return index < len(inputLine)

def next():
    global index
    if hasNext():
        index += 1
        return inputLine[index-1]
    else:
        raise IndexError(""There is no more input"")

def nextInt():
    return int(next())

def nextStrArray():
    return next().split()

def nextIntArray():
    return list(map(int, nextStrArray()))

N = nextInt()
list = nextIntArray()
max = 0
output = 0

for i in range(N):
    if max <= list[i]:
        max = list[i]
        output += 1

print(output)","CONVSTR = {8: "" "", 9: ""\n"", 0: """"}
inputLine = []
index = 0
read = ''

def hasNext():
    return index < len(inputLine)

def next():
    global index
    if hasNext():
        index += 1
        return inputLine[index-1]
    else:
        raise IndexError(""There is no more input"")

def nextInt():
    return int(next())

def nextStrArray():
    return next().split()

def nextIntArray():
    return list(map(int, input().split()))

N = int(input())
list = nextIntArray()
max = 0
output = 0

for i in range(N):
    if max <= list[i]:
        max = list[i]
        output += 1

print(output)"
ChatGPT,codenet,Java,Python,s063482767.py,"import heapq

n = int(input())
queue = []

for i in range(n):
    heapq.heappush(queue, int(input()))

sum = 0

for i in range(n - 1):
    sum += heapq.heappop(queue)

print(""Yes"" if heapq.heappop(queue) < sum else ""No"")","import heapq

n = int(input())
queue = []

inputs = list(input().split())
for i in range(n):
    heapq.heappush(queue, int(inputs[i]))

sum = 0

for i in range(n - 1):
    sum += heapq.heappop(queue)

print(""Yes"" if heapq.heappop(queue) < sum else ""No"")"
ChatGPT,codenet,Java,Python,s684030429.py,"# Python program For handling Input/Output 
import sys 
import math 

class Main:
    def __init__(self):
        self.max = 0
        self.cur = 0

    # actual logic
    def solve(self):
        a = int(input())
        b = int(input())

        print(max(0, a-2*b))

    # main method
    def main(self):
        self.solve()

    # Utility methods
    # input an integer from input()
    def ni(self):
        a = int(input())
        return a

    # input a long from input()
    def nl(self):
        return int(input())

    # input a float from input()
    def nf(self):
        a = float(input())
        return a

    # input a double from input()
    def nd(self):
        a = float(input())
        return a

    # input a sentence from input()
    def ns(self):
        return input()

    # converts a string to a list of strings
    def nst(self, s):
        return s.split()

    # input an integer array
    def ia(self, a):
        a = list(map(int, input().split()))

    # input a long array
    def la(self, a):
        a = list(map(int, input().split()))

    # input a float array
    def fa(self, a):
        a = list(map(float, input().split()))

    # input a double array
    def da(self, a):
        a = list(map(float, input().split()))

    # input a string array either with all empty input or from input()
    def sa(self, a, empty):
        if empty:
            for i in range(len(a)):
                a[i] = """"
        else:
            for i in range(len(a)):
                a[i] = input()

    # input a two-dimensional integer array
    def ida(self, a, n, m):
        for i in range(n):
            for j in range(m):
                a[i][j] = int(input())

    # input a two-dimensional long array
    def lda(self, a, n, m):
        for i in range(n):
            for j in range(m):
                a[i][j] = int(input())

    # input a two-dimensional double array
    def dda(self, a, n, m):
        for i in range(n):
            for j in range(m):
                a[i][j] = float(input())

    # convert string to integer
    def stoi(self, s):
        return int(s)

    # convert string to double
    def stod(self, s):
        return float(s)

    # find minimum in a long array
    def lmin(self, a):
        return min(a)

    # find minimum in an integer array
    def imin(self, a):
        return min(a)

    # find maximum in a long array
    def lmax(self, a):
        return max(a)

    # find maximum in an integer array
    def imax(self, a):
        return max(a)

    # check whether an element is present in an integer array
    def ibs(self, a, toFind):
        return toFind in a

    # check whether an element is present in a long array
    def lbs(self, a, toFind):
        return toFind in a

    def stb(self, s):
        sum = 0
        k = 0
        for i in range(len(s) - 1, -1, -1):
            sum += int(s[i]) * math.pow(2, k)
            k += 1
        return sum

if __name__ == ""__main__"":
    main = Main()
    main.main()","# Python program For handling Input/Output 
import sys 
import math 

class Main:
    def __init__(self):
        self.max = 0
        self.cur = 0

    # actual logic
    def solve(self):
        a, b = map(int, input().split())

        print(max(0, a-2*b))

    # main method
    def main(self):
        self.solve()

    # Utility methods
    # input an integer from input()
    def ni(self):
        a = int(input())
        return a

    # input a long from input()
    def nl(self):
        return int(input())

    # input a float from input()
    def nf(self):
        a = float(input())
        return a

    # input a double from input()
    def nd(self):
        a = float(input())
        return a

    # input a sentence from input()
    def ns(self):
        return input()

    # converts a string to a list of strings
    def nst(self, s):
        return s.split()

    # input an integer array
    def ia(self, a):
        a = list(map(int, input().split()))

    # input a long array
    def la(self, a):
        a = list(map(int, input().split()))

    # input a float array
    def fa(self, a):
        a = list(map(float, input().split()))

    # input a double array
    def da(self, a):
        a = list(map(float, input().split()))

    # input a string array either with all empty input or from input()
    def sa(self, a, empty):
        if empty:
            for i in range(len(a)):
                a[i] = """"
        else:
            for i in range(len(a)):
                a[i] = input()

    # input a two-dimensional integer array
    def ida(self, a, n, m):
        for i in range(n):
            for j in range(m):
                a[i][j] = int(input())

    # input a two-dimensional long array
    def lda(self, a, n, m):
        for i in range(n):
            for j in range(m):
                a[i][j] = int(input())

    # input a two-dimensional double array
    def dda(self, a, n, m):
        for i in range(n):
            for j in range(m):
                a[i][j] = float(input())

    # convert string to integer
    def stoi(self, s):
        return int(s)

    # convert string to double
    def stod(self, s):
        return float(s)

    # find minimum in a long array
    def lmin(self, a):
        return min(a)

    # find minimum in an integer array
    def imin(self, a):
        return min(a)

    # find maximum in a long array
    def lmax(self, a):
        return max(a)

    # find maximum in an integer array
    def imax(self, a):
        return max(a)

    # check whether an element is present in an integer array
    def ibs(self, a, toFind):
        return toFind in a

    # check whether an element is present in a long array
    def lbs(self, a, toFind):
        return toFind in a

    def stb(self, s):
        sum = 0
        k = 0
        for i in range(len(s) - 1, -1, -1):
            sum += int(s[i]) * math.pow(2, k)
            k += 1
        return sum

if __name__ == ""__main__"":
    main = Main()
    main.main()"
ChatGPT,codenet,Java,Python,s739337307.py,"# Python code equivalent to the given Java code

import sys

n, m = map(int, input().split())
map = {}
countAc = 0
countWaAll = 0

for i in range(m):
    question, waOrAc = map(str, input().split())
    question = int(question)

    if question not in map:
        if waOrAc == ""WA"":
            map[question] = 1
        else:
            map[question] = -1
            countAc += 1
    else:
        countWa = map[question]
        if countWa < 0:
            continue
        else:
            if waOrAc == ""WA"":
                map[question] += 1
            else:
                map[question] = -countWa
                countAc += 1
                countWaAll += countWa

print(countAc, countWaAll)","# Python code equivalent to the given Java code

import sys

n, m = map(int, input().split())
maps = {}
countAc = 0
countWaAll = 0

for i in range(m):
    question, waOrAc = input().split()
    question = int(question)

    if question not in maps:
        if waOrAc == ""WA"":
            maps[question] = 1
        else:
            maps[question] = -1
            countAc += 1
    else:
        countWa = maps[question]
        if countWa < 0:
            continue
        else:
            if waOrAc == ""WA"":
                maps[question] += 1
            else:
                maps[question] = -countWa
                countAc += 1
                countWaAll += countWa

print(countAc, countWaAll)"
ChatGPT,codenet,Java,Python,s798589501.py,"E = int(input())
Y = int(input())

if E == 0:
    if Y <= 1911:
        print(""M"", Y - 1867)
    elif Y <= 1925:
        print(""T"", Y - 1911)
    elif Y <= 1988:
        print(""S"", Y - 1925)
    else:
        print(""H"", Y - 1988)
elif E == 1:
    print(1867 + Y)
elif E == 2:
    print(1911 + Y)
elif E == 3:
    print(1925 + Y)
else:
    print(1988 + Y)","E, Y = map(int, input().split())

if E == 0:
    if Y <= 1911:
        print(f""M{Y - 1867}"")
    elif Y <= 1925:
        print(f""T{Y - 1911}"")
    elif Y <= 1988:
        print(f""S{Y - 1925}"")
    else:
        print(f""H{Y - 1988}"")
elif E == 1:
    print(1867 + Y)
elif E == 2:
    print(1911 + Y)
elif E == 3:
    print(1925 + Y)
else:
    print(1988 + Y)"
ChatGPT,codenet,Java,Python,s629237879.py,"import sys

n = int(input())
str = []
for i in range(n):
    str.append(input())

mark = [""S"", ""H"", ""C"", ""D""]
for ma in mark:
    for i in range(1, 14):
        s = str(i)
        st = ma + "" "" + s
        if st in str:
            continue
        else:
            print(st)","import sys

n = int(input())
strs = []
for i in range(n):
    strs.append(input())

mark = [""S"", ""H"", ""C"", ""D""]
for ma in mark:
    for i in range(1, 14):
        s = str(i)
        st = ma + "" "" + s
        if st in strs:
            continue
        else:
            print(st)"
ChatGPT,codenet,Java,Python,s443066739.py,"n = int(input())
pre = [0] * (n+1)

for i in range(1, n+1):
    pre[i] = pre[i-1] + int(input())

min_val = float('inf')

for i in range(1, n):
    val1 = pre[i]
    val2 = pre[n] - pre[i]
    
    min_val = min(min_val, abs(val1 - val2))

print(min_val)","n = int(input())
pre = [0] * (n+1)

inputs = list(input().split())
for i in range(1, n+1):
    pre[i] = pre[i-1] + int(inputs[i - 1])

min_val = float('inf')

for i in range(1, n):
    val1 = pre[i]
    val2 = pre[n] - pre[i]
    
    min_val = min(min_val, abs(val1 - val2))

print(min_val)"
ChatGPT,codenet,Java,Python,s000087391.py,"result = []
while True:
    n = int(input())
    if n == 0:
        break
    line = input()
    array2 = line.split("" "")
    input = [int(x) for x in array2]
    sum = 0
    for i in range(n):
        sum += input[i]
    avg = sum / n
    num = 0
    for i in range(n):
        if input[i] <= avg:
            num += 1
    result.append(num)

for i in range(len(result)):
    if result[i] == -1:
        print(""NONE"")
    else:
        print(result[i])","result = []
while True:
    n = int(input())
    if n == 0:
        break
    line = input()
    array2 = line.split("" "")
    inputs = [int(x) for x in array2]
    sum = 0
    for i in range(n):
        sum += inputs[i]
    avg = sum / n
    num = 0
    for i in range(n):
        if inputs[i] <= avg:
            num += 1
    result.append(num)

for i in range(len(result)):
    if result[i] == -1:
        print(""NONE"")
    else:
        print(result[i])"
ChatGPT,codenet,Java,Python,s725559666.py,"a = int(input())
b = int(input())
c = int(input())

if a < b and b < c and a < c:
    print(""Yes"")
else:
    print(""No"")","a, b, c = map(int, input().split())

if a < b and b < c and a < c:
    print(""Yes"")
else:
    print(""No"")"
ChatGPT,codenet,Java,Python,s010698290.py,"#####################################################
#                                                   #
#  For her who keeps the fire kindling in me...  #
#                                                   #
#####################################################

import sys

def main():
    n, m = map(int, sys.stdin.readline().strip().split())

    penal = [0] * (n+1)
    solved = [False] * (n+1)

    for _ in range(m):
        num, str = sys.stdin.readline().strip().split()
        num = int(num)
        if str == 'A':
            solved[num] = True
        elif not solved[num]:
            penal[num] += 1

    correct_ans = 0
    num_penal = 0
    for i in range(1, n+1):
        if solved[i]:
            correct_ans += 1
            num_penal += penal[i]

    print(correct_ans, num_penal)

if __name__ == ""__main__"":
    main()","#####################################################
#                                                   #
#  For her who keeps the fire kindling in me...  #
#                                                   #
#####################################################

import sys

def main():
    n, m = map(int, sys.stdin.readline().strip().split())

    penal = [0] * (n+1)
    solved = [False] * (n+1)

    for _ in range(m):
        num, str = sys.stdin.readline().strip().split()
        num = int(num)
        if str == 'A':
            solved[num] = True
        elif not solved[num]:
            penal[num] += 1

    correct_ans = 0
    num_penal = 0
    for i in range(1, n+1):
        if solved[i]:
            correct_ans += 1
            num_penal += penal[i]

    print(correct_ans, num_penal)

if __name__ == ""__main__"":
    main()"
ChatGPT,codenet,Java,Python,s125837071.py,"def main():
    n = int(input())
    ans = 1
    mod = 10**9 + 7
    for i in range(2, n + 1):
        for j in range(2, i + 1):
            if i % j == 0:
                break
        else:
            s = 0
            for k in range(1, n + 1):
                s += find_s(k, i)
            ans = (ans * (s + 1)) % mod
    print(ans)

def find_s(k, i):
    s = 0
    while k % i == 0:
        s += 1
        k //= i
    return s

if __name__ == ""__main__"":
    main()","def main():
    n = int(input())
    ans = 1
    mod = 10**9 + 7
    for i in range(2, n + 1):
        for j in range(2, i + 1):
            if not ((i % j != 0 and j < i) or j == i): break 
            if i == j:
                s = 0
                for k in range(1, n + 1):
                    s += find_s(k, i)
                ans = (ans * (s + 1)) % mod
    print(ans)
    
   

def find_s(k, i):
    s = 0
    while k % i == 0:
        s += 1
        k //= i
    return s

if __name__ == ""__main__"":
    main()"
CodeGen,codenet,C++,Python,s598010898.py,"#!/usr/bin/python
import sys
import math
import operator
import string
import re
import collections

n = int(sys.argv[1])
a = [int(i) for i in sys.argv[2:]]
b = [int(i) for i in sys.argv[3:]]

sum = 0
for i in range(n):
    if a[i] - b[i] > 0:
        sum += a[i] - b[i]

print sum","#!/usr/bin/python
import sys
import math
import operator
import string
import re
import collections

n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

sum = 0
for i in range(n):
    if a[i] - b[i] > 0:
        sum += a[i] - b[i]

print(sum)"
CodeGen,codenet,C++,Python,s837925207.py,"def main():
    x = int(raw_input())
    ans = x + x*x + x*x*x
    print ans

if __name__ == '__main__':
    main()","def main():
    x = int(input())
    ans = x + x*x + x*x*x
    print(ans)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s672953945.py,"def main():
    N,L = map(int,raw_input().split())
    v = map(str,raw_input().split())
    v.sort()
    for i in range(N):
        print v[i]
    print

if __name__ == '__main__':
    main()","def main():
    N,L = map(int,input().split())
    v = []
    for i in range(N):
        v.append(input())
    v.sort()

    for i in range(N):
        print(v[i], end="""")
    print

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s323607209.py,"def main():
    n,k = map(int,raw_input().split())
    if k%2==0:
        for i in xrange(1,n+1):
            if i%k==k/2:
                l+=1
            else:
                r+=1
        print l*l*l+r*r*r
    else:
        for i in xrange(1,n+1):
            if i%k==0:
                r+=1
        print r*r*r

if __name__ == '__main__':
    main()","def main():
    l,r = 0,0
    n,k = map(int,input().split())
    if k%2==0:
        for i in range(1,n+1):
            if i%k==k/2:
                l+=1
            else:
                r+=1
        print(l*l*l+r*r*r)
    else:
        for i in range(1,n+1):
            if i%k==0:
                r+=1
        print(r*r*r)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s950360470.py,"def mod_nCk(n, k, mod):
    if n == 0 or k == 0:
        return 1
    p = 1
    q = 1
    for i in range(n - k + 1, n + 1):
        p = (p * i) % mod
    for i in range(2, k + 1):
        q = (q * i) % mod
    q = mod_inv(q, mod)
    return (p * q) % mod

def mod_inv(a, mod):
    if a == 0:
        return 0
    return mod_pow(a, mod - 2, mod)

def mod_pow(a, n, mod):
    if n == 0:
        return 1
    if n == 1:
        return a
    if n % 2 == 0:
        return mod_pow(a, n / 2, mod) * mod_pow(a, n / 2, mod) % mod
    else:
        return mod_pow(a, n / 2, mod) * mod_pow(a, n / 2, mod) * a % mod

n = int(raw_input())
k = int(raw_input())
mod = int(raw_input())
print mod_nCk(k, n, mod)","def mod_nCk(n, k, mod):
    if n == 0 or k == 0:
        return 1
    p = 1
    q = 1
    for i in range(n - k + 1, n + 1):
        p = (p * i) % mod
    for i in range(2, k + 1):
        q = (q * i) % mod
    q = mod_inv(q, mod)
    return (p * q) % mod

def mod_inv(a, mod):
    if a == 0:
        return 0
    return mod_pow(a, mod - 2, mod)

def mod_pow(a, n, mod):
    if n == 0:
        return 1
    if n == 1:
        return a
    if n % 2 == 0:
        return mod_pow(a, n / 2, mod) * mod_pow(a, n / 2, mod) % mod
    else:
        return mod_pow(a, n / 2, mod) * mod_pow(a, n / 2, mod) * a % mod

n, k = map(int, input().split())
mod = 998244353
print(mod_nCk(k, n, mod))"
CodeGen,codenet,C++,Python,s338629964.py,"#!/usr/bin/python

import sys

def init():
    global fact
    global revfact
    global rev
    fact = [1]
    revfact = [1]
    rev = [0]
    for i in range(1, 1100000):
        fact.append(fact[i-1] * i % 1000000007)
        if i > 1:
            rev.append(1000000007 / i * (1000000007 - rev[i % 1000000007]) % 1000000007)
        revfact.append(revfact[i-1] * rev[i] % 1000000007)

def nCk(n, k):
    if n < k:
        return 0
    if comb[n][k]!= 0:
        return comb[n][k]
    return comb[n][k] = fact[n] * revfact[n-k] % 1000000007 * revfact[k] % 1000000007

def mod_pow(x, a, m = 1000000007):
    if a == 0:
        return 1
    if a % 2 == 0:
        return mod_pow(x, a / 2, m) * mod_pow(x, a / 2, m) % m
    return mod_pow(x, a / 2, m) * mod_pow(x, a / 2, m) * x % m

def inv(x, m = 1000000007):
    return mod_pow(x, m-2, m)

def aall, ball:
    global fact
    global revfact
    global rev
    aall = 0
    ball = 0
    for i in range(1, len(sys.argv)):
        aall += int(sys.argv[i])
        ball += int(sys.argv[i+1])
    return aall, ball

def dp(n, asum, cnt, p, p1):
    global fact
    global revfact
    global rev
    global comb
    if asum < 0 or cnt < 0 or p < 0 or p1 < 0:
        return 0
    if asum == 0 and cnt == 0 and p == 0 and p1 == 0:
        return 1
    if comb[n][cnt]!= 0:
        return comb[n][cnt]
    return comb[n][cnt] = dp(n-1, asum, cnt, p, p1) + dp(n-1, asum-a[n-1], cnt, p^1, p1) * nCk(cnt, b[n-1]-1) * rev[asum] * revfact[asum] * inv(a[n-1]) % 1000000007 * inv(a[n-1]) % 1000000007

def main():
    init()
    n, asum, cnt, p, p1 = map(int, sys.argv[1:])
    ans = dp(n, asum, cnt, p, p1)
    if ans < 0:
        ans += 1000000007
    print ans

if __name__ == '__main__':
    main()","#!/usr/bin/python

import sys

def init():
    global fact
    global revfact
    global rev
    fact = [1]
    revfact = [1]
    rev = [0]
    for i in range(1, 1100000):
        fact.append(fact[i-1] * i % 1000000007)
        if i > 1:
            rev.append(1000000007 / i * (1000000007 - rev[i % 1000000007]) % 1000000007)
        revfact.append(revfact[i-1] * rev[i] % 1000000007)

def nCk(n, k):
    if n < k:
        return 0
    if comb[n][k]!= 0:
        return comb[n][k]
    return comb[n][k] = fact[n] * revfact[n-k] % 1000000007 * revfact[k] % 1000000007

def mod_pow(x, a, m = 1000000007):
    if a == 0:
        return 1
    if a % 2 == 0:
        return mod_pow(x, a / 2, m) * mod_pow(x, a / 2, m) % m
    return mod_pow(x, a / 2, m) * mod_pow(x, a / 2, m) * x % m

def inv(x, m = 1000000007):
    return mod_pow(x, m-2, m)

def aall, ball:
    global fact
    global revfact
    global rev
    aall = 0
    ball = 0
    for i in range(1, len(sys.argv)):
        aall += int(sys.argv[i])
        ball += int(sys.argv[i+1])
    return aall, ball

def dp(n, asum, cnt, p, p1):
    global fact
    global revfact
    global rev
    global comb
    if asum < 0 or cnt < 0 or p < 0 or p1 < 0:
        return 0
    if asum == 0 and cnt == 0 and p == 0 and p1 == 0:
        return 1
    if comb[n][cnt]!= 0:
        return comb[n][cnt]
    return comb[n][cnt] = dp(n-1, asum, cnt, p, p1) + dp(n-1, asum-a[n-1], cnt, p^1, p1) * nCk(cnt, b[n-1]-1) * rev[asum] * revfact[asum] * inv(a[n-1]) % 1000000007 * inv(a[n-1]) % 1000000007

def main():
    init()
    n, asum, cnt, p, p1 = map(int, sys.argv[1:])
    ans = dp(n, asum, cnt, p, p1)
    if ans < 0:
        ans += 1000000007
    print ans

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s612033342.py,"def count(hw, a, b):
  sum = 0
  for i in range(len(hw)):
    for j in range(len(hw[0])):
      if a >> i & 1 and b >> j & 1 and hw[i][j] == 1:
        sum += 1
  return sum

def pow2(a):
  ret = 1
  for i in range(a):
    ret *= 2
  return ret

def main():
  h, w, k = map(int, raw_input().split())
  hw = [[0 for _ in range(w)] for _ in range(h)]
  for i in range(h):
    for j in range(w):
      hw[i][j] = raw_input() == '#'
  sum = 0
  for i in range(pow2(h)):
    for j in range(pow2(w)):
      if count(hw, i, j) == k:
        sum += 1
  print sum

if __name__ == '__main__':
  main()","def count(hw, a, b):
  sum = 0
  for i in range(len(hw)):
    for j in range(len(hw[0])):
      if a >> i & 1 and b >> j & 1 and hw[i][j] == 1:
        sum += 1
  return sum

def pow2(a):
  ret = 1
  for i in range(a):
    ret *= 2
  return ret

def main():
  h, w, k = map(int, input().split())
  hw = [[0 for _ in range(w)] for _ in range(h)]
  for i in range(h):
    for j in range(w):
      if input == '#':
        hw[i][j] = 1
  sum = 0
  for i in range(pow2(h)):
    for j in range(pow2(w)):
      if count(hw, i, j) == k:
        sum += 1
  print(sum)
  
if __name__ == '__main__':
  main()"
CodeGen,codenet,C++,Python,s669128523.py,"#!/usr/bin/python

import sys

# N is the number of vertices in the graph
N = 100

# M[i][j] is true if there is a directed edge from vertex i to vertex j
M = [[0] * N for i in range(N)]

# n is the number of vertices in the graph
n = int(sys.argv[1])

# color[i] is the color of vertex i
color = [WHITE] * N

# d[i] is the depth-first search number of vertex i
d = [0] * N

# f[i] is the finish number of vertex i
f = [0] * N

# tt is the depth-first search number
tt = 0

# dfs_visit(u) is called when vertex u is first visited
def dfs_visit(u):
	global tt
	global color
	global d
	global f
	global n
	
	# Mark the current vertex as GRAY
	color[u] = GRAY
	
	# d[u] is the depth-first search number of vertex u
	d[u] = tt
	
	# For each adjacent vertex v
	for v in range(n):
		if M[u][v] == 1 and color[v] == WHITE:
			# Recursively dfs_visit(v)
			dfs_visit(v)
	
	# Mark the current vertex as BLACK
	color[u] = BLACK
	
	# f[u] is the finish number of vertex u
	f[u] = tt
	
	# Increment the depth-first search number
	tt += 1
	
# dfs() is called to perform depth-first search
def dfs():
	global tt
	global color
	global d
	global f
	global n
	
	# For each vertex u in graph
	for u in range(n):
		if color[u] == WHITE:
			# Recursively dfs_visit(u)
			dfs_visit(u)
	
	# Print the depth-first search number
	for u in range(n):
		print u + 1, d[u], f[u]
	
# Driver program to test above functions
def main():
	# Read the number of vertices n
	n = int(sys.argv[1])
	
	# Fill the adjacency matrix M
	for i in range(n):
		for j in range(n):
			M[i][j] = 0
	
	# Fill the adjacency matrix M
	for i in range(n):
		for j in range(n):
			M[i][j] = 0
	
	# Read the graph and create the adjacency matrix
	for i in range(n):
		for j in range(n):
			u = int(sys.argv[2 + i])
			v = int(sys.argv[3 + i])
			M[u - 1][v - 1] = 1
	
	# Call the dfs() function to perform depth-first search
	dfs()

# Call the main function
main()","#!/usr/bin/python

import sys

# N is the number of vertices in the graph
N = 100

# M[i][j] is true if there is a directed edge from vertex i to vertex j
M = [[0] * N for i in range(N)]

# n is the number of vertices in the graph
n = int(sys.argv[1])

# color[i] is the color of vertex i
color = [WHITE] * N

# d[i] is the depth-first search number of vertex i
d = [0] * N

# f[i] is the finish number of vertex i
f = [0] * N

# tt is the depth-first search number
tt = 0

# dfs_visit(u) is called when vertex u is first visited
def dfs_visit(u):
	global tt
	global color
	global d
	global f
	global n
	
	# Mark the current vertex as GRAY
	color[u] = GRAY
	
	# d[u] is the depth-first search number of vertex u
	d[u] = tt
	
	# For each adjacent vertex v
	for v in range(n):
		if M[u][v] == 1 and color[v] == WHITE:
			# Recursively dfs_visit(v)
			dfs_visit(v)
	
	# Mark the current vertex as BLACK
	color[u] = BLACK
	
	# f[u] is the finish number of vertex u
	f[u] = tt
	
	# Increment the depth-first search number
	tt += 1
	
# dfs() is called to perform depth-first search
def dfs():
	global tt
	global color
	global d
	global f
	global n
	
	# For each vertex u in graph
	for u in range(n):
		if color[u] == WHITE:
			# Recursively dfs_visit(u)
			dfs_visit(u)
	
	# Print the depth-first search number
	for u in range(n):
		print u + 1, d[u], f[u]
	
# Driver program to test above functions
def main():
	# Read the number of vertices n
	n = int(sys.argv[1])
	
	# Fill the adjacency matrix M
	for i in range(n):
		for j in range(n):
			M[i][j] = 0
	
	# Fill the adjacency matrix M
	for i in range(n):
		for j in range(n):
			M[i][j] = 0
	
	# Read the graph and create the adjacency matrix
	for i in range(n):
		for j in range(n):
			u = int(sys.argv[2 + i])
			v = int(sys.argv[3 + i])
			M[u - 1][v - 1] = 1
	
	# Call the dfs() function to perform depth-first search
	dfs()

# Call the main function
main()"
CodeGen,codenet,C++,Python,s968402497.py,"#!/usr/bin/python
# -*- coding: utf-8 -*-

# Author: Zeyuan Shang
# Date: 2016/01/04

# Implement a basic calculator to evaluate a simple expression string.
# The expression string contains only non-negative integers, +, -, *, /
# operators and empty spaces. The integer division should truncate toward zero.
# You may assume that the given expression is always valid.
# Some examples:
# ""3+2*2"" = 7
# "" 3/2 "" = 1
# "" 3+5 / 2 "" = 5
# Note: Do not use the eval built-in library function.

# score:100(0ms)
class Solution {
    public:
        int calculate(string s) {
            stack<int> stk;
            int res = 0;
            for(int i = 0; i < s.size(); i++) {
                if(s[i] =='') continue;
                if(s[i] >= '0' && s[i] <= '9') {
                    int num = s[i] - '0';
                    while(i < s.size() && s[i] >= '0' && s[i] <= '9') {
                        num = num * 10 + s[i] - '0';
                        i++;
                    }
                    stk.push(num);
                } else {
                    int num1 = stk.top();
                    stk.pop();
                    int num2 = stk.top();
                    stk.pop();
                    if(s[i] == '+') res += num1 + num2;
                    else if(s[i] == '-') res += num1 - num2;
                    else if(s[i] == '*') res += num1 * num2;
                    else if(s[i] == '/') res += num1 / num2;
                }
            }
            return res;
        }
};

# score:100(0ms)
class Solution {
    public:
        int calculate(string s) {
            stack<int> stk;
            int res = 0;
            for(int i = 0; i < s.size(); i++) {
                if(s[i] =='') continue;
                if(s[i] >= '0' && s[i] <= '9') {
                    int num = s[i] - '0';
                    while(i < s.size() && s[i] >= '0' && s[i] <= '9') {
                        num = num * 10 + s[i] - '0';
                        i++;
                    }
                    stk.push(num);
                } else {
                    int num1 = stk.top();
                    stk.pop();
                    int num2 = stk.top();
                    stk.pop();
                    if(s[i] == '+') res += num1 + num2;
                    else if(s[i] == '-') res += num1 - num2;
                    else if(s[i] == '*') res += num1 * num2;
                    else if(s[i] == '/') res += num1 / num2;
                }
            }
            return res;
        }
};

# score:100(0ms)
class Solution {
    public:
        int calculate(string s) {
            stack<int> stk;
            int res = 0;
            for(int i = 0; i < s.size(); i++) {
                if(s[i] =='') continue;
                if(s[i] >= '0' && s[i] <= '9') {
                    int num = s[i] - '0';
                    while(i < s.size() && s[i] >= '0' && s[i] <= '9') {
                        num = num * 10 + s[i] - '0';
                        i++;
                    }
                    stk.push(num);
                } else {
                    int num1 = stk.top();
                    stk.pop();
                    int num2 = stk.top();
                    stk.pop();
                    if(s[i] == '+') res += num1 + num2;
                    else if(s[i] == '-') res += num1 - num2;
                    else if(s[i] == '*') res += num1 * num2;
                    else if(s[i] == '/') res += num1 / num2;
                }
            }
            return res;
        }
};

# score:100(0ms)
class Solution {
    public:
        int calculate(string s) {
            stack<int> stk;
            int res = 0;
            for(int i = 0; i < s.size(); i++) {
                if(s[i] =='') continue;
                if(s[i] >= '0' && s[i] <= '9') {
                    int num = s[i] - '0';
                    while(i < s.size() && s[i] >= '0' && s[i] <= '9') {
                        num = num * 10 + s[i] - '0';
                        i++;
                    }
                    stk.push(num);
                } else {
                    int num1 = stk.top();
                    stk.pop();
                    int num2 = stk.top();
                    stk.pop();
                    if(s[i] == '+') res += num1 + num2;
                    else if(s[i] == '-') res += num1 - num2;
                    else if(s[i] == '*') res += num1 * num2;
                    else if(s[i] == '/') res += num1 / num2;
                }
            }
            return res;
        }
};

# score:100(0ms)
class Solution {
    public:
        int calculate(string s) {
            stack<int> stk;
            int res = 0;
            for(int i = 0; i < s.size(); i++) {
                if(s[i] =='') continue;
                if(s[i] >= '0' && s[i] <= '9') {
                    int num = s[i] - '0';
                    while(i < s.size() && s[i","#!/usr/bin/python
# -*- coding: utf-8 -*-

# Author: Zeyuan Shang
# Date: 2016/01/04

# Implement a basic calculator to evaluate a simple expression string.
# The expression string contains only non-negative integers, +, -, *, /
# operators and empty spaces. The integer division should truncate toward zero.
# You may assume that the given expression is always valid.
# Some examples:
# ""3+2*2"" = 7
# "" 3/2 "" = 1
# "" 3+5 / 2 "" = 5
# Note: Do not use the eval built-in library function.

# score:100(0ms)
class Solution {
    public:
        int calculate(string s) {
            stack<int> stk;
            int res = 0;
            for(int i = 0; i < s.size(); i++) {
                if(s[i] =='') continue;
                if(s[i] >= '0' && s[i] <= '9') {
                    int num = s[i] - '0';
                    while(i < s.size() && s[i] >= '0' && s[i] <= '9') {
                        num = num * 10 + s[i] - '0';
                        i++;
                    }
                    stk.push(num);
                } else {
                    int num1 = stk.top();
                    stk.pop();
                    int num2 = stk.top();
                    stk.pop();
                    if(s[i] == '+') res += num1 + num2;
                    else if(s[i] == '-') res += num1 - num2;
                    else if(s[i] == '*') res += num1 * num2;
                    else if(s[i] == '/') res += num1 / num2;
                }
            }
            return res;
        }
};

# score:100(0ms)
class Solution {
    public:
        int calculate(string s) {
            stack<int> stk;
            int res = 0;
            for(int i = 0; i < s.size(); i++) {
                if(s[i] =='') continue;
                if(s[i] >= '0' && s[i] <= '9') {
                    int num = s[i] - '0';
                    while(i < s.size() && s[i] >= '0' && s[i] <= '9') {
                        num = num * 10 + s[i] - '0';
                        i++;
                    }
                    stk.push(num);
                } else {
                    int num1 = stk.top();
                    stk.pop();
                    int num2 = stk.top();
                    stk.pop();
                    if(s[i] == '+') res += num1 + num2;
                    else if(s[i] == '-') res += num1 - num2;
                    else if(s[i] == '*') res += num1 * num2;
                    else if(s[i] == '/') res += num1 / num2;
                }
            }
            return res;
        }
};

# score:100(0ms)
class Solution {
    public:
        int calculate(string s) {
            stack<int> stk;
            int res = 0;
            for(int i = 0; i < s.size(); i++) {
                if(s[i] =='') continue;
                if(s[i] >= '0' && s[i] <= '9') {
                    int num = s[i] - '0';
                    while(i < s.size() && s[i] >= '0' && s[i] <= '9') {
                        num = num * 10 + s[i] - '0';
                        i++;
                    }
                    stk.push(num);
                } else {
                    int num1 = stk.top();
                    stk.pop();
                    int num2 = stk.top();
                    stk.pop();
                    if(s[i] == '+') res += num1 + num2;
                    else if(s[i] == '-') res += num1 - num2;
                    else if(s[i] == '*') res += num1 * num2;
                    else if(s[i] == '/') res += num1 / num2;
                }
            }
            return res;
        }
};

# score:100(0ms)
class Solution {
    public:
        int calculate(string s) {
            stack<int> stk;
            int res = 0;
            for(int i = 0; i < s.size(); i++) {
                if(s[i] =='') continue;
                if(s[i] >= '0' && s[i] <= '9') {
                    int num = s[i] - '0';
                    while(i < s.size() && s[i] >= '0' && s[i] <= '9') {
                        num = num * 10 + s[i] - '0';
                        i++;
                    }
                    stk.push(num);
                } else {
                    int num1 = stk.top();
                    stk.pop();
                    int num2 = stk.top();
                    stk.pop();
                    if(s[i] == '+') res += num1 + num2;
                    else if(s[i] == '-') res += num1 - num2;
                    else if(s[i] == '*') res += num1 * num2;
                    else if(s[i] == '/') res += num1 / num2;
                }
            }
            return res;
        }
};

# score:100(0ms)
class Solution {
    public:
        int calculate(string s) {
            stack<int> stk;
            int res = 0;
            for(int i = 0; i < s.size(); i++) {
                if(s[i] =='') continue;
                if(s[i] >= '0' && s[i] <= '9') {
                    int num = s[i] - '0';
                    while(i < s.size() && s[i"
CodeGen,codenet,C++,Python,s792884768.py,"#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys

class TSize:
    def __init__(self, r, c):
        self.r = r
        self.c = c

class TMcmSolver:
    def __init__(self, chain):
        self.FChain = chain
        self.FMemo = [[0 for i in range(len(chain))] for j in range(len(chain))]

    def Solve(self, s, l):
        assert(s <= l)
        if s == l:
            return 0
        if self.FMemo[s][l]!= 0:
            return self.FMemo[s][l]
        if s + 1 == l:
            self.FMemo[s][l] = self.FChain[s].r * self.FChain[l].c * self.FChain[l].c
        else:
            min = sys.maxint
            for i in range(s, l):
                c = self.Solve(s, i) + self.FChain[i+1].r * self.FChain[l].c * self.FChain[l].c + self.Solve(i+1, l)
                min = min if c < min else c
            self.FMemo[s][l] = min
        return self.FMemo[s][l]

    def Answer(self):
        return self.Solve(0, len(self.FChain) - 1)

if __name__ == '__main__':
    n = int(sys.stdin.readline())
    chain = []
    for i in range(n):
        r, c = map(int, sys.stdin.readline().split())
        chain.append(TSize(r, c))
    solver = TMcmSolver(chain)
    print solver.Answer()","#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys

class TSize:
    def __init__(self, r, c):
        self.r = r
        self.c = c

class TMcmSolver:
    def __init__(self, chain):
        self.FChain = chain
        self.FMemo = [[0 for i in range(len(chain))] for j in range(len(chain))]

    def Solve(self, s, l):
        assert(s <= l)
        if s == l:
            return 0
        if self.FMemo[s][l]!= 0:
            return self.FMemo[s][l]
        if s + 1 == l:
            self.FMemo[s][l] = self.FChain[s].r * self.FChain[l].c * self.FChain[l].c
        else:
            min = sys.maxint
            for i in range(s, l):
                c = self.Solve(s, i) + self.FChain[i+1].r * self.FChain[l].c * self.FChain[l].c + self.Solve(i+1, l)
                min = min if c < min else c
            self.FMemo[s][l] = min
        return self.FMemo[s][l]

    def Answer(self):
        return self.Solve(0, len(self.FChain) - 1)

if __name__ == '__main__':
    n = int(sys.stdin.readline())
    chain = []
    for i in range(n):
        r, c = map(int, sys.stdin.readline().split())
        chain.append(TSize(r, c))
    solver = TMcmSolver(chain)
    print solver.Answer()"
CodeGen,codenet,C++,Python,s634121896.py,e exceeded.,e exceeded.
CodeGen,codenet,C++,Python,s983388294.py,"#!/usr/bin/python
import sys

n = int(sys.argv[1])
a = [int(x) for x in sys.argv[2:]]

curr = 0
for i in range(n):
    if a[i] == curr + 1:
        curr += 1

if curr > 0:
    print n - curr
else:
    print -1","#!/usr/bin/python
import sys

n = int(input())
a = list(map(int, input().split()))

curr = 0
for i in range(n):
    if a[i] == curr + 1:
        curr += 1

if curr > 0:
    print(n - curr)
else:
    print(-1)"
CodeGen,codenet,C++,Python,s241624152.py,"def solve():
    a, b = map(int, raw_input().split())
    if a == 1 or b == 1:
        if a == 1 and b == 1:
            print ""Draw""
        elif a == 1:
            print ""Alice""
        else:
            print ""Bob""
    else:
        if a == b:
            print ""Draw""
        elif a > b:
            print ""Alice""
        else:
            print ""Bob""

if __name__ == ""__main__"":
    solve()","def solve():
    a, b = map(int, input().split())
    if a == 1 or b == 1:
        if a == 1 and b == 1:
            print(""Draw"")
        elif a == 1:
            print(""Alice"")
        else:
            print(""Bob"")
    else:
        if a == b:
            print(""Draw"")
        elif a > b:
            print(""Alice"")
        else:
            print(""Bob"")

if __name__ == ""__main__"":
    solve()"
CodeGen,codenet,C++,Python,s107204188.py,"#!/usr/bin/python

import sys

def main():
    n,t,f = map(int,sys.stdin.readline().split())
    A = map(int,sys.stdin.readline().split())
    
    for i in range(n):
        if A[i] < pow(10,9) + 1:
            if f == A[i] - minA:
                num += 1
            else:
                if f < A[i] - minA:
                    num = 1
                    f = A[i] - minA
                
    print num

if __name__ == '__main__':
    main()","#!/usr/bin/python

import sys

def main():
    minA = 10**9 + 1
    num = 0
    f = 0
    n, t = map(int, input().split())
    A = list(map(int, input().split()))

    for i in range(n):
        if minA > A[i]:
            minA = A[i]
        else:
            if f == A[i] - minA:
                num += 1
            elif f < A[i] - minA:
                num = 1
                f = A[i] - minA

    print(num)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s452437940.py,"def main():
    a,b,x=map(int,raw_input().split())
    s=(b/x-a/x)
    if a%x==0:
        s+=1
    print s

main()","def main():
    a,b,x=map(int,input().split())
    s=(b//x-a//x)
    if a%x==0:
        s+=1
    print(s)

main()"
CodeGen,codenet,C++,Python,s469969316.py,"def parse():
    c = ss[it]
    if '0' <= c and c <= '2': return c-'0'
    if c == '-': return Not(parse())
    x = parse()
    c = ss[it]
    y = parse()
    it += 1
    return c == '*' and And(x, y) or Or(x, y)

def main():
    while True:
        input = input()
        if input == ""."": break
        rep(i,3) a[i] = i
        cnt = 0
        rep(i,3) rep(j,3) rep(k,3) {
            a[0] = i
            a[1] = j
            a[2] = k
            ss = input
            for c in ss:
                if c == 'P': c = a[0]+'0'
                if c == 'Q': c = a[1]+'0'
                if c == 'R': c = a[2]+'0'
            it = 0
            if parse() == 2: cnt += 1
        }
        print(cnt)","def parse():
    c = ss[it]
    if '0' <= c and c <= '2': return c-'0'
    if c == '-': return Not(parse())
    x = parse()
    c = ss[it]
    y = parse()
    it += 1
    return c == '*' and And(x, y) or Or(x, y)

def main():
    while True:
        input = input()
        if input == ""."": break
        rep(i,3) a[i] = i
        cnt = 0
        rep(i,3) rep(j,3) rep(k,3) {
            a[0] = i
            a[1] = j
            a[2] = k
            ss = input
            for c in ss:
                if c == 'P': c = a[0]+'0'
                if c == 'Q': c = a[1]+'0'
                if c == 'R': c = a[2]+'0'
            it = 0
            if parse() == 2: cnt += 1
        }
        print(cnt)"
CodeGen,codenet,C++,Python,s448220316.py,"#!/usr/bin/python
import sys
n,m=map(int,raw_input().split())
fa={}
for i in range(1,n+1):
    fa[i]=i
for i in range(1,m+1):
    l,r,v=map(int,raw_input().split())
    li=get(l)
    ri=get(r)
    if li!=ri:
        v[ri]=v[r]-v[l]+v[l]
        fa[ri]=li
    else:
        if v[r]-v[l]!=v:
            print ""No""
            sys.exit(0)
print ""Yes""","#!/usr/bin/python
import sys
def get(x):
    if x == fa[x]:
        return x
    f = get(fa[x])
    v[x] += v[fa[x]]
    return f
n,m=map(int,input().split())
fa={}
for i in range(1,n+1):
    fa[i]=i
for i in range(1,m+1):
    l,r,v=map(int,input().split())
    li=get(l)
    ri=get(r)
    if li!=ri:
        v[ri]=v[r]-v[l]+v[l]
        fa[ri]=li
    else:
        if v[r]-v[l]!=v:
            print(""No"")
            sys.exit(0)
print(""Yes"")"
CodeGen,codenet,C++,Python,s495283729.py,"def main():
    s = raw_input()
    i = 0
    flag = 0
    while i < len(s):
        if i % 2 == 0:
            switch s[i]:
                case 'R':
                    break
                case 'U':
                    break
                case 'D':
                    break
                default:
                    flag = 1
                    break
        else:
            switch s[i]:
                case 'L':
                    break
                case 'U':
                    break
                case 'D':
                    break
                default:
                    flag = 1
                    break
        i += 1
    if flag == 0:
        print ""Yes""
    else:
        print ""No""

if __name__ == '__main__':
    main()","def main():
    s = input()
    i = 0
    flag = 0
    while i < len(s):
        if i % 2 == 0:
            if s[i] not in ['R', 'U', 'D']:
                flag = 1
        else:
            if s[i] not in ['L', 'U', 'D']:
                flag = 1
        i += 1
    if flag == 0:
        print(""Yes"")
    else:
        print(""No"")

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s300263829.py,"#!/usr/bin/python

import sys

a = int(raw_input())
b = int(raw_input())

print a*b","#!/usr/bin/python

import sys

a, b = map(int, input().split())

print(a*b)"
CodeGen,codenet,C++,Python,s798522572.py,"def main():
    N, T = map(int, raw_input().split())
    A = map(int, raw_input().split())
    B = [A[i] - min(A[i], A[i+1]) for i in range(1, N-1)]
    print count(B, *max(B))

if __name__ == '__main__':
    main()","def main():
    N, T = map(int, input().split())
    A = list(map(int, input().split()))
    B = [A[i] - min(A[i], A[i+1]) for i in range(1, N-1)]
    print(B.count(max(B)))

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s422352362.py,"#!/usr/bin/python
import sys
import math
import operator

def main():
    n = int(sys.argv[1])
    a = [int(i) for i in sys.stdin.readline().split()]
    pre = [0] * (n + 1)
    last = [0] * (n + 1)
    sumpre = 0
    for i in range(1, n + 1):
        sumpre += a[i]
        pre[i] = sumpre
    for i in range(n, 0, -1):
        sumlast += a[i]
        last[i] = sumlast
    d = (1 << 60)
    for i in range(1, n):
        d = min(d, abs(pre[i] - last[i + 1]))
    print d

if __name__ == '__main__':
    main()","#!/usr/bin/python
import sys
import math
import operator

def main():
    n = int(sys.stdin.readline())
    a = list(map(int, sys.stdin.readline().split()))
    pre = [0] * n
    last = [0] * n
    sumpre = 0
    sumlast = 0
    for i in range(n - 1):
        sumpre += a[i]
        pre[i] = sumpre
    for i in range(n - 1, 0, -1):
        sumlast += a[i]
        last[i] = sumlast
    d = float('inf')
    for i in range(n - 1):
        d = min(d, abs(pre[i] - last[i + 1]))
    print(d)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s447383972.py,"#!/usr/bin/python

import sys

n = int(raw_input())
a = [int(i) for i in raw_input().split()]
a.sort()
q = []
tot = 0
for i in range(1, n):
    if a[i] == a[i + 1]:
        q.append(a[i])
        i += 1
        tot += 1

print tot * tot - tot","#!/usr/bin/python

import sys

n = int(input())
a = list(map(int, input().split()))
a.sort()
q = []
tot = 0
i = 0
while i < n:
    if a[i] == a[i + 1]:
        q.append(a[i])
        i += 1
        tot += 1

print(tot * tot - tot)"
CodeGen,codenet,C++,Python,s783753345.py,"#!/usr/bin/python

import sys

a = int(raw_input())
S = raw_input()
b = int(raw_input())

if S == '+':
    print a + b

if S == '-':
    print a - b

if S == '*':
    print a * b

if S == '/':
    print a / b

if S == '?':
    break","#!/usr/bin/python

import sys

a, S, b = input().split()
a = int(a)
b = int(b)

if S == '+':
    print(a + b)
    
elif S == '-':
    print(a - b)
    
elif S == '*':
    print(a * b)
    
elif S == '/':
    print(a // b)
    
elif S == '?':
    break"
CodeGen,codenet,C++,Python,s814769071.py,"#!/usr/bin/python
# -*- coding: utf-8 -*-

# Python 2.7.3

import sys
import math

def main():
    n, k = map(int, raw_input().split())
    MOD = 10 ** 9 + 7
    mx = n * (n + 1) / 2 - (n - k) * (n - k + 1) / 2
    mn = k * (k - 1) / 2
    res = 0
    for i in xrange(k, n + 1):
        res += mx - mn + 1
        mx += n - i
        mn += i
        res %= MOD
    print res

if __name__ == '__main__':
    main()","#!/usr/bin/python
# -*- coding: utf-8 -*-

# Python 2.7.3

import sys
import math

def main():
    n, k = map(int, input().split())
    MOD = 10 ** 9 + 7
    mx = n * (n + 1) // 2 - (n - k) * (n - k + 1) // 2
    mn = k * (k - 1) // 2
    res = 0
    for i in range(k, n + 1):
        res += mx - mn + 1
        mx += n - i
        mn += i
        res %= MOD
    print(res)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s531812249.py,"#!/usr/bin/python

import math
import sys
import operator
import collections

def main():
    n,m = map(int,raw_input().split())
    ans = 0
    #n gu m ki
    ans += n*(n-1)/2
    # gu gu
    ans += m*(m-1)/2
    print ans

if __name__ == '__main__':
    main()","#!/usr/bin/python

import math
import sys
import operator
import collections

def main():
    n,m = map(int,input().split())
    ans = 0
    #n gu m ki
    ans += n*(n-1)//2
    # gu gu
    ans += m*(m-1)//2
    print(ans)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s684825280.py,"def main():
    n, k = map(int, raw_input().split())
    a = []
    for i in range(n):
        a.append(int(raw_input()))
    a = sorted(a)
    m = len(a) - k
    ans = 0
    for i in range(m):
        ans += a[i]
    print ans

if __name__ == '__main__':
    main()","def main():
    n, k = map(int, input().split())
    a = []
    inputs = list(input().split())
    for i in range(n):
        a.append(int(inputs[i]))
    a = sorted(a)
    m = len(a) - k
    ans = 0
    for i in range(m):
        ans += a[i]
    print(ans)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s531853923.py,"def main():
    a, b, c, d = map(int, raw_input().split())
    if a*b%2 == 1 and (c+d)%2 == 1:
        print ""No""
    else:
        print ""Yes""

if __name__ == '__main__':
    main()","def main():
    a, b, c, d = map(int, input().split())
    if a*b%2 == 1 and (c+d)%2 == 1:
        print(""No"")
    else:
        print(""Yes"")

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s568362035.py,"def main():
    n, m, Q = map(int, raw_input().split())
    a = map(int, raw_input().split())
    b = []
    id = []
    vis = [False] * (n + 1)
    cnt = [0] * (n + 1)
    for i in range(m):
        b.append(int(raw_input()))
        id.append(i)
    for i in range(m, n + 1):
        if not vis[int(raw_input())]:
            b.append(i)
            vis[i] = True
            id.append(i)
    for i in range(m):
        if not vis[i]:
            b.append(i)
            vis[i] = True
            id.append(i)
    for i in range(m, n + 1):
        if not vis[i]:
            b.append(i)
            vis[i] = True
            id.append(i)
    for i in range(m):
        cnt[b[i]] += 1
    for i in range(m, n + 1):
        cnt[b[i]] -= 1
        if cnt[b[i]] == 0:
            cnt[b[i - 1]] += 1
            vis[b[i - 1]] = True
            id[b[i - 1]] = i - 1
    for i in range(m):
        if cnt[b[i]] == 0:
            cnt[b[i + 1]] += 1
            vis[b[i + 1]] = True
            id[b[i + 1]] = i + 1
    flag = True
    l = 0
    for i in range(n):
        if cnt[l] == 0:
            l += 1
    for i in range(l, m):
        flag &= b[i] < b[i + 1]
    if flag:
        print ""Yes""
    else:
        print ""No""

main()","def main():
    n, m = map(int, input().split())
    Q = int(input())
    b = []
    id = []
    vis = [False] * (n + 1)
    cnt = [0] * (n + 1)
    for i in range(m):
        b.append(int(input()))
        id.append(i)
    for i in range(m, n + 1):
        if not vis[int(input())]:
            b.append(i)
            vis[i] = True
            id.append(i)
    for i in range(m):
        if not vis[i]:
            b.append(i)
            vis[i] = True
            id.append(i)
    for i in range(m, n + 1):
        if not vis[i]:
            b.append(i)
            vis[i] = True
            id.append(i)
    for i in range(m):
        cnt[b[i]] += 1
    for i in range(m, n + 1):
        cnt[b[i]] -= 1
        if cnt[b[i]] == 0:
            cnt[b[i - 1]] += 1
            vis[b[i - 1]] = True
            id[b[i - 1]] = i - 1
    for i in range(m):
        if cnt[b[i]] == 0:
            cnt[b[i + 1]] += 1
            vis[b[i + 1]] = True
            id[b[i + 1]] = i + 1
    flag = True
    l = 0
    for i in range(n):
        if cnt[l] == 0:
            l += 1
    for i in range(l, m):
        flag &= b[i] < b[i + 1]
    if flag:
        print(""Yes"")
    else:
        print(""No"")

main()"
CodeGen,codenet,C++,Python,s605014348.py,"def div(n):
	if n%2 == 0: return 2
	s = int(n**0.5)
	for i in range(3, s+1, 2):
		if n%i == 0: return i
	return n","def div(n):
	if n%2 == 0: return 2
	s = int(n**0.5)
	for i in range(3, s+1, 2):
		if n%i == 0: return i
	return n"
CodeGen,codenet,C++,Python,s628937234.py,"#!/usr/bin/python
s = raw_input()
t = s[0] + str(len(s)-2) + s[len(s)-1]
print t","#!/usr/bin/python
s = input()
t = s[0] + str(len(s)-2) + s[len(s)-1]
print(t)"
CodeGen,codenet,C++,Python,s611392782.py,"#!/usr/bin/python

# ACM-ICPCアジア地区予選2014 B. Miscalculation

import sys

def mul(str, idx):
	res = str[idx] - '0'
	while idx + 1 < len(str) and str[idx + 1] == '*':
		idx += 2
		res *= str[idx] - '0'
	return res

def add(str, idx):
	res = mul(str, idx)
	while idx + 1 < len(str) and str[idx + 1] == '+':
		idx += 2
		res += mul(str, idx)
	return res

def bob(str, idx):
	res = str[idx] - '0'
	while idx + 1 < len(str):
		if str[idx + 1] == '+':
			res += str[idx + 2] - '0'
		else:
			res *= str[idx + 2] - '0'
		idx += 2
	return res

def main():
	str = sys.stdin.readline().strip()
	d = int(sys.stdin.readline().strip())
	idx = 0
	a = add(str, idx)
	idx = 0
	b = bob(str, idx)
	if a == d:
		print(b == d and ""U"" or ""M"")
	else:
		print(b == d and ""L"" or ""I"")

if __name__ == '__main__':
	main()","#!/usr/bin/python

# ACM-ICPCアジア地区予選2014 B. Miscalculation

import sys

def mul(str, idx):
	res = int(str[idx])
	while idx + 1 < len(str) and str[idx + 1] == '*':
		idx += 2
		res *= int(str[idx])
	return res

def add(str, idx):
	res = mul(str, idx)
	while idx + 1 < len(str) and str[idx + 1] == '+':
		idx += 2
		res += mul(str, idx)
	return res

def bob(str, idx):
	res = int(str[idx])
	while idx + 1 < len(str):
		if str[idx + 1] == '+':
			res += int(str[idx + 2])
		else:
			res *= int(str[idx + 2])
		idx += 2
	return res

def main():
	str = sys.stdin.readline().strip()
	d = int(sys.stdin.readline().strip())
	idx = 0
	a = add(str, idx)
	idx = 0
	b = bob(str, idx)
	if a == d:
		print(b == d and ""U"" or ""M"")
	else:
		print(b == d and ""L"" or ""I"")

if __name__ == '__main__':
	main()"
CodeGen,codenet,C++,Python,s680076196.py,"def main():
    a,b,c,d = map(int,raw_input().split())
    print (a-c)*(b-d)

main()","def main():
    a,b = map(int, input().split())
    c,d = map(int, input().split())
    print((a-c)*(b-d))

main()"
CodeGen,codenet,C++,Python,s973217665.py,"def main():
    n = int(raw_input())
    while n > 0:
        p, q = map(int, raw_input().split())
        l = int(sqrt(p*p + q*q))
        isprime = 1
        for i in range(l):
            for j in range(l):
                x = i*i + j*j
                if x <= 1 or x >= p*p + q*q:
                    continue
                if ((i*p + j*q) % x == 0 and (i*q - j*p) % x == 0):
                    isprime = 0
                    break
        print(isprime and ""P"" or ""C"")
        n -= 1

if __name__ == ""__main__"":
    main()","import math

def main():
    n = int(input())
    while n > 0:
        p, q = map(int, input().split())
        l = int(math.sqrt(p*p + q*q))
        isprime = 1
        for i in range(l):
            for j in range(l):
                x = i*i + j*j
                if x <= 1 or x >= p*p + q*q:
                    continue
                if ((i*p + j*q) % x == 0 and (i*q - j*p) % x == 0):
                    isprime = 0
                    break
        print(isprime and ""P"" or ""C"")
        n -= 1

if __name__ == ""__main__"":
    main()"
CodeGen,codenet,C++,Python,s539273394.py,"def sosuubunnpu():
    for i in range(1,1000):
        prime_or_not[i] = 0
    for i in range(2,1000):
        for j in range(2,1000/i):
            if prime_or_not[i] == 0:
                prime_or_not[i*j] = 1
    for i in range(2,1000):
        if prime_or_not[i] == 0:
            prime_list[prime_counter] = i
            prime_counter += 1
    
def innsuubunnkai(N,n):
    time = 0
    while 1:
        if N%n == 0:
            N = N/n
            time += 1
        else:
            break
    kekka[0] = time
    kekka[1] = N
    
def main():
    N = int(input())
    innsuu = [0]*11
    for i in range(2,N+1):
        for j in range(0,11):
            innsuu[j] += A[i][j]
    for i in range(0,prime_counter):
        result = (result*(prime_num[i]+1))%1000000007
    print(result)
    
def A(N,n):
    for i in range(2,N+1):
        for j in range(0,11):
            innsuu[j] += A[i][j]
    for i in range(0,prime_counter):
        result = (result*(prime_num[i]+1))%1000000007
    return result

sosuubunnpu()
N = int(input())
innsuu = [0]*11
for i in range(2,N+1):
    for j in range(0,11):
        innsuu[j] += A(i,j)
for i in range(0,prime_counter):
    result = (result*(prime_num[i]+1))%1000000007
print(result)","def sosuubunnpu():
    global prime_or_not, prime_list, prime_num, prime_counter
    prime_or_not = [0] * 1001
    prime_list = [0] * 1001
    prime_num = [0] * 1001
    prime_counter = 0
    for i in range(1,1000):
        prime_or_not[i] = 0
    for i in range(2,1000):
        for j in range(2,1000//i+1):
            if prime_or_not[i] == 0:
                prime_or_not[i*j] = 1
    for i in range(2,1000):
        if prime_or_not[i] == 0:
            prime_list[prime_counter] = i
            prime_counter += 1
    
def innsuubunnkai(N,n):
    global kekka
    time = 0
    while 1:
        if N%n == 0:
            N = N/n
            time += 1
        else:
            break
    kekka[0] = time
    kekka[1] = N
    
def main():
    N = int(input())
    innsuu = [0]*11
    for i in range(2,N+1):
        for j in range(0,11):
            innsuu[j] += A[i][j]
    for i in range(0,prime_counter):
        result = (result*(prime_num[i]+1))%1000000007
    print(result)
    
def A(N,n):
    for i in range(2,N+1):
        for j in range(0,11):
            innsuu[j] += A[i][j]
    for i in range(0,prime_counter):
        result = (result*(prime_num[i]+1))%1000000007
    return result

sosuubunnpu()
N = int(input())
innsuu = [0]*11
for i in range(2,N+1):
    for j in range(0,11):
        innsuu[j] += A(i,j)
for i in range(0,prime_counter):
    result = (result*(prime_num[i]+1))%1000000007
print(result)"
CodeGen,codenet,C++,Python,s360529905.py,"#!/usr/bin/python
import sys

def main():
    N = int(sys.argv[1])
    a = [int(x) for x in sys.stdin.readline().split()]
    b = sorted(a)
    frontHalf = b[N//2-1]
    backHalf = b[N//2]
    for i in range(N):
        if a[i] < backHalf:
            print(backHalf)
        else:
            print(frontHalf)

if __name__ == '__main__':
    main()","#!/usr/bin/python
import sys

def main():
    N = int(sys.argv[1])
    a = [int(x) for x in sys.stdin.readline().split()]
    b = sorted(a)
    frontHalf = b[N//2-1]
    backHalf = b[N//2]
    for i in range(N):
        if a[i] < backHalf:
            print(backHalf)
        else:
            print(frontHalf)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Python,s791749917.py,"def main():
    H, W = map(int, input().split())
    ans = 0
    if H == 1 or W == 1:
        ans = 1
    else:
        m = H*W
        if m % 2 == 0:
            ans = m/2
        else:
            ans = m/2 + 1
    print(ans)

if __name__ == '__main__':
    main()","def main():
    H, W = map(int, input().split())
    ans = 0
    if H == 1 or W == 1:
        ans = 1
    else:
        m = H*W
        if m % 2 == 0:
            ans = m/2
        else:
            ans = m/2 + 1
    print(ans)

if __name__ == '__main__':
    main()"
CodeGen,codenet,C++,Java,s480704678.java,"public class s480704678 {
    
    public static void main(String[] args) {
        
        int n;
        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        int[] a = new int[n];
        int[] acc = new int[n + 1];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
            acc[i + 1] = acc[i] + a[i];
            acc[i + 1] %= 1000000007;
        }
        long ans = 0;
        for (int i = 0; i < n; i++) {
            ans += a[i] % 1000000007 * (1000000007 + acc[n] - acc[i + 1]) % 1000000007;
            ans %= 1000000007;
        }
        System.out.println(ans);
    }
}","public class Main {
    
    public static void main(String[] args) {
        
        int n;
        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        int[] a = new int[n];
        int[] acc = new int[n + 1];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
            acc[i + 1] = acc[i] + a[i];
            acc[i + 1] %= 1000000007;
        }
        long ans = 0;
        for (int i = 0; i < n; i++) {
            ans += a[i] % 1000000007 * (1000000007 + acc[n] - acc[i + 1]) % 1000000007;
            ans %= 1000000007;
        }
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s247537353.java,# 1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.,# 1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.
CodeGen,codenet,C++,Java,s788730767.java,"public class s788730767 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int p = in.nextInt();
		int[] a = new int[n];
		for (int i = 0; i < n; i++) {
			a[i] = in.nextInt();
		}
		int b = 0, c = 0;
		for (int i = 0; i < n; i++) {
			if (a[i] % 2 == 0) {
				b++;
			}
			else {
				c++;
			}
		}
		//cout << ""b:"" << b << "" c:"" << c << endl;
		long bsum = 0, csum = 0;
		bsum = (long)Math.pow(2, b);
		if (p == 0) {
			for (int i = 0; i <= c; i++) {
				if (i % 2 == 0) {
					csum += nCr(c, i);
				}
			}
		}
		else {
			for (int i = 0; i <= c; i++) {
				if (i % 2 == 1) {
					csum += nCr(c, i);
				}
			}
		}
		long ans = bsum * csum;
		System.out.println(ans);
	}
}","public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int p = in.nextInt();
		int[] a = new int[n];
		for (int i = 0; i < n; i++) {
			a[i] = in.nextInt();
		}
		int b = 0, c = 0;
		for (int i = 0; i < n; i++) {
			if (a[i] % 2 == 0) {
				b++;
			}
			else {
				c++;
			}
		}
		//cout << ""b:"" << b << "" c:"" << c << endl;
		long bsum = 0, csum = 0;
		bsum = (long)Math.pow(2, b);
		if (p == 0) {
			for (int i = 0; i <= c; i++) {
				if (i % 2 == 0) {
					csum += nCr(c, i);
				}
			}
		}
		else {
			for (int i = 0; i <= c; i++) {
				if (i % 2 == 1) {
					csum += nCr(c, i);
				}
			}
		}
		long ans = bsum * csum;
		System.out.println(ans);
	}
}"
CodeGen,codenet,C++,Java,s422352362.java,"public class s422352362 {
    public int minDistance(int[] words1, int[] words2) {
        int n1 = words1.length;
        int n2 = words2.length;
        int[] pre = new int[n1 + 1];
        int[] last = new int[n1 + 1];
        int[] d = new int[n1 + 1];
        for (int i = 0; i <= n1; i++) {
            pre[i] = i;
        }
        for (int i = 0; i <= n2; i++) {
            last[i] = i;
        }
        for (int i = 1; i <= n1; i++) {
            d[i] = words1[i - 1];
        }
        for (int i = 1; i <= n2; i++) {
            d[i] = words2[i - 1] + d[i];
        }
        for (int i = 1; i <= n1; i++) {
            for (int j = 1; j <= n2; j++) {
                d[i] = min(d[i], d[i - 1] + d[j] - last[j]);
                d[i] = min(d[i], d[i - 1] + d[j] - pre[i]);
            }
        }
        return d[n1];
    }
}","public class Main {
    public int minDistance(int[] words1, int[] words2) {
        int n1 = words1.length;
        int n2 = words2.length;
        int[] pre = new int[n1 + 1];
        int[] last = new int[n1 + 1];
        int[] d = new int[n1 + 1];
        for (int i = 0; i <= n1; i++) {
            pre[i] = i;
        }
        for (int i = 0; i <= n2; i++) {
            last[i] = i;
        }
        for (int i = 1; i <= n1; i++) {
            d[i] = words1[i - 1];
        }
        for (int i = 1; i <= n2; i++) {
            d[i] = words2[i - 1] + d[i];
        }
        for (int i = 1; i <= n1; i++) {
            for (int j = 1; j <= n2; j++) {
                d[i] = min(d[i], d[i - 1] + d[j] - last[j]);
                d[i] = min(d[i], d[i - 1] + d[j] - pre[i]);
            }
        }
        return d[n1];
    }
}"
CodeGen,codenet,C++,Java,s110965154.java,"public class s110965154 {
 
    public static void main(String[] args) {
 
        int iNum = 0;
        Scanner sc = new Scanner(System.in);
        while (iNum!= 0) {
            int iIntValue = sc.nextInt();
            int[] vecIntValue = new int[iNum];
            for (int i = 0; i < iNum; i++) {
                vecIntValue[i] = sc.nextInt();
            }
 
            sort(vecIntValue);
 
            for (int i = 0; i < iNum; i++) {
                System.out.print(vecIntValue[i]);
                if (i!= iNum - 1) {
                    System.out.print("" "");
                }
            }
            System.out.println();
            iNum = sc.nextInt();
        }
    }
 
    public static void sort(int[] a_rvecIntValue) {
 
        for (int i = 0; i < a_rvecIntValue.length; i++) {
 
            if (i!= 0) {
 
                int iIntValue = a_rvecIntValue[i];
                int j = i - 1;
                while ((j >= 0) && (a_rvecIntValue[j] > iIntValue)) {
                    a_rvecIntValue[j+1] = a_rvecIntValue[j];
                    j--;
                }
                a_rvecIntValue[j+1] = iIntValue;
            }
 
            for (int k = 0; k < a_rvecIntValue.length; k++) {
                System.out.print(a_rvecIntValue[k]);
                if (k!= a_rvecIntValue.length - 1) {
                    System.out.print("" "");
                }
            }
            System.out.println();
        }
    }
}","public class Main {
 
    public static void main(String[] args) {
 
        int iNum = 0;
        Scanner sc = new Scanner(System.in);
        while (iNum!= 0) {
            int iIntValue = sc.nextInt();
            int[] vecIntValue = new int[iNum];
            for (int i = 0; i < iNum; i++) {
                vecIntValue[i] = sc.nextInt();
            }
 
            sort(vecIntValue);
 
            for (int i = 0; i < iNum; i++) {
                System.out.print(vecIntValue[i]);
                if (i!= iNum - 1) {
                    System.out.print("" "");
                }
            }
            System.out.println();
            iNum = sc.nextInt();
        }
    }
 
    public static void sort(int[] a_rvecIntValue) {
 
        for (int i = 0; i < a_rvecIntValue.length; i++) {
 
            if (i!= 0) {
 
                int iIntValue = a_rvecIntValue[i];
                int j = i - 1;
                while ((j >= 0) && (a_rvecIntValue[j] > iIntValue)) {
                    a_rvecIntValue[j+1] = a_rvecIntValue[j];
                    j--;
                }
                a_rvecIntValue[j+1] = iIntValue;
            }
 
            for (int k = 0; k < a_rvecIntValue.length; k++) {
                System.out.print(a_rvecIntValue[k]);
                if (k!= a_rvecIntValue.length - 1) {
                    System.out.print("" "");
                }
            }
            System.out.println();
        }
    }
}"
CodeGen,codenet,C++,Java,s387994967.java,"public class s387994967 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int A = in.nextInt();
        int B = in.nextInt();
        if (A < 13 && A >= 6) {
            System.out.println(B / 2);
        }
        if (A < 6) {
            System.out.println(0);
        }
        if (A >= 13) {
            System.out.println(B);
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int A = in.nextInt();
        int B = in.nextInt();
        if (A < 13 && A >= 6) {
            System.out.println(B / 2);
        }
        if (A < 6) {
            System.out.println(0);
        }
        if (A >= 13) {
            System.out.println(B);
        }
    }
}"
CodeGen,codenet,C++,Java,s367896206.java,"public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class s367896206 {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y()","public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y() { roll(0, 2, 5, 3); }
	void roll_x() { roll(0, 1, 5, 4); }
	void roll(int i, int j, int k, int l) {
		int t = f[i]; f[i] = f[j]; f[j] = f[k]; f[k] = f[l]; f[l] = t;
	}
}

public class Main {
	int f[6];
	Cube() {}
	void roll_z() { roll(1, 2, 4, 3); }
	void roll_y()"
CodeGen,codenet,C++,Java,s085712108.java,"/*Lucky_Glass*/
import java.util.*;
import java.lang.*;
import java.io.*;

public class s085712108 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int a = in.nextInt();
		int b = in.nextInt();
		int c = in.nextInt();
		int tot = 0;
		Queue<QUEUE> que = new LinkedList<QUEUE>();
		que.add(new QUEUE(a, b, c, tot));
		while (!que.isEmpty()) {
			QUEUE fro = que.poll();
			if (fro.a == fro.b && fro.b == fro.c) {
				System.out.println(fro.tot);
				return;
			}
			for (int i = 0; i < 6; i++) {
				QUEUE push = fro;
				push.tot++;
				push.a += F[i][0];
				push.b += F[i][1];
				push.c += F[i][2];
				int n = push.a * 10000 + push.b * 100 + push.c;
				if (!HASH(n)) continue;
				que.add(push);
			}
		}
	}

	public static int[][] F = { { 1, 1, 0 }, { 1, 0, 1 }, { 0, 1, 1 }, { 2, 0, 0 }, { 0, 2, 0 }, { 0, 0, 2 } };

	public static boolean HASH(int n) {
		for (int i = 0; i < Hash.length; i++) {
			if (Hash[i].contains(n)) return false;
		}
		Hash[n % Hash.length].add(n);
		return true;
	}

	public static class QUEUE {
		public int a, b, c, tot;

		public QUEUE(int a, int b, int c, int tot) {
			this.a = a;
			this.b = b;
			this.c = c;
			this.tot = tot;
		}
	}
}","/*Lucky_Glass*/
import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int a = in.nextInt();
		int b = in.nextInt();
		int c = in.nextInt();
		int tot = 0;
		Queue<QUEUE> que = new LinkedList<QUEUE>();
		que.add(new QUEUE(a, b, c, tot));
		while (!que.isEmpty()) {
			QUEUE fro = que.poll();
			if (fro.a == fro.b && fro.b == fro.c) {
				System.out.println(fro.tot);
				return;
			}
			for (int i = 0; i < 6; i++) {
				QUEUE push = fro;
				push.tot++;
				push.a += F[i][0];
				push.b += F[i][1];
				push.c += F[i][2];
				int n = push.a * 10000 + push.b * 100 + push.c;
				if (!HASH(n)) continue;
				que.add(push);
			}
		}
	}

	public static int[][] F = { { 1, 1, 0 }, { 1, 0, 1 }, { 0, 1, 1 }, { 2, 0, 0 }, { 0, 2, 0 }, { 0, 0, 2 } };

	public static boolean HASH(int n) {
		for (int i = 0; i < Hash.length; i++) {
			if (Hash[i].contains(n)) return false;
		}
		Hash[n % Hash.length].add(n);
		return true;
	}

	public static class QUEUE {
		public int a, b, c, tot;

		public QUEUE(int a, int b, int c, int tot) {
			this.a = a;
			this.b = b;
			this.c = c;
			this.tot = tot;
		}
	}
}"
CodeGen,codenet,C++,Java,s938564096.java,"class Solution {
    public:
        int r;
        int n;
        int[][] dp;
        int[][] dp2;
        int[][] dp3;
        int[][] dp4;
        int[][] dp5;
        int[][] dp6;
        int[][] dp7;
        int[][] dp8;
        int[][] dp9;
        int[][] dp10;
        int[][] dp11;
        int[][] dp12;
        int[][] dp13;
        int[][] dp14;
        int[][] dp15;
        int[][] dp16;
        int[][] dp17;
        int[][] dp18;
        int[][] dp19;
        int[][] dp20;
        int[][] dp21;
        int[][] dp22;
        int[][] dp23;
        int[][] dp24;
        int[][] dp25;
        int[][] dp26;
        int[][] dp27;
        int[][] dp28;
        int[][] dp29;
        int[][] dp30;
        int[][] dp31;
        int[][] dp32;
        int[][] dp33;
        int[][] dp34;
        int[][] dp35;
        int[][] dp36;
        int[][] dp37;
        int[][] dp38;
        int[][] dp39;
        int[][] dp40;
        int[][] dp41;
        int[][] dp42;
        int[][] dp43;
        int[][] dp44;
        int[][] dp45;
        int[][] dp46;
        int[][] dp47;
        int[][] dp48;
        int[][] dp49;
        int[][] dp50;
        int[][] dp51;
        int[][] dp52;
        int[][] dp53;
        int[][] dp54;
        int[][] dp55;
        int[][] dp56;
        int[][] dp57;
        int[][] dp58;
        int[][] dp59;
        int[][] dp60;
        int[][] dp61;
        int[][] dp62;
        int[][] dp63;
        int[][] dp64;
        int[][] dp65;
        int[][] dp66;
        int[][] dp67;
        int[][] dp68;
        int[][] dp69;
        int[][] dp70;
        int[][] dp71;
        int[][] dp72;
        int[][] dp73;
        int[][] dp74;
        int[][] dp75;
        int[][] dp76;
        int[][] dp77;
        int[][] dp78;
        int[][] dp79;
        int[][] dp80;
        int[][] dp81;
        int[][] dp82;
        int[][] dp83;
        int[][] dp84;
        int[][] dp85;
        int[][] dp86;
        int[][] dp87;
        int[][] dp88;
        int[][] dp89;
        int[][] dp90;
        int[][] dp91;
        int[][] dp92;
        int[][] dp93;
        int[][] dp94;
        int[][] dp95;
        int[][] dp96;
        int[][] dp97;
        int[][] dp98;
        int[][] dp99;
        int[][] dp100;
        int[][] dp101;
        int[][] dp102;
        int[][] dp103;
        int[][] dp104;
        int[][] dp105;
        int[][] dp106;
        int[][] dp107;
        int[][] dp108;
        int[][] dp109;
        int[][] dp110;
        int[][] dp111;
        int[][] dp112;
        int[][] dp113;
        int[][] dp114;
        int[][] dp115;
        int[][] dp116;
        int[][] dp117;
        int[][] dp118;
        int[][] dp119;
        int[][] dp120;
        int[][] dp121;
        int[][] dp122;
        int[][] dp123;
        int[][] dp124;
        int[][] dp125;
        int[][] dp126;
        int[][] dp127;
        int[][] dp128;
        int[][] dp129;
        int[][] dp130;
        int[][] dp131;
        int[][] dp132;
        int[][] dp133;
        int[][] dp134;
        int[][] dp135;
        int[][] dp136;
        int[][] dp137;
        int[][] dp138;
        int[][] dp139;
        int[][] dp140;
        int[][] dp141;
        int[][] dp142;
        int[][] dp143;
        int[][] dp144;
        int[][] dp145;
        int[][] dp146;
        int[][] dp147;
        int[][] dp148;
        int[][] dp149;
        int[][] dp150;
        int[][] dp151;
        int[][] dp152;
        int[][] dp153;
        int[][] dp154;
        int[][] dp155;
        int[][] dp156;
        int[][] dp157;
        int[][] dp158;
        int[][] dp159;
        int[][] dp160;
        int[][] dp161;
        int[][] dp162;
        int[][] dp163;
        int[][] dp164;
        int[][] dp165;
        int[][] dp166;
        int[][] dp167;
        int[][] dp168;
        int[][] dp169;
        int[][] dp170;
        int[][] dp171;
        int[][] dp172;
        int[][] dp173;
        int[][] dp174;
        int[][] dp175;
        int[][] dp176;
        int[][] dp177;
        int[][] dp178;
        int[][] dp179;
        int[][] dp180;
        int[][] dp181;
        int[][] dp182;
        int[][] dp183;
        int[][] dp184;
        int[][] dp185;
        int[][] dp186;
        int[][] dp187;
        int[][] dp188;
        int[][] dp189;
        int[][] dp190;
        int[][] dp191;
        int[][] dp","class Solution {
    public:
        int r;
        int n;
        int[][] dp;
        int[][] dp2;
        int[][] dp3;
        int[][] dp4;
        int[][] dp5;
        int[][] dp6;
        int[][] dp7;
        int[][] dp8;
        int[][] dp9;
        int[][] dp10;
        int[][] dp11;
        int[][] dp12;
        int[][] dp13;
        int[][] dp14;
        int[][] dp15;
        int[][] dp16;
        int[][] dp17;
        int[][] dp18;
        int[][] dp19;
        int[][] dp20;
        int[][] dp21;
        int[][] dp22;
        int[][] dp23;
        int[][] dp24;
        int[][] dp25;
        int[][] dp26;
        int[][] dp27;
        int[][] dp28;
        int[][] dp29;
        int[][] dp30;
        int[][] dp31;
        int[][] dp32;
        int[][] dp33;
        int[][] dp34;
        int[][] dp35;
        int[][] dp36;
        int[][] dp37;
        int[][] dp38;
        int[][] dp39;
        int[][] dp40;
        int[][] dp41;
        int[][] dp42;
        int[][] dp43;
        int[][] dp44;
        int[][] dp45;
        int[][] dp46;
        int[][] dp47;
        int[][] dp48;
        int[][] dp49;
        int[][] dp50;
        int[][] dp51;
        int[][] dp52;
        int[][] dp53;
        int[][] dp54;
        int[][] dp55;
        int[][] dp56;
        int[][] dp57;
        int[][] dp58;
        int[][] dp59;
        int[][] dp60;
        int[][] dp61;
        int[][] dp62;
        int[][] dp63;
        int[][] dp64;
        int[][] dp65;
        int[][] dp66;
        int[][] dp67;
        int[][] dp68;
        int[][] dp69;
        int[][] dp70;
        int[][] dp71;
        int[][] dp72;
        int[][] dp73;
        int[][] dp74;
        int[][] dp75;
        int[][] dp76;
        int[][] dp77;
        int[][] dp78;
        int[][] dp79;
        int[][] dp80;
        int[][] dp81;
        int[][] dp82;
        int[][] dp83;
        int[][] dp84;
        int[][] dp85;
        int[][] dp86;
        int[][] dp87;
        int[][] dp88;
        int[][] dp89;
        int[][] dp90;
        int[][] dp91;
        int[][] dp92;
        int[][] dp93;
        int[][] dp94;
        int[][] dp95;
        int[][] dp96;
        int[][] dp97;
        int[][] dp98;
        int[][] dp99;
        int[][] dp100;
        int[][] dp101;
        int[][] dp102;
        int[][] dp103;
        int[][] dp104;
        int[][] dp105;
        int[][] dp106;
        int[][] dp107;
        int[][] dp108;
        int[][] dp109;
        int[][] dp110;
        int[][] dp111;
        int[][] dp112;
        int[][] dp113;
        int[][] dp114;
        int[][] dp115;
        int[][] dp116;
        int[][] dp117;
        int[][] dp118;
        int[][] dp119;
        int[][] dp120;
        int[][] dp121;
        int[][] dp122;
        int[][] dp123;
        int[][] dp124;
        int[][] dp125;
        int[][] dp126;
        int[][] dp127;
        int[][] dp128;
        int[][] dp129;
        int[][] dp130;
        int[][] dp131;
        int[][] dp132;
        int[][] dp133;
        int[][] dp134;
        int[][] dp135;
        int[][] dp136;
        int[][] dp137;
        int[][] dp138;
        int[][] dp139;
        int[][] dp140;
        int[][] dp141;
        int[][] dp142;
        int[][] dp143;
        int[][] dp144;
        int[][] dp145;
        int[][] dp146;
        int[][] dp147;
        int[][] dp148;
        int[][] dp149;
        int[][] dp150;
        int[][] dp151;
        int[][] dp152;
        int[][] dp153;
        int[][] dp154;
        int[][] dp155;
        int[][] dp156;
        int[][] dp157;
        int[][] dp158;
        int[][] dp159;
        int[][] dp160;
        int[][] dp161;
        int[][] dp162;
        int[][] dp163;
        int[][] dp164;
        int[][] dp165;
        int[][] dp166;
        int[][] dp167;
        int[][] dp168;
        int[][] dp169;
        int[][] dp170;
        int[][] dp171;
        int[][] dp172;
        int[][] dp173;
        int[][] dp174;
        int[][] dp175;
        int[][] dp176;
        int[][] dp177;
        int[][] dp178;
        int[][] dp179;
        int[][] dp180;
        int[][] dp181;
        int[][] dp182;
        int[][] dp183;
        int[][] dp184;
        int[][] dp185;
        int[][] dp186;
        int[][] dp187;
        int[][] dp188;
        int[][] dp189;
        int[][] dp190;
        int[][] dp191;
        int[][] dp"
CodeGen,codenet,C++,Java,s438448326.java,"public class s438448326 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int A = in.nextInt();
		int B = in.nextInt();
		int C = in.nextInt();
		int D = in.nextInt();
		int E = in.nextInt();
		int F = in.nextInt();
		int m1 = 0, m2 = 0;
		float maxD = 0.f;
		for (int i = 0; 100*A*i <= F; i++) {
			int mA = 100 * A*i;
			for (int j = 0; mA+100*B*j <= F; j++) {
				int mB = 100 * B*j;
				for (int k = 0; mA+mB+C*k <= F; k++) {
					int mC = C*k;
					for (int l = 0; mA+mB+mC+D*l <= F; l++) {
						int mD = D*l;
						if ((mA + mB)*E / 100 < mD + mC) {
							break;
						}
						float d = (float)(mD + mC) / (float)(mA + mB + mC + mD);
						if (d > maxD) {
							m1 = mA + mB + mC + mD;
							m2 = mC + mD;
							maxD = d;
						}
					}
				}
			}
		}
		if (m1 == 0) {
			m1 = 100 * A;
		}
		System.out.println(m1 + "" "" + m2);
	}
}","public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int A = in.nextInt();
		int B = in.nextInt();
		int C = in.nextInt();
		int D = in.nextInt();
		int E = in.nextInt();
		int F = in.nextInt();
		int m1 = 0, m2 = 0;
		float maxD = 0.f;
		for (int i = 0; 100*A*i <= F; i++) {
			int mA = 100 * A*i;
			for (int j = 0; mA+100*B*j <= F; j++) {
				int mB = 100 * B*j;
				for (int k = 0; mA+mB+C*k <= F; k++) {
					int mC = C*k;
					for (int l = 0; mA+mB+mC+D*l <= F; l++) {
						int mD = D*l;
						if ((mA + mB)*E / 100 < mD + mC) {
							break;
						}
						float d = (float)(mD + mC) / (float)(mA + mB + mC + mD);
						if (d > maxD) {
							m1 = mA + mB + mC + mD;
							m2 = mC + mD;
							maxD = d;
						}
					}
				}
			}
		}
		if (m1 == 0) {
			m1 = 100 * A;
		}
		System.out.println(m1 + "" "" + m2);
	}
}"
CodeGen,codenet,C++,Java,s800506321.java,"public class s800506321 {
	public static void main(String[] args) {
		int n,k,x,y,z;
		scanf(""%d"",&n);
		scanf(""%d"",&k);
		x=n/k;
		y=n%k;
		if(y!=0) {
			z=x+1-x;
		}
		else {
			z=x-x;
		}
		System.out.println(z);
	}
}","public class Main {
	public static void main(String[] args) {
		int n,k,x,y,z;
		scanf(""%d"",&n);
		scanf(""%d"",&k);
		x=n/k;
		y=n%k;
		if(y!=0) {
			z=x+1-x;
		}
		else {
			z=x-x;
		}
		System.out.println(z);
	}
}"
CodeGen,codenet,C++,Java,s525470559.java,"public class s525470559 {
    public static void main(String[] args) {
        int n, q;
        int elaps = 0;
        queue<task> Q;

        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        q = in.nextInt();

        for (int i = 0; i < n; i++) {
            task tmp;
            tmp.name = in.next();
            tmp.time = in.nextInt();
            Q.add(tmp);
        }

        while (!Q.isEmpty()) {
            task p = Q.remove();
            if (p.time <= q) {
                elaps += p.time;
                System.out.println(p.name + "" "" + elaps);
            } else {
                p.time -= q;
                elaps += q;
                Q.add(p);
            }
        }
    }
}","public class Main {
    public static void main(String[] args) {
        int n, q;
        int elaps = 0;
        queue<task> Q;

        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        q = in.nextInt();

        for (int i = 0; i < n; i++) {
            task tmp;
            tmp.name = in.next();
            tmp.time = in.nextInt();
            Q.add(tmp);
        }

        while (!Q.isEmpty()) {
            task p = Q.remove();
            if (p.time <= q) {
                elaps += p.time;
                System.out.println(p.name + "" "" + elaps);
            } else {
                p.time -= q;
                elaps += q;
                Q.add(p);
            }
        }
    }
}"
CodeGen,codenet,C++,Java,s338629964.java,"public class s338629964 {
    public static void main(String[] args) {
        int n = sc.nextInt();
        int[] a = new int[n];
        int[] b = new int[n];
        int aall = 0;
        int ball = 0;
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            aall += a[i];
            ball += b[i];
        }
        int[][] dp = new int[aall + 1][ball + 1];
        dp[0][0] = 1;
        for (int i = 1; i <= n; i++) {
            int id = i % 2;
            for (int asum = aall; asum >= 0; asum--) {
                for (int cnt = 0; cnt <= ball; cnt++) {
                    for (int p = 0; p < 2; p++) {
                        if (asum - a[i - 1] < 0) continue;
                        int pw = 1;
                        for (int use = 0; use < b[i - 1]; use++) {
                            if (cnt - use >= 0) {
                                int tmp = nCk(cnt, use) * pw * dp[asum - a[i - 1]][cnt - use] % MOD * inv(a[i - 1]) % MOD;
                                dp[asum][cnt][p] += tmp;
                                dp[asum][cnt][p] %= MOD;
                            } else break;
                            pw = pw * a[i - 1] % MOD;
                        }
                        if (cnt - b[i - 1] + 1 >= 0) {
                            dp[asum][cnt][p] += nCk(cnt, b[i - 1] - 1) * pw * dp[asum - a[i - 1]][cnt - b[i - 1] + 1] % MOD * inv(a[i - 1]) % MOD;
                            dp[asum][cnt][p] %= MOD;
                        }
                    }
                }
            }
        }
        int ans = 0;
        for (int asum = 0; asum <= aall; asum++) {
            int rev_asum_pow = 1;
            for (int cnt = 0; cnt <= ball; cnt++) {
                rev_asum_pow = rev_asum_pow * inv(rev[asum]) % MOD;
                for (int p = 0; p < 2; p++) {
                    int x = dp[asum][cnt][p] * rev_asum_pow * (cnt + 1) % MOD * aall % MOD * rev[asum] % MOD;
                    if (p == 1) ans += x;
                    else ans -= x;
                    ans %= MOD;
                }
            }
        }
        if (ans < 0) ans += MOD;
        System.out.println(ans);
    }
}","public class Main {
    public static void main(String[] args) {
        int n = sc.nextInt();
        int[] a = new int[n];
        int[] b = new int[n];
        int aall = 0;
        int ball = 0;
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            aall += a[i];
            ball += b[i];
        }
        int[][] dp = new int[aall + 1][ball + 1];
        dp[0][0] = 1;
        for (int i = 1; i <= n; i++) {
            int id = i % 2;
            for (int asum = aall; asum >= 0; asum--) {
                for (int cnt = 0; cnt <= ball; cnt++) {
                    for (int p = 0; p < 2; p++) {
                        if (asum - a[i - 1] < 0) continue;
                        int pw = 1;
                        for (int use = 0; use < b[i - 1]; use++) {
                            if (cnt - use >= 0) {
                                int tmp = nCk(cnt, use) * pw * dp[asum - a[i - 1]][cnt - use] % MOD * inv(a[i - 1]) % MOD;
                                dp[asum][cnt][p] += tmp;
                                dp[asum][cnt][p] %= MOD;
                            } else break;
                            pw = pw * a[i - 1] % MOD;
                        }
                        if (cnt - b[i - 1] + 1 >= 0) {
                            dp[asum][cnt][p] += nCk(cnt, b[i - 1] - 1) * pw * dp[asum - a[i - 1]][cnt - b[i - 1] + 1] % MOD * inv(a[i - 1]) % MOD;
                            dp[asum][cnt][p] %= MOD;
                        }
                    }
                }
            }
        }
        int ans = 0;
        for (int asum = 0; asum <= aall; asum++) {
            int rev_asum_pow = 1;
            for (int cnt = 0; cnt <= ball; cnt++) {
                rev_asum_pow = rev_asum_pow * inv(rev[asum]) % MOD;
                for (int p = 0; p < 2; p++) {
                    int x = dp[asum][cnt][p] * rev_asum_pow * (cnt + 1) % MOD * aall % MOD * rev[asum] % MOD;
                    if (p == 1) ans += x;
                    else ans -= x;
                    ans %= MOD;
                }
            }
        }
        if (ans < 0) ans += MOD;
        System.out.println(ans);
    }
}"
CodeGen,codenet,C++,Java,s669128523.java,"import java.util.Scanner;
public class s669128523
{
	public static void main(String[] args)
	{
		Scanner in = new Scanner(System.in);
		int n,u,v;
		int M[][]=new int[100][100];
		int color[100]={0};
		int d[100]={0};
		int f[100]={0};
		int tt=0;
		
		n=in.nextInt();
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
				M[i][j]=0;
		}
		for(int i=0;i<n;i++)
		{
			u=in.nextInt();
			u--;
			for(int j=0;j<in.nextInt();j++)
			{
				v=in.nextInt();
				v--;
				M[u][v]=1;
			}
		}
		
		for(int i=0;i<n;i++)
			color[i]=0;
		tt=0;
		
		for(int i=0;i<n;i++)
		{
			if(color[i]==0)
			{
				color[i]=1;
				d[i]=++tt;
				for(int j=0;j<n;j++)
				{
					if(M[i][j]==1)
					{
						if(color[j]==0)
						{
							color[j]=2;
							f[j]=++tt;
						}
					}
				}
			}
		}
		
		for(int i=0;i<n;i++)
			System.out.println(i+1+"" ""+d[i]+"" ""+f[i]);
	}
}","import java.util.Scanner;
public class Main
{
	public static void main(String[] args)
	{
		Scanner in = new Scanner(System.in);
		int n,u,v;
		int M[][]=new int[100][100];
		int color[100]={0};
		int d[100]={0};
		int f[100]={0};
		int tt=0;
		
		n=in.nextInt();
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
				M[i][j]=0;
		}
		for(int i=0;i<n;i++)
		{
			u=in.nextInt();
			u--;
			for(int j=0;j<in.nextInt();j++)
			{
				v=in.nextInt();
				v--;
				M[u][v]=1;
			}
		}
		
		for(int i=0;i<n;i++)
			color[i]=0;
		tt=0;
		
		for(int i=0;i<n;i++)
		{
			if(color[i]==0)
			{
				color[i]=1;
				d[i]=++tt;
				for(int j=0;j<n;j++)
				{
					if(M[i][j]==1)
					{
						if(color[j]==0)
						{
							color[j]=2;
							f[j]=++tt;
						}
					}
				}
			}
		}
		
		for(int i=0;i<n;i++)
			System.out.println(i+1+"" ""+d[i]+"" ""+f[i]);
	}
}"
CodeGen,codenet,C++,Java,s208096306.java,"public class s208096306 {
    public int gcd(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        int r;
        while ((r = a % b) > 0) {
            a = b;
            b = r;
        }
        return b;
    }

    public int gcd2(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd3(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd4(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd5(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd6(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd7(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd8(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd9(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd10(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd11(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd12(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd13(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd14(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd15(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd16(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd17(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd18(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd19(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd20(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd21(int a, int b) {
        if (a < b) {","public class Main {
    public int gcd(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        int r;
        while ((r = a % b) > 0) {
            a = b;
            b = r;
        }
        return b;
    }

    public int gcd2(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd3(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd4(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd5(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd6(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd7(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd8(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd9(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd10(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd11(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd12(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd13(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd14(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd15(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd16(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd17(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd18(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd19(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd20(int a, int b) {
        if (a < b) {
            int t = a;
            a = b;
            b = t;
        }
        while (b!= 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public int gcd21(int a, int b) {
        if (a < b) {"
CodeGen,codenet,C++,Java,s772335512.java,"public class s772335512 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            b[i] = in.nextInt();
        }
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            c[i] = in.nextInt();
        }
        int[] d = new int[n];
        for (int i = 0; i < n; i++) {
            d[i] = in.nextInt();
        }
        int[] e = new int[n];
        for (int i = 0; i < n; i++) {
            e[i] = in.nextInt();
        }
        int[] f = new int[n];
        for (int i = 0; i < n; i++) {
            f[i] = in.nextInt();
        }
        int[] g = new int[n];
        for (int i = 0; i < n; i++) {
            g[i] = in.nextInt();
        }
        int[] h = new int[n];
        for (int i = 0; i < n; i++) {
            h[i] = in.nextInt();
        }
        int[] i = new int[n];
        for (int i = 0; i < n; i++) {
            i[i] = in.nextInt();
        }
        int[] j = new int[n];
        for (int i = 0; i < n; i++) {
            j[i] = in.nextInt();
        }
        int[] k = new int[n];
        for (int i = 0; i < n; i++) {
            k[i] = in.nextInt();
        }
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = in.nextInt();
        }
        int[] m = new int[n];
        for (int i = 0; i < n; i++) {
            m[i] = in.nextInt();
        }
        int[] n = new int[n];
        for (int i = 0; i < n; i++) {
            n[i] = in.nextInt();
        }
        int[] o = new int[n];
        for (int i = 0; i < n; i++) {
            o[i] = in.nextInt();
        }
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = in.nextInt();
        }
        int[] q = new int[n];
        for (int i = 0; i < n; i++) {
            q[i] = in.nextInt();
        }
        int[] r = new int[n];
        for (int i = 0; i < n; i++) {
            r[i] = in.nextInt();
        }
        int[] s = new int[n];
        for (int i = 0; i < n; i++) {
            s[i] = in.nextInt();
        }
        int[] t = new int[n];
        for (int i = 0; i < n; i++) {
            t[i] = in.nextInt();
        }
        int[] u = new int[n];
        for (int i = 0; i < n; i++) {
            u[i] = in.nextInt();
        }
        int[] v = new int[n];
        for (int i = 0; i < n; i++) {
            v[i] = in.nextInt();
        }
        int[] w = new int[n];
        for (int i = 0; i < n; i++) {
            w[i] = in.nextInt();
        }
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = in.nextInt();
        }
        int[] y = new int[n];
        for (int i = 0; i < n; i++) {
            y[i] = in.nextInt();
        }
        int[] z = new int[n];
        for (int i = 0; i < n; i++) {
            z[i] = in.nextInt();
        }
        int[] aa = new int[n];
        for (int i = 0; i < n; i++) {
            aa[i] = in.nextInt();
        }
        int[] bb = new int[n];
        for (int i = 0; i < n; i++) {
            bb[i] = in.nextInt();
        }
        int[] cc = new int[n];
        for (int i = 0; i < n; i++) {
            cc[i] = in.nextInt();
        }
        int[] dd = new int[n];
        for (int i = 0; i < n; i++) {
            dd[i] = in.nextInt();
        }
        int[] ee = new int[n];
        for (int i = 0; i < n; i++) {
            ee[i] = in.nextInt();
        }
        int[] ff = new int[n];
        for (int i = 0; i < n; i++) {
            ff[i] = in.nextInt();
        }
        int[] gg = new int[n];
        for (int i = 0; i < n; i++) {
            gg[i] = in.nextInt();
        }
        int[] hh = new int[n];
        for (int i = 0; i < n; i++) {
            hh[i] = in.nextInt();
        }
        int[] ii = new int[n];
        for (int i = 0; i < n; i++) {
            ii[i] = in.nextInt();
        }
        int[] jj = new int[n];
        for (int i = 0; i < n; i++) {
            jj[i] = in.nextInt();
        }
        int[] kk = new int[n];
        for (int i = 0; i < n; i++) {
            kk[i] = in.nextInt();
        }
        int[] ll = new int[n];
        for (int i = 0; i < n; i++) {
            ll[i] = in.nextInt();
        }
        int[] mm = new int[n];
        for (int i = 0; i < n; i++) {
            mm[i] = in.nextInt();
        }
        int[] nn = new int[n];
        for (int i = 0; i < n; i++) {
            nn[i] = in.nextInt();
        }
        int[]","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            b[i] = in.nextInt();
        }
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            c[i] = in.nextInt();
        }
        int[] d = new int[n];
        for (int i = 0; i < n; i++) {
            d[i] = in.nextInt();
        }
        int[] e = new int[n];
        for (int i = 0; i < n; i++) {
            e[i] = in.nextInt();
        }
        int[] f = new int[n];
        for (int i = 0; i < n; i++) {
            f[i] = in.nextInt();
        }
        int[] g = new int[n];
        for (int i = 0; i < n; i++) {
            g[i] = in.nextInt();
        }
        int[] h = new int[n];
        for (int i = 0; i < n; i++) {
            h[i] = in.nextInt();
        }
        int[] i = new int[n];
        for (int i = 0; i < n; i++) {
            i[i] = in.nextInt();
        }
        int[] j = new int[n];
        for (int i = 0; i < n; i++) {
            j[i] = in.nextInt();
        }
        int[] k = new int[n];
        for (int i = 0; i < n; i++) {
            k[i] = in.nextInt();
        }
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = in.nextInt();
        }
        int[] m = new int[n];
        for (int i = 0; i < n; i++) {
            m[i] = in.nextInt();
        }
        int[] n = new int[n];
        for (int i = 0; i < n; i++) {
            n[i] = in.nextInt();
        }
        int[] o = new int[n];
        for (int i = 0; i < n; i++) {
            o[i] = in.nextInt();
        }
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = in.nextInt();
        }
        int[] q = new int[n];
        for (int i = 0; i < n; i++) {
            q[i] = in.nextInt();
        }
        int[] r = new int[n];
        for (int i = 0; i < n; i++) {
            r[i] = in.nextInt();
        }
        int[] s = new int[n];
        for (int i = 0; i < n; i++) {
            s[i] = in.nextInt();
        }
        int[] t = new int[n];
        for (int i = 0; i < n; i++) {
            t[i] = in.nextInt();
        }
        int[] u = new int[n];
        for (int i = 0; i < n; i++) {
            u[i] = in.nextInt();
        }
        int[] v = new int[n];
        for (int i = 0; i < n; i++) {
            v[i] = in.nextInt();
        }
        int[] w = new int[n];
        for (int i = 0; i < n; i++) {
            w[i] = in.nextInt();
        }
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = in.nextInt();
        }
        int[] y = new int[n];
        for (int i = 0; i < n; i++) {
            y[i] = in.nextInt();
        }
        int[] z = new int[n];
        for (int i = 0; i < n; i++) {
            z[i] = in.nextInt();
        }
        int[] aa = new int[n];
        for (int i = 0; i < n; i++) {
            aa[i] = in.nextInt();
        }
        int[] bb = new int[n];
        for (int i = 0; i < n; i++) {
            bb[i] = in.nextInt();
        }
        int[] cc = new int[n];
        for (int i = 0; i < n; i++) {
            cc[i] = in.nextInt();
        }
        int[] dd = new int[n];
        for (int i = 0; i < n; i++) {
            dd[i] = in.nextInt();
        }
        int[] ee = new int[n];
        for (int i = 0; i < n; i++) {
            ee[i] = in.nextInt();
        }
        int[] ff = new int[n];
        for (int i = 0; i < n; i++) {
            ff[i] = in.nextInt();
        }
        int[] gg = new int[n];
        for (int i = 0; i < n; i++) {
            gg[i] = in.nextInt();
        }
        int[] hh = new int[n];
        for (int i = 0; i < n; i++) {
            hh[i] = in.nextInt();
        }
        int[] ii = new int[n];
        for (int i = 0; i < n; i++) {
            ii[i] = in.nextInt();
        }
        int[] jj = new int[n];
        for (int i = 0; i < n; i++) {
            jj[i] = in.nextInt();
        }
        int[] kk = new int[n];
        for (int i = 0; i < n; i++) {
            kk[i] = in.nextInt();
        }
        int[] ll = new int[n];
        for (int i = 0; i < n; i++) {
            ll[i] = in.nextInt();
        }
        int[] mm = new int[n];
        for (int i = 0; i < n; i++) {
            mm[i] = in.nextInt();
        }
        int[] nn = new int[n];
        for (int i = 0; i < n; i++) {
            nn[i] = in.nextInt();
        }
        int[]"
CodeGen,codenet,C++,Java,s941927127.java,"public class s941927127 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String W = in.next();
        in.close();
        
        sort(W.toCharArray());
        
        for (int i = 0; i < W.length(); i+=2) {
            if(W.charAt(i)!= W.charAt(i+1)) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String W = in.next();
        in.close();
        
        sort(W.toCharArray());
        
        for (int i = 0; i < W.length(); i+=2) {
            if(W.charAt(i)!= W.charAt(i+1)) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}"
CodeGen,codenet,C++,Java,s984540390.java,"public class s984540390 {
    public int getSum(int n) {
        int sum = 0;
        for (int i = 1; i <= n; i++) {
            if (i % 2 == 0) {
                sum += i;
            }
        }
        return sum;
    }
    public int getMax(int n) {
        int max = 0;
        for (int i = 1; i <= n; i++) {
            if (i % 2 == 0) {
                max = i;
            }
        }
        return max;
    }
    public int getMin(int n) {
        int min = 1;
        for (int i = 1; i <= n; i++) {
            if (i % 2 == 0) {
                min = i;
            }
        }
        return min;
    }
    public int getSum(int n) {
        int sum = 0;
        for (int i = 1; i <= n; i++) {
            if (i % 2 == 0) {
                sum += i;
            }
        }
        return sum;
    }
    public static void main(String[] args) {
        Solution s = new Solution();
        System.out.println(s.getSum(10));
    }
}","public class Main {
    public int getSum(int n) {
        int sum = 0;
        for (int i = 1; i <= n; i++) {
            if (i % 2 == 0) {
                sum += i;
            }
        }
        return sum;
    }
    public int getMax(int n) {
        int max = 0;
        for (int i = 1; i <= n; i++) {
            if (i % 2 == 0) {
                max = i;
            }
        }
        return max;
    }
    public int getMin(int n) {
        int min = 1;
        for (int i = 1; i <= n; i++) {
            if (i % 2 == 0) {
                min = i;
            }
        }
        return min;
    }
    public int getSum(int n) {
        int sum = 0;
        for (int i = 1; i <= n; i++) {
            if (i % 2 == 0) {
                sum += i;
            }
        }
        return sum;
    }
    public static void main(String[] args) {
        Solution s = new Solution();
        System.out.println(s.getSum(10));
    }
}"
CodeGen,codenet,C++,Java,s452437940.java,"public class s452437940 {
    public static void main(String[] args) {
        long long int a, b, x;
        Scanner sc = new Scanner(System.in);
        a = sc.nextLong();
        b = sc.nextLong();
        x = sc.nextLong();
        long long int s = (b / x - a / x);
        if (a % x == 0) {
            s++;
        }
        System.out.println(s);
    }
}","public class Main {
    public static void main(String[] args) {
        long long int a, b, x;
        Scanner sc = new Scanner(System.in);
        a = sc.nextLong();
        b = sc.nextLong();
        x = sc.nextLong();
        long long int s = (b / x - a / x);
        if (a % x == 0) {
            s++;
        }
        System.out.println(s);
    }
}"
CodeGen,codenet,C++,Java,s459892612.java,"public class s459892612 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a, b, c;
        a = in.nextInt();
        b = in.nextInt();
        c = in.nextInt();
        if (a + b >= c) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a, b, c;
        a = in.nextInt();
        b = in.nextInt();
        c = in.nextInt();
        if (a + b >= c) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
CodeGen,codenet,C++,Java,s847126533.java,"#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
class Solution {
public:
    int findMedianSortedArrays(int A[], int m, int B[], int n) {
        int i = 0, j = 0, k = 0;
        int l = 0, r = 0;
        int sum = 0;
        int len = m + n;
        while (i < m && j < n) {
            if (A[i] < B[j]) {
                sum += A[i++];
            } else {
                sum += B[j++];
            }
        }
        while (i < m) {
            sum += A[i++];
        }
        while (j < n) {
            sum += B[j++];
        }
        if (len % 2 == 1) {
            return sum / len + 1;
        } else {
            return sum / len;
        }
    }
};

int main()
{
  int m,n;
  for(;cin>>m>>n;)
    {
      int A[m],B[n];
      for(int i=0;i<m;i++)
	{
	  cin>>A[i];
	}
      for(int i=0;i<n;i++)
	{
	  cin>>B[i];
	}
      Solution sol;
      cout<<sol.findMedianSortedArrays(A,m,B,n)<<endl;
    }
}","#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
class Solution {
public:
    int findMedianSortedArrays(int A[], int m, int B[], int n) {
        int i = 0, j = 0, k = 0;
        int l = 0, r = 0;
        int sum = 0;
        int len = m + n;
        while (i < m && j < n) {
            if (A[i] < B[j]) {
                sum += A[i++];
            } else {
                sum += B[j++];
            }
        }
        while (i < m) {
            sum += A[i++];
        }
        while (j < n) {
            sum += B[j++];
        }
        if (len % 2 == 1) {
            return sum / len + 1;
        } else {
            return sum / len;
        }
    }
};

int main()
{
  int m,n;
  for(;cin>>m>>n;)
    {
      int A[m],B[n];
      for(int i=0;i<m;i++)
	{
	  cin>>A[i];
	}
      for(int i=0;i<n;i++)
	{
	  cin>>B[i];
	}
      Solution sol;
      cout<<sol.findMedianSortedArrays(A,m,B,n)<<endl;
    }
}"
CodeGen,codenet,C++,Java,s615507008.java,"public class s615507008 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int M = in.nextInt();
        int[] T = new int[N];
        for (int T_i = 0; T_i < N; T_i++) {
            T[T_i] = in.nextInt();
        }
        int[] P = new int[M];
        int[] X = new int[M];
        for (int i = 0; i < M; i++) {
            P[i] = in.nextInt();
            X[i] = in.nextInt();
        }
        solve(N, T, M, P, X);
    }
    
    public static void solve(int N, int[] T, int M, int[] P, int[] X) {
        int[] ans = new int[N];
        for (int i = 0; i < M; i++) {
            int j = P[i] - 1;
            if (j < 0) {
                ans[i] = X[i];
            } else {
                ans[i] = T[j];
            }
        }
        for (int i = 0; i < N; i++) {
            cout.print(ans[i]);
        }
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int M = in.nextInt();
        int[] T = new int[N];
        for (int T_i = 0; T_i < N; T_i++) {
            T[T_i] = in.nextInt();
        }
        int[] P = new int[M];
        int[] X = new int[M];
        for (int i = 0; i < M; i++) {
            P[i] = in.nextInt();
            X[i] = in.nextInt();
        }
        solve(N, T, M, P, X);
    }
    
    public static void solve(int N, int[] T, int M, int[] P, int[] X) {
        int[] ans = new int[N];
        for (int i = 0; i < M; i++) {
            int j = P[i] - 1;
            if (j < 0) {
                ans[i] = X[i];
            } else {
                ans[i] = T[j];
            }
        }
        for (int i = 0; i < N; i++) {
            cout.print(ans[i]);
        }
    }
}"
CodeGen,codenet,C++,Java,s465977291.java,"public class s465977291 {
	public static void main(String[] args) {
		int n,d;
		Scanner in = new Scanner(System.in);
		n = in.nextInt();
		d = in.nextInt();
		double a = d*2+1;
		System.out.println(Math.ceil(n/a));
	}
}","public class Main {
	public static void main(String[] args) {
		int n,d;
		Scanner in = new Scanner(System.in);
		n = in.nextInt();
		d = in.nextInt();
		double a = d*2+1;
		System.out.println(Math.ceil(n/a));
	}
}"
CodeGen,codenet,C++,Java,s582643375.java,"public class s582643375 {
  public static void main(String[] args) {
    int X, Y;
    Scanner sc = new Scanner(System.in);
    sc.nextInt();
    sc.nextInt();
    if((X+Y) % 3!= 0) {
      System.out.println(0);
      return;
    }
    int n = (X+Y) / 3+1;
    int k = 2*(n-1) - Y + 1; // y = 2xより最も上にくる点からどれだけ離れているか。
    System.out.println(C(n-1, k-1));
  }
}","public class Main {
  public static void main(String[] args) {
    int X, Y;
    Scanner sc = new Scanner(System.in);
    sc.nextInt();
    sc.nextInt();
    if((X+Y) % 3!= 0) {
      System.out.println(0);
      return;
    }
    int n = (X+Y) / 3+1;
    int k = 2*(n-1) - Y + 1; // y = 2xより最も上にくる点からどれだけ離れているか。
    System.out.println(C(n-1, k-1));
  }
}"
CodeGen,codenet,C++,Java,s049366196.java,"public class s049366196 {
    public static void main(String[] args) {
        int N;
        Scanner in = new Scanner(System.in);
        N = in.nextInt();
        int ans = 1;
        for (int i = 2; i <= N; i++) {
            if (isPrime(i)) {
                int NN = N;
                int cnt = 0;
                while (NN) {
                    cnt += NN / i;
                    NN /= i;
                }
                ans *= cnt + 1;
                ans %= 1000000007;
            }
        }
        System.out.println(ans);
    }

    private static boolean isPrime(long n) {
        if (n < 2) return false;
        if (n == 2) return true;
        if (n % 2 == 0) return false;
        long sq = (long)Math.sqrt(n);
        for (long i = 3; i <= sq; i += 2) {
            if (n % i == 0) return false;
        }
        return true;
    }
}","public class Main {
    public static void main(String[] args) {
        int N;
        Scanner in = new Scanner(System.in);
        N = in.nextInt();
        int ans = 1;
        for (int i = 2; i <= N; i++) {
            if (isPrime(i)) {
                int NN = N;
                int cnt = 0;
                while (NN) {
                    cnt += NN / i;
                    NN /= i;
                }
                ans *= cnt + 1;
                ans %= 1000000007;
            }
        }
        System.out.println(ans);
    }

    private static boolean isPrime(long n) {
        if (n < 2) return false;
        if (n == 2) return true;
        if (n % 2 == 0) return false;
        long sq = (long)Math.sqrt(n);
        for (long i = 3; i <= sq; i += 2) {
            if (n % i == 0) return false;
        }
        return true;
    }
}"
CodeGen,codenet,C++,Java,s410514868.java,"public class s410514868 {
    public int minCut(String s) {
        int n = s.length();
        int[] dp = new int[n + 1];
        for (int i = 0; i < n; i++) {
            dp[i + 1] = dp[i] + 1;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < i; j++) {
                if (s.charAt(i) == s.charAt(j) && dp[i] < dp[j] + 1) {
                    dp[i] = dp[j] + 1;
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (dp[i] > k) {
                ans = Math.min(ans, dp[i] - k);
            }
        }
        return ans;
    }
}","public class Main {
    public int minCut(String s) {
        int n = s.length();
        int[] dp = new int[n + 1];
        for (int i = 0; i < n; i++) {
            dp[i + 1] = dp[i] + 1;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < i; j++) {
                if (s.charAt(i) == s.charAt(j) && dp[i] < dp[j] + 1) {
                    dp[i] = dp[j] + 1;
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (dp[i] > k) {
                ans = Math.min(ans, dp[i] - k);
            }
        }
        return ans;
    }
}"
CodeGen,codenet,C++,Java,s275513165.java,"public class s275513165 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String str = in.next();
        if (str.substring(2, 3).equals(str.substring(4, 5)) && str.substring(2, 3).equals(str.substring(4, 5))) System.out.println(""Yes"");
        else System.out.println(""No"");
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String str = in.next();
        if (str.substring(2, 3).equals(str.substring(4, 5)) && str.substring(2, 3).equals(str.substring(4, 5))) System.out.println(""Yes"");
        else System.out.println(""No"");
    }
}"
CodeGen,codenet,C++,Java,s314711832.java,"import java.util.Scanner;
import java.util.Vector;
import java.util.Arrays;

public class s314711832 {
  public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
    int V, E, r;
    V = in.nextInt();
    E = in.nextInt();
    r = in.nextInt();
    
    Vector<Edge> edges = new Vector<Edge>();
    
    for (int i = 0; i < E; i++) {
      int source, target, distance;
      source = in.nextInt();
      target = in.nextInt();
      distance = in.nextInt();
      Edge edge = new Edge(source, target, distance);
      edges.add(edge);
    }
    
    //initialize distances array
    int[] distances = new int[V];
    Arrays.fill(distances, INF);
    distances[r] = 0;
    
    for (int i = 1; i < V; i++) {
      for (int j=0; j< V; j++) {
	distances[j] = MIN(distances[j], distances[j]);
      }
      
      for (Edge edge : edges) {
	distances[edge.target] = MIN(distances[edge.source] + edge.weight, distances[edge.target]);
      }
      
      boolean same = true;
      for (int j=0; j< V; j++) {
	if (distances[j]!= distances[j]) {
	  same = false;
	  break;
	}
      }
      
      if (same) break;
    }
    
    for (int i = 0; i < V; i++) {
      if (distances[i] == INF) {
	System.out.println(""INF"");
      } else {
	System.out.println(distances[i]);
      }
    }
  }
}

class Edge {
  int source;
  int target;
  int weight;
  
  public Edge(int source, int target, int weight) {
    this.source = source;
    this.target = target;
    this.weight = weight;
  }
}","import java.util.Scanner;
import java.util.Vector;
import java.util.Arrays;

public class Main {
  public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
    int V, E, r;
    V = in.nextInt();
    E = in.nextInt();
    r = in.nextInt();
    
    Vector<Edge> edges = new Vector<Edge>();
    
    for (int i = 0; i < E; i++) {
      int source, target, distance;
      source = in.nextInt();
      target = in.nextInt();
      distance = in.nextInt();
      Edge edge = new Edge(source, target, distance);
      edges.add(edge);
    }
    
    //initialize distances array
    int[] distances = new int[V];
    Arrays.fill(distances, INF);
    distances[r] = 0;
    
    for (int i = 1; i < V; i++) {
      for (int j=0; j< V; j++) {
	distances[j] = MIN(distances[j], distances[j]);
      }
      
      for (Edge edge : edges) {
	distances[edge.target] = MIN(distances[edge.source] + edge.weight, distances[edge.target]);
      }
      
      boolean same = true;
      for (int j=0; j< V; j++) {
	if (distances[j]!= distances[j]) {
	  same = false;
	  break;
	}
      }
      
      if (same) break;
    }
    
    for (int i = 0; i < V; i++) {
      if (distances[i] == INF) {
	System.out.println(""INF"");
      } else {
	System.out.println(distances[i]);
      }
    }
  }
}

class Edge {
  int source;
  int target;
  int weight;
  
  public Edge(int source, int target, int weight) {
    this.source = source;
    this.target = target;
    this.weight = weight;
  }
}"
CodeGen,codenet,C++,Java,s568362035.java,"public class s568362035 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int Q = in.nextInt();
        int[] a = new int[Q + 1];
        for (int i = 1; i <= Q; i++) {
            a[i] = in.nextInt();
        }
        int[] b = new int[m];
        boolean[] vis = new boolean[n + 1];
        int[] cnt = new int[n + 1];
        for (int i = 0; i < m; i++) {
            b[i] = in.nextInt();
            vis[b[i]] = true;
        }
        for (int i = m - 1; i >= 0; i--) {
            if (!vis[b[i]]) {
                b[i] = in.nextInt();
                vis[b[i]] = true;
            }
        }
        for (int i = 1; i <= m; i++) {
            int t = b[i];
            if (cnt[t - 1] > 0) {
                --cnt[t - 1];
                ++cnt[t];
                vis[t] = true;
            } else if (!vis[t]) {
                System.out.println(""No"");
                return;
            }
        }
        boolean flag = true;
        int l;
        for (l = 0; cnt[l] == 0; ++l);
        for (int i = l + 1; i < m; ++i) {
            flag &= b[i] < b[i + 1];
        }
        System.out.println(flag? ""Yes"" : ""No"");
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int Q = in.nextInt();
        int[] a = new int[Q + 1];
        for (int i = 1; i <= Q; i++) {
            a[i] = in.nextInt();
        }
        int[] b = new int[m];
        boolean[] vis = new boolean[n + 1];
        int[] cnt = new int[n + 1];
        for (int i = 0; i < m; i++) {
            b[i] = in.nextInt();
            vis[b[i]] = true;
        }
        for (int i = m - 1; i >= 0; i--) {
            if (!vis[b[i]]) {
                b[i] = in.nextInt();
                vis[b[i]] = true;
            }
        }
        for (int i = 1; i <= m; i++) {
            int t = b[i];
            if (cnt[t - 1] > 0) {
                --cnt[t - 1];
                ++cnt[t];
                vis[t] = true;
            } else if (!vis[t]) {
                System.out.println(""No"");
                return;
            }
        }
        boolean flag = true;
        int l;
        for (l = 0; cnt[l] == 0; ++l);
        for (int i = l + 1; i < m; ++i) {
            flag &= b[i] < b[i + 1];
        }
        System.out.println(flag? ""Yes"" : ""No"");
    }
}"
CodeGen,codenet,C++,Java,s102850254.java,"import java.util.Scanner;
import java.io.*;

public class s102850254 {
    public static void main(String[] args) throws IOException {
        Scanner in = new Scanner(System.in);
        int d = in.nextInt();
        int n = in.nextInt();
        in.nextLine();
        String[][] map = new String[n+2][n+2];
        for(int i=0;i<=n+1;i++){
            map[i] = in.nextLine().split("" "");
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                map[i][j] = map[i][j].charAt(0);
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i","import java.util.Scanner;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        Scanner in = new Scanner(System.in);
        int d = in.nextInt();
        int n = in.nextInt();
        in.nextLine();
        String[][] map = new String[n+2][n+2];
        for(int i=0;i<=n+1;i++){
            map[i] = in.nextLine().split("" "");
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                map[i][j] = map[i][j].charAt(0);
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i][j] = ""."";
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                System.out.print(map[i][j]);
            }
            System.out.println();
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<map[i].length-1;j++){
                if(map[i][j].equals(""#"")) map[i"
CodeGen,codenet,C++,Java,s275739084.java,"public class s275739084 {
    public static void main(String[] args) {
        int A, B;
        Scanner in = new Scanner(System.in);
        A = in.nextInt();
        B = in.nextInt();
        int C = A + B;
        if (A % 3!= 0 && B % 3!= 0 && C % 3!= 0) {
            System.out.println(""Impossible"");
        } else {
            System.out.println(""Possible"");
        }
    }
}","public class Main {
    public static void main(String[] args) {
        int A, B;
        Scanner in = new Scanner(System.in);
        A = in.nextInt();
        B = in.nextInt();
        int C = A + B;
        if (A % 3!= 0 && B % 3!= 0 && C % 3!= 0) {
            System.out.println(""Impossible"");
        } else {
            System.out.println(""Possible"");
        }
    }
}"
CodeGen,codenet,C++,Java,s786032937.java,"//Solution:
//
//	1. Use a queue to store the number of the numbers that are less than the target number.
//	2. Use a map to store the number of the numbers that are less than the target number.
//	3. Use a vector to store the number of the numbers that are less than the target number.
//	4. Use a vector to store the number of the numbers that are less than the target number.
//	5. Use a vector to store the number of the numbers that are less than the target number.
//	6. Use a vector to store the number of the numbers that are less than the target number.
//	7. Use a vector to store the number of the numbers that are less than the target number.
//	8. Use a vector to store the number of the numbers that are less than the target number.
//	9. Use a vector to store the number of the numbers that are less than the target number.
//	10. Use a vector to store the number of the numbers that are less than the target number.
//	11. Use a vector to store the number of the numbers that are less than the target number.
//	12. Use a vector to store the number of the numbers that are less than the target number.
//	13. Use a vector to store the number of the numbers that are less than the target number.
//	14. Use a vector to store the number of the numbers that are less than the target number.
//	15. Use a vector to store the number of the numbers that are less than the target number.
//	16. Use a vector to store the number of the numbers that are less than the target number.
//	17. Use a vector to store the number of the numbers that are less than the target number.
//	18. Use a vector to store the number of the numbers that are less than the target number.
//	19. Use a vector to store the number of the numbers that are less than the target number.
//	20. Use a vector to store the number of the numbers that are less than the target number.
//	21. Use a vector to store the number of the numbers that are less than the target number.
//	22. Use a vector to store the number of the numbers that are less than the target number.
//	23. Use a vector to store the number of the numbers that are less than the target number.
//	24. Use a vector to store the number of the numbers that are less than the target number.
//	25. Use a vector to store the number of the numbers that are less than the target number.
//	26. Use a vector to store the number of the numbers that are less than the target number.
//	27. Use a vector to store the number of the numbers that are less than the target number.
//	28. Use a vector to store the number of the numbers that are less than the target number.
//	29. Use a vector to store the number of the numbers that are less than the target number.
//	30. Use a vector to store the number of the numbers that are less than the target number.
//	31. Use a vector to store the number of the numbers that are less than the target number.
//	32. Use a vector to store the number of the numbers that are less than the target number.
//	33. Use a vector to store the number of the numbers that are less than the target number.
//	34. Use a vector to store the number of the numbers that are less than the target number.
//	35. Use a vector to store the number of the numbers that are less than the target number.
//	36. Use a vector to store the number of the numbers that are less than the target number.
//	37. Use a vector to store the number of the numbers that are less than the target number.
//	38. Use a vector to store the number of the numbers that are less than the target number.
//	39. Use a vector to store the number of the numbers that are less than the target number.
//	40. Use a vector to store the number of the numbers that are less than the target number.
//	41. Use a vector to store the number of the numbers that are less than the target number.
//	42. Use a vector to store the number of the numbers that are less than the target number.
//	43. Use a vector to store the number of the numbers that are less than the target number.
//	44. Use a vector to store the number of the numbers that are less than the target number.
//	45. Use a vector to store the number of the numbers that are less than the target number.
//	46. Use a vector to store the number of the numbers that are less than the target number.
//	47. Use a vector to store the number of the numbers that are less than the target number.
//	48. Use a vector to store the number of the numbers that are less than the target number.
//	49. Use a vector to store the number of the numbers that are less than the target number.
//	50. Use a vector to store the number of the numbers that are less than the target number.
//	51. Use a vector to store the number of the numbers that are less than the target number.
//	52. Use a vector to store the number of the numbers that are less than the target number.
//	53. Use a vector to store the number of the numbers that are less than the target number.
//	54. Use a vector to store the number of the numbers that are less than the target number.
//	55. Use a vector to store the number of the numbers that are less than the target number.
//	56. Use a vector to store the number of the numbers that are less than the target number.
//	57. Use a vector to store the number of the numbers that are less than the target number.
//	58. Use a vector to store the number of the numbers that are less than the target number.
//	59. Use a vector to store the number of the numbers that are less than the target number.
//	60. Use a vector to store the number of the numbers that are less than the target number.
//	61. Use a vector to store the number of the numbers that are less than the target number.
//	62. Use a vector to store the number of the numbers that are less than the target number.
//	63. Use a vector to store the number of the numbers that are less than the target number.
//	64. Use a vector to store the number of the numbers that are less than the target number.
//	65. Use a vector to store the number of the numbers that are less than the target number.
//	66. Use a vector to store the number of the numbers that are less than the target number.
//	67. Use a vector to store the number of the numbers that are less than the target number.
//	68. Use a vector to store the number of the numbers that are less than the target number.
//	69. Use a vector to store the number of the numbers that are less than the target number.
//	70. Use a vector to store the number of the numbers that are less than the target number.
//	71. Use a vector to store the number of the numbers that are less than the target number.
//	72. Use a vector to store the number of the numbers that are less than the target number.
//	73. Use a vector to store the number of the numbers that are less than the target number.
//	74. Use a vector to store the number of the numbers that are less than the target number.
//	75. Use a vector to store the number of the numbers that are less than the target number.
//	76. Use a vector to store the number of the numbers that are less than the target number.
//	77. Use a vector to store the number of the numbers that are less than the target number.
//	78. Use a vector to store the number of the numbers that are less than the target number.
//	79. Use a vector to store the number of the numbers that are less than the target number.
//	80. Use a vector to store the number of the numbers that are less than the target number.
//	81. Use a vector to store the number of the numbers that are less than the target number.
//	82. Use a vector to store the number of the numbers that are less than the target number.
//	83. Use a vector to store the number of the numbers that are less than the target number.
//	84. Use a vector to store the number of the numbers that are less than the target number","//Solution:
//
//	1. Use a queue to store the number of the numbers that are less than the target number.
//	2. Use a map to store the number of the numbers that are less than the target number.
//	3. Use a vector to store the number of the numbers that are less than the target number.
//	4. Use a vector to store the number of the numbers that are less than the target number.
//	5. Use a vector to store the number of the numbers that are less than the target number.
//	6. Use a vector to store the number of the numbers that are less than the target number.
//	7. Use a vector to store the number of the numbers that are less than the target number.
//	8. Use a vector to store the number of the numbers that are less than the target number.
//	9. Use a vector to store the number of the numbers that are less than the target number.
//	10. Use a vector to store the number of the numbers that are less than the target number.
//	11. Use a vector to store the number of the numbers that are less than the target number.
//	12. Use a vector to store the number of the numbers that are less than the target number.
//	13. Use a vector to store the number of the numbers that are less than the target number.
//	14. Use a vector to store the number of the numbers that are less than the target number.
//	15. Use a vector to store the number of the numbers that are less than the target number.
//	16. Use a vector to store the number of the numbers that are less than the target number.
//	17. Use a vector to store the number of the numbers that are less than the target number.
//	18. Use a vector to store the number of the numbers that are less than the target number.
//	19. Use a vector to store the number of the numbers that are less than the target number.
//	20. Use a vector to store the number of the numbers that are less than the target number.
//	21. Use a vector to store the number of the numbers that are less than the target number.
//	22. Use a vector to store the number of the numbers that are less than the target number.
//	23. Use a vector to store the number of the numbers that are less than the target number.
//	24. Use a vector to store the number of the numbers that are less than the target number.
//	25. Use a vector to store the number of the numbers that are less than the target number.
//	26. Use a vector to store the number of the numbers that are less than the target number.
//	27. Use a vector to store the number of the numbers that are less than the target number.
//	28. Use a vector to store the number of the numbers that are less than the target number.
//	29. Use a vector to store the number of the numbers that are less than the target number.
//	30. Use a vector to store the number of the numbers that are less than the target number.
//	31. Use a vector to store the number of the numbers that are less than the target number.
//	32. Use a vector to store the number of the numbers that are less than the target number.
//	33. Use a vector to store the number of the numbers that are less than the target number.
//	34. Use a vector to store the number of the numbers that are less than the target number.
//	35. Use a vector to store the number of the numbers that are less than the target number.
//	36. Use a vector to store the number of the numbers that are less than the target number.
//	37. Use a vector to store the number of the numbers that are less than the target number.
//	38. Use a vector to store the number of the numbers that are less than the target number.
//	39. Use a vector to store the number of the numbers that are less than the target number.
//	40. Use a vector to store the number of the numbers that are less than the target number.
//	41. Use a vector to store the number of the numbers that are less than the target number.
//	42. Use a vector to store the number of the numbers that are less than the target number.
//	43. Use a vector to store the number of the numbers that are less than the target number.
//	44. Use a vector to store the number of the numbers that are less than the target number.
//	45. Use a vector to store the number of the numbers that are less than the target number.
//	46. Use a vector to store the number of the numbers that are less than the target number.
//	47. Use a vector to store the number of the numbers that are less than the target number.
//	48. Use a vector to store the number of the numbers that are less than the target number.
//	49. Use a vector to store the number of the numbers that are less than the target number.
//	50. Use a vector to store the number of the numbers that are less than the target number.
//	51. Use a vector to store the number of the numbers that are less than the target number.
//	52. Use a vector to store the number of the numbers that are less than the target number.
//	53. Use a vector to store the number of the numbers that are less than the target number.
//	54. Use a vector to store the number of the numbers that are less than the target number.
//	55. Use a vector to store the number of the numbers that are less than the target number.
//	56. Use a vector to store the number of the numbers that are less than the target number.
//	57. Use a vector to store the number of the numbers that are less than the target number.
//	58. Use a vector to store the number of the numbers that are less than the target number.
//	59. Use a vector to store the number of the numbers that are less than the target number.
//	60. Use a vector to store the number of the numbers that are less than the target number.
//	61. Use a vector to store the number of the numbers that are less than the target number.
//	62. Use a vector to store the number of the numbers that are less than the target number.
//	63. Use a vector to store the number of the numbers that are less than the target number.
//	64. Use a vector to store the number of the numbers that are less than the target number.
//	65. Use a vector to store the number of the numbers that are less than the target number.
//	66. Use a vector to store the number of the numbers that are less than the target number.
//	67. Use a vector to store the number of the numbers that are less than the target number.
//	68. Use a vector to store the number of the numbers that are less than the target number.
//	69. Use a vector to store the number of the numbers that are less than the target number.
//	70. Use a vector to store the number of the numbers that are less than the target number.
//	71. Use a vector to store the number of the numbers that are less than the target number.
//	72. Use a vector to store the number of the numbers that are less than the target number.
//	73. Use a vector to store the number of the numbers that are less than the target number.
//	74. Use a vector to store the number of the numbers that are less than the target number.
//	75. Use a vector to store the number of the numbers that are less than the target number.
//	76. Use a vector to store the number of the numbers that are less than the target number.
//	77. Use a vector to store the number of the numbers that are less than the target number.
//	78. Use a vector to store the number of the numbers that are less than the target number.
//	79. Use a vector to store the number of the numbers that are less than the target number.
//	80. Use a vector to store the number of the numbers that are less than the target number.
//	81. Use a vector to store the number of the numbers that are less than the target number.
//	82. Use a vector to store the number of the numbers that are less than the target number.
//	83. Use a vector to store the number of the numbers that are less than the target number.
//	84. Use a vector to store the number of the numbers that are less than the target number"
CodeGen,codenet,C++,Java,s978355948.java,"public class s978355948 {
    public int findPeakElement(int[] nums) {
        int n = nums.length;
        if (n == 1) return 0;
        if (n == 2) return 1;
        int l = 0, r = n - 1;
        while (l < r) {
            int m = l + (r - l) / 2;
            if (nums[m] < nums[m + 1]) {
                l = m + 1;
            } else {
                r = m;
            }
        }
        return l;
    }
}","public class Main {
    public int findPeakElement(int[] nums) {
        int n = nums.length;
        if (n == 1) return 0;
        if (n == 2) return 1;
        int l = 0, r = n - 1;
        while (l < r) {
            int m = l + (r - l) / 2;
            if (nums[m] < nums[m + 1]) {
                l = m + 1;
            } else {
                r = m;
            }
        }
        return l;
    }
}"
CodeGen,codenet,C++,Java,s150958471.java,"public class s150958471 {
    public int minNumberOfBusesToDestination(int[] A, int[] B) {
        int n = A.length;
        int[] dp = new int[n];
        for (int i = 0; i < n; i++) {
            dp[i] = Integer.MAX_VALUE;
        }
        dp[0] = 0;
        for (int i = 1; i < n; i++) {
            dp[i] = Math.min(dp[i - 1], dp[i - 1] + A[i - 1]);
        }
        for (int i = 0; i < n; i++) {
            dp[i] = Math.min(dp[i], dp[i] + B[i]);
        }
        return dp[n - 1];
    }
}","public class Main {
    public int minNumberOfBusesToDestination(int[] A, int[] B) {
        int n = A.length;
        int[] dp = new int[n];
        for (int i = 0; i < n; i++) {
            dp[i] = Integer.MAX_VALUE;
        }
        dp[0] = 0;
        for (int i = 1; i < n; i++) {
            dp[i] = Math.min(dp[i - 1], dp[i - 1] + A[i - 1]);
        }
        for (int i = 0; i < n; i++) {
            dp[i] = Math.min(dp[i], dp[i] + B[i]);
        }
        return dp[n - 1];
    }
}"
CodeGen,codenet,C++,Java,s934757053.java,"public class s934757053 {
    public int findLengthOfLCIS(int[] nums) {
        int len = nums.length;
        int[] dp = new int[len];
        int max = 0;
        for (int i = 0; i < len; i++) {
            dp[i] = 1;
            for (int j = 0; j < i; j++) {
                if (nums[i] > nums[j]) {
                    dp[i] = Math.max(dp[i], dp[j] + 1);
                }
            }
            max = Math.max(max, dp[i]);
        }
        return max;
    }
}","public class Main {
    public int findLengthOfLCIS(int[] nums) {
        int len = nums.length;
        int[] dp = new int[len];
        int max = 0;
        for (int i = 0; i < len; i++) {
            dp[i] = 1;
            for (int j = 0; j < i; j++) {
                if (nums[i] > nums[j]) {
                    dp[i] = Math.max(dp[i], dp[j] + 1);
                }
            }
            max = Math.max(max, dp[i]);
        }
        return max;
    }
}"
CodeGen,codenet,C++,Java,s550008428.java,"public class s550008428 {
    public int divide(int dividend, int divisor) {
        if (dividend == 0) {
            return 0;
        }
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        if (isNegative) {
            dividend = -dividend;
            divisor = -divisor;
        }
        int res = 0;
        while (dividend >= divisor) {
            int tmp = divisor;
            int count = 0;
            while (dividend >= tmp) {
                dividend -= tmp;
                count++;
                tmp <<= 1;
            }
            res += count;
        }
        return isNegative? -res : res;
    }
}","public class Main {
    public int divide(int dividend, int divisor) {
        if (dividend == 0) {
            return 0;
        }
        if (divisor == 0) {
            return Integer.MAX_VALUE;
        }
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        boolean isNegative = (dividend < 0) ^ (divisor < 0);
        if (isNegative) {
            dividend = -dividend;
            divisor = -divisor;
        }
        int res = 0;
        while (dividend >= divisor) {
            int tmp = divisor;
            int count = 0;
            while (dividend >= tmp) {
                dividend -= tmp;
                count++;
                tmp <<= 1;
            }
            res += count;
        }
        return isNegative? -res : res;
    }
}"
CodeGen,codenet,C++,Java,s907227314.java,"public class s907227314 {
    public int lengthOfLongestSubstring(String s) {
        int a = 0, z = 0;
        int max = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == 'A') {
                a = i;
            } else if (s.charAt(i) == 'Z') {
                z = i;
            }
            max = Math.max(max, i - a + 1);
        }
        return max;
    }
}","public class Main {
    public int lengthOfLongestSubstring(String s) {
        int a = 0, z = 0;
        int max = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == 'A') {
                a = i;
            } else if (s.charAt(i) == 'Z') {
                z = i;
            }
            max = Math.max(max, i - a + 1);
        }
        return max;
    }
}"
