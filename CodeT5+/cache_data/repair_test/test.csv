model,dataset,source,target,file,invalid,valid
StarCoder,avatar,Python,Java,codeforces_621_A.java,"import java.util.*;
public class codeforces_621_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] lst = new int[n];
        for (int i = 0; i < n; i++) {
            lst[i] = sc.nextInt();
        }
        Arrays.sort(lst);
        Arrays.sort(lst, Collections.reverseOrder());
        int od = 0;
        for (int i = 0; i < n; i++) {
            if ((lst[i] & 1) == 1) {
                od++;
            }
        }
        int sum = 0;
        boolean ok = false;
        for (int i = 0; i < n; i++) {
            if ((lst[i] & 1) == 0) {
                if (ok || od > 1) {
                    sum += lst[i];
                    od--;
                    ok =!ok;
                }
            } else {
                sum += lst[i];
            }
        }
        System.out.println(sum);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Long[] lst = new Long[n];
        for (int i = 0; i < n; i++) {
            lst[i] = sc.nextLong();
        }
        Arrays.sort(lst);
        Arrays.sort(lst, Collections.reverseOrder());
        int od = 0;
        for (int i = 0; i < n; i++) {
            if ((lst[i] & 1) == 1) {
                od++;
            }
        }
        long sum = 0;
        boolean ok = false;
        for (int i = 0; i < n; i++) {
            if ((lst[i] % 2) != 0) {
                if (ok || od > 1) {
                    sum += lst[i];
                    od--;
                    ok =!ok;
                }
            } else {
                sum += lst[i];
            }
        }
        System.out.println(sum);
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC010_B.java,"import java.util.*;
public class atcoder_AGC010_B {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int [ ] a = new int [ n ] ;
        for ( int i = 0 ; i < n ; i ++ )
            a [ i ] = sc.nextInt ( ) ;
        if ( sum ( a ) % ( n * ( n + 1 ) / 2 )!= 0 )
            System.out.println ( ""NO"" ) ;
        else
        {
            int k = sum ( a ) / ( n * ( n + 1 ) / 2 ) ;
            a [ n ] = a [ 0 ] ;
            if ( sum ( new int [ n ] { k - i + j % n for ( int i = 1 ; i < n ; i ++ ) for ( int j = 0 ; j < i ; j ++ ) } )!= 0 || sum ( new int [ n ] { k - i + j / n >= 0 for ( int i = 1 ; i < n ; i ++ ) for ( int j = 0 ; j < i ; j ++ ) } )!= n )
                System.out.println ( ""NO"" ) ;
            else
                System.out.println ( ""YES"" ) ;
        }
    }
    public static int sum ( int [ ] a )
    {
        int s = 0 ;
        for ( int i : a )
            s += i ;
        return s ;
    }
}
","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int [ ] a = new int [ n + 1] ;
        for ( int i = 0 ; i < n ; i ++ )
            a [ i ] = sc.nextInt ( ) ;
        if ( sum ( a ) % ( n * ( n + 1 ) / 2 )!= 0 )
            System.out.println ( ""NO"" ) ;
        else
        {
            long k = sum ( a ) / ( n * ( n + 1 ) / 2 ) ;
            a [ n ] = a [ 0 ] ;
            long sum1 = 0;
            long sum2 = 0;
            for (int i = 1; i <= n; i++) {
                sum1 += (k - a[i] + a[i-1]) % n;
                sum2 += (k - a[i] + a[i-1]) / n >= 0 ? 1 : 0;
            }
            if (sum1 != 0 || sum2 != n) 
                System.out.println ( ""NO"" ) ;
            else
                System.out.println ( ""YES"" ) ;
        }
    }
    public static long sum ( int [ ] a )
    {
        long s = 0 ;
        for ( int i : a )
            s += i ;
        return s ;
    }
}
"
StarCoder,avatar,Python,Java,codeforces_421_A.java,"n, a, b = input().split()
lista = input().split()
listb = input().split()
for k in range(n):
    if k + 1 in lista:
        print(1, end="" "")
    else:
        print(2, end="" "")","n, a, b = input().split()
lista = input().split()
listb = input().split()
for k in range(n):
    if k + 1 in lista:
        print(1, end="" "")
    else:
        print(2, end="" "")
"
StarCoder,avatar,Python,Java,codeforces_672_A.java,"import java.util.*;
public class codeforces_672_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] li = new int[369];
        int ind = 0;
        for(int i = 1; i <= 371; i++){
            int p = i, q = i;
            int count = 0;
            while(p!= 0){
                p /= 10;
                count++;
            }
            if(count == 1){
                li[ind++] = i;
            }
            if(count == 2){
                int[] temp = new int[count];
                while(q!= 0){
                    int x = q % 10;
                    q /= 10;
                    temp[--count] = x;
                }
                for(int j = 0; j < count; j++){
                    li[ind++] = temp[j];
                }
            }
            if(count == 3){
                int[] temp = new int[count];
                while(q!= 0){
                    int x = q % 10;
                    q /= 10;
                    temp[--count] = x;
                }
                for(int j = 0; j < count; j++){
                    li[ind++] = temp[j];
                }
            }
        }
        li[--ind] = 0;
        li[--ind] = 0;
        System.out.println(li[n - 1]);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] li = new int[369];
        int ind = 0;
        for(int i = 1; i <= 371; i++){
            int p = i, q = i;
            int count = 0;
            while(p!= 0){
                p /= 10;
                count++;
            }
            if(count == 1){
                li[ind++] = i;
            }
            if(count == 2){
                int[] temp = new int[count];
                while(q!= 0){
                    int x = q % 10;
                    q /= 10;
                    temp[--count] = x;
                }
                for(int j = 0; j < count; j++){
                    li[ind++] = temp[j];
                }
            }
            if(count == 3){
                int[] temp = new int[count];
                while(q!= 0){
                    int x = q % 10;
                    q /= 10;
                    temp[--count] = x;
                }
                for(int j = 0; j < count; j++){
                    li[ind++] = temp[j];
                }
            }
        }
        li[--ind] = 0;
        li[--ind] = 0;
        System.out.println(li[n - 1]);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC132_F.java,"import java.util.*;
public class atcoder_ABC132_F {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] coef = new int[n];
        int sum = 0;
        for (int i = 1; i <= n; i++) {
            coef[i - 1] = (n / i) - (n / (i + 1));
            sum += coef[i - 1];
        }
        int[] dp = new int[k + 1][n];
        for (int i = 0; i < n; i++) {
            dp[0][i] = 1;
        }
        for (int i = 1; i <= k; i++) {
            for (int j = 0; j < n; j++) {
                int tmp = 0;
                for (int l = j; l < n; l++) {
                    tmp += dp[i - 1][l];
                    tmp %= 1000000007;
                }
                dp[i][j] = coef[j] * tmp;
                dp[i][j] %= 1000000007;
            }
        }
        long ans = 0;
        for (int i = 0; i < n; i++) {
            ans += dp[k][i];
            ans %= 1000000007;
        }
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] coef = new int[n];
        int sum = 0;
        for (int i = 1; i <= n; i++) {
            coef[i - 1] = (n / i) - (n / (i + 1));
            sum += coef[i - 1];
        }
        int[][] dp = new int[k + 1][n];
        for (int i = 0; i < n; i++) {
            dp[0][i] = 1;
        }
        for (int i = 1; i <= k; i++) {
            for (int j = 0; j < n; j++) {
                int tmp = 0;
                for (int l = j; l < n; l++) {
                    tmp += dp[i - 1][l];
                    tmp %= 1000000007;
                }
                dp[i][j] = coef[j] * tmp;
                dp[i][j] %= 1000000007;
            }
        }
        long ans = 0;
        for (int i = 0; i < n; i++) {
            ans += dp[k][i];
            ans %= 1000000007;
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC114_C.java,"import java.util.*;
public class atcoder_ABC114_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        System.out.println(aaa(N));
    }
    public static int aaa(int n) {
        if (n > N) return 0;
        int ans = 1;
        if (new HashSet<Character>(Arrays.asList('7', '5', '3')).containsAll(new HashSet<Character>(String.valueOf(n).toCharArray()))) ans = 0;
        for (char i : new char[]{'7', '5', '3'}) {
            ans += aaa(n + i - '0');
        }
        return ans;
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        System.out.println(aaa(""0"", N));
    }
    public static int aaa(String n, int N) {
        if (Long.parseLong(n) > N) return 0;
        if (n.charAt(0) == '0') n = n.substring(1);
        int ans = 1;
        if (new HashSet<>(Arrays.asList(""7"", ""5"", ""3"")).equals(new HashSet<>(Arrays.asList(n.split(""""))))) ans = 1;
        else ans = 0;
        for (char i : new char[]{'7', '5', '3'}) {
            ans += aaa(n + i, N);
        }
        return ans;
    }
}"
StarCoder,avatar,Python,Java,codeforces_397_B.java,"class codeforces_397_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        for (int i = 0; i < t; i++) {
            int[] query = new int[3];
            query[0] = scanner.nextInt();
            query[1] = scanner.nextInt();
            query[2] = scanner.nextInt();
            int k = query[0] / query[1];
            System.out.println(k * query[2] >= query[0]? ""Yes"" : ""No"");
        }
    }
}","import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        for (int i = 0; i < t; i++) {
            int[] query = new int[3];
            query[0] = scanner.nextInt();
            query[1] = scanner.nextInt();
            query[2] = scanner.nextInt();
            int k = query[0] / query[1];
            System.out.println(k * query[2] >= query[0]? ""Yes"" : ""No"");
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_445_A.java,"import java.util.*;
public class codeforces_445_A {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        String[][] l = new String[n][m];
        for(int i=0;i<n;i++){
            String s = in.next();
            for(int j=0;j<m;j++){
                if(s.charAt(j) == '.'){
                    if((i+j)&1) s = s.substring(0,j) + ""W"" + s.substring(j+1);
                    else s = s.substring(0,j) + ""B"" + s.substring(j+1);
                }
            }
            l[i] = s.split("""");
        }
        for(String[] c : l)
            for(String s : c)
                System.out.print(s);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        String[] l = new String[n];
        for(int i=0;i<n;i++){
            String s = in.next();
            for(int j=0;j<m;j++){
                if(s.charAt(j) == '.'){
                    if((i + j) % 2 == 1) s = s.substring(0,j) + ""W"" + s.substring(j+1);
                    else s = s.substring(0,j) + ""B"" + s.substring(j+1);
                }
            }
            l[i] = s;
        }
        for(String c : l)
            System.out.println(c);
    }
}"
StarCoder,avatar,Python,Java,codeforces_514_A.java,"import java.util.Scanner;
public class codeforces_514_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String ip = sc.next();
        String st = """";
        if (ip.length()!= 1) {
            if (ip.charAt(0) == '9') {
                st = ""9"";
                ip = ip.substring(1);
            }
            for (int i = 0; i < ip.length(); i++) {
                if (Integer.parseInt(ip.charAt(i)) > 4) {
                    int n = 9 - Integer.parseInt(ip.charAt(i));
                    st += String.valueOf(n);
                } else {
                    st += ip.charAt(i);
                }
            }
        } else {
            st = ip;
        }
        System.out.println(Integer.parseInt(st));
    }
}
","import java.util.Scanner;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String ip = sc.next();
        String st = """";
        if (ip.length()!= 1) {
            if (ip.charAt(0) == '9') {
                st = ""9"";
                ip = ip.substring(1);
            }
            for (int i = 0; i < ip.length(); i++) {
                if (ip.charAt(i) - '0' > 4) {
                    int n = 9 - (ip.charAt(i) - '0');
                    st += String.valueOf(n);
                } else {
                    st += ip.charAt(i);
                }
            }
        } else {
            st = ip;
        }
        System.out.println(Long.parseLong(st));
    }
}
"
StarCoder,avatar,Python,Java,codeforces_96_B.java,"import java.util.*;
public class codeforces_96_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int limit = 10000000000;
        ArrayList<Integer> l = new ArrayList<Integer>();
        gen(0, 0, 0, limit, l);
        Collections.sort(l);
        int n = sc.nextInt();
        int ans = 0;
        for (int val : l) {
            if (val >= n) {
                ans = val;
                break;
            }
        }
        System.out.println(ans);
    }
    public static void gen(int number, int four, int seven, int limit, ArrayList<Integer> l) {
        if (number > limit) {
            return;
        }
        if (number > 0 && four == seven) {
            l.add(number);
        }
        gen(number * 10 + 4, four + 1, seven, limit, l);
        gen(number * 10 + 7, four, seven + 1, limit, l);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long limit = 10000000000L;
        ArrayList<Long> l = new ArrayList<>();
        gen(0, 0, 0, limit, l);
        Collections.sort(l);
        int n = sc.nextInt();
        long ans = 0;
        for (long val : l) {
            if (val >= n) {
                ans = val;
                break;
            }
        }
        System.out.println(ans);
    }
    public static void gen(long number, int four, int seven, long limit, ArrayList<Long> l) {
        if (number > limit) {
            return;
        }
        if (number > 0 && four == seven) {
            l.add(number);
        }
        gen(number * 10 + 4, four + 1, seven, limit, l);
        gen(number * 10 + 7, four, seven + 1, limit, l);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC051_A.java,"System.out.println ( input.replace ( "","", "" "" ) )","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        System.out.println ( input.replace ( "","", "" "" ) );
    }
}"
StarCoder,avatar,Python,Java,codeforces_450_A.java,"import java.util.*;
public class codeforces_450_A {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int m = sc.nextInt ( ) ;
        int [ ] l = new int [ n ] ;
        for ( int i = 0 ; i < n ; i++ )
            l [ i ] = sc.nextInt ( ) ;
        int [ ] l2 = new int [ n ] ;
        int mx = 0 ;
        for ( int i = 0 ; i < n ; i++ )
        {
            if ( l [ i ] % m == 0 )
                l2 [ i ] = l [ i ] / m ;
            else
                l2 [ i ] = l [ i ] / m + 1 ;
            if ( l2 [ i ] > mx )
            {
                mx = l2 [ i ] ;
                ind = i ;
            }
        }
        System.out.println ( ind + 1 ) ;
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int m = sc.nextInt ( ) ;
        int [ ] l = new int [ n ] ;
        for ( int i = 0 ; i < n ; i++ )
            l [ i ] = sc.nextInt ( ) ;
        int [ ] l2 = new int [ n ] ;
        int mx = 0 ;
        int ind = 0 ;
        for ( int i = 0 ; i < n ; i++ )
        {
            if ( l [ i ] % m == 0 )
                l2 [ i ] = l [ i ] / m ;
            else
                l2 [ i ] = l [ i ] / m + 1 ;
            if ( l2 [ i ] >= mx )
            {
                mx = l2 [ i ] ;
                ind = i ;
            }
        }
        System.out.println ( ind + 1 ) ;
    }
}"
StarCoder,avatar,Python,Java,codeforces_567_A.java,"import java.util.Scanner;

public class codeforces_567_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        for (int i = 0; i < n; i++) {
            if (i == 0) {
                System.out.println(arr[i + 1] - arr[i] + "" "" + arr[n - 1] - arr[i]);
                continue;
            }
            if (i == n - 1) {
                System.out.println(arr[n - 1] - arr[n - 2] + "" "" + arr[n - 1] - arr[0]);
                continue;
            }
            if (arr[i + 1] - arr[i] > arr[i] - arr[i - 1]) {
                System.out.print(arr[i + 1] - arr[i] + "" "");
            } else {
                System.out.print(arr[i] - arr[i - 1] + "" "");
            }
            if (arr[n - 1] - arr[i] > arr[i] - arr[0]) {
                System.out.println(arr[n - 1] - arr[i]);
            } else {
                System.out.println(arr[i] - arr[0]);
            }
        }
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        for (int i = 0; i < n; i++) {
            if (i == 0) {
                System.out.println(Integer.toString(arr[i + 1] - arr[i]) + "" "" + Integer.toString(arr[n - 1] - arr[i]));
                continue;
            }
            if (i == n - 1) {
                System.out.println(Integer.toString(arr[n - 1] - arr[n - 2]) + "" "" + Integer.toString(arr[n - 1] - arr[0]));
                continue;
            }
            if (arr[i + 1] - arr[i] < arr[i] - arr[i - 1]) {
                System.out.print(Integer.toString(arr[i + 1] - arr[i]) + "" "");
            } else {
                System.out.print(Integer.toString(arr[i] - arr[i - 1]) + "" "");
            }
            if (arr[n - 1] - arr[i] > arr[i] - arr[0]) {
                System.out.println(arr[n - 1] - arr[i]);
            } else {
                System.out.println(arr[i] - arr[0]);
            }
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC123_C.java,"import java.util.*;
public class atcoder_ABC123_C {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[5];
        for (int i = 0; i < 5; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(Math.ceil(n / Math.min(a)) + 4);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        long[] a = new long[5];
        for (int i = 0; i < 5; i++) {
            a[i] = sc.nextLong();
        }
        System.out.println(Math.ceil((double) n / min(a)) + 4);
    }

    public static long min(long[] arr) {
        long minVal = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] < minVal) {
                minVal = arr[i];
            }
        }
        return minVal;
    }
}"
StarCoder,avatar,Python,Java,codeforces_30_A.java,"public class codeforces_30_A {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int A = in.nextInt();
        int B = in.nextInt();
        int n = in.nextInt();
        System.out.println(task4(A, B, n));
    }

    public static int task4(int A, int B, int n) {
        for (int X = -1000; X <= 1000; X++) {
            if (A * Math.pow(X, n) == B) {
                return X;
            }
        }
        return -1;
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int A = in.nextInt();
        int B = in.nextInt();
        int n = in.nextInt();
        int result = task4(A, B, n);
        if (result == 1001) {
            System.out.println(""No solution"");
        } else {
            System.out.println(result);
        }
    }

    public static int task4(int A, int B, int n) {
        for (int X = -1000; X <= 1000; X++) {
            if (A * Math.pow(X, n) == B) {
                return X;
            }
        }
        return 1001;
    }
}"
StarCoder,avatar,Python,Java,codeforces_404_A.java,"import java.util.*;
public class codeforces_404_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[][] s = new String[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                s[i][j] = sc.next();
            }
        }
        boolean flag = false;
        String[] d1 = new String[n];
        String[] d2 = new String[n];
        Set<String> rem = new HashSet<String>();
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(i==j){
                    d1[i] = s[i][j];
                }
                if(i==n-j-1){
                    d2[i] = s[i][j];
                }
                if(i!=j && i!=n-j-1){
                    rem.add(s[i][j]);
                }
            }
        }
        if(rem.size()!=1){
            System.out.println(""NO"");
        }
        else if(Arrays.equals(d1,d2)==false){
            System.out.println(""NO"");
        }
        else if(d1.length!=1){
            System.out.println(""NO"");
        }
        else if(d1[0].equals(rem.iterator().next())){
            System.out.println(""NO"");
        }
        else{
            System.out.println(""YES"");
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] s = new String[n];
        for(int i=0;i<n;i++){
            s[i] = sc.next();
        }
        boolean flag = false;
        List<Character> d1 = new ArrayList<>();
        List<Character> d2 = new ArrayList<>();
        Set<Character> rem = new HashSet<Character>();
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(i==j){
                    d1.add(s[i].charAt(j));
                }
                if(i==n-j-1){
                    d2.add(s[i].charAt(j));
                }
                if(i!=j && i!=n-j-1){
                    rem.add(s[i].charAt(j));
                }
            }
        }
        if(rem.size()!=1){
            System.out.println(""NO"");
        }
        else if(!d1.equals(d2)){
            System.out.println(""NO"");
        }
        else if(new HashSet<>(d1).size() != 1){
            System.out.println(""NO"");
        }
        else if(new HashSet<>(d1).equals(rem)){
            System.out.println(""NO"");
        }
        else{
            System.out.println(""YES"");
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_25_A.java,"import java.util.*;
public class codeforces_25_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] list = new int[n];
        for (int i = 0; i < n; i++) {
            list[i] = sc.nextInt() % 2;
        }
        if (Arrays.stream(list).sum() == 1) {
            System.out.println(Arrays.stream(list).filter(x -> x == 1).findFirst().getAsInt() + 1);
        } else {
            System.out.println(Arrays.stream(list).filter(x -> x == 0).findFirst().getAsInt() + 1);
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        List<Integer> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            list.add(sc.nextInt() % 2);
        }
        if (Collections.frequency(list, 1) == 1) {
            System.out.println(list.indexOf(1) + 1);
        } else {
            System.out.println(list.indexOf(0) + 1);
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC133_E.java,"import java.util.*;

public class atcoder_ABC133_E {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[][] graph = new int[N][N];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                graph[i][j] = 0;
            }
        }
        for (int i = 0; i < N - 1; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            graph[a - 1][b - 1] = 1;
            graph[b - 1][a - 1] = 1;
        }
        int mod = 1000000007;
        int ans = dfs(0, -1, K, graph, mod);
        System.out.println(ans);
    }

    public static int dfs(int fro, int to, int f, int[][] graph, int mod) {
        int caseNum = f;
        int colorNum = K - 1;
        if (f == K) {
            colorNum = K - 2;
        }
        for (int u = 0; u < graph[fro].length; u++) {
            if (graph[fro][u] == 0) {
                continue;
            }
            if (u == to) {
                continue;
            }
            int pat = dfs(u, fro, colorNum, graph, mod);
            if (pat == 0) {
                caseNum = 0;
                break;
            }
            caseNum = (caseNum * pat) % mod;
            colorNum--;
        }
        return caseNum;
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[][] graph = new int[N][N];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                graph[i][j] = 0;
            }
        }
        for (int i = 0; i < N - 1; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            graph[a - 1][b - 1] = 1;
            graph[b - 1][a - 1] = 1;
        }
        int mod = 1000000007;
        int ans = dfs(0, -1, K, graph, mod, K);
        System.out.println(ans);
    }

    public static int dfs(int fro, int to, int f, int[][] graph, int mod, int K) {
        int caseNum = f;
        int colorNum = K - 1;
        if (f == K) {
            colorNum = K - 2;
        }
        for (int u = 0; u < graph[fro].length; u++) {
            if (graph[fro][u] == 0) {
                continue;
            }
            if (u == to) {
                continue;
            }
            int pat = dfs(u, fro, colorNum, graph, mod, K);
            if (pat == 0) {
                caseNum = 0;
                break;
            }
            caseNum = (caseNum * pat) % mod;
            colorNum--;
        }
        return caseNum;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC145_C.java,"import java.util.*;
public class atcoder_ABC145_C {
    public static void main ( String [ ] args ) {
        Scanner scanner = new Scanner ( System.in );
        int N = scanner.nextInt ( );
        int [ ] x = new int [ N ];
        int [ ] y = new int [ N ];
        for ( int i = 0 ; i < N ; i ++ ) {
            x [ i ] = scanner.nextInt ( );
            y [ i ] = scanner.nextInt ( );
        }
        solve ( N, x, y );
    }
    public static void solve ( int N, int [ ] x, int [ ] y ) {
        int [ ] indices = new int [ N ];
        for ( int i = 0 ; i < N ; i ++ ) {
            indices [ i ] = i;
        }
        List < Integer > [ ] permutations = new ArrayList < > ( );
        for ( int [ ] permutation : new PermutationGenerator ( indices ).generate ( ) ) {
            int total_distance = 0;
            for ( int i = 0 ; i < N - 1 ; i ++ ) {
                int f = permutation [ i ];
                int t = permutation [ i + 1 ];
                int distance = ( ( x [ t ] - x [ f ] ) * ( x [ t ] - x [ f ] ) + ( y [ t ] - y [ f ] ) * ( y [ t ] - y [ f ] ) ) ;
                total_distance += distance;
            }
            permutations.add ( total_distance );
        }
        int result = 0;
        for ( int distance : permutations ) {
            result += distance;
        }
        result /= permutations.size ( );
        System.out.println ( result );
    }
}
class PermutationGenerator {
    private int [ ] indices;
    public PermutationGenerator ( int [ ] indices ) {
        this.indices = indices;
    }
    public List < int [ ] > generate ( ) {
        List < int [ ] > result = new ArrayList < > ( );
        generate ( indices, 0, result );
        return result;
    }
    private void generate ( int [ ] indices, int start, List < int [ ] > result ) {
        if ( start == indices.length ) {
            result.add ( indices.clone ( ) );
            return;
        }
        for ( int i = start ; i < indices.length ; i ++ ) {
            swap ( indices, start, i );
            generate ( indices, start + 1, result );
            swap ( indices, start, i );
        }
    }
    private void swap ( int [ ] indices, int i, int j ) {
        int temp = indices [ i ];
        indices [ i ] = indices [ j ];
        indices [ j ] = temp;
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] x = new int[N];
        int[] y = new int[N];
        for (int i = 0; i < N; i++) {
            x[i] = scanner.nextInt();
            y[i] = scanner.nextInt();
        }
        solve(N, x, y);
    }

    public static void solve(int N, int[] x, int[] y) {
        int[] indices = new int[N];
        for (int i = 0; i < N; i++) {
            indices[i] = i;
        }
        List<List<Integer>> permutations = new ArrayList<>();
        for (int[] permutation : new PermutationGenerator(indices).generate()) {
            int total_distance = 0;
            for (int i = 0; i < N - 1; i++) {
                int f = permutation[i];
                int t = permutation[i + 1];
                int distance = ((x[t] - x[f]) * (x[t] - x[f]) + (y[t] - y[f]) * (y[t] - y[f]));
                total_distance += distance;
            }
            List<Integer> distanceList = new ArrayList<>();
            distanceList.add(total_distance);
            permutations.add(distanceList);
        }
        int result = 0;
        for (List<Integer> distanceList : permutations) {
            result += distanceList.get(0);
        }
        result /= permutations.size();
        System.out.println(result);
    }
}

class PermutationGenerator {
    private int[] indices;

    public PermutationGenerator(int[] indices) {
        this.indices = indices;
    }

    public List<int[]> generate() {
        List<int[]> result = new ArrayList<>();
        generate(indices, 0, result);
        return result;
    }

    private void generate(int[] indices, int start, List<int[]> result) {
        if (start == indices.length) {
            result.add(indices.clone());
            return;
        }
        for (int i = start; i < indices.length; i++) {
            swap(indices, start, i);
            generate(indices, start + 1, result);
            swap(indices, start, i);
        }
    }

    private void swap(int[] indices, int i, int j) {
        int temp = indices[i];
        indices[i] = indices[j];
        indices[j] = temp;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC123_D.java,"import java.util.*;
public class atcoder_ABC123_D {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int x = scan.nextInt();
        int y = scan.nextInt();
        int z = scan.nextInt();
        int k = scan.nextInt();
        int[] a = new int[x];
        int[] b = new int[y];
        int[] c = new int[z];
        for(int i = 0; i < x; i++) {
            a[i] = scan.nextInt();
        }
        for(int i = 0; i < y; i++) {
            b[i] = scan.nextInt();
        }
        for(int i = 0; i < z; i++) {
            c[i] = scan.nextInt();
        }
        Arrays.sort(a);
        Arrays.sort(b);
        Arrays.sort(c);
        int[] ab = new int[x*y];
        for(int i = 0; i < x; i++) {
            for(int j = 0; j < y; j++) {
                ab[i*y+j] = a[i] + b[j];
            }
        }
        Arrays.sort(ab);
        int[] abc = new int[k];
        for(int i = 0; i < k; i++) {
            abc[i] = ab[i];
        }
        for(int i = 0; i < k; i++) {
            for(int j = 0; j < z; j++) {
                abc[i] += c[j];
            }
        }
        Arrays.sort(abc);
        for(int i = 0; i < k; i++) {
            System.out.println(abc[i]);
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int x = scan.nextInt();
        int y = scan.nextInt();
        int z = scan.nextInt();
        int k = scan.nextInt();
        long[] a = new long[x];
        long[] b = new long[y];
        long[] c = new long[z];
        for(int i = 0; i < x; i++) {
            a[i] = scan.nextLong();
        }
        for(int i = 0; i < y; i++) {
            b[i] = scan.nextLong();
        }
        for(int i = 0; i < z; i++) {
            c[i] = scan.nextLong();
        }
        List<Long> ab = new ArrayList<>();
        for(int i = 0; i < x; i++) {
            for(int j = 0; j < y; j++) {
                ab.add(a[i] + b[j]);
            }
        }
        Collections.sort(ab, Collections.reverseOrder());
        List<Long> abc = new ArrayList<>();
        for(int i = 0; i < Math.min(k, x*y); i++) {
            for(int j = 0; j < z; j++) {
                abc.add(ab.get(i) + c[j]);
            }
        }
        Collections.sort(abc, Collections.reverseOrder());
        for(int i = 0; i < k; i++) {
            System.out.println(abc.get(i));
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC128_C.java,"import java.util.*;
public class atcoder_ABC128_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[][] li = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                li[i][j] = sc.nextInt();
            }
        }
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }
        Set<Integer> q = new HashSet<>();
        Set<Integer> r = new HashSet<>();
        for (int i = 0; i < m; i++) {
            for (int j = 1; j < n; j++) {
                q.add(li[i][j]);
            }
        }
        for (int i = 1; i <= n; i++) {
            r.add(i);
        }
        r.removeAll(q);
        int ans = 0;
        for (int i = 0; i <= q.size(); i++) {
            for (Set<Integer> s : Sets.powerSet(q)) {
                if (s.size() % 2!= p[i]) {
                    break;
                }
            } else {
                ans += Math.pow(2, r.size());
            }
        }
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[][] li = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                li[i][j] = sc.nextInt();
            }
        }
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }
        Set<Integer> q = new HashSet<>();
        Set<Integer> r = new HashSet<>();
        for (int i = 0; i < m; i++) {
            for (int j = 1; j < n; j++) {
                q.add(li[i][j]);
            }
        }
        for (int i = 1; i <= n; i++) {
            r.add(i);
        }
        r.removeAll(q);
        int ans = 0;
        for (int i = 0; i <= q.size(); i++) {
            for (Set<Integer> s : Sets.powerSet(q)) {
                if (s.size() % 2!= p[i]) {
                    break;
                }
            } else {
                ans += Math.pow(2, r.size());
            }
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC178_B.java,"import java.util.*;
import java.io.*;
public class atcoder_ABC178_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int d = sc.nextInt();
        System.out.println(Math.max(a * c, b * d, a * d, b * c));
    }
}","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextLong();
        long b = sc.nextLong();
        long c = sc.nextLong();
        long d = sc.nextLong();
        System.out.println(Math.max(Math.max(Math.max(a * c, b * d), a * d), b * c));
    }
}"
StarCoder,avatar,Python,Java,codeforces_474_B.java,"import java.util.*;
public class codeforces_474_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        List<Integer> L = new ArrayList<Integer>();
        int r = 1;
        String[] input = sc.nextLine().split("" "");
        for (String k : input) {
            for (int i = 0; i < Integer.parseInt(k); i++) {
                L.add(r);
            }
            r++;
        }
        input = sc.nextLine().split("" "");
        for (String j : input) {
            System.out.println(L.get(Integer.parseInt(j) - 1));
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        List<Integer> L = new ArrayList<Integer>();
        int r = 1;
        sc.nextLine();
        String[] input = sc.nextLine().split("" "");
        for (String k : input) {
            for (int i = 0; i < Integer.parseInt(k); i++) {
                L.add(r);
            }
            r++;
        }
        sc.nextLine();
        input = sc.nextLine().split("" "");
        for (String j : input) {
            System.out.println(L.get(Integer.parseInt(j) - 1));
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC043_B.java,"s = str ( input ( ) )
my_str = """"
for c in s :
    if ( c == '0' || c == '1' ) :
        my_str += c
    else if ( c == 'B' && my_str.length()!= 0 ) :
        my_str = my_str.substring ( 0, my_str.length ( ) - 1 )
print ( my_str )","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        String my_str = """";
        for ( int i = 0 ; i < s.length() ; i++ ) {
            char c = s.charAt(i);
            if ( c == '0' || c == '1' ) {
                my_str += c;
            } else if ( c == 'B' && my_str.length() != 0 ) {
                my_str = my_str.substring ( 0, my_str.length() - 1 );
            }
        }
        System.out.println(my_str);
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC019_A.java,"import java.util.*;
import java.io.*;

public class atcoder_AGC019_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int q = sc.nextInt();
        int h = sc.nextInt();
        int s = sc.nextInt();
        int d = sc.nextInt();
        int n = sc.nextInt();
        int best1L = Math.min(q * 4, h * 2, s);
        int best2L = Math.min(d, best1L * 2);
        if (n % 2 == 0) {
            System.out.println(best2L * (n / 2));
        } else {
            System.out.println(best2L * (n / 2) + best1L);
        }
    }
}","import java.util.*;
import java.io.*;
import java.math.BigInteger;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        BigInteger q = new BigInteger(sc.next());
        BigInteger h = new BigInteger(sc.next());
        BigInteger s = new BigInteger(sc.next());
        BigInteger d = new BigInteger(sc.next());
        BigInteger n = new BigInteger(sc.next());
        BigInteger best1L = q.multiply(BigInteger.valueOf(4)).min(h.multiply(BigInteger.valueOf(2))).min(s);
        BigInteger best2L = best1L.multiply(BigInteger.valueOf(2)).min(d);
        if (n.mod(BigInteger.valueOf(2)).equals(BigInteger.ZERO)) {
            System.out.println(best2L.multiply(n.divide(BigInteger.valueOf(2))));
        } else {
            System.out.println(best2L.multiply(n.divide(BigInteger.valueOf(2))).add(best1L));
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_299_A.java,"import java.util.*;
public class codeforces_299_A {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int [ ] a = new int [ n ];
        for ( int i = 0 ; i < n ; i ++ )
            a [ i ] = sc.nextInt ( );
        Arrays.sort ( a );
        if ( any ( x -> x % a [ 0 ] == 0, a ) )
            System.out.println ( a [ 0 ] );
        else
            System.out.println ( - 1 );
    }
    public static < T > boolean any ( Predicate <? super T > p, T [ ] a )
    {
        for ( T x : a )
            if ( p.test ( x ) )
                return true;
        return false;
    }
}



Solution:

import java.util.*;
public class codeforces_299_A {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int [ ] a = new int [ n ];
        for ( int i = 0 ; i < n ; i ++ )
            a [ i ] = sc.nextInt ( );
        Arrays.sort ( a );
        if ( any ( x -> x % a [ 0 ] == 0, a ) )
            System.out.println ( a [ 0 ] );
        else
            System.out.println ( - 1 );
    }
    public static < T > boolean any ( Predicate <? super T > p, T [ ] a )
    {
        for ( T x : a )
            if ( p.test ( x ) )
                return true;
        return false;
    }
}

","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int [ ] a = new int [ n ];
        for ( int i = 0 ; i < n ; i ++ )
            a [ i ] = sc.nextInt ( );
        Arrays.sort ( a );
        if ( any ( x -> x % a [ 0 ] == 0, a ) )
            System.out.println ( a [ 0 ] );
        else
            System.out.println ( - 1 );
    }
    public static < T > boolean any ( Predicate <? super T > p, T [ ] a )
    {
        for ( T x : a )
            if ( p.test ( x ) )
                return true;
        return false;
    }
}



Solution:

import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int [ ] a = new int [ n ];
        for ( int i = 0 ; i < n ; i ++ )
            a [ i ] = sc.nextInt ( );
        Arrays.sort ( a );
        if ( any ( x -> x % a [ 0 ] == 0, a ) )
            System.out.println ( a [ 0 ] );
        else
            System.out.println ( - 1 );
    }
    public static < T > boolean any ( Predicate <? super T > p, T [ ] a )
    {
        for ( T x : a )
            if ( p.test ( x ) )
                return true;
        return false;
    }
}

"
StarCoder,avatar,Python,Java,codeforces_31_A.java,"import java.util.*;
public class codeforces_31_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int y = sc.nextInt();
        int[] arr = new int[y];
        for(int i = 0; i < y; i++)
            arr[i] = sc.nextInt();
        for(int i = 0; i < y; i++) {
            for(int j = 0; j < y; j++) {
                if(i == j)
                    continue;
                for(int k = 0; k < y; k++) {
                    if(arr[k]!= arr[j] && arr[k]!= arr[i] && arr[k] == arr[i] + arr[j]) {
                        System.out.println(k+1 + "" "" + j+1 + "" "" + i+1);
                        return;
                    }
                }
            }
        }
        System.out.println(-1);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int y = sc.nextInt();
        int[] arr = new int[y];
        for(int i = 0; i < y; i++)
            arr[i] = sc.nextInt();
        for(int i = 0; i < y; i++) {
            for(int j = 0; j < y; j++) {
                if(i == j)
                    continue;
                for(int k = 0; k < y; k++) {
                    if(arr[k]!= arr[j] && arr[k]!= arr[i] && arr[k] == arr[i] + arr[j]) {
                        System.out.println((k+1) + "" "" + (j+1) + "" "" + (i+1));
                        return;
                    }
                }
            }
        }
        System.out.println(-1);
    }
}"
StarCoder,avatar,Python,Java,codeforces_216_B.java,"import java.util.*;
public class codeforces_216_B {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int m = sc.nextInt ( );
        int [ ] g = new int [ n + 1 ];
        for ( int i = 1 ; i <= n ; i ++ ) g [ i ] = new ArrayList < > ( );
        for ( int i = 0 ; i < m ; i ++ ) {
            int a = sc.nextInt ( );
            int b = sc.nextInt ( );
            g [ a ].add ( b );
            g [ b ].add ( a );
        }
        int ans = 0;
        for ( int i = 1 ; i <= n ; i ++ ) {
            if ( g [ i ].size ( ) == 0 ) {
                ans += 1;
                continue;
            }
            Set < Integer > seen = new HashSet < > ( );
            int [ ] dfs = new int [ n + 1 ];
            dfs [ i ] = 1;
            seen.add ( i );
            for ( int j : g [ i ] ) {
                if ( j in seen ) continue;
                dfs [ j ] = 1;
                seen.add ( j );
                for ( int k : g [ j ] ) {
                    if ( k in seen ) continue;
                    dfs [ k ] = 1;
                    seen.add ( k );
                }
            }
            if ( dfs [ i ] == 0 ) ans += 1;
        }
        System.out.println ( ans );
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int m = sc.nextInt ( );
        ArrayList<Integer>[] g = new ArrayList[n + 1];
        for ( int i = 1 ; i <= n ; i ++ ) g [ i ] = new ArrayList < > ( );
        for ( int i = 0 ; i < m ; i ++ ) {
            int a = sc.nextInt ( );
            int b = sc.nextInt ( );
            g [ a ].add ( b );
            g [ b ].add ( a );
        }
        int ans = 0;
        for ( int i = 1 ; i <= n ; i ++ ) {
            if ( g [ i ].size ( ) == 0 ) {
                ans += 1;
                continue;
            }
            Set < Integer > seen = new HashSet < > ( );
            int [ ] dfs = new int [ n + 1 ];
            dfs [ i ] = 1;
            seen.add ( i );
            for ( int j : g [ i ] ) {
                if ( seen.contains(j) ) continue;
                dfs [ j ] = 1;
                seen.add ( j );
                for ( int k : g [ j ] ) {
                    if ( seen.contains(k) ) continue;
                    dfs [ k ] = 1;
                    seen.add ( k );
                }
            }
            if ( dfs [ i ] == 0 ) ans += 1;
        }
        System.out.println ( ans );
    }
}"
StarCoder,avatar,Python,Java,codeforces_70_B.java,"import java.util.Scanner;
public class codeforces_70_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int ans = 1, sumL = 0;
        String[] s = sc.next().split(""[.?!]"");
        for (String str : s) {
            str += ""."";
            int L = str.length();
            if (L > 1) {
                if (L > n) {
                    System.out.println(""Impossible"");
                    return;
                }
                if (sumL + L + (sumL > 0) > n) {
                    ans++;
                    sumL = L;
                } else {
                    sumL += L + (sumL > 0);
                }
            }
        }
        System.out.println(ans);
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int ans = 1, sumL = 0;
        sc.nextLine();
        String[] s = sc.nextLine().split(""[.?!]"");
        for (String str : s) {
            str = str.trim() + ""."";
            int L = str.length();
            if (L > 1) {
                if (L > n) {
                    System.out.println(""Impossible"");
                    return;
                }
                if (sumL + L + ((sumL > 0) ? 1 : 0) > n) {
                    ans++;
                    sumL = L;
                } else {
                    sumL += L + ((sumL > 0) ? 1 : 0);
                }
            }
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,codeforces_356_A.java,"import java.util.*;
public class codeforces_356_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] out = new int[n];
        int[] comp = new int[n];
        for (int i = 0; i < n; i++) {
            comp[i] = i + 2;
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int r = sc.nextInt();
            int x = sc.nextInt();
            int t = l;
            while (t <= r) {
                int next_val = comp[t - 1];
                if (out[t - 1] == 0 && t!= x) {
                    out[t - 1] = x;
                }
                comp[t - 1] = r + 1 if (t >= x) else x;
                t = next_val;
            }
        }
        for (int i = 0; i < n; i++) {
            System.out.print(out[i] + "" "");
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] out = new int[n];
        int[] comp = new int[n];
        for (int i = 0; i < n; i++) {
            comp[i] = i + 2;
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int r = sc.nextInt();
            int x = sc.nextInt();
            int t = l;
            while (t <= r) {
                int next_val = comp[t - 1];
                if (out[t - 1] == 0 && t!= x) {
                    out[t - 1] = x;
                }
                comp[t - 1] = t >= x ? r + 1 : x;
                t = next_val;
            }
        }
        for (int i = 0; i < n; i++) {
            System.out.print(out[i] + "" "");
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_99_A.java,"import java.util.Scanner;

public class codeforces_99_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String l = sc.next();
        String[] l1 = l.split(""\\."");
        String s = l1[0];
        String p = l1[1];
        int i = Integer.parseInt(p.charAt(0));
        if(s.charAt(s.length()-1) == '9'){
            System.out.println(""GOTO Vasilisa."");
        }
        else if(s.charAt(s.length()-1)!= '9' && i<5){
            System.out.println(s);
        }
        else{
            s = s + ""1"";
            System.out.println(s);
        }
    }
}","import java.util.Scanner;
import java.math.BigInteger;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String l = sc.next();
        String[] l1 = l.split(""\\."");
        String s = l1[0];
        String p = l1[1];
        int i = Character.getNumericValue(p.charAt(0));
        if(s.charAt(s.length()-1) == '9'){
            System.out.println(""GOTO Vasilisa."");
        }
        else if(s.charAt(s.length()-1)!= '9' && i<5){
            System.out.println(s);
        }
        else{
            String sStr = String.valueOf(s);
            BigInteger bigInt = new BigInteger(sStr);
            sStr = bigInt.add(BigInteger.ONE).toString();
            System.out.println(sStr);
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_267_A.java,"import java.util.Scanner;
public class codeforces_267_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] lst = new int[n];
        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            lst[i] = substract(a, b);
        }
        for (int i = 0; i < n; i++) {
            System.out.println(lst[i]);
        }
    }
    public static int substract(int a, int b) {
        if (a > b) {
            int total = 0;
            while (a > 0 && b > 0) {
                total += a / b;
                a = a % b;
                if (a > 0) {
                    total += b / a;
                    b = b % a;
                }
            }
            return total;
        }
        if (a < b) {
            int total = 0;
            while (a > 0 && b > 0) {
                total += b / a;
                b = b % a;
                if (b > 0) {
                    total += a / b;
                    a = a % b;
                }
            }
            return total;
        }
        if (a == b) {
            return 1;
        }
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] lst = new int[n];
        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            lst[i] = substract(a, b);
        }
        for (int i = 0; i < n; i++) {
            System.out.println(lst[i]);
        }
    }
    public static int substract(int a, int b) {
        if (a > b) {
            int total = 0;
            while (a > 0 && b > 0) {
                total += a / b;
                a = a % b;
                if (a > 0) {
                    total += b / a;
                    b = b % a;
                }
            }
            return total;
        }
        if (a < b) {
            int total = 0;
            while (a > 0 && b > 0) {
                total += b / a;
                b = b % a;
                if (b > 0) {
                    total += a / b;
                    a = a % b;
                }
            }
            return total;
        }
        if (a == b) {
            return 1;
        }
        return 0;
    }
}"
StarCoder,avatar,Python,Java,codeforces_412_A.java,"import java.util.*;
public class codeforces_412_A {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int k = sc.nextInt ( );
        String [ ] v = new String [ n ];
        for ( int i = 0 ; i < n ; i ++ )
            v [ i ] = sc.next ( );
        int f = k - 1 < n - k;
        int m = Math.min ( k - 1, n - k );
        String [ ] a = new String [ 2 * m + 2 * f ];
        for ( int i = 0 ; i < m ; i ++ )
            a [ i ] = ""LEFT"";
        for ( int i = 0 ; i < m ; i ++ )
            a [ m + i ] = ""PRINT "" + v [ i + k - 1 ];
        for ( int i = 0 ; i < m ; i ++ )
            a [ 2 * m + i ] = ""RIGHT"";
        for ( int i = 0 ; i < 2 * m + 2 * f ; i ++ )
            System.out.println ( a [ i ] );
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int k = sc.nextInt ( );
        String v = sc.next ( );
        int f = k - 1 < n - k ? 1 : 0;
        int m = Math.min ( k - 1, n - k );
        String [ ] a = new String [ 2 * m + 2 * f ];
        for ( int i = 0 ; i < m ; i ++ )
            a [ i ] = ""LEFT"";
        for ( int i = 0 ; i < m ; i ++ )
            a [ m + i ] = ""PRINT "" + v.charAt( i + k - 1 );
        for ( int i = 0 ; i < m ; i ++ )
            a [ 2 * m + i ] = ""RIGHT"";
        for ( int i = 0 ; i < 2 * m + 2 * f ; i ++ )
            System.out.println ( a [ i ] );
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC148_F.java,"import java.util.*;
import java.io.*;
public class atcoder_ABC148_F {
    static int n,ta,ao;
    static ArrayList<Integer>[] g;
    static int[] ta_dist,ao_dist;
    public static void main ( String[] args )
    {
        n=in.nextInt();
        ta=in.nextInt();
        ao=in.nextInt();
        ta--;ao--;
        g=new ArrayList[n];
        for(int i=0;i<n;i++) g[i]=new ArrayList<Integer>();
        for(int i=0;i<n-1;i++)
        {
            int a=in.nextInt(),b=in.nextInt();
            g[a-1].add(b-1);
            g[b-1].add(a-1);
        }
        ta_dist=new int[n];
        ao_dist=new int[n];
        dfs(ta,ta_dist);
        dfs(ao,ao_dist);
        int res=0;
        for(int i=0;i<n;i++) res=Math.max(res,ao_dist[i]);
        System.out.println(res-1);
    }
    static void dfs(int node,int[] dist)
    {
        for(int v:g[node])
        {
            if(dist[v]!=-1) continue;
            dist[v]=dist[node]+1;
            dfs(v,dist);
        }
    }
}","import java.util.*;
import java.io.*;
public class Main {
    static int n,ta,ao;
    static ArrayList<Integer>[] g;
    static int[] ta_dist,ao_dist;
    public static void main ( String[] args )
    {
        Scanner in = new Scanner(System.in);
        n=in.nextInt();
        ta=in.nextInt();
        ao=in.nextInt();
        ta--;ao--;
        g=new ArrayList[n];
        for(int i=0;i<n;i++) g[i]=new ArrayList<Integer>();
        for(int i=0;i<n-1;i++)
        {
            int a=in.nextInt(),b=in.nextInt();
            g[a-1].add(b-1);
            g[b-1].add(a-1);
        }
        ta_dist=new int[n];
        ao_dist=new int[n];
        dfs(ta,ta_dist);
        dfs(ao,ao_dist);
        int res=0;
        for(int i=0;i<n;i++) res=Math.max(res,ao_dist[i]);
        System.out.println(res-1);
    }
    static void dfs(int node,int[] dist)
    {
        for(int v:g[node])
        {
            if(dist[v]!=-1) continue;
            dist[v]=dist[node]+1;
            dfs(v,dist);
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_637_A.java,"import java.util.*;
public class codeforces_637_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        int[] w = new int[26];
        for (int i = 0; i < n; i++) {
            w[s.charAt(i) - 'a']++;
        }
        int c = -1, a = 0;
        for (int i = 0; i < 26; i++) {
            if (w[i] == Math.max(w)) {
                if (s.lastIndexOf((char) (i + 'a')) > c) {
                    a = i;
                    c = s.lastIndexOf((char) (i + 'a'));
                }
            }
        }
        System.out.println((char) (a + 'a'));
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        int[] w = new int[26];
        for (int i = 0; i < n; i++) {
            w[s.charAt(i) - 'a']++;
        }
        int c = -1, a = 0;
        for (int i = 0; i < 26; i++) {
            if (w[i] == max(w)) {
                if (s.lastIndexOf((char) (i + 'a')) > c) {
                    a = i;
                    c = s.lastIndexOf((char) (i + 'a'));
                }
            }
        }
        System.out.println((char) (a + 'a'));
    }

    public static int max(int[] arr) {
        int maxVal = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > maxVal) {
                maxVal = arr[i];
            }
        }
        return maxVal;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC042_A.java,"import java.util.*;
public class atcoder_ABC042_A{
public static void main(String[] args) {
Scanner sc = new Scanner(System.in);
int[] ABC = new int[3];
for(int i=0;i<3;i++){
ABC[i] = sc.nextInt();
}
if(ABC.length==3 && ABC.contains(5)==2){
if(ABC[0]+ABC[1]+ABC[2]==17){
System.out.println(""YES"");
}else{
System.out.println(""NO"");
}
}else{
System.out.println(""NO"");
}
}
}","import java.util.*;
public class Main{
public static void main(String[] args) {
Scanner sc = new Scanner(System.in);
int[] ABC = new int[3];
for(int i=0;i<3;i++){
ABC[i] = sc.nextInt();
}
if(ABC.length==3 && count(ABC, 5)==2){
if(ABC[0]+ABC[1]+ABC[2]==17){
System.out.println(""YES"");
}else{
System.out.println(""NO"");
}
}else{
System.out.println(""NO"");
}
}
public static int count(int[] arr, int target) {
int cnt = 0;
for(int a : arr){
if(a==target) cnt++;
}
return cnt;
}
}"
StarCoder,avatar,Python,Java,atcoder_ABC126_D.java,"import java.util.*;
import java.io.*;
class Node {
    int val;
    boolean color;
    ArrayList<Node> a;
    Node() {
        a = new ArrayList<Node>();
    }
}
public class atcoder_ABC126_D {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Node[] nodes = new Node[n];
        for(int i = 0; i < n; i++) {
            nodes[i] = new Node();
        }
        for(int i = 0; i < n - 1; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
            int w = sc.nextInt();
            Node node1 = nodes[u - 1];
            Node node2 = nodes[v - 1];
            node1.val = u;
            node2.val = v;
            node1.a.add(node2);
            node2.a.add(node1);
        }
        Node root = nodes[0];
        root.color = true;
        Set<Node> nodeSet = new HashSet<Node>();
        traverse(root, 0, nodeSet);
        for(int i = 0; i < n; i++) {
            Node node = nodes[i];
            if(node.color) {
                System.out.println(1);
            } else {
                System.out.println(0);
            }
        }
    }
    public static void traverse(Node node, int distance, Set<Node> nodeSet) {
        if(nodeSet.contains(node)) {
            return;
        }
        nodeSet.add(node);
        for(Node adjNode : node.a) {
            int dis = 0;
            for(Node pair : node.a) {
                if(pair.val == adjNode.val) {
                    dis = pair.val;
                    break;
                }
            }
            if((distance + dis) % 2 == 0) {
                adjNode.color = root.color;
            } else {
                adjNode.color =!root.color;
            }
            traverse(adjNode, distance + dis, nodeSet);
        }
    }
}","import java.util.*;
import java.io.*;
class Node {
    int val;
    boolean color;
    ArrayList<Node> a;
    Node() {
        a = new ArrayList<Node>();
    }
}
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Node[] nodes = new Node[n];
        for(int i = 0; i < n; i++) {
            nodes[i] = new Node();
        }
        for(int i = 0; i < n - 1; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
            int w = sc.nextInt();
            Node node1 = nodes[u - 1];
            Node node2 = nodes[v - 1];
            node1.val = u;
            node2.val = v;
            node1.a.add(node2);
            node2.a.add(node1);
        }
        Node root = nodes[0];
        root.color = true;
        Set<Node> nodeSet = new HashSet<Node>();
        traverse(root, 0, nodeSet, root);
        for(int i = 0; i < n; i++) {
            Node node = nodes[i];
            if(node.color) {
                System.out.println(1);
            } else {
                System.out.println(0);
            }
        }
    }
    public static void traverse(Node node, int distance, Set<Node> nodeSet, Node root) {
        if(nodeSet.contains(node)) {
            return;
        }
        nodeSet.add(node);
        for(Node adjNode : node.a) {
            int dis = 0;
            for(Node pair : node.a) {
                if(pair.val == adjNode.val) {
                    dis = pair.val;
                    break;
                }
            }
            if((distance + dis) % 2 == 0) {
                adjNode.color = root.color;
            } else {
                adjNode.color =!root.color;
            }
            traverse(adjNode, distance + dis, nodeSet, root);
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_67_B.java,"import java.util.*;
public class codeforces_67_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] M = new int[n];
        for (int i = 0; i < n; i++) {
            M[i] = sc.nextInt();
        }
        int m = 0;
        for (int j = 0; j < n; j++) {
            for (int p = 0; p < n; p++) {
                if (M[p] == 0) {
                    System.out.print(p + 1 + "" "");
                    break;
                }
            }
            for (int l = p + 1 - k; l < p; l++) {
                M[l]--;
            }
            M[p]--;
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] M = new int[n];
        for (int i = 0; i < n; i++) {
            M[i] = sc.nextInt();
        }
        int m = 0;
        for (int j = 0; j < n; j++) {
            int p = 0;
            for (p = 0 ; p < n; p++) {
                if (M[p] == 0) {
                    System.out.print(p + 1 + "" "");
                    break;
                }
            }
            for(int l = 0; l < p + 1 - k; l++){
                M[l]--;
            }
            M[p]--;
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC126_E.java,"import java.util.*;
import java.io.*;
public class atcoder_ABC126_E {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        boolean[] used = new boolean[n];
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (!used[i]) {
                ans++;
                Queue<Integer> queue = new LinkedList<>();
                queue.add(i);
                while (!queue.isEmpty()) {
                    int node = queue.poll();
                    used[node] = true;
                    for (int nextnode : edge[node]) {
                        if (!used[nextnode]) {
                            queue.add(nextnode);
                        }
                    }
                }
            }
        }
        System.out.println(ans);
    }
}","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        boolean[] used = new boolean[n];
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (!used[i]) {
                ans++;
                Queue<Integer> queue = new LinkedList<>();
                queue.add(i);
                while (!queue.isEmpty()) {
                    int node = queue.poll();
                    used[node] = true;
                    for (int nextnode : edge[node]) {
                        if (!used[nextnode]) {
                            queue.add(nextnode);
                        }
                    }
                }
            }
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,codeforces_653_A.java,"import java.util.*;
public class codeforces_653_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = sc.nextInt();
        }
        Arrays.sort(l);
        for (int i = 0; i < n; i++) {
            if (l[i] + 1 == l[i + 1] || l[i] + 2 == l[i + 1]) {
                System.out.println(""YES"");
                break;
            }
        } else {
            System.out.println(""NO"");
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        List<Integer> l = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            l.add(sc.nextInt());
        }
        Collections.sort(l);
        for (int i : l) {
            if (l.contains(i + 1) && l.contains(i + 2)) {
                System.out.println(""YES"");
                return;
            }
        }
        System.out.println(""NO"");
    }
}"
StarCoder,avatar,Python,Java,atcoder_ARC086_B.java,"import java.util.*;
import java.io.*;
public class atcoder_ARC086_B {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in );
        int N = sc.nextInt ( );
        int [ ] a = new int [ N ];
        for ( int i = 0 ; i < N ; i ++ ) a [ i ] = sc.nextInt ( );
        int max_val = 0, max_sign = 0, max_index = - 1;
        for ( int i = 0 ; i < N ; i ++ ) {
            if ( Math.abs ( a [ i ] ) > max_val ) {
                max_val = Math.abs ( a [ i ] );
                max_sign = a [ i ] > 0? 1 : - 1;
                max_index = i;
            }
        }
        if ( max_sign == 0 ) System.out.println ( 0 );
        else {
            System.out.println ( 2 * N - 1 );
            for ( int i = 0 ; i < N ; i ++ ) {
                System.out.println ( max_index + 1, i + 1 );
            }
            for ( int i = 0 ; i < N - 1 ; i ++ ) {
                System.out.println ( i + 1, i + 2 );
            }
        }
    }
}","import java.util.*;
import java.io.*;
public class Main {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in );
        int N = sc.nextInt ( );
        int [ ] a = new int [ N ];
        for ( int i = 0 ; i < N ; i ++ ) a [ i ] = sc.nextInt ( );
        int max_val = 0, max_sign = 0, max_index = - 1;
        for ( int i = 0 ; i < N ; i ++ ) {
            if ( Math.abs ( a [ i ] ) > max_val ) {
                max_val = Math.abs ( a [ i ] );
                max_sign = a [ i ] > 0? 1 : - 1;
                max_index = i;
            }
        }
        if ( max_sign == 0 ) System.out.println ( 0 );
        else {
            System.out.println ( 2 * N - 1 );
            for ( int i = 0 ; i < N ; i ++ ) {
                System.out.println( ( max_index + 1 ) + "" "" + ( i + 1 ) );
            }
            for ( int i = 0 ; i < N - 1 ; i ++ ) {
                System.out.println ( ( i + 1 ) + "" "" + ( i + 2 ) );
            }
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_86_A.java,"import java.util.*;
public class codeforces_86_A {
    public static void main ( String[] args )
    {
        Scanner sc = new Scanner ( System.in );
        int l = sc.nextInt ( );
        int r = sc.nextInt ( );
        int curr = r;
        int s = 0;
        while ( curr > 0 )
        {
            s++;
            curr /= 10;
        }
        int first = (int) Math.pow ( 10, s );
        int second = first / 2;
        int ans = -1;
        for ( int i = l ; i <= r ; i++ )
        {
            if ( i >= l && i <= r )
            {
                curr = i;
                String rev = """";
                for ( int k = 0 ; k < curr.toString ( ).length ( ) ; k++ )
                {
                    rev += ( 9 - Integer.parseInt ( curr.toString ( ).charAt ( k ) + """" ) );
                }
                ans = Math.max ( ans, Integer.parseInt ( rev ) * curr );
            }
        }
        System.out.println ( ans );
    }
}","import java.util.*;
public class Main {
    public static void main ( String[] args )
    {
        Scanner sc = new Scanner ( System.in );
        int l = sc.nextInt ( );
        int r = sc.nextInt ( );
        int curr = r;
        int s = 0;
        while ( curr > 0 )
        {
            s++;
            curr /= 10;
        }
        int first = (int) Math.pow ( 10, s );
        int second = first / 2;
        long ans = -1;
        for (int i : new int[]{l, r, first, second})
        {
            if ( i >= l && i <= r )
            {
                curr = i;
                String rev = """";
                for ( int k = 0 ; k < String.valueOf( curr ).length ( ) ; k++ )
                {
                    rev += ( 9 - Integer.parseInt ( String.valueOf( curr ).charAt ( k ) + """" ) );
                }
                ans = Math.max ( ans, Long.parseLong ( rev ) * curr );
            }
        }
        System.out.println ( ans );
    }
}"
StarCoder,avatar,Python,Java,codeforces_147_A.java,"s = input ( )
res = new String [ ]
punctuation = new String [ ',', '.','!','?' ]
for ( int i = 0 ; i < s.length ( ) ; i++ ) {
    if ( i >= 1 ) {
        if ( s.charAt ( i ) =='' ) {
            if ( res [ res.length ( ) - 1 ]!='' ) {
                res [ res.length ( ) ] = s.charAt ( i ) ;
            }
        }
        else {
            if ( s.charAt ( i ) in punctuation ) {
                if ( res [ res.length ( ) - 1 ] =='' ) {
                    res [ res.length ( ) - 1 ] = """" ;
                }
                res [ res.length ( ) ] = s.charAt ( i ) ;
                res [ res.length ( ) ] = """" ;
            }
            else {
                res [ res.length ( ) ] = s.charAt ( i ) ;
            }
        }
    }
    else {
        if ( s.charAt ( i ) =='' ) {
            continue ;
        }
        if ( s.charAt ( i ) in punctuation ) {
            continue ;
        }
        else {
            res [ res.length ( ) ] = s.charAt ( i ) ;
        }
    }
}
System.out.println ( String.valueOf ( res ) )","
import java.util.*;
public class Main {
    public static void main ( String[] args ) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        String [ ] res = new String [ ];
        String [ ] punctuation = new String [ ',', '.','!','?' ];
        for ( int i = 0 ; i < s.length ( ) ; i++ ) {
            if ( i >= 1 ) {
                if ( s.charAt ( i ) =='' ) {
                    if ( res [ res.length ( ) - 1 ]!='' ) {
                        res [ res.length ( ) ] = s.charAt ( i ) ;
                    }
                }
                else {
                    if ( s.charAt ( i ) in punctuation ) {
                        if ( res [ res.length ( ) - 1 ] =='' ) {
                            res [ res.length ( ) - 1 ] = """" ;
                        }
                        res [ res.length ( ) ] = s.charAt ( i ) ;
                        res [ res.length ( ) ] = """" ;
                    }
                    else {
                        res [ res.length ( ) ] = s.charAt ( i ) ;
                    }
                }
            }
            else {
                if ( s.charAt ( i ) =='' ) {
                    continue ;
                }
                if ( s.charAt ( i ) in punctuation ) {
                    continue ;
                }
                else {
                    res [ res.length ( ) ] = s.charAt ( i ) ;
                }
            }
        }
        System.out.println ( String.valueOf ( res ) )
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC035_B.java,"import java.util.*;
import java.io.*;
public class atcoder_AGC035_B {
    public static void main ( String args [ ] ) throws IOException
    {
        BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ;
        int N = Integer.parseInt ( br.readLine ( ) ) ;
        int M = Integer.parseInt ( br.readLine ( ) ) ;
        int [ ] edges = new int [ N ] [ ] ;
        int [ ] degs = new int [ N ] ;
        int [ ] parity = new int [ N ] ;
        boolean [ ] flag = new boolean [ N ] ;
        for ( int i = 0 ; i < N ; i ++ )
        {
            edges [ i ] = new int [ 2 ] ;
            degs [ i ] = 0 ;
            parity [ i ] = 0 ;
            flag [ i ] = false ;
        }
        for ( int i = 0 ; i < M ; i ++ )
        {
            String [ ] temp = br.readLine ( ).split ( "" "" ) ;
            int a = Integer.parseInt ( temp [ 0 ] ) ;
            int b = Integer.parseInt ( temp [ 1 ] ) ;
            edges [ a - 1 ] [ 0 ] = b ;
            edges [ a - 1 ] [ 1 ] = 1 ;
            edges [ b - 1 ] [ 0 ] = a ;
            edges [ b - 1 ] [ 1 ] = 0 ;
            degs [ a - 1 ] += 1 ;
            degs [ b - 1 ] += 1 ;
        }
        if ( M % 2!= 0 )
        {
            System.out.println ( - 1 ) ;
            return ;
        }
        PriorityQueue < Integer > Q = new PriorityQueue < > ( ) ;
        for ( int i = 0 ; i < N ; i ++ )
        {
            Q.add ( degs [ i ] ) ;
        }
        while ( Q.size ( ) > 0 )
        {
            int u = Q.poll ( ) ;
            if ( flag [ u ] )
                continue ;
            flag [ u ] = true ;
            for ( int i = 0 ; i < 2 ; i ++ )
            {
                int v = edges [ u ] [ i ] ;
                if ( parity [ u ]!= 0 && i == 0 )
                {
                    System.out.println ( u + 1 + "" "" + v + 1 ) ;
                    parity [ u ] = 1 - parity [ u ] ;
                }
                else
                {
                    System.out.println ( v + 1 + "" "" + u + 1 ) ;
                    parity [ v ] = 1 - parity [ v ] ;
                }
                degs [ v ] -= 1 ;
                Q.add ( degs [ v ] ) ;
            }
        }
    }
}","import java.util.*;
import java.io.*;
public class Main {
    public static void main ( String args [ ] ) throws IOException
    {
        BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ;
        int N = Integer.parseInt ( br.readLine ( ) ) ;
        int M = Integer.parseInt ( br.readLine ( ) ) ;
        int [ ] edges = new int [ N ] [ ] ;
        int [ ] degs = new int [ N ] ;
        int [ ] parity = new int [ N ] ;
        boolean [ ] flag = new boolean [ N ] ;
        for ( int i = 0 ; i < N ; i ++ )
        {
            edges [ i ] = new int [ 2 ] ;
            degs [ i ] = 0 ;
            parity [ i ] = 0 ;
            flag [ i ] = false ;
        }
        for ( int i = 0 ; i < M ; i ++ )
        {
            String [ ] temp = br.readLine ( ).split ( "" "" ) ;
            int a = Integer.parseInt ( temp [ 0 ] ) ;
            int b = Integer.parseInt ( temp [ 1 ] ) ;
            edges [ a - 1 ] [ 0 ] = b ;
            edges [ a - 1 ] [ 1 ] = 1 ;
            edges [ b - 1 ] [ 0 ] = a ;
            edges [ b - 1 ] [ 1 ] = 0 ;
            degs [ a - 1 ] += 1 ;
            degs [ b - 1 ] += 1 ;
        }
        if ( M % 2!= 0 )
        {
            System.out.println ( - 1 ) ;
            return ;
        }
        PriorityQueue < Integer > Q = new PriorityQueue < > ( ) ;
        for ( int i = 0 ; i < N ; i ++ )
        {
            Q.add ( degs [ i ] ) ;
        }
        while ( Q.size ( ) > 0 )
        {
            int u = Q.poll ( ) ;
            if ( flag [ u ] )
                continue ;
            flag [ u ] = true ;
            for ( int i = 0 ; i < 2 ; i ++ )
            {
                int v = edges [ u ] [ i ] ;
                if ( parity [ u ]!= 0 && i == 0 )
                {
                    System.out.println ( u + 1 + "" "" + v + 1 ) ;
                    parity [ u ] = 1 - parity [ u ] ;
                }
                else
                {
                    System.out.println ( v + 1 + "" "" + u + 1 ) ;
                    parity [ v ] = 1 - parity [ v ] ;
                }
                degs [ v ] -= 1 ;
                Q.add ( degs [ v ] ) ;
            }
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC028_A.java,"import java.util.*;
public class atcoder_AGC028_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        String S = sc.next();
        String T = sc.next();
        List<Integer> list_S = new ArrayList<Integer>();
        List<Integer> list_T = new ArrayList<Integer>();
        for (int i = 0; i < N; i++) {
            list_S.add(S.charAt(i) - '0');
        }
        for (int i = 0; i < M; i++) {
            list_T.add(T.charAt(i) - '0');
        }
        List<Integer> Number_i = new ArrayList<Integer>();
        for (int i = 0; i < N; i++) {
            Number_i.add(i);
        }
        List<Integer> Number_iMN = new ArrayList<Integer>();
        for (int i = 0; i < N; i++) {
            Number_iMN.add(i * M / N);
        }
        List<Integer> Number_j = new ArrayList<Integer>();
        for (int j = 0; j < M; j++) {
            Number_j.add(j);
        }
        List<Integer> Kaburi_j = new ArrayList<Integer>(Number_iMN);
        Kaburi_j.retainAll(Number_j);
        List<Integer> Kaburi_i = new ArrayList<Integer>();
        for (int j : Kaburi_j) {
            Kaburi_i.add(j * N / M);
        }
        int counter = 0;
        int Flag = 0;
        int Kaburi_Size = Kaburi_i.size();
        while (counter <= Kaburi_Size - 1) {
            if (list_S.get(Kaburi_i.get(counter)) == list_T.get(Kaburi_j.get(counter))) {
                counter++;
            } else {
                Flag = 1;
                break;
            }
        }
        if (Flag == 1) {
            System.out.println(-1);
        } else {
            System.out.println(N * M / Math.gcd(N, M));
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        String S = sc.next();
        String T = sc.next();
        List<Integer> list_S = new ArrayList<Integer>();
        List<Integer> list_T = new ArrayList<Integer>();
        for (int i = 0; i < N; i++) {
            list_S.add(S.charAt(i) - '0');
        }
        for (int i = 0; i < M; i++) {
            list_T.add(T.charAt(i) - '0');
        }
        List<Integer> Number_i = new ArrayList<Integer>();
        for (int i = 0; i < N; i++) {
            Number_i.add(i);
        }
        List<Integer> Number_iMN = new ArrayList<Integer>();
        for (int i = 0; i < N; i++) {
            Number_iMN.add(i * M / N);
        }
        List<Integer> Number_j = new ArrayList<Integer>();
        for (int j = 0; j < M; j++) {
            Number_j.add(j);
        }
        List<Integer> Kaburi_j = new ArrayList<Integer>(Number_iMN);
        Kaburi_j.retainAll(Number_j);
        List<Integer> Kaburi_i = new ArrayList<Integer>();
        for (int j : Kaburi_j) {
            Kaburi_i.add(j * N / M);
        }
        int counter = 0;
        int Flag = 0;
        int Kaburi_Size = Kaburi_i.size();
        while (counter <= Kaburi_Size - 1) {
            if (list_S.get(Kaburi_i.get(counter)) == list_T.get(Kaburi_j.get(counter))) {
                counter++;
            } else {
                Flag = 1;
                break;
            }
        }
        if (Flag == 1) {
            System.out.println(-1);
        } else {
            System.out.println(N * M / gcd(N, M));
        }
    }
    public static int gcd(int a, int b) {
        while (b > 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}"
StarCoder,avatar,Python,Java,codeforces_622_A.java,"import java.util.Scanner;
public class codeforces_622_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int l = 1, r = n;
        while (l < r) {
            int mid = l + (r - l) / 2;
            int idxcnt = mid * (mid + 1) / 2;
            if (idxcnt < n) {
                l = mid + 1;
            } else {
                r = mid;
            }
        }
        l -= 1;
        idxcnt = l * (l + 1) / 2;
        System.out.println(n - idxcnt);
    }
}","import java.util.Scanner;
import java.math.BigInteger;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        BigInteger n = scanner.nextBigInteger();
        BigInteger l = BigInteger.ONE;
        BigInteger r = n;
        while (l.compareTo(r) < 0) {
            BigInteger mid = l.add(r).divide(BigInteger.valueOf(2));
            BigInteger idxcnt = mid.multiply(mid.add(BigInteger.ONE)).divide(BigInteger.valueOf(2));

            if (idxcnt.compareTo(n) < 0) {
                l = mid.add(BigInteger.ONE);
            } else {
                r = mid;
            }
        }
        l = l.subtract(BigInteger.ONE);
        BigInteger idxcnt = l.multiply(l.add(BigInteger.ONE)).divide(BigInteger.valueOf(2));
        System.out.println(n.subtract(idxcnt));
    }
}"
StarCoder,avatar,Python,Java,codeforces_8_B.java,"import java.util.Scanner;

public class codeforces_8_B {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String record_of_movements = sc.next();
        int x = 0, y = 0;
        char[][] d_movement = new char[][]{{'L', 0, -1}, {'R', 0, 1}, {'U', 1, 0}, {'D', -1, 0}};
        boolean bug = false;
        for (int i = 0; i < record_of_movements.length(); i++) {
            char move = record_of_movements.charAt(i);
            int temp_x = x, temp_y = y;
            x += d_movement[move - 'A'][1];
            y += d_movement[move - 'A'][2];
            if (!d.containsKey(new Integer[]{x, y})) {
                for (int j = 0; j < d_movement.length; j++) {
                    if ((x + d_movement[j][1], y + d_movement[j][2])!= (temp_x, temp_y) && d.containsKey(new Integer[]{x + d_movement[j][1], y + d_movement[j][2]})) {
                        bug = true;
                        break;
                    }
                }
            } else {
                bug = true;
            }
            if (bug) {
                break;
            }
            d.put(new Integer[]{x, y}, """");
        }
        if (bug) {
            System.out.println(""BUG"");
        } else {
            System.out.println(""OK"");
        }
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String record_of_movements = sc.next();
        int x = 0, y = 0;
        char[][] d_movement = new char[][]{{'L', 0, -1}, {'R', 0, 1}, {'U', 1, 0}, {'D', -1, 0}};
        boolean bug = false;
        for (int i = 0; i < record_of_movements.length(); i++) {
            char move = record_of_movements.charAt(i);
            int temp_x = x, temp_y = y;
            x += d_movement[move - 'A'][1];
            y += d_movement[move - 'A'][2];
            if (!d.containsKey(new Integer[]{x, y})) {
                for (int j = 0; j < d_movement.length; j++) {
                    if ((x + d_movement[j][1], y + d_movement[j][2])!= (temp_x, temp_y) && d.containsKey(new Integer[]{x + d_movement[j][1], y + d_movement[j][2]})) {
                        bug = true;
                        break;
                    }
                }
            } else {
                bug = true;
            }
            if (bug) {
                break;
            }
            d.put(new Integer[]{x, y}, """");
        }
        if (bug) {
            System.out.println(""BUG"");
        } else {
            System.out.println(""OK"");
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_49_A.java,"import java.util.*;
public class codeforces_49_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        char[] ch = s.toCharArray();
        for(int i=ch.length-1;i>=0;i--)
        {
            if(ch[i]==''|| ch[i]=='?')
            {
                continue;
            }
            else
            {
                if(ch[i]=='a' || ch[i]=='e' || ch[i]=='i' || ch[i]=='o' || ch[i]=='u' || ch[i]=='A' || ch[i]=='E' || ch[i]=='I' || ch[i]=='O' || ch[i]=='U' || ch[i]=='Y')
                {
                    System.out.println(""YES"");
                    break;
                }
                else
                {
                    System.out.println(""NO"");
                    break;
                }
            }
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        char[] ch = s.toCharArray();
        for(int i=ch.length-1;i>=0;i--)
        {
            if(ch[i]==' '|| ch[i]=='?')
            {
                continue;
            }
            else
            {   
                if(ch[i]=='a' || ch[i]=='e' || ch[i]=='i' || ch[i]=='o' || ch[i]=='u' || ch[i]=='A' || ch[i]=='E' || ch[i]=='I' || ch[i]=='O' || ch[i]=='U' || ch[i]=='Y')
                {
                    System.out.println(""YES"");
                    break;
                }
                else
                {
                    System.out.println(""NO"");
                    break;
                }
            }
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_274_A.java,"import java.util.*;
public class codeforces_274_A {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int k = sc.nextInt ( ) ;
        int [ ] arr = new int [ n ] ;
        for ( int i = 0 ; i < n ; i++ )
            arr [ i ] = sc.nextInt ( ) ;
        Arrays.sort ( arr ) ;
        Set < Integer > different = new HashSet < > ( ) ;
        int temp = 0 ;
        for ( int x : arr )
            if ( x % k!= 0 ||! x // k in different )
                different.add ( x ) ;
            temp = Math.max ( temp, different.size ( ) ) ;
        System.out.println ( temp ) ;
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int k = sc.nextInt ( ) ;
        int [ ] arr = new int [ n ] ;
        for ( int i = 0 ; i < n ; i++ )
            arr [ i ] = sc.nextInt ( ) ;
        Arrays.sort ( arr ) ;
        Set < Integer > different = new HashSet < > ( ) ;
        int temp = 0 ;
        for ( int x : arr )
            if ( x % k!= 0 ||! different.contains(x / k) )
                different.add ( x ) ;
            temp = Math.max ( temp, different.size ( ) ) ;
        System.out.println ( temp ) ;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC170_A.java,"import java.util.*;
public class atcoder_ABC170_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] a = new int[sc.nextInt()];
        for (int i = 0; i < a.length; i++) {
            a[i] = sc.nextInt();
        }
        for (int i = 0; i < a.length; i++) {
            if (a[i] == 0) {
                System.out.println(i + 1);
                break;
            }
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String line = sc.nextLine();
        String[] numbers = line.split("" "");
        int[] a = new int[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            a[i] = Integer.parseInt(numbers[i]);
        }
        for (int i = 0; i < a.length; i++) {
            if (a[i] == 0) {
                System.out.println(i + 1);
                break;
            }
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC124_A.java,"import java.util.*;
public class atcoder_ABC124_A {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int c = 0;
        for (int i = 0; i < 2; i++) {
            c += Math.max(a, b);
            if (a >= b) {
                a--;
            } else {
                b--;
            }
        }
        System.out.println(c);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int c = 0;
        for (int i = 0; i < 2; i++) {
            c += Math.max(a, b);
            if (a >= b) {
                a--;
            } else {
                b--;
            }
        }
        System.out.println(c);
    }
}"
StarCoder,avatar,Python,Java,codeforces_651_A.java,"import java.util.*;
public class codeforces_651_A {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int x = sc.nextInt ( ) ;
        int y = sc.nextInt ( ) ;
        System.out.println ( Math.max ( x + y - 3 + ( ( y - x ) % 3 > 0 ), 0 ) ) ;
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int x = sc.nextInt ( ) ;
        int y = sc.nextInt ( ) ;
        System.out.println ( Math.max ( x + y - 3 + ( ( ( ( y - x ) % 3 + 3 ) % 3 > 0 ) ? 1 : 0 ), 0 ) ) ;
    }
}"
StarCoder,avatar,Python,Java,codeforces_351_A.java,"import java.util.*;
import java.io.*;

public class codeforces_351_A {
    public static void main ( String[] args )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        double[] arr = new double[n];
        for ( int i = 0 ; i < n ; i++ )
            arr[i] = sc.nextDouble ( );
        Arrays.sort ( arr, ( a, b ) -> ( int ) ( a - b ) );
        int o = 2 * n - arr.length;
        double arr_sum = 0;
        for ( int i = 0 ; i < n ; i++ )
            arr_sum += arr[i];
        double res = 1e9;
        for ( int i = 0 ; i <= n ; i++ )
            if ( i + o < n )
                res = Math.min ( res, Math.abs ( i - arr_sum ) );
        System.out.printf ( ""%.3f"", res );
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main ( String[] args )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        double[] arr = new double[n];
        for ( int i = 0 ; i < n ; i++ )
            arr[i] = sc.nextDouble ( );
        Arrays.sort ( arr, ( a, b ) -> ( int ) ( a - b ) );
        int o = 2 * n - arr.length;
        double arr_sum = 0;
        for ( int i = 0 ; i < n ; i++ )
            arr_sum += arr[i];
        double res = 1e9;
        for ( int i = 0 ; i <= n ; i++ )
            if ( i + o < n )
                res = Math.min ( res, Math.abs ( i - arr_sum ) );
        System.out.printf ( ""%.3f"", res );
    }
}"
StarCoder,avatar,Python,Java,codeforces_408_B.java,"import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Collections;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.function.Function;
import java.util.function.IntFunction;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.
","import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Collections;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.function.Function;
import java.util.function.IntFunction;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.
"
StarCoder,avatar,Python,Java,atcoder_AGC011_C.java,"import java.util.Scanner;

public class atcoder_AGC011_C {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] vis = new int[n + 1];
        int ci = 0, cb = 0, cc = 0;
        int[] g = new int[n + 1][];
        for (int i = 0; i < m; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
            if (g[u] == null) {
                g[u] = new int[1];
                g[u][0] = v;
            } else {
                int[] temp = new int[g[u].length + 1];
                for (int j = 0; j < g[u].length; j++) {
                    temp[j] = g[u][j];
                }
                temp[g[u].length] = v;
                g[u] = temp;
            }
            if (g[v] == null) {
                g[v] = new int[1];
                g[v][0] = u;
            } else {
                int[] temp = new int[g[v].length + 1];
                for (int j = 0; j < g[v].length; j++) {
                    temp[j] = g[v][j];
                }
                temp[g[v].length] = u;
                g[v] = temp;
            }
        }
        for (int i = 1; i <= n; i++) {
            if (vis[i] == 0) {
                if (g[i] == null) {
                    ci++;
                } else {
                    boolean flag = true;
                    for (int j = 0; j < g[i].length; j++) {
                        if (vis[g[i][j]] == 0) {
                            flag &= dfs(g[i][j], 1);
                        } else {
                            flag &= (vis[g[i][j]] == 1);
                        }
                    }
                    if (flag) {
                        cb++;
                    } else {
                        cc++;
                    }
                }
            }
        }
        System.out.println(ci * ci + 2 * ci * (n - ci) + cc * cc + 2 * cb * cc + 2 * cb * cb);
    }

    public static boolean dfs(int u, int col) {
        boolean flag = true;
        vis[u] = col;
        for (int i = 0; i < g[u].length; i++) {
            if (vis[g[u][i]] == 0) {
                flag &= dfs(g[u][i], 3 - col);
            } else {
                flag &= (vis[g[u][i]] == 3 - col);
            }
        }
        return flag;
    }
}","import java.util.Scanner;

public class Main {
    static int[] vis;
    static int[][] g;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        vis = new int[n + 1];
        int ci = 0, cb = 0, cc = 0;
        g = new int[n + 1][];
        for (int i = 0; i < m; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
            if (g[u] == null) {
                g[u] = new int[1];
                g[u][0] = v;
            } else {
                int[] temp = new int[g[u].length + 1];
                for (int j = 0; j < g[u].length; j++) {
                    temp[j] = g[u][j];
                }
                temp[g[u].length] = v;
                g[u] = temp;
            }
            if (g[v] == null) {
                g[v] = new int[1];
                g[v][0] = u;
            } else {
                int[] temp = new int[g[v].length + 1];
                for (int j = 0; j < g[v].length; j++) {
                    temp[j] = g[v][j];
                }
                temp[g[v].length] = u;
                g[v] = temp;
            }
        }
        for (int i = 1; i <= n; i++) {
            if (vis[i] == 0) {
                if (g[i] == null) {
                    ci++;
                } else {
                    boolean flag = true;
                    for (int j = 0; j < g[i].length; j++) {
                        if (vis[g[i][j]] == 0) {
                            flag &= dfs(g[i][j], 1);
                        } else {
                            flag &= (vis[g[i][j]] == 1);
                        }
                    }
                    if (flag) {
                        cb++;
                    } else {
                        cc++;
                    }
                }
            }
        }
        System.out.println(ci * ci + 2 * ci * (n - ci) + cc * cc + 2 * cb * cc + 2 * cb * cb);
    }

    public static boolean dfs(int u, int col) {
        boolean flag = true;
        vis[u] = col;
        for (int i = 0; i < g[u].length; i++) {
            if (vis[g[u][i]] == 0) {
                flag &= dfs(g[u][i], 3 - col);
            } else {
                flag &= (vis[g[u][i]] == 3 - col);
            }
        }
        return flag;
    }
}"
StarCoder,avatar,Python,Java,codeforces_242_B.java,"import java.util.*;
public class codeforces_242_B {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int id = 0 ;
        int l = sc.nextInt ( ) ;
        int r = sc.nextInt ( ) ;
        for ( int i = 1 ; i < n ; i ++ )
        {
            int li = sc.nextInt ( ) ;
            int ri = sc.nextInt ( ) ;
            if ( li <= l && r <= ri ) id = i ;
            else if ( li < l || r < ri ) id = n ;
            l = Math.min ( l, li ) ;
            r = Math.max ( r, ri ) ;
        }
        System.out.println ( - 1 if ( id == n ) else id + 1 ) ;
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int id = 0 ;
        int l = sc.nextInt ( ) ;
        int r = sc.nextInt ( ) ;
        for ( int i = 1 ; i < n ; i ++ )
        {
            int li = sc.nextInt ( ) ;
            int ri = sc.nextInt ( ) ;
            if ( li <= l && r <= ri ) id = i ;
            else if ( li < l || r < ri ) id = n ;
            l = Math.min ( l, li ) ;
            r = Math.max ( r, ri ) ;
        }
        System.out.println ( ( id == n ) ? - 1 : id + 1 ) ;
    }
}"
StarCoder,avatar,Python,Java,codeforces_519_B.java,"import java.util.*;
public class codeforces_519_B {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        int[] b = new int[n];
        int[] c = new int[n];
        for(int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        for(int i = 0; i < n; i++) {
            b[i] = sc.nextInt();
        }
        for(int i = 0; i < n; i++) {
            c[i] = sc.nextInt();
        }
        int x = 0;
        int y = 0;
        int z = 0;
        for(int i = 0; i < n; i++) {
            x += a[i];
        }
        for(int i = 0; i < n; i++) {
            y += b[i];
        }
        for(int i = 0; i < n; i++) {
            z += c[i];
        }
        System.out.println(Math.abs(x - y));
        System.out.println(Math.abs(y - z));
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = Integer.parseInt(sc.nextLine());
        int[] a = new int[n];
        int[] b = new int[n];
        int[] c = new int[n];
        String[] aValues = sc.nextLine().split("" "");
        for (int i = 0; i < aValues.length; i++) {
            a[i] = Integer.parseInt(aValues[i]);
        }

        String[] bValues = sc.nextLine().split("" "");
        for (int i = 0; i < bValues.length; i++) {
            b[i] = Integer.parseInt(bValues[i]);
        }

        String[] cValues = sc.nextLine().split("" "");
        for (int i = 0; i < cValues.length; i++) {
            c[i] = Integer.parseInt(cValues[i]);
        }
        int x = 0;
        int y = 0;
        int z = 0;
        for(int i = 0; i < n; i++) {
            x += a[i];
        }
        for(int i = 0; i < n; i++) {
            y += b[i];
        }
        for(int i = 0; i < n; i++) {
            z += c[i];
        }
        System.out.println(Math.abs(x - y));
        System.out.println(Math.abs(y - z));
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC133_B.java,"import java.util.*;
import java.lang.*;
import java.io.*;
class atcoder_ABC133_B {
    public static void main ( String[] args ) {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int d = sc.nextInt ( );
        int count = 0;
        ArrayList < Integer > [] points = new ArrayList < > [ n ];
        for ( int i = 0 ; i < n ; i++ )
            points [ i ] = new ArrayList < > ( );
        for ( int i = 0 ; i < n ; i++ ) {
            for ( int j = 0 ; j < d ; j++ ) {
                int x = sc.nextInt ( );
                points [ i ].add ( x );
            }
        }
        for ( int i = 0 ; i < n ; i++ ) {
            for ( int j = i + 1 ; j < n ; j++ ) {
                double dist = 0.0;
                for ( int k = 0 ; k < d ; k++ ) {
                    dist += Math.pow ( points [ i ].get ( k ) - points [ j ].get ( k ), 2 );
                }
                if ( Math.sqrt ( dist ) % 1 == 0 )
                    count++;
            }
        }
        System.out.println ( count );
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;
class Main {
    public static void main ( String[] args ) {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int d = sc.nextInt ( );
        int count = 0;
        ArrayList < Integer > [] points = new ArrayList [ n ];
        for ( int i = 0 ; i < n ; i++ )
            points [ i ] = new ArrayList < > ( );
        for ( int i = 0 ; i < n ; i++ ) {
            for ( int j = 0 ; j < d ; j++ ) {
                int x = sc.nextInt ( );
                points [ i ].add ( x );
            }
        }
        for ( int i = 0 ; i < n ; i++ ) {
            for ( int j = i + 1 ; j < n ; j++ ) {
                double dist = 0.0;
                for ( int k = 0 ; k < d ; k++ ) {
                    dist += Math.pow ( points [ i ].get ( k ) - points [ j ].get ( k ), 2 );
                }
                if ( Math.sqrt ( dist ) % 1 == 0 )
                    count++;
            }
        }
        System.out.println ( count );
    }
}"
StarCoder,avatar,Python,Java,codeforces_456_A.java,"import java.util.*;
public class codeforces_456_A {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] m = new int[n][2];
        for(int i=0;i<n;i++){
            for(int j=0;j<2;j++){
                m[i][j] = in.nextInt();
            }
        }
        Arrays.sort(m, new Comparator<int[]>(){
            public int compare(int[] a, int[] b){
                return b[1] - a[1];
            }
        });
        int[] a = m[0];
        for(int[] i : m){
            if(i[1] > a[1]){
                System.out.println(""Happy Alex"");
                break;
            }
            a = i;
        }else{
            System.out.println(""Poor Alex"");
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] m = new int[n][2];
        for(int i=0;i<n;i++){
            for(int j=0;j<2;j++){
                m[i][j] = in.nextInt();
            }
        }
        Arrays.sort(m, new Comparator<int[]>(){
            public int compare(int[] a, int[] b){
                return b[1] - a[1];
            }
        });
        int[] a = m[0];
        boolean flag = false;
        for(int[] i : m){
            if(i[1] > a[1]){
                System.out.println(""Happy Alex"");
                flag = true;
                break;
            }
            a = i;
        }
        if(!flag){
            System.out.println(""Poor Alex"");
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_629_A.java,"import java.util.*;
public class codeforces_629_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[][] cake = new String[n][n];
        int happiness = 0;
        int chocCount = 0;
        int nfat = 1;
        for (int i = 0; i < n; i++) {
            String line = sc.next();
            cake[i] = line.split("""");
            for (int j = 0; j < line.length(); j++) {
                if (line.charAt(j) == 'C') {
                    chocCount++;
                }
            }
            if (chocCount > 1) {
                for (int i = chocCount; i > chocCount - 2; i--) {
                    nfat *= i;
                }
                happiness += nfat / 2;
            }
            nfat = 1;
            chocCount = 0;
        }
        int posCount = 0;
        for (int j = 0; j < n; j++) {
            for (int i = 0; i < n; i++) {
                if (cake[i][j] == 'C') {
                    chocCount++;
                }
            }
            if (chocCount > 1) {
                for (int i = chocCount; i > chocCount - 2; i--) {
                    nfat *= i;
                }
                happiness += nfat / 2;
            }
            nfat = 1;
            chocCount = 0;
        }
        System.out.println(happiness);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[][] cake = new String[n][n];
        int happiness = 0;
        int chocCount = 0;
        int nfat = 1;
        for (int i = 0; i < n; i++) {
            String line = sc.next();
            cake[i] = line.split("""");
            for (int j = 0; j < line.length(); j++) {
                if (line.charAt(j) == 'C') {
                    chocCount++;
                }
            }
            if (chocCount > 1) {
                for (int k = chocCount; k > chocCount - 2; k--) {
                    nfat *= k;
                }
                happiness += nfat / 2;
            }
            nfat = 1;
            chocCount = 0;
        }
        int posCount = 0;
        for (int j = 0; j < n; j++) {
            for (int i = 0; i < n; i++) {
                if (cake[i][j] == ""C"") {
                    chocCount++;
                }
            }
            if (chocCount > 1) {
                for (int i = chocCount; i > chocCount - 2; i--) {
                    nfat *= i;
                }
                happiness += nfat / 2;
            }
            nfat = 1;
            chocCount = 0;
        }
        System.out.println(happiness);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC122_C.java,"import java.util.*;
public class atcoder_ABC122_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int q = sc.nextInt();
        String s = sc.next();
        int[] problems = new int[q][2];
        for (int i = 0; i < q; i++) {
            problems[i][0] = sc.nextInt();
            problems[i][1] = sc.nextInt();
        }
        int[] cumsum = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            if (s.charAt(i - 1) == 'A' && s.charAt(i) == 'C') {
                cumsum[i] = cumsum[i - 1] + 1;
            } else {
                cumsum[i] = cumsum[i - 1];
            }
        }
        for (int[] problem : problems) {
            System.out.println(cumsum[problem[1]] - cumsum[problem[0] - 1]);
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int q = sc.nextInt();
        String s = sc.next();
        int[][] problems = new int[q][2];
        for (int i = 0; i < q; i++) {
            problems[i][0] = sc.nextInt();
            problems[i][1] = sc.nextInt();
        }
        int[] cumsum = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            if (s.charAt(i - 1) == 'A' && s.charAt(i) == 'C') {
                cumsum[i] = cumsum[i - 1] + 1;
            } else {
                cumsum[i] = cumsum[i - 1];
            }
        }
        for (int[] problem : problems) {
            System.out.println(cumsum[problem[1]] - cumsum[problem[0] - 1]);
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_32_B.java,"s = input ( )
result = """"
i = 0
while i < len ( s ) :
    if s [ i ] == ""."" :
        result += '0'
    else :
        i += 1
        if s [ i ] == ""."" :
            result += '1'
        else :
            result += '2'
    i += 1
print ( result )","s = input ( )
result = """"
i = 0
while i < len ( s ) :
    if s [ i ] == ""."" :
        result += '0'
    else :
        i += 1
        if s [ i ] == ""."" :
            result += '1'
        else :
            result += '2'
    i += 1
print ( result )"
StarCoder,avatar,Python,Java,codeforces_387_B.java,"import java.util.*;
public class codeforces_387_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] round_complexity = new int[n];
        int[] george_complexity = new int[m];
        for (int i = 0; i < n; i++) {
            round_complexity[i] = sc.nextInt();
        }
        for (int i = 0; i < m; i++) {
            george_complexity[i] = sc.nextInt();
        }
        int i = 0, j = 0;
        while (i < n && j < m) {
            i += 1 * (round_complexity[i] <= george_complexity[j]);
            j += 1;
        }
        System.out.println(n - i);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] round_complexity = new int[n];
        int[] george_complexity = new int[m];
        for (int i = 0; i < n; i++) {
            round_complexity[i] = sc.nextInt();
        }
        for (int i = 0; i < m; i++) {
            george_complexity[i] = sc.nextInt();
        }
        int i = 0, j = 0;
        while (i < n && j < m) {
            i += 1 * (round_complexity[i] <= george_complexity[j] ? 1 : 0);
            j += 1;
        }
        System.out.println(n - i);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC107_D.java,"class BIT {
    int[] tree;
    int size;
    int depth;
    public BIT(int n) {
        size = n;
        tree = new int[n + 1];
        depth = (int)Math.ceil(Math.log(n) / Math.log(2));
    }
    public int _bitsum(int i) {
        int ret = 0;
        while (i > 0) {
            ret += tree[i];
            i -= i & -i;
        }
        return ret;
    }
    public int bitsum(int l, int r) {
        if (r == 0) {
            return _bitsum(l);
        } else {
            return _bitsum(r) - _bitsum(l);
        }
    }
    public void bitadd(int i, int x) {
        i += 1;
        while (i <= size) {
            tree[i] += x;
            i += i & -i;
        }
    }
}

public class atcoder_ABC107_D {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = n * (n + 1) / 4;
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        Arrays.sort(a);
        int[] d = new int[a.length];
        int[] _a = new int[a.length + 1];
        for (int i = 0; i < a.length; i++) {
            d[i] = Arrays.binarySearch(_a, 0, _a.length, a[i]);
            if (d[i] < 0) {
                d[i] = -d[i] - 1;
                _a[_a.length - 1] = a[i];
            }
        }
        a = d;
        int[] b = new int[n + 1];
        for (int i = 0; i < n; i++) {
            b[i + 1] = b[i] + (a[i] >= n);
        }
        for (int i = 0; i < n; i++) {
            b[i + 1] += b[i];
        }
        int c = Math.min(b);
        b = new int[n + 1];
        for (int i = 0; i < n; i++) {
            b[i + 1] = b[i] + (a[i] >= n) - c;
        }
        BIT bit = new BIT(Math.max(b) + 2);
        int ans = 0;
        for (int x : b) {
            ans += bit.bitsum(x + 1);
            bit.bitadd(x, 1);
        }
        System.out.println(ans >= m? _a[n - 1] : _a[n - 2]);
    }
}

class BIT {
    int[] tree;
    int size;
    int depth;
    public BIT(int n) {
        size = n;
        tree = new int[n + 1];
        depth = (int)Math.ceil(Math.log(n) / Math.log(2));
    }
    public int _bitsum(int i) {
        int ret = 0;
        while (i > 0) {
            ret += tree[i];
            i -= i & -i;
        }
        return ret;
    }
    public int bitsum(int l, int r) {
        if (r == 0) {
            return _bitsum(l);
        } else {
            return _bitsum(r) - _bitsum(l);
        }
    }
    public void bitadd(int i, int x) {
        i += 1;
        while (i <= size) {
            tree[i] += x;
            i += i & -i;
        }
    }
}

public class atcoder_ABC107_D {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = n * (n + 1) / 4;
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        Arrays.sort(a);
        int[] d = new int[a.length];
        int[] _a = new int[a.length + 1];
        for (int i = 0; i < a.length; i++) {
            d[i] = Arrays.binarySearch(_a, 0, _a.length, a[i]);
            if (d[i] < 0) {
                d[i] = -d[i] - 1;
                _a[_a.length - 1] = a[i];
            }
        }
        a = d;
        int[] b = new int[n + 1];
        for (int i = 0; i < n; i++) {
            b[i + 1] = b[i] + (a[i] >= n);
        }
        for (int i = 0; i < n; i++) {
            b[i + 1] += b[i];
        }
        int c = Math.min(b);
        b = new int[n + 1];
        for (int i = 0; i < n; i++) {
            b[i + 1] = b[i] + (a[i] >= n) - c;
        }
        BIT bit = new BIT(Math.max(b) + 2);
        int ans = 0;
        for (int x : b) {
            ans += bit.bitsum(x + 1);
            bit.bitadd(x, 1);
        }
        System.out.println(ans >= m? _a[n - 1] : _a[n - 2]);
    }
}

class BIT {
    int[] tree;
    int size;
    int depth;
    public BIT(int n) {
        size = n;
        tree = new int[n + 1];
        depth = (int)Math.ceil(Math.log(n) / Math.log(2));
    }
    public int _bitsum(int i) {
        int ret = 0;
        while (i > 0) {
            ret += tree[i];
            i -= i & -i;
        }
        return ret;
    }
    public int bitsum(int l, int r) {
        if (r == 0) {
            return _bitsum(l);
        } else {
            return _bitsum(r) - _bitsum(l);
        }
    }
    public void bitadd(int i, int x) {
        i += 1;
        while (i <= size) {
            tree
","class BIT {
    int[] tree;
    int size;
    int depth;
    public BIT(int n) {
        size = n;
        tree = new int[n + 1];
        depth = (int)Math.ceil(Math.log(n) / Math.log(2));
    }
    public int _bitsum(int i) {
        int ret = 0;
        while (i > 0) {
            ret += tree[i];
            i -= i & -i;
        }
        return ret;
    }
    public int bitsum(int l, int r) {
        if (r == 0) {
            return _bitsum(l);
        } else {
            return _bitsum(r) - _bitsum(l);
        }
    }
    public void bitadd(int i, int x) {
        i += 1;
        while (i <= size) {
            tree[i] += x;
            i += i & -i;
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = n * (n + 1) / 4;
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        Arrays.sort(a);
        int[] d = new int[a.length];
        int[] _a = new int[a.length + 1];
        for (int i = 0; i < a.length; i++) {
            d[i] = Arrays.binarySearch(_a, 0, _a.length, a[i]);
            if (d[i] < 0) {
                d[i] = -d[i] - 1;
                _a[_a.length - 1] = a[i];
            }
        }
        a = d;
        int[] b = new int[n + 1];
        for (int i = 0; i < n; i++) {
            b[i + 1] = b[i] + (a[i] >= n);
        }
        for (int i = 0; i < n; i++) {
            b[i + 1] += b[i];
        }
        int c = Math.min(b);
        b = new int[n + 1];
        for (int i = 0; i < n; i++) {
            b[i + 1] = b[i] + (a[i] >= n) - c;
        }
        BIT bit = new BIT(Math.max(b) + 2);
        int ans = 0;
        for (int x : b) {
            ans += bit.bitsum(x + 1);
            bit.bitadd(x, 1);
        }
        System.out.println(ans >= m? _a[n - 1] : _a[n - 2]);
    }
}

class BIT {
    int[] tree;
    int size;
    int depth;
    public BIT(int n) {
        size = n;
        tree = new int[n + 1];
        depth = (int)Math.ceil(Math.log(n) / Math.log(2));
    }
    public int _bitsum(int i) {
        int ret = 0;
        while (i > 0) {
            ret += tree[i];
            i -= i & -i;
        }
        return ret;
    }
    public int bitsum(int l, int r) {
        if (r == 0) {
            return _bitsum(l);
        } else {
            return _bitsum(r) - _bitsum(l);
        }
    }
    public void bitadd(int i, int x) {
        i += 1;
        while (i <= size) {
            tree[i] += x;
            i += i & -i;
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = n * (n + 1) / 4;
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        Arrays.sort(a);
        int[] d = new int[a.length];
        int[] _a = new int[a.length + 1];
        for (int i = 0; i < a.length; i++) {
            d[i] = Arrays.binarySearch(_a, 0, _a.length, a[i]);
            if (d[i] < 0) {
                d[i] = -d[i] - 1;
                _a[_a.length - 1] = a[i];
            }
        }
        a = d;
        int[] b = new int[n + 1];
        for (int i = 0; i < n; i++) {
            b[i + 1] = b[i] + (a[i] >= n);
        }
        for (int i = 0; i < n; i++) {
            b[i + 1] += b[i];
        }
        int c = Math.min(b);
        b = new int[n + 1];
        for (int i = 0; i < n; i++) {
            b[i + 1] = b[i] + (a[i] >= n) - c;
        }
        BIT bit = new BIT(Math.max(b) + 2);
        int ans = 0;
        for (int x : b) {
            ans += bit.bitsum(x + 1);
            bit.bitadd(x, 1);
        }
        System.out.println(ans >= m? _a[n - 1] : _a[n - 2]);
    }
}

class BIT {
    int[] tree;
    int size;
    int depth;
    public BIT(int n) {
        size = n;
        tree = new int[n + 1];
        depth = (int)Math.ceil(Math.log(n) / Math.log(2));
    }
    public int _bitsum(int i) {
        int ret = 0;
        while (i > 0) {
            ret += tree[i];
            i -= i & -i;
        }
        return ret;
    }
    public int bitsum(int l, int r) {
        if (r == 0) {
            return _bitsum(l);
        } else {
            return _bitsum(r) - _bitsum(l);
        }
    }
    public void bitadd(int i, int x) {
        i += 1;
        while (i <= size) {
            tree
"
StarCoder,avatar,Python,Java,codeforces_7_B.java,"import java.util.*;
public class codeforces_7_B {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        int m = sc.nextInt();
        int[] alocuente = new int[m];
        int ind = 1;
        for (int i = 0; i < t; i++) {
            String[] op = sc.next().split("" "");
            if (op[0].equals(""alloc"")) {
                int pos = 0;
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        pos++;
                        if (pos == Integer.parseInt(op[1])) {
                            for (int k = j - Integer.parseInt(op[1]) + 1; k <= j; k++) {
                                alocuente[k] = ind;
                            }
                            System.out.println(ind);
                            ind++;
                            break;
                        }
                    } else {
                        pos = 0;
                    }
                } else {
                    System.out.println(""NULL"");
                }
            }
            if (op[0].equals(""erase"")) {
                int pos = 0;
                if (Integer.parseInt(op[1]) == 0 ||!Arrays.asList(alocuente).contains(Integer.parseInt(op[1]))) {
                    System.out.println(""ILLEGAL_ERASE_ARGUMENT"");
                } else {
                    for (int j = 0; j < m; j++) {
                        if (Integer.parseInt(op[1]) > 0 && alocuente[j] == Integer.parseInt(op[1])) {
                            alocuente[j] = 0;
                        }
                    }
                }
            }
            if (op[0].equals(""defragment"")) {
                int cnt = 0;
                cnt = Arrays.asList(alocuente).contains(0)? 1 : 0;
                alocuente = Arrays.asList(alocuente).stream().filter(j -> j!= 0).toArray(Integer[]::new);
                for (int j = 0; j < cnt; j++) {
                    alocuente[alocuente.length - 1 - j] = 0;
                }
            }
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        int m = sc.nextInt();
        int[] alocuente = new int[m];
        int ind = 1;
        for (int i = 0; i < t; i++) {
            String[] op = sc.next().split("" "");
            if (op[0].equals(""alloc"")) {
                int pos = 0;
                boolean flag = false;
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        pos++;
                        if (pos == Integer.parseInt(op[1])) {
                            for (int k = j - Integer.parseInt(op[1]) + 1; k <= j; k++) {
                                alocuente[k] = ind;
                            }
                            System.out.println(ind);
                            flag = true;
                            ind++;
                            break;
                        }
                    } else {
                        pos = 0;
                    }
                } 
                if (!flag) {
                    System.out.println(""NULL"");
                }
            }
            if (op[0].equals(""erase"")) {
                int pos = 0;
                if (Integer.parseInt(op[1]) == 0 ||!Arrays.asList(alocuente).contains(Integer.parseInt(op[1]))) {
                    System.out.println(""ILLEGAL_ERASE_ARGUMENT"");
                } else {
                    for (int j = 0; j < m; j++) {
                        if (Integer.parseInt(op[1]) > 0 && alocuente[j] == Integer.parseInt(op[1])) {
                            alocuente[j] = 0;
                        }
                    }
                }
            }
            if (op[0].equals(""defragment"")) {
                int cnt = 0;
                cnt = Arrays.asList(alocuente).contains(0)? 1 : 0;
                alocuente = Arrays.asList(alocuente).stream().filter(j -> j!= 0).toArray(Integer[]::new);
                for (int j = 0; j < cnt; j++) {
                    alocuente[alocuente.length - 1 - j] = 0;
                }
            }
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC014_D.java,"import java.util.*;
import java.io.*;

public class atcoder_AGC014_D {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] adj = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            adj[i] = new ArrayList<Integer>();
        }
        for (int i = 1; i < n; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            adj[a].add(b);
            adj[b].add(a);
        }
        Queue<Integer> q = new LinkedList<Integer>();
        q.add(1);
        boolean[] seen = new boolean[n + 1];
        seen[1] = true;
        int[] par = new int[n + 1];
        int[] child_num = new int[n + 1];
        while (!q.isEmpty()) {
            int v = q.poll();
            for (int u : adj[v]) {
                if (!seen[u]) {
                    seen[u] = true;
                    par[u] = v;
                    child_num[v]++;
                    q.add(u);
                }
            }
        }
        Queue<Integer> seq = new LinkedList<Integer>();
        for (int i = 1; i <= n; i++) {
            if (child_num[i] == 0) {
                seq.add(i);
            }
        }
        while (!seq.isEmpty()) {
            int c = seq.poll();
            seen[c] = false;
            if (!seen[par[c]]) {
                System.out.println(""First"");
                return;
            }
            seen[par[c]] = false;
            child_num[par[par[c]]]--;
            if (child_num[par[par[c]]] == 0) {
                seq.add(par[par[c]]);
            }
        }
        System.out.println(""Second"");
    }
}","import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        ArrayList<Integer>[] adj = new ArrayList[n + 1];
        for (int i = 1; i <= n; i++) {
            adj[i] = new ArrayList<Integer>();
        }
        for (int i = 1; i < n; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            adj[a].add(b);
            adj[b].add(a);
        }
        Queue<Integer> q = new LinkedList<Integer>();
        q.add(1);
        boolean[] seen = new boolean[n + 1];
        seen[1] = true;
        int[] par = new int[n + 1];
        int[] child_num = new int[n + 1];
        while (!q.isEmpty()) {
            int v = q.poll();
            for (int u : adj[v]) {
                if (!seen[u]) {
                    seen[u] = true;
                    par[u] = v;
                    child_num[v]++;
                    q.add(u);
                }
            }
        }
        Queue<Integer> seq = new LinkedList<Integer>();
        for (int i = 1; i <= n; i++) {
            if (child_num[i] == 0) {
                seq.add(i);
            }
        }
        while (!seq.isEmpty()) {
            int c = seq.poll();
            seen[c] = false;
            if (!seen[par[c]]) {
                System.out.println(""First"");
                return;
            }
            seen[par[c]] = false;
            child_num[par[par[c]]]--;
            if (child_num[par[par[c]]] == 0) {
                seq.add(par[par[c]]);
            }
        }
        System.out.println(""Second"");
    }
}"
StarCoder,avatar,Python,Java,codeforces_644_B.java,"import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;

public class codeforces_644_B {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int b = sc.nextInt();
        Queue<Task> remaining = new PriorityQueue<Task>(new TaskComparator());
        boolean running = false;
        int finish_time = 0;
        Map<Integer, Integer> result = new HashMap<Integer, Integer>();
        for (int i = 0; i < n; i++) {
            int time = sc.nextInt();
            int duration = sc.nextInt();
            Task task = new Task(time, duration, i);
            result.put(i, 0);
            if (task.time > finish_time && remaining.isEmpty()) {
                running = true;
                finish_time = task.time + task.duration;
                result.put(i, finish_time);
            } else {
                if (task.time >= finish_time &&!remaining.isEmpty()) {
                    finish_time = runTask(remaining, finish_time);
                }
                if (remaining.size() < b) {
                    remaining.add(task);
                } else {
                    result.put(i, -1);
                }
            }
        }
        while (!remaining.isEmpty()) {
            finish_time = runTask(remaining, finish_time);
        }
        for (Integer key : result.keySet()) {
            System.out.println(result.get(key));
        }
    }

    public static int runTask(Queue<Task> remaining, int finish_time) {
        Task task = remaining.poll();
        finish_time = Math.max(finish_time, task.time) + task.duration;
        result.put(task.index, finish_time);
        return finish_time;
    }
}

class Task {
    int time;
    int duration;
    int index;

    public Task(int time, int duration, int index) {
        this.time = time;
        this.duration = duration;
        this.index = index;
    }
}

class TaskComparator implements Comparator<Task> {

    @Override
    public int compare(Task o1, Task o2) {
        return o1.time - o2.time;
    }
}","import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int b = sc.nextInt();
        Queue<Task> remaining = new PriorityQueue<Task>(new TaskComparator());
        boolean running = false;
        int finish_time = 0;
        Map<Integer, Integer> result = new HashMap<Integer, Integer>();
        for (int i = 0; i < n; i++) {
            int time = sc.nextInt();
            int duration = sc.nextInt();
            Task task = new Task(time, duration, i);
            result.put(i, 0);
            if (task.time > finish_time && remaining.isEmpty()) {
                running = true;
                finish_time = task.time + task.duration;
                result.put(i, finish_time);
            } else {
                if (task.time >= finish_time &&!remaining.isEmpty()) {
                    finish_time = runTask(remaining, finish_time);
                }
                if (remaining.size() < b) {
                    remaining.add(task);
                } else {
                    result.put(i, -1);
                }
            }
        }
        while (!remaining.isEmpty()) {
            finish_time = runTask(remaining, finish_time);
        }
        for (Integer key : result.keySet()) {
            System.out.println(result.get(key));
        }
    }

    public static int runTask(Queue<Task> remaining, int finish_time) {
        Task task = remaining.poll();
        finish_time = Math.max(finish_time, task.time) + task.duration;
        result.put(task.index, finish_time);
        return finish_time;
    }
}

class Task {
    int time;
    int duration;
    int index;

    public Task(int time, int duration, int index) {
        this.time = time;
        this.duration = duration;
        this.index = index;
    }
}

class TaskComparator implements Comparator<Task> {

    @Override
    public int compare(Task o1, Task o2) {
        return o1.time - o2.time;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC127_F.java,"import java.util.PriorityQueue;
import java.util.Scanner;

public class atcoder_ABC127_F {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int q = sc.nextInt();
        int[] ans = new int[2];
        PriorityQueue<Integer> p1 = new PriorityQueue<Integer>();
        PriorityQueue<Integer> p2 = new PriorityQueue<Integer>(Collections.reverseOrder());
        int sum_b = 0;
        int sum_p1 = 0;
        int sum_p2 = 0;
        for (int i = 0; i < q; i++) {
            int[] ql = new int[3];
            ql[0] = sc.nextInt();
            ql[1] = sc.nextInt();
            ql[2] = sc.nextInt();
            if (ql[0] == 2) {
                if (p1.size() == p2.size()) {
                    ans[0] = -p2.peek();
                    ans[1] = sum_p1 - p1.size() * ans[0] + p2.size() * ans[0] - sum_p2 + sum_b;
                } else {
                    ans[0] = p1.peek();
                    ans[1] = sum_p1 - p1.size() * ans[0] + p2.size() * ans[0] - sum_p2 + sum_b;
                }
                System.out.println(ans[0] + "" "" + ans[1]);
            } else {
                sum_b += ql[2];
                if (p1.size() == 0) {
                    p1.add(ql[1]);
                    sum_p1 += ql[1];
                } else if (p1.peek() <= ql[1]) {
                    p1.add(ql[1]);
                    sum_p1 += ql[1];
                } else {
                    p2.add(-ql[1]);
                    sum_p2 += ql[1];
                }
                if (p1.size() < p2.size()) {
                    int k = p2.poll();
                    p1.add(-k);
                    sum_p2 += k;
                    sum_p1 -= k;
                }
                if (p1.size() - 1 > p2.size()) {
                    int k = p1.poll();
                    p2.add(-k);
                    sum_p1 -= k;
                    sum_p2 += k;
                }
            }
        }
    }
}","import java.util.PriorityQueue;
import java.util.Scanner;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int q = sc.nextInt();
        int[] ans = new int[2];
        PriorityQueue<Integer> p1 = new PriorityQueue<Integer>();
        PriorityQueue<Integer> p2 = new PriorityQueue<Integer>(Collections.reverseOrder());
        int sum_b = 0;
        int sum_p1 = 0;
        int sum_p2 = 0;
        for (int i = 0; i < q; i++) {
            int[] ql = new int[3];
            ql[0] = sc.nextInt();
            ql[1] = sc.nextInt();
            ql[2] = sc.nextInt();
            if (ql[0] == 2) {
                if (p1.size() == p2.size()) {
                    ans[0] = -p2.peek();
                    ans[1] = sum_p1 - p1.size() * ans[0] + p2.size() * ans[0] - sum_p2 + sum_b;
                } else {
                    ans[0] = p1.peek();
                    ans[1] = sum_p1 - p1.size() * ans[0] + p2.size() * ans[0] - sum_p2 + sum_b;
                }
                System.out.println(ans[0] + "" "" + ans[1]);
            } else {
                sum_b += ql[2];
                if (p1.size() == 0) {
                    p1.add(ql[1]);
                    sum_p1 += ql[1];
                } else if (p1.peek() <= ql[1]) {
                    p1.add(ql[1]);
                    sum_p1 += ql[1];
                } else {
                    p2.add(-ql[1]);
                    sum_p2 += ql[1];
                }
                if (p1.size() < p2.size()) {
                    int k = p2.poll();
                    p1.add(-k);
                    sum_p2 += k;
                    sum_p1 -= k;
                }
                if (p1.size() - 1 > p2.size()) {
                    int k = p1.poll();
                    p2.add(-k);
                    sum_p1 -= k;
                    sum_p2 += k;
                }
            }
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC043_B.java,"import java.util.*;
public class atcoder_AGC043_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] nums = new int[n];
        for (int i = 0; i < n; i++) {
            nums[i] = in.nextInt() - 1;
        }
        boolean noOne = false;
        if (nums[0]!= 0) {
            for (int i = 0; i < n; i++) {
                nums[i] /= 2;
            }
            noOne = true;
        }
        boolean isOdd = false;
        for (int i = 0; i < n; i++) {
            if (!parity(n - 1, i) && nums[i] % 2 == 1) {
                isOdd ^= true;
            }
        }
        if (!isOdd) {
            System.out.println(0);
        } else {
            System.out.println(1 << noOne);
        }
    }
    public static boolean parity(int n, int i) {
        int count = 0;
        while (n > 0) {
            count += n & 1;
            n >>= 1;
        }
        return count - count(n - i) - count(i) > 0;
    }
    public static int count(int n) {
        int count = 0;
        while (n > 0) {
            count += n & 1;
            n >>= 1;
        }
        return count;
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] nums = new int[n];
        for (int i = 0; i < n; i++) {
            nums[i] = in.nextInt() - 1;
        }
        boolean noOne = false;
        if (nums[0]!= 0) {
            for (int i = 0; i < n; i++) {
                nums[i] /= 2;
            }
            noOne = true;
        }
        boolean isOdd = false;
        for (int i = 0; i < n; i++) {
            if (!parity(n - 1, i) && nums[i] % 2 == 1) {
                isOdd ^= true;
            }
        }
        if (!isOdd) {
            System.out.println(0);
        } else {
            System.out.println(1 << (noOne ? 1 : 0));
        }
    }
    public static boolean parity(int n, int i) {
        int count = 0;
        while (n > 0) {
            count += n & 1;
            n >>= 1;
        }
        return count - count(n - i) - count(i) > 0;
    }
    public static int count(int n) {
        int count = 0;
        while (n > 0) {
            count += n & 1;
            n >>= 1;
        }
        return count;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC178_A.java,"import java.util.*;
public class atcoder_ABC178_A {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        System.out.println(1 if a == 0 else 0);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        System.out.println(a == 0 ? 1 : 0);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC165_C.java,"import java.util.*;
public class atcoder_ABC165_C {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in );
        int N = sc.nextInt ( );
        int M = sc.nextInt ( );
        int Q = sc.nextInt ( );
        int [ ] a = new int [ Q ];
        int [ ] b = new int [ Q ];
        int [ ] c = new int [ Q ];
        int [ ] d = new int [ Q ];
        for ( int i = 0 ; i < Q ; i ++ ) {
            a [ i ] = sc.nextInt ( );
            b [ i ] = sc.nextInt ( );
            c [ i ] = sc.nextInt ( );
            d [ i ] = sc.nextInt ( );
        }
        solve ( N, M, Q, a, b, c, d );
    }
    public static void solve ( int N, int M, int Q, int [ ] a, int [ ] b, int [ ] c, int [ ] d ) {
        int res = 0;
        rec ( N, M, Q, a, b, c, d, 0, 0, res );
        System.out.println ( res );
    }
    public static void rec ( int N, int M, int Q, int [ ] a, int [ ] b, int [ ] c, int [ ] d, int i, int sum, int res ) {
        if ( i == N ) {
            int ans = 0;
            for ( int j = 0 ; j < Q ; j ++ ) {
                if ( sum - a [ j ] == c [ j ] ) {
                    ans += d [ j ];
                }
            }
            res = Math.max ( res, ans );
            return;
        }
        int last_max = 1;
        if ( i > 0 ) {
            last_max = a [ i - 1 ];
        }
        for ( int j = last_max ; j <= M ; j ++ ) {
            rec ( N, M, Q, a, b, c, d, i + 1, sum + j, res );
        }
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in );
        int N = sc.nextInt ( );
        int M = sc.nextInt ( );
        int Q = sc.nextInt ( );
        int [ ] a = new int [ Q ];
        int [ ] b = new int [ Q ];
        int [ ] c = new int [ Q ];
        int [ ] d = new int [ Q ];
        for ( int i = 0 ; i < Q ; i ++ ) {
            a [ i ] = sc.nextInt ( );
            b [ i ] = sc.nextInt ( );
            c [ i ] = sc.nextInt ( );
            d [ i ] = sc.nextInt ( );
        }
        solve ( N, M, Q, a, b, c, d );
    }
    public static void solve ( int N, int M, int Q, int [ ] a, int [ ] b, int [ ] c, int [ ] d ) {
        int res = 0;
        rec ( N, M, Q, a, b, c, d, 0, 0, res );
        System.out.println ( res );
    }
    public static void rec ( int N, int M, int Q, int [ ] a, int [ ] b, int [ ] c, int [ ] d, int i, int sum, int res ) {
        if ( i == N ) {
            int ans = 0;
            for ( int j = 0 ; j < Q ; j ++ ) {
                if ( sum - a [ j ] == c [ j ] ) {
                    ans += d [ j ];
                }
            }
            res = Math.max ( res, ans );
            return;
        }
        int last_max = 1;
        if ( i > 0 ) {
            last_max = a [ i - 1 ];
        }
        for ( int j = last_max ; j <= M ; j ++ ) {
            rec ( N, M, Q, a, b, c, d, i + 1, sum + j, res );
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC149_C.java,"import java.util.*;
public class atcoder_ABC149_C {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        boolean[] prime = new boolean[100010];
        prime[0] = false;
        prime[1] = false;
        for (int i = 4; i < 100010; i += 2) {
            prime[i] = false;
        }
        int i = 3;
        while (i * i <= 100008) {
            if (prime[i]) {
                for (int j = i + i; j < 100008; j += i) {
                    prime[j] = false;
                }
            }
            i += 2;
        }
        for (i = X; i < 100008; i++) {
            if (prime[i]) {
                System.out.println(i);
                break;
            }
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        boolean[] prime = new boolean[100010];
        for (int i = 0; i < 100010; i++) {
            prime[i] = true;
        }
        prime[0] = false;
        prime[1] = false;
        for (int i = 4; i < 100010; i += 2) {
            prime[i] = false;
        }
        int i = 3;
        while (i * i <= 100008) {
            if (prime[i]) {
                for (int j = i + i; j < 100008; j += i) {
                    prime[j] = false;
                }
            }
            i += 2;
        }
        for (i = X; i < 100008; i++) {
            if (prime[i]) {
                System.out.println(i);
                break;
            }
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_459_B.java,"import java.util.*;
public class codeforces_459_B {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int [ ] l1 = new int [ n ] ;
        for ( int i = 0 ; i < n ; i++ )
        {
            l1 [ i ] = sc.nextInt ( ) ;
        }
        Arrays.sort ( l1 ) ;
        int a = l1 [ n - 1 ] ;
        int b = l1 [ 0 ] ;
        if ( a == b )
        {
            System.out.println ( a - b + ( n * ( n - 1 ) ) / 2 ) ;
        }
        else
        {
            int ac = 0 ;
            int bc = 0 ;
            for ( int i = 0 ; i < n ; i++ )
            {
                if ( l1 [ i ] == a )
                {
                    ac++ ;
                }
                else if ( l1 [ i ] == b )
                {
                    bc++ ;
                }
            }
            System.out.println ( a - b + ac * bc ) ;
        }
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int [ ] l1 = new int [ n ] ;
        for ( int i = 0 ; i < n ; i++ )
        {
            l1 [ i ] = sc.nextInt ( ) ;
        }
        Arrays.sort ( l1 ) ;
        int a = l1 [ n - 1 ] ;
        int b = l1 [ 0 ] ;
        if ( a == b )
        {
            System.out.println ( a - b + "" "" + ( n * ( n - 1 ) ) / 2 ) ;
        }
        else
        {
            int ac = 0 ;
            int bc = 0 ;
            for ( int i = 0 ; i < n ; i++ )
            {
                if ( l1 [ i ] == a )
                {
                    ac++ ;
                }
                else if ( l1 [ i ] == b )
                {
                    bc++ ;
                }
            }
            System.out.println ( a - b + "" "" + ac * bc ) ;
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_617_B.java,"import java.util.Scanner;
public class codeforces_617_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String a = sc.next();
        System.out.println(0 == a.replaceAll(""1"", """").length()? 0 : prod(Arrays.stream(a.split(""1"")).map(s -> s.replaceAll(""0"", """").length() + 1).toArray()));
    }

    private static long prod(long[] arr) {
        long res = 1;
        for (long i : arr) res *= i;
        return res;
    }
}","import java.util.Scanner;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String a = sc.next();
        System.out.println(0 == a.replaceAll(""1"", """").length()? 0 : prod(Arrays.stream(a.split(""1"")).map(s -> s.replaceAll(""0"", """").length() + 1).toArray()));
    }

    private static long prod(long[] arr) {
        long res = 1;
        for (long i : arr) res *= i;
        return res;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC152_E.java,"import java.math.BigInteger;
import java.util.Scanner;
public class atcoder_ABC152_E {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        BigInteger ans = BigInteger.valueOf(1);
        for (int i = 0; i < n; i++) {
            ans = ans.multiply(BigInteger.valueOf(a[i])).divide(BigInteger.valueOf(gcd(ans.intValue(), a[i])));
        }
        ans = ans.multiply(BigInteger.valueOf(Arrays.stream(a).map(x -> x * (x - 1) / 2).sum()));
        System.out.println(ans.mod(BigInteger.valueOf(1000000007)));
    }

    public static int gcd(int a, int b) {
        return b == 0? a : gcd(b, a % b);
    }
}","import java.math.BigInteger;
import java.util.Scanner;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        BigInteger ans = BigInteger.valueOf(1);
        for (int i = 0; i < n; i++) {
            ans = ans.multiply(BigInteger.valueOf(a[i])).divide(BigInteger.valueOf(gcd(ans.intValue(), a[i])));
        }
        ans = ans.multiply(BigInteger.valueOf(Arrays.stream(a).map(x -> x * (x - 1) / 2).sum()));
        System.out.println(ans.mod(BigInteger.valueOf(1000000007)));
    }

    public static int gcd(int a, int b) {
        return b == 0? a : gcd(b, a % b);
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC005_B.java,"import java.util.*;
import java.io.*;
public class atcoder_AGC005_B {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( new BufferedReader ( new InputStreamReader ( System.in ) ) ) ;
        int n = sc.nextInt ( ) ;
        int [ ] a = new int [ n ] ;
        int [ ] par = new int [ n ] ;
        int [ ] rank = new int [ n ] ;
        int [ ] size = new int [ n ] ;
        for ( int i = 0 ; i < n ; i ++ ) {
            a [ i ] = sc.nextInt ( ) ;
            par [ i ] = i ;
            rank [ i ] = 1 ;
            size [ i ] = 1 ;
        }
        int [ ] b = new int [ n ] ;
        for ( int i = 0 ; i < n ; i ++ ) b [ a [ i ] - 1 ] = i ;
        int c = 0 ;
        for ( int k = n - 1 ; k >= 0 ; k -- ) {
            int l = 1, r = 1 ;
            if ( k > 0 && a [ k - 1 ] > a [ k ] ) {
                l += size [ find ( k - 1 ) ] ;
                union ( k - 1, k ) ;
            }
            if ( k + 1 < n && a [ k + 1 ] > a [ k ] ) {
                r += size [ find ( k + 1 ) ] ;
                union ( k + 1, k ) ;
            }
            c += l * r * a [ k ] ;
        }
        System.out.println ( c ) ;
    }
    public static int find ( int x ) {
        return x == par [ x ]? x : ( par [ x ] = find ( par [ x ] ) ) ;
    }
    public static void union ( int x, int y ) {
        int px = find ( x ) ;
        int py = find ( y ) ;
        if ( px!= py ) {
            if ( rank [ px ] < rank [ py ] ) {
                par [ px ] = py ;
                size [ py ] += size [ px ] ;
            } else {
                par [ py ] = px ;
                size [ px ] += size [ py ] ;
                if ( rank [ px ] == rank [ py ] ) rank [ px ] ++ ;
            }
        }
    }
}","import java.util.*;
import java.io.*;
public class Main {
    static int [ ] par ;
    static int [ ] rank ;
    static int [ ] size ;
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( new BufferedReader ( new InputStreamReader ( System.in ) ) ) ;
        int n = sc.nextInt ( ) ;
        int [ ] a = new int [ n ] ;
        par = new int [ n ] ;
        rank = new int [ n ] ;
        size = new int [ n ] ;
        for ( int i = 0 ; i < n ; i ++ ) {
            a [ i ] = sc.nextInt ( ) ;
            par [ i ] = i ;
            rank [ i ] = 1 ;
            size [ i ] = 1 ;
        }
        int [ ] b = new int [ n ] ;
        for ( int i = 0 ; i < n ; i ++ ) b [ a [ i ] - 1 ] = i ;
        int c = 0 ;
        for ( int k = n - 1 ; k >= 0 ; k -- ) {
            int l = 1, r = 1 ;
            if ( k > 0 && a [ k - 1 ] > a [ k ] ) {
                l += size [ find ( k - 1 ) ] ;
                union ( k - 1, k ) ;
            }
            if ( k + 1 < n && a [ k + 1 ] > a [ k ] ) {
                r += size [ find ( k + 1 ) ] ;
                union ( k + 1, k ) ;
            }
            c += l * r * a [ k ] ;
        }
        System.out.println ( c ) ;
    }
    public static int find ( int x ) {
        return x == par [ x ]? x : ( par [ x ] = find ( par [ x ] ) ) ;
    }
    public static void union ( int x, int y ) {
        int px = find ( x ) ;
        int py = find ( y ) ;
        if ( px!= py ) {
            if ( rank [ px ] < rank [ py ] ) {
                par [ px ] = py ;
                size [ py ] += size [ px ] ;
            } else {
                par [ py ] = px ;
                size [ px ] += size [ py ] ;
                if ( rank [ px ] == rank [ py ] ) rank [ px ] ++ ;
            }
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC107_C.java,"import java.util.*;
public class atcoder_ABC107_C {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] lst = new int[N];
        for (int i = 0; i < N; i++) {
            lst[i] = sc.nextInt();
        }
        int[] lst_p = new int[N];
        int[] lst_m = new int[N];
        int p = 0;
        int m = 0;
        int x = 0;
        int y = N - 1;
        int lastx = 0;
        int lasty = N - 1;
        for (int i = 0; i < N; i++) {
            if (lst[i] == 0) {
                K--;
            }
            if (lst[i] > 0) {
                lst_p[lastx++] = lst[i];
            } else {
                lst_m[lasty--] = lst[i];
            }
        }
        int ans = 1000000000;
        for (int k = 0; k <= K; k++) {
            for (int j = 0; j <= k && j <= lastx; j++) {
                if (k - j > lasty) {
                    break;
                }
                if (j == 0) {
                    p = 0;
                } else {
                    p = lst_p[j - 1];
                }
                if (k - j == 0) {
                    m = 0;
                } else {
                    m = lst_m[lasty - (k - j)];
                }
                ans = Math.min(ans, 2 * p + Math.abs(m), p + 2 * Math.abs(m));
            }
        }
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] lst = new int[N];
        for (int i = 0; i < N; i++) {
            lst[i] = sc.nextInt();
        }
        int[] lst_p = new int[N];
        int[] lst_m = new int[N];
        int p = 0;
        int m = 0;
        int x = 0;
        int y = N - 1;
        int lastx = 0;
        int lasty = N - 1;
        for (int i = 0; i < N; i++) {
            if (lst[i] == 0) {
                K--;
            }
            if (lst[i] > 0) {
                lst_p[lastx++] = lst[i];
            } else {
                lst_m[lasty--] = lst[i];
            }
        }
        int ans = 1000000000;
        for (int k = 0; k <= K; k++) {
            for (int j = 0; j <= k && j <= lastx; j++) {
                if (k - j > lasty) {
                    break;
                }
                if (j == 0) {
                    p = 0;
                } else {
                    p = lst_p[j - 1];
                }
                if (k - j == 0) {
                    m = 0;
                } else {
                    m = lst_m[lasty - (k - j)];
                }
                ans = Math.min(Math.min(ans, 2 * p + Math.abs(m)), p + 2 * Math.abs(m));
            }
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC025_A.java,"import java.util.Scanner;
public class atcoder_AGC025_A {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String n = in.next();
        int new = 0;
        for (int i = 0; i < n.length(); i++) {
            new += Integer.parseInt(n.charAt(i) + """");
        }
        System.out.println(new);
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String n = in.next();
        int a = 0;
        for (int i = 0; i < n.length(); i++) {
            a += Integer.parseInt(n.charAt(i) + """");
        }
        System.out.println(a);
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC037_E.java,"import java.util.*;
public class atcoder_AGC037_E {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        String S = sc.next();
        boolean aaaa = false;
        if (K >= 15) {
            aaaa = true;
        } else if (2 * Math.pow(2, K) >= N) {
            aaaa = true;
        }
        if (aaaa) {
            System.out.println(S.charAt(0) * N);
            return;
        }
        String U = S + S.substring(0, S.length() - 1);
        char c = S.charAt(0);
        int p = U.indexOf(c);
        int minindex = p;
        p++;
        while (p <= N) {
            if (U.charAt(p) == c) {
                if (checkNormalDict(U, minindex, p)) {
                    minindex = p;
                }
            }
            p++;
        }
        S = U.substring(minindex, minindex + N);
        if (K == 1) {
            System.out.println(S);
        } else {
            int count = 0;
            for (char cc : S.toCharArray()) {
                if (cc == S.charAt(0)) {
                    count++;
                } else {
                    break;
                }
            }
            if (count * (int) Math.pow(2, K - 1) >= N) {
                System.out.println(S.charAt(0) * N);
            } else {
                S = S.charAt(0) * (count * (int) Math.pow(2, K - 1) - 1) + S;
                System.out.println(S.substring(0, N));
            }
        }
    }

    public static boolean checkNormalDict(String U, int pointer1, int pointer2) {
        for (int i = 0; i < N; i++) {
            if (U.charAt(pointer1 + i) > U.charAt(pointer2 + i)) {
                return true;
            } else if (U.charAt(pointer1 + i) < U.charAt(pointer2 + i)) {
                return false;
            }
        }
        return true;
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        String S = sc.next();
        boolean aaaa = false;
        if (K >= 15) {
            aaaa = true;
        } else if (2 * Math.pow(2, K) >= N) {
            aaaa = true;
        }
        if (aaaa) {
            System.out.println(S.charAt(0) * N);
            return;
        }
        String U = S + S.substring(0, S.length() - 1);
        char c = S.charAt(0);
        int p = U.indexOf(c);
        int minindex = p;
        p++;
        while (p <= N) {
            if (U.charAt(p) == c) {
                if (checkNormalDict(U, minindex, p, N)) {
                    minindex = p;
                }
            }
            p++;
        }
        S = U.substring(minindex, minindex + N);
        if (K == 1) {
            System.out.println(S);
        } else {
            int count = 0;
            for (char cc : S.toCharArray()) {
                if (cc == S.charAt(0)) {
                    count++;
                } else {
                    break;
                }
            }
            if (count * (int) Math.pow(2, K - 1) >= N) {
                System.out.println(S.charAt(0) * N);
            } else {
                S = S.charAt(0) * (count * (int) Math.pow(2, K - 1) - 1) + S;
                System.out.println(S.substring(0, N));
            }
        }
    }

    public static boolean checkNormalDict(String U, int pointer1, int pointer2, int N) {
        for (int i = 0; i < N; i++) {
            if (U.charAt(pointer1 + i) > U.charAt(pointer2 + i)) {
                return true;
            } else if (U.charAt(pointer1 + i) < U.charAt(pointer2 + i)) {
                return false;
            }
        }
        return true;
    }
}"
StarCoder,avatar,Python,Java,codeforces_189_A.java,"import java.util.*;
public class codeforces_189_A {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in ) ;
        int length = sc.nextInt ( ) ;
        int [ ] arr = new int [ 4 ] ;
        for ( int i = 0 ; i < 4 ; i++ )
            arr [ i ] = sc.nextInt ( ) ;
        Arrays.sort ( arr ) ;
        int ans = 0 ;
        if ( arr [ 0 ] == arr [ 1 ] ) {
            int k = 0 ;
            for ( int i = 0 ; i <= length / arr [ 2 ] ; i++ ) {
                int check = length - i * arr [ 2 ] ;
                if ( check >= 0 && check % arr [ 0 ] == 0 ) {
                    k = check / arr [ 0 ] ;
                    ans = Math.max ( ans, k + i ) ;
                }
            }
        } else {
            int k = 0 ;
            for ( int i = 0 ; i <= length / arr [ 2 ] ; i++ )
                for ( int j = 0 ; j <= length / arr [ 1 ] ; j++ ) {
                    int check = length - i * arr [ 2 ] - j * arr [ 1 ] ;
                    if ( check >= 0 && check % arr [ 0 ] == 0 ) {
                        k = check / arr [ 0 ] ;
                        ans = Math.max ( ans, k + i + j ) ;
                    }
                }
        }
        System.out.println ( ans ) ;
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in ) ;
        String line = sc.nextLine();
        String[] numbers = line.split("" "");
        int[] arr = new int[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            arr[i] = Integer.parseInt(numbers[i]);
        }
        int length = numbers.length;
        Arrays.sort ( arr ) ;
        int ans = 0 ;
        if ( arr [ 0 ] == arr [ 1 ] ) {
            int k = 0 ;
            for ( int i = 0 ; i <= length / arr [ 2 ] ; i++ ) {
                int check = length - i * arr [ 2 ] ;
                if ( check >= 0 && check % arr [ 0 ] == 0 ) {
                    k = check / arr [ 0 ] ;
                    ans = Math.max ( ans, k + i ) ;
                }
            }
        } else {
            int k = 0 ;
            for ( int i = 0 ; i <= length / arr [ 2 ] ; i++ )
                for ( int j = 0 ; j <= length / arr [ 1 ] ; j++ ) {
                    int check = length - i * arr [ 2 ] - j * arr [ 1 ] ;
                    if ( check >= 0 && check % arr [ 0 ] == 0 ) {
                        k = check / arr [ 0 ] ;
                        ans = Math.max ( ans, k + i + j ) ;
                    }
                }
        }
        System.out.println ( ans ) ;
    }
}"
StarCoder,avatar,Python,Java,codeforces_56_B.java,"import java.util.*;
public class codeforces_56_B {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int[] A = new int[N];
        for(int i=0;i<N;i++){
            A[i] = in.nextInt();
        }
        int mn = N+1, mx = -1;
        for(int i=0;i<N;i++){
            if(i+1!= A[i]){
                mn = Math.min(mn, i);
                mx = Math.max(mx, i);
            }
        }
        if(mx == -1){
            System.out.println(""0 0"");
        }else{
            A = Arrays.copyOfRange(A, 0, mn);
            A = Arrays.copyOfRange(A, mn, mx+1);
            A = Arrays.copyOfRange(A, 0, mx+1);
            Arrays.sort(A);
            if(Arrays.equals(A, A)){
                System.out.println(mn+1 + "" "" + mx+1);
            }else{
                System.out.println(""0 0"");
            }
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int[] A = new int[N];
        for(int i=0;i<N;i++){
            A[i] = in.nextInt();
        }
        int mn = N+1, mx = -1;
        for(int i=0;i<N;i++){
            if(i+1!= A[i]){
                mn = Math.min(mn, i);
                mx = Math.max(mx, i);
            }
        }
        if(mx == -1){
            System.out.println(""0 0"");
        }else{
            A = Arrays.copyOfRange(A, 0, mn);
            A = Arrays.copyOfRange(A, mn, mx+1);
            A = Arrays.copyOfRange(A, 0, mx+1);
            Arrays.sort(A);
            if(Arrays.equals(A, A)){
                System.out.println(mn+1 + "" "" + mx+1);
            }else{
                System.out.println(""0 0"");
            }
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC119_B.java,"import java.util.Scanner;

public class atcoder_ABC119_B {

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        double[] x = new double[N];
        for (int i = 0; i < N; i++) {
            String s = sc.next();
            s = s.replace(""JPY"", ""* 1.0"");
            s = s.replace(""BTC"", ""* 380000.0"");
            x[i] = eval(s);
        }
        System.out.println(sum(x));
    }

    public static double eval(String s) {
        return new Object() {
            int pos = -1, ch;

            void nextChar() {
                ch = (++pos < s.length())? s.charAt(pos) : -1;
            }

            boolean eat(int charToEat) {
                while (ch =='') nextChar();
                if (ch == charToEat) {
                    nextChar();
                    return true;
                }
                return false;
            }

            double parse() {
                nextChar();
                double x = parseExpression();
                if (pos < s.length()) throw new Error(""Unexpected: "" + (char)ch);
                return x;
            }

            // Grammar:
            // expression = term | expression `+` term | expression `-` term
            // term = factor | term `*` factor | term `/` factor
            // factor = `+` factor | `-` factor | `(` expression `)`
            //        | number | functionName factor | factor `^` factor

            double parseExpression() {
                double x = parseTerm();
                for (;;) {
                    if      (eat('+')) x += parseTerm(); // addition
                    else if (eat('-')) x -= parseTerm(); // subtraction
                    else return x;
                }
            }

            double parseTerm() {
                double x = parseFactor();
                for (;;) {
                    if      (eat('*')) x *= parseFactor(); // multiplication
                    else if (eat('/')) x /= parseFactor(); // division
                    else return x;
                }
            }

            double parseFactor() {
                if (eat('+')) return parseFactor(); // unary plus
                if (eat('-')) return -parseFactor(); // unary minus

                double x;
                int startPos = this.pos;
                if (eat('(')) { // parentheses
                    x = parseExpression();
                    eat(')');
                } else if ((ch >= '0' && ch <= '9') || ch == '.') { // numbers
                    while ((ch >= '0' && ch <= '9') || ch == '.') nextChar();
                    x = Double.parseDouble(s.substring(startPos, this.pos));
                } else if (ch >= 'a' && ch <= 'z') { // functions
                    while (ch >= 'a' && ch <= 'z') nextChar();
                    String func = s.substring(startPos, this.pos);
                    x = parseFactor();
                    if (func.equals(""sqrt"")) x = Math.sqrt(x);
                    else if (func.equals(""sin"")) x = Math.sin(Math.toRadians(x));
                    else if (func.equals(""cos"")) x = Math.cos(Math.toRadians(x));
                    else if (func.equals(""tan"")) x = Math.tan(Math.toRadians(x));
                    else throw new Error(""Unknown function: "" + func);
                } else {
                    throw new Error(""Unexpected: "" + (char)ch);
                }

                if (eat('^')) x = Math.pow(x, parseFactor()); // exponentiation

                return x;
            }
        }.parse();
    }

    public static double sum(double[] x) {
        double sum = 0;
        for (double d : x) sum += d;
        return sum;
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        double[] x = new double[N];
        for (int i = 0; i < N; i++) {
            String s = sc.next();
            s = s.replace(""JPY"", ""* 1.0"");
            s = s.replace(""BTC"", ""* 380000.0"");
            x[i] = eval(s);
        }
        System.out.println(sum(x));
    }

    public static double eval(String s) {
        return new Object() {
            int pos = -1, ch;

            void nextChar() {
                ch = (++pos < s.length())? s.charAt(pos) : -1;
            }

            boolean eat(int charToEat) {
                while (ch ==' ') nextChar();
                if (ch == charToEat) {
                    nextChar();
                    return true;
                }
                return false;
            }

            double parse() {
                nextChar();
                double x = parseExpression();
                if (pos < s.length()) throw new Error(""Unexpected: "" + (char)ch);
                return x;
            }

            // Grammar:
            // expression = term | expression `+` term | expression `-` term
            // term = factor | term `*` factor | term `/` factor
            // factor = `+` factor | `-` factor | `(` expression `)`
            //        | number | functionName factor | factor `^` factor

            double parseExpression() {
                double x = parseTerm();
                for (;;) {
                    if      (eat('+')) x += parseTerm(); // addition
                    else if (eat('-')) x -= parseTerm(); // subtraction
                    else return x;
                }
            }

            double parseTerm() {
                double x = parseFactor();
                for (;;) {
                    if      (eat('*')) x *= parseFactor(); // multiplication
                    else if (eat('/')) x /= parseFactor(); // division
                    else return x;
                }
            }

            double parseFactor() {
                if (eat('+')) return parseFactor(); // unary plus
                if (eat('-')) return -parseFactor(); // unary minus

                double x;
                int startPos = this.pos;
                if (eat('(')) { // parentheses
                    x = parseExpression();
                    eat(')');
                } else if ((ch >= '0' && ch <= '9') || ch == '.') { // numbers
                    while ((ch >= '0' && ch <= '9') || ch == '.') nextChar();
                    x = Double.parseDouble(s.substring(startPos, this.pos));
                } else if (ch >= 'a' && ch <= 'z') { // functions
                    while (ch >= 'a' && ch <= 'z') nextChar();
                    String func = s.substring(startPos, this.pos);
                    x = parseFactor();
                    if (func.equals(""sqrt"")) x = Math.sqrt(x);
                    else if (func.equals(""sin"")) x = Math.sin(Math.toRadians(x));
                    else if (func.equals(""cos"")) x = Math.cos(Math.toRadians(x));
                    else if (func.equals(""tan"")) x = Math.tan(Math.toRadians(x));
                    else throw new Error(""Unknown function: "" + func);
                } else {
                    throw new Error(""Unexpected: "" + (char)ch);
                }

                if (eat('^')) x = Math.pow(x, parseFactor()); // exponentiation

                return x;
            }
        }.parse();
    }

    public static double sum(double[] x) {
        double sum = 0;
        for (double d : x) sum += d;
        return sum;
    }
}
"
StarCoder,avatar,Python,Java,atcoder_ABC171_E.java,"import java.util.*;
public class atcoder_ABC171_E {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int N = sc.nextInt ( );
        int [ ] a = new int [ N ];
        for ( int i = 0 ; i < N ; i ++ )
            a [ i ] = sc.nextInt ( );
        int total = 0;
        for ( int i = 0 ; i < N ; i ++ )
            total ^= a [ i ];
        System.out.println ( String.join ( "" "", Arrays.stream ( a ).map ( i -> Integer.toString ( i ^ total ) ).toArray ( ) ) );
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int N = sc.nextInt ( );
        int [ ] a = new int [ N ];
        for ( int i = 0 ; i < N ; i ++ )
            a [ i ] = sc.nextInt ( );
        int total = 0;
        for ( int i = 0 ; i < N ; i ++ )
            total ^= a [ i ];
        System.out.println ( String.join ( "" "", Arrays.stream ( a ).map ( i -> Integer.toString ( i ^ total ) ).toArray ( ) ) );
    }
}"
StarCoder,avatar,Python,Java,codeforces_581_A.java,"import java.util.*;
public class codeforces_581_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        System.out.println(Math.min(a, b) + (Math.max(a, b) - Math.min(a, b)) / 2);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        System.out.println(Math.min(a, b) + "" "" +  (Math.max(a, b) - Math.min(a, b)) / 2);
    }
}"
StarCoder,avatar,Python,Java,codeforces_334_A.java,"n = Integer.parseInt(input());
int i = 1, j = n * n;
while (i < j) {
    System.out.println(i + "" "" + j);
    i++;
    j--;
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int i = 1, j = n * n;
        while (i < j) {
            System.out.println(i + "" "" + j);
            i++;
            j--;
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC164_D.java,"s, l = ( new Scanner ( System. in ) ). nextLine ( ), 2019 ;
m, a, r = ( new int [ l ], 0, 0 ) ;
for ( int i = 0 ; i < s. length ( ) ; i ++ ) {
    a += ( s. charAt ( i ) - '0' ) * Math. pow ( 10, i, l ) ;
    r += m [ a % l ] ;
    m [ a % l ] ++ ;
}
System. out. println ( r ) ;","s, l = ( new Scanner ( System. in ) ). nextLine ( ), 2019 ;
m, a, r = ( new int [ l ], 0, 0 ) ;
for ( int i = 0 ; i < s. length ( ) ; i ++ ) {
    a += ( s. charAt ( i ) - '0' ) * Math. pow ( 10, i, l ) ;
    r += m [ a % l ] ;
    m [ a % l ] ++ ;
}
System. out. println ( r ) ;"
StarCoder,avatar,Python,Java,codeforces_673_A.java,"import java.util.*;
public class codeforces_673_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        if (arr[0] > 15) {
            System.out.println(15);
        } else {
            for (int i = 1; i < n; i++) {
                if (arr[i] - arr[i - 1] > 15) {
                    System.out.println(arr[i - 1] + 15);
                    break;
                }
            } else {
                if (arr[n - 1] == 90 || arr[n - 1] + 15 >= 90) {
                    System.out.println(90);
                } else {
                    System.out.println(arr[n - 1] + 15);
                }
            }
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        if (arr[0] > 15) {
            System.out.println(15);
        } else {
            boolean flag = false;
            for (int i = 1; i < n; i++) {
                if (arr[i] - arr[i - 1] > 15) {
                    System.out.println(arr[i - 1] + 15);
                    flag = true;
                    break;
                }
            } 
            if (!flag) {
                if (arr[n - 1] == 90 || arr[n - 1] + 15 >= 90) {
                    System.out.println(90);
                } else {
                    System.out.println(arr[n - 1] + 15);
                }
            }
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC027_B.java,"import java.util.*;
public class atcoder_AGC027_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int X = scanner.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextInt();
        }
        int[] S = new int[N];
        S[0] = A[0];
        for (int i = 1; i < N; i++) {
            S[i] = S[i - 1] + A[i];
        }
        int ans = Integer.MAX_VALUE;
        for (int k = 1; k <= N / 2; k++) {
            int E = k * X + 2 * Arrays.stream(S).limit(N - 2 * k - 1).skip(k).sum();
            ans = Math.min(ans, E);
        }
        System.out.println(ans + N * X + 5 * S[N - 1]);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int X = scanner.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextInt();
        }
        int[] S = new int[N];
        S[0] = A[0];
        for (int i = 1; i < N; i++) {
            S[i] = S[i - 1] + A[i];
        }
        int ans = Integer.MAX_VALUE;
        for (int k = 1; k <= N / 2; k++) {
            int E = k * X + 2 * Arrays.stream(S).limit(N - 2 * k - 1).skip(k).sum();
            ans = Math.min(ans, E);
        }
        System.out.println(ans + N * X + 5 * S[N - 1]);
    }
}"
StarCoder,avatar,Python,Java,codeforces_268_A.java,"import java.util.*;
public class codeforces_268_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[][] q = new String[n][n];
        int count = 0;
        for (int i = 0; i < n; i++) {
            String[] a = sc.next().split("" "");
            for (int j = 0; j < n; j++) {
                q[i][j] = a[j];
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                for (int k = 0; k < n; k++) {
                    if (q[i][j].equals(q[k][j])) {
                        continue;
                    }
                    if (q[i][j].equals(q[i][k])) {
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[][] q = new String[n][n];
        int count = 0;
        sc.nextLine();
        for (int i = 0; i < n; i++) {
            String[] a = sc.nextLine().split("" "");
            q[i] = a;
        }
        for (int j = 0; j < n; j++) {
            for (int k = 0; k < n; k++) {
                if (k == j) {
                    continue;
                } else if (q[j][0].equals(q[k][q[k].length - 1])) {
                    count++;
                } else {
                    continue;
                }
            }
        }
        System.out.println(count);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC122_D.java,"import java.util.*;
public class atcoder_ABC122_D {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int mod = 1000000007;
        int [ ] memo = new int [ n + 1 ];
        memo [ 0 ] = 1;
        for ( int i = 1 ; i <= n ; i ++ ) {
            for ( int j = 0 ; j < 4 ; j ++ ) {
                for ( int k = 0 ; k < 4 ; k ++ ) {
                    if ( j!= k && ( j == 0 || j == 2 ) && ( k == 1 || k == 3 ) ) {
                        continue;
                    }
                    if ( j == 0 ) {
                        memo [ i ] = ( memo [ i ] + memo [ i - 1 ] ) % mod;
                    } else if ( j == 1 ) {
                        memo [ i ] = ( memo [ i ] + memo [ i - 2 ] ) % mod;
                    } else if ( j == 2 ) {
                        memo [ i ] = ( memo [ i ] + memo [ i - 3 ] ) % mod;
                    } else {
                        memo [ i ] = ( memo [ i ] + memo [ i - 4 ] ) % mod;
                    }
                }
            }
        }
        System.out.println ( memo [ n ] );
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int mod = 1000000007;
        int [ ] memo = new int [ n + 1 ];
        memo [ 0 ] = 1;
        for ( int i = 1 ; i <= n ; i ++ ) {
            for ( int j = 0 ; j < 4 ; j ++ ) {
                for ( int k = 0 ; k < 4 ; k ++ ) {
                    if ( j!= k && ( j == 0 || j == 2 ) && ( k == 1 || k == 3 ) ) {
                        continue;
                    }
                    if ( j == 0 ) {
                        memo [ i ] = ( memo [ i ] + memo [ i - 1 ] ) % mod;
                    } else if ( j == 1 ) {
                        memo [ i ] = ( memo [ i ] + memo [ i - 2 ] ) % mod;
                    } else if ( j == 2 ) {
                        memo [ i ] = ( memo [ i ] + memo [ i - 3 ] ) % mod;
                    } else {
                        memo [ i ] = ( memo [ i ] + memo [ i - 4 ] ) % mod;
                    }
                }
            }
        }
        System.out.println ( memo [ n ] );
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC132_A.java,"import java.util.*;
public class atcoder_ABC132_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        char[] s = S.toCharArray();
        int[] c = new int[26];
        for(int i = 0; i < s.length; i++) {
            c[s[i] - 'a']++;
        }
        Set<Character> set = new HashSet<Character>();
        for(int i = 0; i < s.length; i++) {
            set.add(s[i]);
        }
        if(set.size()!= 2) {
            System.out.println(""No"");
            return;
        }
        for(int i = 0; i < 26; i++) {
            if(c[i]!= 2) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.nextLine();
        char[] s = S.toCharArray();
        int[] c = new int[26];
        for(int i = 0; i < s.length; i++) {
            c[s[i] - 'A']++;
        }
        Set<Character> set = new HashSet<Character>();
        for(int i = 0; i < s.length; i++) {
            set.add(s[i]);
        }
        if(set.size()!= 2) {
            System.out.println(""No"");
            return;
        }
        for(int i = 0; i < 26; i++) {
            if(c[i]!= 2) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC167_D.java,"import java.util.*;
public class atcoder_ABC167_D {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] L = new int[N + 1];
        for (int i = 0; i < N; i++) {
            L[i + 1] = sc.nextInt();
        }
        L[0] = -1;
        int[] path = new int[N + 1];
        int ind = 0;
        int count = 0;
        int x = 1;
        int t = -1;
        boolean flag = false;
        Map<Integer, Integer> Hash = new HashMap<Integer, Integer>();
        for (int i = 0; i < N + 1; i++) {
            int ne = L[x];
            if (Hash.containsKey(ne)) {
                flag = true;
                t = Hash.get(ne);
                break;
            }
            path[ind] = ne;
            ind++;
            Hash.put(ne, ind);
            x = ne;
        }
        if (flag == true) {
            int[] loop = new int[t - 1];
            for (int i = 0; i < t - 1; i++) {
                loop[i] = path[i + t];
            }
            if (K < (path.length)) {
                System.out.println(path[K]);
            } else {
                K = K - path.length;
                K = K % loop.length;
                System.out.println(loop[K]);
            }
        } else {
            System.out.println(path[K - 1]);
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long K = sc.nextLong();
        int[] L = new int[N + 1];
        for (int i = 0; i < N; i++) {
            L[i + 1] = sc.nextInt();
        }
        L[0] = -1;
        int[] path = new int[N + 1];
        int ind = 0;
        int count = 0;
        int x = 1;
        int t = -1;
        boolean flag = false;
        Map<Integer, Integer> Hash = new HashMap<Integer, Integer>();
        for (int i = 0; i < N + 1; i++) {
            int ne = L[x];
            if (Hash.containsKey(ne)) {
                flag = true;
                t = Hash.get(ne);
                break;
            }
            path[ind] = ne;
            ind++;
            Hash.put(ne, ind);
            x = ne;
        }
        if (flag == true) {
            int[] loop = new int[t - 1];
            for (int i = 0; i < t - 1; i++) {
                loop[i] = path[i + t];
            }
            if (K < (path.length)) {
                System.out.println(path[(int) K]);
            } else {
                K = K - path.length;
                K = K % loop.length;
                System.out.println(loop[(int) K]);
            }
        } else {
            System.out.println(path[(int) K - 1]);
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC021_B.java,"import java.util.*;
import java.lang.*;
import java.io.*;
class atcoder_AGC021_B {
	public static void main ( String[] args ) {
		Scanner input = new Scanner ( System.in );
		int t = input.nextInt ( );
		for ( int c = 0; c < t; c++ ) {
			int n = input.nextInt ( );
			double[] x = new double[n];
			double[] y = new double[n];
			for ( int i = 0; i < n; i++ ) {
				x[i] = input.nextDouble ( );
				y[i] = input.nextDouble ( );
			}
			double[] d = new double[n];
			for ( int i = 0; i < n; i++ ) {
				d[i] = Math.atan2 ( y[i] - y[0], x[i] - x[0] );
			}
			Arrays.sort ( d );
			double ans = 0;
			for ( int i = 0; i < n; i++ ) {
				ans += Math.abs ( d[i] - d[(i + 1) % n] );
			}
			System.out.println ( ans / (2 * Math.PI) );
		}
	}
}","import java.util.*;
import java.lang.*;
import java.io.*;
class GFG {
	public static void main ( String[] args ) {
		Scanner input = new Scanner ( System.in );
		int t = input.nextInt ( );
		for ( int c = 0; c < t; c++ ) {
			int n = input.nextInt ( );
			double[] x = new double[n];
			double[] y = new double[n];
			for ( int i = 0; i < n; i++ ) {
				x[i] = input.nextDouble ( );
				y[i] = input.nextDouble ( );
			}
			double[] d = new double[n];
			for ( int i = 0; i < n; i++ ) {
				d[i] = Math.atan2 ( y[i] - y[0], x[i] - x[0] );
			}
			Arrays.sort ( d );
			double ans = 0;
			for ( int i = 0; i < n; i++ ) {
				ans += Math.abs ( d[i] - d[(i + 1) % n] );
			}
			System.out.println ( ans / (2 * Math.PI) );
		}
	}
}"
StarCoder,avatar,Python,Java,atcoder_ABC145_E.java,"import java.util.*;
public class atcoder_ABC145_E {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int[][] arr = new int[n + 1][2];
        for (int i = 1; i <= n; i++) {
            arr[i][0] = sc.nextInt();
            arr[i][1] = sc.nextInt();
        }
        Arrays.sort(arr, (a, b) -> a[1] - b[1]);
        int[][] dp = new int[n + 1][t + 1];
        for (int i = 0; i <= n; i++) {
            for (int j = 0; j <= t; j++) {
                if (i == 0) {
                    dp[i][j] = 0;
                } else if (j == 0) {
                    dp[i][j] = 0;
                } else if (arr[i][1] > j) {
                    dp[i][j] = dp[i - 1][j];
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], arr[i][1] + dp[i - 1][j - arr[i][0]]);
                }
            }
        }
        int val = arr[n][1];
        int t1 = t - 1;
        int max = val + dp[n - 1][t1];
        for (int i = n - 1; i >= 0; i--) {
            val += arr[i][1];
            t1 -= arr[i + 1][0];
            if (t1 < 0) {
                break;
            } else {
                max = Math.max(max, val + dp[i - 1][t1]);
            }
        }
        System.out.println(max);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int[][] arr = new int[n + 1][2];
        for (int i = 1; i <= n; i++) {
            arr[i][0] = sc.nextInt();
            arr[i][1] = sc.nextInt();
        }
        Arrays.sort(arr, (a, b) -> a[1] - b[1]);
        int[][] dp = new int[n + 1][t + 1];
        for (int i = 0; i <= n; i++) {
            for (int j = 0; j <= t; j++) {
                if (i == 0) {
                    dp[i][j] = 0;
                } else if (j == 0) {
                    dp[i][j] = 0;
                } else if (arr[i][1] > j) {
                    dp[i][j] = dp[i - 1][j];
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], arr[i][1] + dp[i - 1][j - arr[i][0]]);
                }
            }
        }
        int val = arr[n][1];
        int t1 = t - 1;
        int max = val + dp[n - 1][t1];
        for (int i = n - 1; i >= 0; i--) {
            val += arr[i][1];
            t1 -= arr[i + 1][0];
            if (t1 < 0) {
                break;
            } else if (i >= 1) { 
                max = Math.max(max, val + dp[i - 1][t1]);
            }
        }
        System.out.println(max);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC146_D.java,"import java.util.*;
import java.io.*;
public class atcoder_ABC146_D {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] g = new int[n][n];
        int[][] e = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                g[i][j] = sc.nextInt();
            }
        }
        int k = bfs(g, e, 0, n);
        System.out.println(k);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.print(e[i][j] + "" "");
            }
            System.out.println();
        }
    }
    public static int bfs(int[][] g, int[][] e, int v, int n) {
        boolean[] visited = new boolean[n];
        Queue<Integer> queue = new LinkedList<>();
        int k = -1;
        int[] node2color = new int[n];
        queue.add(v);
        visited[v] = true;
        while (!queue.isEmpty()) {
            int q = queue.poll();
            int color = 0;
            for (int nex : g[q]) {
                if (visited[nex]) {
                    continue;
                }
                visited[nex] = true;
                color++;
                if (color == node2color[q]) {
                    color++;
                }
                node2color[nex] = color;
                e[Math.min(q, nex)][Math.max(q, nex)] = color;
                queue.add(nex);
            }
            k = Math.max(k, color);
        }
        return k;
    }
}","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] g = new int[n][n];
        int[][] e = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                g[i][j] = sc.nextInt();
            }
        }
        int k = bfs(g, e, 0, n);
        System.out.println(k);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.print(e[i][j] + "" "");
            }
            System.out.println();
        }
    }
    public static int bfs(int[][] g, int[][] e, int v, int n) {
        boolean[] visited = new boolean[n];
        Queue<Integer> queue = new LinkedList<>();
        int k = -1;
        int[] node2color = new int[n];
        queue.add(v);
        visited[v] = true;
        while (!queue.isEmpty()) {
            int q = queue.poll();
            int color = 0;
            for (int nex : g[q]) {
                if (visited[nex]) {
                    continue;
                }
                visited[nex] = true;
                color++;
                if (color == node2color[q]) {
                    color++;
                }
                node2color[nex] = color;
                e[Math.min(q, nex)][Math.max(q, nex)] = color;
                queue.add(nex);
            }
            k = Math.max(k, color);
        }
        return k;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC166_C.java,"import java.util.*;
public class atcoder_ABC166_C {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n, m;
        n = sc.nextInt();
        m = sc.nextInt();
        int[] p = new int[n + 1];
        int[] h = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            p[i] = i;
            h[i] = sc.nextInt();
        }
        Map<Integer, List<Integer>> path = new HashMap<Integer, List<Integer>>();
        for (int i = 0; i < m; i++) {
            int a, b;
            a = sc.nextInt();
            b = sc.nextInt();
            if (!path.containsKey(a)) {
                path.put(a, new ArrayList<Integer>());
            }
            path.get(a).add(b);
            if (!path.containsKey(b)) {
                path.put(b, new ArrayList<Integer>());
            }
            path.get(b).add(a);
        }
        int c = 0;
        for (int i = 1; i <= n; i++) {
            boolean f = false;
            for (int j : path.get(i)) {
                if (h[i] <= h[j]) {
                    f = true;
                    break;
                }
            }
            if (!f) {
                c++;
            }
        }
        System.out.println(c);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n, m;
        n = sc.nextInt();
        m = sc.nextInt();
        int[] p = new int[n + 1];
        int[] h = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            p[i] = i;
            h[i] = sc.nextInt();
        }
        Map<Integer, List<Integer>> path = new HashMap<Integer, List<Integer>>();
        for (int i = 0; i < m; i++) {
            int a, b;
            a = sc.nextInt();
            b = sc.nextInt();
            if (!path.containsKey(a)) {
                path.put(a, new ArrayList<Integer>());
            }
            path.get(a).add(b);
            if (!path.containsKey(b)) {
                path.put(b, new ArrayList<Integer>());
            }
            path.get(b).add(a);
        }
        int c = 0;
        for (int i = 1; i <= n; i++) {
            boolean f = false;
            for (int j : path.get(i)) {
                if (h[i] <= h[j]) {
                    f = true;
                    break;
                }
            }
            if (!f) {
                c++;
            }
        }
        System.out.println(c);
    }
}"
StarCoder,avatar,Python,Java,codeforces_629_B.java,"import java.util.*;
public class codeforces_629_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = 368;
        int[] m = new int[N];
        int[] f = new int[N];
        for (int i = 0; i < sc.nextInt(); i++) {
            String x = sc.next();
            int a = sc.nextInt();
            int b = sc.nextInt();
            if (x.equals(""M"")) {
                m[a] += 2;
                m[b] -= 2;
            } else {
                f[a] += 2;
                f[b] -= 2;
            }
        }
        int a = 0, b = 0, c = 0;
        for (int i = 0; i < N; i++) {
            a += m[i];
            b += f[i];
            c = Math.min(c, Math.min(a, b));
        }
        System.out.println(c);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = 368;
        int[] m = new int[N];
        int[] f = new int[N];
        int n = sc.nextInt();
        for (int i = 0; i < n; i++) {
            String x = sc.next();
            int a = sc.nextInt();
            int b = sc.nextInt() + 1;
            if (x.equals(""M"")) {
                m[a] += 2;
                m[b] -= 2;
            } else {
                f[a] += 2;
                f[b] -= 2;
            }
        }
        int a = 0, b = 0, c = 0;
        for (int i = 0; i < N; i++) {
            a += m[i];
            b += f[i];
            if (Math.min(a, b) > c) {
                c = Math.min(a, b);
            }
        }
        System.out.println(c);
    }
}"
StarCoder,avatar,Python,Java,codeforces_665_A.java,"import java.util.*;
public class codeforces_665_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int at = sc.nextInt();
        int b = sc.nextInt();
        int bt = sc.nextInt();
        int t1 = sc.nextInt();
        int t2 = sc.nextInt();
        int st = t2 + (t1 - 5) * 60;
        int fin = st + at;
        int now = 0;
        int ans = 0;
        while (now < fin && now < 1140) {
            if (now + bt > st) {
                ans++;
            }
            now += b;
        }
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String[] input1 = sc.nextLine().split("" "");
        String[] input2 = sc.nextLine().split("" "");
        String[] input3 = sc.nextLine().split("":"");
        int a = Integer.parseInt(input1[0]);
        int at = Integer.parseInt(input1[1]);
        int b = Integer.parseInt(input2[0]);
        int bt = Integer.parseInt(input2[1]);
        int t1 = Integer.parseInt(input3[0]);
        int t2 = Integer.parseInt(input3[1]);
        int st = t2 + (t1 - 5) * 60;
        int fin = st + at;
        int now = 0;
        int ans = 0;
        while (now < fin && now < 1140) {
            if (now + bt > st) {
                ans++;
            }
            now += b;
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,codeforces_387_A.java,"import java.util.Scanner;
public class codeforces_387_A {
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int h1, m1, h2, m2;
        h1 = sc.nextInt();
        m1 = sc.nextInt();
        h2 = sc.nextInt();
        m2 = sc.nextInt();
        m2 = m1 - m2;
        m2 %= 1440;
        System.out.printf(""%02d:%02d"", m2 / 60, m2 % 60);
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int h1, m1, h2, m2;
        String[] time1 = sc.nextLine().split("":"");
        h1 = Integer.parseInt(time1[0]);
        m1 = Integer.parseInt(time1[1]);
        m1 += h1 * 60;
        String[] time2 = sc.nextLine().split("":"");
        h2 = Integer.parseInt(time2[0]);
        m2 = Integer.parseInt(time2[1]);
        m2 += h2 * 60;
        m2 = m1 - m2;
        m2 = (m2 % 1440 + 1440) % 1440;
        System.out.printf(""%02d:%02d"", m2 / 60, (m2 % 60 + 60) % 60);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC120_C.java,"import java.util.*;
import java.io.*;
public class atcoder_ABC120_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == s.charAt(i + 1)) {
                ans += 2;
            }
        }
        System.out.println(ans);
    }
}","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == s.charAt(i + 1)) {
                ans += 2;
            }
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,codeforces_500_A.java,"import java.util.*;
public class codeforces_500_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int[] s = new int[n];
        for (int i = 0; i < n; i++) {
            s[i] = sc.nextInt();
        }
        int current_cell = 0;
        while (current_cell <= t) {
            current_cell += s[current_cell - 1];
            if (current_cell == t) {
                System.out.println(""YES"");
                return;
            }
        }
        System.out.println(""NO"");
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        sc.nextLine();
        String line = sc.nextLine();
        String[] numbers = line.split("" "");
        int[] s = new int[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            s[i] = Integer.parseInt(numbers[i]);
        }
        int current_cell = 0;
        while (current_cell <= t) {
            current_cell += s[(numbers.length + current_cell - 1) % numbers.length];
            if (current_cell == t) {
                System.out.println(""YES"");
                return;
            }
        }
        System.out.println(""NO"");
    }
}"
StarCoder,avatar,Python,Java,codeforces_469_A.java,"import java.util.*;
public class codeforces_469_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int max_level = sc.nextInt();
        int[] x = new int[max_level];
        int[] y = new int[max_level];
        for (int i = 0; i < max_level; i++) {
            x[i] = sc.nextInt();
        }
        for (int i = 0; i < max_level; i++) {
            y[i] = sc.nextInt();
        }
        Set<Integer> set_x = new HashSet<Integer>();
        Set<Integer> set_y = new HashSet<Integer>();
        for (int i = 0; i < max_level; i++) {
            set_x.add(x[i]);
        }
        for (int i = 0; i < max_level; i++) {
            set_y.add(y[i]);
        }
        if (set_x.contains(0)) {
            set_x.remove(0);
        }
        if (set_y.contains(0)) {
            set_y.remove(0);
        }
        if (set_x.size()!= max_level || set_y.size()!= max_level) {
            System.out.println(""Oh, my keyboard!"");
        } else {
            System.out.println(""I become the guy."");
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int max_level = sc.nextInt();
        sc.nextLine();
        String line = sc.nextLine();
        String[] numbers = line.split("" "");
        int[] x = new int[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            x[i] = Integer.parseInt(numbers[i]);
        }
        Set<Integer> set_x = new HashSet<Integer>();
        for (int i = 1; i < numbers.length; i++) {
            set_x.add(x[i]);
        }
        line = sc.nextLine();
        numbers = line.split("" "");
        int[] y = new int[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            y[i] = Integer.parseInt(numbers[i]);
        }
        Set<Integer> set_y = new HashSet<Integer>();
        for (int i = 1; i < numbers.length; i++) {
            set_y.add(y[i]);
        }
        if (set_x.contains(0)) {
            set_x.remove(0);
        }
        if (set_y.contains(0)) {
            set_y.remove(0);
        }
        HashSet<Integer> set_z = new HashSet<>(set_x);
        set_z.addAll(set_y);
        if (set_z.size() != max_level) {
            System.out.println(""Oh, my keyboard!"");
        } else {
            System.out.println(""I become the guy."");
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC168_B.java,"public class atcoder_ABC168_B {
    public static void main(String[] args) {
        int K = Integer.parseInt(args[0]);
        String S = args[1];
        if (S.length() <= K) {
            System.out.println(S);
        } else {
            System.out.println(S.substring(0, K) + ""..."");
        }
    }
}
","public class Main {
    public static void main(String[] args) {
        int K = Integer.parseInt(args[0]);
        String S = args[1];
        if (S.length() <= K) {
            System.out.println(S);
        } else {
            System.out.println(S.substring(0, K) + ""..."");
        }
    }
}
"
StarCoder,avatar,Python,Java,atcoder_ARC102_C.java,"import java.util.*;
import java.math.*;
public class atcoder_ARC102_C {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int K, N;
        K = in.nextInt();
        N = in.nextInt();
        int[] ans = new int[2 * K + 1];
        ans[0] = 0;
        ans[1] = 1;
        for (int i = 2; i <= 2 * K; i++) {
            ans[i] = (ans[i - 1] + ans[i - 2]) % 998244353;
        }
        if (N <= K + 1) {
            System.out.println(ans[N]);
        } else {
            System.out.println(ans[2 * K - N]);
        }
    }
}","import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int K, N;
        K = in.nextInt();
        N = in.nextInt();
        int[] ans = new int[2 * K + 1];
        ans[0] = 0;
        ans[1] = 1;
        for (int i = 2; i <= 2 * K; i++) {
            ans[i] = (ans[i - 1] + ans[i - 2]) % 998244353;
        }
        if (N <= K + 1) {
            System.out.println(ans[N]);
        } else {
            System.out.println(ans[2 * K - N]);
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC106_C.java,"import java.util.*;
public class atcoder_ABC106_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int k = sc.nextInt();
        int l = 0;
        for(int i = 0; i < s.length(); i++) {
            if(s.charAt(i)!= '1') {
                break;
            }
            l++;
        }
        if(l >= k) {
            System.out.println(1);
        } else {
            System.out.println(s.charAt(l));
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        long k = sc.nextLong();
        int l = 0;
        for(int i = 0; i < s.length(); i++) {
            if(s.charAt(i)!= '1') {
                break;
            }
            l++;
        }
        if(l >= k) {
            System.out.println(1);
        } else {
            System.out.println(s.charAt(l));
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC089_C.java,"import java.util.*;
import java.io.*;
public class atcoder_ABC089_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] s = new String[n];
        for(int i = 0; i < n; i++) {
            s[i] = sc.next();
        }
        int[] march = new int[5];
        for(String str : s) {
            if(str.charAt(0) >= 'A' && str.charAt(0) <= 'Z') {
                march[str.charAt(0) - 'A']++;
            }
        }
        int ans = 0;
        for(int i = 0; i < 5; i++) {
            for(int j = i + 1; j < 5; j++) {
                for(int k = j + 1; k < 5; k++) {
                    ans += march[i] * march[j] * march[k];
                }
            }
        }
        System.out.println(ans);
    }
}","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] s = new String[n];
        for(int i = 0; i < n; i++) {
            s[i] = sc.next();
        }
        ArrayList<String> march_arrays = new ArrayList<>(Arrays.asList(""M"", ""A"", ""R"", ""C"", ""H""));
        int[] march = new int[5];
        for(String str : s) {
            if (march_arrays.contains(Character.toString(str.charAt(0)).toUpperCase())) {
                march[march_arrays.indexOf(Character.toString(str.charAt(0)).toUpperCase())]++;
            }
        }
        int ans = 0;
        for (int x : march) {
            for (int y : march) {
                for (int z : march) {
                    if (x != y && y != z && x != z) {
                        ans += x * y * z;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,codeforces_462_B.java,"import java.util.*;
public class codeforces_462_B {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int k = sc.nextInt ( ) ;
        String s = sc.next ( ) ;
        int [ ] count = new int [ 26 ] ;
        for ( int i = 0 ; i < n ; i ++ )
        {
            count [ s.charAt ( i ) - 'A' ] ++ ;
        }
        Arrays.sort ( count ) ;
        int res = 0 ;
        for ( int i = 25 ; i >= 0 ; i -- )
        {
            if ( count [ i ] >= k )
            {
                res += k * k ;
                System.out.println ( res ) ;
                return ;
            }
            k -= count [ i ] ;
            res += count [ i ] * count [ i ] ;
        }
        System.out.println ( res ) ;
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int k = sc.nextInt ( ) ;
        sc.nextLine ( ) ;
        String s = sc.nextLine ( ) ;
        int [ ] count = new int [ 26 ] ;
        for ( int i = 0 ; i < n ; i ++ )
        {
            count [ s.charAt ( i ) - 'A' ] ++ ;
        }
        Arrays.sort ( count ) ;
        int res = 0 ;
        for ( int i = 25 ; i >= 0 ; i -- )
        {
            if ( count [ i ] >= k )
            {
                res += k * k ;
                System.out.println ( res ) ;
                return ;
            }
            k -= count [ i ] ;
            res += count [ i ] * count [ i ] ;
        }
        System.out.println ( res ) ;
    }
}"
StarCoder,avatar,Python,Java,codeforces_287_A.java,"import java.util.*;
public class codeforces_287_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String[][] t = new String[4][4];
        for (int i = 0; i < 4; i++) {
            String[] l = sc.nextLine().split("" "");
            for (int j = 0; j < 4; j++) {
                t[i][j] = l[j];
            }
        }
        int black = 0;
        int white = 0;
        int correct = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (t[i][j].equals(""#"")) {
                    black++;
                } else {
                    white++;
                }
                if (t[i][j + 1].equals(""#"")) {
                    black++;
                } else {
                    white++;
                }
                if (t[i + 1][j].equals(""#"")) {
                    black++;
                } else {
                    white++;
                }
                if (t[i + 1][j + 1].equals(""#"")) {
                    black++;
                } else {
                    white++;
                }
                if (black == 0 || black == 3 || white == 0 || white == 3 || white == 4 || black == 4) {
                    correct = 1;
                    break;
                }
                black = 0;
                white = 0;
            }
            if (correct == 1) {
                break;
            }
        }
        if (correct == 1) {
            System.out.println(""YES"");
        } else {
            System.out.println(""NO"");
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String[][] t = new String[4][4];
        for (int i = 0; i < 4; i++) {
            String[] l = sc.nextLine().split("""");
            for (int j = 0; j < 4; j++) {
                t[i][j] = l[j];
            }
        }
        int black = 0;
        int white = 0;
        int correct = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (t[i][j].equals(""#"")) {
                    black++;
                } else {
                    white++;
                }
                if (t[i][j + 1].equals(""#"")) {
                    black++;
                } else {
                    white++;
                }
                if (t[i + 1][j].equals(""#"")) {
                    black++;
                } else {
                    white++;
                }
                if (t[i + 1][j + 1].equals(""#"")) {
                    black++;
                } else {
                    white++;
                }
                if (black == 0 || black == 3 || white == 0 || white == 3 || white == 4 || black == 4) {
                    correct = 1;
                    break;
                }
                black = 0;
                white = 0;
            }
            if (correct == 1) {
                break;
            }
        }
        if (correct == 1) {
            System.out.println(""YES"");
        } else {
            System.out.println(""NO"");
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_55_B.java,"import java.util.*;
public class codeforces_55_B {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in );
        int [ ] nums = new int [ 3 ];
        String [ ] operations = new String [ 3 ];
        for ( int i = 0 ; i < 3 ; i++ ) {
            nums [ i ] = sc.nextInt ( );
            operations [ i ] = sc.next ( );
        }
        int [ ] ans = new int [ 1 ];
        rememberTheNumber ( nums, 0, operations, ans );
        System.out.println ( ans [ 0 ] );
    }
    public static void rememberTheNumber ( int [ ] nums, int i, String [ ] operations, int [ ] ans ) {
        if ( i >= 3 ) {
            return;
        }
        for ( int j = 0 ; j < 4 ; j++ ) {
            for ( int k = j + 1 ; k < 4 ; k++ ) {
                if ( nums [ j ]!= - 1 && nums [ k ]!= - 1 ) {
                    int s = nums [ j ];
                    nums [ j ] = - 1;
                    int t = nums [ k ];
                    if ( operations [ i ].equals ( ""+"" ) ) {
                        nums [ k ] = s + t;
                    }
                    else if ( operations [ i ].equals ( ""*"" ) ) {
                        nums [ k ] = s * t;
                    }
                    if ( i == 2 && nums [ k ] < ans [ 0 ] ) {
                        ans [ 0 ] = nums [ k ];
                    }
                    rememberTheNumber ( nums, i + 1, operations, ans );
                    nums [ j ] = s;
                    nums [ k ] = t;
                }
            }
        }
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in );
        int [ ] nums = new int [ 3 ];
        String [ ] operations = new String [ 3 ];
        for ( int i = 0 ; i < 3 ; i++ ) {
            nums [ i ] = sc.nextInt ( );
            operations [ i ] = sc.next ( );
        }
        int [ ] ans = new int [ 1 ];
        rememberTheNumber ( nums, 0, operations, ans );
        System.out.println ( ans [ 0 ] );
    }
    public static void rememberTheNumber ( int [ ] nums, int i, String [ ] operations, int [ ] ans ) {
        if ( i >= 3 ) {
            return;
        }
        for ( int j = 0 ; j < 4 ; j++ ) {
            for ( int k = j + 1 ; k < 4 ; k++ ) {
                if ( nums [ j ]!= - 1 && nums [ k ]!= - 1 ) {
                    int s = nums [ j ];
                    nums [ j ] = - 1;
                    int t = nums [ k ];
                    if ( operations [ i ].equals ( ""+"" ) ) {
                        nums [ k ] = s + t;
                    }
                    else if ( operations [ i ].equals ( ""*"" ) ) {
                        nums [ k ] = s * t;
                    }
                    if ( i == 2 && nums [ k ] < ans [ 0 ] ) {
                        ans [ 0 ] = nums [ k ];
                    }
                    rememberTheNumber ( nums, i + 1, operations, ans );
                    nums [ j ] = s;
                    nums [ k ] = t;
                }
            }
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC169_C.java,"import java.util.*;
public class atcoder_ABC169_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        System.out.println(a * b / 100);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextLong();
        double sb = sc.nextDouble();
        long b = (long) (sb * 100 + 0.1);
        System.out.println(a * b / 100);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC158_B.java,"import java.util.*;
public class atcoder_ABC158_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();
        int ans = 0;
        int rep = N / (A + B);
        ans += rep * A;
        int res = N - rep * (A + B);
        ans += Math.min(res, A);
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        long A = sc.nextLong();
        long B = sc.nextLong();
        long ans = 0;
        long rep = N / (A + B);
        ans += rep * A;
        long res = N - rep * (A + B);
        ans += Math.min(res, A);
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,codeforces_400_A.java,"import java.util.*;
public class codeforces_400_A {
    public static void main ( String arg [ ] )
    {
        Scanner sc = new Scanner ( System.in );
        int t = sc.nextInt ( );
        while ( t -- > 0 )
        {
            int n = sc.nextInt ( );
            int arr [ ] = new int [ n ];
            for ( int i = 0 ; i < n ; i ++ )
                arr [ i ] = sc.nextInt ( );
            int ans = 0;
            for ( int i = 1 ; i <= 12 ; i ++ )
                if ( n % i == 0 )
                    if ( help ( arr, n, i ) )
                        ans ++ ;
            System.out.println ( ans );
        }
    }
    public static boolean help ( int arr [ ], int n, int k )
    {
        int sum = 0;
        for ( int i = 0 ; i < n ; i += k )
            sum += arr [ i ];
        if ( sum == k )
            return true;
        return false;
    }
}","import java.util.*;
public class Main {
    public static void main ( String arg [ ] )
    {
        Scanner sc = new Scanner ( System.in );
        int t = sc.nextInt ( );
        while ( t -- > 0 )
        {
            int n = sc.nextInt ( );
            int arr [ ] = new int [ n ];
            for ( int i = 0 ; i < n ; i ++ )
                arr [ i ] = sc.nextInt ( );
            int ans = 0;
            for ( int i = 1 ; i <= 12 ; i ++ )
                if ( n % i == 0 )
                    if ( help ( arr, n, i ) )
                        ans ++ ;
            System.out.println ( ans );
        }
    }
    public static boolean help ( int arr [ ], int n, int k )
    {
        int sum = 0;
        for ( int i = 0 ; i < n ; i += k )
            sum += arr [ i ];
        if ( sum == k )
            return true;
        return false;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC149_B.java,"import java.util.*;
public class atcoder_ABC149_B {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] cookies = new int[3];
        for (int i = 0; i < 3; i++) {
            cookies[i] = sc.nextInt();
        }
        int leftOver = cookies[0] - cookies[2];
        int takahashi = Math.max(0, leftOver);
        System.out.println(takahashi + "" "" + (cookies[1] > 0? cookies[1] : Math.max(0, cookies[1] - Math.abs(leftOver))));
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long[] cookies = new long[3];
        for (int i = 0; i < 3; i++) {
            cookies[i] = sc.nextLong();
        }
        long leftOver = cookies[0] - cookies[2];
        long takahashi = Math.max(0, leftOver);
        System.out.println(takahashi + "" "" + (takahashi > 0? cookies[1] : Math.max(0, cookies[1] - Math.abs(leftOver))));
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC033_A.java,"import java.util.*;
public class atcoder_AGC033_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int h = sc.nextInt();
        int w = sc.nextInt();
        int[][] graph = new int[h][w];
        for (int i = 0; i < h; i++) {
            String s = sc.next();
            for (int j = 0; j < w; j++) {
                if (s.charAt(j) == '#') {
                    graph[i][j] = 0;
                } else {
                    graph[i][j] = Integer.MAX_VALUE;
                }
            }
        }
        for (int i = 0; i < w - 1; i++) {
            for (int j = 0; j < h; j++) {
                if (graph[j][i] + 1 < graph[j][i + 1]) {
                    graph[j][i + 1] = graph[j][i] + 1;
                }
            }
        }
        for (int i = w - 1; i >= 0; i--) {
            for (int j = 0; j < h; j++) {
                if (graph[j][i] + 1 < graph[j][i - 1]) {
                    graph[j][i - 1] = graph[j][i] + 1;
                }
            }
        }
        for (int i = 0; i < h - 1; i++) {
            for (int j = 0; j < w; j++) {
                if (graph[i][j] + 1 < graph[i + 1][j]) {
                    graph[i + 1][j] = graph[i][j] + 1;
                }
            }
        }
        for (int i = h - 1; i >= 0; i--) {
            for (int j = 0; j < w; j++) {
                if (graph[i][j] + 1 < graph[i - 1][j]) {
                    graph[i - 1][j] = graph[i][j] + 1;
                }
            }
        }
        int max = 0;
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (graph[i][j] > max) {
                    max = graph[i][j];
                }
            }
        }
        System.out.println(max);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int h = sc.nextInt();
        int w = sc.nextInt();
        int[][] graph = new int[h][w];
        for (int i = 0; i < h; i++) {
            String s = sc.next();
            for (int j = 0; j < w; j++) {
                if (s.charAt(j) == '#') {
                    graph[i][j] = 0;
                } else {
                    graph[i][j] = Integer.MAX_VALUE;
                }
            }
        }
        for (int i = 0; i < w - 1; i++) {
            for (int j = 0; j < h; j++) {
                if (graph[j][i] + 1 < graph[j][i + 1]) {
                    graph[j][i + 1] = graph[j][i] + 1;
                }
            }
        }
        for (int i = w - 1; i >= 0; i--) {
            for (int j = 0; j < h; j++) {
                if (graph[j][i] + 1 < graph[j][i - 1]) {
                    graph[j][i - 1] = graph[j][i] + 1;
                }
            }
        }
        for (int i = 0; i < h - 1; i++) {
            for (int j = 0; j < w; j++) {
                if (graph[i][j] + 1 < graph[i + 1][j]) {
                    graph[i + 1][j] = graph[i][j] + 1;
                }
            }
        }
        for (int i = h - 1; i >= 0; i--) {
            for (int j = 0; j < w; j++) {
                if (graph[i][j] + 1 < graph[i - 1][j]) {
                    graph[i - 1][j] = graph[i][j] + 1;
                }
            }
        }
        int max = 0;
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (graph[i][j] > max) {
                    max = graph[i][j];
                }
            }
        }
        System.out.println(max);
    }
}"
StarCoder,avatar,Python,Java,codeforces_61_B.java,"import java.util.*;
public class codeforces_61_B {
    public static void main ( String arg [ ] ) {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        for ( int i = 0 ; i < n ; i ++ ) {
            String s = sc.next ( );
            String t = sc.next ( );
            String u = sc.next ( );
            if ( s.equals ( ""AC"" ) && t.equals ( ""WA"" ) && u.equals ( ""WA"" ) ) System.out.println ( ""AC"" );
            else if ( s.equals ( ""WA"" ) && t.equals ( ""AC"" ) && u.equals ( ""WA"" ) ) System.out.println ( ""AC"" );
            else if ( s.equals ( ""WA"" ) && t.equals ( ""WA"" ) && u.equals ( ""AC"" ) ) System.out.println ( ""AC"" );
            else System.out.println ( ""WA"" );
        }
    }
}","import java.util.*;
public class Main {
    public static void main ( String arg [ ] ) {
        Scanner sc = new Scanner ( System.in );
        for ( int i = 0 ; i < 3 ; i ++ ) {
            String s = sc.next ( );
            String t = sc.next ( );
            String u = sc.next ( );
            if ( s.equals ( ""AC"" ) && t.equals ( ""WA"" ) && u.equals ( ""WA"" ) ) System.out.println ( ""AC"" );
            else if ( s.equals ( ""WA"" ) && t.equals ( ""AC"" ) && u.equals ( ""WA"" ) ) System.out.println ( ""AC"" );
            else if ( s.equals ( ""WA"" ) && t.equals ( ""WA"" ) && u.equals ( ""AC"" ) ) System.out.println ( ""AC"" );
            else System.out.println ( ""WA"" );
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC012_A.java,"import java.util.*;
import java.lang.*;
import java.io.*;
class atcoder_AGC012_A {
    public static void main ( String[] args ) {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int[] A = new int[n];
        for ( int i = 0 ; i < n ; i++ ) {
            A[i] = sc.nextInt ( );
        }
        Arrays.sort ( A );
        int ans = 0;
        for ( int i = A.length - 2 ; i >= A.length - 2 * n - 1 ; i -= 2 ) {
            ans += A[i];
        }
        System.out.println ( ans );
    }
}
","import java.util.*;
import java.lang.*;
import java.io.*;
class Main {
    public static void main ( String[] args ) {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( ); 
        sc.nextLine();
        String[] inputs = sc.nextLine().split("" "");
        int[] A = new int[inputs.length];
        for (int i = 0; i < inputs.length; i++) {
            A[i] = Integer.parseInt(inputs[i]);
        }
        Arrays.sort ( A );
        long ans = 0;
        for ( int i = A.length - 2 ; i >= A.length - 2 * n - 1 ; i -= 2 ) {
            ans += A[i];
        }
        System.out.println ( ans );
    }
}"
StarCoder,avatar,Python,Java,codeforces_146_A.java,"import java.util.*;
public class codeforces_146_A {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int [ ] number = new int [ n ];
        int h1 = 0, h2 = 0, x = 0;
        for ( int i = 0 ; i < n ; i++ )
        {
            number [ i ] = sc.nextInt ( );
            if ( number [ i ]!= 4 && number [ i ]!= 7 )
            {
                System.out.println ( ""NO"" );
                x = 1;
                break;
            }
            if ( i < n / 2 )
                h1 += number [ i ];
            else
                h2 += number [ i ];
        }
        if ( x == 0 )
        {
            if ( h1 == h2 )
                System.out.println ( ""YES"" );
            else
                System.out.println ( ""NO"" );
        }
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        sc.nextLine ( );
        String line = sc.nextLine ( );
        String [ ] numbers = line.split ( """" );
        int [ ] number = new int [ numbers.length ];
        int h1 = 0, h2 = 0, x = 0;
        for ( int i = 0 ; i < numbers.length ; i++ )
        {
            number [ i ] = Integer.parseInt ( numbers [ i ] );

            if ( number [ i ]!= 4 && number [ i ]!= 7 )
            {
                System.out.println ( ""NO"" );
                x = 1;
                break;
            }
            if ( i < n / 2 )
                h1 += number [ i ];
            else
                h2 += number [ i ];
        }
        if ( x == 0 )
        {
            if ( h1 == h2 )
                System.out.println ( ""YES"" );
            else
                System.out.println ( ""NO"" );
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC004_D.java,"import java.util.*;
import java.io.*;
public class atcoder_AGC004_D {
    static int n, k;
    static int[] a;
    static int[][] links;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] str = br.readLine().split("" "");
        n = Integer.parseInt(str[0]);
        k = Integer.parseInt(str[1]);
        a = new int[n];
        links = new int[n][n];
        for (int i = 0; i < n; i++) {
            links[i] = new int[n];
        }
        for (int i = 0; i < n; i++) {
            a[i] = Integer.parseInt(br.readLine()) - 1;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                links[a[i]][j] = 1;
            }
        }
        int[] ans = dfs(0, 0);
        System.out.println(ans[1]);
    }
    static int[] dfs(int v, int p) {
        int[] ans = new int[2];
        int heightFromLeaf = 0;
        int cutCount = 0;
        for (int u = 0; u < n; u++) {
            if (links[v][u] == 0) {
                continue;
            }
            int[] hgtCut = dfs(u, v);
            heightFromLeaf = Math.max(heightFromLeaf, hgtCut[0]);
            cutCount += hgtCut[1];
        }
        heightFromLeaf++;
        if (p!= 0 && heightFromLeaf == k) {
            heightFromLeaf = 0;
            cutCount++;
        }
        ans[0] = heightFromLeaf;
        ans[1] = cutCount;
        return ans;
    }
}","import java.util.*;
import java.io.*;
public class Main {
    static int n, k;
    static int[] a;
    static int[][] links;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] str = br.readLine().split("" "");
        n = Integer.parseInt(str[0]);
        k = Integer.parseInt(str[1]);
        a = new int[n];
        links = new int[n][n];
        for (int i = 0; i < n; i++) {
            links[i] = new int[n];
        }
        for (int i = 0; i < n; i++) {
            a[i] = Integer.parseInt(br.readLine()) - 1;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                links[a[i]][j] = 1;
            }
        }
        int[] ans = dfs(0, 0);
        System.out.println(ans[1]);
    }
    static int[] dfs(int v, int p) {
        int[] ans = new int[2];
        int heightFromLeaf = 0;
        int cutCount = 0;
        for (int u = 0; u < n; u++) {
            if (links[v][u] == 0) {
                continue;
            }
            int[] hgtCut = dfs(u, v);
            heightFromLeaf = Math.max(heightFromLeaf, hgtCut[0]);
            cutCount += hgtCut[1];
        }
        heightFromLeaf++;
        if (p!= 0 && heightFromLeaf == k) {
            heightFromLeaf = 0;
            cutCount++;
        }
        ans[0] = heightFromLeaf;
        ans[1] = cutCount;
        return ans;
    }
}"
StarCoder,avatar,Python,Java,codeforces_313_B.java,"import java.util.Scanner;

public class codeforces_313_B {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String soz = sc.nextLine();
        int[] a = new int[soz.length() + 1];
        for (int i = 1; i < soz.length(); i++) {
            a[i] = a[i - 1];
            if (soz.charAt(i - 1) == soz.charAt(i)) {
                a[i] += 1;
            }
        }
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            String[] s = sc.nextLine().split("" "");
            arr[i] = a[Integer.parseInt(s[1]) - 1] - a[Integer.parseInt(s[0]) - 1];
        }
        for (int i = 0; i < n; i++) {
            System.out.println(arr[i]);
        }
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String soz = sc.nextLine();
        int[] a = new int[soz.length() + 1];
        for (int i = 1; i < soz.length(); i++) {
            a[i] = a[i - 1];
            if (soz.charAt(i - 1) == soz.charAt(i)) {
                a[i] += 1;
            }
        }
        int n = sc.nextInt();
        int[] arr = new int[n];
        sc.nextLine();
        for (int i = 0; i < n; i++) {
            String[] s = sc.nextLine().split("" "");
            arr[i] = a[Integer.parseInt(s[1]) - 1] - a[Integer.parseInt(s[0]) - 1];
        }
        for (int i = 0; i < n; i++) {
            System.out.println(arr[i]);
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_518_B.java,"import java.util.Scanner;
public class codeforces_518_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String t = sc.next();
        int yay = 0, whoops = 0;
        char[] sArray = s.toCharArray();
        char[] tArray = t.toCharArray();
        for (int i = 0; i < sArray.length; i++) {
            if (sArray[i] == tArray[i]) {
                yay++;
            } else {
                if (Character.isLowerCase(sArray[i]) && Character.isUpperCase(tArray[i])) {
                    whoops++;
                } else if (Character.isUpperCase(sArray[i]) && Character.isLowerCase(tArray[i])) {
                    whoops++;
                } else {
                    break;
                }
            }
        }
        System.out.println(yay + "" "" + whoops);
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String t = sc.next();
        int yay = 0, whoops = 0;
        char[] sArray = s.toCharArray();
        char[] tArray = t.toCharArray();
        for (int i = 0; i < sArray.length; i++) {
            if (sArray[i] == tArray[i]) {
                yay++;
            } else {
                if (Character.isLowerCase(sArray[i]) && Character.isUpperCase(tArray[i])) {
                    whoops++;
                } else if (Character.isUpperCase(sArray[i]) && Character.isLowerCase(tArray[i])) {
                    whoops++;
                } else {
                    break;
                }
            }
        }
        System.out.println(yay + "" "" + whoops);
    }
}"
StarCoder,avatar,Python,Java,codeforces_350_B.java,"import java.util.*;
public class codeforces_350_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] t = new int[n + 1];
        int[] a = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            t[i] = sc.nextInt();
            a[i] = sc.nextInt();
        }
        int[] ans = new int[n + 1];
        int[] cnt = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            cnt[a[i]]++;
        }
        for (int i = 1; i <= n; i++) {
            if (t[i] == 1) {
                int x = a[i];
                int[] crt = new int[n + 1];
                crt[0] = i;
                int j = 1;
                while (cnt[x] == 1) {
                    crt[j] = x;
                    x = a[x];
                    j++;
                }
                if (j > ans.length) {
                    ans = Arrays.copyOf(crt, j);
                }
            }
        }
        System.out.println(ans.length);
        for (int i = 0; i < ans.length; i++) {
            System.out.print(ans[i] + "" "");
        }
    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] t = new int[n + 1];
        int[] a = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            t[i] = sc.nextInt();
            a[i] = sc.nextInt();
        }
        int[] ans = new int[n + 1];
        int[] cnt = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            cnt[a[i]]++;
        }
        for (int i = 1; i <= n; i++) {
            if (t[i] == 1) {
                int x = a[i];
                int[] crt = new int[n + 1];
                crt[0] = i;
                int j = 1;
                while (cnt[x] == 1) {
                    crt[j] = x;
                    x = a[x];
                    j++;
                }
                if (j > ans.length) {
                    ans = Arrays.copyOf(crt, j);
                }
            }
        }
        System.out.println(ans.length);
        for (int i = 0; i < ans.length; i++) {
            System.out.print(ans[i] + "" "");
        }
    }
}
"
StarCoder,avatar,Python,Java,atcoder_ABC129_E.java,"import java.util.*;
public class atcoder_ABC129_E {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();
        int[][] dp = new int[n + 1][2];
        dp[0][0] = 1;
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == '0') {
                dp[i + 1][0] += dp[i][0];
                dp[i + 1][1] += dp[i][1] * 3;
            } else {
                dp[i + 1][0] += dp[i][0] * 2;
                dp[i + 1][1] += dp[i][0];
                dp[i + 1][1] += dp[i][1] * 3;
            }
            dp[i + 1][0] %= 1000000007;
            dp[i + 1][1] %= 1000000007;
        }
        System.out.println((dp[n][0] + dp[n][1]) % 1000000007);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();
        long[][] dp = new long[n + 1][2];
        dp[0][0] = 1;
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == '0') {
                dp[i + 1][0] += dp[i][0];
                dp[i + 1][1] += dp[i][1] * 3;
            } else {
                dp[i + 1][0] += dp[i][0] * 2;
                dp[i + 1][1] += dp[i][0];
                dp[i + 1][1] += dp[i][1] * 3;
            }
            dp[i + 1][0] %= 1000000007;
            dp[i + 1][1] %= 1000000007;
        }
        System.out.println((dp[n][0] + dp[n][1]) % 1000000007);
    }
}"
StarCoder,avatar,Python,Java,codeforces_171_A.java,"import java.util.Scanner;
public class codeforces_171_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String a = sc.next();
        String b = sc.next();
        int x = Math.max(a.length(), b.length());
        a = a.replace('0', '2');
        b = b.replace('0', '2');
        for (int i = 0; i < x; i++) {
            int d = (a.charAt(x - i - 1) - '0') + (b.charAt(i) - '0') + (i == 0? 0 : (a.charAt(x - i) - '0'));
            if (d > 9) {
                System.out.print(d % 10);
                a = a.substring(0, x - i - 1) + (d / 10) + a.substring(x - i);
            } else {
                System.out.print(d);
                a = a.substring(0, x - i - 1) + a.substring(x - i);
            }
        }
        System.out.println();
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String a = sc.next();
        String b = sc.next();
        int x = Math.max(a.length(), b.length());
        a = a.replace('0', '2');
        b = b.replace('0', '2');
        for (int i = 0; i < x; i++) {
            int d = (a.charAt(x - i - 1) - '0') + (b.charAt(i) - '0') + (i == 0? 0 : (a.charAt(x - i) - '0'));
            if (d > 9) {
                System.out.print(d % 10);
                a = a.substring(0, x - i - 1) + (d / 10) + a.substring(x - i);
            } else {
                System.out.print(d);
                a = a.substring(0, x - i - 1) + a.substring(x - i);
            }
        }
        System.out.println();
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC013_A.java,"import java.util.*;
public class atcoder_AGC013_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int ans = 0;
        for (int i = 1; i < n - 1; i++) {
            if (a[i - 1] < a[i] && a[i] > a[i + 1] || a[i - 1] > a[i] && a[i] < a[i + 1]) {
                ans++;
                i++;
            }
        }
        System.out.println(ans + 1);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        List<Integer> b = new ArrayList<>();
        int prev = a[0];
        b.add(prev);
        for (int i = 1; i < n; i++) {
            if (a[i] != prev) {
                b.add(a[i]);
            }
            prev = a[i];
        }
        n = b.size();
        int ans = 0;
        for (int i = 1; i < n - 1; i++) {
            if ((b.get(i-1) < b.get(i) && b.get(i) > b.get(i+1)) || (b.get(i-1) > b.get(i) && b.get(i) < b.get(i+1))) {
                ans++;
                i++;
            }
        }
        System.out.println(ans + 1);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC169_E.java,"import java.util.*;
public class atcoder_ABC169_E {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] low = new int[n];
        int[] high = new int[n];
        for (int i = 0; i < n; i++) {
            low[i] = sc.nextInt();
            high[i] = sc.nextInt();
        }
        Arrays.sort(low);
        Arrays.sort(high);
        if (n % 2 == 1) {
            System.out.println(high[(n + 1) / 2 - 1] - low[(n + 1) / 2 - 1] + 1);
        } else {
            double hh = (high[(n) / 2 - 1] + high[(n) / 2]) / 2;
            double ll = (low[(n) / 2 - 1] + low[(n) / 2]) / 2;
            System.out.println((int)((hh - ll) * 2) + 1);
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] low = new int[n];
        int[] high = new int[n];
        for (int i = 0; i < n; i++) {
            low[i] = sc.nextInt();
            high[i] = sc.nextInt();
        }
        Arrays.sort(low);
        Arrays.sort(high);
        if (n % 2 == 1) {
            System.out.println(high[(n + 1) / 2 - 1] - low[(n + 1) / 2 - 1] + 1);
        } else {
            double hh = (high[(n) / 2 - 1] + high[(n) / 2]) / 2.0;
            double ll = (low[(n) / 2 - 1] + low[(n) / 2]) / 2.0;
            System.out.println((int)((hh - ll) * 2) + 1);
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_306_A.java,"import java.util.*;
public class codeforces_306_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int q = n / m;
        int r = n % m;
        int[] a = new int[m];
        for (int i = 0; i < m; i++) {
            a[i] = q;
        }
        for (int i = 0; i < r; i++) {
            a[i] += 1;
        }
        for (int i = 0; i < m; i++) {
            System.out.print(a[i] + "" "");
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int q = n / m;
        int r = n % m;
        int[] a = new int[m];
        for (int i = 0; i < m; i++) {
            a[i] = q;
        }
        for (int i = 0; i < r; i++) {
            a[i] += 1;
        }
        for (int i = 0; i < m; i++) {
            System.out.print(a[i] + "" "");
        }
    }
}"
StarCoder,avatar,Python,Java,codeforces_148_B.java,"import java.util.Scanner;
public class codeforces_148_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int princess = sc.nextInt();
        int dragon = sc.nextInt();
        int t = sc.nextInt();
        int f = sc.nextInt();
        int c = sc.nextInt();
        if (dragon <= princess) {
            System.out.println(0);
            return;
        }
        int result = 0;
        int position = t * princess;
        position += princess * position / (dragon - princess);
        while (position < c) {
            result++;
            position += princess * position / dragon;
            position += princess * f;
            position += princess * position / (dragon - princess);
        }
        System.out.println(result);
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int princess = sc.nextInt();
        int dragon = sc.nextInt();
        int t = sc.nextInt();
        int f = sc.nextInt();
        int c = sc.nextInt();
        if (dragon <= princess) {
            System.out.println(0);
            return;
        }
        int result = 0;
        double position = t * princess;
        position += princess * position / (dragon - princess);
        while (position < c) {
            result++;
            position += princess * position / dragon;
            position += princess * f;
            position += princess * position / (dragon - princess);
        }
        System.out.println(result);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC150_D.java,"import java.util.*;
public class atcoder_ABC150_D {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int num = sc.nextInt();
        Set<Integer> numSet = new HashSet<>();
        for (int i = 0; i < n; i++) {
            numSet.add(sc.nextInt());
        }
        Set<Integer> twoTimesSet = new HashSet<>();
        for (int i : numSet) {
            for (int j = 1; j < 30; j++) {
                i /= 2;
                if (i % 2!= 0) {
                    twoTimesSet.add(j);
                    break;
                }
            }
            if (twoTimesSet.size()!= 1) {
                System.out.println(0);
                return;
            }
        }
        int[] numList = new int[numSet.size()];
        int index = 0;
        for (int i : numSet) {
            numList[index++] = i;
        }
        int lcm = numList[0];
        for (int i = 1; i < numList.length; i++) {
            lcm = lcm * numList[i] / gcd(lcm, numList[i]);
        }
        System.out.println((num - lcm / 2) / lcm + 1);
    }

    public static int gcd(int a, int b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int num = sc.nextInt();
        Set<Integer> numSet = new HashSet<>();
        for (int i = 0; i < n; i++) {
            numSet.add(sc.nextInt());
        }
        Set<Integer> twoTimesSet = new HashSet<>();
        for (int i : numSet) {
            for (int j = 1; j < 30; j++) {
                i /= 2;
                if (i % 2!= 0) {
                    twoTimesSet.add(j);
                    break;
                }
            }
            if (twoTimesSet.size()!= 1) {
                System.out.println(0);
                return;
            }
        }
        int[] numList = new int[numSet.size()];
        int index = 0;
        for (int i : numSet) {
            numList[index++] = i;
        }
        int lcm = numList[0];
        for (int i = 1; i < numList.length; i++) {
            lcm = lcm * numList[i] / gcd(lcm, numList[i]);
        }
        System.out.println((num - lcm / 2) / lcm + 1);
    }

    public static int gcd(int a, int b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }
}"
StarCoder,avatar,Python,Java,codeforces_95_A.java,"import java.util.*;
public class codeforces_95_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] arr = new String[n];
        for(int i = 0; i < n; i++) {
            arr[i] = sc.next();
        }
        String s = sc.next();
        char c1 = sc.next().charAt(0);
        char c2 = c1 == 'a'? 'b' : 'a';
        char[] arr2 = s.toCharArray();
        for(int i = 0; i < arr2.length; i++) {
            if(arr2[i] == c1 || arr2[i] == c2) {
                arr2[i] = arr2[i] == c1? c2 : c1;
            }
        }
        for(char c : arr2) {
            System.out.print(c);
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] arr = new String[n];
        for(int i = 0; i < n; i++) {
            arr[i] = sc.next();
        }
        String s = sc.next();
        char c1 = sc.next().charAt(0);
        char c2 = c1 == 'a'? 'b' : 'a';
        char[] arr2 = s.toCharArray();
        for(int i = 0; i < arr2.length; i++) {
            if(arr2[i] == c1 || arr2[i] == c2) {
                arr2[i] = arr2[i] == c1? c2 : c1;
            }
        }
        for(char c : arr2) {
            System.out.print(c);
        }
        System.out.println();
    }
}"
StarCoder,avatar,Python,Java,codeforces_369_B.java,"import java.util.*;
public class codeforces_369_B {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int l = sc.nextInt();
        int r = sc.nextInt();
        int sa = sc.nextInt();
        int sk = sc.nextInt();
        int[] ans = new int[n];
        int[] a = new int[k];
        int[] b = new int[n - k];
        for (int i = 0; i < k; i++) {
            a[i] = sk;
        }
        for (int i = 0; i < n - k; i++) {
            b[i] = sa - sk;
        }
        for (int i = 0; i < n; i++) {
            if (i < k) {
                ans[i] = a[i];
            } else {
                ans[i] = b[i - k];
            }
        }
        for (int i = 0; i < n; i++) {
            System.out.print(ans[i] + "" "");
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int l = sc.nextInt();
        int r = sc.nextInt();
        int sa = sc.nextInt();
        int sk = sc.nextInt();
        int[] ans = new int[n];
        int[] a = new int[k];
        int[] b = new int[n - k];
        for (int i = 0; i < k; i++) {
            a[i] = sk;
        }
        for (int i = 0; i < n - k; i++) {
            b[i] = sa - sk;
        }
        for (int i = 0; i < n; i++) {
            if (i < k) {
                ans[i] = a[i];
            } else {
                ans[i] = b[i - k];
            }
        }
        for (int i = 0; i < n; i++) {
            System.out.print(ans[i] + "" "");
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC046_B.java,"import java.util.*;
public class atcoder_AGC046_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int m = 998244353;
        int[][] d = new int[C + 1][D + 1];
        d[A][B] = 1;
        for (int i = A; i <= C; i++) {
            for (int j = B; j <= D; j++) {
                d[i][j] += (d[i][j - 1] * i + d[i - 1][j] * j - d[i - 1][j - 1] * (i - 1) * (j - 1)) % m;
            }
        }
        System.out.println(d[C][D]);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int m = 998244353;
        long[][] d = new long[C + 1][D + 1];
        d[A][B] = 1;
        for (int i = A; i <= C; i++) {
            for (int j = B; j <= D; j++) {
                d[i][j] += ((d[i][j - 1] * i + d[i - 1][j] * j - d[i - 1][j - 1] * (i - 1) * (j - 1)) % m + m) % m;
            }
        }
        System.out.println(d[C][D]);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC142_C.java,"import java.util.*;
public class atcoder_ABC142_C {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        Arrays.sort(A);
        for (int i = 0; i < N - 1; i++) {
            System.out.print(A[i] + "" "");
        }
        System.out.println(A[N - 1]);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        Arrays.sort(A);
        for (int i = 0; i < N - 1; i++) {
            System.out.print(A[i] + "" "");
        }
        System.out.println(A[N - 1]);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC135_D.java,"import java.util.*;
import java.io.*;
import java.math.*;
public class atcoder_ABC135_D {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();
        int[][] dp = new int[n][13];
        for (int i = 0; i < n; i++) {
            if (i == 0) {
                if (s.charAt(i)!= '?') {
                    dp[i][Integer.parseInt(s.charAt(i) + """")] = 1;
                } else {
                    for (int j = 0; j < 10; j++) {
                        dp[i][j] = 1;
                    }
                }
            } else {
                if (s.charAt(i)!= '?') {
                    for (int k = 0; k < 13; k++) {
                        dp[i][(k * 10 + Integer.parseInt(s.charAt(i) + """")) % 13] += dp[i - 1][k];
                    }
                } else {
                    for (int j = 0; j < 10; j++) {
                        for (int k = 0; k < 13; k++) {
                            dp[i][(k * 10 + j) % 13] += dp[i - 1][k];
                        }
                    }
                }
                for (int k = 0; k < 13; k++) {
                    dp[i][k] %= 1000000007;
                }
            }
        }
        System.out.println(dp[n - 1][5]);
    }
}","import java.util.*;
import java.io.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();
        int[][] dp = new int[n][13];
        for (int i = 0; i < n; i++) {
            if (i == 0) {
                if (s.charAt(i)!= '?') {
                    dp[i][Integer.parseInt(s.charAt(i) + """")] = 1;
                } else {
                    for (int j = 0; j < 10; j++) {
                        dp[i][j] = 1;
                    }
                }
            } else {
                if (s.charAt(i)!= '?') {
                    for (int k = 0; k < 13; k++) {
                        dp[i][(k * 10 + Integer.parseInt(s.charAt(i) + """")) % 13] += dp[i - 1][k];
                    }
                } else {
                    for (int j = 0; j < 10; j++) {
                        for (int k = 0; k < 13; k++) {
                            dp[i][(k * 10 + j) % 13] += dp[i - 1][k];
                        }
                    }
                }
                for (int k = 0; k < 13; k++) {
                    dp[i][k] %= 1000000007;
                }
            }
        }
        System.out.println(dp[n - 1][5]);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC143_D.java,"import java.util.*;
public class atcoder_ABC143_D {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = sc.nextInt();
        }
        Arrays.sort(l);
        int ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int a = l[i];
                int b = l[j];
                int right = Arrays.binarySearch(l, a + b);
                int left = Arrays.binarySearch(l, Math.max(a - b, b - a));
                int tmp = Math.max(0, right - left);
                if (left <= i && i < right) {
                    tmp--;
                }
                if (left <= j && j < right) {
                    tmp--;
                }
                ans += tmp;
            }
        }
        System.out.println(ans / 3);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] l = new int[n];
        for (int i = 0; i < n; i++) {
            l[i] = sc.nextInt();
        }
        Arrays.sort(l);
        int ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int a = l[i];
                int b = l[j];
                int right = Arrays.binarySearch(l, a + b);
                int left = Arrays.binarySearch(l, Math.max(a - b, b - a));
                int tmp = Math.max(0, right - left);
                if (left <= i && i < right) {
                    tmp--;
                }
                if (left <= j && j < right) {
                    tmp--;
                }
                ans += tmp;
            }
        }
        System.out.println(ans / 3);
    }
}"
StarCoder,avatar,Python,Java,codeforces_131_B.java,"import java.util.Scanner;
public class codeforces_131_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] w = new int[n];
        for (int i = 0; i < n; i++) {
            w[i] = sc.nextInt();
        }
        int c = 0;
        for (int i = 0; i < n; i++) {
            if (w[i] == 0) {
                c += w[i] * (w[i] - 1);
            } else {
                if (-w[i] == w[i]) {
                    c += w[i] * w[i];
                } else {
                    if (-w[i] < w[i]) {
                        c += w[i] * (w[i] - 1);
                    } else {
                        c += w[i] * (w[i] - 1) + w[i] * w[i];
                    }
                }
            }
        }
        System.out.println(c / 2);
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] w = new int[n];
        for (int i = 0; i < n; i++) {
            w[i] = sc.nextInt();
        }
        int c = 0;
        for (int i = 0; i < n; i++) {
            if (w[i] == 0) {
                c += w[i] * (w[i] - 1);
            } else {
                if (-w[i] == w[i]) {
                    c += w[i] * w[i];
                } else {
                    if (-w[i] < w[i]) {
                        c += w[i] * (w[i] - 1);
                    } else {
                        c += w[i] * (w[i] - 1) + w[i] * w[i];
                    }
                }
            }
        }
        System.out.println(c / 2);
    }
}"
StarCoder,avatar,Python,Java,codeforces_678_B.java,"import java.util.Scanner;
public class codeforces_678_B {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String d = ""f"";
        String ans = ""ly"";
        while (true) {
            if (n % 400 == 0 || (n % 4 == 0 && n % 100!= 0)) {
                if (d.equals(""m"")) {
                    d = ""w"";
                    n++;
                } else if (d.equals(""t"")) {
                    d = ""th"";
                    n++;
                } else if (d.equals(""w"")) {
                    d = ""f"";
                    n++;
                } else if (d.equals(""th"")) {
                    d = ""sa"";
                    n++;
                } else if (d.equals(""f"")) {
                    d = ""s"";
                    n++;
                } else if (d.equals(""sa"")) {
                    d = ""m"";
                    n++;
                } else if (d.equals(""s"")) {
                    d = ""t"";
                    n++;
                }
            } else {
                if (d.equals(""m"")) {
                    d = ""t"";
                    n++;
                } else if (d.equals(""t"")) {
                    d = ""w"";
                    n++;
                } else if (d.equals(""w"")) {
                    d = ""th"";
                    n++;
                } else if (d.equals(""th"")) {
                    d = ""f"";
                    n++;
                } else if (d.equals(""f"")) {
                    d = ""sa"";
                    n++;
                } else if (d.equals(""sa"")) {
                    d = ""s"";
                    n++;
                } else if (d.equals(""s"")) {
                    d = ""m"";
                    n++;
                }
            }
            if (d.equals(""f"") && ans.equals(""ly"") && leapyear(n).equals(""y"")) {
                break;
            } else if (d.equals(""f"") && ans.equals(""nly"") && leapyear(n).equals(""n"")) {
                break;
            }
        }
        System.out.println(n);
    }

    public static String leapyear(int n) {
        if (n % 400 == 0 || (n % 4 == 0 && n % 100!= 0)) {
            return ""y"";
        } else {
            return ""n"";
        }
    }
}

","import java.util.Scanner;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String d = ""f"";
        String ans = ""ly"";
        while (true) {
            if (n % 400 == 0 || (n % 4 == 0 && n % 100!= 0)) {
                if (d.equals(""m"")) {
                    d = ""w"";
                    n++;
                } else if (d.equals(""t"")) {
                    d = ""th"";
                    n++;
                } else if (d.equals(""w"")) {
                    d = ""f"";
                    n++;
                } else if (d.equals(""th"")) {
                    d = ""sa"";
                    n++;
                } else if (d.equals(""f"")) {
                    d = ""s"";
                    n++;
                } else if (d.equals(""sa"")) {
                    d = ""m"";
                    n++;
                } else if (d.equals(""s"")) {
                    d = ""t"";
                    n++;
                }
            } else {
                if (d.equals(""m"")) {
                    d = ""t"";
                    n++;
                } else if (d.equals(""t"")) {
                    d = ""w"";
                    n++;
                } else if (d.equals(""w"")) {
                    d = ""th"";
                    n++;
                } else if (d.equals(""th"")) {
                    d = ""f"";
                    n++;
                } else if (d.equals(""f"")) {
                    d = ""sa"";
                    n++;
                } else if (d.equals(""sa"")) {
                    d = ""s"";
                    n++;
                } else if (d.equals(""s"")) {
                    d = ""m"";
                    n++;
                }
            }
            if (d.equals(""f"") && ans.equals(""ly"") && leapyear(n).equals(""y"")) {
                break;
            } else if (d.equals(""f"") && ans.equals(""nly"") && leapyear(n).equals(""n"")) {
                break;
            }
        }
        System.out.println(n);
    }

    public static String leapyear(int n) {
        if (n % 400 == 0 || (n % 4 == 0 && n % 100!= 0)) {
            return ""y"";
        } else {
            return ""n"";
        }
    }
}

"
StarCoder,avatar,Python,Java,atcoder_AGC029_C.java,"import java.util.Scanner;
public class atcoder_AGC029_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] A = new int[sc.nextInt()];
        for (int i = 0; i < A.length; i++) {
            A[i] = sc.nextInt();
        }
        int[] dp = new int[A.length];
        dp[0] = A[0];
        for (int i = 1; i < A.length; i++) {
            if (A[i] <= dp[i - 1]) {
                dp[i] = A[i];
            } else {
                dp[i] = dp[i - 1];
            }
        }
        int l = 0, r = A.length - 1;
        while (l < r) {
            int mid = (l + r) / 2;
            if (isPossible(dp, mid)) {
                r = mid;
            } else {
                l = mid + 1;
            }
        }
        System.out.println(l);
    }
    public static boolean isPossible(int[] dp, int k) {
        for (int i = 0; i < dp.length; i++) {
            if (dp[i] > k) {
                return false;
            }
        }
        return true;
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] A = new int[sc.nextInt()];
        for (int i = 0; i < A.length; i++) {
            A[i] = sc.nextInt();
        }
        int[] dp = new int[A.length];
        dp[0] = A[0];
        for (int i = 1; i < A.length; i++) {
            if (A[i] <= dp[i - 1]) {
                dp[i] = A[i];
            } else {
                dp[i] = dp[i - 1];
            }
        }
        int l = 0, r = A.length - 1;
        while (l < r) {
            int mid = (l + r) / 2;
            if (isPossible(dp, mid)) {
                r = mid;
            } else {
                l = mid + 1;
            }
        }
        System.out.println(l);
    }
    public static boolean isPossible(int[] dp, int k) {
        for (int i = 0; i < dp.length; i++) {
            if (dp[i] > k) {
                return false;
            }
        }
        return true;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC162_D.java,"import java.util.Scanner;
public class atcoder_ABC162_D {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        calculate(N, S);
    }
    public static void calculate(int n, String s) {
        int rNum = 0, gNum = 0, bNum = 0, sum = 0;
        char[] arr = s.toCharArray();
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == 'R') rNum++;
            if (arr[i] == 'G') gNum++;
            if (arr[i] == 'B') bNum++;
        }
        for (int step = 1; step <= Math.ceil(n / 2.0) + 1; step++) {
            for (int i = 0; i < n - 2 * step; i++) {
                String s1 = new String(new char[]{arr[i], arr[i + step], arr[i + step * 2]});
                if (s1.equals(""RGB"") || s1.equals(""RBG"") || s1.equals(""BGR"") || s1.equals(""BRG"") || s1.equals(""GBR"") || s1.equals(""GRB"")) {
                    sum++;
                }
            }
        }
        System.out.println(rNum * gNum * bNum - sum);
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        calculate(N, S);
    }
    public static void calculate(int n, String s) {
        int rNum = 0, gNum = 0, bNum = 0, sum = 0;
        char[] arr = s.toCharArray();
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == 'R') rNum++;
            if (arr[i] == 'G') gNum++;
            if (arr[i] == 'B') bNum++;
        }
        for (int step = 1; step <= Math.ceil(n / 2.0) + 1; step++) {
            for (int i = 0; i < n - 2 * step; i++) {
                String s1 = new String(new char[]{arr[i], arr[i + step], arr[i + step * 2]});
                if (s1.equals(""RGB"") || s1.equals(""RBG"") || s1.equals(""BGR"") || s1.equals(""BRG"") || s1.equals(""GBR"") || s1.equals(""GRB"")) {
                    sum++;
                }
            }
        }
        System.out.println((long) rNum * gNum * bNum - sum);
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC002_B.java,"import java.util.*;
public class atcoder_AGC002_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] w = new int[n];
        int[] r = new int[n];
        for (int i = 0; i < n; i++) {
            w[i] = sc.nextInt();
            r[i] = sc.nextInt();
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (w[i] == 1 && r[i] == 1) ans++;
        }
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] w = new int[n];
        int[] r = new int[n];
        for (int i = 0; i < n; i++) {
            w[i] = sc.nextInt();
            r[i] = sc.nextInt();
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (w[i] == 1 && r[i] == 1) ans++;
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC017_A.java,"import java.util.*;
public class atcoder_AGC017_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int P = sc.nextInt();
        int[] lis = new int[N];
        for (int i = 0; i < N; i++) {
            lis[i] = sc.nextInt();
        }
        int one = 0;
        int zero = 0;
        for (int i = 0; i < N; i++) {
            if (lis[i] % 2 == 1) {
                one++;
            } else {
                zero++;
            }
        }
        int pattern_a = 0;
        int pattern_b = 0;
        for (int j = 0; j <= zero; j++) {
            pattern_b += combi(zero, j);
        }
        int time = 0;
        while (time <= one) {
            if (time % 2 == P) {
                pattern_a += combi(one, time);
            }
            time++;
        }
        System.out.println(pattern_a * pattern_b);
    }

    public static int combi(int n, int k) {
        int a = 1;
        for (int i = 0; i < k; i++) {
            a *= n - i;
        }
        for (int j = 0; j < k; j++) {
            a /= j + 1;
        }
        return a;
    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int P = sc.nextInt();
        int[] lis = new int[N];
        for (int i = 0; i < N; i++) {
            lis[i] = sc.nextInt();
        }
        int one = 0;
        int zero = 0;
        for (int i = 0; i < N; i++) {
            if (lis[i] % 2 == 1) {
                one++;
            } else {
                zero++;
            }
        }
        int pattern_a = 0;
        int pattern_b = 0;
        for (int j = 0; j <= zero; j++) {
            pattern_b += combi(zero, j);
        }
        int time = 0;
        while (time <= one) {
            if (time % 2 == P) {
                pattern_a += combi(one, time);
            }
            time++;
        }
        System.out.println(pattern_a * pattern_b);
    }

    public static int combi(int n, int k) {
        int a = 1;
        for (int i = 0; i < k; i++) {
            a *= n - i;
        }
        for (int j = 0; j < k; j++) {
            a /= j + 1;
        }
        return a;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC112_C.java,"import java.util.*;
public class atcoder_ABC112_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] ls_xyh = new int[n][3];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 3; j++) {
                ls_xyh[i][j] = sc.nextInt();
            }
        }
        System.out.println(solve(n, ls_xyh));
    }

    public static String solve(int n, int[][] ls_xyh) {
        int x0 = -1;
        for (int i = 0; i < n; i++) {
            if (ls_xyh[i][2] > 0) {
                x0 = ls_xyh[i][0];
                break;
            }
        }
        List<int[]> cands = new ArrayList<int[]>();
        for (int i = 0; i < 101; i++) {
            for (int j = 0; j < 101; j++) {
                int cx = i;
                int cy = j;
                int h0 = ls_xyh[0][2];
                int h = h0 + Math.abs(cx - x0) + Math.abs(cy - ls_xyh[0][1]);
                for (int k = 1; k < n; k++) {
                    int x = ls_xyh[k][0];
                    int y = ls_xyh[k][1];
                    int h_ = Math.max(h - Math.abs(cx - x) - Math.abs(cy - y), 0);
                    if (h_!= ls_xyh[k][2]) {
                        break;
                    }
                    h = h_;
                }
                cands.add(new int[]{cx, cy, h});
            }
        }
        int[] ans = cands.get(0);
        return String.format(""%d %d %d"", ans[0], ans[1], ans[2]);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] ls_xyh = new int[n][3];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 3; j++) {
                ls_xyh[i][j] = sc.nextInt();
            }
        }
        System.out.println(solve(n, ls_xyh));
    }

    public static String solve(int n, int[][] ls_xyh) {
        int x0 = -1;
        for (int i = 0; i < n; i++) {
            if (ls_xyh[i][2] > 0) {
                x0 = ls_xyh[i][0];
                break;
            }
        }
        List<int[]> cands = new ArrayList<int[]>();
        for (int i = 0; i < 101; i++) {
            for (int j = 0; j < 101; j++) {
                int cx = i;
                int cy = j;
                int h0 = ls_xyh[0][2];
                int h = h0 + Math.abs(cx - x0) + Math.abs(cy - ls_xyh[0][1]);
                for (int k = 1; k < n; k++) {
                    int x = ls_xyh[k][0];
                    int y = ls_xyh[k][1];
                    int h_ = Math.max(h - Math.abs(cx - x) - Math.abs(cy - y), 0);
                    if (h_!= ls_xyh[k][2]) {
                        break;
                    }
                    h = h_;
                }
                cands.add(new int[]{cx, cy, h});
            }
        }
        int[] ans = cands.get(0);
        return String.format(""%d %d %d"", ans[0], ans[1], ans[2]);
    }
}
"
StarCoder,avatar,Python,Java,codeforces_333_B.java,"import java.util.*;
public class codeforces_333_B {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int m = sc.nextInt ( ) ;
        boolean [ ] b = new boolean [ 2 * n ] ;
        b [ 0 ] = b [ n - 1 ] = b [ n ] = b [ 2 * n - 1 ] = false ;
        for ( int i = 0 ; i < m ; i ++ ) {
            int r = sc.nextInt ( ) ;
            int c = sc.nextInt ( ) ;
            b [ r - 1 ] = b [ n + c - 1 ] = false ;
        }
        if ( n % 2 == 1 && b [ n / 2 ] && b [ n + n / 2 ] ) b [ n / 2 ] = false ;
        int ans = 0 ;
        for ( int i = 0 ; i < 2 * n ; i ++ ) if ( b [ i ] ) ans ++ ;
        System.out.println ( ans ) ;
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int m = sc.nextInt ( ) ;
        boolean [ ] b = new boolean [ 2 * n ] ;
        Arrays.fill(b, true);
        b [ 0 ] = b [ n - 1 ] = b [ n ] = b [ 2 * n - 1 ] = false ;
        for ( int i = 0 ; i < m ; i ++ ) {
            int r = sc.nextInt ( ) ;
            int c = sc.nextInt ( ) ;
            b [ r - 1 ] = b [ n + c - 1 ] = false ;
        }
        if ( n % 2 == 1 && b [ n / 2 ] && b [ n + n / 2 ] ) b [ n / 2 ] = false ;
        int ans = 0 ;
        for ( int i = 0 ; i < 2 * n ; i ++ ) if ( b [ i ] ) ans ++ ;
        System.out.println ( ans ) ;
    }
}"
StarCoder,avatar,Python,Java,codeforces_296_A.java,"import java.util.Scanner;

public class codeforces_296_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] m = sc.next().split("" "");
        boolean possible = true;
        for (int i = 0; i < m.length; i++) {
            int count = 0;
            for (int j = 0; j < m.length; j++) {
                if (m[i].equals(m[j])) {
                    count++;
                }
            }
            if (count >= n / 2 + 1) {
                possible = false;
                break;
            }
        }
        System.out.println(possible? ""YES"" : ""NO"");
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        sc.nextLine();
        String[] m = sc.nextLine().split("" "");
        boolean possible = true;
        for (int i = 0; i < m.length; i++) {
            int count = 0;
            for (int j = 0; j < m.length; j++) {
                if (m[i].equals(m[j])) {
                    count++;
                }
            }
            if (count >= n / 2.0 + 1) {
                possible = false;
                break;
            }
        }
        System.out.println(possible? ""YES"" : ""NO"");
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC124_C.java,"import java.util.*;
public class atcoder_ABC124_C {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        String s = sc.nextLine ( );
        int even = 0, odd = 0;
        for ( int i = 0 ; i < s.length ( ) ; i++ )
        {
            if ( i % 2 == 0 )
            {
                if ( s.charAt ( i ) == '0' )
                    even++;
            }
            else
            {
                if ( s.charAt ( i ) == '1' )
                    odd++;
            }
        }
        System.out.println ( Math.min ( s.length ( ) - ( even + odd ), s.length ( ) - ( odd + even ) ) );
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        String s = sc.nextLine ( );
        int even = 0, odd = 0;
        for ( int i = 0 ; i < s.length ( ) ; i++ )
        {
            if ( i % 2 == 0 )
            {
                if ( s.charAt ( i ) == '0' )
                    even++;
            }
            else
            {
                if ( s.charAt ( i ) == '1' )
                    odd++;
            }
        }
        System.out.println ( Math.min ( s.length ( ) - ( even + odd ), s.length ( ) - ( odd + even ) ) );
    }
}"
StarCoder,avatar,Python,Java,codeforces_373_B.java,"import java.util.*;
public class codeforces_373_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int w = in.nextInt();
        int m = in.nextInt();
        int k = in.nextInt();
        int lo = 0;
        int hi = (int)1e18;
        while (hi - lo > 1) {
            int md = (lo + hi) / 2;
            int c = sum(m + md - 1) - sum(m - 1);
            if (c * k <= w) {
                lo = md;
            } else {
                hi = md;
            }
        }
        System.out.println(lo);
    }
    public static int sum(int k) {
        int ret = 0;
        int pw = 10;
        int len = 1;
        while (true) {
            int cur = Math.min(pw - 1, k);
            int prev = pw / 10;
            ret += (cur - prev + 1) * len;
            if (pw - 1 >= k) {
                break;
            }
            len += 1;
            pw *= 10;
        }
        return ret;
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int w = in.nextInt();
        int m = in.nextInt();
        int k = in.nextInt();
        int lo = 0;
        int hi = (int)1e18;
        while (hi - lo > 1) {
            int md = (lo + hi) / 2;
            int c = sum(m + md - 1) - sum(m - 1);
            if (c * k <= w) {
                lo = md;
            } else {
                hi = md;
            }
        }
        System.out.println(lo);
    }
    public static int sum(int k) {
        int ret = 0;
        int pw = 10;
        int len = 1;
        while (true) {
            int cur = Math.min(pw - 1, k);
            int prev = pw / 10;
            ret += (cur - prev + 1) * len;
            if (pw - 1 >= k) {
                break;
            }
            len += 1;
            pw *= 10;
        }
        return ret;
    }
}"
StarCoder,avatar,Python,Java,codeforces_203_B.java,"import java.util.*;
public class codeforces_203_B {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int m = sc.nextInt ( ) ;
        int [ ] [ ] count = new int [ n ] [ n ] ;
        int ans = - 1 ;
        for ( int k = 0 ; k < m ; k ++ ) {
            int x = sc.nextInt ( ) ;
            int y = sc.nextInt ( ) ;
            x -- ;
            y -- ;
            boolean found = false ;
            for ( int i = x - 2 ; i <= x + 1 ; i ++ ) {
                for ( int j = y - 2 ; j <= y + 1 ; j ++ ) {
                    if ( i >= 0 && i < n && j >= 0 && j < n ) {
                        count [ i ] [ j ] ++ ;
                        if ( count [ i ] [ j ] == 9 ) {
                            found = true ;
                        }
                    }
                }
            }
            if ( found ) {
                ans = k + 1 ;
                break ;
            }
        }
        System.out.println ( ans ) ;
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args ) {
        Scanner sc = new Scanner ( System.in ) ;
        int n = sc.nextInt ( ) ;
        int m = sc.nextInt ( ) ;
        int [ ] [ ] count = new int [ n ] [ n ] ;
        int ans = - 1 ;
        for ( int k = 0 ; k < m ; k ++ ) {
            int x = sc.nextInt ( ) ;
            int y = sc.nextInt ( ) ;
            x -- ;
            y -- ;
            boolean found = false ;
            for ( int i = x - 2 ; i <= x ; i ++ ) {
                for ( int j = y - 2 ; j <= y ; j ++ ) {
                    if ( i >= 0 && i < n && j >= 0 && j < n ) {
                        count [ i ] [ j ] ++ ;
                        if ( count [ i ] [ j ] == 9 ) {
                            found = true ;
                        }
                    }
                }
            }
            if ( found ) {
                ans = k + 1 ;
                break ;
            }
        }
        System.out.println ( ans ) ;
    }
}"
StarCoder,avatar,Python,Java,codeforces_108_B.java,"import java.util.*;
public class codeforces_108_B {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int [ ] a = new int [ sc.nextInt ( ) ];
        for ( int i = 0 ; i < a.length ; i++ )
            a [ i ] = sc.nextInt ( );
        Arrays.sort ( a );
        for ( int i = 1 ; i < a.length ; i++ )
            if ( a [ i ]!= a [ i - 1 ] && a [ i ] < a [ i - 1 ] * 2 )
                System.out.println ( ""YES"" );
            else
                System.out.println ( ""NO"" );
    }
}","import java.util.*;
public class Main {
    public static void main ( String [ ] args )
    {
        Scanner sc = new Scanner ( System.in );
        int [ ] a = new int [ sc.nextInt ( ) ];
        for ( int i = 0 ; i < a.length ; i++ )
            a [ i ] = sc.nextInt ( );
        Arrays.sort ( a );
        boolean flag = false;
        for ( int i = 1 ; i < a.length ; i++ ) {
            if ( a [ i ]!= a [ i - 1 ] && a [ i ] < a [ i - 1 ] * 2 ) {
                System.out.println ( ""YES"" );
                flag = true;
                break;
            }
        }
        if (!flag) {
            System.out.println ( ""NO"" );
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_AGC034_B.java,"import java.util.*;
public class atcoder_AGC034_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int total = 0, numA = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == 'X') {
                numA = 0;
            } else {
                if (s.charAt(i) == 'A') numA++;
                else total += numA;
            }
        }
        System.out.println(total);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int total = 0, numA = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == 'X') {
                numA = 0;
            } else {
                if (s.charAt(i) == 'A') numA++;
                else total += numA;
            }
        }
        System.out.println(total);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC172_D.java,"import java.util.Scanner;
public class atcoder_ABC172_D {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int ans = 0;
        for (int i = 1; i <= N; i++) {
            ans += i * (N / i) * ((N / i) + 1) / 2;
        }
        System.out.println(ans);
    }
}","import java.util.Scanner;
import java.math.BigInteger;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        BigInteger ans = BigInteger.ZERO;
        for (int i = 1; i <= N; i++) {
            BigInteger currentN = BigInteger.valueOf(N);
            BigInteger currentI = BigInteger.valueOf(i);
            BigInteger term = currentI.multiply(currentN.divide(currentI)).multiply(currentN.divide(currentI).add(BigInteger.ONE)).divide(BigInteger.valueOf(2));
            ans = ans.add(term);
        }
        System.out.println(ans);
    }
}
"
StarCoder,avatar,Python,Java,atcoder_AGC003_C.java,"import java.util.*;
public class atcoder_AGC003_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt() * N + i;
        }
        Arrays.sort(A);
        int cnt = 0;
        for (int i = 0; i < N; i++) {
            int d = (A[i] % N) % 2;
            if (d % 2!= i % 2) {
                cnt++;
            }
        }
        System.out.println(cnt / 2);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong() * N + i;
        }
        Arrays.sort(A);
        int cnt = 0;
        for (int i = 0; i < N; i++) {
            long d = (A[i] % N) % 2;
            if (d % 2!= i % 2) {
                cnt++;
            }
        }
        System.out.println(cnt / 2);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC110_C.java,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
public class atcoder_ABC110_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String t = sc.next();
        System.out.println(run(s, t));
    }

    public static String run(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();
        for (char c : s.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        for (char c : t.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) - 1);
        }
        for (int v : map.values()) {
            if (v!= 0) {
                return ""No"";
            }
        }
        return ""Yes"";
    }
}","import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String t = sc.nextLine();
        System.out.println(run(s, t));
    }

    public static String run(String s, String t) {
        HashMap<Character, Integer> sMap = new HashMap<>();
        HashMap<Character, Integer> tMap = new HashMap<>();
        for (char c : s.toCharArray()) {
            sMap.put(c, sMap.getOrDefault(c, 0) + 1);
        }
        for (char c : t.toCharArray()) {
            tMap.put(c, tMap.getOrDefault(c, 0) + 1);
        }
        Integer[] sValues = sMap.values().toArray(new Integer[0]);
        Integer[] tValues = tMap.values().toArray(new Integer[0]);
        Arrays.sort(sValues);
        Arrays.sort(tValues);
        if (Arrays.equals(sValues, tValues)) {
            return ""Yes"";
        } else {
            return ""No"";
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC147_D.java,"import java.util.*;
import java.io.*;
public class atcoder_ABC147_D {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }
        long result = 0;
        for (int b = 0; b < 60; b++) {
            long bs = 0;
            for (int i = 0; i < N; i++) {
                bs += (A[i] >> b) & 1;
            }
            result = (result + bs * (N - bs) * (1 << b)) % 1000000007;
        }
        System.out.println(result);
    }
}","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }
        long result = 0;
        for (int b = 0; b < 60; b++) {
            long bs = 0;
            for (int i = 0; i < N; i++) {
                bs += (A[i] >> b) & 1;
            }
            result = (result + bs * (N - bs) * (1L << b)) % 1000000007;
        }
        System.out.println(result);
    }
}"
StarCoder,avatar,Python,Java,codeforces_459_A.java,"import java.util.*;
public class codeforces_459_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String[] line = sc.nextLine().split("" "");
        int x1 = Integer.parseInt(line[0]);
        int y1 = Integer.parseInt(line[1]);
        int x2 = Integer.parseInt(line[2]);
        int y2 = Integer.parseInt(line[3]);
        int d = (int)Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));
        if(x2-x1==0){
            System.out.println(x1+"" ""+(y1+d)+"" ""+x2+"" ""+(y2+d));
        }
        else if(y2-y1==0){
            System.out.println((x1+d)+"" ""+y1+"" ""+(x2+d)+"" ""+y2);
        }
        else if(x2-x1==y2-y1){
            System.out.println((x1+d)+"" ""+y1+"" ""+(x2+d)+"" ""+y2);
        }
        else if(x2-x1==-y2+y1){
            System.out.println((x1-d)+"" ""+y1+"" ""+(x2-d)+"" ""+y2);
        }
        else if(x2-x1==y2+y1){
            System.out.println((x1+d)+"" ""+(y1-d)+"" ""+(x2+d)+"" ""+(y2-d));
        }
        else if(x2-x1==-y2-y1){
            System.out.println((x1-d)+"" ""+(y1-d)+"" ""+(x2-d)+"" ""+(y2-d));
        }
        else{
            System.out.println(""-1"");
        }
    }
}

","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String[] line = sc.nextLine().split("" "");
        int x1 = Integer.parseInt(line[0]);
        int y1 = Integer.parseInt(line[1]);
        int x2 = Integer.parseInt(line[2]);
        int y2 = Integer.parseInt(line[3]);
        int d = (int)Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));
        if(x2-x1==0){
            System.out.println(x1+"" ""+(y1+d)+"" ""+x2+"" ""+(y2+d));
        }
        else if(y2-y1==0){
            System.out.println((x1+d)+"" ""+y1+"" ""+(x2+d)+"" ""+y2);
        }
        else if(x2-x1==y2-y1){
            System.out.println((x1+d)+"" ""+y1+"" ""+(x2+d)+"" ""+y2);
        }
        else if(x2-x1==-y2+y1){
            System.out.println((x1-d)+"" ""+y1+"" ""+(x2-d)+"" ""+y2);
        }
        else if(x2-x1==y2+y1){
            System.out.println((x1+d)+"" ""+(y1-d)+"" ""+(x2+d)+"" ""+(y2-d));
        }
        else if(x2-x1==-y2-y1){
            System.out.println((x1-d)+"" ""+(y1-d)+"" ""+(x2-d)+"" ""+(y2-d));
        }
        else{
            System.out.println(""-1"");
        }
    }
}

"
StarCoder,avatar,Python,Java,codeforces_272_B.java,"import java.util.*;
public class codeforces_272_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0;i<n;i++)
            arr[i] = sc.nextInt();
        System.out.println(nPairsWithCommonFX(arr));
    }
    public static int nPairsWithCommonFX(int[] arr) {
        Map<Integer, List<Integer>> map = new HashMap<>();
        List<Integer> fx = new ArrayList<>();
        for(int i=0;i<arr.length;i++) {
            int y = f(arr[i]);
            if(!map.containsKey(y)) {
                map.put(y, new ArrayList<>());
                fx.add(y);
            }
            map.get(y).add(arr[i]);
        }
        int ans = 0;
        for(int i=0;i<fx.size();i++) {
            ans += map.get(fx.get(i)).size() * map.get(fx.get(i)).size();
        }
        return ans - fx.size();
    }
    public static int f(int n) {
        int y = 1;
        while(n!= 1) {
            if(n % 2!= 0)
                y++;
            n /= 2;
        }
        return y;
    }
}

","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0;i<n;i++)
            arr[i] = sc.nextInt();
        System.out.println(nPairsWithCommonFX(arr));
    }
    public static int nPairsWithCommonFX(int[] arr) {
        Map<Integer, List<Integer>> map = new HashMap<>();
        List<Integer> fx = new ArrayList<>();
        for(int i=0;i<arr.length;i++) {
            int y = f(arr[i]);
            if(!map.containsKey(y)) {
                map.put(y, new ArrayList<>());
                fx.add(y);
            }
            map.get(y).add(arr[i]);
        }
        int ans = 0;
        for(int i=0;i<fx.size();i++) {
            ans += map.get(fx.get(i)).size() * map.get(fx.get(i)).size();
        }
        return ans - fx.size();
    }
    public static int f(int n) {
        int y = 1;
        while(n!= 1) {
            if(n % 2!= 0)
                y++;
            n /= 2;
        }
        return y;
    }
}

"
StarCoder,avatar,Python,Java,atcoder_AGC007_C.java,"import java.util.*;
public class atcoder_AGC007_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int d = sc.nextInt();
        int x = sc.nextInt();
        System.out.println(main(N, d, x));
    }

    public static int main(int N, int d, int x) {
        int ret = 0;
        while (N > 0) {
            ret += d + (N - 0.5) * x;
            d += d / N + (5 * x) / (2 * N);
            x += 2 * x / N;
            N--;
        }
        return ret;
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double N = sc.nextDouble();
        double d = sc.nextDouble();
        double x = sc.nextDouble();
        System.out.println(main(N, d, x));
    }

    public static double main(double N, double d, double x) {
        double ret = 0;
        while (N > 0) {
            ret += d + (N - 0.5) * x;
            d += d / N + (5 * x) / (2 * N);
            x += 2 * x / N;
            N--;
        }
        return ret;
    }
}"
StarCoder,avatar,Python,Java,codeforces_354_A.java,"import java.util.*;
public class codeforces_354_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int L = sc.nextInt();
        int R = sc.nextInt();
        int QL = sc.nextInt();
        int QR = sc.nextInt();
        int[] W = new int[n];
        for (int i = 0; i < n; i++) {
            W[i] = sc.nextInt();
        }
        int[] sum_el = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            sum_el[i] = W[i - 1] + sum_el[i - 1];
        }
        int answer = QR * (n - 1) + sum_el[n] * R;
        for (int i = 1; i <= n; i++) {
            int energy = L * sum_el[i] + R * (sum_el[n] - sum_el[i]) + (i > (n - i)? (i - (n - i) - 1) * QL : (n - i) - i - 1) * QR;
            if (energy < answer) {
                answer = energy;
            }
        }
        System.out.println(answer);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int L = sc.nextInt();
        int R = sc.nextInt();
        int QL = sc.nextInt();
        int QR = sc.nextInt();
        int[] W = new int[n];
        for (int i = 0; i < n; i++) {
            W[i] = sc.nextInt();
        }
        int[] sum_el = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            sum_el[i] = W[i - 1] + sum_el[i - 1];
        }
        int answer = QR * (n - 1) + sum_el[n] * R;
        for (int i = 1; i <= n; i++) {
            int energy = L * sum_el[i] + R * (sum_el[n] - sum_el[i]);
            if (i > (n - i)) {
                energy = energy + (i - (n - i) - 1) * QL;
            } else if ((n - i) > i) {
                energy = energy + ((n - i) - i - 1) * QR;
            }
            if (energy < answer) {
                answer = energy;
            }
        }
        System.out.println(answer);
    }
}"
StarCoder,avatar,Python,Java,codeforces_596_B.java,"import java.util.*;
public class codeforces_596_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] r = new int[n];
        for (int i = 0; i < n; i++) {
            r[i] = sc.nextInt();
        }
        int ans = Math.abs(r[0]);
        for (int i = 1; i < n; i++) {
            ans += Math.abs(r[i] - r[i - 1]);
        }
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] r = new long[n];
        for (int i = 0; i < n; i++) {
            r[i] = sc.nextLong();
        }
        long ans = Math.abs(r[0]);
        for (int i = 1; i < n; i++) {
            ans += Math.abs(r[i] - r[i - 1]);
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,codeforces_327_A.java,"import java.util.Scanner;
public class codeforces_327_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        if (s.indexOf('0') == -1) {
            System.out.println(n - 1);
        } else {
            int[] indices = new int[s.length()];
            for (int i = 0; i < s.length(); i++) {
                indices[i] = i;
            }
            int maximum = 0;
            for (int i = 0; i < indices.length - 1; i++) {
                for (int j = i + 1; j < indices.length; j++) {
                    maximum = Math.max(maximum, 2 + 2 * (Math.abs(indices[i] - indices[j]) - 1) - (Math.abs(i - j) - 1));
                }
            }
            System.out.println(s.replaceAll(""0"", """").length() + maximum);
        }
    }
}","import java.util.Scanner;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        if (s.indexOf('0') == -1) {
            System.out.println(n - 1);
        } else {
            int[] indices = new int[s.length()];
            for (int i = 0; i < s.length(); i++) {
                indices[i] = i;
            }
            int maximum = 0;
            for (int i = 0; i < indices.length - 1; i++) {
                for (int j = i + 1; j < indices.length; j++) {
                    maximum = Math.max(maximum, 2 + 2 * (Math.abs(indices[i] - indices[j]) - 1) - (Math.abs(i - j) - 1));
                }
            }
            System.out.println(s.replaceAll(""0"", """").length() + maximum);
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC105_D.java,"import java.util.*;
import java.io.*;
public class atcoder_ABC105_D {
    public static void main ( String[] args ) throws Exception
    {
        Scanner sc = new Scanner ( System.in );
        int N = sc.nextInt ( );
        int M = sc.nextInt ( );
        int[] A = new int[N];
        for ( int i = 0; i < N; i++ )
            A[i] = sc.nextInt ( );
        long[] cum_remainders = new long[N + 1];
        cum_remainders[0] = 0;
        for ( int i = 0; i < N; i++ )
            cum_remainders[i + 1] = ( cum_remainders[i] + A[i] ) % M;
        Map<Long, Integer> remainder_counts = new HashMap<Long, Integer> ( );
        for ( int i = 0; i < N + 1; i++ )
        {
            if ( remainder_counts.containsKey ( cum_remainders[i] ) )
                remainder_counts.put ( cum_remainders[i], remainder_counts.get ( cum_remainders[i] ) + 1 );
            else
                remainder_counts.put ( cum_remainders[i], 1 );
        }
        long combinations = 0;
        for ( int count : remainder_counts.values ( ) )
            combinations += count * ( count - 1 ) / 2;
        System.out.println ( combinations );
    }
}","import java.util.*;
import java.io.*;
public class Main {
    public static void main ( String[] args ) throws Exception
    {
        Scanner sc = new Scanner ( System.in );
        int N = sc.nextInt ( );
        int M = sc.nextInt ( );
        int[] A = new int[N];
        for ( int i = 0; i < N; i++ )
            A[i] = sc.nextInt ( );
        long[] cum_remainders = new long[N + 1];
        cum_remainders[0] = 0;
        for ( int i = 0; i < N; i++ )
            cum_remainders[i + 1] = ( cum_remainders[i] + A[i] ) % M;
        Map<Long, Integer> remainder_counts = new HashMap<Long, Integer> ( );
        for ( int i = 0; i < N + 1; i++ )
        {
            if ( remainder_counts.containsKey ( cum_remainders[i] ) )
                remainder_counts.put ( cum_remainders[i], remainder_counts.get ( cum_remainders[i] ) + 1 );
            else
                remainder_counts.put ( cum_remainders[i], 1 );
        }
        long combinations = 0;
        for ( int count : remainder_counts.values ( ) )
            combinations += count * ( count - 1 ) / 2;
        System.out.println ( combinations );
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC127_B.java,"import java.util.*;
public class atcoder_ABC127_B {
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int r, D, x;
        r = sc.nextInt();
        D = sc.nextInt();
        x = sc.nextInt();
        for (int i = 2; i <= 12; i++)
        {
            System.out.println(Math.round((Math.pow(r, i - 1) * (x + D / (1 - r)) - D / (1 - r))));
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int r, D, x;
        r = sc.nextInt();
        D = sc.nextInt();
        x = sc.nextInt();
        for (int i = 2; i < 12; i++)
        {
            System.out.println(Math.round((Math.pow(r, i - 1) * (x + (double) D / (1 - r)) - (double) D / (1 - r))));
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC167_C.java,"import java.util.*;
public class atcoder_ABC167_C {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int x = sc.nextInt();
        int[][] c = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                c[i][j] = sc.nextInt();
            }
        }
        int[] pre = new int[n];
        for (int i = 0; i < n; i++) {
            pre[i] = i;
        }
        List<int[]> l = new ArrayList<>();
        List<int[]> rem = new ArrayList<>();
        int ans = 0;
        for (int i = 1; i <= m; i++) {
            for (int[] j : l) {
                int ca = 0;
                for (int ii : j) {
                    ca += c[ii][i];
                }
                if (ca < x) {
                    rem.add(0, j);
                } else {
                    continue;
                }
            }
            if (rem.size() > 0) {
                for (int[] j : rem) {
                    l.remove(j);
                }
                rem.clear();
            }
            if (l.size() == 0) {
                System.out.println(-1);
                return;
            }
            for (int[] j : l) {
                int ca = 0;
                for (int ii : j) {
                    ca += c[ii][0];
                }
                if (ans == 0) {
                    ans = ca;
                } else {
                    ans = Math.min(ans, ca);
                }
            }
            System.out.println(ans);
        }
    }
}

","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int x = sc.nextInt();
        int[][] c = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                c[i][j] = sc.nextInt();
            }
        }
        int[] pre = new int[n];
        for (int i = 0; i < n; i++) {
            pre[i] = i;
        }
        List<int[]> l = new ArrayList<>();
        List<int[]> rem = new ArrayList<>();
        int ans = 0;
        for (int i = 1; i <= m; i++) {
            for (int[] j : l) {
                int ca = 0;
                for (int ii : j) {
                    ca += c[ii][i];
                }
                if (ca < x) {
                    rem.add(0, j);
                } else {
                    continue;
                }
            }
            if (rem.size() > 0) {
                for (int[] j : rem) {
                    l.remove(j);
                }
                rem.clear();
            }
            if (l.size() == 0) {
                System.out.println(-1);
                return;
            }
            for (int[] j : l) {
                int ca = 0;
                for (int ii : j) {
                    ca += c[ii][0];
                }
                if (ans == 0) {
                    ans = ca;
                } else {
                    ans = Math.min(ans, ca);
                }
            }
            System.out.println(ans);
        }
    }
}

"
StarCoder,avatar,Python,Java,atcoder_ABC125_B.java,"import java.util.*;
public class atcoder_ABC125_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] V = new int[N];
        int[] C = new int[N];
        for(int i = 0; i < N; i++) {
            V[i] = sc.nextInt();
            C[i] = sc.nextInt();
        }
        int[] list = new int[N];
        int ans = 0;
        int X = 0;
        int Y = 0;
        for(int i = 0; i < N; i++) {
            if(V[i] - C[i] > 0) {
                X = V[i];
                Y = C[i];
                list[i] = X - Y;
            }
        }
        for(int i = 0; i < N; i++) {
            ans += list[i];
        }
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] V = new int[N];
        int[] C = new int[N];
        for(int i = 0; i < N; i++) {
            V[i] = sc.nextInt();
            C[i] = sc.nextInt();
        }
        int[] list = new int[N];
        int ans = 0;
        int X = 0;
        int Y = 0;
        for(int i = 0; i < N; i++) {
            if(V[i] - C[i] > 0) {
                X = V[i];
                Y = C[i];
                list[i] = X - Y;
            }
        }
        for(int i = 0; i < N; i++) {
            ans += list[i];
        }
        System.out.println(ans);
    }
}

"
StarCoder,avatar,Python,Java,codeforces_400_B.java,"import java.util.*;
public class codeforces_400_B {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Set<Integer> c = new HashSet<Integer>();
        for (int i = 0; i < n; i++) {
            String s = sc.next();
            c.add(s.indexOf(""S"") - s.indexOf(""G""));
        }
        System.out.println(c.contains(-1)? -1 : c.size());
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Set<Integer> c = new HashSet<Integer>();
        for (int i = 0; i < n; i++) {
            String s = sc.next();
            c.add(s.indexOf(""S"") - s.indexOf(""G""));
        }
        boolean hasNegative = false;
        for (int a : c) {
            if (a < 0) {
                hasNegative = true;
                break;
            }
        }
        System.out.println(hasNegative? -1 : c.size());
    }
}"
StarCoder,avatar,Python,Java,codeforces_624_B.java,"import java.util.*;
public class codeforces_624_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        int pre = Integer.MAX_VALUE;
        int ans = 0;
        for (int j = 0; j < n; j++) {
            ans += Math.max(0, Math.min(pre - 1, a[j]));
            pre = Math.max(0, Math.min(pre - 1, a[j]));
        }
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        int pre = Integer.MAX_VALUE;
        int ans = 0;
        for (int j = 0; j < n; j++) {
            ans += Math.max(0, Math.min(pre - 1, a[j]));
            pre = Math.max(0, Math.min(pre - 1, a[j]));
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC164_A.java,"import java.util.*;
public class atcoder_ABC164_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();
        int W = sc.nextInt();
        System.out.println(""safe"");
        if (S <= W) {
            System.out.println(""unsafe"");
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();
        int W = sc.nextInt();
        if (S <= W) {
            System.out.println(""unsafe"");
        } else {
            System.out.println(""safe"");
        }
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC169_D.java,"import java.util.*;
import java.io.*;
public class atcoder_ABC169_D {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        if (n == 1) {
            System.out.println(0);
            return;
        }
        int ans = 0;
        for (int p : primeFactorize(n)) {
            int x = p;
            for (int i = 1; i < 99999999; i++) {
                if (x >= i) {
                    x -= i;
                    ans++;
                } else {
                    break;
                }
            }
        }
        System.out.println(ans);
    }

    private static List<Integer> primeFactorize(int n) {
        List<Integer> arr = new ArrayList<>();
        while (n % 2 == 0) {
            arr.add(2);
            n /= 2;
        }
        int f = 3;
        while (f * f <= n) {
            if (n % f == 0) {
                arr.add(f);
                n /= f;
            } else {
                f += 2;
            }
        }
        if (n!= 1) {
            arr.add(n);
        }
        return arr;
    }
}

","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        if (n == 1) {
            System.out.println(0);
            return;
        }
        int ans = 0;
        for (int p : primeFactorize(n)) {
            int x = p;
            for (int i = 1; i < 99999999; i++) {
                if (x >= i) {
                    x -= i;
                    ans++;
                } else {
                    break;
                }
            }
        }
        System.out.println(ans);
    }

    private static List<Integer> primeFactorize(int n) {
        List<Integer> arr = new ArrayList<>();
        while (n % 2 == 0) {
            arr.add(2);
            n /= 2;
        }
        int f = 3;
        while (f * f <= n) {
            if (n % f == 0) {
                arr.add(f);
                n /= f;
            } else {
                f += 2;
            }
        }
        if (n!= 1) {
            arr.add(n);
        }
        return arr;
    }
}

"
StarCoder,avatar,Python,Java,atcoder_AGC004_B.java,"import java.util.*;
public class atcoder_AGC004_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int x = sc.nextInt();
        int[] a = new int[n];
        int[][] b = new int[n][n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int k = i - j;
                if (k < 0) {
                    k += n;
                }
                int m = a[i];
                for (int l = 0; l < j; l++) {
                    m = Math.min(m, a[k]);
                    k++;
                    if (k == n) {
                        k = 0;
                    }
                }
                b[j][i] = m;
            }
        }
        int m = 1000000000;
        for (int i = 0; i < n; i++) {
            int sum = 0;
            for (int j = 0; j < n; j++) {
                sum += b[j][i];
            }
            m = Math.min(m, sum + x * i);
        }
        System.out.println(m);
    }
}

","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int x = sc.nextInt();
        int[] a = new int[n];
        int[][] b = new int[n][n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int k = i - j;
                if (k < 0) {
                    k += n;
                }
                int m = a[i];
                for (int l = 0; l < j; l++) {
                    m = Math.min(m, a[k]);
                    k++;
                    if (k == n) {
                        k = 0;
                    }
                }
                b[j][i] = m;
            }
        }
        int m = 1000000000;
        for (int i = 0; i < n; i++) {
            int sum = 0;
            for (int j = 0; j < n; j++) {
                sum += b[j][i];
            }
            m = Math.min(m, sum + x * i);
        }
        System.out.println(m);
    }
}

"
StarCoder,avatar,Python,Java,atcoder_ABC174_E.java,"import java.util.*;
public class atcoder_ABC174_E {
    public static void main ( String args [ ] )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int k = sc.nextInt ( );
        int lis [ ] = new int [ n ];
        for ( int i = 0 ; i < n ; i ++ )
            lis [ i ] = sc.nextInt ( );
        int a = 1, b = 0;
        for ( int i = 0 ; i < n ; i ++ )
            b = Math.max ( b, lis [ i ] );
        int ans = b;
        while ( a <= b )
        {
            int mid = ( a + b ) / 2;
            if ( check ( lis, k, mid ) )
            {
                ans = mid;
                b = mid - 1;
            }
            else
                a = mid + 1;
        }
        System.out.println ( ans );
    }
    public static boolean check ( int [ ] lis, int k, int mid )
    {
        int count = 0;
        for ( int i = 0 ; i < lis.length ; i ++ )
        {
            if ( lis [ i ] % mid == 0 )
                count += 1;
            count -= lis [ i ] / mid;
        }
        return count >= k;
    }
}

","import java.util.*;
public class Main {
    public static void main ( String args [ ] )
    {
        Scanner sc = new Scanner ( System.in );
        int n = sc.nextInt ( );
        int k = sc.nextInt ( );
        int lis [ ] = new int [ n ];
        for ( int i = 0 ; i < n ; i ++ )
            lis [ i ] = sc.nextInt ( );
        int a = 1, b = 0;
        for ( int i = 0 ; i < n ; i ++ )
            b = Math.max ( b, lis [ i ] );
        int ans = b;
        while ( a <= b )
        {
            int mid = ( a + b ) / 2;
            if ( check ( lis, k, mid ) )
            {
                ans = mid;
                b = mid - 1;
            }
            else
                a = mid + 1;
        }
        System.out.println ( ans );
    }
    public static boolean check ( int [ ] lis, int k, int mid )
    {
        int count = 0;
        for ( int i = 0 ; i < lis.length ; i ++ )
        {
            if ( lis [ i ] % mid == 0 )
                count += 1;
            count -= lis [ i ] / mid;
        }
        return count >= k;
    }
}

"
StarCoder,avatar,Python,Java,codeforces_231_A.java,"import java.util.*;
public class codeforces_231_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int c = 0;
        for (int i = 0; i < n; i++) {
            int[] l1 = new int[sc.nextInt()];
            for (int j = 0; j < l1.length; j++) {
                l1[j] = sc.nextInt();
            }
            if (Arrays.stream(l1).sum() > 1) {
                c++;
            }
        }
        System.out.println(c);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int c = 0;
        sc.nextLine();
        for (int i = 0; i < n; i++) {
            String line = sc.nextLine();
            String[] numbers = line.split("" "");
            int[] l1 = new int[numbers.length];
            for (int j = 0; j < numbers.length; j++) {
                l1[j] = Integer.parseInt(numbers[j]);
            }
            if (Arrays.stream(l1).sum() > 1) {
                c++;
            }
        }
        System.out.println(c);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC155_E.java,"import java.util.Scanner;

public class atcoder_ABC155_E {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int pp = 0;
        int na = 0;
        for (int i = 0; i < s.length(); i++) {
            int cc = na + Integer.parseInt(s.charAt(i) + """");
            na = 0;
            if (cc <= 4) {
                pp += cc;
            } else {
                na = 1;
                if (i == s.length() - 1) {
                    pp += 1;
                }
                pp += 10 - cc;
            }
        }
        System.out.println(pp);
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int pp = 0;
        int na = 0;
        for (int i = 0; i < s.length(); i++) {
            int cc = na + Integer.parseInt(s.charAt(i) + """");
            na = 0;
            if (cc <= 4) {
                pp += cc;
            } else {
                na = 1;
                if (i == s.length() - 1) {
                    pp += 1;
                }
                pp += 10 - cc;
            }
        }
        System.out.println(pp);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC137_D.java,"import java.util.PriorityQueue;
import java.util.Scanner;
public class atcoder_ABC137_D {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        PriorityQueue<Integer> x = new PriorityQueue<>((a, b) -> a - b);
        PriorityQueue<Integer> y = new PriorityQueue<>((a, b) -> a - b);
        for (int i = 0; i < n; i++) {
            int day = sc.nextInt();
            int salary = sc.nextInt();
            x.add(-day);
            x.add(-salary);
        }
        while (!x.isEmpty()) {
            int d = x.poll();
            int s = x.poll();
            int r = m - y.size();
            if (r >= -d) {
                y.add(-s);
            } else {
                y.add(-s);
                y.poll();
            }
        }
        System.out.println(y.stream().mapToInt(i -> i).sum());
    }
}

","import java.util.PriorityQueue;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        PriorityQueue<Integer> x = new PriorityQueue<>((a, b) -> a - b);
        PriorityQueue<Integer> y = new PriorityQueue<>((a, b) -> a - b);
        for (int i = 0; i < n; i++) {
            int day = sc.nextInt();
            int salary = sc.nextInt();
            x.add(-day);
            x.add(-salary);
        }
        while (!x.isEmpty()) {
            int d = x.poll();
            int s = x.poll();
            int r = m - y.size();
            if (r >= -d) {
                y.add(-s);
            } else {
                y.add(-s);
                y.poll();
            }
        }
        System.out.println(y.stream().mapToInt(i -> i).sum());
    }
}

"
StarCoder,avatar,Python,Java,atcoder_AGC028_B.java,"import java.util.*;
import java.math.*;
import java.io.*;

public class atcoder_AGC028_B {
    public static void main ( String[] args ) {
        Scanner sc = new Scanner ( System.in );
        int N = sc.nextInt ( );
        int M = 1000000;
        int[] A = new int[N];
        for ( int i = 0 ; i < N ; i++ ) {
            A[i] = sc.nextInt ( );
        }
        int Nsq = 1000;
        int[] fact = new int[M];
        fact[0] = 1;
        for ( int n = 1 ; n < Nsq ; n++ ) {
            fact[n] = fact[n - 1] * n % M;
        }
        for ( int n = 1 ; n < Nsq ; n++ ) {
            fact[n] = fact[n] * fact[n - 1] % M;
        }
        int j = 0;
        long[] inv = new long[N];
        inv[0] = 1;
        for ( int i = 1 ; i < N ; i++ ) {
            inv[i] = ( inv[i - 1] + M - 1 ) % M;
        }
        long[] temp = new long[N];
        for ( int i = 0 ; i < N ; i++ ) {
            temp[i] = ( inv[i] + inv[N - 1 - i] - 1 ) % M;
        }
        long ans = 0;
        for ( int i = 0 ; i < N ; i++ ) {
            ans = ( ans + A[i] * temp[i] % M ) % M;
        }
        ans = ans * fact[N] % M;
        System.out.println ( ans );
    }
}","import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    public static void main ( String[] args ) {
        Scanner sc = new Scanner ( System.in );
        int N = sc.nextInt ( );
        int M = 1000000;
        long[] A = new long[N];
        for ( int i = 0 ; i < N ; i++ ) {
            A[i] = sc.nextLong ( );
        }
        int Nsq = 1000;
        long[] fact = new long[M];
        fact[0] = 1;
        for ( int n = 1 ; n < Nsq ; n++ ) {
            fact[n] = fact[n - 1] * n % M;
        }
        for ( int n = 1 ; n < Nsq ; n++ ) {
            fact[n] = fact[n] * fact[n - 1] % M;
        }
        int j = 0;
        long[] inv = new long[N];
        inv[0] = 1;
        for ( int i = 1 ; i < N ; i++ ) {
            inv[i] = ( inv[i - 1] + M - 1 ) % M;
        }
        long[] temp = new long[N];
        for ( int i = 0 ; i < N ; i++ ) {
            temp[i] = ( inv[i] + inv[N - 1 - i] - 1 ) % M;
        }
        long ans = 0;
        for ( int i = 0 ; i < N ; i++ ) {
            ans = ( ans + A[i] * temp[i] % M ) % M;
        }
        ans = ans * fact[N] % M;
        System.out.println ( ans );
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC140_F.java,"import java.util.*;
public class atcoder_ABC140_F {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        Arrays.sort(arr);
        int[] cur = new int[n];
        cur[0] = arr[0];
        for (int i = 1; i < n; i++) {
            int j = 0;
            int jM = cur.length;
            for (int k = 0; k < n; k++) {
                if (arr[k] < cur[j]) {
                    cur[j] = arr[k];
                    j++;
                    if (j == jM) {
                        break;
                    }
                }
            }
        }
        for (int i = 0; i < n; i++) {
            if (arr[i]!= cur[i]) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}

","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        Arrays.sort(arr);
        int[] cur = new int[n];
        cur[0] = arr[0];
        for (int i = 1; i < n; i++) {
            int j = 0;
            int jM = cur.length;
            for (int k = 0; k < n; k++) {
                if (arr[k] < cur[j]) {
                    cur[j] = arr[k];
                    j++;
                    if (j == jM) {
                        break;
                    }
                }
            }
        }
        for (int i = 0; i < n; i++) {
            if (arr[i]!= cur[i]) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}

"
StarCoder,avatar,Python,Java,atcoder_ARC062_B.java,"import java.util.Scanner;
public class atcoder_ARC062_B {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int num_g = 0, num_p = 0, score = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == 'g') {
                if (num_g - num_p > 0) {
                    score += 1;
                    num_p += 1;
                } else {
                    score = score;
                    num_g += 1;
                }
            } else if (s.charAt(i) == 'p') {
                if (num_g - num_p > 0) {
                    score = score;
                    num_p += 1;
                } else {
                    score -= 1;
                    num_g += 1;
                }
            }
        }
        System.out.println(score);
    }
}
","import java.util.Scanner;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int num_g = 0, num_p = 0, score = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == 'g') {
                if (num_g - num_p > 0) {
                    score += 1;
                    num_p += 1;
                } else {
                    score = score;
                    num_g += 1;
                }
            } else if (s.charAt(i) == 'p') {
                if (num_g - num_p > 0) {
                    score = score;
                    num_p += 1;
                } else {
                    score -= 1;
                    num_g += 1;
                }
            }
        }
        System.out.println(score);
    }
}
"
StarCoder,avatar,Python,Java,codeforces_222_A.java,"import java.util.*;
public class codeforces_222_A {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int target = arr[n - 1];
        int[] toDelete = new int[k - 1];
        for (int i = 0; i < k - 1; i++) {
            toDelete[i] = arr[i];
        }
        while (toDelete.length > 0 && toDelete[toDelete.length - 1] == target) {
            toDelete = Arrays.copyOf(toDelete, toDelete.length - 1);
        }
        System.out.println(toDelete.length);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int target = arr[n - 1];
        int[] toDelete = new int[k - 1];
        for (int i = 0; i < k - 1; i++) {
            toDelete[i] = arr[i];
        }
        while (toDelete.length > 0 && toDelete[toDelete.length - 1] == target) {
            toDelete = Arrays.copyOf(toDelete, toDelete.length - 1);
        }
        System.out.println(toDelete.length);
    }
}"
StarCoder,avatar,Python,Java,codeforces_134_A.java,"import java.util.*;
public class codeforces_134_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] w = new int[n];
        for (int i = 0; i < n; i++) {
            w[i] = sc.nextInt();
        }
        int x = 0;
        for (int i = 0; i < n; i++) {
            x += w[i];
        }
        int[] d = new int[n];
        for (int i = 0; i < n; i++) {
            if ((x - w[i]) / (n - 1) == w[i]) {
                d[i] = i + 1;
            }
        }
        System.out.println(d.length);
        for (int i = 0; i < d.length; i++) {
            System.out.print(d[i] + "" "");
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] w = new int[n];
        for (int i = 0; i < n; i++) {
            w[i] = sc.nextInt();
        }
        int x = 0;
        for (int i = 0; i < n; i++) {
            x += w[i];
        }
        List<Integer> d = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            if ((double) (x - w[i]) / (n - 1) == w[i]) {
                d.add(i + 1);
            }
        }
        System.out.println(d.size());
        for (int i = 0; i < d.size(); i++) {
            System.out.print(d.get(i) + "" "");
        }
    }
}
"
StarCoder,avatar,Python,Java,atcoder_ABC150_E.java,"import java.util.*;
import java.math.*;
public class atcoder_ABC150_E {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            c[i] = sc.nextInt();
        }
        Arrays.sort(c);
        int mod = (int) Math.pow(10, 9) + 7;
        int b = (int) Math.pow(2, 2 * n - 2) % mod;
        int a = 2 * b % mod;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans += c[i] * (a + i * b);
            ans %= mod;
        }
        System.out.println(ans);
    }
}","import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            c[i] = sc.nextInt();
        }
        Arrays.sort(c);
        int mod = (int) Math.pow(10, 9) + 7;
        int b = (int) Math.pow(2, 2 * n - 2) % mod;
        int a = 2 * b % mod;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans += c[i] * (a + i * b);
            ans %= mod;
        }
        System.out.println(ans);
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC155_D.java,"import java.util.*;
public class atcoder_ABC155_D {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        Arrays.sort(A);
        int ll = -1000000000, rr = 1000000000;
        while (ll + 1 < rr) {
            int x = (ll + rr) / 2;
            int tot = 0;
            for (int i = 0; i < N; i++) {
                if (A[i] < 0) {
                    int l = -1, r = N;
                    while (l + 1 < r) {
                        int c = (l + r) / 2;
                        if (A[i] * A[c] < x) {
                            r = c;
                        } else {
                            l = c;
                        }
                    }
                    tot += N - r;
                } else {
                    int l = -1, r = N;
                    while (l + 1 < r) {
                        int c = (l + r) / 2;
                        if (A[i] * A[c] < x) {
                            l = c;
                        } else {
                            r = c;
                        }
                    }
                    tot += r;
                }
                if (A[i] * A[i] < x) {
                    tot -= 1;
                }
            }
            tot /= 2;
            if (tot < K) {
                ll = x;
            } else {
                rr = x;
            }
        }
        System.out.println(ll);
    }
}
","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        Arrays.sort(A);
        int ll = -1000000000, rr = 1000000000;
        while (ll + 1 < rr) {
            int x = (ll + rr) / 2;
            int tot = 0;
            for (int i = 0; i < N; i++) {
                if (A[i] < 0) {
                    int l = -1, r = N;
                    while (l + 1 < r) {
                        int c = (l + r) / 2;
                        if (A[i] * A[c] < x) {
                            r = c;
                        } else {
                            l = c;
                        }
                    }
                    tot += N - r;
                } else {
                    int l = -1, r = N;
                    while (l + 1 < r) {
                        int c = (l + r) / 2;
                        if (A[i] * A[c] < x) {
                            l = c;
                        } else {
                            r = c;
                        }
                    }
                    tot += r;
                }
                if (A[i] * A[i] < x) {
                    tot -= 1;
                }
            }
            tot /= 2;
            if (tot < K) {
                ll = x;
            } else {
                rr = x;
            }
        }
        System.out.println(ll);
    }
}
"
StarCoder,avatar,Python,Java,codeforces_598_A.java,"import java.util.*;
public class codeforces_598_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        for (int i = 0; i < t; i++) {
            int n = sc.nextInt();
            System.out.println(solve(n));
        }
    }

    public static int solve(int n) {
        int s = (1 + n) * n / 2;
        int t = 1;
        while (t <= n) {
            s -= 2 * t;
            t *= 2;
        }
        return s;
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        for (int i = 0; i < t; i++) {
            long n = sc.nextLong();
            System.out.println(solve(n));
        }
    }

    public static long solve(long n) {
        long s = (1 + n) * n / 2;
        long t = 1;
        while (t <= n) {
            s -= 2 * t;
            t *= 2;
        }
        return s;
    }
}"
StarCoder,avatar,Python,Java,atcoder_ABC168_C.java,"import java.util.*;
public class atcoder_ABC168_C {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();
        int m = sc.nextInt();
        double C = Math.abs(360 / 60 * m - 360 / 12 * h - 360 / 12 / 60 * m);
        if (C > 180) {
            C = 360 - C;
        }
        double cosC = Math.cos(Math.toRadians(C));
        System.out.println(Math.sqrt(a * a + b * b - 2 * a * b * cosC));
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();
        int m = sc.nextInt();
        double C = Math.abs(360 / 60 * m - 360 / 12 * h - (double) 360 / 12 / 60 * m);
        if (C > 180) {
            C = 360 - C;
        }
        double cosC = Math.cos(Math.toRadians(C));
        System.out.println(Math.sqrt(a * a + b * b - 2 * a * b * cosC));
    }
}"
StarCoder,avatar,Python,Java,codeforces_632_B.java,"import java.util.*;
public class codeforces_632_B {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int[] pieces = new int[in.nextInt()];
        for (int i = 0; i < pieces.length; i++) {
            pieces[i] = in.nextInt();
        }
        System.out.println(Bob_sMaxStrength(pieces));
    }
    public static int Bob_sMaxStrength(int[] pieces) {
        int pScore = 0, sScore = 0, pMaxScore = 0, sMaxScore = 0;
        for (int i = 0; i < pieces.length; i++) {
            if (i % 2 == 0) {
                pScore += pieces[i];
                if (pScore > pMaxScore) {
                    pMaxScore = pScore;
                }
            } else {
                sScore += pieces[i];
                if (sScore > sMaxScore) {
                    sMaxScore = sScore;
                }
            }
        }
        return pMaxScore > sMaxScore? pMaxScore : sMaxScore;
    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int[] pieces = new int[in.nextInt()];
        for (int i = 0; i < pieces.length; i++) {
            pieces[i] = in.nextInt();
        }
        System.out.println(Bob_sMaxStrength(pieces));
    }
    public static int Bob_sMaxStrength(int[] pieces) {
        int pScore = 0, sScore = 0, pMaxScore = 0, sMaxScore = 0;
        for (int i = 0; i < pieces.length; i++) {
            if (i % 2 == 0) {
                pScore += pieces[i];
                if (pScore > pMaxScore) {
                    pMaxScore = pScore;
                }
            } else {
                sScore += pieces[i];
                if (sScore > sMaxScore) {
                    sMaxScore = sScore;
                }
            }
        }
        return pMaxScore > sMaxScore? pMaxScore : sMaxScore;
    }
}
"
StarCoder,avatar,Python,Java,atcoder_ABC150_C.java,"import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;

public class atcoder_ABC150_C {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        List<List<Integer>> orig = new ArrayList<List<Integer>>();
        for (int i = 0; i < n; i++) {
            List<Integer> l = new ArrayList<Integer>();
            for (int j = 0; j < n; j++) {
                l.add(j + 1);
            }
            orig.add(l);
        }
        int[] p = new int[n];
        int[] q = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
            q[i] = sc.nextInt();
        }
        int pn = orig.indexOf(Arrays.asList(p));
        int qn = orig.indexOf(Arrays.asList(q));
        System.out.println(Math.abs(pn - qn));
    }
}","import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        List<List<Integer>> orig = new ArrayList<List<Integer>>();
        for (int i = 0; i < n; i++) {
            List<Integer> l = new ArrayList<Integer>();
            for (int j = 0; j < n; j++) {
                l.add(j + 1);
            }
            orig.add(l);
        }
        int[] p = new int[n];
        int[] q = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
            q[i] = sc.nextInt();
        }
        int pn = orig.indexOf(Arrays.asList(p));
        int qn = orig.indexOf(Arrays.asList(q));
        System.out.println(Math.abs(pn - qn));
    }
}"
StarCoder,avatar,Python,Java,codeforces_579_A.java,"import java.util.Scanner;
public class codeforces_579_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int x = 1;
        while (Math.log(n) / Math.log(2) % 1!= 0) {
            x++;
            n -= (int) Math.pow(2, Math.floor(Math.log(n) / Math.log(2)));
        }
        System.out.println(x);
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int x = 1;
        while (Math.log(n) / Math.log(2) % 1!= 0) {
            x++;
            n -= (int) Math.pow(2, Math.floor(Math.log(n) / Math.log(2)));
        }
        System.out.println(x);
    }
}"
StarCoder,avatar,Python,Java,codeforces_583_B.java,"import java.util.*;
public class codeforces_583_B {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int current_level = 0;
        int counter = 0;
        int counter_turns = -1;
        while (counter < n) {
            counter_turns += 1;
            for (int i = 0; i < n; i++) {
                if (a[i]!= -1 && a[i] <= counter) {
                    counter += 1;
                    a[i] = -1;
                }
            }
            for (int i = 0; i < n; i++) {
                if (a[i]!= -1) {
                    a[i] = -1;
                }
            }
        }
        System.out.println(counter_turns);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int current_level = 0;
        int counter = 0;
        int counter_turns = -1;
        while (counter < n) {
            counter_turns += 1;
            for (int i = 0; i < n; i++) {
                if (a[i]!= -1 && a[i] <= counter) {
                    counter += 1;
                    a[i] = -1;
                }
            }
            reverseArray(a);
        }
        System.out.println(counter_turns);
    }
    private static void reverseArray(int[] a) {
        int left = 0;
        int right = a.length - 1;
        while (left < right) {
            int temp = a[left];
            a[left] = a[right];
            a[right] = temp;
            left++;
            right--;
        }
    }
}"
StarCoder,avatar,Java,Python,atcoder_ABC164_D.py,import java.util.* ; public class atcoder_ABC164_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int N = S.length ( ) ; int [ ] mod_arr = new int [ N ] ; int [ ] mod_cnt = new int [ 2019 ] ; int radix = 1 ; for ( int i = 0 ; i < N ; i ++ ) { int tmp = ( ( int ) S.charAt ( N - 1 - i ) - ( int ) '0' ) * radix % 2019 ; if ( i!= 0 ) tmp = ( tmp + mod_arr [ i - 1 ] ) % 2019 ; mod_arr [ i ] = tmp ; mod_cnt [ tmp ] ++ ; radix = radix * 10 % 2019 ; } long ans = 0L ; mod_cnt [ 0 ] ++ ; for ( int i = 0 ; i < 2019 ; i ++ ) { ans += mod_cnt [ i ] * ( mod_cnt [ i ] - 1 ) / 2 ; } System.out.println ( ans ) ; } },import java.util.* ; public class atcoder_ABC164_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int N = S.length ( ) ; int [ ] mod_arr = new int [ N ] ; int [ ] mod_cnt = new int [ 2019 ] ; int radix = 1 ; for ( int i = 0 ; i < N ; i ++ ) { int tmp = ( ( int ) S.charAt ( N - 1 - i ) - ( int ) '0' ) * radix % 2019 ; if ( i!= 0 ) tmp = ( tmp + mod_arr [ i - 1 ] ) % 2019 ; mod_arr [ i ] = tmp ; mod_cnt [ tmp ] ++ ; radix = radix * 10 % 2019 ; } long ans = 0L ; mod_cnt [ 0 ] ++ ; for ( int i = 0 ; i < 2019 ; i ++ ) { ans += mod_cnt [ i ] * ( mod_cnt [ i ] - 1 ) / 2 ; } System.out.println ( ans ) ; } }
StarCoder,avatar,Java,Python,atcoder_ABC111_C.py,"import java.util.Arrays ; import java.util.Collections ; import java.util.Scanner ; public class atcoder_ABC111_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = Integer.parseInt ( sc.next ( ) ) ; int [ ] v = new int [ 100010 ] ; for ( int i = 0 ; i < n ; i ++ ) { v [ i ] = Integer.parseInt ( sc.next ( ) ) ; } Integer [ ] vo = new Integer [ 100010 ] ; Integer [ ] ve = new Integer [ 100010 ] ; Integer [ ] vt = new Integer [ 100010 ] ; Arrays.fill ( vo, 0 ) ; Arrays.fill ( ve, 0 ) ; Arrays.fill ( vt, 0 ) ; for ( int i = 0 ; i < n ; i ++ ) { vt [ v [ i ] ] ++ ; if ( i % 2 == 0 ) { ve [ v [ i ] ] ++ ; } else { vo [ v [ i ] ] ++ ; } } Arrays.sort ( vo, Collections.reverseOrder ( ) ) ; Arrays.sort ( ve, Collections.reverseOrder ( ) ) ; Arrays.sort ( vt, Collections.reverseOrder ( ) ) ; int ans = 0 ; if ( vo [ 0 ] + ve [ 0 ] == vt [ 0 ] ) { ans = Math.min ( n - vo [ 0 ] - ve [ 1 ], n - vo [ 1 ] - ve [ 0 ] ) ; } else { ans = n - vo [ 0 ] - ve [ 0 ] ; } System.out.println ( ans ) ; sc.close ( ) ; } }","import java.util.Arrays ; import java.util.Collections ; import java.util.Scanner ; public class atcoder_ABC111_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = Integer.parseInt ( sc.next ( ) ) ; int [ ] v = new int [ 100010 ] ; for ( int i = 0 ; i < n ; i ++ ) { v [ i ] = Integer.parseInt ( sc.next ( ) ) ; } Integer [ ] vo = new Integer [ 100010 ] ; Integer [ ] ve = new Integer [ 100010 ] ; Integer [ ] vt = new Integer [ 100010 ] ; Arrays.fill ( vo, 0 ) ; Arrays.fill ( ve, 0 ) ; Arrays.fill ( vt, 0 ) ; for ( int i = 0 ; i < n ; i ++ ) { vt [ v [ i ] ] ++ ; if ( i % 2 == 0 ) { ve [ v [ i ] ] ++ ; } else { vo [ v [ i ] ] ++ ; } } Arrays.sort ( vo, Collections.reverseOrder ( ) ) ; Arrays.sort ( ve, Collections.reverseOrder ( ) ) ; Arrays.sort ( vt, Collections.reverseOrder ( ) ) ; int ans = 0 ; if ( vo [ 0 ] + ve [ 0 ] == vt [ 0 ] ) { ans = Math.min ( n - vo [ 0 ] - ve [ 1 ], n - vo [ 1 ] - ve [ 0 ] ) ; } else { ans = n - vo [ 0 ] - ve [ 0 ] ; } System.out.println ( ans ) ; sc.close ( ) ; } }"
StarCoder,avatar,Java,Python,codeforces_678_B.py,"import java.sql.Timestamp
import java.util.*

def check_leap(y):
    return y % 400 == 0 or (y % 4 == 0 and y % 100!= 0)

def main():
    in_ = Scanner(System.in)
    y = in_.nextInt()
    leap = check_leap(y)
    sum = 0
    mod = 0
    for i in range(yimport java.sql.Timestamp
import java.util.*

def check_leap(y):
    return y % 400 == 0 or (y % 4 == 0 and y % 100!= 0)

def main():
    in_ = Scanner(System.in)
    y = in_.nextInt()
    leap = check_leap(y)
    sum = 0
    mod = 0
    for i in range(y
StarCoder,avatar,Java,Python,codeforces_231_A.py,import java.util.Scanner ; public class codeforces_231_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int t = sc.nextInt ( ) ; int count = 0 ; while ( t -- > 0 ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; if ( ( a == 1 && b == 1 ) || ( a == 1 && c == 1 ) || ( b == 1 && c == 1 ) || ( a == 1 && b == 1 && c == 1 ) ) { count ++ ; } } System.out.println ( count ) ; } },import java.util.Scanner ; public class codeforces_231_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int t = sc.nextInt ( ) ; int count = 0 ; while ( t -- > 0 ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; if ( ( a == 1 && b == 1 ) || ( a == 1 && c == 1 ) || ( b == 1 && c == 1 ) || ( a == 1 && b == 1 && c == 1 ) ) { count ++ ; } } System.out.println ( count ) ; } }
StarCoder,avatar,Java,Python,codeforces_79_A.py,"import sys

def canTake(xNeeded, xAvailable, yNeeded, yAvailable):
    if xNeeded > xAvailable:
        return False
    if yNeeded > yAvailable:
        return False
    return True

x, y = map(int, sys.stdin.readline().split())
turn = 0
while True:
    if turn % 2 == 0:
        if canTake(2, x, 2, y):
            x -= 2
            y -= 2
        elif canTake(1, x, 12, y):
            x -= 1
            y -= 12
        elif canTake(0, x, 22, y):
            y -= 22
        else:
            print(""Hanako"")
            return
    else:
        if canTake(0, x, 22, y):
            y -= 22
        elif canTake(1, x, 12, y):
            x -= 1
            y -= 12
        elif canTake(2, x, 2, y):
            x -= 2
            y -= 2
        else:
            print(""Ciel"")
            return
    turn += 1","import sys

def canTake(xNeeded, xAvailable, yNeeded, yAvailable):
    if xNeeded > xAvailable:
        return False
    if yNeeded > yAvailable:
        return False
    return True

x, y = map(int, sys.stdin.readline().split())
turn = 0
while True:
    if turn % 2 == 0:
        if canTake(2, x, 2, y):
            x -= 2
            y -= 2
        elif canTake(1, x, 12, y):
            x -= 1
            y -= 12
        elif canTake(0, x, 22, y):
            y -= 22
        else:
            print(""Hanako"")
            exit()
    else:
        if canTake(0, x, 22, y):
            y -= 22
        elif canTake(1, x, 12, y):
            x -= 1
            y -= 12
        elif canTake(2, x, 2, y):
            x -= 2
            y -= 2
        else:
            print(""Ciel"")
            exit()
    turn += 1"
StarCoder,avatar,Java,Python,codeforces_67_B.py,"import java.io.* ; import java.util.* ; public class codeforces_67_B extends PrintWriter { public static void main ( String [ ] $ ) { codeforces_67_B o = new codeforces_67_B ( ) ; o.main ( ) ; o.flush ( ) ; } void main ( ) { int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] bb = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) bb [ i ] = sc.nextInt ( ) ; int [ ] aa = new int [ n ] ; int m = 0 ; for ( int a = n - 1 ; a >= 0 ; a -- ) { int j = 0 ; while ( bb [ a ] > 0 ) { if ( aa [ j ] >= a + k ) bb [ a ] -- ; j ++ ; } for ( int j_ = m ++ ; j_ > j ; j_ -- ) aa [ j_ ] = aa [ j_ - 1 ] ; aa [ j ] = a ; } for ( int i = 0 ; i < n ; i ++ ) print ( aa [ i ] + 1 + "" "" ) ; println ( ) ; } }","import java.io.* ; import java.util.* ; public class codeforces_67_B extends PrintWriter { public static void main ( String [ ] $ ) { codeforces_67_B o = new codeforces_67_B ( ) ; o.main ( ) ; o.flush ( ) ; } void main ( ) { int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] bb = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) bb [ i ] = sc.nextInt ( ) ; int [ ] aa = new int [ n ] ; int m = 0 ; for ( int a = n - 1 ; a >= 0 ; a -- ) { int j = 0 ; while ( bb [ a ] > 0 ) { if ( aa [ j ] >= a + k ) bb [ a ] -- ; j ++ ; } for ( int j_ = m ++ ; j_ > j ; j_ -- ) aa [ j_ ] = aa [ j_ - 1 ] ; aa [ j ] = a ; } for ( int i = 0 ; i < n ; i ++ ) print ( aa [ i ] + 1 + "" "" ) ; println ( ) ; } }"
StarCoder,avatar,Java,Python,atcoder_ABC110_C.py,"import java.util.Scanner ; public class atcoder_ABC110_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.nextLine ( ) ; String T = sc.nextLine ( ) ; sc.close ( ) ; String [ ] A = { ""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o"", ""p"", ""q"", ""r"", ""s"", ""t"", ""u"", ""v"", ""w"", ""x"", ""y"", ""z"" } ; boolean res = True ; for ( String s : A ) { int sIdx = S.indexOf ( s ) ; if ( sIdx < 0 ) continue ; String t = String.valueOf ( T.charAt ( sIdx ) ) ; int idx = 0 ; while ( idx < S.length ( ) ) { if ( S.indexOf ( s, idx ) >= 0 ) { if ( S.indexOf ( s, idx )!= T.indexOf ( t, idx ) ) { res = False ; break ; } else { idx = S.indexOf ( s, idx ) + 1 ; } } else if ( T.indexOf ( t, idx ) >= 0 ) { res = False ; break ; } else break ; } if (! res ) break ; } if ( res ) System.out.println ( ""Yes"" ) ; else System.out.println ( ""No"" ) ; } }","import java.util.Scanner ; public class atcoder_ABC110_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.nextLine ( ) ; String T = sc.nextLine ( ) ; sc.close ( ) ; String [ ] A = { ""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o"", ""p"", ""q"", ""r"", ""s"", ""t"", ""u"", ""v"", ""w"", ""x"", ""y"", ""z"" } ; boolean res = True ; for ( String s : A ) { int sIdx = S.indexOf ( s ) ; if ( sIdx < 0 ) continue ; String t = String.valueOf ( T.charAt ( sIdx ) ) ; int idx = 0 ; while ( idx < S.length ( ) ) { if ( S.indexOf ( s, idx ) >= 0 ) { if ( S.indexOf ( s, idx )!= T.indexOf ( t, idx ) ) { res = False ; break ; } else { idx = S.indexOf ( s, idx ) + 1 ; } } else if ( T.indexOf ( t, idx ) >= 0 ) { res = False ; break ; } else break ; } if (! res ) break ; } if ( res ) System.out.println ( ""Yes"" ) ; else System.out.println ( ""No"" ) ; } }"
StarCoder,avatar,Java,Python,atcoder_ABC119_B.py,"import java.util.Scanner ; import java.util.stream.IntStream ; public class atcoder_ABC119_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; double [ ] x = new double [ N ] ; String [ ] u = new String [ N ] ; for ( int i = 0 ; i < N ; ++ i ) { x [ i ] = sc.nextDouble ( ) ; u [ i ] = sc.next ( ) ; } System.out.println ( solve ( x, u ) ) ; sc.close ( ) ; } static double solve ( double [ ] x, String [ ] u ) { return IntStream.range ( 0, x.length ).mapToDouble ( i -> x [ i ] * ( u [ i ].equals ( ""JPY"" )? 1 : 380000 ) ).sum ( ) ; } }","import java.util.Scanner ; import java.util.stream.IntStream ; public class atcoder_ABC119_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; double [ ] x = new double [ N ] ; String [ ] u = new String [ N ] ; for ( int i = 0 ; i < N ; ++ i ) { x [ i ] = sc.nextDouble ( ) ; u [ i ] = sc.next ( ) ; } System.out.println ( solve ( x, u ) ) ; sc.close ( ) ; } static double solve ( double [ ] x, String [ ] u ) { return IntStream.range ( 0, x.length ).mapToDouble ( i -> x [ i ] * ( u [ i ].equals ( ""JPY"" )? 1 : 380000 ) ).sum ( ) ; } }"
StarCoder,avatar,Java,Python,atcoder_ABC171_E.py,"import java.util.ArrayList ; import java.util.Arrays ; import java.util.Collections ; import java.util.Comparator ; import java.util.HashSet ; import java.util.List ; import java.util.PriorityQueue ; import java.util.Scanner ; import java.util.Set ; public class atcoder_ABC171_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int r = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; r ^= a [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) { if ( i!= 0 ) System.out.print ( "" "" ) ; System.out.print ( r ^ a [ i ] ) ; } } }","import java.util.ArrayList ; import java.util.Arrays ; import java.util.Collections ; import java.util.Comparator ; import java.util.HashSet ; import java.util.List ; import java.util.PriorityQueue ; import java.util.Scanner ; import java.util.Set ; public class atcoder_ABC171_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int r = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; r ^= a [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) { if ( i!= 0 ) System.out.print ( "" "" ) ; System.out.print ( r ^ a [ i ] ) ; } } }"
StarCoder,avatar,Java,Python,codeforces_267_A.py,"import java.util.Scanner ; public class codeforces_267_A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int a = scan.nextInt ( ) ; int b = scan.nextInt ( ) ; System.out.println ( sub ( a, b ) ) ; } } public static int sub ( int a, int b ) { int min = Math.min ( a, b ) ; int max = Math.max ( a, b ) ; int result = 0 ; while ( min > 0 ) { result += max / min ; max = max % min ; int curr_min = Math.min ( min, max ) ; int curr_max = Math.max ( min, max ) ; min = curr_min ; max = curr_max ; } return result ; } }","import java.util.Scanner ; public class codeforces_267_A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int a = scan.nextInt ( ) ; int b = scan.nextInt ( ) ; System.out.println ( sub ( a, b ) ) ; } } public static int sub ( int a, int b ) { int min = Math.min ( a, b ) ; int max = Math.max ( a, b ) ; int result = 0 ; while ( min > 0 ) { result += max / min ; max = max % min ; int curr_min = Math.min ( min, max ) ; int curr_max = Math.max ( min, max ) ; min = curr_min ; max = curr_max ; } return result ; } }"
StarCoder,avatar,Java,Python,codeforces_567_A.py,"import java.util.Scanner ; import javax.swing.JOptionPane ; public class codeforces_567_A { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System.in ) ; int a = s.nextInt ( ) ; int ar [ ] = new int [ a ] ; int max = 0, min = 0 ; for ( int i = 0 ; i < ar.length ; i ++ ) ar [ i ] = s.nextInt ( ) ; for ( int i = 0 ; i < ar.length ; i ++ ) { max = max ( ar [ i ] - ar [ 0 ], ar [ ar.length - 1 ] - ar [ i ] ) ; if ( i == 0 ) min = ar [ i + 1 ] - ar [ i ] ; else if ( i == ar.length - 1 ) min = ar [ i ] - ar [ i - 1 ] ; else min = min ( ar [ i ] - ar [ i - 1 ], ar [ i + 1 ] - ar [ i ] ) ; System.out.println ( min + "" "" + max ) ; } } }","import java.util.Scanner ; import javax.swing.JOptionPane ; public class codeforces_567_A { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System.in ) ; int a = s.nextInt ( ) ; int ar [ ] = new int [ a ] ; int max = 0, min = 0 ; for ( int i = 0 ; i < ar.length ; i ++ ) ar [ i ] = s.nextInt ( ) ; for ( int i = 0 ; i < ar.length ; i ++ ) { max = max ( ar [ i ] - ar [ 0 ], ar [ ar.length - 1 ] - ar [ i ] ) ; if ( i == 0 ) min = ar [ i + 1 ] - ar [ i ] ; else if ( i == ar.length - 1 ) min = ar [ i ] - ar [ i - 1 ] ; else min = min ( ar [ i ] - ar [ i - 1 ], ar [ i + 1 ] - ar [ i ] ) ; System.out.println ( min + "" "" + max ) ; } } }"
StarCoder,avatar,Java,Python,codeforces_350_B.py,"import java.util.* ; import java.io.* ; import java.util.* ; import java.io.* ; public class codeforces_350_B { static Scanner scanner = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { int n = scanner.nextInt ( ) ; int a [ ] = new int [ n + 1 ] ; int b [ ] = new int [ n + 1 ] ; int num [ ] = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) a [ i ] = scanner.nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) b [ i ] = scanner.nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) num [ b [ i ] ] ++ ; String ss = """" ; int ans = 0 ; boolean st [ ] = new boolean [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { if ( a [ i ] == 1 ) { st [ i ] = true ; StringBuilder sb = new StringBuilder ( ) ; int x = b [ i ] ; StringBuilder sss = new StringBuilder ( ) ; sss.append ( i ) ; sb.append ( "" "" + sss.reverse ( ) ) ; int s = 1 ; while (! st [ x ] && num [ x ] == 1 && x!= 0 && a [ x ]!= 1 ) { sss = new StringBuilder ( ) ; sss.append ( x ) ; sb.append ( "" "" + sss.reverse ( ) ) ; st [ x ] = true ; x = b [ x ] ; s ++ ; } if ( s > ans ) { ans = s ; ss = sb.reverse ( ).toString ( ) ; } } } System.out.println ( ans ) ; System.out.println ( ss ) ; } }","import java.util.* ; import java.io.* ; import java.util.* ; import java.io.* ; public class codeforces_350_B { static Scanner scanner = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { int n = scanner.nextInt ( ) ; int a [ ] = new int [ n + 1 ] ; int b [ ] = new int [ n + 1 ] ; int num [ ] = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) a [ i ] = scanner.nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) b [ i ] = scanner.nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) num [ b [ i ] ] ++ ; String ss = """" ; int ans = 0 ; boolean st [ ] = new boolean [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { if ( a [ i ] == 1 ) { st [ i ] = true ; StringBuilder sb = new StringBuilder ( ) ; int x = b [ i ] ; StringBuilder sss = new StringBuilder ( ) ; sss.append ( i ) ; sb.append ( "" "" + sss.reverse ( ) ) ; int s = 1 ; while (! st [ x ] && num [ x ] == 1 && x!= 0 && a [ x ]!= 1 ) { sss = new StringBuilder ( ) ; sss.append ( x ) ; sb.append ( "" "" + sss.reverse ( ) ) ; st [ x ] = true ; x = b [ x ] ; s ++ ; } if ( s > ans ) { ans = s ; ss = sb.reverse ( ).toString ( ) ; } } } System.out.println ( ans ) ; System.out.println ( ss ) ; } }"
StarCoder,avatar,Java,Python,codeforces_669_A.py,"import sys

def solve(n):
    print((n/3)*2 + (n%3 == 0? 0 : 1))

if __name__ == '__main__':
    n = int(sys.stdin.readline())
    solve(n)","import sys

def solve(n):
    print((n//3)*2 + (0 if n%3 == 0 else 1))

if __name__ == '__main__':
    n = int(sys.stdin.readline())
    solve(n)"
StarCoder,avatar,Java,Python,codeforces_265_B.py,import java.io.* ; import java.util.* ; public class codeforces_265_B { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System.in ) ; int n = scn.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < arr.length ; i ++ ) { arr [ i ] = scn.nextInt ( ) ; } int ans = arr [ 0 ] + 1 ; for ( int i = 1 ; i < arr.length ; i ++ ) { ans += Math.abs ( arr [ i ] - arr [ i - 1 ] ) + 2 ; } System.out.println ( ans ) ; } },import java.io.* ; import java.util.* ; public class codeforces_265_B { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System.in ) ; int n = scn.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < arr.length ; i ++ ) { arr [ i ] = scn.nextInt ( ) ; } int ans = arr [ 0 ] + 1 ; for ( int i = 1 ; i < arr.length ; i ++ ) { ans += Math.abs ( arr [ i ] - arr [ i - 1 ] ) + 2 ; } System.out.println ( ans ) ; } }
StarCoder,avatar,Java,Python,codeforces_474_B.py,"import sys

n = int(sys.stdin.readline())
arr = [0] * n
arr[0] = int(sys.stdin.readline())
for i in range(1, n):
    x = int(sys.stdin.readline())
    arr[i] = x + arr[i - 1]
m = int(sys.stdin.readline())
q = [0] * m
for i in range(m):
    q[i] = int(sys.stdin.readline())
for k in range(m):
    print(fun(arr, q[k], n, m) + 1)


def fun(arr, q, n, m):
    res = 0
    i = 0
    j = n
    while i <= j:
        md = i + (j - i) // 2
        if arr[md] == q:
            return md
        elif arr[md] > q:
            res = md
            j = md - 1
        else:
            i = md + 1
    return res","import sys

def fun(arr, q, n, m):
    res = 0
    i = 0
    j = n
    while i <= j:
        md = i + (j - i) // 2
        if arr[md] == q:
            return md
        elif arr[md] > q:
            res = md
            j = md - 1
        else:
            i = md + 1
    return res

n = int(sys.stdin.readline())
arr = [0] * n
inputs = list(sys.stdin.readline().split())
arr[0] = int(inputs[0])
for i in range(1, n):
    x = int(inputs[i])
    arr[i] = x + arr[i - 1]
m = int(sys.stdin.readline())
q = [0] * m
inputs = list(sys.stdin.readline().split())
for i in range(m):
    q[i] = int(inputs[i])
for k in range(m):
    print(fun(arr, q[k], n, m) + 1)"
StarCoder,avatar,Java,Python,atcoder_ABC158_A.py,"import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.Scanner ; public class atcoder_ABC158_A { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; Scanner in = new Scanner ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; AStationAndBus solver = new AStationAndBus ( ) ; solver.solve ( 1, in, out ) ; out.close ( ) ; } static class AStationAndBus { public void solve ( int testNumber, Scanner in, PrintWriter out ) { String s = in.next ( ) ; if ( s.contains ( ""A"" ) && s.contains ( ""B"" ) ) { out.println ( ""Yes"" ) ; } else { out.println ( ""No"" ) ; } } } }","import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.Scanner ; public class atcoder_ABC158_A { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; Scanner in = new Scanner ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; AStationAndBus solver = new AStationAndBus ( ) ; solver.solve ( 1, in, out ) ; out.close ( ) ; } static class AStationAndBus { public void solve ( int testNumber, Scanner in, PrintWriter out ) { String s = in.next ( ) ; if ( s.contains ( ""A"" ) && s.contains ( ""B"" ) ) { out.println ( ""Yes"" ) ; } else { out.println ( ""No"" ) ; } } } }"
StarCoder,avatar,Java,Python,codeforces_56_B.py,"import java.util.* ; import java.io.* ; import java.lang.Math ; public class codeforces_56_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int len = scan.nextInt ( ) ; int a [ ] = new int [ len ] ; for ( int i = 0 ; i < len ; i ++ ) { a [ i ] = scan.nextInt ( ) ; } int l = 0 ; int r = 0 ; boolean flag = False ; boolean isTrue = False ; loop : for ( int i = 0 ; i < len ; i ++ ) { if ( a [ i ]!= i + 1 and! flag ) { l = i + 1 ; flag = True ; continue ; } if ( a [ i ]!= i + 1 and flag ) { r = i + 1 ; if ( ( a [ r - 1 ] - a [ r - 2 ] > 0 ) ) { isTrue = True ; break loop ; } } } System.out.println ( (! isTrue )? l + "" "" + r : ""0"" + "" "" + ""0"" ) ; } }","import java.util.* ; import java.io.* ; import java.lang.Math ; public class codeforces_56_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int len = scan.nextInt ( ) ; int a [ ] = new int [ len ] ; for ( int i = 0 ; i < len ; i ++ ) { a [ i ] = scan.nextInt ( ) ; } int l = 0 ; int r = 0 ; boolean flag = False ; boolean isTrue = False ; loop : for ( int i = 0 ; i < len ; i ++ ) { if ( a [ i ]!= i + 1 and! flag ) { l = i + 1 ; flag = True ; continue ; } if ( a [ i ]!= i + 1 and flag ) { r = i + 1 ; if ( ( a [ r - 1 ] - a [ r - 2 ] > 0 ) ) { isTrue = True ; break loop ; } } } System.out.println ( (! isTrue )? l + "" "" + r : ""0"" + "" "" + ""0"" ) ; } }"
StarCoder,avatar,Java,Python,codeforces_579_A.py,"import java.util.* ; import java.util.ArrayList ; public class codeforces_579_A { public static void main ( String [ ] args ) { Scanner str = new Scanner ( System.in ) ; int n = str.nextInt ( ) ; String s = """" ; while ( n > 0 ) { int x = n % 2 ; n /= 2 ; s += x + """" ; } int ans = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == '1' ) { ans ++ ; } } System.out.println ( ans ) ; } }","import java.util.* ; import java.util.ArrayList ; public class codeforces_579_A { public static void main ( String [ ] args ) { Scanner str = new Scanner ( System.in ) ; int n = str.nextInt ( ) ; String s = """" ; while ( n > 0 ) { int x = n % 2 ; n /= 2 ; s += x + """" ; } int ans = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == '1' ) { ans ++ ; } } System.out.println ( ans ) ; } }"
StarCoder,avatar,Java,Python,codeforces_569_A.py,import java.util.Scanner ; public class codeforces_569_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int T = in.nextInt ( ) ; int S = in.nextInt ( ) ; int q = in.nextInt ( ) ; long previous = S ; int answer = 0 ; while ( previous < T ) { answer ++ ; previous *= q ; } System.out.println ( answer ) ; } },import java.util.Scanner ; public class codeforces_569_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int T = in.nextInt ( ) ; int S = in.nextInt ( ) ; int q = in.nextInt ( ) ; long previous = S ; int answer = 0 ; while ( previous < T ) { answer ++ ; previous *= q ; } System.out.println ( answer ) ; } }
StarCoder,avatar,Java,Python,codeforces_108_B.py,"import java.util.Arrays ; import java.util.Scanner ; public class codeforces_108_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in.nextInt ( ) ; } Arrays.sort ( a ) ; for ( int i = 0 ; i < a.length - 1 ; i ++ ) { if ( a [ i + 1 ] < a [ i ] * 2 && a [ i ]!= a [ i + 1 ] ) { System.out.println ( ""YES"" ) ; return ; } } System.out.println ( ""NO"" ) ; } }","import java.util.Arrays ; import java.util.Scanner ; public class codeforces_108_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in.nextInt ( ) ; } Arrays.sort ( a ) ; for ( int i = 0 ; i < a.length - 1 ; i ++ ) { if ( a [ i + 1 ] < a [ i ] * 2 && a [ i ]!= a [ i + 1 ] ) { System.out.println ( ""YES"" ) ; return ; } } System.out.println ( ""NO"" ) ; } }"
StarCoder,avatar,Java,Python,codeforces_518_B.py,"import java.util.* ; public class codeforces_518_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; StringBuilder s = new StringBuilder ( scan.next ( ) ) ; String t = scan.next ( ) ; int ura = 0 ; int opa = 0 ; Map < Character, Integer > tmap = new HashMap < > ( ) ; for ( int i = 0 ; i < t.length ( ) ; i ++ ) { Character ch = t.charAt ( i ) ; if (! tmap.containsKey ( ch ) ) tmap.put ( ch, 1 ) ; else tmap.put ( ch, tmap.get ( ch ) + 1 ) ; } int length = s.length ( ) ; for ( int i = 0 ; i < length ; i ++ ) { Character ch = s.charAt ( i ) ; Integer num = tmap.get ( ch ) ; if ( num == null ) continue ; int inum = num ; if ( inum == 1 ) tmap.remove ( ch ) ; else tmap.put ( ch, inum - 1 ) ; s.setCharAt ( i, 'Я' ) ; ura ++ ; } for ( int i = 0 ; i < length ; i ++ ) { Character ch = s.charAt ( i ) ; Character rch = reverse ( ch ) ; Integer num = tmap.get ( rch ) ; if ( num == null ) continue ; int inum = num ; if ( inum == 1 ) tmap.remove ( rch ) ; else tmap.put ( rch, inum - 1 ) ; opa ++ ; } System.out.println ( ura + "" "" + opa ) ; } public static Character reverse ( Character ch ) { if ( Character.isLowerCase ( ch ) ) { return Character.toUpperCase ( ch ) ; } else return Character.toLowerCase ( ch ) ; } }","import java.util.* ; public class codeforces_518_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; StringBuilder s = new StringBuilder ( scan.next ( ) ) ; String t = scan.next ( ) ; int ura = 0 ; int opa = 0 ; Map < Character, Integer > tmap = new HashMap < > ( ) ; for ( int i = 0 ; i < t.length ( ) ; i ++ ) { Character ch = t.charAt ( i ) ; if (! tmap.containsKey ( ch ) ) tmap.put ( ch, 1 ) ; else tmap.put ( ch, tmap.get ( ch ) + 1 ) ; } int length = s.length ( ) ; for ( int i = 0 ; i < length ; i ++ ) { Character ch = s.charAt ( i ) ; Integer num = tmap.get ( ch ) ; if ( num == null ) continue ; int inum = num ; if ( inum == 1 ) tmap.remove ( ch ) ; else tmap.put ( ch, inum - 1 ) ; s.setCharAt ( i, 'Я' ) ; ura ++ ; } for ( int i = 0 ; i < length ; i ++ ) { Character ch = s.charAt ( i ) ; Character rch = reverse ( ch ) ; Integer num = tmap.get ( rch ) ; if ( num == null ) continue ; int inum = num ; if ( inum == 1 ) tmap.remove ( rch ) ; else tmap.put ( rch, inum - 1 ) ; opa ++ ; } System.out.println ( ura + "" "" + opa ) ; } public static Character reverse ( Character ch ) { if ( Character.isLowerCase ( ch ) ) { return Character.toUpperCase ( ch ) ; } else return Character.toLowerCase ( ch ) ; } }"
StarCoder,avatar,Java,Python,codeforces_99_A.py,"import java.util.Scanner ; import java.util.ArrayList ; import java.util.Arrays ; import java.math.BigInteger ; public class codeforces_99_A { public static void main ( String [ ] args ) { char [ ] str = new Scanner ( System.in ).nextLine ( ).toCharArray ( ) ; int dotIndex = 0 ; for ( int i = 0 ; i < str.length ; i ++ ) if ( str [ i ] == '.' ) { dotIndex = i ; break ; } if ( str [ dotIndex - 1 ] == '9' ) { System.out.println ( ""GOTO Vasilisa."" ) ; } else if ( Integer.parseInt ( str [ dotIndex + 1 ] + """" ) > 4 ) { String _str = """" ; for ( int i = 0 ; i < dotIndex ; i ++ ) _str += str [ i ] ; System.out.println ( new BigInteger ( _str ).add ( new BigInteger ( ""1"" ) ).toString ( ) ) ; } else { for ( int i = 0 ; i < dotIndex ; i ++ ) System.out.print ( str [ i ] ) ; System.out.println ( ) ; } } }","import java.util.Scanner ; import java.util.ArrayList ; import java.util.Arrays ; import java.math.BigInteger ; public class codeforces_99_A { public static void main ( String [ ] args ) { char [ ] str = new Scanner ( System.in ).nextLine ( ).toCharArray ( ) ; int dotIndex = 0 ; for ( int i = 0 ; i < str.length ; i ++ ) if ( str [ i ] == '.' ) { dotIndex = i ; break ; } if ( str [ dotIndex - 1 ] == '9' ) { System.out.println ( ""GOTO Vasilisa."" ) ; } else if ( Integer.parseInt ( str [ dotIndex + 1 ] + """" ) > 4 ) { String _str = """" ; for ( int i = 0 ; i < dotIndex ; i ++ ) _str += str [ i ] ; System.out.println ( new BigInteger ( _str ).add ( new BigInteger ( ""1"" ) ).toString ( ) ) ; } else { for ( int i = 0 ; i < dotIndex ; i ++ ) System.out.print ( str [ i ] ) ; System.out.println ( ) ; } } }"
StarCoder,avatar,Java,Python,atcoder_ABC124_A.py,import java.util.Scanner ; public class atcoder_ABC124_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = Integer.parseInt ( sc.next ( ) ) ; int b = Integer.parseInt ( sc.next ( ) ) ; ; int sum = 0 ; for ( int i = 0 ; i < 2 ; i ++ ) { if ( a >= b ) { sum += a ; a = a - 1 ; } else { sum += b ; b = b - 1 ; } } System.out.println ( sum ) ; } },import java.util.Scanner ; public class atcoder_ABC124_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = Integer.parseInt ( sc.next ( ) ) ; int b = Integer.parseInt ( sc.next ( ) ) ; ; int sum = 0 ; for ( int i = 0 ; i < 2 ; i ++ ) { if ( a >= b ) { sum += a ; a = a - 1 ; } else { sum += b ; b = b - 1 ; } } System.out.println ( sum ) ; } }
StarCoder,avatar,Java,Python,codeforces_268_A.py,import java.util.* ; public class codeforces_268_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = Integer.parseInt ( sc.nextLine ( ) ) ; int result = 0 ; int [ ] h = new int [ n ] ; int [ ] g = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { h [ i ] = sc.nextInt ( ) ; g [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < n ; j ++ ) if ( h [ i ] == g [ j ] ) result ++ ; System.out.println ( result ) ; } },import java.util.* ; public class codeforces_268_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = Integer.parseInt ( sc.nextLine ( ) ) ; int result = 0 ; int [ ] h = new int [ n ] ; int [ ] g = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { h [ i ] = sc.nextInt ( ) ; g [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < n ; j ++ ) if ( h [ i ] == g [ j ] ) result ++ ; System.out.println ( result ) ; } }
StarCoder,avatar,Java,Python,codeforces_313_B.py,"import java.io.* ; import java.util.StringTokenizer ; class codeforces_313_B ( ) :
    def __init__ ( self ) :
        self.br = BufferedReader ( )
        self.pw = PrintWriter ( )
    def sol ( self ) :
        s = self.br.readLine ( )
        cum = [ 0 ] * ( len ( s ) + 1 )
        cum [ 0 ] = cum [ len ( s ) ] = 0
        for i in range ( 1, len ( s ) ) :
            if ( s.charAt ( i ) == s.charAt ( i - 1 ) ) :
                cum [ i ] = cum [ i - 1 ] + 1
            else :
                cum [ i ] = cum [ i - 1 ]
        q = Integer.parseInt ( self.br.readLine ( ) )
        while ( q --!= 0 ) :
            l, r = map ( int, self.br.readLine ( ).split ( ) )
            self.pw.println ( cum [ r ] - cum [ l - 1 ] )
    def __del__ ( self ) :
        self.br.close ( )
        self.pw.close ( )
if __name__ == '__main__' :
    c = codeforces_313_B ( )
    c.sol ( )","import sys

class codeforces_313_B ( ) :
    def sol ( self ) :
        s = sys.stdin.readline ( )
        cum = [ 0 ] * ( len ( s ) + 1 )
        cum [ 0 ] = cum [ len ( s ) ] = 0
        for i in range ( 1, len ( s ) ) :
            if ( s [ i ] == s [i - 1 ] ) :
                cum [ i ] = cum [ i - 1 ] + 1
            else :
                cum [ i ] = cum [ i - 1 ]
        q = int ( sys.stdin.readline ( ) )
        while ( q != 0 ) :
            q -= 1
            l, r = map ( int, sys.stdin.readline ( ).split ( ) )
            print ( cum [ r ] - cum [ l - 1 ] )
if __name__ == '__main__' :
    c = codeforces_313_B ( )
    c.sol ( )"
StarCoder,avatar,Java,Python,codeforces_340_A.py,"import java.util.Scanner ; public class codeforces_340_A { public static void main ( String [ ] sh ) { Scanner s = new Scanner ( System.in ) ; long x = s.nextInt ( ) ; long y = s.nextInt ( ) ; long a = s.nextInt ( ) ; long b = s.nextInt ( ) ; long j = 2, i, x1 = 0, y1 = 0, c = 0 ; boolean ans = True ; c = max ( x, y ) ; if ( c > b ) { System.out.println ( ""0"" ) ; ans = False ; } while ( c % min ( x, y )!= 0 and ans ) { if ( x > y ) { c = x * j ; j ++ ; } else { c = y * j ; j ++ ; } if ( c > b ) { System.out.println ( ""0"" ) ; ans = False ; break ; } } if ( ans ) { long count = 0 ; i = a ; for ( i = a ; i <= b ; i ++ ) { if ( i % c == 0 ) break ; } if ( i!= b + 1 ) System.out.println ( ( ( b - i ) / c ) + 1 ) ; else System.out.println ( ""0"" ) ; } } }","import java.util.Scanner ; public class codeforces_340_A { public static void main ( String [ ] sh ) { Scanner s = new Scanner ( System.in ) ; long x = s.nextInt ( ) ; long y = s.nextInt ( ) ; long a = s.nextInt ( ) ; long b = s.nextInt ( ) ; long j = 2, i, x1 = 0, y1 = 0, c = 0 ; boolean ans = True ; c = max ( x, y ) ; if ( c > b ) { System.out.println ( ""0"" ) ; ans = False ; } while ( c % min ( x, y )!= 0 and ans ) { if ( x > y ) { c = x * j ; j ++ ; } else { c = y * j ; j ++ ; } if ( c > b ) { System.out.println ( ""0"" ) ; ans = False ; break ; } } if ( ans ) { long count = 0 ; i = a ; for ( i = a ; i <= b ; i ++ ) { if ( i % c == 0 ) break ; } if ( i!= b + 1 ) System.out.println ( ( ( b - i ) / c ) + 1 ) ; else System.out.println ( ""0"" ) ; } } }"
StarCoder,avatar,Java,Python,codeforces_296_A.py,"import java.io.*;import java.util.StringTokenizer;public class codeforces_296_A{public static void main(String[] args){InputStream inputStream=System.in;OutputStream outputStream=System.out;InputReader in=new InputReader(inputStream);PrintWriter out=new PrintWriter(outputStream);Task solver=new Task();solver.solve(in,out);out.close();}static class Task{public void solve(InputReader in,PrintWriter out){int n=in.nextInt();int[] array=new int[1001];for(int i=0;i<n;i++){int index=in.nextInt();array[index]++;}int countMax=-1;for(int i=1;i<array.length;i++){if(countMax<array[i])countMax=array[i];}if(n%2==0){if(countMax<=n/2){out.println(""YES"");}else{out.println(""NO"");}}else{if(countMax<=n/2+1){out.println(""YES"");}else{out.println(""NO"");}}}}static class InputReader{BufferedReader reader;StringTokenizer tokenizer;public InputReader(InputStream stream){reader=new BufferedReader(new InputStreamReader(stream),32768);}}","import java.io.*;import java.util.StringTokenizer;public class codeforces_296_A{public static void main(String[] args){InputStream inputStream=System.in;OutputStream outputStream=System.out;InputReader in=new InputReader(inputStream);PrintWriter out=new PrintWriter(outputStream);Task solver=new Task();solver.solve(in,out);out.close();}static class Task{public void solve(InputReader in,PrintWriter out){int n=in.nextInt();int[] array=new int[1001];for(int i=0;i<n;i++){int index=in.nextInt();array[index]++;}int countMax=-1;for(int i=1;i<array.length;i++){if(countMax<array[i])countMax=array[i];}if(n%2==0){if(countMax<=n/2){out.println(""YES"");}else{out.println(""NO"");}}else{if(countMax<=n/2+1){out.println(""YES"");}else{out.println(""NO"");}}}}static class InputReader{BufferedReader reader;StringTokenizer tokenizer;public InputReader(InputStream stream){reader=new BufferedReader(new InputStreamReader(stream),32768);}}"
StarCoder,avatar,Java,Python,codeforces_637_A.py,"import sys
import collections

n = int(raw_input())

a = map(int, raw_input().split())

d = collections.defaultdict(int)

for i in a:
    d[i] += 1

max_v = max(d.values())

for i in a:
    if d[i] == max_v:
        print i
        break","import sys
import collections

n = int(input())

a = list(map(int, input().split()))

d = collections.defaultdict(int)

for i in a:
    d[i] += 1

max_v = max(d.values())

mm = collections.defaultdict(int)    
for i in range(n):
    mm[a[i]] += 1
    if mm[a[i]] == max_v:
        print(a[i])
        break"
StarCoder,avatar,Java,Python,codeforces_621_A.py,"import sys

n = int(raw_input())

list = []

for i in range(n):
    list.append(long(raw_input()))

odd = []

sum = 0

for i in list:
    if i % 2 == 0:
        sum += i
    else:
        odd.append(i)

odd.sort()

for i in odd:
    sum += i

if len(odd) % 2!= 0:
    sum -= odd[0]

print sum","import sys

n = int(input())

list = list(map(int, input().split()))

odd = []

sum = 0

for i in list:
    if i % 2 == 0:
        sum += i
    else:
        odd.append(i)

odd.sort()

for i in odd:
    sum += i

if len(odd) % 2!= 0:
    sum -= odd[0]

print(sum)"
StarCoder,avatar,Java,Python,atcoder_ABC135_D.py,import java.io.PrintWriter ; import java.util.ArrayList ; import java.util.Arrays ; import java.util.Scanner ; public class atcoder_ABC135_D { public static void main ( String [ ] args ) { new atcoder_ABC135_D ( ).run ( ) ; } final long MOD = ( long ) 1e9 + 7 ; void run ( ) { Scanner sc = new Scanner ( System.in ) ; char [ ] cs = sc.next ( ).toCharArray ( ) ; long [ ] [ ] dp = new long [ cs.length ] [ 13 ] ; int base = 1 ; for ( int i = 0 ; i < cs.length ; ++ i ) { if ( cs [ cs.length - 1 - i ] == '?' ) { for ( int pre = 0 ; pre < 13 ; ++ pre ) { for ( int next = 0 ; next < 10 ; ++ next ) { dp [ i ] [ ( base * next + pre ) % 13 ] += ( i > 0? dp [ i - 1 ] [ pre ] : ( pre == 0? 1 : 0 ) ) ; dp [ i ] [ ( base * next + pre ) % 13 ] %= MOD ; } } } else { int next = cs [ cs.length - 1 - i ] - '0' ; for ( int pre = 0 ; pre < 13 ; ++ pre ) { dp [ i ] [ ( base * next + pre ) % 13 ] += ( i > 0? dp [ i - 1 ] [ pre ] : ( pre == 0? 1 : 0 ) ) ; dp [ i ] [ ( base * next + pre ) % 13 ] %= MOD ; } } base = base * 10 % 13 ; } System.out.println ( dp [ dp.length - 1 ] [ 5 ] ) ; } void tr ( Object...objects ) { System.out.println ( Arrays.deepToString ( objects ) ) ; } },import java.io.PrintWriter ; import java.util.ArrayList ; import java.util.Arrays ; import java.util.Scanner ; public class atcoder_ABC135_D { public static void main ( String [ ] args ) { new atcoder_ABC135_D ( ).run ( ) ; } final long MOD = ( long ) 1e9 + 7 ; void run ( ) { Scanner sc = new Scanner ( System.in ) ; char [ ] cs = sc.next ( ).toCharArray ( ) ; long [ ] [ ] dp = new long [ cs.length ] [ 13 ] ; int base = 1 ; for ( int i = 0 ; i < cs.length ; ++ i ) { if ( cs [ cs.length - 1 - i ] == '?' ) { for ( int pre = 0 ; pre < 13 ; ++ pre ) { for ( int next = 0 ; next < 10 ; ++ next ) { dp [ i ] [ ( base * next + pre ) % 13 ] += ( i > 0? dp [ i - 1 ] [ pre ] : ( pre == 0? 1 : 0 ) ) ; dp [ i ] [ ( base * next + pre ) % 13 ] %= MOD ; } } } else { int next = cs [ cs.length - 1 - i ] - '0' ; for ( int pre = 0 ; pre < 13 ; ++ pre ) { dp [ i ] [ ( base * next + pre ) % 13 ] += ( i > 0? dp [ i - 1 ] [ pre ] : ( pre == 0? 1 : 0 ) ) ; dp [ i ] [ ( base * next + pre ) % 13 ] %= MOD ; } } base = base * 10 % 13 ; } System.out.println ( dp [ dp.length - 1 ] [ 5 ] ) ; } void tr ( Object...objects ) { System.out.println ( Arrays.deepToString ( objects ) ) ; } }
StarCoder,avatar,Java,Python,codeforces_624_B.py,import java.util.Arrays ; import java.util.Scanner ; public class codeforces_624_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; Long [ ] ans = new Long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { ans [ i ] = in.nextLong ( ) ; } Arrays.sort ( ans ) ; Long count = ans [ n - 1 ] ; for ( int i = n - 2 ; i >= 0 ; i -- ) { if ( ans [ i ] < ans [ i + 1 ] ) { count += ans [ i ] ; } else { while ( ans [ i ] >= ans [ i + 1 ] ) { ans [ i ] -- ; } if ( ans [ i ] > 0 ) { count += ans [ i ] ; } } } System.out.println ( count ) ; } },import java.util.Arrays ; import java.util.Scanner ; public class codeforces_624_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; Long [ ] ans = new Long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { ans [ i ] = in.nextLong ( ) ; } Arrays.sort ( ans ) ; Long count = ans [ n - 1 ] ; for ( int i = n - 2 ; i >= 0 ; i -- ) { if ( ans [ i ] < ans [ i + 1 ] ) { count += ans [ i ] ; } else { while ( ans [ i ] >= ans [ i + 1 ] ) { ans [ i ] -- ; } if ( ans [ i ] > 0 ) { count += ans [ i ] ; } } } System.out.println ( count ) ; } }
StarCoder,avatar,Java,Python,codeforces_369_B.py,"import java.util.Arrays ; import java.util.Scanner ; public class codeforces_369_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int k = scan.nextInt ( ) ; int l = scan.nextInt ( ) ; int r = scan.nextInt ( ) ; int sAll = scan.nextInt ( ) ; int sk = scan.nextInt ( ) ; int [ ] ans = getPoints ( n, k, l, r, sAll, sk ) ; for ( int num : ans ) { System.out.print ( num + "" "" ) ; } } public static int [ ] getPoints ( int n, int k, int l, int r, int sAll, int sk ) { int [ ] ans = new int [ n ] ; Arrays.fill ( ans, l ) ; sAll -= sk + ( n - k ) * l ; sk -= k * l ; while ( sk > 0 ) { int idx = n - 1 ; while ( sk > 0 && idx >= n - k ) { ans [ idx -- ] ++ ; sk -- ; } } while ( sAll > 0 ) { int idx = 0 ; while ( sAll > 0 && idx < n - k ) { ans [ idx ++ ] ++ ; sAll -- ; } } return ans ; } }","import java.util.Arrays ; import java.util.Scanner ; public class codeforces_369_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int k = scan.nextInt ( ) ; int l = scan.nextInt ( ) ; int r = scan.nextInt ( ) ; int sAll = scan.nextInt ( ) ; int sk = scan.nextInt ( ) ; int [ ] ans = getPoints ( n, k, l, r, sAll, sk ) ; for ( int num : ans ) { System.out.print ( num + "" "" ) ; } } public static int [ ] getPoints ( int n, int k, int l, int r, int sAll, int sk ) { int [ ] ans = new int [ n ] ; Arrays.fill ( ans, l ) ; sAll -= sk + ( n - k ) * l ; sk -= k * l ; while ( sk > 0 ) { int idx = n - 1 ; while ( sk > 0 && idx >= n - k ) { ans [ idx -- ] ++ ; sk -- ; } } while ( sAll > 0 ) { int idx = 0 ; while ( sAll > 0 && idx < n - k ) { ans [ idx ++ ] ++ ; sAll -- ; } } return ans ; } }"
StarCoder,avatar,Java,Python,atcoder_ABC147_D.py,"import java.util.*;
public class atcoder_ABC147_D {
    public static void main(String[] args) {
        long startTime = System.currentTimeMillis();
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long div = (long) Math.pow(10, 9) + 7;
        long[] A = new long[n];
        long ans = 0;
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextLong();
        }
        for (int i = 0; i < 60; i++) {
            long a = 0;
            long count1 = 0;
            for (int j = 0; j < n; j++) {
                if ((A[j] >> i & 1) == 1) count1++;
            }
            a = a + count1 * (n - count1);
            for (int j = 0; j < i; j++) {
                a = (a << 1) % div;
            }
            ans += a;
            ans %= div;
        }
        System.out.println(ans);
        long endTime = System.currentTimeMillis();
    }
}","import java.util.*;
public class atcoder_ABC147_D {
    public static void main(String[] args) {
        long startTime = System.currentTimeMillis();
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long div = (long) Math.pow(10, 9) + 7;
        long[] A = new long[n];
        long ans = 0;
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextLong();
        }
        for (int i = 0; i < 60; i++) {
            long a = 0;
            long count1 = 0;
            for (int j = 0; j < n; j++) {
                if ((A[j] >> i & 1) == 1) count1++;
            }
            a = a + count1 * (n - count1);
            for (int j = 0; j < i; j++) {
                a = (a << 1) % div;
            }
            ans += a;
            ans %= div;
        }
        System.out.println(ans);
        long endTime = System.currentTimeMillis();
    }
}"
StarCoder,avatar,Java,Python,codeforces_86_A.py,"import java.util.Scanner ; import java.util.Arrays ; public class codeforces_86_A { public static int power ( Long a ) { int res = 0 ; while ( a > 0 ) { res ++ ; a = a / 10 ; } return res ; } public static long mult ( Long a ) { int pow = power ( a ) ; long max = 0 ; for ( int j = 0 ; j < pow ; ++ j ) { max = max * 10 + 9 ; } return a * ( max - a ) ; } public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; long l = in.nextLong ( ) ; long r = in.nextLong ( ) ; long res = 0 ; long [ ] maxxes = new long [ 10 ] ; long temp = 0 ; for ( int i = 0 ; i < 10 ; ++ i ) { temp = temp * 10 + 9 ; maxxes [ i ] = temp / 2 * ( temp - temp / 2 ) ; } res = Math.max ( mult ( l ), res ) ; res = Math.max ( mult ( r ), res ) ; temp = 0 ; for ( int i = 0 ; i < 10 ; ++ i ) { temp = temp * 10 + 9 ; if ( l <= temp / 2 && temp / 2 <= r ) res = Math.max ( maxxes [ i ], res ) ; } System.out.println ( res ) ; } }","import java.util.Scanner ; import java.util.Arrays ; public class codeforces_86_A { public static int power ( Long a ) { int res = 0 ; while ( a > 0 ) { res ++ ; a = a / 10 ; } return res ; } public static long mult ( Long a ) { int pow = power ( a ) ; long max = 0 ; for ( int j = 0 ; j < pow ; ++ j ) { max = max * 10 + 9 ; } return a * ( max - a ) ; } public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; long l = in.nextLong ( ) ; long r = in.nextLong ( ) ; long res = 0 ; long [ ] maxxes = new long [ 10 ] ; long temp = 0 ; for ( int i = 0 ; i < 10 ; ++ i ) { temp = temp * 10 + 9 ; maxxes [ i ] = temp / 2 * ( temp - temp / 2 ) ; } res = Math.max ( mult ( l ), res ) ; res = Math.max ( mult ( r ), res ) ; temp = 0 ; for ( int i = 0 ; i < 10 ; ++ i ) { temp = temp * 10 + 9 ; if ( l <= temp / 2 && temp / 2 <= r ) res = Math.max ( maxxes [ i ], res ) ; } System.out.println ( res ) ; } }"
StarCoder,avatar,Java,Python,codeforces_327_A.py,import java.util.Scanner ; public class codeforces_327_A { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; if ( scanner.hasNext ( ) ) { int n = scanner.nextInt ( ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = scanner.nextInt ( ) ; int max = Integer.MIN_VALUE ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i ; j < n ; j ++ ) { int x = 0 ; int brr [ ] = new int [ n ] ; for ( int k : arr ) brr [ x ++ ] = k ; for ( int k = i ; k <= j ; k ++ ) { if ( brr [ k ] == 0 ) brr [ k ] = 1 ; else brr [ k ] = 0 ; } int count = checKNo ( brr ) ; if ( count > max ) max = count ; } } if ( n == 1 ) { if ( arr [ 0 ] == 1 ) System.out.println ( 0 ) ; else System.out.println ( 1 ) ; } else { System.out.println ( max ) ; } } } private static int checKNo ( int [ ] brr ) { int val = 0 ; for ( int i : brr ) if ( i == 1 ) ++ val ; return val ; } },import java.util.Scanner ; public class codeforces_327_A { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; if ( scanner.hasNext ( ) ) { int n = scanner.nextInt ( ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = scanner.nextInt ( ) ; int max = Integer.MIN_VALUE ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i ; j < n ; j ++ ) { int x = 0 ; int brr [ ] = new int [ n ] ; for ( int k : arr ) brr [ x ++ ] = k ; for ( int k = i ; k <= j ; k ++ ) { if ( brr [ k ] == 0 ) brr [ k ] = 1 ; else brr [ k ] = 0 ; } int count = checKNo ( brr ) ; if ( count > max ) max = count ; } } if ( n == 1 ) { if ( arr [ 0 ] == 1 ) System.out.println ( 0 ) ; else System.out.println ( 1 ) ; } else { System.out.println ( max ) ; } } } private static int checKNo ( int [ ] brr ) { int val = 0 ; for ( int i : brr ) if ( i == 1 ) ++ val ; return val ; } }
StarCoder,avatar,Java,Python,atcoder_AGC043_B.py,"import java.io.* ; import java.util.* ; public class atcoder_AGC043_B { private int cal ( String s, char c ) { int n = s.length ( ) ; int m = n - 1 ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s.charAt ( i ) == c && ( m & i ) == i ) { ans ^= 1 ; } } return ans ; } private void solve ( ) { int n = sc.nextInt ( ) ; String s = sc.next ( ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 1 ; i < n ; i ++ ) { sb.append ( Math.abs ( s.charAt ( i ) - s.charAt ( i - 1 ) ) ) ; } if ( n == 2 ) { out.println ( sb.charAt ( 0 ) ) ; return ; } s = sb.toString ( ) ; if ( s.contains ( ""1"" ) ) { out.println ( cal ( s, '1' ) ) ; } else { out.println ( cal ( s, '2' ) * 2 ) ; } } private static PrintWriter out ; private static MyScanner sc ; private static class MyScanner { BufferedReader br ; StringTokenizer st ; private MyScanner ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null ||! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } } public static void main ( String [ ] args ) { out = new PrintWriter ( new BufferedOutputStream ( System.out ) ) ; sc = new MyScanner ( ) ; new atcoder_AGC043_B ( ).solve ( ) ; out.close ( ) ; } }","import java.io.* ; import java.util.* ; public class atcoder_AGC043_B { private int cal ( String s, char c ) { int n = s.length ( ) ; int m = n - 1 ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s.charAt ( i ) == c && ( m & i ) == i ) { ans ^= 1 ; } } return ans ; } private void solve ( ) { int n = sc.nextInt ( ) ; String s = sc.next ( ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 1 ; i < n ; i ++ ) { sb.append ( Math.abs ( s.charAt ( i ) - s.charAt ( i - 1 ) ) ) ; } if ( n == 2 ) { out.println ( sb.charAt ( 0 ) ) ; return ; } s = sb.toString ( ) ; if ( s.contains ( ""1"" ) ) { out.println ( cal ( s, '1' ) ) ; } else { out.println ( cal ( s, '2' ) * 2 ) ; } } private static PrintWriter out ; private static MyScanner sc ; private static class MyScanner { BufferedReader br ; StringTokenizer st ; private MyScanner ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null ||! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } } public static void main ( String [ ] args ) { out = new PrintWriter ( new BufferedOutputStream ( System.out ) ) ; sc = new MyScanner ( ) ; new atcoder_AGC043_B ( ).solve ( ) ; out.close ( ) ; } }"
StarCoder,avatar,Java,Python,atcoder_ABC178_A.py,import java.util.* ; import java.io.* ; public class atcoder_ABC178_A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int x = Integer.parseInt ( scan.next ( ) ) ; boolean bool = x == 1? true : false ; int result =! bool? 1 : 0 ; PrintWriter out = new PrintWriter ( System.out ) ; out.println ( result ) ; out.flush ( ) ; } },import java.util.* ; import java.io.* ; public class atcoder_ABC178_A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int x = Integer.parseInt ( scan.next ( ) ) ; boolean bool = x == 1? true : false ; int result =! bool? 1 : 0 ; PrintWriter out = new PrintWriter ( System.out ) ; out.println ( result ) ; out.flush ( ) ; } }
StarCoder,avatar,Java,Python,codeforces_609_B.py,import java.util.Scanner ; public class codeforces_609_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int m = in.nextInt ( ) ; int arr [ ] = new int [ n ] ; int gen [ ] = new int [ 11 ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = in.nextInt ( ) ; gen [ arr [ i ] ] ++ ; } long ans = 0 ; for ( int i = 1 ; i <= m ; i ++ ) { for ( int k = 1 ; k <= m ; k ++ ) { if ( i!= k ) { ans += ( long ) gen [ i ] * gen [ k ] ; } } } System.out.println ( ans / 2 ) ; } },import java.util.Scanner ; public class codeforces_609_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int m = in.nextInt ( ) ; int arr [ ] = new int [ n ] ; int gen [ ] = new int [ 11 ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = in.nextInt ( ) ; gen [ arr [ i ] ] ++ ; } long ans = 0 ; for ( int i = 1 ; i <= m ; i ++ ) { for ( int k = 1 ; k <= m ; k ++ ) { if ( i!= k ) { ans += ( long ) gen [ i ] * gen [ k ] ; } } } System.out.println ( ans / 2 ) ; } }
StarCoder,avatar,Java,Python,codeforces_456_A.py,"import java.util.ArrayList ; import java.util.Arrays ; import java.util.Scanner ; public class codeforces_456_A { static ArrayList md = new ArrayList ( ) ; public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; int temp = 0 ; int q = 0 ; int w = 0, e = 0 ; boolean f = False ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in.nextInt ( ) ; b [ i ] = in.nextInt ( ) ; if ( temp < a [ i ] ) { if ( q > b [ i ] ) { f = True ; } q = b [ i ] ; temp = a [ i ] ; } if ( temp > a [ i ] ) { if ( q < b [ i ] ) { f = True ; } q = b [ i ] ; temp = a [ i ] ; } if ( a [ i ] > w ) { w = a [ i ] ; if ( b [ i ] < e ) { f = True ; } e = b [ i ] ; } if ( a [ i ] < w ) { if ( b [ i ] > e ) { f = True ; } } } if ( f == True ) { System.out.println ( ""Happy Alex"" ) ; } else System.out.println ( ""Poor Alex"" ) ; } }","import java.util.ArrayList ; import java.util.Arrays ; import java.util.Scanner ; public class codeforces_456_A { static ArrayList md = new ArrayList ( ) ; public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; int temp = 0 ; int q = 0 ; int w = 0, e = 0 ; boolean f = False ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in.nextInt ( ) ; b [ i ] = in.nextInt ( ) ; if ( temp < a [ i ] ) { if ( q > b [ i ] ) { f = True ; } q = b [ i ] ; temp = a [ i ] ; } if ( temp > a [ i ] ) { if ( q < b [ i ] ) { f = True ; } q = b [ i ] ; temp = a [ i ] ; } if ( a [ i ] > w ) { w = a [ i ] ; if ( b [ i ] < e ) { f = True ; } e = b [ i ] ; } if ( a [ i ] < w ) { if ( b [ i ] > e ) { f = True ; } } } if ( f == True ) { System.out.println ( ""Happy Alex"" ) ; } else System.out.println ( ""Poor Alex"" ) ; } }"
StarCoder,avatar,Java,Python,codeforces_682_B.py,import java.io.* ; import java.util.* ; public class codeforces_682_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int n = in.nextInt ( ) ; ArrayList < Integer > list = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { list.add ( in.nextInt ( ) ) ; } Collections.sort ( list ) ; int c = 1 ; for ( int i = 0 ; i < n ; i ++ ) { if ( list.get ( i ) >= c ) { c ++ ; } } pw.println ( c ) ; pw.close ( ) ; } static void debug ( Object...obj ) { System.err.println ( Arrays.deepToString ( obj ) ) ; } },import java.io.* ; import java.util.* ; public class codeforces_682_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int n = in.nextInt ( ) ; ArrayList < Integer > list = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { list.add ( in.nextInt ( ) ) ; } Collections.sort ( list ) ; int c = 1 ; for ( int i = 0 ; i < n ; i ++ ) { if ( list.get ( i ) >= c ) { c ++ ; } } pw.println ( c ) ; pw.close ( ) ; } static void debug ( Object...obj ) { System.err.println ( Arrays.deepToString ( obj ) ) ; } }
StarCoder,avatar,Java,Python,atcoder_AGC012_A.py,import java.util.* ; import static java.lang.Math.* ; public class atcoder_AGC012_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] array = new int [ 3 * n ] ; for ( int i = 0 ; i < array.length ; i ++ ) array [ i ] = sc.nextInt ( ) ; Arrays.sort ( array ) ; int head = array.length - 2 ; long res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { res += array [ head ] ; head -= 2 ; } System.out.println ( res ) ; } },import java.util.* ; import static java.lang.Math.* ; public class atcoder_AGC012_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] array = new int [ 3 * n ] ; for ( int i = 0 ; i < array.length ; i ++ ) array [ i ] = sc.nextInt ( ) ; Arrays.sort ( array ) ; int head = array.length - 2 ; long res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { res += array [ head ] ; head -= 2 ; } System.out.println ( res ) ; } }
StarCoder,avatar,Java,Python,atcoder_AGC014_D.py,"import java.io.* ; import java.util.* ; public class atcoder_AGC014_D { static ArrayList < Integer > [ ] g ; static int maxMatching ( int v, int p ) { int a = 0 ; int o = 0 ; for ( int w : g [ v ] ) { if ( w == p ) continue ; int r = maxMatching ( w, v ) ; a += r / 2 ; o += r % 2 ; } return 2 * a + Math.min ( 1, o ) + 1 ; } @ SuppressWarnings ( ""unchecked"" ) public static void main ( String [ ] args ) { MyScanner sc = new MyScanner ( ) ; out = new PrintWriter ( new BufferedOutputStream ( System.out ) ) ; int n = sc.nextInt ( ) ; g = new ArrayList [ n ] ; Arrays.setAll ( g, x -> new ArrayList < Integer > ( ) ) ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int a = sc.nextInt ( ) - 1 ; int b = sc.nextInt ( ) - 1 ; g [ a ].add ( b ) ; g [ b ].add ( a ) ; } int m = maxMatching ( 0, - 1 ) / 2 ; out.println ( 2 * m == n? ""Second"" : ""First"" ) ; out.close ( ) ; } public static PrintWriter out ; public static class MyScanner { BufferedReader br ; StringTokenizer st ; public MyScanner ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null ||! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = """" ; try { str = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } }","import java.io.* ; import java.util.* ; public class atcoder_AGC014_D { static ArrayList < Integer > [ ] g ; static int maxMatching ( int v, int p ) { int a = 0 ; int o = 0 ; for ( int w : g [ v ] ) { if ( w == p ) continue ; int r = maxMatching ( w, v ) ; a += r / 2 ; o += r % 2 ; } return 2 * a + Math.min ( 1, o ) + 1 ; } @ SuppressWarnings ( ""unchecked"" ) public static void main ( String [ ] args ) { MyScanner sc = new MyScanner ( ) ; out = new PrintWriter ( new BufferedOutputStream ( System.out ) ) ; int n = sc.nextInt ( ) ; g = new ArrayList [ n ] ; Arrays.setAll ( g, x -> new ArrayList < Integer > ( ) ) ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int a = sc.nextInt ( ) - 1 ; int b = sc.nextInt ( ) - 1 ; g [ a ].add ( b ) ; g [ b ].add ( a ) ; } int m = maxMatching ( 0, - 1 ) / 2 ; out.println ( 2 * m == n? ""Second"" : ""First"" ) ; out.close ( ) ; } public static PrintWriter out ; public static class MyScanner { BufferedReader br ; StringTokenizer st ; public MyScanner ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null ||! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = """" ; try { str = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } }"
StarCoder,avatar,Java,Python,atcoder_AGC010_B.py,"import sys

def possible(N, A):
    sum = 0
    for i in range(N):
        sum += A[i]
    NS = (N * (N + 1)) / 2
    if sum % NS!= 0:
        return False
    K = sum / NS
    for i in range(N):
        j = i == 0? N - 1 : i - 1
        d = K - (A[i] - A[j])
        if d < 0 or d % N!= 0:
            return False
    return True

N = int(input())
A = [int(x) for x in input().split()]
if possible(N, A):
    print(""YES"")
else:
    print(""NO"")","import sys

def possible(N, A):
    sum = 0
    for i in range(N):
        sum += A[i]
    NS = (N * (N + 1)) / 2
    if sum % NS!= 0:
        return False
    K = sum / NS
    for i in range(N):
        j = N - 1 if i == 0 else i - 1
        d = K - (A[i] - A[j])
        if d < 0 or d % N!= 0:
            return False
    return True

N = int(input())
A = [int(x) for x in input().split()]
if possible(N, A):
    print(""YES"")
else:
    print(""NO"")"
StarCoder,avatar,Java,Python,codeforces_581_B.py,"import java.util.* ; import java.io.* ; public class codeforces_581_B { static TreeSet < Long > set ; public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int n = in.nextInt ( ) ; long [ ] a = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = in.nextLong ( ) ; long [ ] dp = new long [ n + 1 ] ; Arrays.fill ( dp, - 1 ) ; dp [ n - 1 ] = a [ n - 1 ] ; for ( int i = n - 1 ; i >= 0 ; i -- ) { dp [ i ] = Math.max ( dp [ i + 1 ], a [ i ] ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > dp [ i + 1 ] ) pw.print ( 0 + "" "" ) ; else pw.print ( ( dp [ i + 1 ] - a [ i ] + 1 ) + "" "" ) ; } pw.println ( ) ; pw.close ( ) ; } static void debug ( Object...obj ) { System.err.println ( Arrays.deepToString ( obj ) ) ; } }","import java.util.* ; import java.io.* ; public class codeforces_581_B { static TreeSet < Long > set ; public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int n = in.nextInt ( ) ; long [ ] a = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = in.nextLong ( ) ; long [ ] dp = new long [ n + 1 ] ; Arrays.fill ( dp, - 1 ) ; dp [ n - 1 ] = a [ n - 1 ] ; for ( int i = n - 1 ; i >= 0 ; i -- ) { dp [ i ] = Math.max ( dp [ i + 1 ], a [ i ] ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > dp [ i + 1 ] ) pw.print ( 0 + "" "" ) ; else pw.print ( ( dp [ i + 1 ] - a [ i ] + 1 ) + "" "" ) ; } pw.println ( ) ; pw.close ( ) ; } static void debug ( Object...obj ) { System.err.println ( Arrays.deepToString ( obj ) ) ; } }"
StarCoder,avatar,Java,Python,codeforces_146_A.py,"import java.util.* ; import static java.lang.Math.* ; public class codeforces_146_A { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System.in ) ; int x = 0, y = 0 ; int t = 0 ; int n = in.nextInt ( ) ; String str = in.next ( ) ; char l [ ] = new char [ str.length ( ) ] ; l = str.toCharArray ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( l [ i ]!= '4' && l [ i ]!= '7' ) { t = 1 ; } } if ( t == 1 ) { System.out.println ( ""NO"" ) ; } else { for ( int i = 0 ; i < n / 2 ; i ++ ) { x = x + Character.getNumericValue ( l [ i ] ) ; } for ( int i = n - 1 ; i > ( n / 2 ) - 1 ; i -- ) { y = y + Character.getNumericValue ( l [ i ] ) ; } if ( x == y ) { System.out.println ( ""YES"" ) ; } else { System.out.println ( ""NO"" ) ; } } } }","import java.util.* ; import static java.lang.Math.* ; public class codeforces_146_A { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System.in ) ; int x = 0, y = 0 ; int t = 0 ; int n = in.nextInt ( ) ; String str = in.next ( ) ; char l [ ] = new char [ str.length ( ) ] ; l = str.toCharArray ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( l [ i ]!= '4' && l [ i ]!= '7' ) { t = 1 ; } } if ( t == 1 ) { System.out.println ( ""NO"" ) ; } else { for ( int i = 0 ; i < n / 2 ; i ++ ) { x = x + Character.getNumericValue ( l [ i ] ) ; } for ( int i = n - 1 ; i > ( n / 2 ) - 1 ; i -- ) { y = y + Character.getNumericValue ( l [ i ] ) ; } if ( x == y ) { System.out.println ( ""YES"" ) ; } else { System.out.println ( ""NO"" ) ; } } } }"
StarCoder,avatar,Java,Python,codeforces_608_A.py,"import java.util.Scanner ; import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.nio.charset.MalformedInputException ; import java.util.StringTokenizer ; import java.util.Arrays ; import java.util.HashSet ; def main ( ): in = FastScanner ( ) ; sc = Scanner ( System.in ) ; o = PrintWriter ( System.out ) ; n = sc.nextInt ( ) ; s = sc.nextInt ( ) ; max = 0 ; while ( n > 0 ): f = sc.nextInt ( ) ; t = sc.nextInt ( ) ; if ( max < f + t ): max = f + t ; n -= 1 ; o.println ( max ) ; o.close ( ) ; class FastScanner ( ): def __init__ ( self ): self. br = BufferedReader ( InputStreamReader ( System.in ) ) ; self. st = StringTokenizer ( """" ) ; def next ( self ) : while ( not self. st. hasMoreElements ( ) ) : try : self. st = StringTokenizer ( self. br. readLine ( ) ) ; except ( IOException e ) : e. printStackTrace ( ) ; return self. st. nextToken ( ) ; def nextLine ( self ) : String str = """" ; try : str = self. br. readLine ( ) ; except ( IOException e ) : e. printStackTrace ( ) ; return str ; def nextByte ( self ) : return Byte. parseByte ( next ( ) ) ; def nextShort ( self ) : return Short. parseShort ( next ( ) ) ; def nextInt ( self ) : return Integer. parseInt ( next ( ) ) ; def nextLong ( self ) : return java. lang. Long. parseLong ( next ( ) ) ; def nextDouble ( self ) : return Double. parseDouble ( next ( ) ) ; if __name__ == ""__main__"" : main ( )","import java.util.Scanner ; import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.nio.charset.MalformedInputException ; import java.util.StringTokenizer ; import java.util.Arrays ; import java.util.HashSet ; def main ( ): in = FastScanner ( ) ; sc = Scanner ( System.in ) ; o = PrintWriter ( System.out ) ; n = sc.nextInt ( ) ; s = sc.nextInt ( ) ; max = 0 ; while ( n > 0 ): f = sc.nextInt ( ) ; t = sc.nextInt ( ) ; if ( max < f + t ): max = f + t ; n -= 1 ; o.println ( max ) ; o.close ( ) ; class FastScanner ( ): def __init__ ( self ): self. br = BufferedReader ( InputStreamReader ( System.in ) ) ; self. st = StringTokenizer ( """" ) ; def next ( self ) : while ( not self. st. hasMoreElements ( ) ) : try : self. st = StringTokenizer ( self. br. readLine ( ) ) ; except ( IOException e ) : e. printStackTrace ( ) ; return self. st. nextToken ( ) ; def nextLine ( self ) : String str = """" ; try : str = self. br. readLine ( ) ; except ( IOException e ) : e. printStackTrace ( ) ; return str ; def nextByte ( self ) : return Byte. parseByte ( next ( ) ) ; def nextShort ( self ) : return Short. parseShort ( next ( ) ) ; def nextInt ( self ) : return Integer. parseInt ( next ( ) ) ; def nextLong ( self ) : return java. lang. Long. parseLong ( next ( ) ) ; def nextDouble ( self ) : return Double. parseDouble ( next ( ) ) ; if __name__ == ""__main__"" : main ( )"
StarCoder,avatar,Java,Python,codeforces_203_A.py,"import java.io.*;import java.util.*;
public class codeforces_203_A {
	private void solve ( ) {
		int x = nextInt ( ) ;
		int t = nextInt ( ) ;
		int a = nextInt ( ) ;
		int b = nextInt ( ) ;
		int da = nextInt ( ) ;
		int db = nextInt ( ) ;
		int first ;
		int second ;
		boolean ok = false ;
		for ( int i = 0 ; i < t ; i ++ ) {
			first = a - ( da * i ) ;
			for ( int j = 0 ; j < t ; j ++ ) {
				second = b - ( db * j ) ;
				if ( second + first == x || second == x || first == x || x == 0 ) {
					ok = true ;
					break ;
				}
			}
		}
		if ( ok ) out.print ( ""YES"" ) ;
		else out.print ( ""NO"" ) ;
	}
	public static void main ( String [ ] args ) {
		new codeforces_203_A ( ).run ( ) ;
	}
	BufferedReader br ;
	StringTokenizer st ;
	PrintWriter out ;
	private void run ( ) {
		try {
			br = new BufferedReader ( new InputStreamReader ( System.in ) ) ;
			out = new PrintWriter ( System.out ) ;
			solve ( ) ;
			br.close ( ) ;
			out.close ( ) ;
		} catch ( IOException e ) {
			e.printStackTrace ( ) ;
		}
	}
	private int nextInt ( ) {
		return Integer.parseInt ( next ( ) ) ;
	}
	private String next ( ) {
		while ( st == null ||! st.hasMoreTokens ( ) ) {
			try {
				st = new StringTokenizer ( br.readLine ( ) ) ;
			} catch ( IOException e ) {
				e.printStackTrace ( ) ;
				return ""END_OF_FILE"" ;
			}
		}
		return st.nextToken ( ) ;
	}
}","import java.io.*;import java.util.*;
public class codeforces_203_A {
	private void solve ( ) {
		int x = nextInt ( ) ;
		int t = nextInt ( ) ;
		int a = nextInt ( ) ;
		int b = nextInt ( ) ;
		int da = nextInt ( ) ;
		int db = nextInt ( ) ;
		int first ;
		int second ;
		boolean ok = false ;
		for ( int i = 0 ; i < t ; i ++ ) {
			first = a - ( da * i ) ;
			for ( int j = 0 ; j < t ; j ++ ) {
				second = b - ( db * j ) ;
				if ( second + first == x || second == x || first == x || x == 0 ) {
					ok = true ;
					break ;
				}
			}
		}
		if ( ok ) out.print ( ""YES"" ) ;
		else out.print ( ""NO"" ) ;
	}
	public static void main ( String [ ] args ) {
		new codeforces_203_A ( ).run ( ) ;
	}
	BufferedReader br ;
	StringTokenizer st ;
	PrintWriter out ;
	private void run ( ) {
		try {
			br = new BufferedReader ( new InputStreamReader ( System.in ) ) ;
			out = new PrintWriter ( System.out ) ;
			solve ( ) ;
			br.close ( ) ;
			out.close ( ) ;
		} catch ( IOException e ) {
			e.printStackTrace ( ) ;
		}
	}
	private int nextInt ( ) {
		return Integer.parseInt ( next ( ) ) ;
	}
	private String next ( ) {
		while ( st == null ||! st.hasMoreTokens ( ) ) {
			try {
				st = new StringTokenizer ( br.readLine ( ) ) ;
			} catch ( IOException e ) {
				e.printStackTrace ( ) ;
				return ""END_OF_FILE"" ;
			}
		}
		return st.nextToken ( ) ;
	}
}"
StarCoder,avatar,Java,Python,codeforces_400_B.py,"import java.util.HashMap ; import java.util.HashSet ; import java.util.Scanner ; public class codeforces_400_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; String arrs [ ] = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arrs [ i ] = sc.next ( ) ; } int [ ] length = new int [ n ] ; int index = 0 ; int returnDex = 0 ; for ( String tmp : arrs ) { int dexG = tmp.indexOf ( ""G"" ) ; int dexS = tmp.indexOf ( ""S"" ) ; if ( dexG > dexS ) { returnDex = - 1 ; } length [ index ++ ] = dexS - dexG ; } HashSet set = new HashSet < Integer > ( ) ; for ( int len : length ) { set.add ( len ) ; } if ( returnDex == - 1 ) { System.out.println ( returnDex ) ; } else { System.out.println ( set.size ( ) ) ; } } }","import java.util.HashMap ; import java.util.HashSet ; import java.util.Scanner ; public class codeforces_400_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; String arrs [ ] = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arrs [ i ] = sc.next ( ) ; } int [ ] length = new int [ n ] ; int index = 0 ; int returnDex = 0 ; for ( String tmp : arrs ) { int dexG = tmp.indexOf ( ""G"" ) ; int dexS = tmp.indexOf ( ""S"" ) ; if ( dexG > dexS ) { returnDex = - 1 ; } length [ index ++ ] = dexS - dexG ; } HashSet set = new HashSet < Integer > ( ) ; for ( int len : length ) { set.add ( len ) ; } if ( returnDex == - 1 ) { System.out.println ( returnDex ) ; } else { System.out.println ( set.size ( ) ) ; } } }"
StarCoder,avatar,Java,Python,codeforces_110_B.py,"import java.util.* ; public class codeforces_110_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n, i, j, p = 97 ; n = sc.nextInt ( ) ; char c [ ] = new char [ n ] ; for ( i = 0 ; i < 4 ; i ++ ) { for ( j = i ; j < n ; j += 4 ) c [ j ] = ( char ) p ; p ++ ; } for ( i = 0 ; i < n ; i ++ ) System.out.print ( c [ i ] ) ; } }","import java.util.* ; public class codeforces_110_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n, i, j, p = 97 ; n = sc.nextInt ( ) ; char c [ ] = new char [ n ] ; for ( i = 0 ; i < 4 ; i ++ ) { for ( j = i ; j < n ; j += 4 ) c [ j ] = ( char ) p ; p ++ ; } for ( i = 0 ; i < n ; i ++ ) System.out.print ( c [ i ] ) ; } }"
StarCoder,avatar,Java,Python,codeforces_147_A.py,"import sys

def isLatinLetter(c):
    return c >= 'a' and c <= 'z'

def isPunctuation(c):
    if c == '.':
        return True
    if c == ',':
        return True
    if c == '!':
        return True
    if c == '?':
        return True
    return False

def main():
    s = sys.stdin.readline()
    sb = []
    sb.append(s[0])
    n = len(s)
    for i in range(1, n):
        c = s[i]
        if isLatinLetter(c):
            if not isLatinLetter(s[i - 1]):
                sb.append(' ')
            sb.append(c)
        elif isPunctuation(c):
            sb.append(c)
    print ''.join(sb)

if __name__ == '__main__':
    main()","import sys

def isLatinLetter(c):
    return c >= 'a' and c <= 'z'

def isPunctuation(c):
    if c == '.':
        return True
    if c == ',':
        return True
    if c == '!':
        return True
    if c == '?':
        return True
    return False

def main():
    s = sys.stdin.readline()
    sb = []
    sb.append(s[0])
    n = len(s)
    for i in range(1, n):
        c = s[i]
        if isLatinLetter(c):
            if not isLatinLetter(s[i - 1]):
                sb.append(' ')
            sb.append(c)
        elif isPunctuation(c):
            sb.append(c)
    print(''.join(sb))

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,codeforces_412_A.py,"import java.util.Scanner ; public class codeforces_412_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ), k = sc.nextInt ( ) ; String a = sc.next ( ) ; if ( k > n / 2 ) { while ( k < n ) { System.out.println ( ""RIGHT"" ) ; k ++ ; } } else { while ( k > 1 ) { System.out.println ( ""LEFT"" ) ; k -- ; } } if ( k == 1 ) { for ( int i = 0 ; i < a.length ( ) ; i ++ ) { System.out.println ( ""PRINT "" + a.charAt ( i ) ) ; if ( ( i + 1 ) < a.length ( ) ) { System.out.println ( ""RIGHT"" ) ; } } } else { for ( int i = a.length ( ) - 1 ; i >= 0 ; i -- ) { System.out.println ( ""PRINT "" + a.charAt ( i ) ) ; if ( ( i - 1 ) >= 0 ) { System.out.println ( ""LEFT"" ) ; } } } } }","import java.util.Scanner ; public class codeforces_412_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ), k = sc.nextInt ( ) ; String a = sc.next ( ) ; if ( k > n / 2 ) { while ( k < n ) { System.out.println ( ""RIGHT"" ) ; k ++ ; } } else { while ( k > 1 ) { System.out.println ( ""LEFT"" ) ; k -- ; } } if ( k == 1 ) { for ( int i = 0 ; i < a.length ( ) ; i ++ ) { System.out.println ( ""PRINT "" + a.charAt ( i ) ) ; if ( ( i + 1 ) < a.length ( ) ) { System.out.println ( ""RIGHT"" ) ; } } } else { for ( int i = a.length ( ) - 1 ; i >= 0 ; i -- ) { System.out.println ( ""PRINT "" + a.charAt ( i ) ) ; if ( ( i - 1 ) >= 0 ) { System.out.println ( ""LEFT"" ) ; } } } } }"
StarCoder,avatar,Java,Python,codeforces_131_B.py,import java.util.Scanner ; public class codeforces_131_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int N = ( int ) 1e5 + 5 ; long [ ] cnt = new long [ 21 ] ; for ( int i = 0 ; i < n ; i ++ ) { cnt [ scan.nextInt ( ) + 10 ] ++ ; } long res = 0 ; for ( int i = 0 ; i < 10 ; i ++ ) { res += cnt [ i ] * cnt [ 20 - i ] ; } res += ( cnt [ 10 ] * ( cnt [ 10 ] - 1 ) ) / 2 ; System.out.println ( res ) ; } },import java.util.Scanner ; public class codeforces_131_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int N = ( int ) 1e5 + 5 ; long [ ] cnt = new long [ 21 ] ; for ( int i = 0 ; i < n ; i ++ ) { cnt [ scan.nextInt ( ) + 10 ] ++ ; } long res = 0 ; for ( int i = 0 ; i < 10 ; i ++ ) { res += cnt [ i ] * cnt [ 20 - i ] ; } res += ( cnt [ 10 ] * ( cnt [ 10 ] - 1 ) ) / 2 ; System.out.println ( res ) ; } }
StarCoder,avatar,Java,Python,codeforces_32_B.py,import java.util.Scanner ; public class codeforces_32_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; char [ ] n = in.next ( ).toCharArray ( ) ; boolean s = False ; for ( int i = 0 ; i < n.length ; i ++ ) { if ( n [ i ] == '.' ) { if ( s ) { System.out.print ( 1 ) ; s = False ; } else { System.out.print ( 0 ) ; } } else { if ( s ) { System.out.print ( 2 ) ; s = False ; } else { s = True ; } } } in.close ( ) ; } },import java.util.Scanner ; public class codeforces_32_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; char [ ] n = in.next ( ).toCharArray ( ) ; boolean s = False ; for ( int i = 0 ; i < n.length ; i ++ ) { if ( n [ i ] == '.' ) { if ( s ) { System.out.print ( 1 ) ; s = False ; } else { System.out.print ( 0 ) ; } } else { if ( s ) { System.out.print ( 2 ) ; s = False ; } else { s = True ; } } } in.close ( ) ; } }
StarCoder,avatar,Java,Python,atcoder_AGC005_B.py,"import java.util.ArrayDeque ; import java.util.Scanner ; import java.util.stream.IntStream ; def main ( ):
    scan = Scanner ( System.in )
    N = scan.nextInt ( )
    a = [ ]
    for i in range ( N ):
        a.append ( scan.nextInt ( ) )
    leftl = [ ]
    rightl = [ ]
    que = ArrayDeque ( )
    index = 0
    while index < N:
        while ( not que.isEmpty ( ) and a [ que.peek ( ) ] > a [ index ] ):
            ind = que.poll ( )
            rightl [ ind ] = index - ind - 1
        que.push ( index )
        index += 1
    while ( not que.isEmpty ( ) ):
        ind = que.poll ( )
        rightl [ ind ] = N - ind - 1
    index = N - 1
    while index >= 0:
        while ( not que.isEmpty ( ) and a [ que.peek ( ) ] > a [ index ] ):
            ind = que.poll ( )
            leftl [ ind ] = ind - index - 1
        que.push ( index )
        index -= 1
    while ( not que.isEmpty ( ) ):
        ind = que.poll ( )
        leftl [ ind ] = ind - index - 1
    ans = 0
    for i in range ( N ):
        ans += a [ i ] * ( leftl [ i ] + 1 ) * ( rightl [ i ] + 1 )
    print ( ans )
main ( )","import java.util.ArrayDeque ; import java.util.Scanner ; import java.util.stream.IntStream ; def main ( ):
    scan = Scanner ( System.in )
    N = scan.nextInt ( )
    a = [ ]
    for i in range ( N ):
        a.append ( scan.nextInt ( ) )
    leftl = [ ]
    rightl = [ ]
    que = ArrayDeque ( )
    index = 0
    while index < N:
        while ( not que.isEmpty ( ) and a [ que.peek ( ) ] > a [ index ] ):
            ind = que.poll ( )
            rightl [ ind ] = index - ind - 1
        que.push ( index )
        index += 1
    while ( not que.isEmpty ( ) ):
        ind = que.poll ( )
        rightl [ ind ] = N - ind - 1
    index = N - 1
    while index >= 0:
        while ( not que.isEmpty ( ) and a [ que.peek ( ) ] > a [ index ] ):
            ind = que.poll ( )
            leftl [ ind ] = ind - index - 1
        que.push ( index )
        index -= 1
    while ( not que.isEmpty ( ) ):
        ind = que.poll ( )
        leftl [ ind ] = ind - index - 1
    ans = 0
    for i in range ( N ):
        ans += a [ i ] * ( leftl [ i ] + 1 ) * ( rightl [ i ] + 1 )
    print ( ans )
main ( )"
StarCoder,avatar,Java,Python,atcoder_AGC002_B.py,"import java.util.Scanner ; public class atcoder_AGC002_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; Box [ ] B = new Box [ N ] ; B [ 0 ] = new Box ( 1, true ) ; for ( int i = 1 ; i < N ; i ++ ) { B [ i ] = new Box ( 1, false ) ; } for ( int i = 0 ; i < M ; i ++ ) { int x = sc.nextInt ( ) - 1 ; int y = sc.nextInt ( ) - 1 ; B [ x ].moveTo ( B [ y ] ) ; } int counter = 0 ; for ( Box b : B ) { if ( b.red ) { counter ++ ; } } System.out.println ( counter ) ; } } class Box { public int num ; public boolean red ; public Box ( int n, boolean r ) { num = n ; red = r ; } public void moveTo ( Box other ) { if ( num == 0 ) { return ; } else if ( num == 1 ) { num = 0 ; other.num ++ ; if ( red ) { other.red = true ; } red = false ; } else { num -- ; other.num ++ ; if ( red ) { other.red = true ; } } } }","import java.util.Scanner ; public class atcoder_AGC002_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; Box [ ] B = new Box [ N ] ; B [ 0 ] = new Box ( 1, true ) ; for ( int i = 1 ; i < N ; i ++ ) { B [ i ] = new Box ( 1, false ) ; } for ( int i = 0 ; i < M ; i ++ ) { int x = sc.nextInt ( ) - 1 ; int y = sc.nextInt ( ) - 1 ; B [ x ].moveTo ( B [ y ] ) ; } int counter = 0 ; for ( Box b : B ) { if ( b.red ) { counter ++ ; } } System.out.println ( counter ) ; } } class Box { public int num ; public boolean red ; public Box ( int n, boolean r ) { num = n ; red = r ; } public void moveTo ( Box other ) { if ( num == 0 ) { return ; } else if ( num == 1 ) { num = 0 ; other.num ++ ; if ( red ) { other.red = true ; } red = false ; } else { num -- ; other.num ++ ; if ( red ) { other.red = true ; } } } }"
StarCoder,avatar,Java,Python,codeforces_333_B.py,"import java.util.* ; import java.io.* ; import static java.lang.Math.* ; public class codeforces_333_B { public static FastReader in = new FastReader ( ) ; public static PrintWriter out = new PrintWriter ( System.out ) ; public static void main ( String [ ] args ) { int n = in.nextInt ( ), m = in.nextInt ( ) ; Set < Integer > bannedRows, bannedCols ; bannedRows = new HashSet < > ( ) ; bannedCols = new HashSet < > ( ) ; for ( int i = 0 ; i < m ; i ++ ) { int r = in.nextInt ( ) ; if ( r > 1 && r < n ) bannedRows.add ( r ) ; int c = in.nextInt ( ) ; if ( c > 1 && c < n ) bannedCols.add ( c ) ; } int answer = ( n - 2 ) * 2 ; answer -= bannedRows.size ( ) ; answer -= bannedCols.size ( ) ; if ( n % 2!= 0 ) { int mid = ( n + 1 ) / 2 ; if (! bannedRows.contains ( mid ) &&! bannedCols.contains ( mid ) ) { answer -- ; } } out.println ( answer ) ; out.close ( ) ; } public static class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null ||! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = """" ; try { str = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } }","import java.util.* ; import java.io.* ; import static java.lang.Math.* ; public class codeforces_333_B { public static FastReader in = new FastReader ( ) ; public static PrintWriter out = new PrintWriter ( System.out ) ; public static void main ( String [ ] args ) { int n = in.nextInt ( ), m = in.nextInt ( ) ; Set < Integer > bannedRows, bannedCols ; bannedRows = new HashSet < > ( ) ; bannedCols = new HashSet < > ( ) ; for ( int i = 0 ; i < m ; i ++ ) { int r = in.nextInt ( ) ; if ( r > 1 && r < n ) bannedRows.add ( r ) ; int c = in.nextInt ( ) ; if ( c > 1 && c < n ) bannedCols.add ( c ) ; } int answer = ( n - 2 ) * 2 ; answer -= bannedRows.size ( ) ; answer -= bannedCols.size ( ) ; if ( n % 2!= 0 ) { int mid = ( n + 1 ) / 2 ; if (! bannedRows.contains ( mid ) &&! bannedCols.contains ( mid ) ) { answer -- ; } } out.println ( answer ) ; out.close ( ) ; } public static class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; } String next ( ) { while ( st == null ||! st.hasMoreElements ( ) ) { try { st = new StringTokenizer ( br.readLine ( ) ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } } return st.nextToken ( ) ; } int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double.parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = """" ; try { str = br.readLine ( ) ; } catch ( IOException e ) { e.printStackTrace ( ) ; } return str ; } } }"
StarCoder,avatar,Java,Python,atcoder_ABC169_C.py,"import java.util.ArrayList ; import java.util.LinkedList ; import java.util.Scanner ; public class atcoder_ABC169_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; long a = sc.nextLong ( ) ; String b = sc.next ( ) ; char [ ] bChar = b.toCharArray ( ) ; int length = bChar.length ; String bStr = """" ; for ( int i = 0 ; i < length ; i ++ ) { if ( bChar [ i ]!= '.' ) { bStr += bChar [ i ] ; } } int bInt = Integer.parseInt ( bStr ) ; long result = ( a * bInt ) / 100 ; System.out.println ( result ) ; } }","import java.util.ArrayList ; import java.util.LinkedList ; import java.util.Scanner ; public class atcoder_ABC169_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; long a = sc.nextLong ( ) ; String b = sc.next ( ) ; char [ ] bChar = b.toCharArray ( ) ; int length = bChar.length ; String bStr = """" ; for ( int i = 0 ; i < length ; i ++ ) { if ( bChar [ i ]!= '.' ) { bStr += bChar [ i ] ; } } int bInt = Integer.parseInt ( bStr ) ; long result = ( a * bInt ) / 100 ; System.out.println ( result ) ; } }"
StarCoder,avatar,Java,Python,codeforces_299_A.py,import java.util.Arrays ; import java.util.Scanner ; public class codeforces_299_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in.nextInt ( ) ; } Arrays.sort ( a ) ; int min = a [ 0 ] ; for ( int value : a ) { if ( value % min!= 0 ) { System.out.println ( - 1 ) ; return ; } } System.out.println ( min ) ; } },import java.util.Arrays ; import java.util.Scanner ; public class codeforces_299_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int n = in.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in.nextInt ( ) ; } Arrays.sort ( a ) ; int min = a [ 0 ] ; for ( int value : a ) { if ( value % min!= 0 ) { System.out.println ( - 1 ) ; return ; } } System.out.println ( min ) ; } }
StarCoder,avatar,Java,Python,atcoder_AGC025_A.py,import java.util.Scanner ; public class atcoder_AGC025_A { public static int sum ( int a ) { int ans = 0 ; while ( a >= 10 ) { ans += a % 10 ; a /= 10 ; } ans += a ; return ans ; } public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int N = stdIn.nextInt ( ) ; int n = 0 ; if ( N % 2 == 0 ) { n = N / 2 ; } else { n = ( N + 1 ) / 2 ; } int ans = sum ( 1 ) + sum ( N - 1 ) ; for ( int A = 1 ; A <= n ; A ++ ) { if ( sum ( A ) + sum ( N - A ) < ans ) { ans = sum ( A ) + sum ( N - A ) ; } } System.out.println ( ans ) ; } },import java.util.Scanner ; public class atcoder_AGC025_A { public static int sum ( int a ) { int ans = 0 ; while ( a >= 10 ) { ans += a % 10 ; a /= 10 ; } ans += a ; return ans ; } public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int N = stdIn.nextInt ( ) ; int n = 0 ; if ( N % 2 == 0 ) { n = N / 2 ; } else { n = ( N + 1 ) / 2 ; } int ans = sum ( 1 ) + sum ( N - 1 ) ; for ( int A = 1 ; A <= n ; A ++ ) { if ( sum ( A ) + sum ( N - A ) < ans ) { ans = sum ( A ) + sum ( N - A ) ; } } System.out.println ( ans ) ; } }
StarCoder,avatar,Java,Python,codeforces_607_A.py,"import sys

def main():
    n = int(raw_input())
    beacon = [0] * 1000001
    dp = [0] * 1000001
    for i in range(n):
        a = int(raw_input())
        beacon[a] = int(raw_input())
    if beacon[0]!= 0:
        dp[0] = 1
    for i in range(1, 1000001):
        if beacon[i]!= 0 and beacon[i] < i:
            dp[i] = dp[i - beacon[i] - 1] + 1
        elif beacon[i]!= 0:
            dp[i] = 1
        else:
            dp[i] = dp[i - 1]
    print n - max(dp)

if __name__ == '__main__':
    main()","import sys

def main():
    n = int(input())
    beacon = [0] * 1000001
    dp = [0] * 1000001
    for i in range(n):
        inputs = list(input().split())
        a = int(inputs[0])
        beacon[a] = int(inputs[1])
    if beacon[0]!= 0:
        dp[0] = 1
    for i in range(1, 1000001):
        if beacon[i]!= 0 and beacon[i] < i:
            dp[i] = dp[i - beacon[i] - 1] + 1
        elif beacon[i]!= 0:
            dp[i] = 1
        else:
            dp[i] = dp[i - 1]
    print(n - max(dp))

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC124_C.py,"import sys
import io
import atexit

input_txt = """"""
1
import sys
import io
import atexit

input_txt = """"""
1
101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
StarCoder,avatar,Java,Python,codeforces_106_B.py,import java.util.Arrays ; import java.util.* ; import java.io.PrintWriter ; import java.util.Scanner ; public class codeforces_106_B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System.in ) ; PrintWriter out = new PrintWriter ( System.out ) ; int n = input.nextInt ( ) ; int [ ] [ ] vec = new int [ n ] [ 4 ] ; for ( int i = 0 ; i < n ; i ++ ) { vec [ i ] [ 0 ] = input.nextInt ( ) ; vec [ i ] [ 1 ] = input.nextInt ( ) ; vec [ i ] [ 2 ] = input.nextInt ( ) ; vec [ i ] [ 3 ] = input.nextInt ( ) ; } int ans = 500 ; int ansprice = 20000 ; for ( int i = 0 ; i < n ; i ++ ) { int fl = 1 ; for ( int j = 0 ; j < n ; j ++ ) { if ( vec [ i ] [ 0 ] < vec [ j ] [ 0 ] && vec [ i ] [ 1 ] < vec [ j ] [ 1 ] && vec [ i ] [ 2 ] < vec [ j ] [ 2 ] ) { fl = 0 ; } } if ( fl == 1 ) { if ( vec [ i ] [ 3 ] < ansprice ) { ansprice = vec [ i ] [ 3 ] ; ans = i + 1 ; } } } System.out.println ( ans ) ; out.close ( ) ; } },import java.util.Arrays ; import java.util.* ; import java.io.PrintWriter ; import java.util.Scanner ; public class codeforces_106_B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System.in ) ; PrintWriter out = new PrintWriter ( System.out ) ; int n = input.nextInt ( ) ; int [ ] [ ] vec = new int [ n ] [ 4 ] ; for ( int i = 0 ; i < n ; i ++ ) { vec [ i ] [ 0 ] = input.nextInt ( ) ; vec [ i ] [ 1 ] = input.nextInt ( ) ; vec [ i ] [ 2 ] = input.nextInt ( ) ; vec [ i ] [ 3 ] = input.nextInt ( ) ; } int ans = 500 ; int ansprice = 20000 ; for ( int i = 0 ; i < n ; i ++ ) { int fl = 1 ; for ( int j = 0 ; j < n ; j ++ ) { if ( vec [ i ] [ 0 ] < vec [ j ] [ 0 ] && vec [ i ] [ 1 ] < vec [ j ] [ 1 ] && vec [ i ] [ 2 ] < vec [ j ] [ 2 ] ) { fl = 0 ; } } if ( fl == 1 ) { if ( vec [ i ] [ 3 ] < ansprice ) { ansprice = vec [ i ] [ 3 ] ; ans = i + 1 ; } } } System.out.println ( ans ) ; out.close ( ) ; } }
StarCoder,avatar,Java,Python,codeforces_544_B.py,"import java.util.Scanner ; public class codeforces_544_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int count = scan.nextInt ( ) ; printIsland ( n, count ) ; } public static void printIsland ( int n, int count ) { int a = ( n + 1 ) / 2 ; int b = n / 2 ; int max = a * a + b * b ; if ( count > max ) { System.out.println ( ""NO"" ) ; return ; } System.out.println ( ""YES"" ) ; for ( int i = 0 ; i < n ; i ++ ) { StringBuilder sb = new StringBuilder ( ) ; for ( int j = 0 ; j < n ; j ++ ) { if ( ( i + j ) % 2 == 0 && count > 0 ) { sb.append ( 'L' ) ; count -- ; } else { sb.append ( 'S' ) ; } } System.out.println ( sb ) ; } } }","import java.util.Scanner ; public class codeforces_544_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int count = scan.nextInt ( ) ; printIsland ( n, count ) ; } public static void printIsland ( int n, int count ) { int a = ( n + 1 ) / 2 ; int b = n / 2 ; int max = a * a + b * b ; if ( count > max ) { System.out.println ( ""NO"" ) ; return ; } System.out.println ( ""YES"" ) ; for ( int i = 0 ; i < n ; i ++ ) { StringBuilder sb = new StringBuilder ( ) ; for ( int j = 0 ; j < n ; j ++ ) { if ( ( i + j ) % 2 == 0 && count > 0 ) { sb.append ( 'L' ) ; count -- ; } else { sb.append ( 'S' ) ; } } System.out.println ( sb ) ; } } }"
StarCoder,avatar,Java,Python,codeforces_96_B.py,"import java.util.Scanner ; public class codeforces_96_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; long number = in.nextLong ( ) ; long ans = - 1, value = 0 ; int mask = 2 ; while ( value < number ) { String s = Integer.toBinaryString ( mask ++ ).substring ( 1 ) ; int zeros = 0 ; for ( char c : s.toCharArray ( ) ) if ( c == '0' ) zeros ++ ; if ( zeros!= s.length ( ) - zeros ) continue ; s = s.replace ( '0', '4' ) ; s = s.replace ( '1', '7' ) ; value = Long.parseLong ( s ) ; } System.out.println ( value ) ; } }","import java.util.Scanner ; public class codeforces_96_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; long number = in.nextLong ( ) ; long ans = - 1, value = 0 ; int mask = 2 ; while ( value < number ) { String s = Integer.toBinaryString ( mask ++ ).substring ( 1 ) ; int zeros = 0 ; for ( char c : s.toCharArray ( ) ) if ( c == '0' ) zeros ++ ; if ( zeros!= s.length ( ) - zeros ) continue ; s = s.replace ( '0', '4' ) ; s = s.replace ( '1', '7' ) ; value = Long.parseLong ( s ) ; } System.out.println ( value ) ; } }"
StarCoder,avatar,Java,Python,codeforces_92_A.py,"import java.util.* ; public class codeforces_92_A { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System.in ) ; int n = scn.nextInt ( ) ; int k = scn.nextInt ( ) ; int i = 1, req = 1 ; while ( k - req >= 0 ) { if ( k - req >= 0 ) { k = k - req ; } else { break ; } i ++ ; if ( i % n!= 0 ) req = i % n ; else req = n ; } System.out.println ( k ) ; } }","import java.util.* ; public class codeforces_92_A { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System.in ) ; int n = scn.nextInt ( ) ; int k = scn.nextInt ( ) ; int i = 1, req = 1 ; while ( k - req >= 0 ) { if ( k - req >= 0 ) { k = k - req ; } else { break ; } i ++ ; if ( i % n!= 0 ) req = i % n ; else req = n ; } System.out.println ( k ) ; } }"
StarCoder,avatar,Java,Python,atcoder_ABC105_D.py,"import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.StringTokenizer ; import java.util.HashMap ; import java.io.IOException ; import java.util.InputMismatchException ; import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.InputStream ; public class atcoder_ABC105_D { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; TaskD solver = new TaskD ( ) ; solver.solve ( 1, in, out ) ; out.close ( ) ; } static class TaskD { public void solve ( int testNumber, InputReader in, PrintWriter out ) { int n = in.nextInt ( ) ; int m = in.nextInt ( ) ; int [ ] a = in.nextIntArray ( n ) ; HashMap < Integer, Integer > dp = new HashMap < > ( ) ; long ans = 0 ; int base = 0 ; for ( int i = 0 ; i < n ; i ++ ) { base = ( base - a [ i ] % m + m ) % m ; dp.merge ( ( base + a [ i ] ) % m, 1, Integer :: sum ) ; ans += dp.getOrDefault ( base, 0 ) ; } out.println ( ans ) ; } } static class InputReader { private BufferedReader br ; private StringTokenizer st ; public InputReader ( InputStream inputStream ) { br = new BufferedReader ( new InputStreamReader ( inputStream ) ) ; st = new StringTokenizer ( """" ) ; } public String nextString ( ) { while (! st.hasMoreTokens ( ) ) { try { st = new StringTokenizer ( br.readLine ( ), "" "" ) ; } catch ( IOException e ) { throw new InputMismatchException ( ) ; } } return st.nextToken ( ) ; } public int nextInt ( ) { return Integer.parseInt ( nextString ( ) ) ; } public int [ ] nextIntArray ( int n ) { int [ ] res = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { res [ i ] = nextInt ( ) ; } return res ; } } }","import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.StringTokenizer ; import java.util.HashMap ; import java.io.IOException ; import java.util.InputMismatchException ; import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.InputStream ; public class atcoder_ABC105_D { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; TaskD solver = new TaskD ( ) ; solver.solve ( 1, in, out ) ; out.close ( ) ; } static class TaskD { public void solve ( int testNumber, InputReader in, PrintWriter out ) { int n = in.nextInt ( ) ; int m = in.nextInt ( ) ; int [ ] a = in.nextIntArray ( n ) ; HashMap < Integer, Integer > dp = new HashMap < > ( ) ; long ans = 0 ; int base = 0 ; for ( int i = 0 ; i < n ; i ++ ) { base = ( base - a [ i ] % m + m ) % m ; dp.merge ( ( base + a [ i ] ) % m, 1, Integer :: sum ) ; ans += dp.getOrDefault ( base, 0 ) ; } out.println ( ans ) ; } } static class InputReader { private BufferedReader br ; private StringTokenizer st ; public InputReader ( InputStream inputStream ) { br = new BufferedReader ( new InputStreamReader ( inputStream ) ) ; st = new StringTokenizer ( """" ) ; } public String nextString ( ) { while (! st.hasMoreTokens ( ) ) { try { st = new StringTokenizer ( br.readLine ( ), "" "" ) ; } catch ( IOException e ) { throw new InputMismatchException ( ) ; } } return st.nextToken ( ) ; } public int nextInt ( ) { return Integer.parseInt ( nextString ( ) ) ; } public int [ ] nextIntArray ( int n ) { int [ ] res = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { res [ i ] = nextInt ( ) ; } return res ; } } }"
StarCoder,avatar,Java,Python,atcoder_ABC122_C.py,import java.util.* ; public class atcoder_ABC122_C { final static long mod = 1000000007 ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; char [ ] c = sc.next ( ).toCharArray ( ) ; int [ ] [ ] range = new int [ q ] [ 2 ] ; for ( int i = 0 ; i < q ; i ++ ) { range [ i ] [ 0 ] = sc.nextInt ( ) ; range [ i ] [ 1 ] = sc.nextInt ( ) ; } int [ ] frag = new int [ n + 1 ] ; int [ ] rui = new int [ n + 1 ] ; for ( int i = 2 ; i <= n ; i ++ ) { if ( c [ i - 2 ] == 'A' && c [ i - 1 ] == 'C' ) { frag [ i ] ++ ; } rui [ i ] = rui [ i - 1 ] + frag [ i ] ; } for ( int i = 0 ; i < q ; i ++ ) { int left = range [ i ] [ 0 ] ; int right = range [ i ] [ 1 ] ; System.out.println ( rui [ right ] - rui [ left ] ) ; } } },import java.util.* ; public class atcoder_ABC122_C { final static long mod = 1000000007 ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; char [ ] c = sc.next ( ).toCharArray ( ) ; int [ ] [ ] range = new int [ q ] [ 2 ] ; for ( int i = 0 ; i < q ; i ++ ) { range [ i ] [ 0 ] = sc.nextInt ( ) ; range [ i ] [ 1 ] = sc.nextInt ( ) ; } int [ ] frag = new int [ n + 1 ] ; int [ ] rui = new int [ n + 1 ] ; for ( int i = 2 ; i <= n ; i ++ ) { if ( c [ i - 2 ] == 'A' && c [ i - 1 ] == 'C' ) { frag [ i ] ++ ; } rui [ i ] = rui [ i - 1 ] + frag [ i ] ; } for ( int i = 0 ; i < q ; i ++ ) { int left = range [ i ] [ 0 ] ; int right = range [ i ] [ 1 ] ; System.out.println ( rui [ right ] - rui [ left ] ) ; } } }
StarCoder,avatar,Java,Python,codeforces_514_A.py,"import java.util.ArrayList ; import java.util.List ; import java.util.Scanner ; public class codeforces_514_A { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System.in ) ; List < Long > list = new ArrayList < > ( ) ; long x = sc.nextLong ( ) ; while ( x > 0 ) { long r = x % 10 ; if ( 9 - r < r ) { if ( x / 10 == 0 && 9 - r == 0 ) list.add ( r ) ; else list.add ( 9 - r ) ; } else list.add ( r ) ; x = x / 10 ; } int pow = 0 ; long newNumber = 0 ; for ( int i = 0 ; i < list.size ( ) ; i ++ ) { newNumber = newNumber + list.get ( i ) * ( long ) Math.pow ( 10, pow ) ; pow ++ ; } System.out.println ( newNumber ) ; } }","import java.util.ArrayList ; import java.util.List ; import java.util.Scanner ; public class codeforces_514_A { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System.in ) ; List < Long > list = new ArrayList < > ( ) ; long x = sc.nextLong ( ) ; while ( x > 0 ) { long r = x % 10 ; if ( 9 - r < r ) { if ( x / 10 == 0 && 9 - r == 0 ) list.add ( r ) ; else list.add ( 9 - r ) ; } else list.add ( r ) ; x = x / 10 ; } int pow = 0 ; long newNumber = 0 ; for ( int i = 0 ; i < list.size ( ) ; i ++ ) { newNumber = newNumber + list.get ( i ) * ( long ) Math.pow ( 10, pow ) ; pow ++ ; } System.out.println ( newNumber ) ; } }"
StarCoder,avatar,Java,Python,codeforces_500_A.py,"import java.util.* ; public class codeforces_500_A { public static boolean dfs ( int currpos, int [ ] arr, int target ) { if ( currpos == target ) return true ; if ( currpos == arr.length + 1 ) return false ; boolean teleport = dfs ( currpos + arr [ currpos - 1 ], arr, target ) ; if ( teleport ) return true ; return false ; } public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int goal = sc.nextInt ( ) ; int [ ] arr = new int [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) arr [ i ] = sc.nextInt ( ) ; boolean isFound = dfs ( 1, arr, goal ) ; if ( isFound ) System.out.println ( ""YES"" ) ; else System.out.println ( ""NO"" ) ; sc.close ( ) ; } }","import java.util.* ; public class codeforces_500_A { public static boolean dfs ( int currpos, int [ ] arr, int target ) { if ( currpos == target ) return true ; if ( currpos == arr.length + 1 ) return false ; boolean teleport = dfs ( currpos + arr [ currpos - 1 ], arr, target ) ; if ( teleport ) return true ; return false ; } public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int goal = sc.nextInt ( ) ; int [ ] arr = new int [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) arr [ i ] = sc.nextInt ( ) ; boolean isFound = dfs ( 1, arr, goal ) ; if ( isFound ) System.out.println ( ""YES"" ) ; else System.out.println ( ""NO"" ) ; sc.close ( ) ; } }"
StarCoder,avatar,Java,Python,codeforces_49_A.py,"import java.util.Scanner ; public class codeforces_49_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.nextLine ( ) ; int length = s.length ( ) ; char ch = 0 ; for ( int i = length - 1 ; i >= 0 ; i -- ) { if ( s.charAt ( i )!='' && s.charAt ( i )!= '?' ) { ch = s.charAt ( i ) ; break ; } } ch = Character.toLowerCase ( ch ) ; if ( ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' || ch == 'y' ) { System.out.println ( ""YES"" ) ; } else { System.out.println ( ""NO"" ) ; } } }","import java.util.Scanner ; public class codeforces_49_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.nextLine ( ) ; int length = s.length ( ) ; char ch = 0 ; for ( int i = length - 1 ; i >= 0 ; i -- ) { if ( s.charAt ( i )!='' && s.charAt ( i )!= '?' ) { ch = s.charAt ( i ) ; break ; } } ch = Character.toLowerCase ( ch ) ; if ( ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' || ch == 'y' ) { System.out.println ( ""YES"" ) ; } else { System.out.println ( ""NO"" ) ; } } }"
StarCoder,avatar,Java,Python,codeforces_450_A.py,import java.util.* ; public class codeforces_450_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; Queue < Integer > q1 = new LinkedList < > ( ) ; Queue < Integer > q2 = new LinkedList < > ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { q1.add ( sc.nextInt ( ) ) ; q2.add ( i ) ; } int ans = 0 ; while (! q1.isEmpty ( ) ) { if ( q1.peek ( ) <= m ) { q1.poll ( ) ; ans = q2.poll ( ) ; } else if ( q1.peek ( ) > m ) { int x = q1.poll ( ) ; int val = x - m ; q1.add ( val ) ; int val2 = q2.poll ( ) ; q2.add ( val2 ) ; } } System.out.println ( ans ) ; } },import java.util.* ; public class codeforces_450_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; Queue < Integer > q1 = new LinkedList < > ( ) ; Queue < Integer > q2 = new LinkedList < > ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { q1.add ( sc.nextInt ( ) ) ; q2.add ( i ) ; } int ans = 0 ; while (! q1.isEmpty ( ) ) { if ( q1.peek ( ) <= m ) { q1.poll ( ) ; ans = q2.poll ( ) ; } else if ( q1.peek ( ) > m ) { int x = q1.poll ( ) ; int val = x - m ; q1.add ( val ) ; int val2 = q2.poll ( ) ; q2.add ( val2 ) ; } } System.out.println ( ans ) ; } }
StarCoder,avatar,Java,Python,codeforces_242_B.py,"import java.util.ArrayList ; import java.util.Scanner ; import java.lang.Math ; public class codeforces_242_B { static final int INF = ( int ) 1e9 + 5 ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n ; n = sc.nextInt ( ) ; ArrayList < Integer > a = new ArrayList < > ( ) ; ArrayList < Integer > b = new ArrayList < > ( ) ; int left = INF, right = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a.add ( sc.nextInt ( ) ) ; b.add ( sc.nextInt ( ) ) ; left = Math.min ( left, a.get ( i ) ) ; right = Math.max ( right, b.get ( i ) ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( left == a.get ( i ) && right == b.get ( i ) ) { System.out.println ( ++ i ) ; return ; } } System.out.println ( - 1 ) ; } }","import java.util.ArrayList ; import java.util.Scanner ; import java.lang.Math ; public class codeforces_242_B { static final int INF = ( int ) 1e9 + 5 ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n ; n = sc.nextInt ( ) ; ArrayList < Integer > a = new ArrayList < > ( ) ; ArrayList < Integer > b = new ArrayList < > ( ) ; int left = INF, right = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a.add ( sc.nextInt ( ) ) ; b.add ( sc.nextInt ( ) ) ; left = Math.min ( left, a.get ( i ) ) ; right = Math.max ( right, b.get ( i ) ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( left == a.get ( i ) && right == b.get ( i ) ) { System.out.println ( ++ i ) ; return ; } } System.out.println ( - 1 ) ; } }"
StarCoder,avatar,Java,Python,codeforces_25_A.py,"import java.util.Scanner ; public class codeforces_25_A { public static void main ( String [ ] args ) { Scanner ob = new Scanner ( System.in ) ; int n = ob.nextInt ( ) ; int array [ ] = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { array [ i ] = ob.nextInt ( ) ; } int odd = 0, even = 0, odd_ind = 0, even_ind = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( array [ i ] % 2 == 0 ) { even ++ ; even_ind = i ; } else { odd ++ ; odd_ind = i ; } } if ( odd > even ) System.out.println ( even_ind ) ; else System.out.println ( odd_ind ) ; } }","import java.util.Scanner ; public class codeforces_25_A { public static void main ( String [ ] args ) { Scanner ob = new Scanner ( System.in ) ; int n = ob.nextInt ( ) ; int array [ ] = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { array [ i ] = ob.nextInt ( ) ; } int odd = 0, even = 0, odd_ind = 0, even_ind = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( array [ i ] % 2 == 0 ) { even ++ ; even_ind = i ; } else { odd ++ ; odd_ind = i ; } } if ( odd > even ) System.out.println ( even_ind ) ; else System.out.println ( odd_ind ) ; } }"
StarCoder,avatar,Java,Python,atcoder_ABC167_D.py,"import java.util.* ; public class atcoder_ABC167_D { Scanner sc = new Scanner ( System.in ) ; final int MOD = 1000000007 ; final int MAX = Integer.MAX_VALUE ; final long LMAX = Long.MAX_VALUE ; int len = ( int ) 1e6 + 1 ; void doIt ( ) { int N = sc.nextInt ( ) ; long K = sc.nextLong ( ) ; int A [ ] = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) - 1 ; } Set < Integer > used = new HashSet < > ( ) ; int idx [ ] = new int [ N ] ; int pos [ ] = new int [ N ] ; int next = 0, cur = 0 ; while (! used.contains ( next ) ) { used.add ( next ) ; idx [ next ] = cur ; pos [ cur ] = next ; next = A [ next ] ; cur ++ ; } long a = ( long ) cur - idx [ next ] ; long b = ( long ) idx [ next ] ; int ans = ( int ) ( ( 10000 * a + K - b ) % a + b ) ; if ( b > K ) ans = ( int ) K ; System.out.println ( pos [ ans ] + 1 ) ; } public static void main ( String [ ] args ) { new atcoder_ABC167_D ( ).doIt ( ) ; } }","import java.util.* ; public class atcoder_ABC167_D { Scanner sc = new Scanner ( System.in ) ; final int MOD = 1000000007 ; final int MAX = Integer.MAX_VALUE ; final long LMAX = Long.MAX_VALUE ; int len = ( int ) 1e6 + 1 ; void doIt ( ) { int N = sc.nextInt ( ) ; long K = sc.nextLong ( ) ; int A [ ] = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) - 1 ; } Set < Integer > used = new HashSet < > ( ) ; int idx [ ] = new int [ N ] ; int pos [ ] = new int [ N ] ; int next = 0, cur = 0 ; while (! used.contains ( next ) ) { used.add ( next ) ; idx [ next ] = cur ; pos [ cur ] = next ; next = A [ next ] ; cur ++ ; } long a = ( long ) cur - idx [ next ] ; long b = ( long ) idx [ next ] ; int ans = ( int ) ( ( 10000 * a + K - b ) % a + b ) ; if ( b > K ) ans = ( int ) K ; System.out.println ( pos [ ans ] + 1 ) ; } public static void main ( String [ ] args ) { new atcoder_ABC167_D ( ).doIt ( ) ; } }"
StarCoder,avatar,Java,Python,codeforces_302_A.py,"import java.io.IOException ; import java.util.Scanner ; public class codeforces_302_A { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = sc.nextInt ( ) ; StringBuffer res = new StringBuffer ( ) ; int o = 0, e = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( arr [ i ] == 1 ) ++ o ; else ++ e ; for ( int i = 0 ; i < k ; i ++ ) { int l = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; if ( ( r - l + 1 ) % 2 == 1 ) res.append ( ""0\n"" ) ; else { if ( ( r - l + 1 ) / 2 <= o && ( r - l + 1 ) / 2 <= e ) res.append ( ""1\n"" ) ; else res.append ( ""0\n"" ) ; } } System.out.print ( res ) ; sc.close ( ) ; } }","import java.io.IOException ; import java.util.Scanner ; public class codeforces_302_A { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = sc.nextInt ( ) ; StringBuffer res = new StringBuffer ( ) ; int o = 0, e = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( arr [ i ] == 1 ) ++ o ; else ++ e ; for ( int i = 0 ; i < k ; i ++ ) { int l = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; if ( ( r - l + 1 ) % 2 == 1 ) res.append ( ""0\n"" ) ; else { if ( ( r - l + 1 ) / 2 <= o && ( r - l + 1 ) / 2 <= e ) res.append ( ""1\n"" ) ; else res.append ( ""0\n"" ) ; } } System.out.print ( res ) ; sc.close ( ) ; } }"
StarCoder,avatar,Java,Python,codeforces_673_A.py,"import sys

n = int(raw_input())
a = []
for i in range(n):
    a.append(int(raw_input()))

result = 0
pos = 0
flag = 0
if a[0] > 15:
    result = 15
else:
    for i in range(1, n):
        if a[i] - a[i - 1] > 15:
            pos = i - 1
            flag = 1
            break
    if flag == 1:
        result = a[pos] + 15
    else:
        result = a[n - 1] + 15
if result > 90:
    result = 90
print result","import sys

n = int(input())
a = list(map(int, input().split()))

result = 0
pos = 0
flag = 0
if a[0] > 15:
    result = 15
else:
    for i in range(1, n):
        if a[i] - a[i - 1] > 15:
            pos = i - 1
            flag = 1
            break
    if flag == 1:
        result = a[pos] + 15
    else:
        result = a[n - 1] + 15
if result > 90:
    result = 90
print(result)"
StarCoder,avatar,Java,Python,atcoder_ABC120_C.py,"import sys

class TaskB:
    def solve(self, testNumber, in, out):
        x = in.next()
        s = []
        c = 0
        for i in range(len(x)):
            s.append(x[i])
            while len(s) > 1:
                p = s.pop()
                q = s.pop()
                if (p == '1' and q == '0') or (p == '0' and q == '1'):
                    c += 1
                    continue
                else:
                    s.append(q)
                    s.append(p)
                    break
        out.println(c * 2)

class InputReader:
    def __init__(self, stream):
        self.reader = BufferedReader(InputStreamReader(stream), 32768)
        self.tokenizer = None

    def next(self):
        while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
            try:
                self.tokenizer = StringTokenizer(self.reader.readLine())
            except IOException as e:
                raise RuntimeException(e)
        return self.tokenizer.nextToken()

if __name__ == '__main__':
    task = TaskB()
    task.solve(1, InputReader(sys.stdin), PrintWriter(sys.stdout))","import sys

class TaskB:
    def solve(self, testNumber):
        x = input()
        s = []
        c = 0
        for i in range(len(x)):
            s.append(x[i])
            while len(s) > 1:
                p = s.pop()
                q = s.pop()
                if (p == '1' and q == '0') or (p == '0' and q == '1'):
                    c += 1
                    continue
                else:
                    s.append(q)
                    s.append(p)
                    break
        print(c * 2)

class InputReader:
    def __init__(self, stream):
        self.reader = BufferedReader(InputStreamReader(stream), 32768)
        self.tokenizer = None

    def next(self):
        while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
            try:
                self.tokenizer = StringTokenizer(self.reader.readLine())
            except IOException as e:
                raise RuntimeException(e)
        return self.tokenizer.nextToken()

if __name__ == '__main__':
    task = TaskB()
    task.solve(1)"
StarCoder,avatar,Java,Python,codeforces_421_A.py,"import java.math.BigInteger ; import java.nio.charset.IllegalCharsetNameException ; import java.util.* ; public class codeforces_421_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n, a, b ; n = sc.nextInt ( ) ; a = sc.nextInt ( ) ; b = sc.nextInt ( ) ; ArrayList < Integer > list1 = new ArrayList < > ( ) ; ArrayList < Integer > list2 = new ArrayList < > ( ) ; for ( int i = 0 ; i < a ; i ++ ) { list1.add ( sc.nextInt ( ) ) ; } for ( int i = 0 ; i < b ; i ++ ) { list2.add ( sc.nextInt ( ) ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( list1.contains ( i + 1 ) ) { System.out.print ( 1 + "" "" ) ; } else { System.out.print ( 2 + "" "" ) ; } } } }","import java.math.BigInteger ; import java.nio.charset.IllegalCharsetNameException ; import java.util.* ; public class codeforces_421_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n, a, b ; n = sc.nextInt ( ) ; a = sc.nextInt ( ) ; b = sc.nextInt ( ) ; ArrayList < Integer > list1 = new ArrayList < > ( ) ; ArrayList < Integer > list2 = new ArrayList < > ( ) ; for ( int i = 0 ; i < a ; i ++ ) { list1.add ( sc.nextInt ( ) ) ; } for ( int i = 0 ; i < b ; i ++ ) { list2.add ( sc.nextInt ( ) ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( list1.contains ( i + 1 ) ) { System.out.print ( 1 + "" "" ) ; } else { System.out.print ( 2 + "" "" ) ; } } } }"
StarCoder,avatar,Java,Python,codeforces_546_A.py,"import java.util.Scanner ; public class codeforces_546_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; long pandu, vundu, urdu, c = 0 ; pandu = sc.nextLong ( ) ; vundu = sc.nextLong ( ) ; urdu = sc.nextLong ( ) ; for ( int i = 1 ; i <= urdu ; i ++ ) { c += i * pandu ; } if ( c < vundu ) { System.out.print ( ""0"" ) ; } else { System.out.print ( c - vundu ) ; } } }","import java.util.Scanner ; public class codeforces_546_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; long pandu, vundu, urdu, c = 0 ; pandu = sc.nextLong ( ) ; vundu = sc.nextLong ( ) ; urdu = sc.nextLong ( ) ; for ( int i = 1 ; i <= urdu ; i ++ ) { c += i * pandu ; } if ( c < vundu ) { System.out.print ( ""0"" ) ; } else { System.out.print ( c - vundu ) ; } } }"
StarCoder,avatar,Java,Python,atcoder_ABC043_B.py,"import sys

class LightScanner:
    def __init__(self, stream):
        self.reader = stream.readline

    def string(self):
        return self.reader().rstrip()

class BUnhappyHackingABCEdit:
    def __init__(self):
        pass

    def solve(self, testNumber, in, out):
        s = in.string()
        d = """"
        for c in s:
            if c == '0':
                d += '0'
            elif c == '1':
                d += '1'
            elif c == 'B':
                if len(d) > 0:
                    d = d[:-1]
        out.println(d)

if __name__ == '__main__':
    solver = BUnhappyHackingABCEdit()
    solver.solve(1, LightScanner(sys.stdin), sys.stdout)","import sys

class LightScanner:
    def __init__(self, stream):
        self.reader = stream.readline

    def string(self):
        return self.reader().rstrip()

class BUnhappyHackingABCEdit:
    def __init__(self):
        pass

    def solve(self, testNumber):
        s = input()
        d = """"
        for c in s:
            if c == '0':
                d += '0'
            elif c == '1':
                d += '1'
            elif c == 'B':
                if len(d) > 0:
                    d = d[:-1]
        print(d)

if __name__ == '__main__':
    solver = BUnhappyHackingABCEdit()
    solver.solve(1)"
StarCoder,avatar,Java,Python,codeforces_216_B.py,"import java.util.Iterator ; import java.util.LinkedList ; import java.util.Scanner ; class codeforces_216_B:
    def __init__(self):
        self.count = 0
        self.seen = [False] * 1000001
        self.path = 0
        self.cycle = 1
        self.graph = []
        for i in range(1000001):
            self.graph.append(LinkedList())

    def dfs(self, child, par):
        if self.seen[child]:
            return self.cycle
        self.seen[child] = True
        for i in self.graph[child]:
            if i!= par:
                self.count += 1
                if self.dfs(i, child) == self.cycle:
                    return self.cycle
        return self.path

    def main(self):
        sc = Scanner(System.in)
        m = sc.nextInt()
        n = sc.nextInt()
        ft = codeforces_216_B()
        for i in range(1000001):
            ft.graph.add(LinkedList())
        ft.seen = [False] * 1000001
        for i in range(n):
            x = sc.nextInt()
            y = sc.nextInt()
            ft.graph.get(x).add(y)
            ft.graph.get(y).add(x)
        toremove = 0
        for i in range(1, m + 1):
            if not ft.seen[i]:
                ft.count = 0
                if ft.dfs(i, 0) == ft.cycle:
                    if ft.count % 2 == 1:
                        toremove += 1
        if (m - toremove) % 2 == 1:
            toremove += 1
        System.out.println(toremove)

if __name__ == '__main__':
    codeforces_216_B().main()","import java.util.Iterator ; import java.util.LinkedList ; import java.util.Scanner ; class codeforces_216_B:
    def __init__(self):
        self.count = 0
        self.seen = [False] * 1000001
        self.path = 0
        self.cycle = 1
        self.graph = []
        for i in range(1000001):
            self.graph.append(LinkedList())

    def dfs(self, child, par):
        if self.seen[child]:
            return self.cycle
        self.seen[child] = True
        for i in self.graph[child]:
            if i!= par:
                self.count += 1
                if self.dfs(i, child) == self.cycle:
                    return self.cycle
        return self.path

    def main(self):
        sc = Scanner(System.in)
        m = sc.nextInt()
        n = sc.nextInt()
        ft = codeforces_216_B()
        for i in range(1000001):
            ft.graph.add(LinkedList())
        ft.seen = [False] * 1000001
        for i in range(n):
            x = sc.nextInt()
            y = sc.nextInt()
            ft.graph.get(x).add(y)
            ft.graph.get(y).add(x)
        toremove = 0
        for i in range(1, m + 1):
            if not ft.seen[i]:
                ft.count = 0
                if ft.dfs(i, 0) == ft.cycle:
                    if ft.count % 2 == 1:
                        toremove += 1
        if (m - toremove) % 2 == 1:
            toremove += 1
        System.out.println(toremove)

if __name__ == '__main__':
    codeforces_216_B().main()"
StarCoder,avatar,Java,Python,atcoder_ABC136_B.py,"import java.util.* ; public class atcoder_ABC136_B { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int N = stdIn.nextInt ( ) ; int count = 0 ; int temp = N ; int ans = 0 ; while ( temp > 0 ) { temp /= 10 ; count ++ ; } for ( int i = 1 ; i <= count ; i ++ ) { if ( i == count ) { if ( i % 2 == 1 ) { ans += ( N - pow ( 10, i - 1 ) + 1 ) ; } } else { if ( i == 1 ) { ans += 9 ; } else if ( i % 2 == 1 ) { ans += ( pow ( 10, i ) - pow ( 10, i - 1 ) ) ; } } } System.out.println ( ans ) ; } }","import java.util.* ; public class atcoder_ABC136_B { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int N = stdIn.nextInt ( ) ; int count = 0 ; int temp = N ; int ans = 0 ; while ( temp > 0 ) { temp /= 10 ; count ++ ; } for ( int i = 1 ; i <= count ; i ++ ) { if ( i == count ) { if ( i % 2 == 1 ) { ans += ( N - pow ( 10, i - 1 ) + 1 ) ; } } else { if ( i == 1 ) { ans += 9 ; } else if ( i % 2 == 1 ) { ans += ( pow ( 10, i ) - pow ( 10, i - 1 ) ) ; } } } System.out.println ( ans ) ; } }"
StarCoder,avatar,Java,Python,codeforces_397_B.py,"import java.io.*;import java.util.*;public class Main{public static void main(String[] args)throws IOException{Scanner sc=new Scanner(System.in);int t=sc.nextInt();while(t-->0){long n=sc.nextLong();long a=sc.nextLong();long b=sc.nextLong();if(n<a){System.out.println(""No"");continue;}if(a==b){if(n%a==0){System.out.println(""Yes"");}else{System.out.println(""No"");}continue;}long x=b/(b-a);if(n>x*a){System.out.println(""Yes"");continue;}long low=1;long high=x+1;long ans=1;while(low<=high){long mid=(low+high)/2;if(mid*a<n){low=mid+1;}else{ans=mid;high=mid-1;}}if(n>(ans-1)*b&&n<ans*a){System.out.println(""No"");}else{System.out.println(""Yes"");}}}}","import java.io.*;import java.util.*;public class Main{public static void main(String[] args)throws IOException{Scanner sc=new Scanner(System.in);int t=sc.nextInt();while(t-->0){long n=sc.nextLong();long a=sc.nextLong();long b=sc.nextLong();if(n<a){System.out.println(""No"");continue;}if(a==b){if(n%a==0){System.out.println(""Yes"");}else{System.out.println(""No"");}continue;}long x=b/(b-a);if(n>x*a){System.out.println(""Yes"");continue;}long low=1;long high=x+1;long ans=1;while(low<=high){long mid=(low+high)/2;if(mid*a<n){low=mid+1;}else{ans=mid;high=mid-1;}}if(n>(ans-1)*b&&n<ans*a){System.out.println(""No"");}else{System.out.println(""Yes"");}}}}"
StarCoder,avatar,Java,Python,atcoder_ABC133_E.py,"import java.util.LinkedList ; import java.util.Scanner ; class Node:
    def __init__(self, i):
        self.pattern = 0
        self.index = i
        self.children = LinkedList()
        self.parent = -1
    def setParent(self, K, parent, use, nodes):
        self.pattern = K - use
        self.parent = parent
        count = 1
        if parent!= -1:
            count += 1
        for n in self.children:
            if n == self.parent:
                continue
            nodes[n].setParent(K, self.index, count, nodes)
            count += 1

def solve():
    in_ = Scanner(System.in)
    N = in_.nextInt()
    K = in_.nextInt()
    nodes = [Node(i) for i in range(N)]
    for i in range(N - 1):
        a = in_.nextInt() - 1
        b = in_.nextInt() - 1
        nodes[a].children.add(b)
        nodes[b].children.add(a)
    nodes[0].setParent(K, -1, 0, nodes)
    patterns = 1
    for i in range(N):
        patterns = (patterns * nodes[i].pattern) % 1_000_000_007
    System.out.println(patterns)

if __name__ == '__main__':
    solve()","import java.util.LinkedList ; import java.util.Scanner ; class Node:
    def __init__(self, i):
        self.pattern = 0
        self.index = i
        self.children = LinkedList()
        self.parent = -1
    def setParent(self, K, parent, use, nodes):
        self.pattern = K - use
        self.parent = parent
        count = 1
        if parent!= -1:
            count += 1
        for n in self.children:
            if n == self.parent:
                continue
            nodes[n].setParent(K, self.index, count, nodes)
            count += 1

def solve():
    in_ = Scanner(System.in)
    N = in_.nextInt()
    K = in_.nextInt()
    nodes = [Node(i) for i in range(N)]
    for i in range(N - 1):
        a = in_.nextInt() - 1
        b = in_.nextInt() - 1
        nodes[a].children.add(b)
        nodes[b].children.add(a)
    nodes[0].setParent(K, -1, 0, nodes)
    patterns = 1
    for i in range(N):
        patterns = (patterns * nodes[i].pattern) % 1_000_000_007
    System.out.println(patterns)

if __name__ == '__main__':
    solve()"
StarCoder,avatar,Java,Python,codeforces_70_B.py,"import sys

n = int(sys.stdin.readline())
input = sys.stdin.readline()

max = -1
msgLength = [0] * (len(input) / 2)
count = 0
idx = 0

for i in range(len(input)):
    c = input[i]
    if c == '.' or c == '?' or c == '!':
        msgLength[idx] = count + 1
        if count > max:
            max = count
        idx += 1
        count = 0
    else:
        count += 1

if max > n:
    print ""Impossible""
else:
    ans = 0
    for i in range(idx):
        l = msgLength[i]
        while i < idx - 1 and l + msgLength[i + 1] + 1 <= n:
            l += msgLength[i + 1] + 1
            i += 1
        ans += 1
    print ans","import sys

n = int(sys.stdin.readline())
input = sys.stdin.readline()

max = -1
msgLength = [0] * (len(input) // 2)
count = 0
idx = 0

for i in range(len(input)):
    c = input[i]
    if c == '.' or c == '?' or c == '!':
        msgLength[idx] = count + 1
        if count + 1> max:
            max = count + 1
        idx += 1
        count = 0
    else:
        count += 1

if max > n:
    print(""Impossible"")
else:
    ans = 0
    while i < idx:
        l = msgLength[i]
        while i < idx - 1 and l + msgLength[i + 1] + 1 <= n:
            l += msgLength[i + 1] + 1
            i += 1
        ans += 1
        i += 1
    print(ans)"
StarCoder,avatar,Java,Python,codeforces_400_A.py,"import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.util.Arrays ; public class codeforces_400_A { public static boolean isSolution ( int columnsCount, String x ) { boolean allXs [ ] = new boolean [ columnsCount ] ; Arrays.fill ( allXs, true ) ; for ( int i = 0 ; i < 12 ; i ++ ) { if ( x.charAt ( i )!= 'X' ) allXs [ i % columnsCount ] = false ; } for ( int i = 0 ; i < columnsCount ; i ++ ) if ( allXs [ i ] ) return true ; return false ; } public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int t = Integer.parseInt ( br.readLine ( ) ) ; for ( int i = 0 ; i < t ; i ++ ) { int possibleSolutions = 0 ; StringBuilder solutions = new StringBuilder ( ) ; String s = br.readLine ( ) ; if ( isSolution ( 12, s ) ) { solutions.append ( "" 1x12"" ) ; possibleSolutions ++ ; } if ( isSolution ( 6, s ) ) { solutions.append ( "" 2x6"" ) ; possibleSolutions ++ ; } if ( isSolution ( 4, s ) ) { solutions.append ( "" 3x4"" ) ; possibleSolutions ++ ; } if ( isSolution ( 3, s ) ) { solutions.append ( "" 4x3"" ) ; possibleSolutions ++ ; } if ( isSolution ( 2, s ) ) { solutions.append ( "" 6x2"" ) ; possibleSolutions ++ ; } if ( isSolution ( 1, s ) ) { solutions.append ( "" 12x1"" ) ; possibleSolutions ++ ; } pw.print ( possibleSolutions ++ ) ; pw.println ( solutions ) ; } pw.flush ( ) ; pw.close ( ) ; } }","import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.util.Arrays ; public class codeforces_400_A { public static boolean isSolution ( int columnsCount, String x ) { boolean allXs [ ] = new boolean [ columnsCount ] ; Arrays.fill ( allXs, true ) ; for ( int i = 0 ; i < 12 ; i ++ ) { if ( x.charAt ( i )!= 'X' ) allXs [ i % columnsCount ] = false ; } for ( int i = 0 ; i < columnsCount ; i ++ ) if ( allXs [ i ] ) return true ; return false ; } public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; PrintWriter pw = new PrintWriter ( System.out ) ; int t = Integer.parseInt ( br.readLine ( ) ) ; for ( int i = 0 ; i < t ; i ++ ) { int possibleSolutions = 0 ; StringBuilder solutions = new StringBuilder ( ) ; String s = br.readLine ( ) ; if ( isSolution ( 12, s ) ) { solutions.append ( "" 1x12"" ) ; possibleSolutions ++ ; } if ( isSolution ( 6, s ) ) { solutions.append ( "" 2x6"" ) ; possibleSolutions ++ ; } if ( isSolution ( 4, s ) ) { solutions.append ( "" 3x4"" ) ; possibleSolutions ++ ; } if ( isSolution ( 3, s ) ) { solutions.append ( "" 4x3"" ) ; possibleSolutions ++ ; } if ( isSolution ( 2, s ) ) { solutions.append ( "" 6x2"" ) ; possibleSolutions ++ ; } if ( isSolution ( 1, s ) ) { solutions.append ( "" 12x1"" ) ; possibleSolutions ++ ; } pw.print ( possibleSolutions ++ ) ; pw.println ( solutions ) ; } pw.flush ( ) ; pw.close ( ) ; } }"
StarCoder,avatar,Java,Python,atcoder_AGC006_B.py,"import java.util.Scanner ; import java.util.stream.IntStream ; public class atcoder_AGC006_B { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; int n = scanner.nextInt ( ) ; int x = scanner.nextInt ( ) ; print ( x, n ) ; } public static void print ( int x, int n ) { int max = n * 2 - 1 ; if ( x == 1 || x == max ) { System.out.println ( ""No"" ) ; return ; } System.out.println ( ""Yes"" ) ; String sep = System.lineSeparator ( ) ; String ans = IntStream.range ( x + n - 1, x + n + max - 1 ).mapToObj ( e -> ( e % max + 1 ) + sep ).collect ( StringBuilder :: new, StringBuilder :: append, StringBuilder :: append ).toString ( ) ; System.out.println ( ans ) ; } }","import java.util.Scanner ; import java.util.stream.IntStream ; public class atcoder_AGC006_B { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; int n = scanner.nextInt ( ) ; int x = scanner.nextInt ( ) ; print ( x, n ) ; } public static void print ( int x, int n ) { int max = n * 2 - 1 ; if ( x == 1 || x == max ) { System.out.println ( ""No"" ) ; return ; } System.out.println ( ""Yes"" ) ; String sep = System.lineSeparator ( ) ; String ans = IntStream.range ( x + n - 1, x + n + max - 1 ).mapToObj ( e -> ( e % max + 1 ) + sep ).collect ( StringBuilder :: new, StringBuilder :: append, StringBuilder :: append ).toString ( ) ; System.out.println ( ans ) ; } }"
StarCoder,avatar,Java,Python,atcoder_ARC102_C.py,import java.util.Scanner ; public class atcoder_ARC102_C { static int mod = 998244353 ; static long [ ] [ ] nchoosek ; public static void main ( String [ ] args ) { nchoosek = new long [ 4001 ] [ 4001 ] ; for ( int i = 0 ; i < nchoosek.length ; i ++ ) { nchoosek [ i ] [ 0 ] = nchoosek [ i ] [ i ] = 1 ; } for ( int i = 2 ; i < nchoosek.length ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { nchoosek [ i ] [ j ] = ( nchoosek [ i - 1 ] [ j ] + nchoosek [ i - 1 ] [ j - 1 ] ) % mod ; } } Scanner sc = new Scanner ( System.in ) ; int k = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; for ( int i = 2 ; i <= 2 * k ; i ++ ) { int pairs ; if ( i > k ) { pairs = k - i / 2 ; } else { pairs = ( i - 1 ) / 2 ; } int active = k - 2 * pairs ; if ( i % 2 == 0 ) active -= 1 ; long times2 = 1 ; long total = 0 ; for ( int j = 0 ; j <= pairs ; j ++ ) { long choice = times2 * nchoosek [ pairs ] [ j ] % mod ; times2 = times2 * 2 % mod ; if ( active + j - 1 < 0 ) continue ; total += choice * nchoosek [ n + active - 1 ] [ active + j - 1 ] ; if ( i % 2 == 0 ) { total += choice * nchoosek [ n + active - 2 ] [ active + j - 1 ] ; } total %= mod ; } System.out.println ( total ) ; } } },import java.util.Scanner ; public class atcoder_ARC102_C { static int mod = 998244353 ; static long [ ] [ ] nchoosek ; public static void main ( String [ ] args ) { nchoosek = new long [ 4001 ] [ 4001 ] ; for ( int i = 0 ; i < nchoosek.length ; i ++ ) { nchoosek [ i ] [ 0 ] = nchoosek [ i ] [ i ] = 1 ; } for ( int i = 2 ; i < nchoosek.length ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { nchoosek [ i ] [ j ] = ( nchoosek [ i - 1 ] [ j ] + nchoosek [ i - 1 ] [ j - 1 ] ) % mod ; } } Scanner sc = new Scanner ( System.in ) ; int k = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; for ( int i = 2 ; i <= 2 * k ; i ++ ) { int pairs ; if ( i > k ) { pairs = k - i / 2 ; } else { pairs = ( i - 1 ) / 2 ; } int active = k - 2 * pairs ; if ( i % 2 == 0 ) active -= 1 ; long times2 = 1 ; long total = 0 ; for ( int j = 0 ; j <= pairs ; j ++ ) { long choice = times2 * nchoosek [ pairs ] [ j ] % mod ; times2 = times2 * 2 % mod ; if ( active + j - 1 < 0 ) continue ; total += choice * nchoosek [ n + active - 1 ] [ active + j - 1 ] ; if ( i % 2 == 0 ) { total += choice * nchoosek [ n + active - 2 ] [ active + j - 1 ] ; } total %= mod ; } System.out.println ( total ) ; } } }
StarCoder,avatar,Java,Python,codeforces_306_A.py,"import java.util.Arrays ; import java.util.Scanner ; public class codeforces_306_A { public static Scanner input = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { int n = input.nextInt ( ) ; int m = input.nextInt ( ) ; int a [ ] = new int [ m ] ; if ( n % m == 0 ) { for ( int i = 0 ; i < a.length ; i ++ ) { a [ i ] = n / m ; } } else { int sub = n / m ; for ( int i = 0 ; i < a.length ; i ++ ) { a [ i ] = sub ; } int test = n - ( sub * m ) ; int count = 0 ; for ( int i = 0 ; i < test ; i ++ ) { a [ count ] = a [ count ] + 1 ; count ++ ; if ( count > + a.length ) count = 0 ; } } for ( int i = ( a.length - 1 ) ; i >= 0 ; i -- ) { System.out.print ( a [ i ] + "" "" ) ; } } }","import java.util.Arrays ; import java.util.Scanner ; public class codeforces_306_A { public static Scanner input = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { int n = input.nextInt ( ) ; int m = input.nextInt ( ) ; int a [ ] = new int [ m ] ; if ( n % m == 0 ) { for ( int i = 0 ; i < a.length ; i ++ ) { a [ i ] = n / m ; } } else { int sub = n / m ; for ( int i = 0 ; i < a.length ; i ++ ) { a [ i ] = sub ; } int test = n - ( sub * m ) ; int count = 0 ; for ( int i = 0 ; i < test ; i ++ ) { a [ count ] = a [ count ] + 1 ; count ++ ; if ( count > + a.length ) count = 0 ; } } for ( int i = ( a.length - 1 ) ; i >= 0 ; i -- ) { System.out.print ( a [ i ] + "" "" ) ; } } }"
StarCoder,avatar,Java,Python,codeforces_203_B.py,"import java.util.Scanner ; public class codeforces_203_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int N = in.nextInt ( ) ; int M = in.nextInt ( ) ; int [ ] [ ] black = new int [ N + 2 ] [ N + 2 ] ; for ( int m = 1 ; m <= M ; m ++ ) { int x = in.nextInt ( ) ; int y = in.nextInt ( ) ; for ( int xx = x - 1 ; xx <= x + 1 ; xx ++ ) { for ( int yy = y - 1 ; yy <= y + 1 ; yy ++ ) { if ( ++ black [ xx ] [ yy ] == 9 ) { System.out.println ( m ) ; return ; } } } } System.out.println ( ""-1"" ) ; } }","import java.util.Scanner ; public class codeforces_203_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int N = in.nextInt ( ) ; int M = in.nextInt ( ) ; int [ ] [ ] black = new int [ N + 2 ] [ N + 2 ] ; for ( int m = 1 ; m <= M ; m ++ ) { int x = in.nextInt ( ) ; int y = in.nextInt ( ) ; for ( int xx = x - 1 ; xx <= x + 1 ; xx ++ ) { for ( int yy = y - 1 ; yy <= y + 1 ; yy ++ ) { if ( ++ black [ xx ] [ yy ] == 9 ) { System.out.println ( m ) ; return ; } } } } System.out.println ( ""-1"" ) ; } }"
StarCoder,avatar,Java,Python,atcoder_ABC114_C.py,"import java.util.Scanner ; public class atcoder_ABC114_C { static Scanner scanner ; public static void main ( String [ ] args ) { scanner = new Scanner ( System.in ) ; int N = gi ( ) ; long i = 357 ; int c = 0 ; while ( i <= N ) { String s = String.valueOf ( i ) ; if ( s.contains ( ""3"" ) && s.contains ( ""5"" ) && s.contains ( ""7"" ) ) c ++ ; StringBuilder sb = new StringBuilder ( ) ; boolean f = False ; for ( int j = 0 ; j < s.length ( ) ; j ++ ) { char a = s.charAt ( s.length ( ) - 1 - j ) ; if ( f ) { sb.append ( a ) ; } else { if ( a == '3' ) { sb.append ( '5' ) ; f = True ; } else if ( a == '5' ) { sb.append ( '7' ) ; f = True ; } else { sb.append ( '3' ) ; } } } if (! f ) sb.append ( 3 ) ; StringBuffer sb2 = new StringBuffer ( sb ) ; i = Long.parseLong ( sb2.reverse ( ).toString ( ) ) ; } System.out.println ( c ) ; } public static String gs ( ) { return scanner.next ( ) ; } public static int gi ( ) { return Integer.parseInt ( scanner.next ( ) ) ; } public static long gl ( ) { return Long.parseLong ( scanner.next ( ) ) ; } public static double gd ( ) { return Double.parseDouble ( scanner.next ( ) ) ; } }","import java.util.Scanner ; public class atcoder_ABC114_C { static Scanner scanner ; public static void main ( String [ ] args ) { scanner = new Scanner ( System.in ) ; int N = gi ( ) ; long i = 357 ; int c = 0 ; while ( i <= N ) { String s = String.valueOf ( i ) ; if ( s.contains ( ""3"" ) && s.contains ( ""5"" ) && s.contains ( ""7"" ) ) c ++ ; StringBuilder sb = new StringBuilder ( ) ; boolean f = False ; for ( int j = 0 ; j < s.length ( ) ; j ++ ) { char a = s.charAt ( s.length ( ) - 1 - j ) ; if ( f ) { sb.append ( a ) ; } else { if ( a == '3' ) { sb.append ( '5' ) ; f = True ; } else if ( a == '5' ) { sb.append ( '7' ) ; f = True ; } else { sb.append ( '3' ) ; } } } if (! f ) sb.append ( 3 ) ; StringBuffer sb2 = new StringBuffer ( sb ) ; i = Long.parseLong ( sb2.reverse ( ).toString ( ) ) ; } System.out.println ( c ) ; } public static String gs ( ) { return scanner.next ( ) ; } public static int gi ( ) { return Integer.parseInt ( scanner.next ( ) ) ; } public static long gl ( ) { return Long.parseLong ( scanner.next ( ) ) ; } public static double gd ( ) { return Double.parseDouble ( scanner.next ( ) ) ; } }"
StarCoder,avatar,Java,Python,codeforces_23_B.py,import java.util.Scanner ; public class codeforces_23_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int t = scan.nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = scan.nextInt ( ) ; System.out.println ( maxLeft ( n ) ) ; } } public static int maxLeft ( int n ) { return n > 2? n - 2 : 0 ; } },import java.util.Scanner ; public class codeforces_23_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int t = scan.nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = scan.nextInt ( ) ; System.out.println ( maxLeft ( n ) ) ; } } public static int maxLeft ( int n ) { return n > 2? n - 2 : 0 ; } }
StarCoder,avatar,Java,Python,codeforces_354_A.py,"import java.util.Scanner ; public class codeforces_354_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int N = in.nextInt ( ) ; int L = in.nextInt ( ) ; int R = in.nextInt ( ) ; int QL = in.nextInt ( ) ; int QR = in.nextInt ( ) ; int [ ] W = new int [ N ] ; int [ ] sum = new int [ N + 1 ] ; for ( int n = 0 ; n < N ; n ++ ) { W [ n ] = in.nextInt ( ) ; sum [ n + 1 ] = sum [ n ] + W [ n ] ; } long min = Long.MAX_VALUE ; for ( int firstR = 0 ; firstR <= N ; firstR ++ ) { int lCount = firstR ; int rCount = N - lCount ; long cand = sum [ lCount ] * L + ( sum [ N ] - sum [ lCount ] ) * R ; int llCount = Math.max ( 0, lCount - rCount - 1 ) ; int rrCount = Math.max ( 0, rCount - lCount - 1 ) ; cand += llCount * QL ; cand += rrCount * QR ; min = Math.min ( cand, min ) ; } System.out.println ( min ) ; } }","import java.util.Scanner ; public class codeforces_354_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; int N = in.nextInt ( ) ; int L = in.nextInt ( ) ; int R = in.nextInt ( ) ; int QL = in.nextInt ( ) ; int QR = in.nextInt ( ) ; int [ ] W = new int [ N ] ; int [ ] sum = new int [ N + 1 ] ; for ( int n = 0 ; n < N ; n ++ ) { W [ n ] = in.nextInt ( ) ; sum [ n + 1 ] = sum [ n ] + W [ n ] ; } long min = Long.MAX_VALUE ; for ( int firstR = 0 ; firstR <= N ; firstR ++ ) { int lCount = firstR ; int rCount = N - lCount ; long cand = sum [ lCount ] * L + ( sum [ N ] - sum [ lCount ] ) * R ; int llCount = Math.max ( 0, lCount - rCount - 1 ) ; int rrCount = Math.max ( 0, rCount - lCount - 1 ) ; cand += llCount * QL ; cand += rrCount * QR ; min = Math.min ( cand, min ) ; } System.out.println ( min ) ; } }"
StarCoder,avatar,Java,Python,codeforces_8_B.py,"import java.util.Scanner ; public class codeforces_8_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int i, j, x = 0, y = 0, k = 0, dx, dy ; boolean flag = True ; String s ; char [ ] ch = new char [ 100 ] ; int [ ] [ ] co = new int [ 2 ] [ 101 ] ; s = scan.next ( ) ; ch = s.toCharArray ( ) ; co [ 0 ] [ k ] = x ; co [ 1 ] [ k ] = y ; ++ k ; for ( i = 0 ; i < s.length ( ) ; ++ i ) { switch ( ch [ i ] ) { case 'L' : -- x ; break ; case 'R' : ++ x ; break ; case 'U' : ++ y ; break ; case 'D' : -- y ; break ; } co [ 0 ] [ k ] = x ; co [ 1 ] [ k ] = y ; ++ k ; } for ( i = 0 ; i < k - 3 ; ++ i ) { for ( j = i + 3 ; j < k ; ++ j ) { dx = co [ 0 ] [ i ] - co [ 0 ] [ j ] ; dy = co [ 1 ] [ i ] - co [ 1 ] [ j ] ; if ( dx < 0 ) dx *= ( - 1 ) ; if ( dy < 0 ) dy *= ( - 1 ) ; if ( ( dx <= 1 && dy == 0 ) || ( dy <= 1 && dx == 0 ) ) { flag = False ; break ; } } if (! flag ) break ; } if ( flag ) System.out.println ( ""OK"" ) ; else System.out.println ( ""BUG"" ) ; } }","import java.util.Scanner ; public class codeforces_8_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int i, j, x = 0, y = 0, k = 0, dx, dy ; boolean flag = True ; String s ; char [ ] ch = new char [ 100 ] ; int [ ] [ ] co = new int [ 2 ] [ 101 ] ; s = scan.next ( ) ; ch = s.toCharArray ( ) ; co [ 0 ] [ k ] = x ; co [ 1 ] [ k ] = y ; ++ k ; for ( i = 0 ; i < s.length ( ) ; ++ i ) { switch ( ch [ i ] ) { case 'L' : -- x ; break ; case 'R' : ++ x ; break ; case 'U' : ++ y ; break ; case 'D' : -- y ; break ; } co [ 0 ] [ k ] = x ; co [ 1 ] [ k ] = y ; ++ k ; } for ( i = 0 ; i < k - 3 ; ++ i ) { for ( j = i + 3 ; j < k ; ++ j ) { dx = co [ 0 ] [ i ] - co [ 0 ] [ j ] ; dy = co [ 1 ] [ i ] - co [ 1 ] [ j ] ; if ( dx < 0 ) dx *= ( - 1 ) ; if ( dy < 0 ) dy *= ( - 1 ) ; if ( ( dx <= 1 && dy == 0 ) || ( dy <= 1 && dx == 0 ) ) { flag = False ; break ; } } if (! flag ) break ; } if ( flag ) System.out.println ( ""OK"" ) ; else System.out.println ( ""BUG"" ) ; } }"
StarCoder,avatar,Java,Python,atcoder_AGC004_B.py,"import java.util.ArrayList ; import java.util.List ; import java.util.Scanner ; public class atcoder_AGC004_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int N = scan.nextInt ( ) ; long x = scan.nextLong ( ) ; List < Long > srimeList = new ArrayList < > ( N ) ; for ( long i = 0 ; i < N ; i ++ ) { srimeList.add ( scan.nextLong ( ) ) ; } List < Long [ ] > costList = new ArrayList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { costList.add ( new Long [ N ] ) ; } for ( int i = 0 ; i < N ; i ++ ) { costList.get ( i ) [ 0 ] = srimeList.get ( i ) ; for ( int castNum = 1 ; castNum < N ; castNum ++ ) { costList.get ( i ) [ castNum ] = Math.min ( costList.get ( i ) [ castNum - 1 ], srimeList.get ( ( i - castNum + N ) % N ) ) ; } } List < Long > result = new ArrayList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { final int j = i ; result.add ( i * x + costList.stream ( ).mapToLong ( costArray -> costArray [ j ] ).sum ( ) ) ; } System.out.println ( result.stream ( ).mapToLong ( i -> i ).min ( ).getAsLong ( ) ) ; } }","import java.util.ArrayList ; import java.util.List ; import java.util.Scanner ; public class atcoder_AGC004_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int N = scan.nextInt ( ) ; long x = scan.nextLong ( ) ; List < Long > srimeList = new ArrayList < > ( N ) ; for ( long i = 0 ; i < N ; i ++ ) { srimeList.add ( scan.nextLong ( ) ) ; } List < Long [ ] > costList = new ArrayList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { costList.add ( new Long [ N ] ) ; } for ( int i = 0 ; i < N ; i ++ ) { costList.get ( i ) [ 0 ] = srimeList.get ( i ) ; for ( int castNum = 1 ; castNum < N ; castNum ++ ) { costList.get ( i ) [ castNum ] = Math.min ( costList.get ( i ) [ castNum - 1 ], srimeList.get ( ( i - castNum + N ) % N ) ) ; } } List < Long > result = new ArrayList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { final int j = i ; result.add ( i * x + costList.stream ( ).mapToLong ( costArray -> costArray [ j ] ).sum ( ) ) ; } System.out.println ( result.stream ( ).mapToLong ( i -> i ).min ( ).getAsLong ( ) ) ; } }"
StarCoder,avatar,Java,Python,codeforces_644_B.py,"import java.util.* ; public class codeforces_644_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; long [ ] ans = new long [ n ] ; LinkedList < Long > q = new LinkedList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int t = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; while (! q.isEmpty ( ) && q.getFirst ( ) <= t ) { q.pollFirst ( ) ; } if ( q.size ( ) <= b ) { ans [ i ] = ( q.isEmpty ( )? t : q.getLast ( ) ) + d ; q.add ( ans [ i ] ) ; } else { ans [ i ] = - 1 ; } } for ( int i = 0 ; i < n ; ++ i ) { System.out.print ( ans [ i ] + "" "" ) ; } } }","import java.util.* ; public class codeforces_644_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; long [ ] ans = new long [ n ] ; LinkedList < Long > q = new LinkedList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int t = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; while (! q.isEmpty ( ) && q.getFirst ( ) <= t ) { q.pollFirst ( ) ; } if ( q.size ( ) <= b ) { ans [ i ] = ( q.isEmpty ( )? t : q.getLast ( ) ) + d ; q.add ( ans [ i ] ) ; } else { ans [ i ] = - 1 ; } } for ( int i = 0 ; i < n ; ++ i ) { System.out.print ( ans [ i ] + "" "" ) ; } } }"
StarCoder,avatar,Java,Python,codeforces_274_A.py,import java.util.* ; public class codeforces_274_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long k = sc.nextLong ( ) ; long [ ] arr = new long [ n ] ; HashSet < Long > set = new HashSet < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextLong ( ) ; } Arrays.sort ( arr ) ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % k!= 0 ) { count ++ ; set.add ( arr [ i ] ) ; } else if (! set.contains ( arr [ i ] / k ) ) { count ++ ; set.add ( arr [ i ] ) ; } } System.out.println ( count ) ; } },import java.util.* ; public class codeforces_274_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long k = sc.nextLong ( ) ; long [ ] arr = new long [ n ] ; HashSet < Long > set = new HashSet < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextLong ( ) ; } Arrays.sort ( arr ) ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % k!= 0 ) { count ++ ; set.add ( arr [ i ] ) ; } else if (! set.contains ( arr [ i ] / k ) ) { count ++ ; set.add ( arr [ i ] ) ; } } System.out.println ( count ) ; } }
StarCoder,avatar,Java,Python,atcoder_AGC011_C.py,"import java.util.* ; class Main implements Runnable { ArrayList < Integer > [ ] graph ; boolean [ ] visited ; int [ ] color ; long one ; long bipartite ; long count ; boolean mujun ; int dfs ( int a, int c ) { if ( visited [ a ] ) { if ( color [ a ] >= 0 && color [ a ]!= c ) mujun = true ; return 0 ; } visited [ a ] = true ; color [ a ] = c ; int total = 1 ; for ( int b : graph [ a ] ) { total += dfs ( b, 1 - c ) ; } return total ; } public void run ( ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int m = scan.nextInt ( ) ; this.graph = new ArrayList [ n ] ; for ( int i = 0 ; i < n ; ++ i ) this.graph [ i ] = new ArrayList < Integer > ( ) ; for ( int i = 0 ; i < m ; ++ i ) { int u = scan.nextInt ( ) - 1 ; int v = scan.nextInt ( ) - 1 ; this.graph [ u ].add ( v ) ; this.graph [ v ].add ( u ) ; } visited = new boolean [ n ] ; color = new int [ n ] ; Arrays.fill ( color, - 1 ) ; one = 0 ; bipartite = 0 ; count = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( visited [ i ] ) continue ; count ++ ; mujun = False ; int kind = dfs ( i, 0 ) ; if ( kind == 1 ) one ++ ; else if (! mujun ) bipartite ++ ; } long total = one * ( 2 * n - one ) ; total += ( count - one ) * ( count - one ) ; total += bipartite * bipartite ; System.out.println ( total ) ; } public static void main ( String [ ] args ) { new Thread ( null, new Main ( ), """", 128 * 1024 * 1024 ).start ( ) ; } }","import java.util.* ; class Main implements Runnable { ArrayList < Integer > [ ] graph ; boolean [ ] visited ; int [ ] color ; long one ; long bipartite ; long count ; boolean mujun ; int dfs ( int a, int c ) { if ( visited [ a ] ) { if ( color [ a ] >= 0 && color [ a ]!= c ) mujun = true ; return 0 ; } visited [ a ] = true ; color [ a ] = c ; int total = 1 ; for ( int b : graph [ a ] ) { total += dfs ( b, 1 - c ) ; } return total ; } public void run ( ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int m = scan.nextInt ( ) ; this.graph = new ArrayList [ n ] ; for ( int i = 0 ; i < n ; ++ i ) this.graph [ i ] = new ArrayList < Integer > ( ) ; for ( int i = 0 ; i < m ; ++ i ) { int u = scan.nextInt ( ) - 1 ; int v = scan.nextInt ( ) - 1 ; this.graph [ u ].add ( v ) ; this.graph [ v ].add ( u ) ; } visited = new boolean [ n ] ; color = new int [ n ] ; Arrays.fill ( color, - 1 ) ; one = 0 ; bipartite = 0 ; count = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( visited [ i ] ) continue ; count ++ ; mujun = False ; int kind = dfs ( i, 0 ) ; if ( kind == 1 ) one ++ ; else if (! mujun ) bipartite ++ ; } long total = one * ( 2 * n - one ) ; total += ( count - one ) * ( count - one ) ; total += bipartite * bipartite ; System.out.println ( total ) ; } public static void main ( String [ ] args ) { new Thread ( null, new Main ( ), """", 128 * 1024 * 1024 ).start ( ) ; } }"
StarCoder,avatar,Java,Python,atcoder_ABC139_B.py,import java.io.PrintWriter ; import java.util.Scanner ; public class atcoder_ABC139_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int A = Integer.parseInt ( sc.next ( ) ) ; int B = Integer.parseInt ( sc.next ( ) ) ; int amari = 0 ; int result = 0 ; result = ( B - 1 ) / ( A - 1 ) ; amari = ( B - 1 ) % ( A - 1 ) ; if ( amari!= 0 ) { result += 1 ; } PrintWriter out = new PrintWriter ( System.out ) ; out.println ( result ) ; sc.close ( ) ; out.flush ( ) ; } },import java.io.PrintWriter ; import java.util.Scanner ; public class atcoder_ABC139_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int A = Integer.parseInt ( sc.next ( ) ) ; int B = Integer.parseInt ( sc.next ( ) ) ; int amari = 0 ; int result = 0 ; result = ( B - 1 ) / ( A - 1 ) ; amari = ( B - 1 ) % ( A - 1 ) ; if ( amari!= 0 ) { result += 1 ; } PrintWriter out = new PrintWriter ( System.out ) ; out.println ( result ) ; sc.close ( ) ; out.flush ( ) ; } }
StarCoder,avatar,Java,Python,atcoder_ABC107_D.py,"import java.io.BufferedInputStream ; import java.util.Arrays ; import java.util.HashMap ; import java.util.Scanner ; import java.util.TreeMap ; public class atcoder_ABC107_D { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( new BufferedInputStream ( System.in ) ) ; int N = scan.nextInt ( ) ; int [ ] arr = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) arr [ i ] = scan.nextInt ( ) ; Task tsk = new Task ( ) ; System.out.println ( tsk.solve ( arr ) ) ; } static class Task { public int solve ( int [ ] arr ) { int n = arr.length ; int [ ] sorted = Arrays.copyOf ( arr, n ) ; Arrays.sort ( sorted ) ; long total = ( long ) n * ( n + 1 ) / 2 ; int l = 0, r = n - 1 ; while ( l < r ) { int mid = l + ( r - l ) / 2 ; int target = sorted [ mid ] ; int cur = 0 ; long cnt = 0 ; long [ ] bit = new long [ 2 * n + 2 ] ; for ( int x = n + 1 ; x < bit.length ; x += x & - x ) bit [ x ] ++ ; for ( int i = 0 ; i < n ; i ++ ) { cur += arr [ i ] <= target? 1 : - 1 ; for ( int x = cur + n + 1 ; x < bit.length ; x += x & - x ) bit [ x ] ++ ; for ( int x = cur + n ; x > 0 ; x -= x & - x ) cnt += bit [ x ] ; } if ( cnt >= total / 2 + 1 ) r = mid ; else l = mid + 1 ; } return sorted [ l ] ; } } }","import java.io.BufferedInputStream ; import java.util.Arrays ; import java.util.HashMap ; import java.util.Scanner ; import java.util.TreeMap ; public class atcoder_ABC107_D { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( new BufferedInputStream ( System.in ) ) ; int N = scan.nextInt ( ) ; int [ ] arr = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) arr [ i ] = scan.nextInt ( ) ; Task tsk = new Task ( ) ; System.out.println ( tsk.solve ( arr ) ) ; } static class Task { public int solve ( int [ ] arr ) { int n = arr.length ; int [ ] sorted = Arrays.copyOf ( arr, n ) ; Arrays.sort ( sorted ) ; long total = ( long ) n * ( n + 1 ) / 2 ; int l = 0, r = n - 1 ; while ( l < r ) { int mid = l + ( r - l ) / 2 ; int target = sorted [ mid ] ; int cur = 0 ; long cnt = 0 ; long [ ] bit = new long [ 2 * n + 2 ] ; for ( int x = n + 1 ; x < bit.length ; x += x & - x ) bit [ x ] ++ ; for ( int i = 0 ; i < n ; i ++ ) { cur += arr [ i ] <= target? 1 : - 1 ; for ( int x = cur + n + 1 ; x < bit.length ; x += x & - x ) bit [ x ] ++ ; for ( int x = cur + n ; x > 0 ; x -= x & - x ) cnt += bit [ x ] ; } if ( cnt >= total / 2 + 1 ) r = mid ; else l = mid + 1 ; } return sorted [ l ] ; } } }"
StarCoder,avatar,Java,Python,atcoder_ABC104_C.py,"import java.util.Scanner ; public class atcoder_ABC104_C { static final int INF = 100000 ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int D = sc.nextInt ( ) ; long G = sc.nextLong ( ) ; int [ ] p = new int [ D ] ; int [ ] c = new int [ D ] ; for ( int i = 0 ; i < D ; i ++ ) { p [ i ] = sc.nextInt ( ) ; c [ i ] = sc.nextInt ( ) ; } int min = INF ; for ( int bit = 0 ; bit < ( 1 << D ) ; bit ++ ) { int score = 0 ; int solve_num = 0 ; for ( int i = 0 ; i < D ; i ++ ) { if ( ( bit & ( 1 << i ) )!= 0 ) { score += 100 * ( i + 1 ) * p [ i ] + c [ i ] ; solve_num += p [ i ] ; } } if ( score < G ) { loop : for ( int i = D - 1 ; i >= 0 ; i -- ) { if ( ( bit & ( 1 << i ) ) == 0 ) { for ( int j = 0 ; j < p [ i ] - 1 ; j ++ ) { score += 100 * ( i + 1 ) ; solve_num ++ ; if ( score >= G ) { break loop ; } } } } } if ( score >= G ) { min = Math.min ( min, solve_num ) ; } } System.out.println ( min ) ; sc.close ( ) ; } }","import java.util.Scanner ; public class atcoder_ABC104_C { static final int INF = 100000 ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int D = sc.nextInt ( ) ; long G = sc.nextLong ( ) ; int [ ] p = new int [ D ] ; int [ ] c = new int [ D ] ; for ( int i = 0 ; i < D ; i ++ ) { p [ i ] = sc.nextInt ( ) ; c [ i ] = sc.nextInt ( ) ; } int min = INF ; for ( int bit = 0 ; bit < ( 1 << D ) ; bit ++ ) { int score = 0 ; int solve_num = 0 ; for ( int i = 0 ; i < D ; i ++ ) { if ( ( bit & ( 1 << i ) )!= 0 ) { score += 100 * ( i + 1 ) * p [ i ] + c [ i ] ; solve_num += p [ i ] ; } } if ( score < G ) { loop : for ( int i = D - 1 ; i >= 0 ; i -- ) { if ( ( bit & ( 1 << i ) ) == 0 ) { for ( int j = 0 ; j < p [ i ] - 1 ; j ++ ) { score += 100 * ( i + 1 ) ; solve_num ++ ; if ( score >= G ) { break loop ; } } } } } if ( score >= G ) { min = Math.min ( min, solve_num ) ; } } System.out.println ( min ) ; sc.close ( ) ; } }"
StarCoder,avatar,Java,Python,atcoder_ABC150_C.py,"import java.util.ArrayList ; import java.util.Arrays ; import java.util.List ; import java.util.Scanner ; def permutation(list, target, ans):
    if len(target) <= 1:
        list.add(ans + target)
    else:
        for i in range(len(target)):
            permutation(list, target[:i] + target[i+1:], ans + target[i])
    return list

def main():
    scanner = Scanner(System.in)
    n = Integer.parseInt(scanner.next())
    line = [""""] * 2
    for i in range(2):
        for j in range(n):
            line[i] += scanner.next()
    number = """"
    for i in range(1, n+1):
        number += str(i)
    listA = ArrayList()
    permutation(listA, number, """")
    sum = 0
    for j in range(2):
        for i in range(listA.size()):
            if listA.get(i).equals(line[j]):
                if sum == 0:
                    sum += i
                else:
                    sum -= i
    System.out.println(Math.abs(sum))

if __name__ == ""__main__"":
    main()","import java.util.ArrayList ; import java.util.Arrays ; import java.util.List ; import java.util.Scanner ; def permutation(list, target, ans):
    if len(target) <= 1:
        list.add(ans + target)
    else:
        for i in range(len(target)):
            permutation(list, target[:i] + target[i+1:], ans + target[i])
    return list

def main():
    scanner = Scanner(System.in)
    n = Integer.parseInt(scanner.next())
    line = [""""] * 2
    for i in range(2):
        for j in range(n):
            line[i] += scanner.next()
    number = """"
    for i in range(1, n+1):
        number += str(i)
    listA = ArrayList()
    permutation(listA, number, """")
    sum = 0
    for j in range(2):
        for i in range(listA.size()):
            if listA.get(i).equals(line[j]):
                if sum == 0:
                    sum += i
                else:
                    sum -= i
    System.out.println(Math.abs(sum))

if __name__ == ""__main__"":
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC132_F.py,import java.util.* ; public class atcoder_ABC132_F { public static void main ( String [ ] args ) { long mod = ( long ) 1e9 + 7 ; Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; sc.close ( ) ; ArrayList < Integer > len = new ArrayList < > ( ) ; int l = 1 ; while ( l <= n ) { int r = n / ( n / l ) ; len.add ( r - l + 1 ) ; l = r + 1 ; } int q = len.size ( ) ; long [ ] dp = new long [ k * ( q + 1 ) ] ; for ( int j = 1 ; j <= q ; j ++ ) { dp [ j ] = len.get ( j - 1 ) + dp [ j - 1 ] ; } for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j <= q ; j ++ ) { dp [ i * ( q + 1 ) + j ] = dp [ i * ( q + 1 ) + j - 1 ] + dp [ ( i - 1 ) * ( q + 1 ) + q - j + 1 ] * len.get ( j - 1 ) ; dp [ i * ( q + 1 ) + j ] %= mod ; } } System.out.println ( dp [ k * ( q + 1 ) - 1 ] ) ; } },import java.util.* ; public class atcoder_ABC132_F { public static void main ( String [ ] args ) { long mod = ( long ) 1e9 + 7 ; Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; sc.close ( ) ; ArrayList < Integer > len = new ArrayList < > ( ) ; int l = 1 ; while ( l <= n ) { int r = n / ( n / l ) ; len.add ( r - l + 1 ) ; l = r + 1 ; } int q = len.size ( ) ; long [ ] dp = new long [ k * ( q + 1 ) ] ; for ( int j = 1 ; j <= q ; j ++ ) { dp [ j ] = len.get ( j - 1 ) + dp [ j - 1 ] ; } for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j <= q ; j ++ ) { dp [ i * ( q + 1 ) + j ] = dp [ i * ( q + 1 ) + j - 1 ] + dp [ ( i - 1 ) * ( q + 1 ) + q - j + 1 ] * len.get ( j - 1 ) ; dp [ i * ( q + 1 ) + j ] %= mod ; } } System.out.println ( dp [ k * ( q + 1 ) - 1 ] ) ; } }
StarCoder,avatar,Java,Python,atcoder_ABC109_B.py,"import java.util.HashMap ; import java.util.Scanner ; public class atcoder_ABC109_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; HashMap < Integer, String > map = new HashMap < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { map.put ( i, sc.next ( ) ) ; } boolean ans = True ; HashMap < Integer, String > past = new HashMap < > ( ) ; String next = """" ; for ( int i = 0 ; i < N ; i ++ ) { if ( past.containsValue ( map.get ( i ) ) ) { ans = False ; break ; } past.put ( i, map.get ( i ) ) ; if ( i!= 0 ) { if (! next.equals ( map.get ( i ).substring ( 0, 1 ) ) ) { ans = False ; break ; } } next = map.get ( i ).substring ( map.get ( i ).length ( ) - 1, map.get ( i ).length ( ) ) ; } if ( ans ) { System.out.println ( ""Yes"" ) ; } else { System.out.println ( ""No"" ) ; } } }","import java.util.HashMap ; import java.util.Scanner ; public class atcoder_ABC109_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; HashMap < Integer, String > map = new HashMap < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { map.put ( i, sc.next ( ) ) ; } boolean ans = True ; HashMap < Integer, String > past = new HashMap < > ( ) ; String next = """" ; for ( int i = 0 ; i < N ; i ++ ) { if ( past.containsValue ( map.get ( i ) ) ) { ans = False ; break ; } past.put ( i, map.get ( i ) ) ; if ( i!= 0 ) { if (! next.equals ( map.get ( i ).substring ( 0, 1 ) ) ) { ans = False ; break ; } } next = map.get ( i ).substring ( map.get ( i ).length ( ) - 1, map.get ( i ).length ( ) ) ; } if ( ans ) { System.out.println ( ""Yes"" ) ; } else { System.out.println ( ""No"" ) ; } } }"
StarCoder,avatar,Java,Python,codeforces_59_A.py,import java.util.Scanner ; public class codeforces_59_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String word = in.next ( ) ; int uppercase = 0 ; int lowercase = 0 ; for ( int i = 0 ; i < word.length ( ) ; i ++ ) { char ch = word.charAt ( i ) ; if ( Character.isUpperCase ( ch ) ) { uppercase ++ ; } else { lowercase ++ ; } } if ( uppercase > lowercase ) System.out.println ( word.toUpperCase ( ) ) ; else if ( lowercase > uppercase ) System.out.println ( word.toLowerCase ( ) ) ; else System.out.println ( word.toLowerCase ( ) ) ; } },import java.util.Scanner ; public class codeforces_59_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String word = in.next ( ) ; int uppercase = 0 ; int lowercase = 0 ; for ( int i = 0 ; i < word.length ( ) ; i ++ ) { char ch = word.charAt ( i ) ; if ( Character.isUpperCase ( ch ) ) { uppercase ++ ; } else { lowercase ++ ; } } if ( uppercase > lowercase ) System.out.println ( word.toUpperCase ( ) ) ; else if ( lowercase > uppercase ) System.out.println ( word.toLowerCase ( ) ) ; else System.out.println ( word.toLowerCase ( ) ) ; } }
StarCoder,avatar,Java,Python,codeforces_617_B.py,import java.util.* ; public class codeforces_617_B { static Scanner input = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { int n = input.nextInt ( ) ; List < Integer > arr = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) if ( input.nextInt ( ) == 1 ) arr.add ( i ) ; if ( arr.isEmpty ( ) ) System.out.println ( 0 ) ; else { long result = 1 ; for ( int i = 1 ; i < arr.size ( ) ; i ++ ) result *= arr.get ( i ) - arr.get ( i - 1 ) ; System.out.println ( result ) ; } } },import java.util.* ; public class codeforces_617_B { static Scanner input = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { int n = input.nextInt ( ) ; List < Integer > arr = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) if ( input.nextInt ( ) == 1 ) arr.add ( i ) ; if ( arr.isEmpty ( ) ) System.out.println ( 0 ) ; else { long result = 1 ; for ( int i = 1 ; i < arr.size ( ) ; i ++ ) result *= arr.get ( i ) - arr.get ( i - 1 ) ; System.out.println ( result ) ; } } }
StarCoder,avatar,Java,Python,atcoder_ABC123_C.py,"import java.util.ArrayDeque ; import java.util.Queue ; import java.util.Random ; import java.util.Scanner ; public class atcoder_ABC123_C { private static Scanner sc = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { long N = sc.nextLong ( ) ; long min = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { if ( i == 0 ) min = sc.nextLong ( ) ; else min = Math.min ( min, sc.nextLong ( ) ) ; } p ( ( long ) Math.ceil ( ( double ) N / min ) + 4 ) ; } static void p ( String ans ) { System.out.println ( ans ) ; } ; static void p ( int ans ) { System.out.println ( ans ) ; } ; static void p ( ) { System.out.println ( ) ; } ; static void p ( long ans ) { System.out.println ( ans ) ; } ; static void p ( double ans ) { System.out.println ( ans ) ; } ; }","import java.util.ArrayDeque ; import java.util.Queue ; import java.util.Random ; import java.util.Scanner ; public class atcoder_ABC123_C { private static Scanner sc = new Scanner ( System.in ) ; public static void main ( String [ ] args ) { long N = sc.nextLong ( ) ; long min = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { if ( i == 0 ) min = sc.nextLong ( ) ; else min = Math.min ( min, sc.nextLong ( ) ) ; } p ( ( long ) Math.ceil ( ( double ) N / min ) + 4 ) ; } static void p ( String ans ) { System.out.println ( ans ) ; } ; static void p ( int ans ) { System.out.println ( ans ) ; } ; static void p ( ) { System.out.println ( ) ; } ; static void p ( long ans ) { System.out.println ( ans ) ; } ; static void p ( double ans ) { System.out.println ( ans ) ; } ; }"
StarCoder,avatar,Java,Python,codeforces_95_A.py,"import java.io.* ; import java.util.* ; public class codeforces_95_A extends PrintWriter {
public codeforces_95_A ( ) { super ( System.out, true ) ; }
Scanner sc = new Scanner ( System.in ) ;
public static void main ( String [ ] $ ) {
codeforces_95_A o = new codeforces_95_A ( ) ;
o.main ( ) ;
o.flush ( ) ;
}
int compare ( char [ ] aa, int i, char [ ] bb, int j, int m ) {
while ( m -- > 0 ) {
char a = Character.toUpperCase ( aa [ i ] ) ;
char b = Character.toUpperCase ( bb [ j ] ) ;
if ( a!= b ) return a - b ;
i ++ ;
j ++ ;
}
return 0 ;
}
void main ( ) {
int n = sc.nextInt ( ) ;
char [ ] [ ] ss = new char [ n ] [ ] ;
for ( int i = 0 ; i < n ; i ++ ) ss [ i ] = sc.next ( ).toCharArray ( ) ;
char [ ] cc = sc.next ( ).toCharArray ( ) ;
int m = cc.length ;
char c = sc.next ( ).charAt ( 0 ) ;
char c_ = Character.toUpperCase ( c ) ;
char a = c == 'a'? 'b' : 'a' ;
char a_ = Character.toUpperCase ( a ) ;
boolean [ ] lucky = new boolean [ m ] ;
for ( int j = 0 ; j < m ; j ++ ) for ( int i = 0 ; i < n ; i ++ ) {
int l = ss [ i ].length ;
if ( m - j >= l && compare ( cc, j, ss [ i ], 0, l ) == 0 ) for ( int h = 0 ; h < l ; h ++ ) lucky [ j + h ] = true ;
}
for ( int j = 0 ; j < m ; j ++ ) if ( lucky [ j ] ) {
if ( Character.toLowerCase ( cc [ j ] ) == c ) cc [ j ] = Character.isUpperCase ( cc [ j ] )? a_ : a ;
else cc [ j ] = Character.isUpperCase ( cc [ j ] )? c_ : c ;
}
println ( cc ) ;
}
}","import java.io.* ; import java.util.* ; public class codeforces_95_A extends PrintWriter {
public codeforces_95_A ( ) { super ( System.out, true ) ; }
Scanner sc = new Scanner ( System.in ) ;
public static void main ( String [ ] $ ) {
codeforces_95_A o = new codeforces_95_A ( ) ;
o.main ( ) ;
o.flush ( ) ;
}
int compare ( char [ ] aa, int i, char [ ] bb, int j, int m ) {
while ( m -- > 0 ) {
char a = Character.toUpperCase ( aa [ i ] ) ;
char b = Character.toUpperCase ( bb [ j ] ) ;
if ( a!= b ) return a - b ;
i ++ ;
j ++ ;
}
return 0 ;
}
void main ( ) {
int n = sc.nextInt ( ) ;
char [ ] [ ] ss = new char [ n ] [ ] ;
for ( int i = 0 ; i < n ; i ++ ) ss [ i ] = sc.next ( ).toCharArray ( ) ;
char [ ] cc = sc.next ( ).toCharArray ( ) ;
int m = cc.length ;
char c = sc.next ( ).charAt ( 0 ) ;
char c_ = Character.toUpperCase ( c ) ;
char a = c == 'a'? 'b' : 'a' ;
char a_ = Character.toUpperCase ( a ) ;
boolean [ ] lucky = new boolean [ m ] ;
for ( int j = 0 ; j < m ; j ++ ) for ( int i = 0 ; i < n ; i ++ ) {
int l = ss [ i ].length ;
if ( m - j >= l && compare ( cc, j, ss [ i ], 0, l ) == 0 ) for ( int h = 0 ; h < l ; h ++ ) lucky [ j + h ] = true ;
}
for ( int j = 0 ; j < m ; j ++ ) if ( lucky [ j ] ) {
if ( Character.toLowerCase ( cc [ j ] ) == c ) cc [ j ] = Character.isUpperCase ( cc [ j ] )? a_ : a ;
else cc [ j ] = Character.isUpperCase ( cc [ j ] )? c_ : c ;
}
println ( cc ) ;
}
}"
StarCoder,avatar,Java,Python,atcoder_ABC162_D.py,import java.util.* ; public class atcoder_ABC162_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = sc.next ( ) ; long rc = 0 ; long gc = 0 ; long bc = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == 'R' ) { rc ++ ; } else if ( s.charAt ( i ) == 'G' ) { gc ++ ; } else { bc ++ ; } } long result = rc * gc * bc ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int k = i + 1 ; k <= n ; k ++ ) { if ( ( i + k ) % 2 == 0 ) { char is = s.charAt ( i - 1 ) ; char ks = s.charAt ( k - 1 ) ; char js = s.charAt ( ( ( i + k ) / 2 ) - 1 ) ; if ( is!= ks && ks!= js && js!= is ) { result -- ; } } } } System.out.println ( result ) ; } },import java.util.* ; public class atcoder_ABC162_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = sc.next ( ) ; long rc = 0 ; long gc = 0 ; long bc = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == 'R' ) { rc ++ ; } else if ( s.charAt ( i ) == 'G' ) { gc ++ ; } else { bc ++ ; } } long result = rc * gc * bc ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int k = i + 1 ; k <= n ; k ++ ) { if ( ( i + k ) % 2 == 0 ) { char is = s.charAt ( i - 1 ) ; char ks = s.charAt ( k - 1 ) ; char js = s.charAt ( ( ( i + k ) / 2 ) - 1 ) ; if ( is!= ks && ks!= js && js!= is ) { result -- ; } } } } System.out.println ( result ) ; } }
StarCoder,avatar,Java,Python,codeforces_612_B.py,"import sys

n = int(raw_input())

dp = [0] * 200001

for i in range(n):
    dp[int(raw_input())] = i

ans = 0

for i in range(2, n + 1):
    ans += abs(dp[i] - dp[i - 1])

print ans","import sys

n = int(input())

dp = [0] * 200001

inputs = list(input().split())
for i in range(n):
    dp[int(inputs[i])] = i

ans = 0

for i in range(2, n + 1):
    ans += abs(dp[i] - dp[i - 1])

print(ans)"
StarCoder,avatar,Java,Python,codeforces_58_B.py,"import java.util.* ; import java.lang.* ; import java.io.* ; public class codeforces_58_B { public static void main ( String [ ] args ) throws java.lang.Exception { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; System.out.println ( n + "" "" ) ; int m = n ; for ( int i = n - 1 ; i > 0 ; i -- ) { if ( m % i == 0 ) { System.out.println ( i + "" "" ) ; m = i ; } } } }","import java.util.* ; import java.lang.* ; import java.io.* ; public class codeforces_58_B { public static void main ( String [ ] args ) throws java.lang.Exception { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; System.out.println ( n + "" "" ) ; int m = n ; for ( int i = n - 1 ; i > 0 ; i -- ) { if ( m % i == 0 ) { System.out.println ( i + "" "" ) ; m = i ; } } } }"
StarCoder,avatar,Java,Python,codeforces_672_A.py,import java.util.Scanner ; public class codeforces_672_A { static char [ ] generateString ( ) { StringBuilder sb = new StringBuilder ( ) ; for ( int i = 1 ; i <= 1000 ; i ++ ) { sb.append ( i ) ; } return sb.toString ( ).toCharArray ( ) ; } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; System.out.println ( generateString ( ) [ n - 1 ] ) ; } },import java.util.Scanner ; public class codeforces_672_A { static char [ ] generateString ( ) { StringBuilder sb = new StringBuilder ( ) ; for ( int i = 1 ; i <= 1000 ; i ++ ) { sb.append ( i ) ; } return sb.toString ( ).toCharArray ( ) ; } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; System.out.println ( generateString ( ) [ n - 1 ] ) ; } }
StarCoder,avatar,Java,Python,codeforces_387_B.py,"import java.util.ArrayList ; import java.util.Scanner ; public class codeforces_387_B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System.in ) ; int n = input.nextInt ( ) ; int m = input.nextInt ( ) ; ArrayList < Integer > req = new ArrayList ( ) ; ArrayList < Integer > pre = new ArrayList ( ) ; for ( int i = 0 ; i < n ; i ++ ) { req.add ( input.nextInt ( ) ) ; } for ( int i = 0 ; i < m ; i ++ ) { pre.add ( input.nextInt ( ) ) ; } int i = n - 1, j = m - 1 ; int ans = 0 ; while ( i >= 0 && j >= 0 ) { if ( req.get ( i ) > pre.get ( j ) ) { ans ++ ; } else { j -- ; } i -- ; } System.out.print ( ans + i + 1 ) ; } }","import java.util.ArrayList ; import java.util.Scanner ; public class codeforces_387_B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System.in ) ; int n = input.nextInt ( ) ; int m = input.nextInt ( ) ; ArrayList < Integer > req = new ArrayList ( ) ; ArrayList < Integer > pre = new ArrayList ( ) ; for ( int i = 0 ; i < n ; i ++ ) { req.add ( input.nextInt ( ) ) ; } for ( int i = 0 ; i < m ; i ++ ) { pre.add ( input.nextInt ( ) ) ; } int i = n - 1, j = m - 1 ; int ans = 0 ; while ( i >= 0 && j >= 0 ) { if ( req.get ( i ) > pre.get ( j ) ) { ans ++ ; } else { j -- ; } i -- ; } System.out.print ( ans + i + 1 ) ; } }"
StarCoder,avatar,Java,Python,codeforces_653_A.py,"import java.io.PrintWriter ; import java.util.* ; import java.util.stream.Collectors ; public class codeforces_653_A { public static void main ( String [ ] args ) { try ( Scanner in = new Scanner ( System.in ) ; PrintWriter out = new PrintWriter ( System.out ) ) { int n = in.nextInt ( ) ; List < Integer > a = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int value = in.nextInt ( ) ; a.add ( value ) ; } a = a.stream ( ).distinct ( ).sorted ( ).collect ( Collectors.toList ( ) ) ; boolean found = False ; for ( int i = 0 ; i < a.size ( ) ; i ++ ) { if ( i + 1 < a.size ( ) && i + 2 < a.size ( ) ) { if ( a.get ( i ) + 1 == a.get ( i + 1 ) && a.get ( i + 1 ) + 1 == a.get ( i + 2 ) ) { found = True ; } } } out.println ( found? ""YES"" : ""NO"" ) ; } } }","import java.io.PrintWriter ; import java.util.* ; import java.util.stream.Collectors ; public class codeforces_653_A { public static void main ( String [ ] args ) { try ( Scanner in = new Scanner ( System.in ) ; PrintWriter out = new PrintWriter ( System.out ) ) { int n = in.nextInt ( ) ; List < Integer > a = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int value = in.nextInt ( ) ; a.add ( value ) ; } a = a.stream ( ).distinct ( ).sorted ( ).collect ( Collectors.toList ( ) ) ; boolean found = False ; for ( int i = 0 ; i < a.size ( ) ; i ++ ) { if ( i + 1 < a.size ( ) && i + 2 < a.size ( ) ) { if ( a.get ( i ) + 1 == a.get ( i + 1 ) && a.get ( i + 1 ) + 1 == a.get ( i + 2 ) ) { found = True ; } } } out.println ( found? ""YES"" : ""NO"" ) ; } } }"
StarCoder,avatar,Java,Python,codeforces_30_A.py,"import java.util.* ; public class codeforces_30_A { public static void main ( String [ ] args ) { new codeforces_30_A ( ).solve ( new Scanner ( System.in ) ) ; } private void solve ( Scanner sc ) { int A = sc.nextInt ( ), B = sc.nextInt ( ), n = sc.nextInt ( ) ; if ( A == 0 ) { if ( B == 0 ) System.out.println ( 1 ) ; else System.out.println ( ""No solution"" ) ; return ; } if ( B % A!= 0 ) { System.out.println ( ""No solution"" ) ; return ; } B /= A ; boolean neg = B < 0 ; if ( neg && n % 2 == 0 ) { System.out.println ( ""No solution"" ) ; return ; } if ( neg ) B = - B ; for ( int x = 0 ; x <= B ; x ++ ) { if ( Math.pow ( x, n ) == B ) { System.out.println ( neg? - x : x ) ; return ; } } System.out.println ( ""No solution"" ) ; } }","import java.util.* ; public class codeforces_30_A { public static void main ( String [ ] args ) { new codeforces_30_A ( ).solve ( new Scanner ( System.in ) ) ; } private void solve ( Scanner sc ) { int A = sc.nextInt ( ), B = sc.nextInt ( ), n = sc.nextInt ( ) ; if ( A == 0 ) { if ( B == 0 ) System.out.println ( 1 ) ; else System.out.println ( ""No solution"" ) ; return ; } if ( B % A!= 0 ) { System.out.println ( ""No solution"" ) ; return ; } B /= A ; boolean neg = B < 0 ; if ( neg && n % 2 == 0 ) { System.out.println ( ""No solution"" ) ; return ; } if ( neg ) B = - B ; for ( int x = 0 ; x <= B ; x ++ ) { if ( Math.pow ( x, n ) == B ) { System.out.println ( neg? - x : x ) ; return ; } } System.out.println ( ""No solution"" ) ; } }"
StarCoder,avatar,Java,Python,atcoder_ABC128_C.py,"import sys
input = sys.stdin.readline

class atcoder_ABC128_C:
    def __init__(self):
        self.run()

    def run(self):
        N, M = map(int, input().split())
        a = [0] * N
        for _ in range(M):
            k = int(input())
            for _ in range(k):
                s = int(input())
                s -= 1
                a[s] |= 1 << _
        p = 0
        for _ in range(M):
            x = int(input())
            p |= x << _
        ans = 0
        for s in range(1 << N):
            t = 0
            for i in range(N):
                if (s >> i) & 1:
                    t ^= a[i]
            if p == t:
                ans += 1
        print(ans)


if __name__ == '__main__':
    atcoder_ABC128_C()","import sys
input = sys.stdin.readline

class atcoder_ABC128_C:
    def __init__(self):
        self.run()

    def run(self):
        N, M = map(int, input().split())
        a = [0] * N
        for _ in range(M):
            inputs = list(input().split())
            k = int(inputs[0])
            for i in range(k):
                s = int(inputs[i + 1])
                s -= 1
                a[s] |= 1 << _
        p = 0
        inputs = list(input().split())
        for i in range(M):
            x = int(inputs[i])
            p |= x << _
        ans = 0
        for s in range(1 << N):
            t = 0
            for i in range(N):
                if (s >> i) & 1:
                    t ^= a[i]
            if p == t:
                ans += 1
        print(ans)


if __name__ == '__main__':
    atcoder_ABC128_C()"
StarCoder,avatar,Java,Python,codeforces_189_A.py,"import sys

n = int(input())
a = int(input())
b = int(input())
c = int(input())

arr = [a, b, c]
dp = [0] * 4010

for i in range(n):
    dp[iimport sys

n = int(input())
a = int(input())
b = int(input())
c = int(input())

arr = [a, b, c]
dp = [0] * 4010

for i in range(n):
    dp[i
StarCoder,avatar,Java,Python,codeforces_55_B.py,"import sys

def main():
    input = sys.stdin.readline
    N = int(input())
    A = list(map(int, input().split()))
    B = list(map(int, input().split()))
    C = list(map(int, input().split()))
    D = list(map(int, input().split()))
    ans = 10 ** 18
    for a in A:
        for b in B:
            for c in C:
                for d in D:
                    if a + b + c + d < ans:
                        ans = a + b + c + d
    print(ans)


if __name__ == '__main__':
    main()","import sys

def main():
    input = sys.stdin.readline
    N = int(input())
    A = list(map(int, input().split()))
    B = list(map(int, input().split()))
    C = list(map(int, input().split()))
    D = list(map(int, input().split()))
    ans = 10 ** 18
    for a in A:
        for b in B:
            for c in C:
                for d in D:
                    if a + b + c + d < ans:
                        ans = a + b + c + d
    print(ans)


if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC126_D.py,"import sys

class Point:
    def __init__(self, name):
        self.name = name
        self.friends = {}

def dfs(p, length):
    if colors[p.name]!= -1:
        return
    if length % 2 == 0:
        colors[p.name] = 0
    else:
        colors[p.name] = 1
    for friend, length2 in p.friends.items():
        dfs(friend, length + length2)

n = int(input())
m = n - 1
colors = [-1] * n
points = [Point(i) for i in range(n)]
while m > 0:
    me, you, length = map(int, input().split())
    me -= 1
    you -= 1
    points[me].becomeFriend(points[you], length)
    points[you].becomeFriend(points[me], length)
    m -= 1
dfs(points[0], 0)
for c in colors:
    print(c)","import sys

class Point:
    def __init__(self, name):
        self.name = name
        self.friends = {}

def dfs(p, length):
    if colors[p.name]!= -1:
        return
    if length % 2 == 0:
        colors[p.name] = 0
    else:
        colors[p.name] = 1
    for friend, length2 in p.friends.items():
        dfs(friend, length + length2)

n = int(input())
m = n - 1
colors = [-1] * n
points = [Point(i) for i in range(n)]
while m > 0:
    me, you, length = map(int, input().split())
    me -= 1
    you -= 1
    points[me].becomeFriend(points[you], length)
    points[you].becomeFriend(points[me], length)
    m -= 1
dfs(points[0], 0)
for c in colors:
    print(c)"
StarCoder,avatar,Java,Python,codeforces_272_B.py,"import sys

class FastReader:
    def __init__(self):
        self.buf = sys.stdin.buffer
        self.bufferedReader = io.BufferedReader(self.buf)
        self.tokenizer = None

    def readline(self):
        if self.tokenizer == None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return self.tokenizer.readline()

    def read(self):
        if self.tokenizer == None:
            self.tokenizer = io.StringIO(self.bufferedReader.read().decode())
        return self.tokenizer.read()

    def nextInt(self):
        return int(self.readline())

    def nextLong(self):
        return int(self.readline())

    def nextDouble(self):
        return float(self.readline())

def rec(x):
    answer = 0
    for k in range(31, -1, -1):
        if (x & (1 << k))!= 0:
            answer += 1
    return answer

if __name__ == '__main__':
    fastReader = FastReader()
    n = fastReader.readInt()
    a = [0] * 33
    for i in range(n):
        a[rec(fastReader.readInt())] += 1
    answer = 0
    for i in range(33):
        summ = (1 + a[i] - 1) / 2.0 * (a[i] - 1)
        answer += summ
    print(int(answer))","import sys

class FastReader:
    def __init__(self):
        self.buf = sys.stdin.buffer
        self.bufferedReader = io.BufferedReader(self.buf)
        self.tokenizer = None

    def readline(self):
        if self.tokenizer == None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return self.tokenizer.readline()

    def read(self):
        if self.tokenizer == None:
            self.tokenizer = io.StringIO(self.bufferedReader.read().decode())
        return self.tokenizer.read()

    def nextInt(self):
        return int(self.readline())

    def nextLong(self):
        return int(self.readline())

    def nextDouble(self):
        return float(self.readline())

def rec(x):
    answer = 0
    for k in range(31, -1, -1):
        if (x & (1 << k))!= 0:
            answer += 1
    return answer

if __name__ == '__main__':
    fastReader = FastReader()
    n = fastReader.readInt()
    a = [0] * 33
    for i in range(n):
        a[rec(fastReader.readInt())] += 1
    answer = 0
    for i in range(33):
        summ = (1 + a[i] - 1) / 2.0 * (a[i] - 1)
        answer += summ
    print(int(answer))"
StarCoder,avatar,Java,Python,atcoder_ABC178_B.py,"import math

class FastReader:
    def __init__(self):
        self.val = input()
        self.pos = 0

    def next(self):
        self.pos += 1
        return self.val[self.pos - 1]

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return int(self.next())

    def nextDouble(self):
        return float(self.next())

    def nextLine(self):
        self.val = input()
        self.pos = 0
        return self.val


def modPower(x, y, mod):
    res = 1
    x %= mod
    if x == 0:
        return 0
    while y > 0:
        if y % 2 == 1:
            res = (res * x) % mod
        y = y >> 1
        x = (x * x) % mod
    return res


class pair:
    def __init__(self, first, second):
        self.first = first
        self.second = second


if __name__ == '__main__':
    in_ = FastReader()
    a = [0] * 4
    for i in range(4):
        a[i] = in_.nextLong()
    print(max(a[0] * a[2], max(a[1] * a[3], max(a[0] * a[3], a[1] * a[2]))))","import math

class FastReader:
    def __init__(self):
        self.val = input()
        self.pos = 0

    def next(self):
        self.pos += 1
        return self.val[self.pos - 1]

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return int(self.next())

    def nextDouble(self):
        return float(self.next())

    def nextLine(self):
        self.val = input()
        self.pos = 0
        return self.val


def modPower(x, y, mod):
    res = 1
    x %= mod
    if x == 0:
        return 0
    while y > 0:
        if y % 2 == 1:
            res = (res * x) % mod
        y = y >> 1
        x = (x * x) % mod
    return res


class pair:
    def __init__(self, first, second):
        self.first = first
        self.second = second


if __name__ == '__main__':
    in_ = FastReader()
    a = [0] * 4
    for i in range(4):
        a[i] = in_.nextLong()
    print(max(a[0] * a[2], max(a[1] * a[3], max(a[0] * a[3], a[1] * a[2]))))"
StarCoder,avatar,Java,Python,atcoder_ABC107_C.py,"import sys
input = sys.stdin.readline

N, K = map(int, input().split())
S = list(map(int, input().split()))

temp = 0
ans = 1000000000

if K == 1:
    for i in range(N):
        temp = S[i]
        ans = min(abs(temp), ans)
    print(ans)
elif N - K!= 0:
    for i in range(N - K + 1):
        min = S[i]
        max = S[i + K - 1]
        if min < 0 and max > 0:
            temp = min(2 * (-min) + max, (-min) + 2 * max)
        else:
            temp = max(abs(min), abs(max))
        ans = min(ans, temp)
    print(ans)
else:
    min = S[0]
    max = S[N - 1]
    if min < 0 and max > 0:
        print(min(2 * (-min) + max, (-min) + 2 * max))
    else:
        print(max(abs(min), abs(max)))","import sys
input = sys.stdin.readline

N, K = map(int, input().split())
S = list(map(int, input().split()))

temp = 0
ans = 1000000000

if K == 1:
    for i in range(N):
        temp = S[i]
        ans = min(abs(temp), ans)
    print(ans)
elif N - K!= 0:
    for i in range(N - K + 1):
        minVal = S[i]
        maxVal = S[i + K - 1]
        if minVal < 0 and maxVal > 0:
            temp = min(2 * (-minVal) + maxVal, (-minVal) + 2 * maxVal)
        else:
            temp = max(abs(minVal), abs(maxVal))
        ans = min(ans, temp)
    print(ans)
else:
    minVal = S[0]
    maxVal = S[N - 1]
    if minVal < 0 and maxVal > 0:
        print(min(2 * (-minVal) + maxVal, (-minVal) + 2 * maxVal))
    else:
        print(max(abs(minVal), abs(maxVal)))"
StarCoder,avatar,Java,Python,atcoder_ABC166_C.py,"import sys

N = int(input())
M = int(input())
H = [int(input()) for _ in range(N)]
ans = [True for _ in range(N)]
for _ in range(M):
    temp1, temp2 = map(int, input().split())
    if H[temp1 - 1] < H[temp2 - 1]:
        ans[temp1 - 1] = False
    elif H[temp1 - 1] > H[temp2 - 1]:
        ans[temp2 - 1] = False
    else:
        ans[temp1 - 1] = False
        ans[temp2 - 1] = False
ans2 = 0
for i in range(N):
    if ans[i]:
        ans2 += 1
print(ans2)","import sys

N, M = map(int, input().split())
H = list(map(int, input().split()))
ans = [True for _ in range(N)]
for _ in range(M):
    temp1, temp2 = map(int, input().split())
    if H[temp1 - 1] < H[temp2 - 1]:
        ans[temp1 - 1] = False
    elif H[temp1 - 1] > H[temp2 - 1]:
        ans[temp2 - 1] = False
    else:
        ans[temp1 - 1] = False
        ans[temp2 - 1] = False
ans2 = 0
for i in range(N):
    if ans[i]:
        ans2 += 1
print(ans2)"
StarCoder,avatar,Java,Python,atcoder_AGC027_B.py,"import sys
input = sys.stdin.readline

N = int(input())
X = int(input())
x = list(map(int, input().split()))

xsum = [0] * (N + 1)
for i in range(N):
    xsum[i + 1] = xsum[i] + x[i]

ans = X * N + 5 * xsum[N]
for i in range(1, N):
    cost = X * i + 5 * (xsum[N] - xsum[N - i])
    for j in range(5, 0, -2):
        for k in range(N - i, -1, -i):
            if cost > ans:
                break
            cost += j * (xsum[k] - xsum[max(k - i, 0)])
        else:
            continue
        break
    ans = min(ans, cost)
print(ans + N * X)","import sys
input = sys.stdin.readline

N, X = map(int, input().split())
x = list(map(int, input().split()))

xsum = [0] * (N + 1)
for i in range(N):
    xsum[i + 1] = xsum[i] + x[i]

ans = X * N + 5 * xsum[N]
for i in range(1, N):
    cost = X * i + 5 * (xsum[N] - xsum[N - i])
    for j in range(5, 0, -2):
        for k in range(N - i, -1, -i):
            if cost > ans:
                break
            cost += j * (xsum[k] - xsum[max(k - i, 0)])
        else:
            continue
        break
    ans = min(ans, cost)
print(ans + N * X)"
StarCoder,avatar,Java,Python,atcoder_AGC037_E.py,"import sys

def main():
    N = int(input())
    K = int(input())
    S = input()
    firstTime = True
    step = 1
    while K > 0:
        T = S[::-1]
        revU = S + T
        revU = revU[::-1]
        sDash = S
        for i in range(N, -1, -step):
            tmp = revU[i:i+N]
            if sDash > tmp:
                sDash = tmp
            else:
                if not firstTime:
                    break
        if firstTime:
            firstTime = False
            if 2**K > N:
                c = sDash[0]
                for i in range(N):
                    print(c, end="""")
                print()
                sys.exit(0)
        else:
            step += step
        K -= 1
        S = sDash[::-1]

if __name__ == '__main__':
    main()","import sys

def main():
    N, K = map(int, input().split())
    S = input()
    firstTime = True
    step = 1
    while K > 0:
        T = S[::-1]
        revU = S + T
        revU = revU[::-1]
        sDash = S
        for i in range(N, -1, -step):
            tmp = revU[i:i+N]
            if sDash > tmp:
                sDash = tmp
            else:
                if not firstTime:
                    break
        if firstTime:
            firstTime = False
            if 2**K > N:
                c = sDash[0]
                for i in range(N):
                    print(c, end="""")
                print()
                sys.exit(0)
        else:
            step += step
        K -= 1
        S = sDash[::-1]
    print(S[::-1])
    
if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,codeforces_622_A.py,"import sys
import math

def solve():
    position = int(raw_input())
    nrstSeqStartIndx = 1
    while getValueAtIndex(nrstSeqStartIndx * 2) < position:
        nrstSeqStartIndx *= 2
    while getValueAtIndex(nrstSeqStartIndx + 1) <= position:
        nrstSeqStartIndx += 1
    startIndex = getValueAtIndex(nrstSeqStartIndx)
    print (position - startIndex) + 1

def getValueAtIndex(index):
    return 1 + ( (index - 1) * index / 2 )

if __name__ == ""__main__"":
    solve()","import sys
import math

def solve():
    position = int(input())
    nrstSeqStartIndx = 1
    while getValueAtIndex(nrstSeqStartIndx * 2) < position:
        nrstSeqStartIndx *= 2
    while getValueAtIndex(nrstSeqStartIndx + 1) <= position:
        nrstSeqStartIndx += 1
    startIndex = getValueAtIndex(nrstSeqStartIndx)
    print((position - startIndex) + 1)

def getValueAtIndex(index):
    return 1 + ( (index - 1) * index / 2 )

if __name__ == ""__main__"":
    solve()"
StarCoder,avatar,Java,Python,codeforces_342_B.py,"import sys

def main():
    input = sys.stdin.readline().split()
    m = int(input[1])
    s = int(input[2])
    f = int(input[3])
    maxT = -1
    map = {}
    while m > 0:
        mth = sys.stdin.readline().split()
        k = int(mth[0])
        if k not in map:
            map[k] = []
        map[k].append(int(mth[1]))
        map[k].append(int(mth[2]))
        maxT = max(maxT, k)
        m -= 1
    actions = []
    M = 'R' if s < f else 'L'
    d = 1 if s < f else -1
    cur = s
    a = -1
    b = -1
    for t in range(1, maxT+1):
        if t in map:
            a = map[t][0]
            b = map[t][1]
        if t in map and ((cur >= a and cur <= b) or (cur+d >= a and cur+d <= b)):
            actions.append('X')
        else:
            actions.append(M)
            cur += d
        if cur == f:
            break
    while cur!= f:
        actions.append(M)
        cur += d
    print(''.join(actions))

if __name__ == '__main__':
    main()","import sys

def main():
    input = sys.stdin.readline().split()
    m = int(input[1])
    s = int(input[2])
    f = int(input[3])
    maxT = -1
    map = {}
    while m > 0:
        mth = sys.stdin.readline().split()
        k = int(mth[0])
        if k not in map:
            map[k] = []
        map[k].append(int(mth[1]))
        map[k].append(int(mth[2]))
        maxT = max(maxT, k)
        m -= 1
    actions = []
    M = 'R' if s < f else 'L'
    d = 1 if s < f else -1
    cur = s
    a = -1
    b = -1
    for t in range(1, maxT+1):
        if t in map:
            a = map[t][0]
            b = map[t][1]
        if t in map and ((cur >= a and cur <= b) or (cur+d >= a and cur+d <= b)):
            actions.append('X')
        else:
            actions.append(M)
            cur += d
        if cur == f:
            break
    while cur!= f:
        actions.append(M)
        cur += d
    print(''.join(actions))

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,codeforces_581_A.py,"import sys

a = int(sys.stdin.readline())
b = int(sys.stdin.readline())

count = 0
while True:
    if a > 0 and b > 0:
        count += 1
        a -= 1
        b -= 1
    else:
        break

ans = a // 2 + b // 2

print(count, ans)","import sys

a, b = map(int, sys.stdin.readline().split())

count = 0
while True:
    if a > 0 and b > 0:
        count += 1
        a -= 1
        b -= 1
    else:
        break

ans = a // 2 + b // 2

print(count, ans)"
StarCoder,avatar,Java,Python,codeforces_7_B.py,"import sys

t = int(sys.stdin.readline())
m = int(sys.stdin.readline())
memory = [0] * m
allocIdx = 0

for j in range(t):
    command = sys.stdin.readline().split()
    if command[0] == 'alloc':
        n = int(command[1])
        len = 0
        canAlloc = False
        for i in range(m):
            if memory[i] == 0:
                len += 1
            else:
                len = 0
            if len == n:
                canAlloc = True
                len = i - n + 1
                break
        if canAlloc:
            allocIdx += 1
            for i in range(len, len + n):
                memory[i] = allocIdx
            print(allocIdx)
        else:
            print('NULL')
    elif command[0] == 'erase':
        x = int(command[1])
        if x <= 0:
            print('ILLEGAL_ERASE_ARGUMENT')
            break
        hasErased = False
        for i in range(m):
            if memory[i] == x:
                memory[i] = 0
                hasErased = True
        if not hasErased:
            print('ILLEGAL_ERASE_ARGUMENT')
    elif command[0] == 'defragment':
        d = 0
        for i in range(m):
            if memory[i] == 0:
                d += 1
            else:
                memory[i - d] = memory[i]
        for i in range(m - d, m):
            memory[i] = 0
    else:
        print('h')","import sys

t, m = map(int, sys.stdin.readline().split())
memory = [0] * m
allocIdx = 0

for j in range(t):
    command = sys.stdin.readline().split()
    if command[0] == 'alloc':
        n = int(command[1])
        len = 0
        canAlloc = False
        for i in range(m):
            if memory[i] == 0:
                len += 1
            else:
                len = 0
            if len == n:
                canAlloc = True
                len = i - n + 1
                break
        if canAlloc:
            allocIdx += 1
            for i in range(len, len + n):
                memory[i] = allocIdx
            print(allocIdx)
        else:
            print('NULL')
    elif command[0] == 'erase':
        x = int(command[1])
        if x <= 0:
            print('ILLEGAL_ERASE_ARGUMENT')
            break
        hasErased = False
        for i in range(m):
            if memory[i] == x:
                memory[i] = 0
                hasErased = True
        if not hasErased:
            print('ILLEGAL_ERASE_ARGUMENT')
    elif command[0] == 'defragment':
        d = 0
        for i in range(m):
            if memory[i] == 0:
                d += 1
            else:
                memory[i - d] = memory[i]
        for i in range(m - d, m):
            memory[i] = 0
    else:
        print('h')"
StarCoder,avatar,Java,Python,atcoder_AGC024_B.py,"import sys

N = int(input())
P = list(map(int, input().split()))

P.sort()

ans = 0

for i in range(N-1):
    ans = min(ans, abs(P[i]-P[i+1]))

print(ans)","import sys

N = int(input())
P = list(map(int, input().split()))

P.sort()

ans = 0

for i in range(N-1):
    ans = min(ans, abs(P[i]-P[i+1]))

print(ans)"
StarCoder,avatar,Java,Python,atcoder_ABC145_C.py,"import math

def dist(x1, y1, x2, y2):
    return math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))

N = int(input())
pos = [[0] * 2 for _ in range(N)]
for i in range(N):
    pos[i][0] = int(input())
    pos[i][1] = int(input())

sum = 0
for i in range(N):
    for j in range(N):
        if i == j:
            continue
        sum += dist(pos[i][0], pos[i][1], pos[j][0], pos[j][1])

print(sum / N)","import math

def dist(x1, y1, x2, y2):
    return math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))

N = int(input())
pos = [[0] * 2 for _ in range(N)]
for i in range(N):
    pos[i][0], pos[i][1] = map(int, input().split())
    
sum = 0
for i in range(N):
    for j in range(N):
        if i == j:
            continue
        sum += dist(pos[i][0], pos[i][1], pos[j][0], pos[j][1])

print(sum / N)"
StarCoder,avatar,Java,Python,atcoder_ABC126_E.py,"import sys
input = sys.stdin.readline

class UnionFindTree:
    def __init__(self, n):
        self.par = list(range(n))
        self.rank = [0] * n

    def find(self, x):
        if self.par[x] == x:
            return x
        else:
            self.par[x] = self.find(self.par[x])
            return self.par[x]

    def unite(self, x, y):
        x = self.find(x)
        y = self.find(y)
        if x == y:
            return
        if self.rank[x] < self.rank[y]:
            self.par[x] = y
        else:
            self.par[y] = x
            if self.rank[x] == self.rank[y]:
                self.rank[x] += 1

    def same(self, x, y):
        return self.find(x) == self.find(y)

n = int(input())
uf = UnionFindTree(n)
m = int(input())
for _ in range(m):
    x, y, z = map(int, input().split())
    uf.unite(x-1, y-1)

cnt = 0
for i in range(n):
    if uf.par[i] == i:
        cnt += 1
print(cnt)","import sys
input = sys.stdin.readline

class UnionFindTree:
    def __init__(self, n):
        self.par = list(range(n))
        self.rank = [0] * n

    def find(self, x):
        if self.par[x] == x:
            return x
        else:
            self.par[x] = self.find(self.par[x])
            return self.par[x]

    def unite(self, x, y):
        x = self.find(x)
        y = self.find(y)
        if x == y:
            return
        if self.rank[x] < self.rank[y]:
            self.par[x] = y
        else:
            self.par[y] = x
            if self.rank[x] == self.rank[y]:
                self.rank[x] += 1

    def same(self, x, y):
        return self.find(x) == self.find(y)

n, m = map(int, input().split())
uf = UnionFindTree(n)
for _ in range(m):
    x, y, z = map(int, input().split())
    uf.unite(x-1, y-1)

cnt = 0
for i in range(n):
    if uf.par[i] == i:
        cnt += 1
print(cnt)"
StarCoder,avatar,Java,Python,codeforces_534_B.py,"import sys

def solve(v1, v2, t, d):
    dp = [[-1e17 for _ in range(1150)] for _ in range(t-1)]
    dp[0][v1] = v1
    for i in range(1, t-1):
        for j in range(1150):
            for x in range(0, d+1):
                if j+x < 1150:
                    dp[i][j] = max(dp[i][j], dp[i-1][j+x]+j)
            for x in range(d, -1, -1):
                if j-x >= 0:
                    dp[i][j] = max(dp[i][j], dp[i-1][j-x]+j)
    ans = -1e17
    for i in range(t-2, t-1):
        for j in range(1150):
            if abs(j-v2) <= d:
                ans = max(ans, dp[i][j]+v2)
    return ans

if __name__ == '__main__':
    input = sys.stdin.read()
    data = list(map(int, input.split()))
    n = data[0]
    v1 = data[1]
    v2 = data[2]
    t = data[3]
    d = data[4]
    print(solve(v1, v2, t, d))","import sys

def solve(v1, v2, t, d):
    dp = [[-1e17 for _ in range(1150)] for _ in range(t-1)]
    dp[0][v1] = v1
    for i in range(1, t-1):
        for j in range(1150):
            for x in range(0, d+1):
                if j+x < 1150:
                    dp[i][j] = max(dp[i][j], dp[i-1][j+x]+j)
            for x in range(d, -1, -1):
                if j-x >= 0:
                    dp[i][j] = max(dp[i][j], dp[i-1][j-x]+j)
    ans = -1e17
    for i in range(t-2, t-1):
        for j in range(1150):
            if abs(j-v2) <= d:
                ans = max(ans, dp[i][j]+v2)
    return ans

if __name__ == '__main__':
    input = sys.stdin.read()
    v1, v2 = map(int, input.split())
    t, d = map(int, input.split())
    print(solve(v1, v2, t, d))"
StarCoder,avatar,Java,Python,atcoder_ABC133_B.py,"import math
import sys

def main():
    input = sys.stdin.readline
    N = int(input())
    D = int(input())
    vectors = [[0] * D for _ in range(N)]
    for i in range(N):
        for j in range(D):
            vectors[i][j] = int(input())
    answer = 0
    for i in range(N - 1):
        for j in range(i + 1, N):
            dist = 0
            for d in range(D):
                x = vectors[i][d] - vectors[j][d]
                dist += x * x
            sq = math.sqrt(dist)
            answer += (abs(sq - math.floor(sq)) < 0.001)
    print(answer)

if __name__ == '__main__':
    main()","import math
import sys

def main():
    input = sys.stdin.readline
    N, D = map(int, input().split())
    vectors = [[0] * D for _ in range(N)]
    for i in range(N):
        inputs = list(input().split())
        for j in range(D):
            vectors[i][j] = int(inputs[j])
    answer = 0
    for i in range(N - 1):
        for j in range(i + 1, N):
            dist = 0
            for d in range(D):
                x = vectors[i][d] - vectors[j][d]
                dist += x * x
            sq = math.sqrt(dist)
            answer += (abs(sq - math.floor(sq)) < 0.001)
    print(answer)

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC108_B.py,"import sys

def revpos(p, q):
    vec = [0, 0]
    for i in range(len(vec)):
        vec[i] = p[i] - q[i]
    tmp = 0
    tmp = vec[0]
    vec[0] = vec[1]
    vec[1] = -tmp
    newpos = [0, 0]
    for i in range(len(newpos)):
        newpos[i] = q[i] + vec[i]
    return newpos

def main():
    input = [0, 0, 0, 0]
    for i in range(len(input)):
        input[i] = int(sys.stdin.readline())
    position = [[0, 0], [0, 0], [0, 0], [0, 0]]
    position[0][0] = input[0]
    position[0][1] = input[1]
    position[1][0] = input[2]
    position[1][1] = input[3]
    position[2] = revpos(position[0], position[1])
    position[3] = revpos(position[1], position[2])
    if position[0] == revpos(position[2], position[3]):
        print(""OK"")
    output = [0, 0, 0, 0]
    output[0] = position[2][0]
    output[1] = position[2][1]
    output[2] = position[3][0]
    output[3] = position[3][1]
    for i in output:
        print(i)

if __name__ == ""__main__"":
    main()","import sys

def revpos(p, q):
    vec = [0, 0]
    for i in range(len(vec)):
        vec[i] = p[i] - q[i]
    tmp = 0
    tmp = vec[0]
    vec[0] = vec[1]
    vec[1] = -tmp
    newpos = [0, 0]
    for i in range(len(newpos)):
        newpos[i] = q[i] + vec[i]
    return newpos

def main():
    input = list(map(int, sys.stdin.readline().split()))
    position = [[0, 0], [0, 0], [0, 0], [0, 0]]
    position[0][0] = input[0]
    position[0][1] = input[1]
    position[1][0] = input[2]
    position[1][1] = input[3]
    position[2] = revpos(position[0], position[1])
    position[3] = revpos(position[1], position[2])
    output = [0, 0, 0, 0]
    output[0] = position[2][0]
    output[1] = position[2][1]
    output[2] = position[3][0]
    output[3] = position[3][1]
    for i in output:
        print(i, end="" "")

if __name__ == ""__main__"":
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC155_E.py,"import sys

def main():
    number = sys.stdin.readline().rstrip()
    digits = [int(x) for x in number]
    bills = 0
    for i in range(len(digits)):
        if digits[i] == 10:
            digits[i + 1] += 1
            digits[i] = 0
        if digits[i] < 5:
            bills += digits[i]
        elif digits[i] == 5:
            if digits[i + 1] >= 5:
                digits[i + 1] += 1
            bills += 5
        else:
            digits[i + 1] += 1
            bills += 10 - digits[i]
    print(bills)

if __name__ == ""__main__"":
    main()","import sys

def main():
    number = sys.stdin.readline().rstrip()
    digits = [int(x) for x in number]
    digits.append(0)
    bills = 0
    for i in range(len(digits)):
        if digits[i] == 10:
            digits[i + 1] += 1
            digits[i] = 0
        if digits[i] < 5:
            bills += digits[i]
        elif digits[i] == 5:
            if digits[i + 1] >= 5:
                digits[i + 1] += 1
            bills += 5
        else:
            digits[i + 1] += 1
            bills += 10 - digits[i]
    print(bills)

if __name__ == ""__main__"":
    main()"
StarCoder,avatar,Java,Python,codeforces_519_B.py,"import sys

n = int(input())
a = 0
b = 0
c = 0
for i in range(n):
    a += int(input())
for i in range(n-1):
    b += int(input())
for i in range(n-2):
    c += int(input())
x = a - b
y = b - c
print(x)
print(y)","import sys

n = int(input())
a = 0
b = 0
c = 0
inputs = list(map(int, input().split()))
for i in range(n):
    a += int(inputs[i])
inputs = list(map(int, input().split()))
for i in range(n-1):
    b += int(inputs[i])
inputs = list(map(int, input().split()))
for i in range(n-2):
    c += int(inputs[i])
x = a - b
y = b - c
print(x)
print(y)"
StarCoder,avatar,Java,Python,codeforces_31_A.py,"import sys

n = int(input())
a = [int(x) for x in input().split()]

k = 0
j = 0
i = 0

for k in range(n):
    t = a[k]
    for i in range(n):
        for j in range(n-1):
            if i!= j and t == (a[i] + a[j]):
                print(k+1, j+1, i+1)
                sys.exit()
    if f == 1:
        break

if f == 1:
    print(k+1, j+1, i+1)
else:
    print(-1)","import sys

n = int(input())
a = [int(x) for x in input().split()]

k = 0
j = 0
i = 0

for k in range(n):
    t = a[k]
    for i in range(n):
        for j in range(n-1):
            if i!= j and t == (a[i] + a[j]):
                print(k+1, j+1, i+1)
                sys.exit()
    if f == 1:
        break

if f == 1:
    print(k+1, j+1, i+1)
else:
    print(-1)"
StarCoder,avatar,Java,Python,atcoder_ABC125_A.py,"import sys

def main():
    sec = int(input())
    per_num = int(input())
    max_sec = (int(input()) + 0.5)
    ans_num = 0
    for i in range(sec, max_sec, sec):
        ans_num += per_num
    print(ans_num)

if __name__ == '__main__':
    main()","import sys

def main():
    inputs = list(input().split())
    sec = int(inputs[0])
    per_num = int(inputs[1])
    max_sec = (int(inputs[2]) + 0.5)
    ans_num = 0
    for i in range(sec, int(max_sec) + 1, sec):
        if i >= max_sec: break
        ans_num += per_num
    print(ans_num)

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_AGC033_B.py,"import sys

h, w, n, sr, sc = map(int, sys.stdin.readline().split())
s = sys.stdin.readline().rstrip()
t = sys.stdin.readline().rstrip()

usafe = 1
dsafe = h
for i in range(n-1, -1, -1):
    if s[i] == 'U':
        usafe += 1
    elif s[i] == 'D':
        dsafe -= 1
    if usafe > dsafe:
        print(""NO"")
        sys.exit()
    if i > 0:
        if t[i-1] == 'U':
            dsafe = min(dsafe + 1, h)
        elif t[i-1] == 'D':
            usafe = max(usafe - 1, 1)

lsafe = 1
rsafe = w
for i in range(n-1, -1, -1):
    if s[i] == 'L':
        lsafe += 1
    elif s[i] == 'R':
        rsafe -= 1
    if lsafe > rsafe:
        print(""NO"")
        sys.exit()
    if i > 0:
        if t[i-1] == 'L':
            rsafe = min(rsafe + 1, w)
        elif t[i-1] == 'R':
            lsafe = max(lsafe - 1, 1)

if sr >= usafe and sr <= dsafe and sc >= lsafe and sc <= rsafe:
    print(""YES"")
else:
    print(""NO"")","import sys

h, w, n = map(int, sys.stdin.readline().split())
sr, sc = map(int, sys.stdin.readline().split())
s = sys.stdin.readline().rstrip()
t = sys.stdin.readline().rstrip()

usafe = 1
dsafe = h
for i in range(n-1, -1, -1):
    if s[i] == 'U':
        usafe += 1
    elif s[i] == 'D':
        dsafe -= 1
    if usafe > dsafe:
        print(""NO"")
        sys.exit()
    if i > 0:
        if t[i-1] == 'U':
            dsafe = min(dsafe + 1, h)
        elif t[i-1] == 'D':
            usafe = max(usafe - 1, 1)

lsafe = 1
rsafe = w
for i in range(n-1, -1, -1):
    if s[i] == 'L':
        lsafe += 1
    elif s[i] == 'R':
        rsafe -= 1
    if lsafe > rsafe:
        print(""NO"")
        sys.exit()
    if i > 0:
        if t[i-1] == 'L':
            rsafe = min(rsafe + 1, w)
        elif t[i-1] == 'R':
            lsafe = max(lsafe - 1, 1)

if sr >= usafe and sr <= dsafe and sc >= lsafe and sc <= rsafe:
    print(""YES"")
else:
    print(""NO"")"
StarCoder,avatar,Java,Python,atcoder_AGC017_A.py,"import math

def C(n, m):
    res = 1
    for i in range(m - n + 1, m + 1):
        res *= i
    for i in range(1, n + 1):
        res //= i
    return res

n, p = map(int, input().split())
k0 = 0
k1 = 0
for i in range(n):
    x = int(input())
    if x % 2 == 1:
        k1 += 1
    else:
        k0 += 1
ans = 1
for i in range(k0):
    ans *= 2
if p == 0:
    add = 0
    for i in range(0, k1 + 1, 2):
        add += C(i, k1)
    ans *= add
    print(ans)
else:
    add = 0
    for i in range(1, k1 + 1, 2):
        add += C(i, k1)
    ans *= add
    print(ans)","import math

def C(n, m):
    res = 1
    for i in range(m - n + 1, m + 1):
        res *= i
    for i in range(1, n + 1):
        res //= i
    return res

n, p = map(int, input().split())
k0 = 0
k1 = 0
inputs = list(input().split())
for i in range(n):
    x = int(inputs[i])
    if x % 2 == 1:
        k1 += 1
    else:
        k0 += 1
ans = 1
for i in range(k0):
    ans *= 2
if p == 0:
    add = 0
    for i in range(0, k1 + 1, 2):
        add += C(i, k1)
    ans *= add
    print(ans)
else:
    add = 0
    for i in range(1, k1 + 1, 2):
        add += C(i, k1)
    ans *= add
    print(ans)"
StarCoder,avatar,Java,Python,atcoder_ABC070_B.py,"import sys

class InputReader:
    def __init__(self, stream):
        self.reader = BufferedReader(InputStreamReader(stream), 32768)
        self.tokenizer = None

    def next(self):
        while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
            try:
                self.tokenizer = StringTokenizer(self.reader.readLine())
            except IOException as e:
                raise RuntimeException(e)
        return self.tokenizer.nextToken()

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return long(self.next())

if __name__ == '__main__':
    input = InputReader(sys.stdin)
    a = input.nextInt()
    b = input.nextInt()
    c = input.nextInt()
    d = input.nextInt()
    if c > b:
        print(0)
    elif a > d:
        print(0)
    elif a < c:
        print(min(b, d) - c)
    else:
        l = [a, b, c, d]
        l.sort()
        print(l[2] - l[1])","import sys

class InputReader:
    def __init__(self, stream):
        self.reader = BufferedReader(InputStreamReader(stream), 32768)
        self.tokenizer = None

    def next(self):
        while self.tokenizer == None or not self.tokenizer.hasMoreTokens():
            try:
                self.tokenizer = StringTokenizer(self.reader.readLine())
            except IOException as e:
                raise RuntimeException(e)
        return self.tokenizer.nextToken()

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return long(self.next())

if __name__ == '__main__':
    input = InputReader(sys.stdin)
    a = input.nextInt()
    b = input.nextInt()
    c = input.nextInt()
    d = input.nextInt()
    if c > b:
        print(0)
    elif a > d:
        print(0)
    elif a < c:
        print(min(b, d) - c)
    else:
        l = [a, b, c, d]
        l.sort()
        print(l[2] - l[1])"
StarCoder,avatar,Java,Python,atcoder_ABC112_A.py,"import sys

n = int(sys.stdin.readline())
if n == 1:
    print(""Hello World"")
else:
    strs = sys.stdin.readline().split()
    print(int(strs[0]) + int(strs[1]))","import sys

n = int(sys.stdin.readline())
if n == 1:
    print(""Hello World"")
else:
    print(int(sys.stdin.readline()) + int(sys.stdin.readline()))"
StarCoder,avatar,Java,Python,atcoder_ABC142_C.py,"import sys

N = int(sys.stdin.readline())
idorder = {}
for i in range(1, N+1):
    A = int(sys.stdin.readline())
    idorder[A] = i

for i in range(1, N+1):
    print(idorder[i], end=' ')","import sys

N = int(sys.stdin.readline())
idorder = {}
inputs = list(sys.stdin.readline().split())
for i in range(1, N+1):
    A = int(inputs[i - 1])
    idorder[A] = i

for i in range(1, N+1):
    print(idorder[i], end=' ')"
StarCoder,avatar,Java,Python,atcoder_ABC148_F.py,"import sys

class Main:
    def __init__(self):
        self.read = sys.stdin.readline
        self.read = self.read().split()
        self.N = int(self.read[0])
        self.u = int(self.read[1]) - 1
        self.v = int(self.read[2]) - 1
        self.edges = [[] for _ in range(self.N)]
        for _ in range(self.N - 1):
            a = int(self.read[3]) - 1
            b = int(self.read[4]) - 1
            self.edges[a].append(b)
            self.edges[b].append(a)
        self.d = [float('inf') for _ in range(self.N)]
        self.d[self.u] = 0
        self.dfs(self.u, self.d, self.edges)
        self.e = [float('inf') for _ in range(self.N)]
        self.e[self.v] = 0
        self.dfs(self.v, self.e, self.edges)
        self.q = -1
        for i in range(self.N):
            if self.d[i] < self.e[i]:
                if self.e[i] > self.q:
                    self.q = self.e[i]
        if self.q <= 0:
            print(0)
        else:
            print(self.q - 1)

    def dfs(self, u, d, edges):
        for nu in edges[u]:
            if d[nu] == float('inf'):
                d[nu] = d[u] + 1
                self.dfs(nu, d, edges)


if __name__ == '__main__':
    main = Main()","import sys

class Main:
    def __init__(self):
        self.read = sys.stdin.readline
        self.read = self.read().split()
        self.N = int(self.read[0])
        self.u = int(self.read[1]) - 1
        self.v = int(self.read[2]) - 1
        self.edges = [[] for _ in range(self.N)]
        for _ in range(self.N - 1):
            a = int(self.read[3]) - 1
            b = int(self.read[4]) - 1
            self.edges[a].append(b)
            self.edges[b].append(a)
        self.d = [float('inf') for _ in range(self.N)]
        self.d[self.u] = 0
        self.dfs(self.u, self.d, self.edges)
        self.e = [float('inf') for _ in range(self.N)]
        self.e[self.v] = 0
        self.dfs(self.v, self.e, self.edges)
        self.q = -1
        for i in range(self.N):
            if self.d[i] < self.e[i]:
                if self.e[i] > self.q:
                    self.q = self.e[i]
        if self.q <= 0:
            print(0)
        else:
            print(self.q - 1)

    def dfs(self, u, d, edges):
        for nu in edges[u]:
            if d[nu] == float('inf'):
                d[nu] = d[u] + 1
                self.dfs(nu, d, edges)


if __name__ == '__main__':
    main = Main()"
StarCoder,avatar,Java,Python,codeforces_629_B.py,"import sys

n = int(input())

FfriendPerDay = [0] * 367
MfriendPerDay = [0] * 367
answer = 0

for i in range(n):
    c = input()
    a = int(input())
    b = int(input())
    for j in range(a, b + 1):
        if c == 'M':
            MfriendPerDay[j] += 1
        else:
            FfriendPerDay[j] += 1
        if MfriendPerDay[j] < FfriendPerDay[j]:
            if MfriendPerDay[j] > answer:
                answer = MfriendPerDay[j]
        else:
            if FfriendPerDay[j] > answer:
                answer = FfriendPerDay[j]

print(answer * 2)","import sys

n = int(input())

FfriendPerDay = [0] * 367
MfriendPerDay = [0] * 367
answer = 0

for i in range(n):
    c, a, b = input().split()
    a = int(a)
    b = int(b)
    for j in range(a, b + 1):
        if c == 'M':
            MfriendPerDay[j] += 1
        else:
            FfriendPerDay[j] += 1
        if MfriendPerDay[j] < FfriendPerDay[j]:
            if MfriendPerDay[j] > answer:
                answer = MfriendPerDay[j]
        else:
            if FfriendPerDay[j] > answer:
                answer = FfriendPerDay[j]

print(answer * 2)"
StarCoder,avatar,Java,Python,atcoder_ABC122_D.py,"import sys
input = sys.stdin.readline
MOD = 1000000007

class atcoder_ABC122_D:
    def __init__(self):
        self.N = int(input())
        self.TOKENS = [""A"", ""C"", ""G"", ""T""]
        self.memo = [dict() for _ in range(self.N + 1)]

    def calc(self):
        return self.dfs(0, ""TTT"")

    def isOK(self, last4):
        if ""AGC"" in last4:
            return False
        for i in range(3):
            vals = last4.copy()
            vals[i], vals[i + 1] = vals[i + 1], vals[i]
            s = """".join(vals)
            if ""AGC"" in s:
                return False
        return True

    def dfs(self, current, last3):
        if last3 in self.memo[current]:
            return self.memo[current][last3]
        if current == self.N:
            return 1
        result = 0
        for c in self.TOKENS:
            if self.isOK(last3 + c):
                result = (result + self.dfs(current + 1, last3[1:] + c)) % MOD
        self.memo[current][last3] = result
        return result

if __name__ == '__main__':
    ins = atcoder_ABC122_D()
    print(ins.calc())","import sys
input = sys.stdin.readline
MOD = 1000000007

class atcoder_ABC122_D:
    def __init__(self):
        self.N = int(input())
        self.TOKENS = [""A"", ""C"", ""G"", ""T""]
        self.memo = [dict() for _ in range(self.N + 1)]

    def calc(self):
        return self.dfs(0, ""TTT"")

    def isOK(self, last4):
        if ""AGC"" in last4:
            return False
        for i in range(3):
            vals = list(last4)
            vals[i], vals[i + 1] = vals[i + 1], vals[i]
            s = """".join(vals)
            if ""AGC"" in s:
                return False
        return True

    def dfs(self, current, last3):
        if last3 in self.memo[current]:
            return self.memo[current][last3]
        if current == self.N:
            return 1
        result = 0
        for c in self.TOKENS:
            if self.isOK(last3 + c):
                result = (result + self.dfs(current + 1, last3[1:] + c)) % MOD
        self.memo[current][last3] = result
        return result

if __name__ == '__main__':
    ins = atcoder_ABC122_D()
    print(ins.calc())"
StarCoder,avatar,Java,Python,codeforces_408_B.py,"import sys

s1 = sys.stdin.readline().strip()
s2 = sys.stdin.readline().strip()

if isValid(s1, s2):
    print(len(s2))
else:
    print(-1)

def isValid(s1, s2):
    map = {}
    for c in s1:
        if c in map:
            map[c] += 1
        else:
            map[c] = 1
    for c in s2:
        if c not in map:
            return False
    return True","import sys

def isValid(s1, s2):
    map = {}
    for c in s1:
        if c in map:
            map[c] += 1
        else:
            map[c] = 1
    for c in s2:
        if c not in map:
            return False
    return True

s1 = sys.stdin.readline().strip()
s2 = sys.stdin.readline().strip()

if isValid(s1, s2):
    print(len(s2))
else:
    print(-1)"
StarCoder,avatar,Java,Python,atcoder_ABC125_C.py,"import sys
input = sys.stdin.readline

n = int(input())
a = list(map(int, input().split()))

l = [0] * n
r = [0] * n

l[0] = a[0]
r[n-1] = a[n-1]

for i in range(1, n):
    l[i] = gcd(l[i-1], a[i])

for i in range(n-2, -1, -1):
    r[i] = gcd(r[i+1], a[i])

ans = max(l[n-2], r[1])

for i in range(1, n-1):
    ans = max(ans, gcd(l[i-1], r[i+1]))

print(ans)

def gcd(a, b):
    if b > a:
        a, b = b, a
    if b == 0:
        return a
    r = -1
    while r!= 0:
        r = a % b
        a = b
        b = r
    return a","import sys

def gcd(a, b):
    if b > a:
        a, b = b, a
    if b == 0:
        return a
    r = -1
    while r!= 0:
        r = a % b
        a = b
        b = r
    return a

input = sys.stdin.readline

n = int(input())
a = list(map(int, input().split()))

l = [0] * n
r = [0] * n

l[0] = a[0]
r[n-1] = a[n-1]

for i in range(1, n):
    l[i] = gcd(l[i-1], a[i])

for i in range(n-2, -1, -1):
    r[i] = gcd(r[i+1], a[i])

ans = max(l[n-2], r[1])

for i in range(1, n-1):
    ans = max(ans, gcd(l[i-1], r[i+1]))

print(ans)"
StarCoder,avatar,Java,Python,codeforces_287_A.py,"import sys

for _ in range(int(input())):
    str = [input() for _ in range(4)]
    u = -1
    while u!= 2:
        u += 1
        i = -1
        while i!= 2:
            i += 1
            if (str[u][i] == str[u][i+1] and (str[u+1][i] == str[u][i] or str[u+1][i+1] == str[u][i])) or (str[u+1][i] == str[u+1][i+1] and (str[u][i] == str[u+1][i] or str[u][i+1] == str[u+1][i])):
                print('YES')
                break
        if i == 2:
            print('NO')","import sys

for _ in range(int(input())):
    str = [input() for _ in range(4)]
    u = -1
    while u!= 2:
        u += 1
        i = -1
        while i!= 2:
            i += 1
            if (str[u][i] == str[u][i+1] and (str[u+1][i] == str[u][i] or str[u+1][i+1] == str[u][i])) or (str[u+1][i] == str[u+1][i+1] and (str[u][i] == str[u+1][i] or str[u][i+1] == str[u+1][i])):
                print('YES')
                break
        if i == 2:
            print('NO')"
StarCoder,avatar,Java,Python,atcoder_AGC004_D.py,"import sys
input = sys.stdin.readline

n, k = map(int, input().split())

graph = [[] for _ in range(n)]

for i in range(n):
    a = int(input()) - 1
    if i!= 0:
        graph[a].append(i)
    elif a!= 0:
        answer += 1

def dfs(a, pre):
    h = 0
    for i in graph[a]:
        h = max(h, dfs(i, a))
    if pre!= 0 and h == k - 1:
        h = 0
        answer += 1
    else:
        h += 1
    return h

dfs(0, -1)
print(answer)","import sys
input = sys.stdin.readline

n, k = map(int, input().split())

graph = [[] for _ in range(n)]

for i in range(n):
    a = int(input()) - 1
    if i!= 0:
        graph[a].append(i)
    elif a!= 0:
        answer += 1

def dfs(a, pre):
    h = 0
    for i in graph[a]:
        h = max(h, dfs(i, a))
    if pre!= 0 and h == k - 1:
        h = 0
        answer += 1
    else:
        h += 1
    return h

dfs(0, -1)
print(answer)"
StarCoder,avatar,Java,Python,codeforces_462_B.py,"import sys
import math

class c462b:
    def __init__(self):
        self.left = 0

def main():
    f = open(sys.argv[1])
    out = open(sys.argv[2], 'w')
    n, k = map(int, f.readline().split())
    cards = [c462b() for i in range(26)]
    s = f.readline()
    for t in range(n):
        cards[ord(s[t]) - ord('A')].left += 1
    ans = 0
    for i in range(k):
        cards.sort()
        change = min(cards[25].left, k - i)
        ans += change * change
        cards[25].left -= change
        i += change - 1
    out.write(str(ans) + '\n')
    out.close()

main()","import sys
import math

class c462b:
    def __init__(self):
        self.left = 0

def main():
    f = open(sys.argv[1])
    out = open(sys.argv[2], 'w')
    n, k = map(int, f.readline().split())
    cards = [c462b() for i in range(26)]
    s = f.readline()
    for t in range(n):
        cards[ord(s[t]) - ord('A')].left += 1
    ans = 0
    for i in range(k):
        cards.sort()
        change = min(cards[25].left, k - i)
        ans += change * change
        cards[25].left -= change
        i += change - 1
    out.write(str(ans) + '\n')
    out.close()

main()"
StarCoder,avatar,Java,Python,codeforces_678_A.py,"import sys

n = int(input())
k = int(input())

n += 1

z = 0
if n % k!= 0:
    z = k - n % k

print(n + z)","import sys

n, k = map(int, input().split())

n += 1

z = 0
if n % k!= 0:
    z = k - n % k

print(n + z)"
StarCoder,avatar,Java,Python,codeforces_629_A.py,"import sys

def main():
    num = int(input())
    arr = []
    for i in range(num):
        arr.append(input())
    fine = 0
    for i in range(num):
        for j in range(num):
            if arr[i][j] == 'C':
                counter += 1
        fine += (counter * (counter - 1)) // 2
        counter = 0
    for i in range(num):
        for j in range(num):
            if arr[j][i] == 'C':
                counter += 1
        fine += (counter * (counter - 1)) // 2
        counter = 0
    print(fine)

if __name__ == '__main__':
    main()","import sys

def main():
    num = int(input())
    arr = []
    counter = 0
    for i in range(num):
        arr.append(input())
    fine = 0
    for i in range(num):
        for j in range(num):
            if arr[i][j] == 'C':
                counter += 1
        fine += (counter * (counter - 1)) // 2
        counter = 0
    for i in range(num):
        for j in range(num):
            if arr[j][i] == 'C':
                counter += 1
        fine += (counter * (counter - 1)) // 2
        counter = 0
    print(fine)

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC158_B.py,"import sys

def main():
    N = int(input())
    A = int(input())
    B = int(input())
    k = 0
    if 1 <= N and N <= 10 ** 18 and 0 <= A and 0 <= B and 0 < A + B and A + B <= 10 ** 18:
        if A + B <= N:
            k = N // (A + B)
            if N - k * (A + B) > A:
                print(A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)))
            else:
                print(A * k + (N - k * (A + B)))
        elif A + B > N and A <= N:
            print(A)
        else:
            print(N)

if __name__ == '__main__':
    main()","import sys

def main():
    N, A, B = map(int, input().split())
    k = 0
    if 1 <= N and N <= 10 ** 18 and 0 <= A and 0 <= B and 0 < A + B and A + B <= 10 ** 18:
        if A + B <= N:
            k = N // (A + B)
            if N - k * (A + B) > A:
                print(A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)))
            else:
                print(A * k + (N - k * (A + B)))
        elif A + B > N and A <= N:
            print(A)
        else:
            print(N)

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC169_E.py,"import sys
import math

def main():
    input = sys.stdin.readline
    MOD = 10 ** 9 + 7
    n = int(input())
    ai = list(map(int, input().split()))
    bi = list(map(int, input().split()))
    ai.sort()
    bi.sort()
    if n % 2 == 1:
        print(bi[n // 2] - ai[n // 2] + 1)
    else:
        b = (ai[n // 2] + ai[n // 2 - 1]) / 2
        c = (bi[n // 2] + bi[n // 2 - 1]) / 2
        print((c - b) * 2 + 1)


if __name__ == '__main__':
    main()","import sys
import math

def main():
    input = sys.stdin.readline
    MOD = 10 ** 9 + 7
    n = int(input())
    ai = []
    bi = []
    for i in range(n):
        a, b = map(int, input().split())
        ai.append(a)
        bi.append(b)
    ai.sort()
    bi.sort()
    if n % 2 == 1:
        print(bi[n // 2] - ai[n // 2] + 1)
    else:
        b = (ai[n // 2] + ai[n // 2 - 1]) / 2
        c = (bi[n // 2] + bi[n // 2 - 1]) / 2
        print((c - b) * 2 + 1)


if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC123_D.py,"import sys
input = sys.stdin.readline

n = int(input())
a = [list(map(int, input().split())) for _ in range(3)]
k = int(input())

ans = []
for i in range(a[0][0]):
    for j in range(a[1][0]):
        for m in range(a[2][0]):
            if (i+1)*(j+1)*(m+1) <= k:
                tmp = a[0][1] + a[1][1] + a[2][1]
                ans.append(tmp)
ans.sort()
for i in range(k):
    print(ans[-i-1])","import sys
input = sys.stdin.readline

inputs = list(map(int, input().split()))
a = [list(map(int, input().split())) for _ in range(3)]
k = int(inputs[3])

ans = []
for i in range(a[0][0]):
    for j in range(a[1][0]):
        for m in range(a[2][0]):
            if (i+1)*(j+1)*(m+1) <= k:
                tmp = a[0][1] + a[1][1] + a[2][1]
                ans.append(tmp)
ans.sort()
for i in range(k):
    print(ans[-i-1])"
StarCoder,avatar,Java,Python,atcoder_ABC146_D.py,"import sys

n = int(sys.stdin.readline())

g = [[] for _ in range(n)]

for i in range(n-1):
    a, b = map(int, sys.stdin.readline().split())
    g[a-1].append(b-1)
    g[b-1].append(a-1)

ans = [-1] * (n-1)

def dfs(to, color, parents):
    k = 1
    for e in g[to]:
        if e == parents:
            continue
        if k == color:
            k += 1
        ans[e] = k
        dfs(e, k, to)
        k += 1

dfs(0, -1, -1)

max = 0
for temp in ans:
    max = max if max > temp else temp

print(max)
for c in ans:
    print(c)","import sys

n = int(sys.stdin.readline())

g = [[] for _ in range(n)]

for i in range(n-1):
    a, b = map(int, sys.stdin.readline().split())
    g[a-1].append(b-1)
    g[b-1].append(a-1)

ans = [-1] * (n-1)

def dfs(to, color, parents):
    k = 1
    for e in g[to]:
        if e == parents:
            continue
        if k == color:
            k += 1
        ans[e] = k
        dfs(e, k, to)
        k += 1

dfs(0, -1, -1)

max = 0
for temp in ans:
    max = max if max > temp else temp

print(max)
for c in ans:
    print(c)"
StarCoder,avatar,Java,Python,atcoder_ABC118_C.py,"import sys
input = sys.stdin.readline

n = int(input())
a = []
if n == 1:
    print(int(input()))
    sys.exit()
for i in range(n):
    a.append(int(input()))
a.sort()
if a[-1] == 0:
    print(0)
    sys.exit()
ans = 0
while True:
    if len(a) == 1:
        ans = a[0]
        break
    a = func(a)
print(ans)

def func(A):
    a = A
    min = 0
    for i in range(len(a)):
        if a[i] == 0:
            a.remove(i)
            i -= 1
        else:
            if min!= 0:
                a[i] = a[i] % min
                if a[i] == 1:
                    print(1)
                    sys.exit()
            else:
                min = a[i]
    a.sort()
    return a","import sys

def func(A):
    a = A
    min = 0
    i = 0
    while i < len(a):
        if a[i] == 0:
            a.remove(i)
            i -= 1
        else:
            if min!= 0:
                a[i] = a[i] % min
                if a[i] == 1:
                    print(1)
                    sys.exit()
            else:
                min = a[i]
        i += 1
    a.sort()
    return a

input = sys.stdin.readline

n = int(input())
if n == 1:
    print(int(input()))
    sys.exit()
a = list(map(int, input().split()))
a.sort()
if a[-1] == 0:
    print(0)
    sys.exit()
ans = 0
while True:
    if len(a) == 1:
        ans = a[0]
        break
    a = func(a)
print(ans)"
StarCoder,avatar,Java,Python,codeforces_11_A.py,"import sys

n = int(input())
d = int(input())
nums = [int(x) for x in input().split()]

result = 0
a = 0
for i in range(1, n):
    a = (nums[i-1] - nums[i])
    if a >= 0:
        result += a//d + 1
        nums[i] += (a//d + 1) * d

print(result)","import sys

n, d = map(int, input().split())
nums = [int(x) for x in input().split()]

result = 0
a = 0
for i in range(1, n):
    a = (nums[i-1] - nums[i])
    if a >= 0:
        result += a//d + 1
        nums[i] += (a//d + 1) * d

print(result)"
StarCoder,avatar,Java,Python,atcoder_AGC019_A.py,"import sys

Q = int(input())
H = int(input())
S = int(input())
D = int(input())
N = int(input())

onePrice = min(min(Q*4, H*2), S)

if onePrice <= D/2:
    print(N*onePrice)
else:
    print((N//2)*D + (N%2)*onePrice)","import sys

Q, H, S, D = map(int, input().split())
N = int(input())

onePrice = min(min(Q*4, H*2), S)

if onePrice <= D/2:
    print(N*onePrice)
else:
    print((N//2)*D + (N%2)*onePrice)"
StarCoder,avatar,Java,Python,codeforces_171_A.py,"import sys

class FastReader:
    def __init__(self):
        self.buf = sys.stdin.buffer
        self.bufferedReader = io.BufferedReader(self.buf)
        self.tokenizer = None

    def readline(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return self.tokenizer.readline()

    def read(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.read().decode())
        return self.tokenizer.read()

    def next(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return self.tokenizer.__next__()

    def nextLine(self):
        return self.bufferedReader.readline().decode()

    def nextInt(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return int(self.tokenizer.__next__())

    def nextLong(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return int(self.tokenizer.__next__())

    def nextDouble(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return float(self.tokenizer.__next__())

def main():
    reader = FastReader()
    n = reader.nextInt()
    m = reader.nextInt()
    t = reverse(m)
    print(t + n)

def reverse(n):
    if n < 10:
        return n * 10
    t = n
    r = 0
    while t > 0:
        r = (r * 10) + t % 10
        t = t // 10
    return r

if __name__ == '__main__':
    main()","import sys

class FastReader:
    def __init__(self):
        self.buf = sys.stdin.buffer
        self.bufferedReader = io.BufferedReader(self.buf)
        self.tokenizer = None

    def readline(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return self.tokenizer.readline()

    def read(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.read().decode())
        return self.tokenizer.read()

    def next(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return self.tokenizer.__next__()

    def nextLine(self):
        return self.bufferedReader.readline().decode()

    def nextInt(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return int(self.tokenizer.__next__())

    def nextLong(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return int(self.tokenizer.__next__())

    def nextDouble(self):
        if self.tokenizer is None:
            self.tokenizer = io.StringIO(self.bufferedReader.readline().decode())
        return float(self.tokenizer.__next__())

def main():
    reader = FastReader()
    n = reader.nextInt()
    m = reader.nextInt()
    t = reverse(m)
    print(t + n)

def reverse(n):
    if n < 10:
        return n * 10
    t = n
    r = 0
    while t > 0:
        r = (r * 10) + t % 10
        t = t // 10
    return r

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC154_A.py,"import sys

def main():
    input = sys.stdin.readline
    a, b = map(int, input().split())
    u = input().rstrip()
    if u == str(a):
        print(a - 1, b)
    else:
        print(a, b - 1)

if __name__ == '__main__':
    main()","import sys

def main():
    str = input().split()
    a, b = map(int, input().split())
    u = input().rstrip()
    if u == str[0]:
        print(a - 1, b)
    else:
        print(a, b - 1)

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,codeforces_222_A.py,"import sys

n, k = map(int, sys.stdin.readline().split())

l = 0
c = 1

for i in range(n):
    a = int(sys.stdin.readline())
    if a == l:
        c += 1
    else:
        c = 1
    l = a

if c + k > n:
    print(n - c)
else:
    print(-1)","import sys

n, k = map(int, sys.stdin.readline().split())

l = 0
c = 1

inputs = list(sys.stdin.readline().split())
for i in range(n):
    a = int(inputs[i])
    if a == l:
        c += 1
    else:
        c = 1
    l = a

if c + k > n:
    print(n - c)
else:
    print(-1)"
StarCoder,avatar,Java,Python,codeforces_37_A.py,"import sys

class FastScanner:
    def __init__(self):
        self.br = BufferedReader(InputStreamReader(sys.stdin))
        self.st = StringTokenizer("""")

    def next(self):
        while not self.st.hasMoreTokens():
            try:
                self.st = StringTokenizer(self.br.readLine())
            except IOException as e:
                e.printStackTrace()
        return self.st.nextToken()

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return long(self.next())

    def nextDouble(self):
        return double(self.next())

    def nextLine(self):
        return self.br.readLine()

if __name__ == ""__main__"":
    input = FastScanner()
    n = input.nextInt()
    map = HashMap()
    for i in range(n):
        val = input.nextInt()
        map.put(val, map.getOrDefault(val, 0) + 1)
    max = Integer.MIN_VALUE
    for entry in map.entrySet():
        value = entry.getValue()
        max = Math.max(max, value)
    print(max + """" + map.size())","import sys

class FastScanner:
    def __init__(self):
        self.br = BufferedReader(InputStreamReader(sys.stdin))
        self.st = StringTokenizer("""")

    def next(self):
        while not self.st.hasMoreTokens():
            try:
                self.st = StringTokenizer(self.br.readLine())
            except IOException as e:
                e.printStackTrace()
        return self.st.nextToken()

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return long(self.next())

    def nextDouble(self):
        return double(self.next())

    def nextLine(self):
        return self.br.readLine()

if __name__ == ""__main__"":
    input = FastScanner()
    n = input.nextInt()
    map = HashMap()
    for i in range(n):
        val = input.nextInt()
        map.put(val, map.getOrDefault(val, 0) + 1)
    max = Integer.MIN_VALUE
    for entry in map.entrySet():
        value = entry.getValue()
        max = Math.max(max, value)
    print(max + """" + map.size())"
StarCoder,avatar,Java,Python,codeforces_356_A.py,"import sys

class FastReader:
    def __init__(self):
        self.buf = sys.stdin.buffer
        self.lines = sys.stdin.buffer
        self.chunks = []
        self.pos = 0
        self.pend = 0

    def readline(self):
        while self.pend <= self.pos:
            self.chunks.append(self.buf.readline().decode('ascii'))
            self.pend = self.pend + len(self.chunks[-1])
        line = self.chunks[self.pos]
        self.pos = self.pos + 1
        return line

    def read(self):
        while self.pend <= self.pos:
            self.chunks.append(self.buf.readline().decode('ascii'))
            self.pend = self.pend + len(self.chunks[-1])
        line = self.chunks[self.pos]
        self.pos = self.pos + 1
        return line

    def next_int(self):
        i = 0
        c = self.read()
        while c =='':
            c = self.read()
        if c == '-':
            sign = -1
            c = self.read()
        else:
            sign = 1
        while c!='':
            i = i * 10 + ord(c) - ord('0')
            c = self.read()
        return sign * i

    def next_long(self):
        i = 0
        c = self.read()
        while c =='':
            c = self.read()
        if c == '-':
            sign = -1
            c = self.read()
        else:
            sign = 1
        while c!='':
            i = i * 10 + ord(c) - ord('0')
            c = self.read()
        return sign * i

    def next_double(self):
        i = 0
        c = self.read()
        while c =='':
            c = self.read()
        if c == '-':
            sign = -1
            c = self.read()
        else:
            sign = 1
        while c!='':
            i = i * 10 + ord(c) - ord('0')
            c = self.read()
        return sign * i

    def next_str(self):
        s = ''
        c = self.read()
        while c =='':
            c = self.read()
        while c!='':
            s = s + c
            c = self.read()
        return s


class TreeSet:
    def __init__(self):
        self.tree = []

    def add(self, x):
        self.tree.append(x)

    def remove(self, x):
        self.tree.remove(x)

    def ceiling(self, x):
        if len(self.tree) == 0:
            return None
        l = 0
        r = len(self.tree) - 1
        while l < r:
            m = (l + r) // 2
            if self.tree[m] <= x:
                l = m + 1
            else:
                r = m
        if self.tree[l] <= x:
            return self.tree[l]
        else:
            return None


if __name__ == '__main__':
    reader = FastReader()
    n = reader.next_int()
    left = TreeSet()
    for i in range(n):
        left.add(i)
    q = reader.next_int()
    while q > 0:
        l = reader.next_int() - 1
        r = reader.next_int() - 1
        win = reader.next_int()
        while left.ceiling(l)!= None and left.ceiling(l) <= r:
            curr = left.ceiling(l)
            left.remove(curr)
            answer[curr] = win
            left.add(win - 1)
        answer[win - 1] = 0
        q -= 1
    ans = ''
    for i in range(n):
        ans += str(answer[i])
    print(ans)","import sys

class FastReader:
    def __init__(self):
        self.buf = sys.stdin.buffer
        self.lines = sys.stdin.buffer
        self.chunks = []
        self.pos = 0
        self.pend = 0

    def readline(self):
        while self.pend <= self.pos:
            self.chunks.append(self.buf.readline().decode('ascii'))
            self.pend = self.pend + len(self.chunks[-1])
        line = self.chunks[self.pos]
        self.pos = self.pos + 1
        return line

    def read(self):
        while self.pend <= self.pos:
            self.chunks.append(self.buf.readline().decode('ascii'))
            self.pend = self.pend + len(self.chunks[-1])
        line = self.chunks[self.pos]
        self.pos = self.pos + 1
        return line

    def next_int(self):
        i = 0
        c = self.read()
        while c =='':
            c = self.read()
        if c == '-':
            sign = -1
            c = self.read()
        else:
            sign = 1
        while c!='':
            i = i * 10 + ord(c) - ord('0')
            c = self.read()
        return sign * i

    def next_long(self):
        i = 0
        c = self.read()
        while c =='':
            c = self.read()
        if c == '-':
            sign = -1
            c = self.read()
        else:
            sign = 1
        while c!='':
            i = i * 10 + ord(c) - ord('0')
            c = self.read()
        return sign * i

    def next_double(self):
        i = 0
        c = self.read()
        while c =='':
            c = self.read()
        if c == '-':
            sign = -1
            c = self.read()
        else:
            sign = 1
        while c!='':
            i = i * 10 + ord(c) - ord('0')
            c = self.read()
        return sign * i

    def next_str(self):
        s = ''
        c = self.read()
        while c =='':
            c = self.read()
        while c!='':
            s = s + c
            c = self.read()
        return s


class TreeSet:
    def __init__(self):
        self.tree = []

    def add(self, x):
        self.tree.append(x)

    def remove(self, x):
        self.tree.remove(x)

    def ceiling(self, x):
        if len(self.tree) == 0:
            return None
        l = 0
        r = len(self.tree) - 1
        while l < r:
            m = (l + r) // 2
            if self.tree[m] <= x:
                l = m + 1
            else:
                r = m
        if self.tree[l] <= x:
            return self.tree[l]
        else:
            return None


if __name__ == '__main__':
    reader = FastReader()
    n = reader.next_int()
    left = TreeSet()
    for i in range(n):
        left.add(i)
    q = reader.next_int()
    while q > 0:
        l = reader.next_int() - 1
        r = reader.next_int() - 1
        win = reader.next_int()
        while left.ceiling(l)!= None and left.ceiling(l) <= r:
            curr = left.ceiling(l)
            left.remove(curr)
            answer[curr] = win
            left.add(win - 1)
        answer[win - 1] = 0
        q -= 1
    ans = ''
    for i in range(n):
        ans += str(answer[i])
    print(ans)"
StarCoder,avatar,Java,Python,atcoder_AGC046_B.py,"import sys
input = sys.stdin.readline
MOD = 998244353

class atcoder_AGC046_B:
    def __init__(self):
        self.MOD = MOD
        self.dp = [[0] * 3001 for _ in range(3001)]

    def solve(self, A, B, C, D):
        self.dp[A][B] = 1
        for c in range(A, C + 1):
            for d in range(B, D + 1):
                if c == A and d == B:
                    continue
                ans = 0
                if c > A:
                    part = self.dp[c - 1][d]
                    ans = (part * d) % self.MOD
                if d > B:
                    part = self.dp[c][d - 1]
                    ans = (ans + (part * c) % self.MOD) % self.MOD
                if c > A and d > B:
                    ans = (ans - (self.dp[c - 1][d - 1] * (c - 1) * (d - 1)) % self.MOD) % self.MOD
                self.dp[c][d] = (ans + self.MOD) % self.MOD
        print(self.dp[C][D])

if __name__ == '__main__':
    atcoder_AGC046_B().solve(int(input()), int(input()), int(input()), int(input()))","import sys
input = sys.stdin.readline
MOD = 998244353

class atcoder_AGC046_B:
    def __init__(self):
        self.MOD = MOD
        self.dp = [[0] * 3001 for _ in range(3001)]

    def solve(self, A, B, C, D):
        self.dp[A][B] = 1
        for c in range(A, C + 1):
            for d in range(B, D + 1):
                if c == A and d == B:
                    continue
                ans = 0
                if c > A:
                    part = self.dp[c - 1][d]
                    ans = (part * d) % self.MOD
                if d > B:
                    part = self.dp[c][d - 1]
                    ans = (ans + (part * c) % self.MOD) % self.MOD
                if c > A and d > B:
                    ans = (ans - (self.dp[c - 1][d - 1] * (c - 1) * (d - 1)) % self.MOD) % self.MOD
                self.dp[c][d] = (ans + self.MOD) % self.MOD
        print(self.dp[C][D])

if __name__ == '__main__':
    inputs = list(input().split())
    atcoder_AGC046_B().solve(int(inputs[0]), int(inputs[1]), int(inputs[2]), int(inputs[3]))"
StarCoder,avatar,Java,Python,codeforces_665_A.py,"import sys

for line in sys.stdin:
    a, tA, b, tB, timing = line.split()
    hrs, mins = timing.split(':')
    simDeparture = int(hrs) * 60 + int(mins)
    simArrival = simDeparture + int(tA)
    counter = 0
    for i in range(300, 1440, int(b)):
        busDeparture = i
        busArrival = i + int(tB)
        if busDeparture >= simArrival or simDeparture >= busArrival:
            continue
        counter += 1
    print(counter)","import sys

a, tA = map(int, sys.stdin.readline().split())
b, tB = map(int, sys.stdin.readline().split())
timing = sys.stdin.readline().strip()
hrs, mins = timing.split(':')
simDeparture = int(hrs) * 60 + int(mins)
simArrival = simDeparture + int(tA)
counter = 0
for i in range(300, 1440, int(b)):
    busDeparture = i
    busArrival = i + int(tB)
    if busDeparture >= simArrival or simDeparture >= busArrival:
        continue
    counter += 1
print(counter)"
StarCoder,avatar,Java,Python,atcoder_ABC127_B.py,"import sys

class SimpleScanner:
    def __init__(self, stream):
        self.stream = stream
        self.buffer = """"
        self.buflen = 0
        self.eof = False

    def read(self):
        if self.buflen <= 0:
            self.buffer = self.stream.read(10240)
            self.buflen = len(self.buffer)
            if self.buflen <= 0:
                self.eof = True
                return chr(0)
        self.buflen -= 1
        return self.buffer[self.buflen]

    def checkEof(self):
        if self.eof:
            raise NoSuchElementException()

    def nextChar(self):
        self.checkEof()
        c = self.read()
        self.checkEof()
        return c

    def next(self):
        self.checkEof()
        while self.buflen > 0 and self.buffer[self.buflen - 1].isspace():
            self.buflen -= 1
        start = self.buflen
        while self.buflen > 0 and not self.buffer[self.buflen - 1].isspace():
            self.buflen -= 1
        return self.buffer[start:self.buflen]

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return int(self.next())

    def nextDouble(self):
        return float(self.next())

scanner = SimpleScanner(sys.stdin)
writer = sys.stdout
r = scanner.nextInt()
d = scanner.nextInt()
x = scanner.nextLong()
for i in range(10):
    x = r * x - d
    writer.write(str(x) + ""\n"")
writer.close()","import sys

class SimpleScanner:
    def __init__(self, stream):
        self.stream = stream
        self.buffer = """"
        self.buflen = 0
        self.eof = False

    def read(self):
        if self.buflen <= 0:
            self.buffer = self.stream.read(10240)
            self.buflen = len(self.buffer)
            if self.buflen <= 0:
                self.eof = True
                return chr(0)
        self.buflen -= 1
        return self.buffer[self.buflen]

    def checkEof(self):
        if self.eof:
            raise NoSuchElementException()

    def nextChar(self):
        self.checkEof()
        c = self.read()
        self.checkEof()
        return c

    def next(self):
        self.checkEof()
        while self.buflen > 0 and self.buffer[self.buflen - 1].isspace():
            self.buflen -= 1
        start = self.buflen
        while self.buflen > 0 and not self.buffer[self.buflen - 1].isspace():
            self.buflen -= 1
        return self.buffer[start:self.buflen]

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return int(self.next())

    def nextDouble(self):
        return float(self.next())

scanner = SimpleScanner(sys.stdin)
writer = sys.stdout
r = scanner.nextInt()
d = scanner.nextInt()
x = scanner.nextLong()
for i in range(10):
    x = r * x - d
    writer.write(str(x) + ""\n"")
writer.close()"
StarCoder,avatar,Java,Python,atcoder_ABC123_B.py,"import sys
import collections

def main():
    input = sys.stdin.readline
    MOD = 10 ** 9 + 7
    N = int(input())
    A = list(map(int, input().split()))
    R = [a % 10 for a in A]
    Q = collections.deque()
    for i in range(N):
        if R[i]!= 0:
            Q.append(10 - R[i])
        Q.append(A[i])
    ans = 0
    while len(Q) > 1:
        a = Q.popleft()
        b = Q.popleft()
        ans += (a + b) % MOD
    print(ans % MOD)


if __name__ == '__main__':
    main()","import sys
import collections

def main():
    input = sys.stdin.readline
    MOD = 10 ** 9 + 7
    A = list(map(int, input().split()))
    R = [a % 10 for a in A]
    Q = collections.deque()
    for i in range(len(A)):
        if R[i]!= 0:
            Q.append(10 - R[i])
        Q.append(A[i])
    ans = 0
    while len(Q) > 1:
        a = Q.popleft()
        b = Q.popleft()
        ans += (a + b) % MOD
    print(ans % MOD)


if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_AGC007_C.py,"import math
import sys

def main():
    N = float(input())
    d = float(input())
    x = float(input())
    ans = 0.0
    while N > 0.5:
        adnum = d + x * (N - 0.5)
        ans += adnum
        d = (N + 1.0) * d / N + (5.0 * x) / (2.0 * N)
        x = (1.0 + (2.0 / N)) * x
        N -= 1
    print(ans)

if __name__ == '__main__':
    main()","import math
import sys

def main():
    N, d, x = map(float, input().split())
    ans = 0.0
    while N > 0.5:
        adnum = d + x * (N - 0.5)
        ans += adnum
        d = (N + 1.0) * d / N + (5.0 * x) / (2.0 * N)
        x = (1.0 + (2.0 / N)) * x
        N -= 1
    print(ans)

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC155_D.py,"import sys
import math

def main():
    input = sys.stdin.readline
    MOD = 10 ** 9 + 7
    n = int(input())
    k = int(input())
    a = list(map(int, input().split()))
    a.sort()
    INF = 10 ** 18 + 1
    l = -INF
    r = INF
    while l + 1 < r:
        c = (l + r) // 2
        if check(c):
            l = c
        else:
            r = c
    print(l)

def check(x):
    tot = 0
    for i in range(n):
        now = a[i]
        l = 0
        r = n
        if now >= 0:
            while l < r:
                c = (l + r) // 2
                if now * a[c] < x:
                    l = c + 1
                else:
                    r = c
            tot += l
        else:
            while l < r:
                c = (l + r) // 2
                if now * a[c] >= x:
                    l = c + 1
                else:
                    r = c
            tot += (n - l)
        if a[i] * a[i] < x:
            tot -= 1
    if tot // 2 < k:
        return True
    else:
        return False

if __name__ == '__main__':
    main()","import sys
import math

def main():
    global a, n, k
    input = sys.stdin.readline
    MOD = 10 ** 9 + 7
    n, k = map(int, input().split())
    a = list(map(int, input().split()))
    a.sort()
    INF = 10 ** 18 + 1
    l = -INF
    r = INF
    while l + 1 < r:
        c = (l + r) // 2
        if check(c):
            l = c
        else:
            r = c
    print(l)

def check(x):
    tot = 0
    for i in range(n):
        now = a[i]
        l = 0
        r = n
        if now >= 0:
            while l < r:
                c = (l + r) // 2
                if now * a[c] < x:
                    l = c + 1
                else:
                    r = c
            tot += l
        else:
            while l < r:
                c = (l + r) // 2
                if now * a[c] >= x:
                    l = c + 1
                else:
                    r = c
            tot += (n - l)
        if a[i] * a[i] < x:
            tot -= 1
    if tot // 2 < k:
        return True
    else:
        return False

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC149_B.py,"import sys
import io
import atcoder_ABC149_B

input = io.TextIOWrapper(sys.stdin.buffer, encoding='utf-8')

atcoder_ABC149_B.main(input)","import sys
import io
import atcoder_ABC149_B

input = io.TextIOWrapper(sys.stdin.buffer, encoding='utf-8')

atcoder_ABC149_B.main(input)"
StarCoder,avatar,Java,Python,atcoder_AGC035_B.py,"import sys
input = sys.stdin.readline

n = int(input())
m = int(input())

graph = [[] for _ in range(n)]

for _ in range(m):
    a, b = map(int, input().split())
    graph[a-1].append(b-1)
    graph[b-1].append(a-1)

visited = [0] * n
odd = [False] * n

def dfs(crt, parent):
    visited[crt] = 1
    crt_connect = graph[crt]
    for child in crt_connect:
        if child == parent or visited[child] == 1:
            continue
        elif visited[child] == 2:
            print((crt+1), (child+1))
            odd[crt] = not odd[crt]
        else:
            dfs(child, crt)
            if odd[child]:
                print((child+1), (crt+1))
                odd[child] = not odd[child]
            else:
                print((crt+1), (child+1))
                odd[crt] = not odd[crt]
    visited[crt] = 2

dfs(0, -1)","import sys
input = sys.stdin.readline

n, m = map(int, input().split())

graph = [[] for _ in range(n)]

for _ in range(m):
    a, b = map(int, input().split())
    graph[a-1].append(b-1)
    graph[b-1].append(a-1)

visited = [0] * n
odd = [False] * n

def dfs(crt, parent):
    visited[crt] = 1
    crt_connect = graph[crt]
    for child in crt_connect:
        if child == parent or visited[child] == 1:
            continue
        elif visited[child] == 2:
            print((crt+1), (child+1))
            odd[crt] = not odd[crt]
        else:
            dfs(child, crt)
            if odd[child]:
                print((child+1), (crt+1))
                odd[child] = not odd[child]
            else:
                print((crt+1), (child+1))
                odd[crt] = not odd[crt]
    visited[crt] = 2

dfs(0, -1)"
StarCoder,avatar,Java,Python,codeforces_387_A.py,"import datetime

s = input().split(':')
t = input().split(':')
x = datetime.time(int(s[0]), int(s[1]))
y = datetime.time(int(t[0]), int(t[1]))
print(x - y)","import datetime

s = input().split(':')
t = input().split(':')
x = datetime.time(int(s[0]), int(s[1]))
y = datetime.time(int(t[0]), int(t[1]))
print(x - y)"
StarCoder,avatar,Java,Python,atcoder_ABC165_C.py,"import sys
input = sys.stdin.readline

n, m, q = map(int, input().split())
a = [0] * q
b = [0] * q
c = [0] * q
d = [0] * q
for i in range(q):
    a[i], b[i], c[i], d[i] = map(int, input().split())

def dfs(list):
    if len(list) == n:
        score = 0
        for i in range(q):
            score += (list[b[i]] - list[a[i]] == c[i]) * d[i]
        global ans
        ans = max(ans, score)
        return
    if list:
        for num in range(list[-1], m + 1):
            list.append(num)
            dfs(list)
            list.pop()
    else:
        for num in range(1, m + 1):
            list.append(num)
            dfs(list)
            list.pop()

ans = -100
dfs([])
print(ans)","import sys
input = sys.stdin.readline

n, m, q = map(int, input().split())
a, b, c, d = [], [], [], []
for i in range(q):
    ai, bi, ci, di = map(int, input().split())
    a.append(ai-1)
    b.append(bi-1)
    c.append(ci)
    d.append(di)

def dfs(list):
    global ans
    if len(list) == n:
        score = 0
        for i in range(q):
            score += d[i] if list[b[i]] - list[a[i]] == c[i] else 0
        ans = max(ans, score)
        return
    if list:
        for num in range(list[-1], m + 1):
            list.append(num)
            dfs(list)
            list.pop()
    else:
        for num in range(1, m + 1):
            list.append(num)
            dfs(list)
            list.pop()

ans = -100
dfs([])
print(ans)"
StarCoder,avatar,Java,Python,atcoder_AGC027_A.py,"import sys

N = int(input())
x = int(input())
sweet = []
for i in range(N):
    a = int(input())
    sweet.append(a)
sweet.sort()
num = 0
for i in range(N):
    if x - sweet[num] >= 0:
        x = x - sweet[num]
        num += 1
    else:
        break
if (num == N) and (x > 0):
    num -= 1
print(num)","import sys

N, x = map(int, input().split())
sweet = []
inputs = list(input().split())
for i in range(N):
    a = int(inputs[i])
    sweet.append(a)
sweet.sort()
num = 0
for i in range(N):
    if x - sweet[num] >= 0:
        x = x - sweet[num]
        num += 1
    else:
        break
if (num == N) and (x > 0):
    num -= 1
print(num)"
StarCoder,avatar,Java,Python,atcoder_ABC140_F.py,"import sys
input = sys.stdin.readline

N = int(input())
size = 1 << N
S = [0] * size
spawned = [False] * size
spawned[size - 1] = True
for i in range(size):
    S[i] = int(input())
S.sort()
active = [S[size - 1]]
spawned[size - 1] = True
for i in range(N):
    active.sort(reverse=True)
    activated = []
    next = size - 1
    for slime in active:
        while next >= 0 and (S[next] >= slime or spawned[next]):
            next -= 1
        if next < 0:
            print(""No"")
            exit()
        spawned[next] = True
        activated.append(S[next])
    active.extend(activated)
print(""Yes"")","import sys
input = sys.stdin.readline

N = int(input())
size = 1 << N
S = [0] * size
spawned = [False] * size
spawned[size - 1] = True
inputs = list(input().split())
for i in range(size):
    S[i] = int(inputs[i])
S.sort()
active = [S[size - 1]]
spawned[size - 1] = True
for i in range(N):
    active.sort(reverse=True)
    activated = []
    next = size - 1
    for slime in active:
        while next >= 0 and (S[next] >= slime or spawned[next]):
            next -= 1
        if next < 0:
            print(""No"")
            exit()
        spawned[next] = True
        activated.append(S[next])
    active.extend(activated)
print(""Yes"")"
StarCoder,avatar,Java,Python,atcoder_AGC029_C.py,"import sys
input = sys.stdin.readline

n = int(input())
a = list(map(int, input().split()))

s = []
current = 0
for ai in a:
    if ai <= current:
        if len(s) == k:
            print(ai)
            exit()
        while s and s[-1] >= ai:
            s.pop()
        p = ai - 1
        while True:
            if p < 0:
                print(-1)
                exit()
            sp = s.count(p) + 1
            s.append(p)
            if sp == k:
                s.pop()
                p -= 1
            else:
                break
    current = ai
print(current)","import sys
input = sys.stdin.readline

n = int(input())
a = list(map(int, input().split()))

s = []
current = 0
for ai in a:
    if ai <= current:
        if len(s) == k:
            print(ai)
            exit()
        while s and s[-1] >= ai:
            s.pop()
        p = ai - 1
        while True:
            if p < 0:
                print(-1)
                exit()
            sp = s.count(p) + 1
            s.append(p)
            if sp == k:
                s.pop()
                p -= 1
            else:
                break
    current = ai
print(current)"
StarCoder,avatar,Java,Python,codeforces_469_A.py,"import sys

n = int(input())
levels = int(input())
sum = 0
sum2 = 0
sum3 = 0
arr = []
count = 0
for i in range(levels):
    arr.append(int(input()))
level2 = int(input())
level3 = levels + level2
arr2 = []
for i in range(arr.length):
    arr2.append(arr[i])
for i in range(arr.length, level3):
    arr2.append(int(input()))
arr3 = []
j = 0
for i in range(n):
    arr3.append(j + 1)
    j += 1
for i in range(n):
    for x in range(arr2.length):
        if arr3[i] == arr2[x]:
            count += 1
            break
if count == n:
    print(""I become the guy."")
else:
    print(""Oh, my keyboard!"")","import sys

n = int(input())
inputs = list(input().split())
levels = int(inputs[0])
sum = 0
sum2 = 0
sum3 = 0
arr = []
count = 0
for i in range(levels):
    arr.append(int(inputs[i + 1]))
inputs = list(input().split())
level2 = int(inputs[0])
level3 = levels + level2
arr2 = []
for i in range(len(arr)):
    arr2.append(arr[i])
for i in range(len(arr), level3):
    arr2.append(int(inputs[i - len(arr) + 1]))
arr3 = []
j = 0
for i in range(n):
    arr3.append(j + 1)
    j += 1
for i in range(n):
    for x in range(len(arr2)):
        if arr3[i] == arr2[x]:
            count += 1
            break
if count == n:
    print(""I become the guy."")
else:
    print(""Oh, my keyboard!"")"
StarCoder,avatar,Java,Python,atcoder_ABC143_D.py,"import sys
input = sys.stdin.readline

N = int(input())
L = []
for i in range(N):
    L.append(int(input()))
L.sort()
count = 0
for i in range(N):
    for j in range(i+1, N):
        a = L[i]
        b = L[j]
        res = find(L, j+1, a+b)
        count = count + res
print(count)

def find(li, from_, target):
    low = from_
    upp = len(li) - 1
    mid = (upp - low + 1) // 2
    if upp - low < 0:
        return 0
    elif li[from_] >= target:
        return 0
    elif li[upp] < target:
        return upp - low + 1
    while upp - low > 1:
        if li[mid] >= target:
            upp = mid
        else:
            low = mid
        mid = (upp - low + 1) // 2
    return low - from_ + 1","import sys

def find(li, from_, target):
    low = from_
    upp = len(li) - 1
    mid = (upp - low + 1) // 2
    if upp - low < 0:
        return 0
    elif li[from_] >= target:
        return 0
    elif li[upp] < target:
        return upp - low + 1
    while upp - low > 1:
        if li[mid] >= target:
            upp = mid
        else:
            low = mid
        mid = (upp - low + 1) // 2
    return low - from_ + 1

input = sys.stdin.readline

N = int(input())
L = list(map(int, input().split()))
L.sort()
count = 0
for i in range(N):
    for j in range(i+1, N):
        a = L[i]
        b = L[j]
        res = find(L, j+1, a+b)
        count = count + res
print(count)"
StarCoder,avatar,Java,Python,codeforces_379_A.py,"import sys

a = int(sys.stdin.readline())
b = int(sys.stdin.readline())

res = a

while a >= b:
    res += (a / b)
    a = (a / b) + (a % b)

print(res)","import sys

a, b = map(int, sys.stdin.readline().split())

res = a

while a >= b:
    res += (a // b)
    a = (a // b) + (a % b)

print(res)"
StarCoder,avatar,Java,Python,codeforces_154_A.py,"import sys

def main():
    N = int(input())
    arr = list(input())
    K = int(input())
    res = 0
    for k in range(K):
        input = input()
        a = 0
        b = 0
        for i in range(N):
            if arr[i] == input[0]:
                a += 1
            elif arr[i] == input[1]:
                b += 1
            else:
                res += min(a, b)
                a = b = 0
        res += min(a, b)
    print(res)

if __name__ == '__main__':
    main()","import sys

def main():
    arr = input()
    N = len(arr)
    K = int(input())
    res = 0
    for k in range(K):
        inputs = input()
        a = 0
        b = 0
        for i in range(N):
            if arr[i] == inputs[0]:
                a += 1
            elif arr[i] == inputs[1]:
                b += 1
            else:
                res += min(a, b)
                a = b = 0
        res += min(a, b)
    print(res)

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC150_D.py,"import math

n, m = map(int, input().split())
a = list(map(int, input().split()))

lcd = 1
for i in range(n):
    lcd *= a[i] // math.gcd(lcd, a[i])
    if lcd > m:
        print(0)
        exit()

for i in range(n):
    if (lcd // a[i]) % 2 == 0:
        print(0)
        exit()

print((m // lcd + 1) // 2)","import math

n, m = map(int, input().split())
inputs = list(input().split())
a = [int(input) // 2 for input in inputs]

lcd = 1
for i in range(n):
    lcd *= a[i] // math.gcd(lcd, a[i])
    if lcd > m:
        print(0)
        exit()

for i in range(n):
    if (lcd // a[i]) % 2 == 0:
        print(0)
        exit()

print((m // lcd + 1) // 2)"
StarCoder,avatar,Java,Python,atcoder_ABC142_A.py,"import math

input = float(input())
countOdd = math.floor(input / 2)
result = countOdd / input
print(round(result, 10))","import math

input = float(input())
countOdd = math.floor(input / 2)
result = countOdd / input
print(round(result, 10))"
StarCoder,avatar,Java,Python,codeforces_55_A.py,"import sys
n = int(sys.stdin.readline())
a = [0]*1000
for i in range(n):
    a[i] = 1
for i in range(n):
    if a[i] == 0:
        print(""NO"")
        break
else:
    print(""YES"")","import sys
n = int(sys.stdin.readline())
a = [0]*1000
for i in range(n):
    a[i] = 1
for i in range(n):
    if a[i] == 0:
        print(""NO"")
        break
else:
    print(""YES"")"
StarCoder,avatar,Java,Python,atcoder_ABC137_D.py,"import heapq

class Job:
    def __init__(self, a, b):
        self.a = a
        self.b = b

    def __lt__(self, other):
        if self.a == other.a:
            return self.b < other.b
        else:
            return self.a < other.a

N, M = map(int, input().split())

q = []
for _ in range(N):
    a, b = map(int, input().split())
    heapq.heappush(q, Job(a, b))

cnt = 0
jobQ = []
for i in range(1, M+1):
    while q and q[0].a <= i:
        heapq.heappush(jobQ, heapq.heappop(q).b)
    if jobQ:
        cnt += heapq.heappop(jobQ)

print(cnt)","import heapq

class Job:
    def __init__(self, a, b):
        self.a = a
        self.b = b

    def __lt__(self, other):
        if self.a == other.a:
            return self.b < other.b
        else:
            return self.a < other.a

N, M = map(int, input().split())

q = []
for _ in range(N):
    a, b = map(int, input().split())
    heapq.heappush(q, Job(a, b))

cnt = 0
jobQ = []
for i in range(1, M+1):
    while q:
        if q[0].a <= i:
            heapq.heappush(jobQ, -heapq.heappop(q).b)
        else:
            break
    if jobQ:
        cnt += -heapq.heappop(jobQ)

print(cnt)"
StarCoder,avatar,Java,Python,atcoder_ABC169_D.py,"import math

n = int(input())
sqrt = int(math.sqrt(n))
answer = 0
for i in range(2, sqrt + 1):
    count = 0
    while n % i == 0:
        n //= i
        count += 1
    for j in range(1, count):
        count -= j
        answer += 1
if n > 1:
    answer += 1
print(answer)","import math

n = int(input())
sqrt = int(math.sqrt(n))
answer = 0
for i in range(2, sqrt + 1):
    count = 0
    while n % i == 0:
        n //= i
        count += 1
    j = 1
    while count - j >= 0:
        count -= j
        answer += 1
        j += 1
if n > 1:
    answer += 1
print(answer)"
StarCoder,avatar,Java,Python,codeforces_334_A.py,"import sys

n = int(input())

square = n * n

odd = []
even = []

for i in range(1, square + 1):
    if i % 2 == 0:
        even.append(i)
    else:
        odd.append(i)

loop = square // n
div = loop // 2

for i in range(1, loop + 1):
    for j in range(div):
        if i % 2 == 1:
            print(odd.pop(0), even.pop(), end="" "")
        else:
            print(even.pop(0), odd.pop(), end="" "")
    print()","import sys

n = int(input())

square = n * n

odd = []
even = []

for i in range(1, square + 1):
    if i % 2 == 0:
        even.append(i)
    else:
        odd.append(i)

loop = square // n
div = loop // 2

for i in range(1, loop + 1):
    for j in range(div):
        if i % 2 == 1:
            print(odd.pop(0), even.pop(), end="" "")
        else:
            print(even.pop(0), odd.pop(), end="" "")
    print()"
StarCoder,avatar,Java,Python,atcoder_ABC140_D.py,"import sys

def main():
    N, K = map(int, input().split())
    S = input()
    c1 = S.replace('L', 'R')
    c3 = S.replace('R', 'L')
    flag = False
    count = 0
    for i in range(N):
        if flag and c1[i] == 'R':
            flag = False
            count += 1
        if count == K:
            break
        if c1[i] == 'L':
            flag = True
            c1[i] = 'R'
    flag = False
    count = 0
    for i in range(N):
        if flag and c3[i] == 'L':
            flag = False
            count += 1
        if count == K:
            break
        if c3[i] == 'R':
            flag = True
            c3[i] = 'L'
    S1 = ''.join(c1)
    S3 = ''.join(c3)
    count = 1
    sum1 = 0
    bef = S1[0]
    for i in range(1, N):
        if S1[i] == bef:
            count += 1
            if i == N - 1:
                sum1 += count - 1
        else:
            bef = S1[i]
            sum1 += count - 1
            count = 1
    count = 1
    sum3 = 0
    bef = S3[0]
    for i in range(1, N):
        if S3[i] == bef:
            count += 1
            if i == N - 1:
                sum3 += count - 1
        else:
            bef = S3[i]
            sum3 += count - 1
            count = 1
    print(max(sum1, sum3))

if __name__ == '__main__':
    main()","import sys

def main():
    N, K = map(int, input().split())
    S = input()
    c1 = list(S)
    c3 = list(S)
    flag = False
    count = 0
    for i in range(N):
        if flag and c1[i] == 'R':
            flag = False
            count += 1
        if count == K:
            break
        if c1[i] == 'L':
            flag = True
            c1[i] = 'R'
    flag = False
    count = 0
    for i in range(N):
        if flag and c3[i] == 'L':
            flag = False
            count += 1
        if count == K:
            break
        if c3[i] == 'R':
            flag = True
            c3[i] = 'L'
    S1 = ''.join(c1)
    S3 = ''.join(c3)
    count = 1
    sum1 = 0
    bef = S1[0]
    for i in range(1, N):
        if S1[i] == bef:
            count += 1
            if i == N - 1:
                sum1 += count - 1
        else:
            bef = S1[i]
            sum1 += count - 1
            count = 1
    count = 1
    sum3 = 0
    bef = S3[0]
    for i in range(1, N):
        if S3[i] == bef:
            count += 1
            if i == N - 1:
                sum3 += count - 1
        else:
            bef = S3[i]
            sum3 += count - 1
            count = 1
    print(max(sum1, sum3))

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC145_B.py,"import sys

n = int(input())
s = input()

if s == s[::-1]:
    print('Yes')
else:
    print('No')","import sys

n = int(input())
s = input()

if s == s[::-1]:
    print('Yes')
else:
    print('No')"
StarCoder,avatar,Java,Python,atcoder_ABC152_E.py,"import math
import sys

def mod_inv(a, m):
    return pow(a, m-2, m)

def mod_pow(x, n, m):
    ans = 1
    x = x % m
    while n > 0:
        if n & 1:
            ans = (ans * x) % m
        x = (x * x) % m
        n >>= 1
    return ans

def lcm(a, b):
    return (a * b) // math.gcd(a, b)

def main():
    input = sys.stdin.readline
    MOD = 1000000007
    N = int(input())
    A = list(map(int, input().split()))
    lcm_val = 1
    for ai in A:
        lcm_val = lcm(lcm_val, ai)
    ans = 0
    for ai in A:
        ans = (ans + mod_pow(lcm_val, MOD-2, MOD) * mod_inv(ai, MOD) % MOD) % MOD
    print(ans)

if __name__ == '__main__':
    main()","import math
import sys

def mod_inv(a, m):
    return pow(a, m-2, m)

def mod_pow(x, n, m):
    ans = 1
    x = x % m
    while n > 0:
        if n & 1:
            ans = (ans * x) % m
        x = (x * x) % m
        n >>= 1
    return ans

def lcm(a, b):
    return (a * b) // math.gcd(a, b)

def main():
    input = sys.stdin.readline
    MOD = 1000000007
    N = int(input())
    A = list(map(int, input().split()))
    lcm_val = 1
    for ai in A:
        lcm_val = lcm(lcm_val, ai)
    ans = 0
    for ai in A:
        ans = (ans + mod_pow(lcm_val, MOD-2, MOD) * mod_inv(ai, MOD) % MOD) % MOD
    print(ans)

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_AGC003_C.py,"import sys
import heapq

class atcoder_AGC003_C:
    def main(self):
        N = int(sys.stdin.readline())
        map = {}
        nums = []
        for i in range(N):
            tmp = int(sys.stdin.readline())
            nums.append(tmp)
            map[tmp] = i
        bin = 0
        diff = 0
        while nums:
            num = heapq.heappop(nums)
            idx = map[num]
            if (bin % 2)!= (idx % 2):
                diff += 1
            bin += 1
            bin %= 2
        ans = diff // 2
        print(ans)

if __name__ == '__main__':
    atcoder_AGC003_C().main()","import sys
import heapq

class atcoder_AGC003_C:
    def main(self):
        N = int(sys.stdin.readline())
        map = {}
        nums = []
        for i in range(N):
            tmp = int(sys.stdin.readline())
            nums.append(tmp)
            map[tmp] = i
        bin = 0
        diff = 0
        while nums:
            num = heapq.heappop(nums)
            idx = map[num]
            if (bin % 2)!= (idx % 2):
                diff += 1
            bin += 1
            bin %= 2
        ans = diff // 2
        print(ans)

if __name__ == '__main__':
    atcoder_AGC003_C().main()"
StarCoder,avatar,Java,Python,atcoder_ABC168_C.py,"import math

A, B, H, M = map(int, input().split())

kaku = (M * 6) - (H * 30) - (M / 2)

ans = math.sqrt(A**2 + B**2 - 2 * A * B * math.cos(math.radians(kaku)))

print(ans)","import math

A, B, H, M = map(int, input().split())

kaku = (M * 6) - (H * 30) - (M / 2)

ans = math.sqrt(A**2 + B**2 - 2 * A * B * math.cos(math.radians(kaku)))

print(ans)"
StarCoder,avatar,Java,Python,codeforces_598_A.py,"import math

q = int(input())

while q > 0:
    n = int(input())
    x = int(math.log(n, 2))
    x += 1
    s = -1 * (2 ** x) + 2 + ((n * (n + 1)) / 2) - (2 ** x)
    print(s)
    q -= 1","import math

q = int(input())

while q > 0:
    n = int(input())
    x = int(math.log(n, 2))
    x += 1
    s = -1 * (2 ** x) + 2 + ((n * (n + 1)) // 2) - (2 ** x)
    print(s)
    q -= 1"
StarCoder,avatar,Java,Python,atcoder_ABC106_C.py,"import sys

s = sys.stdin.readline().rstrip()
k = int(sys.stdin.readline())

if s[k-1] == '1':
    print(1)
else:
    print(s[k-1])","import sys

s = sys.stdin.readline().rstrip()
k = int(sys.stdin.readline())

if s[k-1] == '1':
    print(1)
else:
    print(s[k-1])"
StarCoder,avatar,Java,Python,atcoder_ABC112_C.py,"import sys

def check(n, x, y, h, cx, cy):
    ch = -1
    for i in range(n):
        if h[i] > 0:
            ch = abs(x[i] - cx) + abs(y[i] - cy) + h[i]
            break
    for i in range(n):
        if h[i]!= max(ch - abs(x[i] - cx) - abs(y[i] - cy), 0):
            return -1
    return ch

def main():
    n = int(input())
    x = [0] * n
    y = [0] * n
    h = [0] * n
    for i in range(n):
        x[i], y[i], h[i] = map(int, input().split())
    for i in range(1, 101):
        for j in range(1, 101):
            ch = check(n, x, y, h, i, j)
            if ch > 0:
                print(i, j, ch)

if __name__ == '__main__':
    main()","import sys

def check(n, x, y, h, cx, cy):
    ch = -1
    for i in range(n):
        if h[i] > 0:
            ch = abs(x[i] - cx) + abs(y[i] - cy) + h[i]
            break
    for i in range(n):
        if h[i]!= max(ch - abs(x[i] - cx) - abs(y[i] - cy), 0):
            return -1
    return ch

def main():
    n = int(input())
    x = [0] * n
    y = [0] * n
    h = [0] * n
    for i in range(n):
        x[i], y[i], h[i] = map(int, input().split())
    for i in range(101):
        for j in range(101):
            ch = check(n, x, y, h, i, j)
            if ch > 0:
                print(i, j, ch)

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC127_F.py,"import sys
input = sys.stdin.readline

n = int(input())

pqmax = []
pqmin = []
sumMin = 0
sumMax = 0
sumb = 0
min = 0

for _ in range(n):
    s = input().split()
    if s[0] == '2':
        ans = min
        ans *= len(pqmin)
        ans -= sumMin
        ans1 = min
        ans1 *= len(pqmax)
        ans1 = sumMax - ans1
        print(min, ans + ans1 + sumb)
    else:
        in_ = int(s[1])
        sumb += int(s[2])
        if in_ > min:
            pqmax.append(in_)
            sumMax += in_
        else:
            pqmin.append(in_)
            sumMin += in_
        if len(pqmin) > len(pqmax):
            sumMax += pqmin[0]
            sumMin -= pqmin[0]
            pqmax.append(pqmin.pop(0))
        if len(pqmin) < len(pqmax):
            sumMax -= pqmax[0]
            sumMin += pqmax[0]
            pqmin.append(pqmax.pop(0))
        min = pqmin[0]","import sys
input = sys.stdin.readline

n = int(input())

pqmax = []
pqmin = []
sumMin = 0
sumMax = 0
sumb = 0
min = 0

for _ in range(n):
    s = input().split()
    if s[0] == '2':
        ans = min
        ans *= len(pqmin)
        ans -= sumMin
        ans1 = min
        ans1 *= len(pqmax)
        ans1 = sumMax - ans1
        print(min, ans + ans1 + sumb)
    else:
        in_ = int(s[1])
        sumb += int(s[2])
        if in_ > min:
            pqmax.append(in_)
            sumMax += in_
        else:
            pqmin.append(in_)
            sumMin += in_
        if len(pqmin) > len(pqmax):
            sumMax += pqmin[0]
            sumMin -= pqmin[0]
            pqmax.append(pqmin.pop(0))
        if len(pqmin) < len(pqmax):
            sumMax -= pqmax[0]
            sumMin += pqmax[0]
            pqmin.append(pqmax.pop(0))
        min = pqmin[0]"
StarCoder,avatar,Java,Python,atcoder_ABC134_E.py,"import sys
input = sys.stdin.readline

n = int(input())

map = {}

while n > 0:
    num = int(input())
    if num not in map:
        map[num] = 1
    else:
        if map[num] == 1:
            del map[num]
        else:
            map[num] -= 1
            map[num] += 1
    n -= 1

ans = 0
for key in map:
    ans += map[key]

print(ans)","import sys
input = sys.stdin.readline

n = int(input())

map = {}

while n > 0:
    num = int(input())
    if num not in map:
        map[num] = 1
    else:
        if map[num] == 1:
            del map[num]
        else:
            map[num] -= 1
            map[num] += 1
    n -= 1

ans = 0
for key in map:
    ans += map[key]

print(ans)"
StarCoder,avatar,Java,Python,atcoder_ARC086_B.py,"import sys

def main():
    input = sys.stdin.readline
    N = int(input())
    A = list(map(int, input().split()))
    m = 0
    for i in range(1, N):
        if abs(A[m]) < abs(A[i]):
            m = i
    R = []
    if A[m] >= 0:
        for i in range(1, N):
            R.append(str(m + 1) + "" "" + str(i + 1))
        for i in range(1, N):
            R.append(str(i + 1) + "" "" + str(i + 1))
    else:
        for i in range(N):
            R.append(str(i + 1) + "" "" + str(i + 1))
        for i in range(N - 1):
            R.append(str(i + 1) + "" "" + str(i + 2))
    print(len(R))
    print(""\n"".join(R))

if __name__ == '__main__':
    main()","import sys

def main():
    input = sys.stdin.readline
    N = int(input())
    A = list(map(int, input().split()))
    m = 0
    for i in range(1, N):
        if abs(A[m]) < abs(A[i]):
            m = i
    R = []
    for i in range(N):
        if (A[m] >= 0) ^ (A[i] >= 0):
            R.append(str(m + 1) + "" "" + str(i + 1))
    if A[m] >= 0:
        for i in range(1, N):
            R.append(str(i) + "" "" + str(i + 1))
    else:
        for i in range(N, 1, -1):
            R.append(str(i) + "" "" + str(i - 1))
    print(len(R))
    print(""\n"".join(R))

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,atcoder_ARC062_B.py,"import sys
input = sys.stdin.readline

S = input().rstrip()
score = 0
for i in range(len(S)):
    my = 'g' if i % 2 == 0 else 'p'
    his = S[i]
    if my!= his:
        score += my == 'p' and 1 or -1
print(score)","import sys
input = sys.stdin.readline

S = input().rstrip()
score = 0
for i in range(len(S)):
    my = 'g' if i % 2 == 0 else 'p'
    his = S[i]
    if my!= his:
        score += my == 'p' and 1 or -1
print(score)"
StarCoder,avatar,Java,Python,atcoder_AGC034_B.py,"import sys
input = sys.stdin.readline

s = input().rstrip()
cnt = 0
tmp = 0
for i in range(len(s)):
    if s[i] == 'A':
        tmp += 1
    elif s[i] == 'D':
        cnt += tmp
    else:
        tmp = 0
print(cnt)","import sys
input = sys.stdin.readline

s = input().rstrip().replace(""BC"", ""D"")
cnt = 0
tmp = 0
for i in range(len(s)):
    if s[i] == 'A':
        tmp += 1
    elif s[i] == 'D':
        cnt += tmp
    else:
        tmp = 0
print(cnt)"
StarCoder,avatar,Java,Python,codeforces_705_B.py,"import sys

class FastReader:
    def __init__(self):
        self.val = sys.stdin.readline().rstrip()
        self.idx = 0

    def next(self):
        while self.idx < len(self.val):
            c = self.val[self.idx]
            self.idx += 1
            if c!='':
                return c

    def nextInt(self):
        num = 0
        c = self.next()
        while c!= None and c.isdigit():
            num = num * 10 + int(c)
            c = self.next()
        return num

scan = FastReader()
t = scan.nextInt()
for _ in range(t):
    n = scan.nextInt()
    arr = [scan.nextInt() for _ in range(n)]
    prevWinner = 0
    for i in range(n):
        if arr[i] == 1:
            if prevWinner == 0:
                prevWinner = 2
            else:
                if (arr[i] - 1) % 2 == 0:
                    print(2)
                    prevWinner = 2
                else:
                    print(1)
                    prevWinner = 1
        else:
            if prevWinner == 0:
                prevWinner = 1
            else:
                if (arr[i] - 1) % 2 == 0:
                    print(1)
                    prevWinner = 1
                else:
                    print(2)
                    prevWinner = 2","import sys

class FastReader:
    def __init__(self):
        self.val = sys.stdin.readline().rstrip()
        self.idx = 0

    def next(self):
        while self.idx < len(self.val):
            c = self.val[self.idx]
            self.idx += 1
            if c!='':
                return c

    def nextInt(self):
        num = 0
        c = self.next()
        while c!= None and c.isdigit():
            num = num * 10 + int(c)
            c = self.next()
        return num

scan = FastReader()
t = scan.nextInt()
for _ in range(t):
    n = scan.nextInt()
    arr = [scan.nextInt() for _ in range(n)]
    prevWinner = 0
    for i in range(n):
        if arr[i] == 1:
            if prevWinner == 0:
                prevWinner = 2
            else:
                if (arr[i] - 1) % 2 == 0:
                    print(2)
                    prevWinner = 2
                else:
                    print(1)
                    prevWinner = 1
        else:
            if prevWinner == 0:
                prevWinner = 1
            else:
                if (arr[i] - 1) % 2 == 0:
                    print(1)
                    prevWinner = 1
                else:
                    print(2)
                    prevWinner = 2"
StarCoder,avatar,Java,Python,codeforces_459_B.py,"import sys

def main():
    N = int(sys.stdin.readline())
    A = [int(x) for x in sys.stdin.readline().split()]
    A.sort()
    min = A[0]
    max = A[-1]
    mins = 0
    maxs = 0
    for value in A:
        if value == min:
            mins += 1
        if value == max:
            maxs += 1
    if min == max:
        print((max - min), mins * (mins - 1) / 2)
    else:
        print((max - min), mins * maxs)

if __name__ == ""__main__"":
    main()","import sys

def main():
    N = int(sys.stdin.readline())
    A = [int(x) for x in sys.stdin.readline().split()]
    A.sort()
    min = A[0]
    max = A[-1]
    mins = 0
    maxs = 0
    for value in A:
        if value == min:
            mins += 1
        if value == max:
            maxs += 1
    if min == max:
        print((max - min), mins * (mins - 1) // 2)
    else:
        print((max - min), mins * maxs)

if __name__ == ""__main__"":
    main()"
StarCoder,avatar,Java,Python,atcoder_ABC150_E.py,"import sys

def power(x, n):
    if n == 0:
        return 1
    val = power(x, n // 2)
    val = val * val
    if n % 2 == 1:
        val = val * x
    return val

def main():
    input = sys.stdin.readline
    MOD = 1000000007
    n = int(input())
    c = list(map(int, input().split()))
    c.sort()
    b = power(2, n)
    a = power(2, n - 2)
    ans = 0
    for i in range(2, n + 1):
        val = a * i % MOD
        val *= c[n + 1 - i]
        val %= MOD
        ans += val
        ans %= MOD
    ans *= b
    ans %= MOD
    print(ans)

if __name__ == '__main__':
    main()","import sys

def power(x, n):
    if n == 0:
        return 1
    mod = 1000000007
    val = power(x, n // 2)
    val = val * val % mod
    if n % 2 == 1:
        val = val * x % mod
    return val

def main():
    input = sys.stdin.readline
    MOD = 1000000007
    n = int(input())
    c = list(map(int, input().split()))
    if n == 1:
        print(c[0] * 2 % MOD)
        return
    c.sort()
    b = power(2, n)
    a = power(2, n - 2)
    ans = 0
    for i in range(2, n + 2):
        val = a * i % MOD
        val *= c[n + 1 - i]
        val %= MOD
        ans += val
        ans %= MOD
    ans *= b
    ans %= MOD
    print(ans)

if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,codeforces_134_A.py,"import sys

n = int(input())
arr = list(map(int, input().split()))
sum = 0
for i in range(n):
    sum += arr[i]
c = 0
for i in range(n):
    if (sum - arr[i]) % (n - 1) == 0 and (sum - arr[i]) / (n - 1) == arr[i]:
        c += 1
        print(i+1, end="" "")
print()
print(c)","import sys

n = int(input())
arr = list(map(int, input().split()))
sum = 0
for i in range(n):
    sum += arr[i]
c = 0
sb = []
for i in range(n):
    if (sum - arr[i]) % (n - 1) == 0 and (sum - arr[i]) / (n - 1) == arr[i]:
        c += 1
        sb.append(str(i + 1))
print(c)
print(' '.join(sb))"
StarCoder,avatar,Java,Python,atcoder_AGC021_B.py,"import math
import sys

def main():
    input = sys.stdin.readline
    N = int(input())
    x = [0] * N
    y = [0] * N
    for i in range(N):
        x[i], y[i] = map(int, input().split())

    for i in range(N):
        thetas = []
        for j in range(N):
            if i == j:
                continue
            thetas.append(math.atan2(y[j] - y[i], x[j] - x[i]))
        thetas.sort()
        thetas.append(thetas[0] + 2 * math.pi)
        ans = 0
        for k in range(N - 1):
            ans = max(ans, thetas[k + 1] - thetas[k] - math.pi)
        print(ans / (math.pi * 2))


if __name__ == '__main__':
    main()","import math
import sys

def main():
    input = sys.stdin.readline
    N = int(input())
    x = [0] * N
    y = [0] * N
    for i in range(N):
        x[i], y[i] = map(int, input().split())

    for i in range(N):
        thetas = []
        for j in range(N):
            if i == j:
                continue
            thetas.append(math.atan2(y[j] - y[i], x[j] - x[i]))
        thetas.sort()
        thetas.append(thetas[0] + 2 * math.pi)
        ans = 0
        for k in range(N - 1):
            ans = max(ans, thetas[k + 1] - thetas[k] - math.pi)
        print(ans / (math.pi * 2))


if __name__ == '__main__':
    main()"
StarCoder,avatar,Java,Python,codeforces_459_A.py,"import sys

for line in sys.stdin:
    x1, y1, x2, y2 = map(int, line.split())
    if x1 == x2:
        dif = abs(y1 - y2)
        print(x1 + dif, "" "", y1, "" "", x1 + dif, "" "", y2)
    elif y1 == y2:
        dif = abs(x1 - x2)
        print(x1, "" "", y1 + dif, "" "", x2, "" "", y2 + dif)
    elif abs(x1 - x2) == abs(y1 - y2):
        print(x1, "" "", y2, "" "", x2, "" "", y1)
    else:
        print(-1)","import sys

for line in sys.stdin:
    x1, y1, x2, y2 = map(int, line.split())
    if x1 == x2:
        dif = abs(y1 - y2)
        print(x1 + dif, y1, x1 + dif, y2)
    elif y1 == y2:
        dif = abs(x1 - x2)
        print(x1, y1 + dif, x2, y2 + dif)
    elif abs(x1 - x2) == abs(y1 - y2):
        print(x1, y2, x2, y1)
    else:
        print(-1)"
StarCoder,avatar,Java,Python,atcoder_AGC013_A.py,"import sys

def main():
    N = int(input())
    A = [int(x) for x in input().split()]
    count = 0
    for i in range(N):
        if i == N - 1:
            count += 1
        elif A[i] == A[i + 1]:
            pass
        elif A[i] < A[i + 1]:
            while A[i] <= A[i + 1]:
                i += 1
                if i == N - 1:
                    break
            count += 1
        else:
            while A[i] >= A[i + 1]:
                i += 1
                if i == N - 1:
                    break
            count += 1
    print(count)

if __name__ == '__main__':
    main()","import sys

def main():
    N = int(input())
    A = [int(x) for x in input().split()]
    count = 0
    for i in range(N):
        if i == N - 1:
            count += 1
        elif A[i] == A[i + 1]:
            pass
        elif A[i] < A[i + 1]:
            while A[i] <= A[i + 1]:
                i += 1
                if i == N - 1:
                    break
            count += 1
        else:
            while A[i] >= A[i + 1]:
                i += 1
                if i == N - 1:
                    break
            count += 1
    print(count)

if __name__ == '__main__':
    main()"
StarCoder,codenet,Python,Java,s749244504.java,"import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.StreamSupport;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.","import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.StreamSupport;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.Function;
import java."
StarCoder,codenet,Python,Java,s485638370.java,"import java.util.Scanner;

public class s485638370 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String a = in.next();
        System.out.println(""Yes"" if (a.contains(""9"")) else ""No"");
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String a = in.next();
        System.out.println(""Yes"" if (a.contains(""9"")) else ""No"");
    }
}"
StarCoder,codenet,Python,Java,s214672212.java,"import java.util.Scanner;

public class s214672212 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] nums = new int[3];
        for (int i = 0; i < nums.length; i++) {
            nums[i] = sc.nextInt();
        }
        Arrays.sort(nums);
        System.out.println(nums[0] * 10 + nums[1] + nums[2]);
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] nums = new int[3];
        for (int i = 0; i < nums.length; i++) {
            nums[i] = sc.nextInt();
        }
        Arrays.sort(nums);
        System.out.println(nums[0] * 10 + nums[1] + nums[2]);
    }
}"
StarCoder,codenet,Python,Java,s896397037.java,"s = list(str(input()))
s.sort()
if s[0] == s[1] && s[0]!= s[2] && s[2] == s[3]:
    System.out.println(""Yes"");
else:
    System.out.println(""No"");","s = list(str(input()))
s.sort()
if s[0] == s[1] && s[0]!= s[2] && s[2] == s[3]:
    System.out.println(""Yes"");
else:
    System.out.println(""No"");"
StarCoder,codenet,Python,Java,s951065247.java,"import java.util.*;

public class s951065247 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int[] l = new int[N];
        for (int i = 0; i < N; i++) {
            l[i] = sc.nextInt();
        }
        System.out.println(dfs(0, 0, 0, 0, l, N, A, B, C));
    }

    public static int dfs(int cur, int a, int b, int c, int[] l, int N, int A, int B, int C) {
        if (cur == N) {
            return Math.abs(A - a) + Math.abs(B - b) + Math.abs(C - c) - 30;
        }
        int no_add = dfs(cur + 1, a, b, c, l, N, A, B, C);
        int add_a = dfs(cur + 1, a + l[cur], b, c, l, N, A, B, C) + 10;
        int add_b = dfs(cur + 1, a, b + l[cur], c, l, N, A, B, C) + 10;
        int add_c = dfs(cur + 1, a, b, c + l[cur], l, N, A, B, C) + 10;
        return Math.min(no_add, add_a, add_b, add_c);
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int[] l = new int[N];
        for (int i = 0; i < N; i++) {
            l[i] = sc.nextInt();
        }
        System.out.println(dfs(0, 0, 0, 0, l, N, A, B, C));
    }

    public static int dfs(int cur, int a, int b, int c, int[] l, int N, int A, int B, int C) {
        if (cur == N) {
            return Math.abs(A - a) + Math.abs(B - b) + Math.abs(C - c) - 30;
        }
        int no_add = dfs(cur + 1, a, b, c, l, N, A, B, C);
        int add_a = dfs(cur + 1, a + l[cur], b, c, l, N, A, B, C) + 10;
        int add_b = dfs(cur + 1, a, b + l[cur], c, l, N, A, B, C) + 10;
        int add_c = dfs(cur + 1, a, b, c + l[cur], l, N, A, B, C) + 10;
        return Math.min(no_add, add_a, add_b, add_c);
    }
}"
StarCoder,codenet,Python,Java,s031459110.java,"import java.util.*;

public class s031459110 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String c = sc.next();

        int num_w = c.length() - c.replace(""W"", """").length();
        int num_r = N - num_w;

        String comp = ""R"".repeat(num_r) + ""W"".repeat(num_w);
        int ans = 0;
        for (int i = 0; i < num_r; i++) {
            if (c.charAt(i)!= comp.charAt(i)) {
                ans++;
            }
        }

        ans = Math.min(num_w, num_r, ans);
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String c = sc.next();

        int num_w = c.length() - c.replace(""W"", """").length();
        int num_r = N - num_w;

        String comp = ""R"".repeat(num_r) + ""W"".repeat(num_w);
        int ans = 0;
        for (int i = 0; i < num_r; i++) {
            if (c.charAt(i)!= comp.charAt(i)) {
                ans++;
            }
        }

        ans = Math.min(num_w, num_r, ans);
        System.out.println(ans);
    }
}"
StarCoder,codenet,Python,Java,s269975433.java,"import java.util.*;

public class s269975433 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int Q = sc.nextInt();
        int[][] Q_groups = new int[Q][4];
        for (int i = 0; i < Q; i++) {
            for (int j = 0; j < 4; j++) {
                Q_groups[i][j] = sc.nextInt();
            }
        }
        int max_score = 0;
        for (int[] p : combinationsWithReplacement(IntStream.range(1, M + 1).toArray(), N)) {
            int temp_score = 0;
            for (int[] q : Q_groups) {
                if (p[q[1] - 1] - p[q[0] - 1] == q[2]) {
                    temp_score += q[3];
                }
            }
            max_score = Math.max(max_score, temp_score);
        }
        System.out.println(max_score);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int Q = sc.nextInt();
        int[][] Q_groups = new int[Q][4];
        for (int i = 0; i < Q; i++) {
            for (int j = 0; j < 4; j++) {
                Q_groups[i][j] = sc.nextInt();
            }
        }
        int max_score = 0;
        for (int[] p : combinationsWithReplacement(IntStream.range(1, M + 1).toArray(), N)) {
            int temp_score = 0;
            for (int[] q : Q_groups) {
                if (p[q[1] - 1] - p[q[0] - 1] == q[2]) {
                    temp_score += q[3];
                }
            }
            max_score = Math.max(max_score, temp_score);
        }
        System.out.println(max_score);
    }
}"
StarCoder,codenet,Python,Java,s185068963.java,"import java.util.*;

public class s185068963 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        System.out.println(""Yes"" if a + b >= c else ""No"");
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        System.out.println(""Yes"" if a + b >= c else ""No"");
    }
}"
StarCoder,codenet,Python,Java,s575946485.java,"import java.util.*;

public class s575946485 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] a = new int[5];
        for (int i = 0; i < 5; i++) {
            a[i] = sc.nextInt();
        }
        Map<Integer, Integer> dic = new HashMap<>();
        for (int i = 0; i < 5; i++) {
            if (a[i] % 10 == 0) {
                dic.put(i, 0);
            } else {
                dic.put(i, a[i] % 10);
            }
        }
        int min_num = Collections.min(dic.values());
        int a_sum = 0;
        for (int i = 0; i < 5; i++) {
            a_sum += a[i];
        }
        dic.remove(Collections.min(dic.values()));
        System.out.println(Math.abs(sum(dic.values())) + a_sum);
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] a = new int[5];
        for (int i = 0; i < 5; i++) {
            a[i] = sc.nextInt();
        }
        Map<Integer, Integer> dic = new HashMap<>();
        for (int i = 0; i < 5; i++) {
            if (a[i] % 10 == 0) {
                dic.put(i, 0);
            } else {
                dic.put(i, a[i] % 10);
            }
        }
        int min_num = Collections.min(dic.values());
        int a_sum = 0;
        for (int i = 0; i < 5; i++) {
            a_sum += a[i];
        }
        dic.remove(Collections.min(dic.values()));
        System.out.println(Math.abs(sum(dic.values())) + a_sum);
    }
}"
StarCoder,codenet,Python,Java,s142939923.java,"import java.util.Scanner;

public class s142939923 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int[] x = new int[3];
        x[0] = a + b;
        x[1] = a - b;
        x[2] = a * b;
        System.out.println(Math.max(x[0], x[1], x[2]));
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int[] x = new int[3];
        x[0] = a + b;
        x[1] = a - b;
        x[2] = a * b;
        System.out.println(Math.max(x[0], x[1], x[2]));
    }
}"
StarCoder,codenet,Python,Java,s681105182.java,"import java.util.*;
import java.io.*;

public class s681105182 {
    public static void main(String[] args) {
        new s681105182().main();
    }

    public void main() {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] a_li = new int[N];
        for (int i = 0; i < N; i++) {
            a_li[i] = sc.nextInt();
        }

        Arrays.sort(a_li);

        int n = a_li[N - 1];

        int dif = Integer.MAX_VALUE;
        int prev_dif = dif;
        for (int a : a_li) {
            dif = Math.min(Math.abs(n / 2 - a), dif);
            if (dif!= prev_dif) {
                int r = a;
                prev_dif = dif;
            }
        }

        System.out.println(n + "" "" + r);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        new Main().main();
    }

    public void main() {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] a_li = new int[N];
        for (int i = 0; i < N; i++) {
            a_li[i] = sc.nextInt();
        }

        Arrays.sort(a_li);

        int n = a_li[N - 1];

        int dif = Integer.MAX_VALUE;
        int prev_dif = dif;
        for (int a : a_li) {
            dif = Math.min(Math.abs(n / 2 - a), dif);
            if (dif!= prev_dif) {
                int r = a;
                prev_dif = dif;
            }
        }

        System.out.println(n + "" "" + r);
    }
}"
StarCoder,codenet,Python,Java,s039768540.java,"import java.util.Scanner;

public class s039768540 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        System.out.println(""ai1333"" + ""3""*(x / 100));
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        System.out.println(""ai1333"" + ""3""*(x / 100));
    }
}"
StarCoder,codenet,Python,Java,s018260659.java,"import java.util.Scanner;

public class s018260659 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int cnt = 1;
        while (cnt <= 9) {
            if (N%cnt == 0 && 1 <= N/cnt <= 9) {
                System.out.println(""Yes"");
                break;
            }
            else {
                cnt++;
            }
        }
        else {
            System.out.println(""No"");
        }
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int cnt = 1;
        while (cnt <= 9) {
            if (N%cnt == 0 && 1 <= N/cnt <= 9) {
                System.out.println(""Yes"");
                break;
            }
            else {
                cnt++;
            }
        }
        else {
            System.out.println(""No"");
        }
    }
}"
StarCoder,codenet,Python,Java,s616346400.java,"public class s616346400 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input_value = scanner.next();
        System.out.println(atc_079a(input_value));
    }

    public static String atc_079a(String input_value) {
        int n = 3;
        for (int i = 0; i < input_value.length() + 1 - n; i++) {
            for (int j = 1; j < n; j++) {
                if (input_value.charAt(i)!= input_value.charAt(i + j)) {
                    break;
                }
                if (j == n - 1) {
                    return ""Yes"";
                }
            }
        }
        return ""No"";
    }
}","public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input_value = scanner.next();
        System.out.println(atc_079a(input_value));
    }

    public static String atc_079a(String input_value) {
        int n = 3;
        for (int i = 0; i < input_value.length() + 1 - n; i++) {
            for (int j = 1; j < n; j++) {
                if (input_value.charAt(i)!= input_value.charAt(i + j)) {
                    break;
                }
                if (j == n - 1) {
                    return ""Yes"";
                }
            }
        }
        return ""No"";
    }
}"
StarCoder,codenet,Python,Java,s210889193.java,"import java.util.*;
public class s210889193 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] action = new int[N][3];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < 3; j++) {
                action[i][j] = sc.nextInt();
            }
        }
        int[][] dp = new int[N][3];
        for (int i = 0; i < 3; i++) {
            dp[0][i] = action[0][i];
        }
        for (int i = 1; i < N; i++) {
            dp[i][0] = Math.max(dp[i-1][1] + action[i][0], dp[i-1][2] + action[i][0]);
            dp[i][1] = Math.max(dp[i-1][0] + action[i][1], dp[i-1][2] + action[i][1]);
            dp[i][2] = Math.max(dp[i-1][0] + action[i][2], dp[i-1][1] + action[i][2]);
        }
        System.out.println(Math.max(dp[N-1][0], dp[N-1][1], dp[N-1][2]));
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] action = new int[N][3];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < 3; j++) {
                action[i][j] = sc.nextInt();
            }
        }
        int[][] dp = new int[N][3];
        for (int i = 0; i < 3; i++) {
            dp[0][i] = action[0][i];
        }
        for (int i = 1; i < N; i++) {
            dp[i][0] = Math.max(dp[i-1][1] + action[i][0], dp[i-1][2] + action[i][0]);
            dp[i][1] = Math.max(dp[i-1][0] + action[i][1], dp[i-1][2] + action[i][1]);
            dp[i][2] = Math.max(dp[i-1][0] + action[i][2], dp[i-1][1] + action[i][2]);
        }
        System.out.println(Math.max(dp[N-1][0], dp[N-1][1], dp[N-1][2]));
    }
}"
StarCoder,codenet,Python,Java,s170274782.java,"import java.util.*;

public class s170274782 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] A = new int[2][N];
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }
        int[] ans = new int[N];
        for (int i = 0; i < N; i++) {
            int baselis = A[0][i];
            int groundlis = A[1][i];
            int count = 0;
            count = count + sum(baselis[0:i+1]) + sum(groundlis[i:N+1]);
            ans[i] = count;
        }
        System.out.println(max(ans));
    }

    public static int sum(int[] arr) {
        int sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += arr[i];
        }
        return sum;
    }

    public static int max(int[] arr) {
        int max = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (max < arr[i]) {
                max = arr[i];
            }
        }
        return max;
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] A = new int[2][N];
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }
        int[] ans = new int[N];
        for (int i = 0; i < N; i++) {
            int baselis = A[0][i];
            int groundlis = A[1][i];
            int count = 0;
            count = count + sum(baselis[0:i+1]) + sum(groundlis[i:N+1]);
            ans[i] = count;
        }
        System.out.println(max(ans));
    }

    public static int sum(int[] arr) {
        int sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += arr[i];
        }
        return sum;
    }

    public static int max(int[] arr) {
        int max = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (max < arr[i]) {
                max = arr[i];
            }
        }
        return max;
    }
}"
StarCoder,codenet,Python,Java,s764169243.java,"import java.util.Scanner;

public class s764169243 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int[] a = new int[N];
		for (int i = 0; i < N; i++) {
			a[i] = sc.nextInt();
		}
		int[] ans = new int[N];
		for (int i = 0; i < N; i++) {
			ans[i] = i + 1;
		}
		SegmentTree left_seg = new SegmentTree(N, 0);
		for (int i = 0; i < N; i++) {
			ans[a[i] - 1] *= i + 1 - left_seg.query(0, a[i] - 1);
			left_seg.update(a[i] - 1, i + 1);
		}
		SegmentTree right_seg = new SegmentTree(N, 0);
		for (int i = N - 1; i >= 0; i--) {
			ans[a[i] - 1] *= i + 1 - right_seg.query(0, a[i] - 1);
			right_seg.update(a[i] - 1, i + 1);
		}
		int sum = 0;
		for (int i = 0; i < N; i++) {
			sum += ans[i];
		}
		System.out.println(sum);
	}
}

class SegmentTree {

	int size;
	int default;
	int[] seg;

	public SegmentTree(int size, int default) {
		this.size = 2 << (size - 1).bitLength();
		this.default = default;
		this.seg = new int[2 * this.size - 1];
	}

	public int segfunc(int x, int y) {
		return Math.max(x, y);
	}

	public void update(int k, int x) {
		k += size - 1;
		seg[k] = x;
		while (k > 0) {
			k = (k - 1) / 2;
			seg[k] = segfunc(seg[2 * k + 1], seg[2 * k + 2]);
		}
	}

	public int query(int p, int q) {
		if (q <= p) {
			return default;
		}
		p += size - 1;
		q += size - 2;
		int ret = default;
		while (q - p > 1) {
			if (p % 2 == 0) {
				ret = segfunc(ret, seg[p]);
			}
			if (q % 2 == 1) {
				ret = segfunc(ret, seg[q]);
				q--;
			}
			p /= 2;
			q = (q - 1) / 2;
		}
		ret = segfunc(segfunc(ret, seg[p]), seg[q]);
		return ret;
	}
}","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int[] a = new int[N];
		for (int i = 0; i < N; i++) {
			a[i] = sc.nextInt();
		}
		int[] ans = new int[N];
		for (int i = 0; i < N; i++) {
			ans[i] = i + 1;
		}
		SegmentTree left_seg = new SegmentTree(N, 0);
		for (int i = 0; i < N; i++) {
			ans[a[i] - 1] *= i + 1 - left_seg.query(0, a[i] - 1);
			left_seg.update(a[i] - 1, i + 1);
		}
		SegmentTree right_seg = new SegmentTree(N, 0);
		for (int i = N - 1; i >= 0; i--) {
			ans[a[i] - 1] *= i + 1 - right_seg.query(0, a[i] - 1);
			right_seg.update(a[i] - 1, i + 1);
		}
		int sum = 0;
		for (int i = 0; i < N; i++) {
			sum += ans[i];
		}
		System.out.println(sum);
	}
}

class SegmentTree {

	int size;
	int default;
	int[] seg;

	public SegmentTree(int size, int default) {
		this.size = 2 << (size - 1).bitLength();
		this.default = default;
		this.seg = new int[2 * this.size - 1];
	}

	public int segfunc(int x, int y) {
		return Math.max(x, y);
	}

	public void update(int k, int x) {
		k += size - 1;
		seg[k] = x;
		while (k > 0) {
			k = (k - 1) / 2;
			seg[k] = segfunc(seg[2 * k + 1], seg[2 * k + 2]);
		}
	}

	public int query(int p, int q) {
		if (q <= p) {
			return default;
		}
		p += size - 1;
		q += size - 2;
		int ret = default;
		while (q - p > 1) {
			if (p % 2 == 0) {
				ret = segfunc(ret, seg[p]);
			}
			if (q % 2 == 1) {
				ret = segfunc(ret, seg[q]);
				q--;
			}
			p /= 2;
			q = (q - 1) / 2;
		}
		ret = segfunc(segfunc(ret, seg[p]), seg[q]);
		return ret;
	}
}"
StarCoder,codenet,Python,Java,s028530838.java,"import java.util.Scanner;

public class s028530838 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String x = sc.next();
        if (x.islower()) {
            System.out.println(""a"");
        } else {
            System.out.println(""A"");
        }
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String x = sc.next();
        if (x.islower()) {
            System.out.println(""a"");
        } else {
            System.out.println(""A"");
        }
    }
}"
StarCoder,codenet,Python,Java,s225615697.java,"import java.util.*;

public class s225615697 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int m1 = (int) Math.floor(Arrays.stream(a).map(x -> x * ((-1) ^ i)).sum() / 2);

        String result = String.valueOf(m1);

        int[] m = new int[n];
        m[0] = m1;
        for (int i = 1; i < n; i++) {
            m[i] = a[i - 1] - m[i - 1];
        }

        System.out.println(String.join("" "", Arrays.stream(m).mapToObj(x -> String.valueOf(x * 2)).toArray(String[]::new)));
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int m1 = (int) Math.floor(Arrays.stream(a).map(x -> x * ((-1) ^ i)).sum() / 2);

        String result = String.valueOf(m1);

        int[] m = new int[n];
        m[0] = m1;
        for (int i = 1; i < n; i++) {
            m[i] = a[i - 1] - m[i - 1];
        }

        System.out.println(String.join("" "", Arrays.stream(m).mapToObj(x -> String.valueOf(x * 2)).toArray(String[]::new)));
    }
}"
StarCoder,codenet,Python,Java,s704354119.java,"import java.util.*;
public class s704354119 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] l = new String[n];
        int max = -1e9,min = 1e9,sum = 0;
        for(int i=0;i<n;i++)
        {
            l[i] = sc.next();
            sum+=Integer.parseInt(l[i]);
            if(max<Integer.parseInt(l[i]))
                max = Integer.parseInt(l[i]);
            if(min>Integer.parseInt(l[i]))
                min = Integer.parseInt(l[i]);
        }
        System.out.println(min+"" ""+max+"" ""+sum);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] l = new String[n];
        int max = -1e9,min = 1e9,sum = 0;
        for(int i=0;i<n;i++)
        {
            l[i] = sc.next();
            sum+=Integer.parseInt(l[i]);
            if(max<Integer.parseInt(l[i]))
                max = Integer.parseInt(l[i]);
            if(min>Integer.parseInt(l[i]))
                min = Integer.parseInt(l[i]);
        }
        System.out.println(min+"" ""+max+"" ""+sum);
    }
}"
StarCoder,codenet,Python,Java,s951169509.java,"import java.util.Scanner;

public class s951169509 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        String[][] G = new String[H + 2][W + 2];
        for (int i = 0; i < H + 2; i++) {
            G[i][0] = G[i][W + 1] = '#';
            for (int j = 1; j < W + 1; j++) {
                G[i][j] = sc.next();
            }
        }
        int ans = 0;
        for (int sx = 0; sx < W + 2; sx++) {
            for (int sy = 0; sy < H + 2; sy++) {
                if (G[sy][sx] == '.') {
                    int[][] dist = new int[H + 2][W + 2];
                    int[][] visited = new int[H + 2][W + 2];
                    for (int i = 0; i < H + 2; i++) {
                        for (int j = 0; j < W + 2; j++) {
                            dist[i][j] = -1;
                            visited[i][j] = -1;
                        }
                    }
                    dist[sy][sx] = 0;
                    visited[sy][sx] = 1;
                    Queue<int[]> q = new LinkedList<>();
                    q.add(new int[]{sx, sy});
                    while (!q.isEmpty()) {
                        int[] cur = q.poll();
                        int x = cur[0], y = cur[1];
                        if (G[y][x + 1] == '.' && visited[y][x + 1] == -1) {
                            q.add(new int[]{x + 1, y});
                            dist[y][x + 1] = dist[y][x] + 1;
                            visited[y][x + 1] = 1;
                        }
                        if (G[y][x - 1] == '.' && visited[y][x - 1] == -1) {
                            q.add(new int[]{x - 1, y});
                            dist[y][x - 1] = dist[y][x] + 1;
                            visited[y][x - 1] = 1;
                        }
                        if (G[y + 1][x] == '.' && visited[y + 1][x] == -1) {
                            q.add(new int[]{x, y + 1});
                            dist[y + 1][x] = dist[y][x] + 1;
                            visited[y + 1][x] = 1;
                        }
                        if (G[y - 1][x] == '.' && visited[y - 1][x] == -1) {
                            q.add(new int[]{x, y - 1});
                            dist[y - 1][x] = dist[y][x] + 1;
                            visited[y - 1][x] = 1;
                        }
                    }
                    for (int i = 0; i < W + 2; i++) {
                        for (int j = 0; j < H + 2; j++) {
                            ans = Math.max(ans, dist[j][i]);
                        }
                    }
                }
            }
        }
        System.out.println(ans);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        String[][] G = new String[H + 2][W + 2];
        for (int i = 0; i < H + 2; i++) {
            G[i][0] = G[i][W + 1] = '#';
            for (int j = 1; j < W + 1; j++) {
                G[i][j] = sc.next();
            }
        }
        int ans = 0;
        for (int sx = 0; sx < W + 2; sx++) {
            for (int sy = 0; sy < H + 2; sy++) {
                if (G[sy][sx] == '.') {
                    int[][] dist = new int[H + 2][W + 2];
                    int[][] visited = new int[H + 2][W + 2];
                    for (int i = 0; i < H + 2; i++) {
                        for (int j = 0; j < W + 2; j++) {
                            dist[i][j] = -1;
                            visited[i][j] = -1;
                        }
                    }
                    dist[sy][sx] = 0;
                    visited[sy][sx] = 1;
                    Queue<int[]> q = new LinkedList<>();
                    q.add(new int[]{sx, sy});
                    while (!q.isEmpty()) {
                        int[] cur = q.poll();
                        int x = cur[0], y = cur[1];
                        if (G[y][x + 1] == '.' && visited[y][x + 1] == -1) {
                            q.add(new int[]{x + 1, y});
                            dist[y][x + 1] = dist[y][x] + 1;
                            visited[y][x + 1] = 1;
                        }
                        if (G[y][x - 1] == '.' && visited[y][x - 1] == -1) {
                            q.add(new int[]{x - 1, y});
                            dist[y][x - 1] = dist[y][x] + 1;
                            visited[y][x - 1] = 1;
                        }
                        if (G[y + 1][x] == '.' && visited[y + 1][x] == -1) {
                            q.add(new int[]{x, y + 1});
                            dist[y + 1][x] = dist[y][x] + 1;
                            visited[y + 1][x] = 1;
                        }
                        if (G[y - 1][x] == '.' && visited[y - 1][x] == -1) {
                            q.add(new int[]{x, y - 1});
                            dist[y - 1][x] = dist[y][x] + 1;
                            visited[y - 1][x] = 1;
                        }
                    }
                    for (int i = 0; i < W + 2; i++) {
                        for (int j = 0; j < H + 2; j++) {
                            ans = Math.max(ans, dist[j][i]);
                        }
                    }
                }
            }
        }
        System.out.println(ans);
    }
}"
StarCoder,codenet,Python,Java,s747093551.java,"import java.util.*;
public class s747093551 {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int N=sc.nextInt();
        int M=sc.nextInt();
        int X=sc.nextInt();
        int Y=sc.nextInt();
        int[] x=new int[N];
        int[] y=new int[M];
        for(int i=0;i<N;i++)
            x[i]=sc.nextInt();
        for(int i=0;i<M;i++)
            y[i]=sc.nextInt();
        System.out.println(""No War"" if (max(max(x),X)<min(min(y),Y)) else ""War"");
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int N=sc.nextInt();
        int M=sc.nextInt();
        int X=sc.nextInt();
        int Y=sc.nextInt();
        int[] x=new int[N];
        int[] y=new int[M];
        for(int i=0;i<N;i++)
            x[i]=sc.nextInt();
        for(int i=0;i<M;i++)
            y[i]=sc.nextInt();
        System.out.println(""No War"" if (max(max(x),X)<min(min(y),Y)) else ""War"");
    }
}"
StarCoder,codenet,Python,Java,s826716211.java,"import java.util.*;

public class s826716211 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S_d = sc.next();
        String T = sc.next();

        int end = S_d.length() - 1;
        int first = end - T.length() + 1;
        while (first >= 0) {
            int t_i = 0;
            for (int s_i = first; s_i <= end; s_i++) {
                if (T.charAt(t_i)!= S_d.charAt(s_i) && S_d.charAt(s_i)!= '?') {
                    break;
                }
                t_i++;
            } else {
                break;
            }

            first--;
            end--;
        } else {
            System.out.println(""UNRESTORABLE"");
            return;
        }

        StringBuilder ans = new StringBuilder();
        for (int i = first; i <= end; i++) {
            ans.append(T.charAt(i - first));
        }
        ans.replace(ans.indexOf(""?""), ans.indexOf(""?"") + 1, ""a"");
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S_d = sc.next();
        String T = sc.next();

        int end = S_d.length() - 1;
        int first = end - T.length() + 1;
        while (first >= 0) {
            int t_i = 0;
            for (int s_i = first; s_i <= end; s_i++) {
                if (T.charAt(t_i)!= S_d.charAt(s_i) && S_d.charAt(s_i)!= '?') {
                    break;
                }
                t_i++;
            } else {
                break;
            }

            first--;
            end--;
        } else {
            System.out.println(""UNRESTORABLE"");
            return;
        }

        StringBuilder ans = new StringBuilder();
        for (int i = first; i <= end; i++) {
            ans.append(T.charAt(i - first));
        }
        ans.replace(ans.indexOf(""?""), ans.indexOf(""?"") + 1, ""a"");
        System.out.println(ans);
    }
}"
StarCoder,codenet,Python,Java,s103029464.java,"import java.util.Scanner;

public class s103029464 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        int[] B = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        for (int i = N - 1; i >= 0; i--) {
            int tmp_sum = 0;
            for (int j = (i + 1) * 2 - 1; j < N; j += i + 1) {
                tmp_sum += B[j];
                tmp_sum %= 2;
            }
            B[i] = tmp_sum ^ A[i];
        }
        System.out.println(Arrays.stream(B).sum());
        System.out.println(Arrays.stream(B).filter(b -> b == 1).mapToObj(i -> i + 1).collect(Collectors.toList()));
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        int[] B = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        for (int i = N - 1; i >= 0; i--) {
            int tmp_sum = 0;
            for (int j = (i + 1) * 2 - 1; j < N; j += i + 1) {
                tmp_sum += B[j];
                tmp_sum %= 2;
            }
            B[i] = tmp_sum ^ A[i];
        }
        System.out.println(Arrays.stream(B).sum());
        System.out.println(Arrays.stream(B).filter(b -> b == 1).mapToObj(i -> i + 1).collect(Collectors.toList()));
    }
}"
StarCoder,codenet,Python,Java,s259116349.java,"import java.util.*;
import java.lang.*;
import java.io.*;

public class s259116349 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] primes = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47};
        int[][] divs = new int[101][primes.length];
        for (int i = 1; i <= 100; i++) {
            for (int j = 0; j < primes.length; j++) {
                int p = primes[j];
                divs[i][j] = 0;
                while (i / p == i / p) {
                    i = i / p;
                    divs[i][j]++;
                }
            }
        }
        int[] divsum = new int[primes.length];
        for (int i = 1; i <= N; i++) {
            for (int j = 0; j < primes.length; j++) {
                divsum[j] += divs[i][j];
            }
        }
        int ans = 0;
        // >=74
        ans += num(75);
        // >=14 & 13~4
        ans += num(15)*(num(5)-1);
        // >=24 & 23~2
        ans += num(25)*(num(3)-1);
        // >=4,>=4 & >=2
        ans += num(5) * (num(5)-1) * (num(3)-2) // 2 
        System.out.println(ans);
    }

    public static int num(int n) {
        int cnt = 0;
        for (int i = 0; i < primes.length; i++) {
            if (divsum[i] >= n - 1) {
                cnt++;
            }
        }
        return cnt;
    }

}","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] primes = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47};
        int[][] divs = new int[101][primes.length];
        for (int i = 1; i <= 100; i++) {
            for (int j = 0; j < primes.length; j++) {
                int p = primes[j];
                divs[i][j] = 0;
                while (i / p == i / p) {
                    i = i / p;
                    divs[i][j]++;
                }
            }
        }
        int[] divsum = new int[primes.length];
        for (int i = 1; i <= N; i++) {
            for (int j = 0; j < primes.length; j++) {
                divsum[j] += divs[i][j];
            }
        }
        int ans = 0;
        // >=74
        ans += num(75);
        // >=14 & 13~4
        ans += num(15)*(num(5)-1);
        // >=24 & 23~2
        ans += num(25)*(num(3)-1);
        // >=4,>=4 & >=2
        ans += num(5) * (num(5)-1) * (num(3)-2) // 2 
        System.out.println(ans);
    }

    public static int num(int n) {
        int cnt = 0;
        for (int i = 0; i < primes.length; i++) {
            if (divsum[i] >= n - 1) {
                cnt++;
            }
        }
        return cnt;
    }

}"
StarCoder,codenet,Python,Java,s609392609.java,"import java.util.*;
public class s609392609 {
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int t[]=new int[n];
        for(int i=0;i<n;i++)
        t[i]=sc.nextInt();
        int m=sc.nextInt();
        for(int i=0;i<m;i++)
        {
            int p=sc.nextInt();
            int x=sc.nextInt();
            int s=0;
            for(int j=0;j<n;j++)
            {
                if(j==p-1)
                s+=x;
                else
                s+=t[j];
            }
            System.out.println(s);
        }
    }
}","import java.util.*;
public class Main {
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int t[]=new int[n];
        for(int i=0;i<n;i++)
        t[i]=sc.nextInt();
        int m=sc.nextInt();
        for(int i=0;i<m;i++)
        {
            int p=sc.nextInt();
            int x=sc.nextInt();
            int s=0;
            for(int j=0;j<n;j++)
            {
                if(j==p-1)
                s+=x;
                else
                s+=t[j];
            }
            System.out.println(s);
        }
    }
}"
StarCoder,codenet,Python,Java,s817205687.java,"import java.util.stream.IntStream;

public class s817205687 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int[] A = IntStream.range(0, N).map(i -> sc.nextInt()).toArray();

        // 最初、Aの要素は全て偶数。2で割ったものに置き換え
        A = Arrays.stream(A).map(a -> a / 2).toArray();

        // 全ての要素について、２で割れる回数が同じでないと題意は満たせない
        int countDiv2 = null;
        for (int a : A) {
            int cnt = 0;
            while (a % 2 == 0) {
                a /= 2;
                cnt++;
            }
            // 1個目は無条件で保存
            if (countDiv2 == null) {
                countDiv2 = cnt;
            }
            // 2個目からチェック
            else if (cnt!= countDiv2) {
                System.out.println(0);
                return;
            }
        }

        // my_lcm = Aの全要素の最小公倍数。　この奇数倍が題意を満たす。
        // my_lcmがMを超えていたら1つも作れない
        int myLcm = IntStream.of(A).reduce(1, (a, b) -> a * b / Math.gcd(a, b));
        if (myLcm > M) {
            System.out.println(0);
            return;
        }

        int tmp = M / myLcm;
        // my_lcmの1,2,...M倍まで使えるが、偶数は使えない
        // tmp=1or2なら1個, 3or4なら2個, 5or6なら3個,...
        int ans = (tmp + 1) / 2;
        System.out.println(ans);
    }
}","import java.util.stream.IntStream;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int[] A = IntStream.range(0, N).map(i -> sc.nextInt()).toArray();

        // 最初、Aの要素は全て偶数。2で割ったものに置き換え
        A = Arrays.stream(A).map(a -> a / 2).toArray();

        // 全ての要素について、２で割れる回数が同じでないと題意は満たせない
        int countDiv2 = null;
        for (int a : A) {
            int cnt = 0;
            while (a % 2 == 0) {
                a /= 2;
                cnt++;
            }
            // 1個目は無条件で保存
            if (countDiv2 == null) {
                countDiv2 = cnt;
            }
            // 2個目からチェック
            else if (cnt!= countDiv2) {
                System.out.println(0);
                return;
            }
        }

        // my_lcm = Aの全要素の最小公倍数。　この奇数倍が題意を満たす。
        // my_lcmがMを超えていたら1つも作れない
        int myLcm = IntStream.of(A).reduce(1, (a, b) -> a * b / Math.gcd(a, b));
        if (myLcm > M) {
            System.out.println(0);
            return;
        }

        int tmp = M / myLcm;
        // my_lcmの1,2,...M倍まで使えるが、偶数は使えない
        // tmp=1or2なら1個, 3or4なら2個, 5or6なら3個,...
        int ans = (tmp + 1) / 2;
        System.out.println(ans);
    }
}"
StarCoder,codenet,Python,Java,s539244923.java,"import java.util.*;
public class s539244923 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        System.out.println(n+k if k%n ==0 else k-n);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        System.out.println(n+k if k%n ==0 else k-n);
    }
}"
StarCoder,codenet,Python,Java,s197514717.java,"import java.util.*;
public class s197514717 {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int A=sc.nextInt();
        int B=sc.nextInt();
        int C=sc.nextInt();
        System.out.println(Math.max(10*A+B+C,10*B+C+A,10*C+A+B));
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int A=sc.nextInt();
        int B=sc.nextInt();
        int C=sc.nextInt();
        System.out.println(Math.max(10*A+B+C,10*B+C+A,10*C+A+B));
    }
}"
StarCoder,codenet,Python,Java,s676839884.java,"s = input();
t = input();

if(t.substring(0,t.length()-1).equals(s)){
  System.out.println(""Yes"");
}else{
  System.out.println(""No"");
}","s = input();
t = input();

if(t.substring(0,t.length()-1).equals(s)){
  System.out.println(""Yes"");
}else{
  System.out.println(""No"");
}"
StarCoder,codenet,Python,Java,s357377130.java,"A,B,K = map(int,input().split())
if A+K-1>=B-K+1:
    while A<=B:
        System.out.println(A);
        A+=1
else:
    i=0
    while i<=K-1:
        System.out.println(A+i);
        i+=1
    while B-K+1<=B:
        System.out.println(B-K+1);
        K-=1","A,B,K = map(int,input().split())
if A+K-1>=B-K+1:
    while A<=B:
        System.out.println(A);
        A+=1
else:
    i=0
    while i<=K-1:
        System.out.println(A+i);
        i+=1
    while B-K+1<=B:
        System.out.println(B-K+1);
        K-=1"
StarCoder,codenet,Python,Java,s344468705.java,"import java.util.*;
import java.io.*;

public class s344468705 {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int n = Integer.parseInt(br.readLine());
        for (int i = 0; i < n; i++) {
            int num = Integer.parseInt(br.readLine());
            num = -num;
            if (num >= dp[dp.length - 1]) {
                dp[dp.length] = num;
            } else {
                int idx = Arrays.binarySearch(dp, num);
                if (idx < 0) {
                    idx = -idx - 1;
                }
                dp[idx] = num;
            }
        }
        bw.write(String.valueOf(dp.length - 1) + ""\n"");
        bw.flush();
        bw.close();
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int n = Integer.parseInt(br.readLine());
        for (int i = 0; i < n; i++) {
            int num = Integer.parseInt(br.readLine());
            num = -num;
            if (num >= dp[dp.length - 1]) {
                dp[dp.length] = num;
            } else {
                int idx = Arrays.binarySearch(dp, num);
                if (idx < 0) {
                    idx = -idx - 1;
                }
                dp[idx] = num;
            }
        }
        bw.write(String.valueOf(dp.length - 1) + ""\n"");
        bw.flush();
        bw.close();
    }
}"
StarCoder,codenet,Python,Java,s534639230.java,"import java.util.*;

public class s534639230 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] D = new int[N];
        for (int i = 0; i < N; i++) {
            D[i] = sc.nextInt();
        }

        int mod = 998244353;

        if (D[0]!= 0) {
            System.out.println(0);
            return;
        }

        Map<Integer, Integer> cnt = new HashMap<>();
        for (int i = 0; i < N; i++) {
            cnt.put(D[i], cnt.getOrDefault(D[i], 0) + 1);
        }

        if (cnt.getOrDefault(0, 0) > 1) {
            System.out.println(0);
            return;
        }

        long res = 1;

        for (int i = 1; i <= Math.max(D); i++) {
            if (cnt.getOrDefault(i-1, 0) == 1) {
                continue;
            }
            res *= cnt.get(i-1).intValue()**(cnt.get(i).intValue()) % mod;
            res %= mod;
        }

        System.out.println(res);
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] D = new int[N];
        for (int i = 0; i < N; i++) {
            D[i] = sc.nextInt();
        }

        int mod = 998244353;

        if (D[0]!= 0) {
            System.out.println(0);
            return;
        }

        Map<Integer, Integer> cnt = new HashMap<>();
        for (int i = 0; i < N; i++) {
            cnt.put(D[i], cnt.getOrDefault(D[i], 0) + 1);
        }

        if (cnt.getOrDefault(0, 0) > 1) {
            System.out.println(0);
            return;
        }

        long res = 1;

        for (int i = 1; i <= Math.max(D); i++) {
            if (cnt.getOrDefault(i-1, 0) == 1) {
                continue;
            }
            res *= cnt.get(i-1).intValue()**(cnt.get(i).intValue()) % mod;
            res %= mod;
        }

        System.out.println(res);
    }
}"
StarCoder,codenet,Python,Java,s043545989.java,"import java.util.*;

public class s043545989 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < n; i++) {
            if (map.containsKey(a[i])) {
                map.put(a[i], map.get(a[i]) + 1);
            } else {
                map.put(a[i], 1);
            }
        }
        if (map.size() == 3) {
            int[] key = map.keySet().toArray(new int[3]);
            int[] val = map.values().toArray(new int[3]);
            if (key[0] == key[1] ^ key[2] && val[0] == val[1] && val[1] == val[2]) {
                System.out.println(""Yes"");
            } else {
                System.out.println(""No"");
            }
        } else if (map.size() == 2) {
            int[] key = map.keySet().toArray(new int[2]);
            int[] val = map.values().toArray(new int[2]);
            if (key[0] == 0 && (val[0] == 2 * val[1] || val[1] == 2 * val[0])) {
                System.out.println(""Yes"");
            } else {
                System.out.println(""No"");
            }
        } else if (map.size() == 1) {
            if (map.containsKey(0)) {
                System.out.println(""Yes"");
            } else {
                System.out.println(""No"");
            }
        } else {
            System.out.println(""No"");
        }
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < n; i++) {
            if (map.containsKey(a[i])) {
                map.put(a[i], map.get(a[i]) + 1);
            } else {
                map.put(a[i], 1);
            }
        }
        if (map.size() == 3) {
            int[] key = map.keySet().toArray(new int[3]);
            int[] val = map.values().toArray(new int[3]);
            if (key[0] == key[1] ^ key[2] && val[0] == val[1] && val[1] == val[2]) {
                System.out.println(""Yes"");
            } else {
                System.out.println(""No"");
            }
        } else if (map.size() == 2) {
            int[] key = map.keySet().toArray(new int[2]);
            int[] val = map.values().toArray(new int[2]);
            if (key[0] == 0 && (val[0] == 2 * val[1] || val[1] == 2 * val[0])) {
                System.out.println(""Yes"");
            } else {
                System.out.println(""No"");
            }
        } else if (map.size() == 1) {
            if (map.containsKey(0)) {
                System.out.println(""Yes"");
            } else {
                System.out.println(""No"");
            }
        } else {
            System.out.println(""No"");
        }
    }
}"
StarCoder,codenet,Python,Java,s124725275.java,"import java.util.*;
import java.io.*;
import java.math.*;

public class s124725275 {
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String[] HW = br.readLine().split("" "");
        int H = Integer.parseInt(HW[0]);
        int W = Integer.parseInt(HW[1]);
        String[] S = br.readLine().split("" "");
        int si = Integer.parseInt(S[0]);
        int sj = Integer.parseInt(S[1]);
        String[] T = br.readLine().split("" "");
        int ti = Integer.parseInt(T[0]);
        int tj = Integer.parseInt(T[1]);
        int[][] S = new int[H][W];
        int[][] D = new int[H][W];
        for (int i = 0; i < H; i++) {
            String[] S_i = br.readLine().split("" "");
            for (int j = 0; j < W; j++) {
                S[i][j] = Integer.parseInt(S_i[j]);
            }
        }
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                D[i][j] = -1;
            }
        }
        Queue<int[]> que = new LinkedList<>();
        que.add(new int[] { 0, si, sj });
        while (!que.isEmpty()) {
            int[] cij = que.poll();
            int c = cij[0];
            int i = cij[1];
            int j = cij[2];
            if (D[i][j]!= -1) {
                continue;
            }
            D[i][j] = c;
            for (int di = -2; di <= 2; di++) {
                for (int dj = -2; dj <= 2; dj++) {
                    int ni = i + di;
                    int nj = j + dj;
                    if (ni < 0 || ni >= H || nj < 0 || nj >= W || ni == nj || D[ni][nj]!= -1 || S[ni][nj] == 1) {
                        continue;
                    }
                    if (di == 0 && Math.abs(dj) == 1) {
                        que.add(new int[] { c, ni, nj });
                    } else {
                        que.add(new int[] { c + 1, ni, nj });
                    }
                }
            }
        }
        bw.write(D[ti][tj] + """");
        bw.flush();
        bw.close();
    }
}","import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String[] HW = br.readLine().split("" "");
        int H = Integer.parseInt(HW[0]);
        int W = Integer.parseInt(HW[1]);
        String[] S = br.readLine().split("" "");
        int si = Integer.parseInt(S[0]);
        int sj = Integer.parseInt(S[1]);
        String[] T = br.readLine().split("" "");
        int ti = Integer.parseInt(T[0]);
        int tj = Integer.parseInt(T[1]);
        int[][] S = new int[H][W];
        int[][] D = new int[H][W];
        for (int i = 0; i < H; i++) {
            String[] S_i = br.readLine().split("" "");
            for (int j = 0; j < W; j++) {
                S[i][j] = Integer.parseInt(S_i[j]);
            }
        }
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                D[i][j] = -1;
            }
        }
        Queue<int[]> que = new LinkedList<>();
        que.add(new int[] { 0, si, sj });
        while (!que.isEmpty()) {
            int[] cij = que.poll();
            int c = cij[0];
            int i = cij[1];
            int j = cij[2];
            if (D[i][j]!= -1) {
                continue;
            }
            D[i][j] = c;
            for (int di = -2; di <= 2; di++) {
                for (int dj = -2; dj <= 2; dj++) {
                    int ni = i + di;
                    int nj = j + dj;
                    if (ni < 0 || ni >= H || nj < 0 || nj >= W || ni == nj || D[ni][nj]!= -1 || S[ni][nj] == 1) {
                        continue;
                    }
                    if (di == 0 && Math.abs(dj) == 1) {
                        que.add(new int[] { c, ni, nj });
                    } else {
                        que.add(new int[] { c + 1, ni, nj });
                    }
                }
            }
        }
        bw.write(D[ti][tj] + """");
        bw.flush();
        bw.close();
    }
}

# 解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説

解説"
StarCoder,codenet,Python,Java,s880494034.java,"import java.util.*;

public class s880494034 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] XS = new int[N];
        for (int i = 0; i < N; i++) {
            XS[i] = sc.nextInt();
        }
        int m = 9999999999;
        for (int i = 1; i <= 100; i++) {
            int c = 0;
            for (int x : XS) {
                c += (x - i) * (x - i);
            }
            if (m > c) {
                m = c;
            }
        }
        System.out.println(m);
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] XS = new int[N];
        for (int i = 0; i < N; i++) {
            XS[i] = sc.nextInt();
        }
        int m = 9999999999;
        for (int i = 1; i <= 100; i++) {
            int c = 0;
            for (int x : XS) {
                c += (x - i) * (x - i);
            }
            if (m > c) {
                m = c;
            }
        }
        System.out.println(m);
    }
}"
StarCoder,codenet,Python,Java,s975943078.java,"import java.util.*;

public class s975943078 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = (sc.nextInt() % K) - 1;
        }
        int[] sumA = new int[N + 1];
        int count = 0;
        Map<Integer, List<Integer>> modK = new HashMap<>();
        modK.put(0, new ArrayList<>());
        for (int i = 0; i < N; i++) {
            sumA[i + 1] = (sumA[i] + A[i]) % K;
            if (!modK.containsKey(sumA[i + 1])) {
                modK.put(sumA[i + 1], new ArrayList<>());
            }
            modK.get(sumA[i + 1]).add(i + 1);
        }
        for (int key : modK.keySet()) {
            List<Integer> list = modK.get(key);
            int lenK = list.size();
            for (int i = 0; i < lenK; i++) {
                count += Collections.frequency(list, list.get(i) + K) - i - 1;
            }
        }
        System.out.println(count);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = (sc.nextInt() % K) - 1;
        }
        int[] sumA = new int[N + 1];
        int count = 0;
        Map<Integer, List<Integer>> modK = new HashMap<>();
        modK.put(0, new ArrayList<>());
        for (int i = 0; i < N; i++) {
            sumA[i + 1] = (sumA[i] + A[i]) % K;
            if (!modK.containsKey(sumA[i + 1])) {
                modK.put(sumA[i + 1], new ArrayList<>());
            }
            modK.get(sumA[i + 1]).add(i + 1);
        }
        for (int key : modK.keySet()) {
            List<Integer> list = modK.get(key);
            int lenK = list.size();
            for (int i = 0; i < lenK; i++) {
                count += Collections.frequency(list, list.get(i) + K) - i - 1;
            }
        }
        System.out.println(count);
    }
}

Time Complexity: O(N)
Space Complexity: O(N)"
StarCoder,codenet,Python,Java,s760938927.java,"import java.util.*;
public class s760938927 {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int h=sc.nextInt();
        int w=sc.nextInt();
        int ka=sc.nextInt();
        String[][] mat=new String[h][w];
        for(int i=0;i<h;i++)
            mat[i]=sc.next().split("""");
        int ans=0;
        for(int i=0;i<1<<h+w;i++){
            String rs=Integer.toBinaryString(i).substring(0,h);
            String cs=Integer.toBinaryString(i).substring(h);
            int ct=0;
            for(int l=0;l<h;l++)
                for(int k=0;k<w;k++)
                    if(mat[l][k]=='#' && rs.charAt(l)=='0' && cs.charAt(k)=='0')
                        ct++;
            if(ct==ka) ans++;
        }
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int h=sc.nextInt();
        int w=sc.nextInt();
        int ka=sc.nextInt();
        String[][] mat=new String[h][w];
        for(int i=0;i<h;i++)
            mat[i]=sc.next().split("""");
        int ans=0;
        for(int i=0;i<1<<h+w;i++){
            String rs=Integer.toBinaryString(i).substring(0,h);
            String cs=Integer.toBinaryString(i).substring(h);
            int ct=0;
            for(int l=0;l<h;l++)
                for(int k=0;k<w;k++)
                    if(mat[l][k]=='#' && rs.charAt(l)=='0' && cs.charAt(k)=='0')
                        ct++;
            if(ct==ka) ans++;
        }
        System.out.println(ans);
    }
}"
StarCoder,codenet,Python,Java,s060251920.java,"public class s060251920 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        System.out.println(a*b);
    }
}","public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        System.out.println(a*b);
    }
}"
StarCoder,codenet,Python,Java,s205112814.java,"import java.util.*;

public class s205112814 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] gate_cond = new int[m][2];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < 2; j++) {
                gate_cond[i][j] = sc.nextInt();
            }
        }
        int max_under_th = 0;
        int min_upper_th = 1000000000;
        for (int i = 0; i < m; i++) {
            if (gate_cond[i][0] > max_under_th) {
                max_under_th = gate_cond[i][0];
            }
            if (gate_cond[i][1] < min_upper_th) {
                min_upper_th = gate_cond[i][1];
            }
        }
        if (min_upper_th - max_under_th >= 0) {
            System.out.println(min_upper_th - max_under_th + 1);
        } else {
            System.out.println(0);
        }
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] gate_cond = new int[m][2];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < 2; j++) {
                gate_cond[i][j] = sc.nextInt();
            }
        }
        int max_under_th = 0;
        int min_upper_th = 1000000000;
        for (int i = 0; i < m; i++) {
            if (gate_cond[i][0] > max_under_th) {
                max_under_th = gate_cond[i][0];
            }
            if (gate_cond[i][1] < min_upper_th) {
                min_upper_th = gate_cond[i][1];
            }
        }
        if (min_upper_th - max_under_th >= 0) {
            System.out.println(min_upper_th - max_under_th + 1);
        } else {
            System.out.println(0);
        }
    }
}"
StarCoder,codenet,Python,Java,s763208424.java,"import java.util.*;
import java.lang.*;
import java.io.*;
public class s763208424 {
    public static void main (String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int m = scan.nextInt();
        PriorityQueue<Integer> pq = new PriorityQueue<Integer>(Collections.reverseOrder());
        for(int i=0;i<n;i++)
            pq.add(-scan.nextInt());
        for(int i=0;i<m;i++)
            pq.add(-pq.poll()/2);
        System.out.println(-pq.stream().mapToInt(x -> x).sum());
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;
class GFG {
    public static void main (String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int m = scan.nextInt();
        PriorityQueue<Integer> pq = new PriorityQueue<Integer>(Collections.reverseOrder());
        for(int i=0;i<n;i++)
            pq.add(-scan.nextInt());
        for(int i=0;i<m;i++)
            pq.add(-pq.poll()/2);
        System.out.println(-pq.stream().mapToInt(x -> x).sum());
    }
}"
StarCoder,codenet,Python,Java,s952264435.java,"import java.util.*;

public class s952264435 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        int sum = 0;
        for (int i = 0; i < N; i++) {
            sum += A[i];
        }
        System.out.println(N - sum >= 0? N - sum : -1);
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        int sum = 0;
        for (int i = 0; i < N; i++) {
            sum += A[i];
        }
        System.out.println(N - sum >= 0? N - sum : -1);
    }
}"
StarCoder,codenet,Python,Java,s828550015.java,"import java.util.*;
public class s828550015 {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int x=sc.nextInt();
        int y=sc.nextInt();
        int a=sc.nextInt();
        int b=sc.nextInt();
        int c=sc.nextInt();
        int[] p=new int[x];
        int[] q=new int[y];
        int[] r=new int[c];
        for(int i=0;i<x;i++)
            p[i]=sc.nextInt();
        for(int i=0;i<y;i++)
            q[i]=sc.nextInt();
        for(int i=0;i<c;i++)
            r[i]=sc.nextInt();
        Arrays.sort(p);
        Arrays.sort(q);
        Arrays.sort(r);
        int[] pq=new int[x+y];
        for(int i=0;i<x+y;i++)
            pq[i]=p[i%x]+q[i%y];
        for(int i=0;i<a+b+c;i++)
            if(pq[i]<r[i])
                pq[i]=r[i];
        System.out.println(Arrays.stream(pq).sum());
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int x=sc.nextInt();
        int y=sc.nextInt();
        int a=sc.nextInt();
        int b=sc.nextInt();
        int c=sc.nextInt();
        int[] p=new int[x];
        int[] q=new int[y];
        int[] r=new int[c];
        for(int i=0;i<x;i++)
            p[i]=sc.nextInt();
        for(int i=0;i<y;i++)
            q[i]=sc.nextInt();
        for(int i=0;i<c;i++)
            r[i]=sc.nextInt();
        Arrays.sort(p);
        Arrays.sort(q);
        Arrays.sort(r);
        int[] pq=new int[x+y];
        for(int i=0;i<x+y;i++)
            pq[i]=p[i%x]+q[i%y];
        for(int i=0;i<a+b+c;i++)
            if(pq[i]<r[i])
                pq[i]=r[i];
        System.out.println(Arrays.stream(pq).sum());
    }
}"
StarCoder,codenet,Python,Java,s016605598.java,"import java.util.PriorityQueue;
import java.util.Scanner;

public class s016605598 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int q = sc.nextInt();
        int cnt = 0;
        int left_sum = 0;
        int right_sum = 0;
        PriorityQueue<Integer> left = new PriorityQueue<>();
        PriorityQueue<Integer> right = new PriorityQueue<>((a, b) -> b - a);
        for (int i = 0; i < q; i++) {
            int[] t = new int[3];
            t[0] = sc.nextInt();
            t[1] = sc.nextInt();
            t[2] = sc.nextInt();
            if (t[0] == 1) {
                // update
                int a = t[1];
                int b = t[2];
                cnt++;
                if (cnt % 2 == 0) {
                    if (right.isEmpty()) {
                        left.add(-a);
                        left_sum += a;
                        continue;
                    }
                    int c = right.poll();
                    right_sum -= c;
                    if (a <= c) {
                        left.add(-a);
                        right.add(c);
                        left_sum += a;
                        right_sum += c;
                    } else {
                        left.add(-c);
                        right.add(a);
                        left_sum += c;
                        right_sum += a;
                    }
                } else {
                    int c = left.poll();
                    left_sum += c;
                    if (a <= -c) {
                        left.add(-a);
                        right.add(-c);
                        left_sum += a;
                        right_sum -= c;
                    } else {
                        left.add(c);
                        right.add(a);
                        left_sum -= c;
                        right_sum += a;
                    }
                }
            } else {
                int tmp = -left.peek();
                System.out.println(tmp + "" "" + (cnt % 2 == 0? left_sum + right_sum + tmp : left_sum + right_sum - tmp));
            }
        }
    }
}","import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int q = sc.nextInt();
        int cnt = 0;
        int left_sum = 0;
        int right_sum = 0;
        PriorityQueue<Integer> left = new PriorityQueue<>();
        PriorityQueue<Integer> right = new PriorityQueue<>((a, b) -> b - a);
        for (int i = 0; i < q; i++) {
            int[] t = new int[3];
            t[0] = sc.nextInt();
            t[1] = sc.nextInt();
            t[2] = sc.nextInt();
            if (t[0] == 1) {
                // update
                int a = t[1];
                int b = t[2];
                cnt++;
                if (cnt % 2 == 0) {
                    if (right.isEmpty()) {
                        left.add(-a);
                        left_sum += a;
                        continue;
                    }
                    int c = right.poll();
                    right_sum -= c;
                    if (a <= c) {
                        left.add(-a);
                        right.add(c);
                        left_sum += a;
                        right_sum += c;
                    } else {
                        left.add(-c);
                        right.add(a);
                        left_sum += c;
                        right_sum += a;
                    }
                } else {
                    int c = left.poll();
                    left_sum += c;
                    if (a <= -c) {
                        left.add(-a);
                        right.add(-c);
                        left_sum += a;
                        right_sum -= c;
                    } else {
                        left.add(c);
                        right.add(a);
                        left_sum -= c;
                        right_sum += a;
                    }
                }
            } else {
                int tmp = -left.peek();
                System.out.println(tmp + "" "" + (cnt % 2 == 0? left_sum + right_sum + tmp : left_sum + right_sum - tmp));
            }
        }
    }
}"
StarCoder,codenet,Python,Java,s238775098.java,"import java.util.*;
public class s238775098 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int res = 0;
        for (int i = 0; i < n; i++) {
            String[] s = sc.next().split("" "");
            if (s[1].equals(""BTC"")) {
                res += Double.valueOf(s[0]) * 380000;
            } else {
                res += Integer.valueOf(s[0]);
            }
        }
        System.out.println(res);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int res = 0;
        for (int i = 0; i < n; i++) {
            String[] s = sc.next().split("" "");
            if (s[1].equals(""BTC"")) {
                res += Double.valueOf(s[0]) * 380000;
            } else {
                res += Integer.valueOf(s[0]);
            }
        }
        System.out.println(res);
    }
}"
StarCoder,codenet,Python,Java,s908812767.java,"import java.util.*;

public class s908812767 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Map<Integer, List<int[]>> V = new HashMap<>();
        Map<Integer, Integer> color = new HashMap<>();
        for (int i = 0; i < n; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
            int w = sc.nextInt();
            if (!V.containsKey(u)) {
                V.put(u, new ArrayList<>());
            }
            V.get(u).add(new int[]{v, w});
            if (!V.containsKey(v)) {
                V.put(v, new ArrayList<>());
            }
            V.get(v).add(new int[]{u, w});
        }
        for (int i = 1; i <= n; i++) {
            color.put(i, -1);
        }
        while (true) {
            int i = 0;
            for (int j = 1; j <= n; j++) {
                if (color.get(j) == -1) {
                    i = j;
                    color.put(i, 0);
                    break;
                }
            }
            if (i == 0) {
                for (int j = 1; j <= n; j++) {
                    System.out.println(color.get(j));
                }
                break;
            } else {
                if (!dfs(i, V, color)) {
                    System.out.println(""No"");
                    break;
                }
            }
        }
    }

    public static boolean dfs(int i, Map<Integer, List<int[]>> V, Map<Integer, Integer> color) {
        for (int[] vw : V.get(i)) {
            int v = vw[0];
            int w = vw[1];
            if ((w % 2) == 0) {
                if (color.get(v) == -1) {
                    color.put(v, color.get(i));
                } else if (color.get(v) == color.get(i)) {
                    continue;
                } else {
                    return false;
                }
            } else {
                if (color.get(v) == -1) {
                    color.put(v, 0);
                } else if (color.get(v) == color.get(i)) {
                    return false;
                } else {
                    continue;
                }
            }
            if (!dfs(v, V, color)) {
                return false;
            }
        }
        return true;
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Map<Integer, List<int[]>> V = new HashMap<>();
        Map<Integer, Integer> color = new HashMap<>();
        for (int i = 0; i < n; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
            int w = sc.nextInt();
            if (!V.containsKey(u)) {
                V.put(u, new ArrayList<>());
            }
            V.get(u).add(new int[]{v, w});
            if (!V.containsKey(v)) {
                V.put(v, new ArrayList<>());
            }
            V.get(v).add(new int[]{u, w});
        }
        for (int i = 1; i <= n; i++) {
            color.put(i, -1);
        }
        while (true) {
            int i = 0;
            for (int j = 1; j <= n; j++) {
                if (color.get(j) == -1) {
                    i = j;
                    color.put(i, 0);
                    break;
                }
            }
            if (i == 0) {
                for (int j = 1; j <= n; j++) {
                    System.out.println(color.get(j));
                }
                break;
            } else {
                if (!dfs(i, V, color)) {
                    System.out.println(""No"");
                    break;
                }
            }
        }
    }

    public static boolean dfs(int i, Map<Integer, List<int[]>> V, Map<Integer, Integer> color) {
        for (int[] vw : V.get(i)) {
            int v = vw[0];
            int w = vw[1];
            if ((w % 2) == 0) {
                if (color.get(v) == -1) {
                    color.put(v, color.get(i));
                } else if (color.get(v) == color.get(i)) {
                    continue;
                } else {
                    return false;
                }
            } else {
                if (color.get(v) == -1) {
                    color.put(v, 0);
                } else if (color.get(v) == color.get(i)) {
                    return false;
                } else {
                    continue;
                }
            }
            if (!dfs(v, V, color)) {
                return false;
            }
        }
        return true;
    }
}"
StarCoder,codenet,Python,Java,s110149598.java,"import java.util.Scanner;

public class s110149598 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String[] input = sc.nextLine().split("" "");
        int a = Integer.parseInt(input[0]);
        int b = Integer.parseInt(input[1]);
        if (a < b) {
            System.out.println(""<"");
        } else if (a > b) {
            System.out.println("">"");
        } else {
            System.out.println(""="");
        }
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String[] input = sc.nextLine().split("" "");
        int a = Integer.parseInt(input[0]);
        int b = Integer.parseInt(input[1]);
        if (a < b) {
            System.out.println(""<"");
        } else if (a > b) {
            System.out.println("">"");
        } else {
            System.out.println(""="");
        }
    }
}"
StarCoder,codenet,Python,Java,s702834515.java,"n=int(input())
r=0
for ii in range(n):
  if (ii+1)%3!=0 && (ii+1)%5!=0:
    r+=(ii+1)
print(r)","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int r = 0;
        for (int i = 0; i < n; i++) {
            if ((i + 1) % 3 != 0 && (i + 1) % 5 != 0) {
                r += (i + 1);
            }
        }
        System.out.println(r);
    }
}"
StarCoder,codenet,Python,Java,s087080706.java,"import java.util.*;
public class s087080706 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int x = sc.nextInt();
        int[] a = new int[n];
        for(int i=0;i<n;i++) a[i] = sc.nextInt();
        Arrays.sort(a);
        int i = Arrays.binarySearch(a,x);
        if(i<0) i = -i-1;
        System.out.println(Math.min(i,n-i));
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int x = sc.nextInt();
        int[] a = new int[n];
        for(int i=0;i<n;i++) a[i] = sc.nextInt();
        Arrays.sort(a);
        int i = Arrays.binarySearch(a,x);
        if(i<0) i = -i-1;
        System.out.println(Math.min(i,n-i));
    }
}"
StarCoder,codenet,Python,Java,s804484425.java,"import java.util.*;
import java.io.*;

public class s804484425 {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] str = br.readLine().split("" "");
        int n = Integer.parseInt(str[0]);
        int k = Integer.parseInt(str[1]);
        int[][] info = new int[n][2];
        for (int i = 0; i < n; i++) {
            String[] str2 = br.readLine().split("" "");
            info[i][0] = Integer.parseInt(str2[0]);
            info[i][1] = Integer.parseInt(str2[1]);
        }
        Arrays.sort(info, (a, b) -> b[1] - a[1]);
        int[] selected = new int[k];
        int[] selected_only = new int[k];
        int[] selected_chohuku = new int[k];
        int[] unselected_only = new int[n - k];
        int cnt_type = 0;
        int sum_select = 0;
        for (int i = 0; i < k; i++) {
            int t = info[i][0];
            int d = info[i][1];
            if (selected[t] == 0) {
                cnt_type++;
                selected[t] = 1;
                selected_only[i] = d;
            } else {
                selected_chohuku[i] = d;
            }
        }
        for (int i = k; i < n; i++) {
            int t = info[i][0];
            int d = info[i][1];
            if (selected[t] == 0) {
                unselected_only[i - k] = d;
            }
        }
        for (int i = 0; i < k; i++) {
            sum_select += selected_chohuku[i];
        }
        for (int i = 0; i < n - k; i++) {
            sum_select += unselected_only[i];
        }
        int ans = cnt_type * cnt_type + sum_select;
        for (int i = 0; i < k; i++) {
            sum_select -= selected_chohuku[i];
            cnt_type++;
            sum_select += unselected_only[n - k - 1];
            cnt_type--;
            int tmp = cnt_type * cnt_type + sum_select;
            ans = Math.max(ans, tmp);
        }
        System.out.println(ans);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] str = br.readLine().split("" "");
        int n = Integer.parseInt(str[0]);
        int k = Integer.parseInt(str[1]);
        int[][] info = new int[n][2];
        for (int i = 0; i < n; i++) {
            String[] str2 = br.readLine().split("" "");
            info[i][0] = Integer.parseInt(str2[0]);
            info[i][1] = Integer.parseInt(str2[1]);
        }
        Arrays.sort(info, (a, b) -> b[1] - a[1]);
        int[] selected = new int[k];
        int[] selected_only = new int[k];
        int[] selected_chohuku = new int[k];
        int[] unselected_only = new int[n - k];
        int cnt_type = 0;
        int sum_select = 0;
        for (int i = 0; i < k; i++) {
            int t = info[i][0];
            int d = info[i][1];
            if (selected[t] == 0) {
                cnt_type++;
                selected[t] = 1;
                selected_only[i] = d;
            } else {
                selected_chohuku[i] = d;
            }
        }
        for (int i = k; i < n; i++) {
            int t = info[i][0];
            int d = info[i][1];
            if (selected[t] == 0) {
                unselected_only[i - k] = d;
            }
        }
        for (int i = 0; i < k; i++) {
            sum_select += selected_chohuku[i];
        }
        for (int i = 0; i < n - k; i++) {
            sum_select += unselected_only[i];
        }
        int ans = cnt_type * cnt_type + sum_select;
        for (int i = 0; i < k; i++) {
            sum_select -= selected_chohuku[i];
            cnt_type++;
            sum_select += unselected_only[n - k - 1];
            cnt_type--;
            int tmp = cnt_type * cnt_type + sum_select;
            ans = Math.max(ans, tmp);
        }
        System.out.println(ans);
    }
}"
StarCoder,codenet,Python,Java,s331817031.java,"import java.util.*;

public class s331817031 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int h = sc.nextInt();
        int w = sc.nextInt();
        sc.close();

        String[][] l = new String[h][w];
        for (int i = 0; i < h; i++) {
            String[] a = sc.next().split("""");
            for (int j = 0; j < w; j++) {
                l[i][j] = a[j];
            }
        }

        int tmp = 0;
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (l[i][j].equals(""#"")) {
                    if (j < tmp) {
                        System.out.println(""Impossible"");
                        return;
                    } else {
                        tmp = j;
                    }
                }
            }
        }

        System.out.println(""Possible"");
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int h = sc.nextInt();
        int w = sc.nextInt();
        sc.close();

        String[][] l = new String[h][w];
        for (int i = 0; i < h; i++) {
            String[] a = sc.next().split("""");
            for (int j = 0; j < w; j++) {
                l[i][j] = a[j];
            }
        }

        int tmp = 0;
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (l[i][j].equals(""#"")) {
                    if (j < tmp) {
                        System.out.println(""Impossible"");
                        return;
                    } else {
                        tmp = j;
                    }
                }
            }
        }

        System.out.println(""Possible"");
    }
}"
StarCoder,codenet,Python,Java,s949655009.java,"import java.util.Scanner;

public class s949655009 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String strn = sc.next();
		int n = Integer.parseInt(strn);
		String[] shichigolist = {""3"",""5"",""7""};
		String[][] shichigo = new String[strn.length()][];
		for (int i = 0; i < strn.length(); i++) {
			if (i == 0) {
				for (int j = 0; j < shichigolist.length; j++) {
					shichigo[i][j] = shichigolist[j];
				}
			} else {
				for (int j = 0; j < shichigo[i-1].length; j++) {
					for (int k = 0; k < shichigolist.length; k++) {
						shichigo[i][j+k] = shichigo[i-1][j]+shichigolist[k];
					}
				}
			}
		}
		int target = strn.length()-1;
		for (int i = 0; i < strn.length(); i++) {
			for (int j = 0; j < shichigo[i].length; j++) {
				if (i == target) {
					if (Integer.parseInt(shichigo[target][j]) > n) {
						shichigo[target][j] = null;
					} else if (shichigo[target][j].indexOf(""3"") == -1 || shichigo[target][j].indexOf(""5"") == -1 || shichigo[target][j].indexOf(""7"") == -1) {
						shichigo[target][j] = null;
					}
				} else {
					if (shichigo[i][j].indexOf(""3"") == -1 || shichigo[i][j].indexOf(""5"") == -1 || shichigo[i][j].indexOf(""7"") == -1) {
						shichigo[i][j] = null;
					}
				}
			}
		}
		int sum = 0;
		for (int i = 0; i < strn.length(); i++) {
			sum += shichigo[i].length;
		}
		System.out.println(sum);
	}

}","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String strn = sc.next();
		int n = Integer.parseInt(strn);
		String[] shichigolist = {""3"",""5"",""7""};
		String[][] shichigo = new String[strn.length()][];
		for (int i = 0; i < strn.length(); i++) {
			if (i == 0) {
				for (int j = 0; j < shichigolist.length; j++) {
					shichigo[i][j] = shichigolist[j];
				}
			} else {
				for (int j = 0; j < shichigo[i-1].length; j++) {
					for (int k = 0; k < shichigolist.length; k++) {
						shichigo[i][j+k] = shichigo[i-1][j]+shichigolist[k];
					}
				}
			}
		}
		int target = strn.length()-1;
		for (int i = 0; i < strn.length(); i++) {
			for (int j = 0; j < shichigo[i].length; j++) {
				if (i == target) {
					if (Integer.parseInt(shichigo[target][j]) > n) {
						shichigo[target][j] = null;
					} else if (shichigo[target][j].indexOf(""3"") == -1 || shichigo[target][j].indexOf(""5"") == -1 || shichigo[target][j].indexOf(""7"") == -1) {
						shichigo[target][j] = null;
					}
				} else {
					if (shichigo[i][j].indexOf(""3"") == -1 || shichigo[i][j].indexOf(""5"") == -1 || shichigo[i][j].indexOf(""7"") == -1) {
						shichigo[i][j] = null;
					}
				}
			}
		}
		int sum = 0;
		for (int i = 0; i < strn.length(); i++) {
			sum += shichigo[i].length;
		}
		System.out.println(sum);
	}

}"
StarCoder,codenet,Python,Java,s759499751.java,"import java.util.*;
public class s759499751 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        String[] a = new String[n];
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.next();
        }
        c[0] = 0;
        for (int i = 1; i < n; i++) {
            if (a[i].equals(""C"") && a[i - 1].equals(""A"")) {
                c[i] = c[i - 1] + 1;
            } else {
                c[i] = c[i - 1];
            }
        }
        for (int w = 0; w < k; w++) {
            int l = sc.nextInt();
            int r = sc.nextInt();
            System.out.println(c[r - 1] - c[l - 1]);
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        String[] a = new String[n];
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.next();
        }
        c[0] = 0;
        for (int i = 1; i < n; i++) {
            if (a[i].equals(""C"") && a[i - 1].equals(""A"")) {
                c[i] = c[i - 1] + 1;
            } else {
                c[i] = c[i - 1];
            }
        }
        for (int w = 0; w < k; w++) {
            int l = sc.nextInt();
            int r = sc.nextInt();
            System.out.println(c[r - 1] - c[l - 1]);
        }
    }
}"
StarCoder,codenet,Python,Java,s251858505.java,"import java.util.*;

public class s251858505 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println(Arrays.stream(sc.nextLine().split("" "")).map(Integer::parseInt).map(i -> sc.nextInt() == i).mapToInt(i -> i? 1 : 0).sum());
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println(Arrays.stream(sc.nextLine().split("" "")).map(Integer::parseInt).map(i -> sc.nextInt() == i).mapToInt(i -> i? 1 : 0).sum());
    }
}"
StarCoder,codenet,Python,Java,s592421258.java,"import java.util.Scanner;
public class s592421258 {
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        String s=sc.next()+sc.next();
        System.out.println(s.contains(sc.next())?""Yes"":""No"");
    }
}","import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        String s=sc.next()+sc.next();
        System.out.println(s.contains(sc.next())?""Yes"":""No"");
    }
}"
StarCoder,codenet,Python,Java,s663509070.java,"import java.util.*;
public class s663509070 {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int N=sc.nextInt();
        int D=sc.nextInt();
        int[][] mat=new int[N][N];
        for(int i=0;i<N;i++)
            for(int j=0;j<N;j++)
                mat[i][j]=sc.nextInt();
        int c=0;
        for(int i=0;i<N-1;i++)
            for(int j=i+1;j<N;j++)
                if(Math.sqrt(Math.pow(mat[i][0]-mat[j][0],2)+Math.pow(mat[i][1]-mat[j][1],2))==Math.floor(Math.sqrt(Math.pow(mat[i][0]-mat[j][0],2)+Math.pow(mat[i][1]-mat[j][1],2))))
                    c++;
        System.out.println(c);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int N=sc.nextInt();
        int D=sc.nextInt();
        int[][] mat=new int[N][N];
        for(int i=0;i<N;i++)
            for(int j=0;j<N;j++)
                mat[i][j]=sc.nextInt();
        int c=0;
        for(int i=0;i<N-1;i++)
            for(int j=i+1;j<N;j++)
                if(Math.sqrt(Math.pow(mat[i][0]-mat[j][0],2)+Math.pow(mat[i][1]-mat[j][1],2))==Math.floor(Math.sqrt(Math.pow(mat[i][0]-mat[j][0],2)+Math.pow(mat[i][1]-mat[j][1],2))))
                    c++;
        System.out.println(c);
    }
}"
StarCoder,codenet,Python,Java,s067092519.java,"import java.util.*;

public class s067092519 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][][] m = new int[10][3][10];
        String line = """";
        for (int i = 0; i < N; i++) {
            String[] n = sc.next().split("" "");
            int b = Integer.parseInt(n[0]);
            int f = Integer.parseInt(n[1]);
            int r = Integer.parseInt(n[2]);
            int v = Integer.parseInt(n[3]);
            m[b - 1][f - 1][r - 1] += v;
        }
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 3; j++) {
                for (int k = 0; k < 10; k++) {
                    line += "" "" + m[i][j][k];
                }
                System.out.println(line);
                line = """";
            }
            if (i < 3) {
                System.out.println(""####################"");
            }
        }
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][][] m = new int[10][3][10];
        String line = """";
        for (int i = 0; i < N; i++) {
            String[] n = sc.next().split("" "");
            int b = Integer.parseInt(n[0]);
            int f = Integer.parseInt(n[1]);
            int r = Integer.parseInt(n[2]);
            int v = Integer.parseInt(n[3]);
            m[b - 1][f - 1][r - 1] += v;
        }
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 3; j++) {
                for (int k = 0; k < 10; k++) {
                    line += "" "" + m[i][j][k];
                }
                System.out.println(line);
                line = """";
            }
            if (i < 3) {
                System.out.println(""####################"");
            }
        }
    }
}"
StarCoder,codenet,Python,Java,s267613210.java,"import java.util.*;
public class s267613210 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        int[] dist = new int[N-1];
        System.out.println(N);
        for (int i = 0; i < N-1; i++) {
            dist[i] = A[i+1] - A[i];
        }
        dist[N-1] = K + A[0] - A[N-1];
        int maxv = 0;
        for (int i = 0; i < N-1; i++) {
            if (dist[i] > maxv) {
                maxv = dist[i];
            }
        }
        System.out.println(sum(dist) - maxv);
    }
    public static int sum(int[] A) {
        int sum = 0;
        for (int i = 0; i < A.length; i++) {
            sum += A[i];
        }
        return sum;
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        int[] dist = new int[N-1];
        System.out.println(N);
        for (int i = 0; i < N-1; i++) {
            dist[i] = A[i+1] - A[i];
        }
        dist[N-1] = K + A[0] - A[N-1];
        int maxv = 0;
        for (int i = 0; i < N-1; i++) {
            if (dist[i] > maxv) {
                maxv = dist[i];
            }
        }
        System.out.println(sum(dist) - maxv);
    }
    public static int sum(int[] A) {
        int sum = 0;
        for (int i = 0; i < A.length; i++) {
            sum += A[i];
        }
        return sum;
    }
}"
StarCoder,codenet,Python,Java,s591424993.java,"import java.util.*;

public class s591424993 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();
        int g = sc.nextInt();
        int[][] pc = new int[d][2];
        for (int i = 0; i < d; i++) {
            for (int j = 0; j < 2; j++) {
                pc[i][j] = sc.nextInt();
            }
        }
        int ans = Integer.MAX_VALUE;
        for (int bit = 0; bit < (1 << d); bit++) {
            int count = 0;
            int sum = 0;
            Set<Integer> nokori = new HashSet<>();
            for (int i = 0; i < d; i++) {
                if (((bit >> i) & 1) == 1) {
                    sum += pc[i][0] * (i + 1) * 100 + pc[i][1];
                    count += pc[i][0];
                    nokori.add(i + 1);
                }
            }
            if (sum < g) {
                int use = Collections.max(nokori);
                int n = Math.min(pc[use - 1][0], -(-(g - sum) / (use * 100)));
                count += n;
                sum += n * use * 100;
            }
            if (sum >= g) {
                ans = Math.min(ans, count);
            }
        }
        System.out.println(ans);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();
        int g = sc.nextInt();
        int[][] pc = new int[d][2];
        for (int i = 0; i < d; i++) {
            for (int j = 0; j < 2; j++) {
                pc[i][j] = sc.nextInt();
            }
        }
        int ans = Integer.MAX_VALUE;
        for (int bit = 0; bit < (1 << d); bit++) {
            int count = 0;
            int sum = 0;
            Set<Integer> nokori = new HashSet<>();
            for (int i = 0; i < d; i++) {
                if (((bit >> i) & 1) == 1) {
                    sum += pc[i][0] * (i + 1) * 100 + pc[i][1];
                    count += pc[i][0];
                    nokori.add(i + 1);
                }
            }
            if (sum < g) {
                int use = Collections.max(nokori);
                int n = Math.min(pc[use - 1][0], -(-(g - sum) / (use * 100)));
                count += n;
                sum += n * use * 100;
            }
            if (sum >= g) {
                ans = Math.min(ans, count);
            }
        }
        System.out.println(ans);
    }
}"
StarCoder,codenet,Python,Java,s913338871.java,"import java.util.*;

public class s913338871 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        int sum = 0;
        for (int i = N; i < 2 * N; i += 2) {
            sum += a[i];
        }
        System.out.println(sum);
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        int sum = 0;
        for (int i = N; i < 2 * N; i += 2) {
            sum += a[i];
        }
        System.out.println(sum);
    }
}"
StarCoder,codenet,Python,Java,s621701371.java,"import java.util.*;
public class s621701371 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int q = sc.nextInt();
        String[][] qs = new String[q][3];
        for (int i = 0; i < q; i++) {
            qs[i] = sc.next().split("" "");
        }
        boolean n = false;
        String left = """";
        String right = """";
        for (int i = 0; i < q; i++) {
            if (qs[i][0].equals(""1"")) {
                n =!n;
            }
            if (qs[i][0].equals(""2"")) {
                int t = Integer.parseInt(qs[i][1]);
                int f = Integer.parseInt(qs[i][2]);
                String c = qs[i][3];
                if (n) {
                    f = 1 == f? 2 : 1;
                }
                if (f == 1) {
                    left = c + left;
                } else {
                    right = c + right;
                }
            }
        }
        System.out.println(left + s + right);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int q = sc.nextInt();
        String[][] qs = new String[q][3];
        for (int i = 0; i < q; i++) {
            qs[i] = sc.next().split("" "");
        }
        boolean n = false;
        String left = """";
        String right = """";
        for (int i = 0; i < q; i++) {
            if (qs[i][0].equals(""1"")) {
                n =!n;
            }
            if (qs[i][0].equals(""2"")) {
                int t = Integer.parseInt(qs[i][1]);
                int f = Integer.parseInt(qs[i][2]);
                String c = qs[i][3];
                if (n) {
                    f = 1 == f? 2 : 1;
                }
                if (f == 1) {
                    left = c + left;
                } else {
                    right = c + right;
                }
            }
        }
        System.out.println(left + s + right);
    }
}"
StarCoder,codenet,Python,Java,s013976107.java,"import java.util.*;
public class s013976107 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        String S = sc.next();
        if(S.charAt(A) == '-' && S.indexOf('-') == 1)
            System.out.println(""Yes"");
        else
            System.out.println(""No"");
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        String S = sc.next();
        if(S.charAt(A) == '-' && S.indexOf('-') == 1)
            System.out.println(""Yes"");
        else
            System.out.println(""No"");
    }
}"
StarCoder,codenet,Python,Java,s147181072.java,"import java.util.Scanner;

public class s147181072 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println(sc.next().toLowerCase());
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println(sc.next().toLowerCase());
    }
}"
StarCoder,codenet,Python,Java,s875904659.java,"import java.util.*;

public class s875904659 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] cards = new String[n];
        String[] cards2 = new String[n];
        for (int i = 0; i < n; i++) {
            cards[i] = sc.next();
        }
        for (int i = 0; i < n; i++) {
            cards2[i] = cards[i];
        }
        bubbleSort(cards);
        System.out.println(""Stable"");
        selectionSort(cards2);
        if (Arrays.equals(cards, cards2)) {
            System.out.println(""Stable"");
        } else {
            System.out.println(""Not stable"");
        }
    }

    public static void bubbleSort(String[] cards) {
        int n = cards.length;
        for (int i = 0; i < n; i++) {
            for (int j = n - 1; j > i; j--) {
                if (Integer.parseInt(cards[j].substring(1)) < Integer.parseInt(cards[j - 1].substring(1))) {
                    String temp = cards[j];
                    cards[j] = cards[j - 1];
                    cards[j - 1] = temp;
                }
            }
        }
        for (String card : cards) {
            System.out.print(card + "" "");
        }
        System.out.println();
    }

    public static void selectionSort(String[] cards) {
        int n = cards.length;
        for (int i = 0; i < n; i++) {
            int min = i;
            for (int j = i; j < n; j++) {
                if (Integer.parseInt(cards[j].substring(1)) < Integer.parseInt(cards[min].substring(1))) {
                    min = j;
                }
            }
            if (min!= i) {
                String temp = cards[i];
                cards[i] = cards[min];
                cards[min] = temp;
            }
        }
        for (String card : cards) {
            System.out.print(card + "" "");
        }
        System.out.println();
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] cards = new String[n];
        String[] cards2 = new String[n];
        for (int i = 0; i < n; i++) {
            cards[i] = sc.next();
        }
        for (int i = 0; i < n; i++) {
            cards2[i] = cards[i];
        }
        bubbleSort(cards);
        System.out.println(""Stable"");
        selectionSort(cards2);
        if (Arrays.equals(cards, cards2)) {
            System.out.println(""Stable"");
        } else {
            System.out.println(""Not stable"");
        }
    }

    public static void bubbleSort(String[] cards) {
        int n = cards.length;
        for (int i = 0; i < n; i++) {
            for (int j = n - 1; j > i; j--) {
                if (Integer.parseInt(cards[j].substring(1)) < Integer.parseInt(cards[j - 1].substring(1))) {
                    String temp = cards[j];
                    cards[j] = cards[j - 1];
                    cards[j - 1] = temp;
                }
            }
        }
        for (String card : cards) {
            System.out.print(card + "" "");
        }
        System.out.println();
    }

    public static void selectionSort(String[] cards) {
        int n = cards.length;
        for (int i = 0; i < n; i++) {
            int min = i;
            for (int j = i; j < n; j++) {
                if (Integer.parseInt(cards[j].substring(1)) < Integer.parseInt(cards[min].substring(1))) {
                    min = j;
                }
            }
            if (min!= i) {
                String temp = cards[i];
                cards[i] = cards[min];
                cards[min] = temp;
            }
        }
        for (String card : cards) {
            System.out.print(card + "" "");
        }
        System.out.println();
    }
}"
StarCoder,codenet,Python,Java,s101447419.java,"import java.util.*;
public class s101447419 {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] v=new int[n];
        for(int i=0;i<n;i++) v[i]=sc.nextInt();
        int[] ve=new int[n/2];
        int[] vo=new int[n/2];
        for(int i=0;i<n/2;i++) {
            ve[i]=v[2*i];
            vo[i]=v[2*i+1];
        }
        Arrays.sort(ve);
        Arrays.sort(vo);
        int ans=n;
        if(ve[0]==vo[0]) {
            ans=n-ve[0]-vo[0];
        }
        else if(ve[0]==vo[1]) {
            ans=n-ve[0]-vo[1];
        }
        else if(ve[1]==vo[0]) {
            ans=n-ve[1]-vo[0];
        }
        else if(ve[1]==vo[1]) {
            ans=n-Math.min(ve[1],vo[1]);
        }
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] v=new int[n];
        for(int i=0;i<n;i++) v[i]=sc.nextInt();
        int[] ve=new int[n/2];
        int[] vo=new int[n/2];
        for(int i=0;i<n/2;i++) {
            ve[i]=v[2*i];
            vo[i]=v[2*i+1];
        }
        Arrays.sort(ve);
        Arrays.sort(vo);
        int ans=n;
        if(ve[0]==vo[0]) {
            ans=n-ve[0]-vo[0];
        }
        else if(ve[0]==vo[1]) {
            ans=n-ve[0]-vo[1];
        }
        else if(ve[1]==vo[0]) {
            ans=n-ve[1]-vo[0];
        }
        else if(ve[1]==vo[1]) {
            ans=n-Math.min(ve[1],vo[1]);
        }
        System.out.println(ans);
    }
}"
StarCoder,codenet,Python,Java,s048491063.java,"import java.util.*;

public class s048491063 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int Q = sc.nextInt();
        int[][] train = new int[N][N];
        for (int i = 0; i < M; i++) {
            int l = sc.nextInt();
            int r = sc.nextInt();
            train[l-1][r-1]++;
        }
        int[][] accum = new int[N+1][N+1];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                accum[i+1][j+1] = accum[i][j+1] + train[i][j];
            }
        }
        for (int i = 0; i < Q; i++) {
            int p = sc.nextInt();
            int q = sc.nextInt();
            int v = accum[q][q] - accum[p-1][q] - accum[q][p-1] + accum[p-1][p-1];
            System.out.println(v);
        }
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int Q = sc.nextInt();
        int[][] train = new int[N][N];
        for (int i = 0; i < M; i++) {
            int l = sc.nextInt();
            int r = sc.nextInt();
            train[l-1][r-1]++;
        }
        int[][] accum = new int[N+1][N+1];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                accum[i+1][j+1] = accum[i][j+1] + train[i][j];
            }
        }
        for (int i = 0; i < Q; i++) {
            int p = sc.nextInt();
            int q = sc.nextInt();
            int v = accum[q][q] - accum[p-1][q] - accum[q][p-1] + accum[p-1][p-1];
            System.out.println(v);
        }
    }
}"
StarCoder,codenet,Python,Java,s878873709.java,"import java.util.Scanner;

public class s878873709 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] s = new int[]{1, 2, 4, 8, 16, 32, 64};
        int ans = 0;
        for (int i = 1; i <= N; i++) {
            if (i == s[i - 1]) {
                ans = i;
            }
        }
        System.out.println(ans);
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] s = new int[]{1, 2, 4, 8, 16, 32, 64};
        int ans = 0;
        for (int i = 1; i <= N; i++) {
            if (i == s[i - 1]) {
                ans = i;
            }
        }
        System.out.println(ans);
    }
}"
StarCoder,codenet,Python,Java,s441329208.java,"import java.util.Scanner;

public class s441329208 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String t = sc.next();
        sc.close();
        System.out.println(s.compareTo(t) < 0? ""Yes"" : ""No"");
    }
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String t = sc.next();
        sc.close();
        System.out.println(s.compareTo(t) < 0? ""Yes"" : ""No"");
    }
}"
StarCoder,codenet,Python,Java,s840967243.java,"import java.math.BigInteger;
import java.util.Scanner;

public class s840967243 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        BigInteger f = BigInteger.valueOf(1);
        for (int i = 1; i <= n; i++) {
            f = f.multiply(BigInteger.valueOf(i));
        }
        for (int i = 1; i <= m; i++) {
            f = f.multiply(BigInteger.valueOf(i));
        }
        System.out.println(f.mod(BigInteger.valueOf(1000000007)));
    }
}","import java.math.BigInteger;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        BigInteger f = BigInteger.valueOf(1);
        for (int i = 1; i <= n; i++) {
            f = f.multiply(BigInteger.valueOf(i));
        }
        for (int i = 1; i <= m; i++) {
            f = f.multiply(BigInteger.valueOf(i));
        }
        System.out.println(f.mod(BigInteger.valueOf(1000000007)));
    }
}"
StarCoder,codenet,Python,Java,s964794058.java,"import java.util.Scanner;

public class s964794058 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int memTime = sc.nextInt();
        int[] memLate = new int[memTime];
        for (int i = 0; i < memTime; i++) {
            memLate[i] = sc.nextInt();
        }
        int highLate = 0;
        int[] colorList = new int[memTime];
        for (int i = 0; i < memTime; i++) {
            int member = memLate[i];
            if (member / 400 >= 8) {
                highLate++;
            } else if (member / 400 == colorList[i]) {
                continue;
            } else {
                colorList[i] = member / 400;
            }
        }
        int maxColor = colorList.length + highLate;
        int minColor = colorList.length;
        if (minColor == 0) {
            minColor = 1;
        }
        System.out.println(minColor + "" "" + maxColor);
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int memTime = sc.nextInt();
        int[] memLate = new int[memTime];
        for (int i = 0; i < memTime; i++) {
            memLate[i] = sc.nextInt();
        }
        int highLate = 0;
        int[] colorList = new int[memTime];
        for (int i = 0; i < memTime; i++) {
            int member = memLate[i];
            if (member / 400 >= 8) {
                highLate++;
            } else if (member / 400 == colorList[i]) {
                continue;
            } else {
                colorList[i] = member / 400;
            }
        }
        int maxColor = colorList.length + highLate;
        int minColor = colorList.length;
        if (minColor == 0) {
            minColor = 1;
        }
        System.out.println(minColor + "" "" + maxColor);
    }
}"
StarCoder,codenet,Python,Java,s287369394.java,"import java.util.*;
import java.io.*;
public class s287369394 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        int[] B = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        for (int i = 0; i < N; i++) {
            B[i] = sc.nextInt();
        }
        int ans = 0;
        for (int i = 0; i < N - 1; i++) {
            int d = Math.min(A[i], B[i]);
            ans += d;
            A[i] -= d;
            B[i] -= d;
            d = Math.min(A[i + 1], B[i]);
            ans += d;
            A[i + 1] -= d;
            B[i] -= d;
        }
        System.out.println(ans);
    }
}","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        int[] B = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        for (int i = 0; i < N; i++) {
            B[i] = sc.nextInt();
        }
        int ans = 0;
        for (int i = 0; i < N - 1; i++) {
            int d = Math.min(A[i], B[i]);
            ans += d;
            A[i] -= d;
            B[i] -= d;
            d = Math.min(A[i + 1], B[i]);
            ans += d;
            A[i + 1] -= d;
            B[i] -= d;
        }
        System.out.println(ans);
    }
}"
StarCoder,codenet,Python,Java,s797394058.java,"import java.util.Scanner;

public class s797394058 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int x = 1;

        int[] N_list = new int[N];

        for (int i = 0; i < N; i++) {
            N_list[i] = x + 1;
            x++;
        }

        int[][] n = new int[N_list.length][N_list.length];

        int m = 1;

        for (int i = 0; i < N_list.length; i++) {
            for (int j = 0; j < N_list.length; j++) {
                n[i][j] = m;
                m++;
            }
        }

        System.out.println(m);
    }
}","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int x = 1;

        int[] N_list = new int[N];

        for (int i = 0; i < N; i++) {
            N_list[i] = x + 1;
            x++;
        }

        int[][] n = new int[N_list.length][N_list.length];

        int m = 1;

        for (int i = 0; i < N_list.length; i++) {
            for (int j = 0; j < N_list.length; j++) {
                n[i][j] = m;
                m++;
            }
        }

        System.out.println(m);
    }
}"
StarCoder,codenet,Python,Java,s430322735.java,"import java.util.*;
public class s430322735 {
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		String[] lst = new String[n];
		int pair = 0;
		for(int i = 0; i < n; i++){
			String st = sc.next();
			lst[i] = st;
		}
		Arrays.sort(lst);
		String pre = """";
		int tmp_cnt = 0;
		int cnt = 0;
		for(int i = 0; i < n; i++){
			if(lst[i].equals(pre)){
				tmp_cnt++;
			}
			else{
				cnt += tmp_cnt + 1;
				tmp_cnt = 0;
			}
			pre = lst[i];
		}
		System.out.println(cnt);
	}
}","import java.util.*;
public class Main {
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		String[] lst = new String[n];
		int pair = 0;
		for(int i = 0; i < n; i++){
			String st = sc.next();
			lst[i] = st;
		}
		Arrays.sort(lst);
		String pre = """";
		int tmp_cnt = 0;
		int cnt = 0;
		for(int i = 0; i < n; i++){
			if(lst[i].equals(pre)){
				tmp_cnt++;
			}
			else{
				cnt += tmp_cnt + 1;
				tmp_cnt = 0;
			}
			pre = lst[i];
		}
		System.out.println(cnt);
	}
}"
StarCoder,codenet,Python,Java,s735480710.java,"import java.util.*;
public class s735480710 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] a = new String[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.next();
        }
        String[] b = new String[n];
        int j = 0;
        for (int i = 1; i < n; i += 2) {
            b[j] = a[i];
            j++;
        }
        for (int i = 0; i < n; i += 2) {
            b[j] = a[i];
            j++;
        }
        for (int i = 0; i < n; i++) {
            System.out.print(b[i] + "" "");
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] a = new String[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.next();
        }
        String[] b = new String[n];
        int j = 0;
        for (int i = 1; i < n; i += 2) {
            b[j] = a[i];
            j++;
        }
        for (int i = 0; i < n; i += 2) {
            b[j] = a[i];
            j++;
        }
        for (int i = 0; i < n; i++) {
            System.out.print(b[i] + "" "");
        }
    }
}"
StarCoder,codenet,Python,Java,s200092246.java,"import java.util.*;

public class s200092246 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] ans = new int[2];
        for (int i = 1; i <= N; i++) {
            if (sum(i, N) < N) {
                continue;
            } else {
                ans[0] = i - 1;
                ans[1] = sum(i, N) - N;
                break;
            }
        }
        for (int i = ans[0] + 1; i <= ans[1]; i++) {
            System.out.println(i);
        }
    }

    public static int sum(int n, int m) {
        int sum = 0;
        for (int i = n; i <= m; i++) {
            sum += i;
        }
        return sum;
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] ans = new int[2];
        for (int i = 1; i <= N; i++) {
            if (sum(i, N) < N) {
                continue;
            } else {
                ans[0] = i - 1;
                ans[1] = sum(i, N) - N;
                break;
            }
        }
        for (int i = ans[0] + 1; i <= ans[1]; i++) {
            System.out.println(i);
        }
    }

    public static int sum(int n, int m) {
        int sum = 0;
        for (int i = n; i <= m; i++) {
            sum += i;
        }
        return sum;
    }
}"
StarCoder,codenet,Python,Java,s790754864.java,"import java.util.*;
import java.math.*;

public class s790754864 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int R = N - K;
        int mod = 1000000007;
        long ans = 1;
        for (int i = 1; i <= K; i++) {
            if (N - K + 1 < i) {
                ans = 0;
            } else {
                ans = (ans * fact(R + 1, i)) % mod;
                ans = (ans * fact(K - 1, i - 1)) % mod;
            }
            System.out.println(ans);
        }
    }

    public static long fact(int n, int r) {
        return (long) Math.pow(n, r) % 1000000007;
    }
}","import java.util.*;
import java.math.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int R = N - K;
        int mod = 1000000007;
        long ans = 1;
        for (int i = 1; i <= K; i++) {
            if (N - K + 1 < i) {
                ans = 0;
            } else {
                ans = (ans * fact(R + 1, i)) % mod;
                ans = (ans * fact(K - 1, i - 1)) % mod;
            }
            System.out.println(ans);
        }
    }

    public static long fact(int n, int r) {
        return (long) Math.pow(n, r) % 1000000007;
    }
}"
StarCoder,codenet,Python,Java,s761121328.java,"import java.util.*;
public class s761121328 {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int N=sc.nextInt();
        int[] A=new int[N];
        for(int i=0;i<N;i++) A[i]=sc.nextInt();
        int s=A[0]^A[1];
        for(int i=2;i<N;i++) s=s^A[i];
        int[] B=new int[N];
        for(int i=0;i<N;i++) B[i]=s^A[i];
        String[] L=new String[N];
        for(int i=0;i<N;i++) L[i]=String.valueOf(B[i]);
        String S="" "";
        for(int i=0;i<N;i++) S+=L[i];
        System.out.println(S);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int N=sc.nextInt();
        int[] A=new int[N];
        for(int i=0;i<N;i++) A[i]=sc.nextInt();
        int s=A[0]^A[1];
        for(int i=2;i<N;i++) s=s^A[i];
        int[] B=new int[N];
        for(int i=0;i<N;i++) B[i]=s^A[i];
        String[] L=new String[N];
        for(int i=0;i<N;i++) L[i]=String.valueOf(B[i]);
        String S="" "";
        for(int i=0;i<N;i++) S+=L[i];
        System.out.println(S);
    }
}"
StarCoder,codenet,Python,Java,s233116196.java,"import java.util.*;

public class s233116196 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        Map<Integer, List<Integer>> G = new HashMap<>();
        for (int i = 0; i < N; i++) {
            G.put(i + 1, new ArrayList<>());
        }
        for (int i = 0; i < M; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            G.get(a).add(b);
            G.get(b).add(a);
        }
        int[] col = new int[N + 1];
        int cnt = 0;
        for (int i = 1; i <= N; i++) {
            if (col[i] == 0) {
                col[i] = cnt;
                Queue<Integer> que = new LinkedList<>();
                que.add(i);
                while (!que.isEmpty()) {
                    int x = que.poll();
                    for (int y : G.get(x)) {
                        if (col[y] == 0) {
                            col[y] = cnt;
                            que.add(y);
                        }
                    }
                }
                cnt++;
            }
        }
        System.out.println(Arrays.stream(col).max().getAsInt());
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        Map<Integer, List<Integer>> G = new HashMap<>();
        for (int i = 0; i < N; i++) {
            G.put(i + 1, new ArrayList<>());
        }
        for (int i = 0; i < M; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            G.get(a).add(b);
            G.get(b).add(a);
        }
        int[] col = new int[N + 1];
        int cnt = 0;
        for (int i = 1; i <= N; i++) {
            if (col[i] == 0) {
                col[i] = cnt;
                Queue<Integer> que = new LinkedList<>();
                que.add(i);
                while (!que.isEmpty()) {
                    int x = que.poll();
                    for (int y : G.get(x)) {
                        if (col[y] == 0) {
                            col[y] = cnt;
                            que.add(y);
                        }
                    }
                }
                cnt++;
            }
        }
        System.out.println(Arrays.stream(col).max().getAsInt());
    }
}"
StarCoder,codenet,C++,Python,s098326932.py,"#include<iostream>
#include<iomanip>
#include<cstdio>

#include<vector>
#include<queue>
#include<set>
#include<map>
#include<string>

#include<algorithm>
#include<cmath>
#include<numeric>

using namespace std;
typedef long long ll;
template <class T> inline bool chmax(T& a, T b) {if (a < b) {a = b; return 1;} return 0;}
template <class T> inline bool chmin(T& a, T b) {if (a > b) {a = b; return 1;} return 0;}
const ll INF = 1e18+1;


/*
1 <= S(n) <= 9 * (floor(log10 n) + 1)

したがって n / (9 * (floor(log10 n) + 1)) <= n/S(n) <= n

この達成される下界の内、floorの性質からその候補はちょうど10, 100, 1000...に限られる
10 ^ kのとき下界は
10^k/(9*(k+1))

11/2


その桁で一番小さいのは 19...9/S(19...9)
各桁について 99...9/S()以下なら出力?

各桁において
最もn/S(n)が小さいnは何か

n自体の差は最大10倍

1...19...9の形が可能性


editorial
つまり...
一つ目のポイント
「N以上の整数nでn/S(n)を最小にするもの」を求める
関数を作ってN <- f(N+1)を繰り返せばよい

二つ目
Nに対して、それ以上で最小にしえる候補は、
Nの下位数桁を9に置き換えたものとする
そのうち最小にするものを実際に比較する

*/

ll f(ll N) {
    vector<ll> a(20,0);
    ll d = 0;
    while (N > 0) {
        a[d] = N % 10;
        N /= 10;
        d++;
    }
    double m = 1e18;
    ll res = N;
    for (int i = 0; i <= d; i++) {
        ll bunsi = 0;
        ll bunbo = 9 * i;
        for (int j = d-1; j >= 0; j--) {
            bunsi *= 10;
            if (j < i) bunsi += 9;
            else bunsi += a[j];
            
            if (j >= i) bunbo += a[j];
            
        }
        //cout << ""bb"" << bunsi <<  "" "" << bunbo << ""  "" << endl;
        double frac = (double) bunsi / (double) bunbo;
        if (frac < m) {
            m = frac;
            res = bunsi;
        }
    }
    return res;
}

int main() {
    ll K;
    cin >> K;
    ll N = f(1);
    for (ll i = 0; i < K; i++) {
        cout << N << endl;
        N = f(N+1);
    }
    

}","#include<iostream>
#include<iomanip>
#include<cstdio>

#include<vector>
#include<queue>
#include<set>
#include<map>
#include<string>

#include<algorithm>
#include<cmath>
#include<numeric>

using namespace std;
typedef long long ll;
template <class T> inline bool chmax(T& a, T b) {if (a < b) {a = b; return 1;} return 0;}
template <class T> inline bool chmin(T& a, T b) {if (a > b) {a = b; return 1;} return 0;}
const ll INF = 1e18+1;


/*
1 <= S(n) <= 9 * (floor(log10 n) + 1)

したがって n / (9 * (floor(log10 n) + 1)) <= n/S(n) <= n

この達成される下界の内、floorの性質からその候補はちょうど10, 100, 1000...に限られる
10 ^ kのとき下界は
10^k/(9*(k+1))

11/2


その桁で一番小さいのは 19...9/S(19...9)
各桁について 99...9/S()以下なら出力?

各桁において
最もn/S(n)が小さいnは何か

n自体の差は最大10倍

1...19...9の形が可能性


editorial
つまり...
一つ目のポイント
「N以上の整数nでn/S(n)を最小にするもの」を求める
関数を作ってN <- f(N+1)を繰り返せばよい

二つ目
Nに対して、それ以上で最小にしえる候補は、
Nの下位数桁を9に置き換えたものとする
そのうち最小にするものを実際に比較する

*/

ll f(ll N) {
    vector<ll> a(20,0);
    ll d = 0;
    while (N > 0) {
        a[d] = N % 10;
        N /= 10;
        d++;
    }
    double m = 1e18;
    ll res = N;
    for (int i = 0; i <= d; i++) {
        ll bunsi = 0;
        ll bunbo = 9 * i;
        for (int j = d-1; j >= 0; j--) {
            bunsi *= 10;
            if (j < i) bunsi += 9;
            else bunsi += a[j];
            
            if (j >= i) bunbo += a[j];
            
        }
        //cout << ""bb"" << bunsi <<  "" "" << bunbo << ""  "" << endl;
        double frac = (double) bunsi / (double) bunbo;
        if (frac < m) {
            m = frac;
            res = bunsi;
        }
    }
    return res;
}

int main() {
    ll K;
    cin >> K;
    ll N = f(1);
    for (ll i = 0; i < K; i++) {
        cout << N << endl;
        N = f(N+1);
    }
    

}"
StarCoder,codenet,C++,Python,s495283729.py,"import sys

s = raw_input()

for i in range(len(s)):
    if i % 2 == 0:
        if s[i] == 'R' or s[i] == 'U' or s[i] == 'D':
            continue
        else:
            print ""No""
            sys.exit()
    else:
        if s[i] == 'L' or s[i] == 'U' or s[i] == 'D':
            continue
        else:
            print ""No""
            sys.exit()

print ""Yes""","import sys

s = input()

for i in range(len(s)):
    if i % 2 == 0:
        if s[i] == 'R' or s[i] == 'U' or s[i] == 'D':
            continue
        else:
            print(""No"")
            sys.exit()
    else:
        if s[i] == 'L' or s[i] == 'U' or s[i] == 'D':
            continue
        else:
            print(""No"")
            sys.exit()

print(""Yes"")"
StarCoder,codenet,C++,Python,s877835664.py,"import sys

def gcd(a, b):
	if b == 0:
		return a
	else:
		return gcd(b, a % b)

def lcm(a, b):
	return a * b / gcd(a, b)

def getPrimeFactor(n):
	res = {}
	for i in range(2, n + 1):
		while n % i == 0:
			res[i] = res.get(i, 0) + 1
			n /= i
	if n!= 1:
		res[n] = 1
	return res

def IsPrimeNumber(num):
	if num <= 2:
		return True
	elif num % 2 == 0:
		return False

	sqrtNum = int(math.sqrt(num))
	for i in range(3, sqrtNum + 1, 2):
		if num % i == 0:
			return False
	return True

def modinv(a, m):
	b = m
	u = 1
	v = 0
	while b:
		t = a / b
		a -= t * b
		a, b = b, a
		u -= t * v
		u, v = v, u
	u %= m
	if u < 0:
		u += m
	return u

def main():
	N, K = map(int, raw_input().split())
	A = map(int, raw_input().split())

	cur = 1
	dic = [0] * (N + 1)
	flg = False
	for i in range(1, K + 1):
		if dic[cur] < 0 or flg:
			dic[cur] = i
			cur = A[cur]
		else:
			tmp = K - (dic[cur] - 1)
			tmp %= i - dic[cur]
			i = K - tmp
			flg = True
	print cur

if __name__ == ""__main__"":
	main()","import sys

def gcd(a, b):
	if b == 0:
		return a
	else:
		return gcd(b, a % b)

def lcm(a, b):
	return a * b / gcd(a, b)

def getPrimeFactor(n):
	res = {}
	for i in range(2, n + 1):
		while n % i == 0:
			res[i] = res.get(i, 0) + 1
			n /= i
	if n!= 1:
		res[n] = 1
	return res

def IsPrimeNumber(num):
	if num <= 2:
		return True
	elif num % 2 == 0:
		return False

	sqrtNum = int(math.sqrt(num))
	for i in range(3, sqrtNum + 1, 2):
		if num % i == 0:
			return False
	return True

def modinv(a, m):
	b = m
	u = 1
	v = 0
	while b:
		t = a / b
		a -= t * b
		a, b = b, a
		u -= t * v
		u, v = v, u
	u %= m
	if u < 0:
		u += m
	return u

def main():
	N, K = map(int, input().split())
	A = [0] * (N + 1)
	inputs = list(input().split())
	
	A = list(map(int, input().split()))

	cur = 1
	dic = [-1] * (N + 1)
	flg = False
	for i in range(1, K + 1):
		if dic[cur] < 0 or flg:
			dic[cur] = i
			cur = A[cur]
		else:
			tmp = K - (dic[cur] - 1)
			tmp %= i - dic[cur]
			i = K - tmp
			flg = True
	print(cur)

if __name__ == ""__main__"":
	main()"
StarCoder,codenet,C++,Python,s121463387.py,"import sys

n = int(raw_input().strip())

for i in range(1,n+1):
    x = i
    s = str(x)
    if x % 3 == 0 or x % 10 == 3:
        print "" "" + str(i),
        continue
    else:
        k = len(s)
        while k > 0:
            k = k - 1
            j = pow(10,k)
            if (x / j) % 10 == 3:
                print "" "" + str(i),
                break

print """"

sys.exit(0)","import sys

n = int(input().strip())

for i in range(1,n+1):
    x = i
    s = str(x)
    if x % 3 == 0 or x % 10 == 3:
        print("" "" + str(i), end="""")
        continue
    else:
        k = len(s)
        while k > 0:
            k = k - 1
            j = pow(10,k)
            if (x / j) % 10 == 3:
                print("" "" + str(i), end="""")
                break

print("""")

sys.exit(0)"
StarCoder,codenet,C++,Python,s074799395.py,"B = raw_input()
if B == 'A':
    OUT = 'T'
elif B == 'T':
    OUT = 'A'
elif B == 'C':
    OUT = 'G'
else:
    OUT = 'C'
print OUT","B = input()
if B == 'A':
    OUT = 'T'
elif B == 'T':
    OUT = 'A'
elif B == 'C':
    OUT = 'G'
else:
    OUT = 'C'
print(OUT)"
StarCoder,codenet,C++,Python,s143031369.py,"import math

def sig(d):
	if abs(d) < 1e-8:
		return 0
	if d < 0:
		return -1
	else:
		return 1

class Point:
	def __init__(self, x, y):
		self.x = x
		self.y = y
	def set(self, x, y):
		self.x = x
		self.y = y
	def mod(self):
		return math.sqrt(self.x*self.x+self.y*self.y)
	def mod_pow(self):
		return self.x*self.x + self.y*self.y
	def output(self):
		print ""x = %f, y = %f"" % (self.x, self.y)
	def __lt__(self, p):
		if sig(self.x-p.x)!= 0:
			return self.x < p.x
		else:
			return sig(self.y-p.y) < 0

def dot(o, a, b):
	return (a.x-o.x)*(b.x-o.x) + (a.y-o.y)*(b.y-o.y)

def dot(a, b):
	return a.x*b.x + a.y*b.y

def cross(o, a, b):
	return (a.x - o.x)*(b.y - o.y)-(b.x - o.x)*(a.y - o.y)

def btw(x, a, b):
	return sig(dot(x, a, b))

def dis(a, b):
	return math.sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y))

def cos(o, a, b):
	return dot(o,a,b)/dis(o,a)/dis(o,b)

def jarvis(p, n, ch):
	d, i, o, s, l, t
	for d in range(n):
		if p[d] < p[0]:
			p[0], p[d] = p[d], p[0]
	l = s = 0
	d = 1
	while d < n:
		o = l
		for i in range(n):
			if (t=sig(cross(p[o], p[l], p[i]))) > 0 or (t == 0 and btw(p[l], p[o], p[i]) <= 0):
				l = i
		ch[d] = l
		d += 1
		l = (l+1)%n
		if l == s:
			break
	return d-1

n = int(raw_input())
P = [Point(0,0) for i in range(110)]
ch = [0 for i in range(110)]
ang = [0 for i in range(110)]
ans = [0 for i in range(110)]
for i in range(n):
	xx, yy = map(int, raw_input().split())
	P[i].set(xx, yy)
if n == 2:
	print ""0.5""
	print ""0.5""
else:
	m = jarvis(P, n, ch)
	sum = 0
	if m == 2:
		ans[ch[0]] = 0.5
		ans[","import math

def sig(d):
	if abs(d) < 1e-8:
		return 0
	if d < 0:
		return -1
	else:
		return 1

class Point:
	def __init__(self, x, y):
		self.x = x
		self.y = y
	def set(self, x, y):
		self.x = x
		self.y = y
	def mod(self):
		return math.sqrt(self.x*self.x+self.y*self.y)
	def mod_pow(self):
		return self.x*self.x + self.y*self.y
	def output(self):
		print ""x = %f, y = %f"" % (self.x, self.y)
	def __lt__(self, p):
		if sig(self.x-p.x)!= 0:
			return self.x < p.x
		else:
			return sig(self.y-p.y) < 0

def dot(o, a, b):
	return (a.x-o.x)*(b.x-o.x) + (a.y-o.y)*(b.y-o.y)

def dot(a, b):
	return a.x*b.x + a.y*b.y

def cross(o, a, b):
	return (a.x - o.x)*(b.y - o.y)-(b.x - o.x)*(a.y - o.y)

def btw(x, a, b):
	return sig(dot(x, a, b))

def dis(a, b):
	return math.sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y))

def cos(o, a, b):
	return dot(o,a,b)/dis(o,a)/dis(o,b)

def jarvis(p, n, ch):
	d, i, o, s, l, t
	for d in range(n):
		if p[d] < p[0]:
			p[0], p[d] = p[d], p[0]
	l = s = 0
	d = 1
	while d < n:
		o = l
		for i in range(n):
			if (t=sig(cross(p[o], p[l], p[i]))) > 0 or (t == 0 and btw(p[l], p[o], p[i]) <= 0):
				l = i
		ch[d] = l
		d += 1
		l = (l+1)%n
		if l == s:
			break
	return d-1

n = int(raw_input())
P = [Point(0,0) for i in range(110)]
ch = [0 for i in range(110)]
ang = [0 for i in range(110)]
ans = [0 for i in range(110)]
for i in range(n):
	xx, yy = map(int, raw_input().split())
	P[i].set(xx, yy)
if n == 2:
	print ""0.5""
	print ""0.5""
else:
	m = jarvis(P, n, ch)
	sum = 0
	if m == 2:
		ans[ch[0]] = 0.5
		ans["
StarCoder,codenet,C++,Python,s129088151.py,"n = int(raw_input())
T = {}
for i in range(n):
    com, str = raw_input().split()
    if com[0] == 'i':
        T[str] = True
    else:
        if T[str]:
            print 'yes'
        else:
            print 'no'","n = int(input())
T = {}
for i in range(n):
    com, str = input().split()
    if com[0] == 'i':
        T[str] = True
    else:
        if str in T:
            print('yes')
        else:
            print('no')"
StarCoder,codenet,C++,Python,s375006529.py,"s = raw_input()
v = [0]*26
for i in s:
	v[ord(i)-ord('a')] += 1
ans = ""Yes""
for i in range(26):
	if v[i] % 2!= 0:
		ans = ""No""
		break
print ans","s = input()
v = [0]*26
for i in s:
	v[ord(i)-ord('a')] += 1
ans = ""Yes""
for i in range(26):
	if v[i] % 2!= 0:
		ans = ""No""
		break
print(ans)"
StarCoder,codenet,C++,Python,s221616550.py,"s = raw_input()
if s == s[::-1] and s[:len(s)/2] == s[:len(s)/2][::-1]:
    print ""Yes""
else:
    print ""No""","s = input()
if s == s[::-1] and s[:len(s)//2] == s[:len(s)//2][::-1]:
    print(""Yes"")
else:
    print(""No"")"
StarCoder,codenet,C++,Python,s568362035.py,"n, m, Q = map(int, raw_input().split())
a = map(int, raw_input().split())
b = [0] * (m + 1)
id = [0] * (m + 1)
vis = [False] * (m + 1)
cnt = [0] * (m + 1)

flag = True
cnt[0] = n
for i in xrange(Q, 0, -1):
    t = id[a[i]]
    if cnt[t - 1] > 0:
        cnt[t - 1] -= 1
        cnt[t] += 1
        vis[t] = True
    else:
        flag = False
        break

l = 0
while cnt[l] == 0:
    l += 1
for i in xrange(l + 1, m):
    flag &= b[i] < b[i + 1]

print ""Yes"" if flag else ""No""","MAXN = int(1E5 + 10)
n, m = map(int, input().split())
Q = int(input())
a = [0] * MAXN
b = [0] * MAXN
id = [0] * MAXN
vis = [False] * MAXN
cnt = [0] * MAXN

inputs = list(map(int, input().split()))
for i in range(1, Q + 1):
	a[i] = inputs[i - 1]

flag = True
cnt[0] = n
for i in range(Q, 0, -1):
    t = id[a[i]]
    if cnt[t - 1] > 0:
        cnt[t - 1] -= 1
        cnt[t] += 1
        vis[t] = True
    else:
        flag = False
        break

l = 0
while cnt[l] == 0:
    l += 1
for i in range(l + 1, m):
    flag &= b[i] < b[i + 1]

print(""Yes"" if flag else ""No"")"
StarCoder,codenet,C++,Python,s343804973.py,"import sys
n,m,mod=map(int,input().split())
C=[[0]*310 for i in range(310)]
pre=[[0]*310 for i in range(310)]
f=[[0]*310 for i in range(310)]
C[0][0]=1
for i in range(1,n+1):
    C[i][0]=C[i][i]=1
    for j in range(1,i):
        C[i][j]=(C[i-1][j-1]+C[i-1][j])%mod
for i in range(0,m+1):
    f[1][i]=1
    pre[1][i]=m-i+1
for i in range(2,n+1):
    for j in range(0,m+1):
        for k in range(1,i):
            (f[i][j]+=f[i-k][j]*pre[k][j+1]%mod*C[i-2][k-1])%=mod
    for j in range(m,0,-1):
        pre[i][j]=(pre[i][j+1]+f[i][j])%mod
print(f[n+1][0])","import sys
n,m,mod=map(int,input().split())
C=[[0]*310 for i in range(310)]
pre=[[0]*310 for i in range(310)]
f=[[0]*310 for i in range(310)]
C[0][0]=1
for i in range(1,n+1):
    C[i][0]=C[i][i]=1
    for j in range(1,i):
        C[i][j]=(C[i-1][j-1]+C[i-1][j])%mod
for i in range(0,m+1):
    f[1][i]=1
    pre[1][i]=m-i+1
for i in range(2,n+2):
    for j in range(0,m+1):
        for k in range(1,i):
            f[i][j] += f[i-k][j] * pre[k][j+1] % mod * C[i-2][k-1] % mod
        f[i][j] %= mod
    for j in range(m,0,-1):
        pre[i][j]=(pre[i][j+1]+f[i][j])%mod
print(f[n+1][0])"
StarCoder,codenet,C++,Python,s794872785.py,"import sys

def solve():
	maxsize=0
	maxcnt=0
	ans_num
	ans_num2
	str_v = []
	
	for line in sys.stdin:
		str_v.append(line.strip())
		if(maxsize < len(line.strip())):
			maxsize = len(line.strip())
			ans_num = len(str_v)-1
	
	for i in range(len(str_v)):
		cnt=0
		for j in range(len(str_v)):
			if(str_v[i] == str_v[j]): cnt+=1
		if(maxcnt < cnt):
			maxcnt = cnt
			ans_num2 = i
	
	print str_v[ans_num2], str_v[ans_num]

solve()","import sys

def solve():
	maxsize=0
	maxcnt=0
	ans_num=0
	ans_num2=0
	str_v = []
	
	inputs = sys.stdin.readline().split()
	for in_str in inputs:
		str_v.append(in_str.strip())
		if(maxsize < len(in_str.strip())):
			maxsize = len(in_str.strip())
			ans_num = len(str_v)-1
	
	for i in range(len(str_v)):
		cnt=0
		for j in range(len(str_v)):
			if(str_v[i] == str_v[j]): cnt+=1
		if(maxcnt < cnt):
			maxcnt = cnt
			ans_num2 = i
	
	print(str_v[ans_num2], str_v[ans_num])

solve()"
StarCoder,codenet,C++,Python,s970719454.py,"import sys

while True:
    n, m = map(int, raw_input().split())
    if n == 0:
        break
    here = [0] * 100001
    dp1 = [0] * 100001
    dp2 = [0] * 100001
    dpflg = False
    for i in range(m):
        a = int(raw_input())
        if a == 0:
            dpflg = True
        here[a] = 1
    maxi1 = 0
    maxi2 = 0
    for i in range(1, n + 1):
        if here[i] == 1:
            dp1[i] = dp1[i - 1] + 1
        maxi1 = max(dp1[i], maxi1)
    for i in range(1, n + 1):
        if here[i] == 1:
            dp2[i] = dp2[i - 1] + 1
        else:
            dp2[i] = dp1[i - 1] + 1
        maxi2 = max(dp2[i], maxi2)
    if not dpflg:
        print maxi1
    else:
        print maxi2","import sys

while True:
    n, m = map(int, input().split())
    if n == 0:
        break
    here = [0] * 100001
    dp1 = [0] * 100001
    dp2 = [0] * 100001
    dpflg = False
    for i in range(m):
        a = int(input())
        if a == 0:
            dpflg = True
        here[a] = 1
    maxi1 = 0
    maxi2 = 0
    for i in range(1, n + 1):
        if here[i] == 1:
            dp1[i] = dp1[i - 1] + 1
        maxi1 = max(dp1[i], maxi1)
    for i in range(1, n + 1):
        if here[i] == 1:
            dp2[i] = dp2[i - 1] + 1
        else:
            dp2[i] = dp1[i - 1] + 1
        maxi2 = max(dp2[i], maxi2)
    if not dpflg:
        print(maxi1)
    else:
        print(maxi2)"
StarCoder,codenet,C++,Python,s615050061.py,"from collections import defaultdict
from math import log

B = 13131
N = 500000 + 7

n = int(input())
s = input()

f = [0] * N
g = [0] * N

map = defaultdict(int)
cnt = 0

for i in range(1, n + 1):
    if s[i] == '+' or s[i] == '-':
        f[i] = f[i - 1] + (s[i] == '+'? 1 : -1) * B ** g[i - 1]
        g[i] = g[i - 1] + (s[i] == '<'? -1 : 1)
    else:
        f[i] = f[i - 1]
        g[i] = g[i - 1] + (s[i] == '<'? -1 : 1)

for i in range(n, 0, -1):
    map[f[i]] += 1
    cnt += map[f[n] * B ** g[i - 1] + f[i - 1]]

print(cnt)","from collections import defaultdict
from math import log

B = 13131
N = 500000 + 7

n = int(input())
s = input()

f = [0] * N
g = [0] * N

map = defaultdict(int)
cnt = 0

for i in range(1, n + 1):
    if s[i - 1] == '+' or s[i - 1] == '-':
        g[i] = g[i - 1]
        f[i] = f[i - 1] + (1 if s[i - 1] == '+' else -1) * pow(B, g[i])
    else:
        f[i] = f[i - 1]
        g[i] = g[i - 1] + (-1 if s[i - 1] == '<' else 1)

for i in range(n, 0, -1):
    if f[n] * pow(B, g[i-1]) + f[i-1] in map:
        cnt += map[f[n] * pow(B, g[i-1]) + f[i-1]]
    if f[i] in map:
        map[f[i]] += 1
    else:
        map[f[i]] = 1

print(cnt)"
StarCoder,codenet,C++,Python,s941927127.py,"W = raw_input()

if W == W[::-1]:
    print ""Yes""
else:
    print ""No""","W = input()

if W == W[::-1]:
    print(""Yes"")
else:
    print(""No"")"
StarCoder,codenet,C++,Python,s522742913.py,"source = raw_input()

if len(source) > 10 or len(source) < 1:
	print -1

max_i = 2 ** (len(source) - 1)

sum = 0

for i in range(max_i):
	plus = bin(i)[2:]
	number = 0
	working = source
	while plus.find('1')!= -1:
		i = plus.find('1')
		sum += float(working[:i + 1])
		plus = plus[i + 1:]
		working = working[i + 1:]
	sum += float(working)

print round(sum, 0)","source = input()

if len(source) > 10 or len(source) < 1:
	print(-1)

max_i = 2 ** (len(source) - 1)

sum = 0

for i in range(max_i):
	plus = bin(i)[2:]
	number = 0
	working = source
	while plus.find('1')!= -1:
		i = plus.find('1')
		sum += float(working[:i + 1])
		plus = plus[i + 1:]
		working = working[i + 1:]
	sum += float(working)

print(round(sum, 0))"
StarCoder,codenet,C++,Python,s557795702.py,"import sys
import math

def merge(left, mid, right):
    n1 = mid - left
    n2 = right - mid
    L = [0] * n1
    R = [0] * n2
    for i in range(n1):
        L[i] = a[left + i]
    for i in range(n2):
        R[i] = a[mid + i]
    L[n1] = R[n2] = sys.maxint
    i = j = 0
    cnt = 0
    for k in range(left, right):
        if L[i] <= R[j]:
            a[k] = L[i]
            i += 1
        else:
            a[k] = R[j]
            j += 1
            cnt += n1 - i
    return cnt

def mergesort(left, right):
    if left + 1 < right:
        mid = (left + right) / 2
        v1 = mergesort(left, mid)
        v2 = mergesort(mid, right)
        v3 = merge(left, mid, right)
        return v1 + v2 + v3
    return 0

n = int(raw_input())
a = [0] * n
for i in range(n):
    a[i] = int(raw_input())
ans = mergesort(0, n)
print ans","import sys
import math

def merge(left, mid, right):
    n1 = mid - left
    n2 = right - mid
    L = [0] * (n1 + 1)
    R = [0] * (n2 + 1)
    for i in range(n1):
        L[i] = a[left + i]
    for i in range(n2):
        R[i] = a[mid + i]
    L[n1] = R[n2] = sys.maxsize
    i = j = 0
    cnt = 0
    for k in range(left, right):
        if L[i] <= R[j]:
            a[k] = L[i]
            i += 1
        else:
            a[k] = R[j]
            j += 1
            cnt += n1 - i
    return cnt

def mergesort(left, right):
    if left + 1 < right:
        mid = (left + right) // 2
        v1 = mergesort(left, mid)
        v2 = mergesort(mid, right)
        v3 = merge(left, mid, right)
        return v1 + v2 + v3
    return 0

n = int(input())
a = list(map(int, input().split()))
ans = mergesort(0, n)
print(ans)"
StarCoder,codenet,C++,Python,s716198307.py,"import sys

n = int(raw_input().strip())
a = [int(a_temp) for a_temp in raw_input().strip().split(' ')]
avg = sum(a)/n
s = abs(a[0] - avg)
ans = 0
for i in range(1, n):
    if s > abs(a[i] - avg):
        s = abs(a[i] - avg)
        ans = i
print ans","import sys

n = int(input().strip())
a = [int(a_temp) for a_temp in input().strip().split(' ')]
avg = sum(a)/n
s = abs(a[0] - avg)
ans = 0
for i in range(1, n):
    if s > abs(a[i] - avg):
        s = abs(a[i] - avg)
        ans = i
print(ans)"
StarCoder,codenet,C++,Python,s526060174.py,"n, m = map(int, raw_input().split())
x = [0] * (m + 1)
for i in range(n):
    k = int(raw_input())
    for j in range(k):
        a = int(raw_input())
        x[a] += 1
ans = 0
for i in range(1, m + 1):
    if x[i] == n:
        ans += 1
print ans","n, m = map(int, input().split())
x = [0] * (m + 1)
for i in range(n):
    k = int(input())
    for j in range(k):
        a = int(input())
        x[a] += 1
ans = 0
for i in range(1, m + 1):
    if x[i] == n:
        ans += 1
print(ans)"
StarCoder,codenet,C++,Python,s672953945.py,"#include<bits/stdc++.h>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<set>

/*
#include<boost/multiprecision/cpp_int.hpp>
#include <boost/multiprecision/cpp_dec_float.hpp>
#include <boost/rational.hpp>
namespace mp = boost::multiprecision;
using Real = mp::number<mp::cpp_dec_float<1024>>;
using Bint = mp::cpp_int;
*/

using namespace std;

#define int long long
#define REP(i,s,e) for((i)=(s);(i)<(e);(i)++)
#define RREP(i,s,e) for((i)=((s)-1);(i)>=(e);(i)--)
#define FOR(i,n) for((i)=(0);(i)<(n);(i)++)
#define RFOR(i,n) for((i)=((n)-1);(i)>=(0);(i)--)
#define MOD 1000000007

signed main(){

    vector<string> v;
    int N,L;

    cin>>N>>L;
    for(int i=0;i<N;i++){
        string s;
        cin>>s;
        v.push_back(s);
    }

    sort(v.begin(),v.end());

    for(int i=0;i<v.size();i++){
        cout<<v[i];
    }
    cout<<endl;
}","#include<bits/stdc++.h>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<set>

/*
#include<boost/multiprecision/cpp_int.hpp>
#include <boost/multiprecision/cpp_dec_float.hpp>
#include <boost/rational.hpp>
namespace mp = boost::multiprecision;
using Real = mp::number<mp::cpp_dec_float<1024>>;
using Bint = mp::cpp_int;
*/

using namespace std;

#define int long long
#define REP(i,s,e) for((i)=(s);(i)<(e);(i)++)
#define RREP(i,s,e) for((i)=((s)-1);(i)>=(e);(i)--)
#define FOR(i,n) for((i)=(0);(i)<(n);(i)++)
#define RFOR(i,n) for((i)=((n)-1);(i)>=(0);(i)--)
#define MOD 1000000007

signed main(){

    vector<string> v;
    int N,L;

    cin>>N>>L;
    for(int i=0;i<N;i++){
        string s;
        cin>>s;
        v.push_back(s);
    }

    sort(v.begin(),v.end());

    for(int i=0;i<v.size();i++){
        cout<<v[i];
    }
    cout<<endl;
}"
StarCoder,codenet,C++,Python,s107204188.py,"n,t = map(int,raw_input().split())
A = map(int,raw_input().split())

minA = min(A)
num = 0
f = 0

for i in A:
    if i == minA:
        num += 1
    else:
        if f == i - minA:
            num += 1
        else:
            if f < i - minA:
                num = 1
                f = i - minA

print num","n,t = map(int,input().split())
A = list(map(int,input().split()))

minA = min(A)
num = 0
f = 0

for i in A:
    if i == minA:
        num += 1
    else:
        if f == i - minA:
            num += 1
        else:
            if f < i - minA:
                num = 1
                f = i - minA

print(num)"
StarCoder,codenet,C++,Python,s620821061.py,"from collections import defaultdict

class BitMatching:
    def __init__(self, V):
        self.G = [defaultdict(list) for _ in range(2*V)]
        self.match = [-1] * (2*V)
        self.used = [False] * (2*V)

    def add(self, a, b):
        self.G[a][b+V].append(b)
        self.G[b+V][a].append(a)

    def dfs(self, v):
        self.used[v] = True
        for u in self.G[v]:
            if u < 0: continue
            w = self.match[u]
            if w < 0 or not self.used[w] and self.dfs(w):
                self.match[v] = u
                self.match[u] = v
                return True
        return False

    def exec(self):
        res = 0
        for v in range(V):
            if self.match[v] < 0:
                self.used = [False] * (2*V)
                if self.dfs(v):
                    res += 1
        return res

if __name__ == '__main__':
    V = 520
    bm = BitMatching(V)
    while True:
        n, m = map(int, input().split())
        if not n: break
        a = list(map(int, input().split()))
        b = list(map(int, input().split()))
        for i in range(n):
            for j in range(m):
                if gcd(a[i], b[j])!= 1:
                    bm.add(i, j)
        print(bm.exec())","from collections import defaultdict

class BitMatching:
    def __init__(self, V):
        self.G = [defaultdict(list) for _ in range(2*V)]
        self.match = [-1] * (2*V)
        self.used = [False] * (2*V)

    def add(self, a, b):
        self.G[a][b+V].append(b)
        self.G[b+V][a].append(a)

    def dfs(self, v):
        self.used[v] = True
        for u in self.G[v]:
            if u < 0: continue
            w = self.match[u]
            if w < 0 or not self.used[w] and self.dfs(w):
                self.match[v] = u
                self.match[u] = v
                return True
        return False

    def exec(self):
        res = 0
        for v in range(V):
            if self.match[v] < 0:
                self.used = [False] * (2*V)
                if self.dfs(v):
                    res += 1
        return res

def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

if __name__ == '__main__':
    V = 520
    bm = BitMatching(V)
    while True:
        n, m = map(int, input().split())
        if not n: break
        a = list(map(int, input().split()))
        b = list(map(int, input().split()))
        for i in range(n):
            for j in range(m):
                if gcd(a[i], b[j])!= 1:
                    bm.add(i, j)
        print(bm.exec())"
StarCoder,codenet,C++,Python,s661446851.py,"#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <cmath>
#include <vector>
#include <set>
#include <list>
#include <stack>
#include <map>
#include <cstring>
#include <unordered_map>
#include <queue>
#include <functional>
#define   mod  998244353
#define   int  long long 
#define   ld   long double
#define   pb   push_back
#define   vi   vector<int> 
#define   co(x)  cout << x << '\n' 
#define   dbg(x)  cerr << #x << "" = "" << x << '\n' 
#define   bitcount(x)  (int)__builtin_popcount(x) 
#define   sz(x)  (int)x.size()
#define   all(a) a.begin(),a.end() 
#define   ff   first
#define   ss   second
#define   pii  pair<int,int> 
#define   lcm(a,b) (a*b)/__gcd(a,b) 
using namespace std;

inline void solve(){
    int n,ans = 0; 
    cin>>n; 
    co(!n); 
}

signed main()
{
    int n=1; # cin>>n;
    while (n--) solve();
    return 0;
}","#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <cmath>
#include <vector>
#include <set>
#include <list>
#include <stack>
#include <map>
#include <cstring>
#include <unordered_map>
#include <queue>
#include <functional>
#define   mod  998244353
#define   int  long long 
#define   ld   long double
#define   pb   push_back
#define   vi   vector<int> 
#define   co(x)  cout << x << '\n' 
#define   dbg(x)  cerr << #x << "" = "" << x << '\n' 
#define   bitcount(x)  (int)__builtin_popcount(x) 
#define   sz(x)  (int)x.size()
#define   all(a) a.begin(),a.end() 
#define   ff   first
#define   ss   second
#define   pii  pair<int,int> 
#define   lcm(a,b) (a*b)/__gcd(a,b) 
using namespace std;

inline void solve(){
    int n,ans = 0; 
    cin>>n; 
    co(!n); 
}

signed main()
{
    int n=1; # cin>>n;
    while (n--) solve();
    return 0;
}"
StarCoder,codenet,C++,Python,s113620820.py,"import sys

MAX_N = 4000

INF = 1 << 60

wis = [0] * MAX_N
wsums = [0] * (MAX_N + 1)
dp = [[INF] * (MAX_N + 1) for _ in range(MAX_N)]
ks = [[-1] * (MAX_N + 1) for _ in range(MAX_N)]

def solve(n):
  wsums[0] = 0
  for i in range(n):
    wis[i] = int(sys.stdin.readline())
    wsums[i + 1] = wsums[i] + wis[i]

  for i in range(n):
    for j in range(n + 1):
      dp[i][j] = INF
      ks[i][j] = -1
    dp[i][i + 1] = 0
    ks[i][i + 1] = i

  for l in range(2, n + 1):
    for i in range(n):
      j = i + l
      wsum = wsums[j] - wsums[i]
      mind = INF
      mink = -1
      for k in range(ks[i][j - 1], ks[i + 1][j] + 1):
	d = dp[i][k] + dp[k][j] + wsum
	if mind > d: mind = d, mink = k
      dp[i][j] = mind
      ks[i][j] = mink

  print(dp[0][n])

if __name__ == '__main__':
  n = int(sys.stdin.readline())
  solve(n)","import sys

MAX_N = 4000

INF = 1 << 60

wis = [0] * MAX_N
wsums = [0] * (MAX_N + 1)
dp = [[INF] * (MAX_N + 1) for _ in range(MAX_N)]
ks = [[-1] * (MAX_N + 1) for _ in range(MAX_N)]

def solve(n):
  wsums[0] = 0
  inputs = list(sys.stdin.readline().split())
  for i in range(n):
    wis[i] = int(inputs[i])
    wsums[i + 1] = wsums[i] + wis[i]

  for i in range(n):
    for j in range(n + 1):
      dp[i][j] = INF
      ks[i][j] = -1
    dp[i][i + 1] = 0
    ks[i][i + 1] = i

  for l in range(2, n + 1):
    for i in range(n):
      j = i + l
      wsum = wsums[j] - wsums[i]
      mind = INF
      mink = -1
      for k in range(ks[i][j - 1], ks[i + 1][j] + 1):
        d = dp[i][k] + dp[k][j] + wsum
        if mind > d: 
          mind = d
          mink = k
      dp[i][j] = mind
      ks[i][j] = mink

  print(dp[0][n])

if __name__ == '__main__':
  n = int(sys.stdin.readline())
  solve(n)"
StarCoder,codenet,C++,Python,s107598592.py,"N = int(raw_input())
X = map(int, raw_input().split())
Y = sorted(X)
y = Y[N/2]
for i in range(N):
    if X[i] < y:
        print y
    else:
        print Y[N/2-1]","N = int(input())
X = list(map(int, input().split()))
Y = sorted(X)
y = Y[N//2]
for i in range(N):
    if X[i] < y:
        print(y)
    else:
        print(Y[N//2-1])"
StarCoder,codenet,C++,Python,s410514868.py,"n,k=map(int,raw_input().split())
s=raw_input()
L=s[0]
cnt=0
for i in range(1,n):
    if L==s[i]:cnt+=1
    else:
        L=s[i]
        ans+=cnt
        ans2+=1
        cnt=0
ans+=cnt
ans2+=1
print ans+min(2*k,ans2-1)","n,k=map(int,input().split())
s=input()
L=s[0]
ans=0
ans2=0
cnt=0
for i in range(1,n):
    if L==s[i]:cnt+=1
    else:
        L=s[i]
        ans+=cnt
        ans2+=1
        cnt=0
ans+=cnt
ans2+=1
print(ans+min(2*k,ans2-1))"
StarCoder,codenet,C++,Python,s448220316.py,"n=int(input())
    m=int(input())
    fa=[i for i in range(n+1)]
    v=[0 for i in range(n+1)]
    for i in range(m):
        l,r,vi=map(int,input().split())
        li=get(l)
        ri=get(r)
        if li!=ri:
            v[ri]=vi-v[r]+v[l]
            fa[ri]=li
        else:
            if v[r]-v[l]!=vi:
                print(""No"")
                return 0
    print(""Yes"")","n, m = map(int, input().split())
fa=[i for i in range(n+1)]
v=[0 for i in range(n+1)]
def get(x):
    if x == fa[x]:
        return x
    f = get(fa[x])
    v[x] += v[fa[x]]
    return f
for i in range(m):
    l,r,vi=map(int,input().split())
    li=get(l)
    ri=get(r)
    if li!=ri:
        v[ri]=vi-v[r]+v[l]
        fa[ri]=li
    else:
        if v[r]-v[l]!=vi:
            print(""No"")
print(""Yes"")"
StarCoder,codenet,C++,Python,s240156356.py,"str1 = raw_input()
str2 = raw_input()

if str1 > str2:
    print ""Yes""
else:
    print ""No""","str1 = input()
str2 = input()

if str1 > str2:
    print(""Yes"")
else:
    print(""No"")"
StarCoder,codenet,C++,Python,s973217665.py,"import sys
import math

def isprime(n):
    if n == 1:
        return False
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

while True:
    try:
        p, q = map(int, sys.stdin.readline().split())
        l = int(math.sqrt(p*p + q*q))
        if isprime(l):
            print ""P""
        else:
            print ""C""
    except:
        break","import sys
import math

def isprime(n):
    if n == 1:
        return False
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

while True:
    try:
        p, q = map(int, sys.stdin.readline().split())
        l = int(math.sqrt(p*p + q*q))
        if isprime(l):
            print(""P"")
        else:
            print(""C"")
    except:
        break"
StarCoder,codenet,C++,Python,s074619936.py,"while True:
    try:
        str = raw_input()
        if str == '0':
            break
        sum = 0
        for i in str:
            sum += int(i)
        print sum
    except EOFError:
        break","while True:
    try:
        str = input()
        if str == '0':
            break
        sum = 0
        for i in str:
            sum += int(i)
        print(sum)
    except EOFError:
        break"
StarCoder,codenet,C++,Python,s876796799.py,"import sys

N = int(raw_input().strip())
a = map(int, raw_input().strip().split(' '))

ind_a = [0] * 200000
for i in range(N):
    ind_a[a[i] - 1] = i

used_inds = set()
ans = 0
for i in range(N):
    cur_ind = ind_a[i]
    left_border = -1
    right_border = N
    if cur_ind in used_inds:
        continue
    left_it = used_inds.lower_bound(cur_ind)
    right_it = used_inds.lower_bound(cur_ind + 1)
    if left_it!= used_inds.begin():
        left_it -= 1
    if right_it!= used_inds.end():
        right_border = *right_it
    ans += (cur_ind - left_border) * (right_border - cur_ind) * (i + 1)
    used_inds.add(cur_ind)

print ans","import sys

N = int(input().strip())
a = list(map(int, input().strip().split()))

ind_a = [0] * 200000
for i in range(N):
    ind_a[a[i] - 1] = i

used_inds = set()
ans = 0
for i in range(N):
    cur_ind = ind_a[i]
    left_it = max([x for x in used_inds if x < cur_ind] or [-1]) 
    right_it = min([x for x in used_inds if x > cur_ind] or [N])
    if cur_ind in used_inds:
        continue
    if left_it == -1:
        left_border = -1
    else:
        left_it -= 1
        left_border = left_it
    if right_it == N:
        right_border = N
    else:
        right_border = right_it
    ans += (cur_ind - left_border) * (right_border - cur_ind) * (i + 1)
    used_inds.add(cur_ind)

print(ans)"
StarCoder,codenet,C++,Python,s151802561.py,"n = int(raw_input())
A = [int(x) for x in raw_input().split()]
swaps = 0
for i in range(n):
    min_index = i
    for j in range(i, n):
        if A[j] < A[min_index]:
            min_index = j
    if i!= min_index:
        A[i], A[min_index] = A[min_index], A[i]
        swaps += 1
print "" "".join(str(x) for x in A)
print swaps","n = int(input())
A = [int(x) for x in input().split()]
swaps = 0
for i in range(n):
    min_index = i
    for j in range(i, n):
        if A[j] < A[min_index]:
            min_index = j
    if i!= min_index:
        A[i], A[min_index] = A[min_index], A[i]
        swaps += 1
print("" "".join(str(x) for x in A))
print(swaps)"
StarCoder,codenet,C++,Python,s772335512.py,"import sys

N = int(raw_input().strip())
G = [[] for i in range(N)]
used = [False for i in range(N)]
grundy = [0 for i in range(N)]

for i in range(N-1):
    x, y = [int(j) for j in raw_input().strip().split()]
    x -= 1
    y -= 1
    G[x].append(y)
    G[y].append(x)

def dfs(v):
    used[v] = True
    grundy[v] = 0
    for i in G[v]:
        if not used[i]:
            dfs(i)
            grundy[v] ^= (grundy[i]+1)

dfs(0)
if grundy[0]!= 0:
    print ""Alice""
else:
    print ""Bob""","import sys

N = int(input().strip())
G = [[] for i in range(N)]
used = [False for i in range(N)]
grundy = [0 for i in range(N)]

for i in range(N-1):
    x, y = [int(j) for j in input().strip().split()]
    x -= 1
    y -= 1
    G[x].append(y)
    G[y].append(x)

def dfs(v):
    used[v] = True
    grundy[v] = 0
    for i in G[v]:
        if not used[i]:
            dfs(i)
            grundy[v] ^= (grundy[i]+1)

dfs(0)
if grundy[0]!= 0:
    print(""Alice"")
else:
    print(""Bob"")"
StarCoder,codenet,C++,Python,s154250720.py,"import sys
n = int(raw_input())
for i in range(1,n+1):
    maps[i] = int(raw_input())
    num[i] = maps[i]
maps.sort()
m = n/2
for i in range(1,n+1):
    if num[i] <= maps[m]:
        print maps[m+1]
    else:
        print maps[m]","import sys
n = int(input())
maps = [0] * (n+1)
num = [0] * (n+1)
inputs = list(input().split())
for i in range(1,n+1):
    maps[i] = int(inputs[i - 1])
    num[i] = maps[i]
maps.sort()
m = n//2
for i in range(1,n+1):
    if num[i] <= maps[m]:
        print(maps[m+1])
    else:
        print(maps[m])"
StarCoder,codenet,C++,Python,s353737529.py,"#include <iostream>
#include <vector>
#include <string>
#include <queue>
#include <algorithm>
#include <utility>
#include <set>
#include <map>
#include <cmath>
#include <tuple>
#include <iomanip>

using namespace std;
typedef long long ll;
typedef long double ld;

int dy[4] = {-1, 0, +1, 0};
int dx[4] = {0, +1, 0, -1};

const long long INF = 1LL << 60;
const ll MOD = 1e9 + 7;

bool greaterSecond(const pair<int, int>& f, const pair<int, int>& s){
    return f.second > s.second;
}

int gcd(int a, int b){
	if (b == 0)return a;
	return gcd(b, a % b);
}

//-----------------------ここから-----------


int main(void){
	int n;

	cin >> n;

	string s = """";

	if(n == 0){
		cout << '0' << endl;
		return 0;
	}
	

	int i = 1;
	while(n!= 0){
		if(n % 2 == 0){
			s += '0';
		} else {
			s += '1';
		}

		n -= abs(n % 2);

		n /= -2;
	}

	reverse(s.begin(), s.end());

	cout << s << endl;


}","#include <iostream>
#include <vector>
#include <string>
#include <queue>
#include <algorithm>
#include <utility>
#include <set>
#include <map>
#include <cmath>
#include <tuple>
#include <iomanip>

using namespace std;
typedef long long ll;
typedef long double ld;

int dy[4] = {-1, 0, +1, 0};
int dx[4] = {0, +1, 0, -1};

const long long INF = 1LL << 60;
const ll MOD = 1e9 + 7;

bool greaterSecond(const pair<int, int>& f, const pair<int, int>& s){
    return f.second > s.second;
}

int gcd(int a, int b){
	if (b == 0)return a;
	return gcd(b, a % b);
}

//-----------------------ここから-----------


int main(void){
	int n;

	cin >> n;

	string s = """";

	if(n == 0){
		cout << '0' << endl;
		return 0;
	}
	

	int i = 1;
	while(n!= 0){
		if(n % 2 == 0){
			s += '0';
		} else {
			s += '1';
		}

		n -= abs(n % 2);

		n /= -2;
	}

	reverse(s.begin(), s.end());

	cout << s << endl;


}"
StarCoder,codenet,C++,Python,s525470559.py,"import sys

def main():
    n, q = map(int, raw_input().split())
    Q = []
    elaps = 0

    for i in range(n):
        name, time = raw_input().split()
        Q.append((name, int(time)))

    while Q:
        name, time = Q.pop(0)
        if time <= q:
            elaps += time
            print name, elaps
        else:
            Q.append((name, time - q))
            elaps += q

if __name__ == ""__main__"":
    main()","import sys

def main():
    n, q = map(int, input().split())
    Q = []
    elaps = 0

    for i in range(n):
        name, time = input().split()
        Q.append((name, int(time)))

    while Q:
        name, time = Q.pop(0)
        if time <= q:
            elaps += time
            print(name, elaps)
        else:
            Q.append((name, time - q))
            elaps += q

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,C++,Python,s472290172.py,"str = raw_input()
max = 0
cnt = 0
for sc in str:
    if sc == 'A' or sc == 'C' or sc == 'G' or sc == 'T':
        cnt += 1
    else:
        cnt = 0
    max = max < cnt? cnt : max
print max","str = input()
max = 0
cnt = 0
for sc in str:
    if sc == 'A' or sc == 'C' or sc == 'G' or sc == 'T':
        cnt += 1
    else:
        cnt = 0
    max = cnt if max < cnt else max
print(max)"
StarCoder,codenet,C++,Python,s343280137.py,"import sys

MOD = 1000000007

def main():
    n,c = map(int,raw_input().split())
    x = [0] * (n+1)
    v = [0] * (n+1)
    for i in range(1,n+1):
        x[i],v[i] = map(int,raw_input().split())

    lefttotal = [0] * (n+1)
    maxlefttotal = [0] * (n+1)
    for i in range(1,n+1):
        lefttotal[i] = lefttotal[i-1] + v[i]
    for i in range(1,n+1):
        maxlefttotal[i] = max(maxlefttotal[i-1],lefttotal[i]-x[i])

    righttotal = [0] * (n+1)
    maxrighttotal = [0] * (n+1)
    for i in range(1,n+1):
        righttotal[i] = righttotal[i-1] + v[n-i+1]
    for i in range(1,n+1):
        maxrighttotal[i] = max(maxrighttotal[i-1],righttotal[i] -(c - x[n+1-i]))

    ans = 0
    for i in range(1,n+1):
        ans = max(ans,lefttotal[i]-x[i])
        ans = max(ans,lefttotal[i]-2*x[i]+maxrighttotal[n-i])
        ans = max(ans,righttotal[i]-(c -x[n+1-i]))
        ans = max(ans,righttotal[i]-2*(c-x[n+1-i])+maxlefttotal[n-i])

    print ans

if __name__ == ""__main__"":
    main()","import sys

MOD = 1000000007

def main():
    n,c = map(int,input().split())
    x = [0] * (n+1)
    v = [0] * (n+1)
    for i in range(1,n+1):
        x[i],v[i] = map(int,input().split())

    lefttotal = [0] * (n+1)
    maxlefttotal = [0] * (n+1)
    for i in range(1,n+1):
        lefttotal[i] = lefttotal[i-1] + v[i]
    for i in range(1,n+1):
        maxlefttotal[i] = max(maxlefttotal[i-1],lefttotal[i]-x[i])

    righttotal = [0] * (n+1)
    maxrighttotal = [0] * (n+1)
    for i in range(1,n+1):
        righttotal[i] = righttotal[i-1] + v[n-i+1]
    for i in range(1,n+1):
        maxrighttotal[i] = max(maxrighttotal[i-1],righttotal[i] -(c - x[n+1-i]))

    ans = 0
    for i in range(1,n+1):
        ans = max(ans,lefttotal[i]-x[i])
        ans = max(ans,lefttotal[i]-2*x[i]+maxrighttotal[n-i])
        ans = max(ans,righttotal[i]-(c -x[n+1-i]))
        ans = max(ans,righttotal[i]-2*(c-x[n+1-i])+maxlefttotal[n-i])

    print(ans)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,C++,Python,s110965154.py,"def sort(a_rvecIntValue):
    for i in range(len(a_rvecIntValue)):
        if i!= 0:
            iIntValue = a_rvecIntValue[i]
            j = i - 1
            while j >= 0 and a_rvecIntValue[j] > iIntValue:
                a_rvecIntValue[j+1] = a_rvecIntValue[j]
                j -= 1
            a_rvecIntValue[j+1] = iIntValue
    for i in a_rvecIntValue:
        print i,

if __name__ == ""__main__"":
    a_rvecIntValue = []
    while True:
        try:
            a_rvecIntValue.append(int(raw_input()))
        except:
            break
    sort(a_rvecIntValue)","def sort(a_rvecIntValue):
    for i in range(len(a_rvecIntValue)):
        if i!= 0:
            iIntValue = a_rvecIntValue[i]
            j = i - 1
            while j >= 0 and a_rvecIntValue[j] > iIntValue:
                a_rvecIntValue[j+1] = a_rvecIntValue[j]
                j -= 1
            a_rvecIntValue[j+1] = iIntValue
    for i in a_rvecIntValue:
        print(i)

if __name__ == ""__main__"":
    a_rvecIntValue = []
    while True:
        try:
            a_rvecIntValue.append(int(raw_input()))
        except:
            break
    sort(a_rvecIntValue)"
StarCoder,codenet,C++,Python,s338629964.py,"import sys
MOD = 1000000007

def init():
    global fact, revfact, rev
    fact = [1]
    revfact = [1]
    rev = [0]
    for i in range(1, 1100000):
        fact.append(fact[-1] * i % MOD)
        if i > 1:
            rev.append(MOD / i * (MOD - rev[MOD % i]) % MOD)
        revfact.append(revfact[-1] * rev[i] % MOD)

def comb(n, k):
    if n < k:
        return 0
    if comb[n][k]!= 0:
        return comb[n][k]
    res = fact[n] * revfact[n-k] % MOD * revfact[k] % MOD
    return comb[n][k] = res

def mod_pow(x, a, m = MOD):
    if a == 0:
        return 1
    res = mod_pow(x, a / 2, m)
    res = res * res % m
    if a % 2:
        res *= x
    return res % m

def inv(x, m = MOD):
    return mod_pow(x, m-2, m)

def aall, ball
n, ans = map(int, raw_input().split())
a = [0] * n
b = [0] * n
aall = 0
ball = 0
for i in range(n):
    a[i], b[i] = map(int, raw_input().split())
    aall += a[i]
    ball += b[i]

dp = [[[[0]*2 for _ in range(2)] for _ in range(ball+1)] for _ in range(aall+1)]
dp[0][0][0][0] = 1
for i in range(1, n+1):
    id = i % 2
    for asum in range(aall+1):
        for cnt in range(ball+1):
            for p in range(2):
                if asum-a[i-1] < 0:
                    continue
                pw = 1
                for use in range(b[i-1]):
                    if cnt-use >= 0:
                        tmp = comb(cnt, use) * pw % MOD
                        dp[asum][cnt][p][0] += dp[asum-a[i-1]][cnt-use][p^1][0] * tmp % MOD
                        dp[asum][cnt][p][1] += dp[asum-a[i-1]][cnt-use][p^1][1] * tmp % MOD
                    else:
                        break
                    pw = pw * a[i-1] % MOD
                if cnt-b[i-1]+1 >= 0:
                    dp[asum][cnt][p][1] += dp[asum-a[i-1]][cnt-b[i-1]+1][p^1][0] * comb(cnt, b[i-1]-1) % MOD * pw % MOD
                dp[asum][cnt][p][0] %= MOD
                dp[asum][cnt][p][1] %= MOD

for asum in range(aall+1):
    rev_asum_pow = 1
    for cnt in range(ball+1):
        rev_asum_pow = rev_asum_pow * rev[asum] % MOD
        for p in range(2):
            x = dp[asum][cnt","import sys
MOD = 1000000007

def init():
    global fact, revfact, rev
    fact = [1]
    revfact = [1]
    rev = [0]
    for i in range(1, 1100000):
        fact.append(fact[-1] * i % MOD)
        if i > 1:
            rev.append(MOD / i * (MOD - rev[MOD % i]) % MOD)
        revfact.append(revfact[-1] * rev[i] % MOD)

def comb(n, k):
    if n < k:
        return 0
    if comb[n][k]!= 0:
        return comb[n][k]
    res = fact[n] * revfact[n-k] % MOD * revfact[k] % MOD
    return comb[n][k] = res

def mod_pow(x, a, m = MOD):
    if a == 0:
        return 1
    res = mod_pow(x, a / 2, m)
    res = res * res % m
    if a % 2:
        res *= x
    return res % m

def inv(x, m = MOD):
    return mod_pow(x, m-2, m)

def aall, ball
n, ans = map(int, raw_input().split())
a = [0] * n
b = [0] * n
aall = 0
ball = 0
for i in range(n):
    a[i], b[i] = map(int, raw_input().split())
    aall += a[i]
    ball += b[i]

dp = [[[[0]*2 for _ in range(2)] for _ in range(ball+1)] for _ in range(aall+1)]
dp[0][0][0][0] = 1
for i in range(1, n+1):
    id = i % 2
    for asum in range(aall+1):
        for cnt in range(ball+1):
            for p in range(2):
                if asum-a[i-1] < 0:
                    continue
                pw = 1
                for use in range(b[i-1]):
                    if cnt-use >= 0:
                        tmp = comb(cnt, use) * pw % MOD
                        dp[asum][cnt][p][0] += dp[asum-a[i-1]][cnt-use][p^1][0] * tmp % MOD
                        dp[asum][cnt][p][1] += dp[asum-a[i-1]][cnt-use][p^1][1] * tmp % MOD
                    else:
                        break
                    pw = pw * a[i-1] % MOD
                if cnt-b[i-1]+1 >= 0:
                    dp[asum][cnt][p][1] += dp[asum-a[i-1]][cnt-b[i-1]+1][p^1][0] * comb(cnt, b[i-1]-1) % MOD * pw % MOD
                dp[asum][cnt][p][0] %= MOD
                dp[asum][cnt][p][1] %= MOD

for asum in range(aall+1):
    rev_asum_pow = 1
    for cnt in range(ball+1):
        rev_asum_pow = rev_asum_pow * rev[asum] % MOD
        for p in range(2):
            x = dp[asum][cnt"
StarCoder,codenet,C++,Python,s788730767.py,"import math

n, p = map(int, raw_input().split())
a = map(int, raw_input().split())

b = 0
c = 0

for i in a:
	if i % 2 == 0:
		b += 1
	else:
		c += 1

bsum = 2**b

if p == 0:
	csum = 0
	for i in range(c+1):
		if i % 2 == 0:
			csum += math.factorial(c) / (math.factorial(i) * math.factorial(c-i))
else:
	csum = 0
	for i in range(c+1):
		if i % 2 == 1:
			csum += math.factorial(c) / (math.factorial(i) * math.factorial(c-i))

print bsum*csum","import math

n, p = map(int, input().split())
a = map(int, input().split())

b = 0
c = 0

for i in a:
	if i % 2 == 0:
		b += 1
	else:
		c += 1

bsum = 2**b

if p == 0:
	csum = 0
	for i in range(c+1):
		if i % 2 == 0:
			csum += math.factorial(c) / (math.factorial(i) * math.factorial(c-i))
else:
	csum = 0
	for i in range(c+1):
		if i % 2 == 1:
			csum += math.factorial(c) / (math.factorial(i) * math.factorial(c-i))

print(int(bsum*csum))"
StarCoder,codenet,C++,Python,s391929974.py,"import sys

while True:
    try:
        n = int(raw_input())
        if n == 0:
            break
        sq = [0] * n
        fr = [0] * (n / 2)
        com = []
        tmp = 0
        for i in range(1, n):
            sq[i] = (i * i) % n
        for i in range(1, n):
            f = True
            for j in range(len(com)):
                if com[j] == sq[i]:
                    f = False
                    break
            if f:
                com.append(sq[i])
        for i in range(len(com)):
            for j in range(len(com)):
                if i!= j:
                    tmp = com[i] - com[j]
                    if tmp < 0:
                        tmp += n
                    if tmp > (n - 1) / 2:
                        tmp = n - tmp
                    fr[tmp] += 1
        for i in range(1, (n - 1) / 2 + 1):
            print fr[i]
    except EOFError:
        break","import sys

while True:
    try:
        n = int(input())
        if n == 0:
            break
        sq = [0] * 10000
        fr = [0] * 5000
        com = []
        tmp = 0
        for i in range(1, n):
            sq[i] = (i * i) % n
        for i in range(1, n):
            f = True
            for j in range(len(com)):
                if com[j] == sq[i]:
                    f = False
                    break
            if f:
                com.append(sq[i])
        for i in range(len(com)):
            for j in range(len(com)):
                if i!= j:
                    tmp = com[i] - com[j]
                    if tmp < 0:
                        tmp += n
                    if tmp > (n - 1) / 2:
                        tmp = n - tmp
                    fr[tmp] += 1
        for i in range(1, (n - 1) // 2 + 1):
            print(fr[i])
    except EOFError:
        break"
StarCoder,codenet,C++,Python,s807902500.py,"s,t=raw_input(),raw_input()
s+=s
print ""Yes"" if s.find(t)!=-1 else ""No""","s,t=input(),input()
s+=s
print(""Yes"" if s.find(t)!=-1 else ""No"")"
StarCoder,codenet,C++,Python,s146177123.py,"import sys

def main():
	while True:
		n = int(raw_input())
		if n == 0:
			break
		st = [False]*7
		for i in xrange(n):
			t = int(raw_input())
			ans = ''
			for j in xrange(7):
				ans += '1' if st[j] ^ seg[t][j] else '0'
				st[j] = seg[t][j]
			print ans

if __name__ == '__main__':
	main()","import sys

seg = [
    [False, True, True, True, True, True, True],
    [False, False, False, False, True, True, False],
    [True, False, True, True, False, True, True],
    [True, False, False, True, True, True, True],
    [True, True, False, False, True, True, False],
    [True, True, False, True, True, False, True],
    [True, True, True, True, True, False, True],
    [False, True, False, False, True, True, True],
    [True, True, True, True, True, True, True],
    [True, True, False, True, True, True, True]
]

def main():
	while True:
		n = int(input())
		if n == 0:
			break
		st = [False]*7
		for i in range(n):
			t = int(input())
			ans = ''
			for j in range(7):
				ans += '1' if st[j] ^ seg[t][j] else '0'
				st[j] = seg[t][j]
			print(ans)

if __name__ == '__main__':
	main()"
StarCoder,codenet,C++,Python,s847126533.py,"import sys

def check(n,wei,book):
    tmp=wei
    n-=1
    for i in book:
        if tmp<i:
            if n>0:
                n-=1
                tmp=wei
                if tmp<i:
                    return False
            else:
                return False
        tmp-=i
    return True

while True:
    m,n=map(int,raw_input().split())
    if m==0:
        break
    book=[]
    for i in range(n):
        book.append(int(raw_input()))
    l=0
    r=1500000
    ans=0
    while l<r:
        if check(m,(l+r)/2,book):
            ans=(l+r)/2
            if r==(l+r)/2:
                break
            r=(l+r)/2
        else:
            if l==(l+r)/2:
                break
            l=(l+r)/2
    print ans","import sys

def check(n,wei,book):
    tmp=wei
    n-=1
    for i in book:
        if tmp<i:
            if n>0:
                n-=1
                tmp=wei
                if tmp<i:
                    return False
            else:
                return False
        tmp-=i
    return True

while True:
    m,n=map(int,input().split())
    if m==0:
        break
    book=[]
    for i in range(n):
        book.append(int(input()))
    l=0
    r=1500000
    ans=0
    while l<r:
        if check(m,(l+r)/2,book):
            ans=(l+r)/2
            if r==(l+r)/2:
                break
            r=(l+r)/2
        else:
            if l==(l+r)/2:
                break
            l=(l+r)/2
    print(int(ans))"
StarCoder,codenet,C++,Python,s907227314.py,"s = raw_input()
a = s.find('A')
z = s.rfind('Z')
print z - a + 1","s = input()
a = s.find('A')
z = s.rfind('Z')
print(z - a + 1)"
StarCoder,codenet,C++,Python,s085712108.py,"import sys
from collections import deque
MOD=7007
F=[[1,1,0],[1,0,1],[0,1,1],[2,0,0],[0,2,0],[0,0,2]]
Hash=[[] for i in range(MOD)]
class QUEUE:
	def __init__(self,a,b,c,tot):
		self.a=a
		self.b=b
		self.c=c
		self.tot=tot
def HASH(n):
	for i in Hash[n%MOD]:
		if n==i:
			return False
	Hash[n%MOD].append(n)
	return True
def main():
	Push=QUEUE(0,0,0,0)
	que=deque()
	a,b,c=map(int,raw_input().split())
	Push.a=a
	Push.b=b
	Push.c=c
	que.append(Push)
	while que:
		Fro=que.popleft()
		if Fro.a==Fro.b and Fro.b==Fro.c:
			print Fro.tot
			return 0
		for i in range(6):
			Push=Fro
			Push.tot+=1
			Push.a+=F[i][0]
			Push.b+=F[i][1]
			Push.c+=F[i][2]
			n=Push.a*10000+Push.b*100+Push.c
			if not HASH(n):
				continue
			que.append(Push)
	return 0
if __name__=='__main__':
	main()","import sys
from collections import deque
MOD=7007
F=[[1,1,0],[1,0,1],[0,1,1],[2,0,0],[0,2,0],[0,0,2]]
Hash=[[] for i in range(MOD)]
class QUEUE:
	def __init__(self,a,b,c,tot):
		self.a=a
		self.b=b
		self.c=c
		self.tot=tot
def HASH(n):
	for i in Hash[n%MOD]:
		if n==i:
			return False
	Hash[n%MOD].append(n)
	return True
def main():
	Push=QUEUE(0,0,0,0)
	que=deque()
	a,b,c=map(int,input().split())
	Push.a=a
	Push.b=b
	Push.c=c
	que.append(Push)
	while que:
		Fro=que.popleft()
		if Fro.a==Fro.b and Fro.b==Fro.c:
			print(Fro.tot)
			return 0
		for i in range(6):
			Push=Fro
			Push.tot+=1
			Push.a+=F[i][0]
			Push.b+=F[i][1]
			Push.c+=F[i][2]
			n=Push.a*10000+Push.b*100+Push.c
			if not HASH(n):
				continue
			que.append(Push)
	return 0
if __name__=='__main__':
	main()"
StarCoder,codenet,C++,Python,s360529905.py,"import sys

def main():
    N = int(raw_input().strip())
    a = [int(a_temp) for a_temp in raw_input().strip().split(' ')]
    b = sorted(a)
    frontHalf = b[N/2-1]
    backHalf = b[N/2]
    for i in range(N):
        if a[i] < backHalf:
            print backHalf
        else:
            print frontHalf

if __name__ == ""__main__"":
    main()","import sys

def main():
    N = int(input().strip())
    a = [int(a_temp) for a_temp in input().strip().split()]
    b = sorted(a)
    frontHalf = b[N/2-1]
    backHalf = b[N/2]
    for i in range(N):
        if a[i] < backHalf:
            print(backHalf)
        else:
            print(frontHalf)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,C++,Python,s571001771.py,"import sys

n, m = map(int, raw_input().split())

key = [0] * (m + 1)
cost = [0] * (m + 1)
dp = [[0] * (m + 1) for _ in range(1 << n)]

for i in range(1, m + 1):
    cost[i], b = map(int, raw_input().split())
    for j in range(b):
        c = int(raw_input())
        key[i] += 1 << (c - 1)

for i in range(1 << n):
    for j in range(1, m + 1):
        dp[i][j] = dp[i][j - 1]
        if i & key[j]:
            dp[i][j] = min(dp[i][j], dp[i ^ key[j]][j - 1] + cost[j])

if dp[(1 << n) - 1][m] == 1000000000:
    print -1
else:
    print dp[(1 << n) - 1][m]","import sys

n, m = map(int, input().split())

key = [0] * (m + 1)
cost = [0] * (m + 1)
dp = [[0] * (m + 1) for _ in range(1 << n)]

for i in range(1, m + 1):
    cost[i], b = map(int, input().split())
    inputs = list(input().split())
    for j in range(b):
        c = int(inputs[j])
        key[i] += 1 << (c - 1)

for i in range(1 << n):
    for j in range(1, m + 1):
        dp[i][j] = dp[i][j - 1]
        if i & key[j]:
            dp[i][j] = min(dp[i][j], dp[i ^ key[j]][j - 1] + cost[j])

if dp[(1 << n) - 1][m] == 1000000000:
    print(-1)
else:
    print(dp[(1 << n) - 1][m])"
StarCoder,codenet,C++,Python,s395011148.py,"import sys

N = int(raw_input().strip())
A = [0] * (N + 1)
for i in range(1, N + 1):
    A[i] = int(raw_input().strip())

dp = [[[0 for i in range(20)] for j in range(2)] for k in range(N + 1)]

for i in range(N + 1):
    for j in range(2):
        for k in range(20):
            dp[i][j][k] = -(1 << 60)

dp[0][0][10] = 0

for i in range(1, N + 1):
    for j in range(6, 15):
        if dp[i - 1][0][j]!= (1 << 60):
            dp[i][1][j + 1] = max(dp[i][1][j + 1], dp[i - 1][0][j] + A[i])
            dp[i][0][j - 1] = max(dp[i][0][j - 1], dp[i - 1][0][j])
        if dp[i - 1][1][j]!= (1 << 60):
            dp[i][0][j - 1] = max(dp[i][0][j - 1], dp[i - 1][1][j])

V = 10 + (N / 2) - (N - (N / 2))
T1 = dp[N][0][V]
T2 = dp[N][1][V]
print max(T1, T2)","import sys

N = int(input().strip())
A = [0] * (N + 1)
inputs = list(input().split())
for i in range(1, N + 1):
    A[i] = int(inputs[i - 1].strip())

dp = [[[0 for i in range(20)] for j in range(2)] for k in range(N + 1)]

for i in range(N + 1):
    for j in range(2):
        for k in range(20):
            dp[i][j][k] = -(1 << 60)

dp[0][0][10] = 0

for i in range(1, N + 1):
    for j in range(6, 15):
        if dp[i - 1][0][j]!= (1 << 60):
            dp[i][1][j + 1] = max(dp[i][1][j + 1], dp[i - 1][0][j] + A[i])
            dp[i][0][j - 1] = max(dp[i][0][j - 1], dp[i - 1][0][j])
        if dp[i - 1][1][j]!= (1 << 60):
            dp[i][0][j - 1] = max(dp[i][0][j - 1], dp[i - 1][1][j])

V = 10 + (N // 2) - (N - (N // 2))
T1 = dp[N][0][V]
T2 = dp[N][1][V]
print(max(T1, T2))"
StarCoder,codenet,C++,Python,s984540390.py,"import sys

def main():
    h = int(raw_input().strip())
    ans = 0
    while h!= 1:
        if h % 2!= 0:
            h -= 1
        h /= 2
        ans += 1
    print ans+1

if __name__ == ""__main__"":
    main()","import sys

def main():
    h = int(input().strip())
    ans = 0
    cnt = 1
    while h!= 1:
        if h % 2!= 0:
            h -= 1
        h //= 2
        cnt *= 2
        ans += cnt
    print(ans+1)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,C++,Python,s550008428.py,"s = int(raw_input())
a = set()
a.add(s)
d = 2
while True:
    if s%2 == 0:
        x = s/2
        if x in a:
            print d
            break
        a.add(x)
    else:
        x = 3*s + 1
        if x in a:
            print d
            break
        a.add(x)
    s = x
    d += 1","s = int(input())
a = set()
a.add(s)
d = 2
while True:
    if s%2 == 0:
        x = s/2
        if x in a:
            print(d)
            break
        a.add(x)
    else:
        x = 3*s + 1
        if x in a:
            print(d)
            break
        a.add(x)
    s = x
    d += 1"
StarCoder,codenet,C++,Python,s644382798.py,"from collections import deque

LEN = 100005

class P:
    def __init__(self):
        self.name = """"
        self.t = 0

Q = [P() for i in range(LEN)]
head = 0
tail = 0
n = 0

def enqueue(x):
    Q[tail] = x
    tail = (tail + 1) % LEN

def dequeue():
    x = Q[head]
    head = (head + 1) % LEN
    return x

def min(a, b):
    return a if a < b else b

def main():
    elaps = 0
    c = 0
    i = 0
    u = P()
    global n, q
    n, q = map(int, raw_input().split())

    for i in range(1, n + 1):
        raw_input()
        Q[i].name = raw_input().strip()
        Q[i].t = int(raw_input())

    head = 1
    tail = n + 1

    while head!= tail:
        u = dequeue()
        c = min(q, u.t)
        u.t -= c
        elaps += c
        if u.t > 0:
            enqueue(u)
        else:
            print u.name, elaps

if __name__ == ""__main__"":
    main()","from collections import deque

LEN = 100005

class P:
    def __init__(self):
        self.name = """"
        self.t = 0

Q = [P() for i in range(LEN)]
head = 0
tail = 0
n = 0

def enqueue(x):
    global tail
    Q[tail] = x
    tail = (tail + 1) % LEN

def dequeue():
    global head
    x = Q[head]
    head = (head + 1) % LEN
    return x

def min(a, b):
    return a if a < b else b

def main():
    elaps = 0
    c = 0
    i = 0
    u = P()
    global n, q
    n, q = map(int, input().split())

    for i in range(1, n + 1):
        inputs = input().split()
        Q[i].name = inputs[0].strip()
        Q[i].t = int(inputs[1])

    head = 1
    tail = n + 1

    while head!= tail:
        u = dequeue()
        c = min(q, u.t)
        u.t -= c
        elaps += c
        if u.t > 0:
            enqueue(u)
        else:
            print(u.name, elaps)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,C++,Python,s035123609.py,"import sys

def main():
    rr, cc, k = map(int, sys.stdin.readline().strip().split())
    mat = [[0 for i in range(cc)] for j in range(rr)]
    dp = [[[0 for i in range(4)] for j in range(cc)] for k in range(rr)]
    dpl = [0 for i in range(cc)]
    for i in range(k):
        r, c, v = map(int, sys.stdin.readline().strip().split())
        mat[r - 1][c - 1] = v
    dp[0][0][1] = mat[0][0]
    for y in range(rr):
        for x in range(cc):
            for c in range(4):
                v = mat[y][x]
                q = 0
                if c == 0 or v == 0:
                    q = (x == 0)? dpl[x] : max(dpl[x], dp[y][x - 1][c])
                else:
                    q = (x == 0)? dpl[x] + v : max(dpl[x] + v, max(dp[y][x - 1][c], dp[y][x - 1][c - 1] + v))
                dp[y][x][c] = q
        for x in range(cc):
            dpl[x] = max(max(dp[y][x][0], dp[y][x][1]), max(dp[y][x][2], dp[y][x][3]))
    print(dpl[cc - 1])

if __name__ == ""__main__"":
    main()","import sys

def main():
    rr, cc, k = map(int, sys.stdin.readline().strip().split())
    mat = [[0 for i in range(cc)] for j in range(rr)]
    dp = [[[0 for i in range(4)] for j in range(cc)] for k in range(rr)]
    dpl = [0 for i in range(cc)]
    for i in range(k):
        r, c, v = map(int, sys.stdin.readline().strip().split())
        mat[r - 1][c - 1] = v
    dp[0][0][1] = mat[0][0]
    for y in range(rr):
        for x in range(cc):
            for c in range(4):
                v = mat[y][x]
                q = 0
                if c == 0 or v == 0:
                    q = dpl[x] if (x == 0) else max(dpl[x], dp[y][x - 1][c])
                else:
                    q = dpl[x] + v if (x == 0) else max(dpl[x] + v, max(dp[y][x - 1][c], dp[y][x - 1][c - 1] + v))
                dp[y][x][c] = q
        for x in range(cc):
            dpl[x] = max(max(dp[y][x][0], dp[y][x][1]), max(dp[y][x][2], dp[y][x][3]))
    print(dpl[cc - 1])

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,C++,Python,s573429823.py,"n = int(raw_input())
if n<4:
    print ""No""
else:
    for i in range(n/4+1):
        for j in range(n/7+1):
            if i*4+j*7 == n:
                print ""Yes""
                break
        else:
            continue
        break
    else:
        print ""No""","n = int(input())
if n<4:
    print(""No"")
else:
    for i in range(n//4+1):
        for j in range(n//7+1):
            if i*4+j*7 == n:
                print(""Yes"")
                break
        else:
            continue
        break
    else:
        print(""No"")"
StarCoder,codenet,C++,Python,s628937234.py,"s = raw_input()
print s[0] + str(len(s)-2) + s[-1]","s = input()
print(s[0] + str(len(s)-2) + s[-1])"
StarCoder,codenet,C++,Python,s422352362.py,"import sys

n = int(raw_input())
a = [0] * (n + 1)
pre = [0] * (n + 1)
last = [0] * (n + 1)

for i in range(1, n + 1):
    a[i] = int(raw_input())

for i in range(1, n):
    pre[i] = pre[i - 1] + a[i]

for i in range(n, 0, -1):
    last[i] = last[i + 1] + a[i]

d = (1 << 60)

for i in range(1, n):
    d = min(d, abs(pre[i] - last[i + 1]))

print d","import sys

n = int(input())
a = [0] * (n + 1)
pre = [0] * (n + 1)
last = [0] * (n + 1)
sumpre = 0
sumlast = 0

inputs = list(input().split())
for i in range(1, n + 1):
    a[i] = int(inputs[i - 1])

for i in range(1, n):
    sumpre += a[i]
    pre[i] = sumpre

for i in range(n, 0, -1):
    sumlast += a[i]
    last[i] = sumlast

d = (1 << 60)

for i in range(1, n):
    d = min(d, abs(pre[i] - last[i + 1]))

print(d)"
StarCoder,codenet,C++,Python,s983388294.py,"n = int(raw_input())
a = map(int, raw_input().split())
curr = 0
for i in range(n):
    if a[i] == curr+1:
        curr += 1
if curr > 0:
    print n-curr
else:
    print -1","n = int(input())
a = list(map(int, input().split()))
curr = 0
for i in range(n):
    if a[i] == curr+1:
        curr += 1
if curr > 0:
    print(n-curr)
else:
    print(-1)"
StarCoder,codenet,C++,Python,s700281300.py,"n = int(raw_input())

for i in range(n):
    s = raw_input()
    st = set()
    st.add(s)
    for j in range(1,len(s)):
        res = ''
        for k in range(j):
            res += s[k]
        t = res
        res = res[::-1]
        t2 = res
        res = res[::-1]
        st.add(t+t2)
        st.add(t2+t)
        st.add(t+res)
        st.add(res+t)
        st.add(res+res)
    print len(st)","n = int(input())

for i in range(n):
    s = input()
    st = set()
    st.add(s)
    for j in range(1,len(s)):
        res = ''
        res2 = ''
        for k in range(j):
            res += s[k]
        for k in range(j,len(s)):
            res2 += s[k]
        t = res
        res = res[::-1]
        t2 = res2
        res2 = res2[::-1]
        st.add(t+t2)
        st.add(t2+t)
        st.add(t+res2)
        st.add(res2+t)
        st.add(res+t2)
        st.add(t2+res)
        st.add(res+res2)
        st.add(res2+res)
    print(len(st))"
StarCoder,codenet,C++,Python,s146561572.py,"#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define pb push_back
#define all(x) x.begin(), x.end()
#define sz(x) int(x.size())

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t;
    cin >> t;
    while (t--) {
        ll n;
        cin >> n;
        ll ans = 0;
        for (ll i = 1; i <= n; i++) {
            ans += i * (n - i + 1);
        }
        for (ll i = 1; i < n; i++) {
            ll u, v;
            cin >> u >> v;
            ll a = max(u, v);
            ll b = min(u, v);
            ans -= b * (n - a + 1);
        }
        cout << ans << endl;
    }
    return 0;
}

Time Complexity: O(N^2)
Space Complexity: O(1)","#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define pb push_back
#define all(x) x.begin(), x.end()
#define sz(x) int(x.size())

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t;
    cin >> t;
    while (t--) {
        ll n;
        cin >> n;
        ll ans = 0;
        for (ll i = 1; i <= n; i++) {
            ans += i * (n - i + 1);
        }
        for (ll i = 1; i < n; i++) {
            ll u, v;
            cin >> u >> v;
            ll a = max(u, v);
            ll b = min(u, v);
            ans -= b * (n - a + 1);
        }
        cout << ans << endl;
    }
    return 0;
}

Time Complexity: O(N^2)
Space Complexity: O(1)"
StarCoder,codenet,C++,Python,s324508229.py,"n = int(raw_input())
cnt = [[0 for i in range(10)] for j in range(10)]
for i in range(1, n+1):
    a = i%10
    b = i/10
    cnt[a][b] += 1
ans = 0
for i in range(1, 10):
    for j in range(1, 10):
        ans += cnt[i][j]*cnt[j][i]
print ans","n = int(input())
cnt = [[0 for i in range(10)] for j in range(10)]
for i in range(1, n+1):
    a = i%10
    b = i
    while b >= 10:
        b //= 10
    cnt[b][a] += 1
ans = 0
for i in range(1, 10):
    for j in range(1, 10):
        ans += cnt[i][j]*cnt[j][i]
print(ans)"
StarCoder,codenet,C++,Python,s698205968.py,"while True:
    m, f, r = [int(x) for x in raw_input().split()]
    if m == -1 and f == -1:
        break
    if m == -1 or f == -1:
        print ""F""
    elif m + f >= 80:
        print ""A""
    elif m + f >= 65:
        print ""B""
    elif m + f >= 50 or r >= 50:
        print ""C""
    elif m + f >= 30:
        print ""D""
    else:
        print ""F""","while True:
    m, f, r = [int(x) for x in input().split()]
    if m == -1 and f == -1:
        break
    if m == -1 or f == -1:
        print(""F"")
    elif m + f >= 80:
        print(""A"")
    elif m + f >= 65:
        print(""B"")
    elif m + f >= 50 or r >= 50:
        print(""C"")
    elif m + f >= 30:
        print(""D"")
    else:
        print(""F"")"
StarCoder,codenet,C++,Python,s469969316.py,"while True:
    input = raw_input()
    if input == '.':
        break
    a = [0, 1, 2]
    cnt = 0
    for i in range(3):
        for j in range(3):
            for k in range(3):
                a[0] = i
                a[1] = j
                a[2] = k
                ss = input
                for c in ss:
                    if c == 'P':
                        c = str(a[0])
                    if c == 'Q':
                        c = str(a[1])
                    if c == 'R':
                        c = str(a[2])
                if parse(ss) == 2:
                    cnt += 1
    print cnt

def parse(ss):
    it = 0
    def Not(x):
        return 2-x
    def And(x, y):
        if x*y == 0:
            return 0
        if x == 2 and y == 2:
            return 2
        return 1
    def Or(x, y):
        if x == 2 or y == 2:
            return 2
        if x == 1 or y == 1:
            return 1
        return 0
    def parse():
        c = ss[it]
        if '0' <= c and c <= '2':
            return ord(c)-ord('0')
        if c == '-':
            return Not(parse())
        x = parse()
        c = ss[it+1]
        y = parse()
        it += 2
        return c == '*' and And(x, y) or Or(x, y)
    return parse()

def main():
    while True:
        input = raw_input()
        if input == '.':
            break
        a = [0, 1, 2]
        cnt = 0
        for i in range(3):
            for j in range(3):
                for k in range(3):
                    a[0] = i
                    a[1] = j
                    a[2] = k
                    ss = input
                    for c in ss:
                        if c == 'P':
                            c = str(a[0])
                        if c == 'Q':
                            c = str(a[1])
                        if c == 'R':
                            c = str(a[2])
                    if parse(ss) == 2:
                        cnt += 1
        print cnt

if __name__ == '__main__':
    main()","while True:
    input = input()
    if input == '.':
        break
    a = [0, 1, 2]
    cnt = 0
    for i in range(3):
        for j in range(3):
            for k in range(3):
                a[0] = i
                a[1] = j
                a[2] = k
                ss = input
                for c in ss:
                    if c == 'P':
                        c = str(a[0])
                    if c == 'Q':
                        c = str(a[1])
                    if c == 'R':
                        c = str(a[2])
                if parse(ss) == 2:
                    cnt += 1
    print(cnt)

def parse(ss):
    it = 0
    def Not(x):
        return 2-x
    def And(x, y):
        if x*y == 0:
            return 0
        if x == 2 and y == 2:
            return 2
        return 1
    def Or(x, y):
        if x == 2 or y == 2:
            return 2
        if x == 1 or y == 1:
            return 1
        return 0
    def parse():
        c = ss[it]
        if '0' <= c and c <= '2':
            return ord(c)-ord('0')
        if c == '-':
            return Not(parse())
        x = parse()
        c = ss[it+1]
        y = parse()
        it += 2
        return c == '*' and And(x, y) or Or(x, y)
    return parse()

def main():
    while True:
        input = input()
        if input == '.':
            break
        a = [0, 1, 2]
        cnt = 0
        for i in range(3):
            for j in range(3):
                for k in range(3):
                    a[0] = i
                    a[1] = j
                    a[2] = k
                    ss = input
                    for c in ss:
                        if c == 'P':
                            c = str(a[0])
                        if c == 'Q':
                            c = str(a[1])
                        if c == 'R':
                            c = str(a[2])
                    if parse(ss) == 2:
                        cnt += 1
        print(cnt)

if __name__ == '__main__':
    main()"
StarCoder,codenet,C++,Python,s778828888.py,"n, m, x = map(int, raw_input().split())
a = [0] * (n + 1)
for i in range(m):
    a[int(raw_input())] = 1

ansl = ansr = 0
for i in range(x, n + 1):
    ansr += a[i]
for i in range(x):
    ansl += a[i]

print min(ansl, ansr)","n, m, x = map(int, input().split())
a = [0] * (n + 1)
inputs = list(input().split())
for i in range(m):
    a[int(inputs[i])] = 1

ansl = ansr = 0
for i in range(x, n + 1):
    ansr += a[i]
for i in range(x):
    ansl += a[i]

print(min(ansl, ansr))"
StarCoder,codenet,C++,Python,s501065052.py,"import sys

N = int(raw_input().strip())
mem = [0] * (N + 1)
for i in range(1, N + 1):
    mem[i] = int(raw_input().strip())

maxcnt = 1
cnt = 1
for i in range(1, N):
    if mem[i] < mem[i + 1]:
        cnt += 1
    else:
        maxcnt = max(maxcnt, cnt)
        cnt = 1
if i == N - 1:
    maxcnt = max(maxcnt, cnt)

print N - maxcnt","import sys

N = int(input().strip())
mem = [0] * (N + 1)
for i in range(1, N + 1):
    mem[i] = int(input().strip())

maxcnt = 1
cnt = 1
for i in range(1, N):
    if mem[i] < mem[i + 1]:
        cnt += 1
    else:
        maxcnt = max(maxcnt, cnt)
        cnt = 1
if i == N - 1:
    maxcnt = max(maxcnt, cnt)

print(N - maxcnt)"
StarCoder,codenet,C++,Python,s589139355.py,"import sys

a = int(raw_input().strip())
for i in xrange(a):
    taro, hana = raw_input().strip().split(' ')
    lt = len(taro)
    lh = len(hana)
    if lt > lh:
        l = lt
    else:
        l = lh
    tt = 0
    hh = 0
    if taro > hana:
        t = t + 3
    elif hana > taro:
        h = h + 3
    elif hana == taro:
        h = h + 1
        t = t + 1
print t, h","import sys

a = int(input().strip())
t = 0
h = 0
for i in range(a):
    taro, hana = input().strip().split()
    lt = len(taro)
    lh = len(hana)
    if lt > lh:
        l = lt
    else:
        l = lh
    tt = 0
    hh = 0
    if taro > hana:
        t = t + 3
    elif hana > taro:
        h = h + 3
    elif hana == taro:
        h = h + 1
        t = t + 1
print(t, h)"
StarCoder,codenet,C++,Python,s726701284.py,"s = raw_input()
for i in range(97,123):
	if s.count(chr(i)) == 0:
		print chr(i)
		break
else:
	print ""None""","s = input()
for i in range(97,123):
	if s.count(chr(i)) == 0:
		print(chr(i))
		break
else:
	print(""None"")"
StarCoder,codenet,C++,Python,s102850254.py,"import sys

def main():
    d = int(raw_input())
    for i in range(d):
        n = int(raw_input())
        if n == 1:
            print ""#""
        else:
            for i in range(n+2):
                map = ['#']*(n+2)
                map[0] = map[n+1] = '.'
                for j in range(n):
                    map[j+1] = '#' if j+1 == n-1 else '.'
                for j in range(n+2):
                    print map[j],
                print
        if i!= d-1:
            print

if __name__ == ""__main__"":
    main()","import sys

def main():
    d = int(input())
    for i in range(d):
        n = int(input())
        if n == 1:
            print(""#"")
        else:
            for i in range(n+2):
                map = ['#']*(n+2)
                map[0] = map[n+1] = '.'
                for j in range(n):
                    map[j+1] = '#' if j+1 == n-1 else '.'
                for j in range(n+2):
                    print(map[j])
                print
        if i!= d-1:
            print

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,C++,Python,s680076196.py,"a,b,c,d = map(int,input().split())
print((a-c)*(b-d))","a,b = map(int,input().split())
c,d = map(int,input().split())
print((a-c)*(b-d))"
StarCoder,codenet,C++,Python,s593850729.py,"A, B, C, X = map(int, input().split())

cnt = 0
for a in range(A+1):
    for b in range(B+1):
        for c in range(C+1):
            total = 500*a + 100*b + 50*c
            if total == X:
                cnt += 1

print(cnt)","A = int(input())
B = int(input())
C = int(input())
X = int(input())

cnt = 0
for a in range(A+1):
    for b in range(B+1):
        for c in range(C+1):
            total = 500*a + 100*b + 50*c
            if total == X:
                cnt += 1

print(cnt)"
StarCoder,codenet,C++,Python,s209567491.py,"import sys

def main():
    N, D, X = map(int, sys.stdin.readline().strip().split())
    A = list(map(int, sys.stdin.readline().strip().split()))
    num_of_chocolate = 0
    for i in range(N):
        days = 0
        counter = 0
        for j in range(D):
            days = j * A[i] + 1
            if days <= D:
                counter += 1
            else:
                break
        num_of_chocolate += counter
    num_of_chocolate += X
    print(num_of_chocolate)

if __name__ == ""__main__"":
    main()","import sys

def main():
    N = int(sys.stdin.readline().strip())
    D, X = map(int, sys.stdin.readline().strip().split())
    A = []
    for i in range(N):
        A.append(int(sys.stdin.readline().strip()))
    num_of_chocolate = 0
    for i in range(N):
        days = 0
        counter = 0
        for j in range(D):
            days = j * A[i] + 1
            if days <= D:
                counter += 1
            else:
                break
        num_of_chocolate += counter
    num_of_chocolate += X
    print(num_of_chocolate)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,C++,Python,s345215315.py,"import sys

h,w = map(int,input().split())
s = [input() for _ in range(h)]
ans = 20

def dfs(x,y,cnt):
    global ans
    if cnt > ans:return
    if x == h-1:
        ans = min(ans,cnt)
        return
    for i in range(8):
        nx = x + dx[i]
        ny = y + dy[i]
        if nx < 0 or nx >= h or ny < 0 or ny >= w:continue
        if s[nx][ny]!= 'X':continue
        c = True
        while c and s[nx][ny] == 'X':
            s[nx][ny] = '.'
            nx += dx[i]
            ny += dy[i]
            if nx < 0 or nx >= h or ny < 0 or ny >= w:
                if nx >= h:ans = min(ans, cnt+1)
                c = False
        if c:dfs(nx,ny,cnt+1)
        while nx!= x or ny!= y:
            nx -= dx[i]
            ny -= dy[i]
            s[nx][ny] = 'X'
        s[x][y] = '.'

sx,sy = -1,-1
for i in range(h):
    for j in range(w):
        if s[i][j] == 'O':
            sx,sy = i,j
            s[i][j] = '.'
            break
dfs(sx,sy,0)
if ans == 20:print(-1)
else:print(ans)","import sys

h = 19
w = 15
dx = [0, 1, 0, -1, 1, 1, -1, -1]
dy = [1, 0, -1, 0, 1, -1, 1, -1]
s = [input() for _ in range(h)]
ans = 20

def dfs(x,y,cnt):
    global ans
    if cnt > ans:return
    if x == h-1:
        ans = min(ans,cnt)
        return
    for i in range(8):
        nx = x + dx[i]
        ny = y + dy[i]
        if nx < 0 or nx >= h or ny < 0 or ny >= w:continue
        if s[nx][ny]!= 'X':continue
        c = True
        while c and s[nx][ny] == 'X':
            s[nx] = s[i][:ny] + '.' + s[i][ny + 1:]
            nx += dx[i]
            ny += dy[i]
            if nx < 0 or nx >= h or ny < 0 or ny >= w:
                if nx >= h:ans = min(ans, cnt+1)
                c = False
        if c:dfs(nx,ny,cnt+1)
        while nx!= x or ny!= y:
            nx -= dx[i]
            ny -= dy[i]
            s[nx] = s[i][:ny] + 'X' + s[i][ny + 1:]
        s[x] = s[i][:y] + '.' + s[i][y + 1:]

sx,sy = -1,-1
for i in range(h):
    for j in range(w):
        if s[i][j] == 'O':
            sx,sy = i,j
            s[i] = s[i][:j] + '.' + s[i][j + 1:]
            break
dfs(sx,sy,0)
if ans == 20:print(-1)
else:print(ans)"
StarCoder,codenet,C++,Python,s097779718.py,"A, B = map(int, raw_input().split())

print (A*B) / gcd(A, B)","def Euclid(x, y):
    if x < y:
        x, y = y, x

    if x % y == 0:
        return y
    return Euclid(y, x % y)

A, B = map(int, input().split())

print((A*B) // Euclid(A, B))"
StarCoder,codenet,C++,Python,s353226283.py,"n, k = map(int, input().split())
vec = list(map(int, input().split()))
vec.sort()
ans = 1000000001
for i in range(n - k + 1):
    diff = vec[i + k - 1] - vec[i]
    if diff < ans:
        ans = diff
print(ans)","n, k = map(int, input().split())
vec = []
for i in range(n):
    vec.append(int(input()))
vec.sort()
ans = 1000000001
for i in range(n - k + 1):
    diff = vec[i + k - 1] - vec[i]
    if diff < ans:
        ans = diff
print(ans)"
StarCoder,codenet,C++,Python,s438448326.py,"import sys

A, B, C, D, E, F = map(int, sys.stdin.readline().split())

m1 = 0
m2 = 0
maxD = 0.0
for i in range(F // (100 * A) + 1):
    for j in range(F // (100 * B) + 1):
        for k in range(F // (C) + 1):
            for l in range(F // (D) + 1):
                mA = 100 * A * i
                mB = 100 * B * j
                mC = C * k
                mD = D * l
                if (mA + mB) * E / 100 < mD + mC:
                    break
                d = (mD + mC) / (mA + mB + mC + mD)
                if d > maxD:
                    m1 = mA + mB + mC + mD
                    m2 = mC + mD
                    maxD = d

if m1 == 0:
    m1 = 100 * A
print(m1, m2)","import sys

A, B, C, D, E, F = map(int, sys.stdin.readline().split())

m1 = 0
m2 = 0
maxD = 0.0
for i in range(F // (100 * A) + 1):
    mA = 100 * A * i
    for j in range(0, (F - mA) // (100*B) + 1):
        mB = 100 * B * j
        for k in range(0, (F - mA - mB) // C + 1):
            mC = C * k
            for l in range(0, (F - mA - mB - mC) // D + 1):
                mD = D * l
                if (mA + mB) * E / 100 < mD + mC:
                    break
                if mA + mB + mC + mD == 0:
                    continue
                d = (mD + mC) / (mA + mB + mC + mD)
                if d > maxD:
                    m1 = mA + mB + mC + mD
                    m2 = mC + mD
                    maxD = d

if m1 == 0:
    m1 = 100 * A
print(m1, m2)"
StarCoder,codenet,C++,Python,s049366196.py,"import sys
import math

def is_prime(x):
    for i in range(2, int(math.sqrt(x)) + 1):
        if x % i == 0:
            return False
    return True

def solve(N):
    ans = 1
    for i in range(2, N + 1):
        if is_prime(i):
            cnt = 0
            while N:
                cnt += N // i
                N //= i
            ans *= cnt + 1
            ans %= mod
    return ans

if __name__ == '__main__':
    N = int(sys.stdin.readline())
    print(solve(N))","import sys
import math

mod = 10**9 + 7
def is_prime(x):
    for i in range(2, int(math.sqrt(x)) + 1):
        if x % i == 0:
            return False
    return True

def solve(N):
    ans = 1
    for i in range(2, N + 1):
        if is_prime(i):
            NN = N
            cnt = 0
            while NN:
                cnt += NN // i
                NN //= i
            ans *= cnt + 1
            ans %= mod
    return ans

if __name__ == '__main__':
    N = int(sys.stdin.readline())
    print(solve(N))"
StarCoder,codenet,C++,Python,s754383079.py,"import sys
a=raw_input()
b=raw_input()
n=len(a)
m=len(b)
ansimport sys
a=raw_input()
b=raw_input()
n=len(a)
m=len(b)
ans
StarCoder,codenet,C++,Python,s798006876.py,"while True:
    m, nmi, nma = map(int, input().split())
    if nmi == 0:
        break
    data = list(map(int, input().split()))
    ma = 0
    ans = 0
    for i in range(nmi - 1, nma):
        if ma <= data[i] - data[i + 1]:
            ans = i + 1
            ma = data[i] - data[i + 1]
    print(ans)","while True:
    m, nmi, nma = map(int, input().split())
    if nmi == 0:
        break
    data = [0] * (m + 1)
    for i in range(m):
        data[i] = int(input())
    ma = 0
    ans = 0
    for i in range(nmi - 1, nma):
        if ma <= data[i] - data[i + 1]:
            ans = i + 1
            ma = data[i] - data[i + 1]
    print(ans)"
StarCoder,codenet,C++,Python,s855845406.py,"N, A = map(int, input().split())
print(N * N - A)","N = int(input())
A = int(input())
print(N * N - A)"
StarCoder,codenet,C++,Python,s968402497.py,"import sys

tc,n,m=map(int,input().split())
if n>m:
    n,m=m,n
for i in range(1,m+1):
    if i*tc>=n and i*tc<=m:
        print(""OK"")
        break
else:
    print(""NG"")","import sys

tc = int(input())
n,m = map(int,input().split())
if n>m:
    n,m=m,n
for i in range(1,m+1):
    if i*tc>=n and i*tc<=m:
        print(""OK"")
        break
else:
    print(""NG"")"
StarCoder,codenet,C++,Python,s970063640.py,"n = int(input())
a = int(input())
s = list(map(int, input().split()))
s.sort()
print(sum(s[n-a:]))","n, a = map(int, input().split())
s = list(map(int, input().split()))
s.sort()
print(sum(s[n-a:]))"
StarCoder,codenet,C++,Python,s864662146.py,"N = int(input())
A = [int(input()) for i in range(N)]

m = min(A)
M = max(A)

print(M - m)","N = int(input())
A = list(map(int, input().split()))

m = min(A)
M = max(A)

print(M - m)"
StarCoder,codenet,C++,Python,s789380051.py,"import sys
import math

MOD = 1000000007

def mod_pow(x, n):
    ans = 1
    while n > 0:
        if n & 1 == 1:
            ans = ans * x % MOD
        x = x * x % MOD
        n >>= 1
    return ans

def comb_s(n, r):
    tmp_n = 1
    tmp_d = 1
    ans = 1
    for i in range(1, r+1):
        tmp_n = (tmp_n * (n+1-i)) % MOD
        tmp_d = (tmp_d * i) % MOD
        ans = tmp_n * mod_pow(tmp_d, MOD-2)
    return ans

def main():
    n = int(input())
    a = int(input())
    b = int(input())
    ans = mod_pow(2, n)
    ans -= 1
    tmp_nd = comb_s(n, a)
    ans = (ans - tmp_nd) % MOD
    while ans < 0:
        ans += MOD
    tmp_nd = comb_s(n, b)
    ans = (ans - tmp_nd) % MOD
    while ans < 0:
        ans += MOD
    print(ans)

if __name__ == '__main__':
    main()","import sys
import math

MOD = 1000000007

def mod_pow(x, n):
    ans = 1
    while n > 0:
        if n & 1 == 1:
            ans = ans * x % MOD
        x = x * x % MOD
        n >>= 1
    return ans

def comb_s(n, r):
    tmp_n = 1
    tmp_d = 1
    ans = 1
    for i in range(1, r+1):
        tmp_n = (tmp_n * (n+1-i)) % MOD
        tmp_d = (tmp_d * i) % MOD
        ans = tmp_n * mod_pow(tmp_d, MOD-2)
    return ans

def main():
    n, a, b = map(int, input().split())
    ans = mod_pow(2, n)
    ans -= 1
    tmp_nd = comb_s(n, a)
    ans = (ans - tmp_nd) % MOD
    while ans < 0:
        ans += MOD
    tmp_nd = comb_s(n, b)
    ans = (ans - tmp_nd) % MOD
    while ans < 0:
        ans += MOD
    print(ans)

if __name__ == '__main__':
    main()"
StarCoder,codenet,C++,Python,s814403222.py,"import sys

def main():
    while True:
        try:
            n = int(input())
            if n == 0:
                break
            v = []
            for i in range(n):
                v.append([0, input()])
            for i in range(n):
                m = int(input())
                for j in range(m):
                    a = int(input())
                    v[i][0] += n - len(d[a])
                    for k in d[a]:
                        v[k][0] -= 1
                    d[a].append(i)
            v.sort()
            print(v[0][0], v[0][1])
        except EOFError:
            break

if __name__ == '__main__':
    d = [[] for i in range(33)]
    main()","import sys

def main():
    while True:
        try:
            n = int(input())
            if n == 0:
                break
            v = []
            for i in range(n):
                inputs = list(input().split())
                v.append([0, inputs[0]])
                m = int(inputs[1])
                for j in range(m):
                    a = int(inputs[j + 2])
                    v[i][0] += n - len(d[a])
                    for k in d[a]:
                        v[k][0] -= 1
                    d[a].append(i)
            v.sort()
            print(v[0][0], v[0][1])
        except EOFError:
            break

if __name__ == '__main__':
    d = [[] for i in range(33)]
    main()"
StarCoder,codenet,C++,Python,s003531724.py,"from sys import stdin
n, m = map(int, stdin.readline().strip().split())

graph = [[] for i in range(n + 1)]

for i in range(m):
    a, b = map(int, stdin.readline().strip().split())
    graph[a].append(b)
    graph[b].append(a)

def dfs(node, color):
    visited[node] = True
    color[node] = 1
    for i in graph[node]:
        if not visited[i]:
            dfs(i, color)
        else:
            if color[i] == color[node]:
                return False
    return True

ans = 0
for i in range(1, n + 1):
    if not visited[i]:
        color = [0] * (n + 1)
        if dfs(i, color):
            ans += 1
        else:
            ans += 2

print(ans)","from sys import stdin
n, m = map(int, stdin.readline().strip().split())

graph = [[] for i in range(n + 1)]

for i in range(m):
    a, b = map(int, stdin.readline().strip().split())
    graph[a].append(b)
    graph[b].append(a)

def dfs(node, color):
    visited[node] = True
    color[node] = 1
    for i in graph[node]:
        if not visited[i]:
            dfs(i, color)
        else:
            if color[i] == color[node]:
                return False
    return True

ans = 0
for i in range(1, n + 1):
    visited = [False] * (n + 1)
    if not visited[i]:
        color = [0] * (n + 1)
        if dfs(i, color):
            ans += 1
        else:
            ans += 2

print(ans)"
StarCoder,codenet,C++,Python,s367896206.py,"class Cube:
    def __init__(self):
        self.f = [0, 0, 0, 0, 0, 0]

    def roll_z(self):
        t = self.f[1]
        self.f[1] = self.f[2]
        self.f[2] = self.f[4]
        self.f[4] = self.f[3]
        self.f[3] = t

    def roll_y(self):
        t = self.f[0]
        self.f[0] = self.f[2]
        self.f[2] = self.f[5]
        self.f[5] = self.f[3]
        self.f[3] = t

    def roll_x(self):
        t = self.f[0]
        self.f[0] = self.f[1]
        self.f[1] = self.f[5]
        self.f[5] = self.f[4]
        self.f[4] = t

    def roll(self, i, j, k, l):
        t = self.f[i]
        self.f[i] = self.f[j]
        self.f[j] = self.f[k]
        self.f[k] = self.f[l]
        self.f[l] = t

    def __eq__(self, other):
        for i in range(6):
            if self.f[i]!= other.f[i]:
                return False
        return True

    def equal(self, other):
        for i in range(6):
            for j in range(4):
                if self == other:
                    return True
                self.roll_z()
            if i % 2 == 0:
                self.roll_y()
            else:
                self.roll_x()
        return False

c1 = Cube()
c2 = Cube()

for i in range(6):
    c1.f[i] = int(input())
for i in range(6):
    c2.f[i] = int(input())

if c1.equal(c2):
    print(""Yes"")
else:
    print(""No"")","class Cube:
    def __init__(self):
        self.f = [0, 0, 0, 0, 0, 0]

    def roll_z(self):
        t = self.f[1]
        self.f[1] = self.f[2]
        self.f[2] = self.f[4]
        self.f[4] = self.f[3]
        self.f[3] = t

    def roll_y(self):
        t = self.f[0]
        self.f[0] = self.f[2]
        self.f[2] = self.f[5]
        self.f[5] = self.f[3]
        self.f[3] = t

    def roll_x(self):
        t = self.f[0]
        self.f[0] = self.f[1]
        self.f[1] = self.f[5]
        self.f[5] = self.f[4]
        self.f[4] = t

    def roll(self, i, j, k, l):
        t = self.f[i]
        self.f[i] = self.f[j]
        self.f[j] = self.f[k]
        self.f[k] = self.f[l]
        self.f[l] = t

    def __eq__(self, other):
        for i in range(6):
            if self.f[i]!= other.f[i]:
                return False
        return True

    def equal(self, other):
        for i in range(6):
            for j in range(4):
                if self == other:
                    return True
                self.roll_z()
            if i % 2 == 0:
                self.roll_y()
            else:
                self.roll_x()
        return False

c1 = Cube()
c2 = Cube()

c1.f = list(map(int, input().split()))
c2.f = list(map(int, input().split()))

if c1.equal(c2):
    print(""Yes"")
else:
    print(""No"")"
StarCoder,codenet,C++,Python,s023282516.py,"import sys

S = sys.stdin.readline().strip()

# 後ろから解くかわりにすべての文字列を「左右反転」する
S = S[::-1]
for i in range(4):
    divide[i] = divide[i][::-1]

# 端から切っていく
can = True
for i in range(len(S)):
    can2 = False
    for j in range(4):
        d = divide[j]
        if S[i:i+len(d)] == d:
            can2 = True
            i += len(d)
    if not can2:
        can = False
        break

if can:
    print(""YES"")
else:
    print(""NO"")","import sys

divide = [""dream"", ""dreamer"", ""erase"", ""eraser""]

S = sys.stdin.readline().strip()

# 後ろから解くかわりにすべての文字列を「左右反転」する
S = S[::-1]
for i in range(4):
    divide[i] = divide[i][::-1]

# 端から切っていく
can = True
i = 0
while i < len(S):
    can2 = False
    for j in range(4):
        d = divide[j]
        if S[i:i+len(d)] == d:
            can2 = True
            i += len(d)
            break
    if not can2:
        can = False
        break

if can:
    print(""YES"")
else:
    print(""NO"")"
StarCoder,codenet,C++,Python,s575600334.py,"a,b = map(int, raw_input().split())
print(bin(a&b)[2:].zfill(32))
print(bin(a|b)[2:].zfill(32))
print(bin(a^b)[2:].zfill(32))","a,b = map(int, input().split())
print(bin(a&b)[2:].zfill(32))
print(bin(a|b)[2:].zfill(32))
print(bin(a^b)[2:].zfill(32))"
StarCoder,codenet,C++,Python,s285212630.py,"import sys
from collections import defaultdict

class UnionFind:
    def __init__(self, n):
        self.n = n
        self.parents = [-1] * n

    def find(self, x):
        if self.parents[x] < 0:
            return x
        else:
            self.parents[x] = self.find(self.parents[x])
            return self.parents[x]

    def union(self, x, y):
        x = self.find(x)
        y = self.find(y)
        if x == y:
            return
        if self.parents[x] > self.parents[y]:
            x, y = y, x
        self.parents[x] += self.parents[y]
        self.parents[y] = x

    def size(self, x):
        return -self.parents[self.find(x)]

    def same(self, x, y):
        return self.find(x) == self.find(y)

    def members(self, x):
        root = self.find(x)
        return [i for i in range(self.n) if self.find(i) == root]

    def roots(self):
        return [i for i in range(self.n) if self.parents[i] < 0]

    def group_count(self):
        return len(self.roots())

    def all_group_members(self):
        group_members = defaultdict(list)
        for member in range(self.n):
            group_members[self.find(member)].append(member)
        return group_members.values()

def main():
    N = int(sys.stdin.readline())
    G = defaultdict(list)
    for _ in range(N-1):
        a, b, c = map(int, sys.stdin.readline().split())
        G[a].append((b, c))
        G[b].append((a, c))
    uf = UnionFind(N)
    for i in range(N):
        uf.union(i, i)
    for i in range(N):
        for j in G[i]:
            uf.union(i, j[0])
    Q, K = map(int, sys.stdin.readline().split())
    K -= 1
    for _ in range(Q):
        x, y = map(int, sys.stdin.readline().split())
        x -= 1
        y -= 1
        print(uf.size(x) + uf.size(y) - 2 * uf.size(uf.find(x)))

if __name__ == '__main__':
    main()","import sys
from collections import defaultdict

class UnionFind:
    def __init__(self, n):
        self.n = n
        self.parents = [-1] * n

    def find(self, x):
        if self.parents[x] < 0:
            return x
        else:
            self.parents[x] = self.find(self.parents[x])
            return self.parents[x]

    def union(self, x, y):
        x = self.find(x)
        y = self.find(y)
        if x == y:
            return
        if self.parents[x] > self.parents[y]:
            x, y = y, x
        self.parents[x] += self.parents[y]
        self.parents[y] = x

    def size(self, x):
        return -self.parents[self.find(x)]

    def same(self, x, y):
        return self.find(x) == self.find(y)

    def members(self, x):
        root = self.find(x)
        return [i for i in range(self.n) if self.find(i) == root]

    def roots(self):
        return [i for i in range(self.n) if self.parents[i] < 0]

    def group_count(self):
        return len(self.roots())

    def all_group_members(self):
        group_members = defaultdict(list)
        for member in range(self.n):
            group_members[self.find(member)].append(member)
        return group_members.values()

def main():
    N = int(sys.stdin.readline())
    G = defaultdict(list)
    for _ in range(N-1):
        a, b, c = map(int, sys.stdin.readline().split())
        G[a].append((b, c))
        G[b].append((a, c))
    uf = UnionFind(N)
    for i in range(N):
        uf.union(i, i)
    for i in range(N):
        for j in G[i]:
            uf.union(i, j[0])
    Q, K = map(int, sys.stdin.readline().split())
    K -= 1
    for _ in range(Q):
        x, y = map(int, sys.stdin.readline().split())
        x -= 1
        y -= 1
        print(uf.size(x) + uf.size(y) - 2 * uf.size(uf.find(x)))

if __name__ == '__main__':
    main()"
StarCoder,codenet,C++,Python,s612033342.py,"import sys

def pow2(a):
  ret = 1
  for i in range(a): ret *= 2
  return ret

def count(hw, a, b):
  sum = 0
  for i in range(len(hw)):
    for j in range(len(hw[0])):
      if a >> i & 1 and b >> j & 1 and hw[i][j] == 1: sum += 1
  return sum

h, w, k = map(int, sys.stdin.readline().split())
hw = [[0] * w for i in range(h)]
for i in range(h):
  hw[i] = list(map(int, sys.stdin.readline().split()))

sum = 0
for i in range(pow2(h)):
  for j in range(pow2(w)):
    if count(hw, i, j) == k: sum += 1
print(sum)","import sys

def pow2(a):
  ret = 1
  for i in range(a): ret *= 2
  return ret

def count(hw, a, b):
  sum = 0
  for i in range(len(hw)):
    for j in range(len(hw[0])):
      if a >> i & 1 and b >> j & 1 and hw[i][j] == 1: sum += 1
  return sum

h, w, k = map(int, sys.stdin.readline().split())
hw = [[0] * w for i in range(h)]
for i in range(h):
    row = input()
    for j in range(w):
        if row[j] == '#':
            hw[i][j] = 1

sum = 0
for i in range(pow2(h)):
  for j in range(pow2(w)):
    if count(hw, i, j) == k: sum += 1
print(sum)"
StarCoder,codenet,C++,Python,s350755479.py,"from collections import *

class Node:
    def __init__(self, x, y, id):
        self.x = x
        self.y = y
        self.id = id

class Edge:
    def __init__(self, u, v, val):
        self.u = u
        self.v = v
        self.val = val

    def __lt__(self, rhs):
        return self.val < rhs.val

def cmp1(a, b):
    return a.x < b.x

def cmp2(a, b):
    return a.y < b.y

def init():
    for i in range(n + 1):
        par[i] = i

def findpar(x):
    if par[x] == x:
        return x
    return findpar(par[x])

def unite(x, y):
    x = findpar(x)
    y = findpar(y)
    if x == y:
        return
    par[x] = y

n = int(input())

node = [Node(0, 0, 0)] * (n + 1)
par = [0] * (n + 1)

init()

for i in range(1, n + 1):
    x, y = map(int, input().split())
    node[i] = Node(x, y, i)

node.sort(key = cmp1)

cnt = 0
for i in range(2, n + 1):
    e[cnt] = Edge(node[i - 1].id, node[i].id, node[i].x - node[i - 1].x)
    cnt += 1

node.sort(key = cmp2)
for i in range(2, n + 1):
    e[cnt] = Edge(node[i - 1].id, node[i].id, node[i].y - node[i - 1].y)
    cnt += 1

e.sort()

ans = 0
for i in range(cnt):
    u, v, val = e[i].u, e[i].v, e[i].val
    if findpar(u) == findpar(v):
        continue
    unite(u, v)
    ans += val

print(ans)","from collections import *

class Node:
    def __init__(self, x, y, id):
        self.x = x
        self.y = y
        self.id = id

class Edge:
    def __init__(self, u, v, val):
        self.u = u
        self.v = v
        self.val = val

    def __lt__(self, rhs):
        return self.val < rhs.val

def cmp1(a, b):
    return a.x < b.x

def cmp2(a, b):
    return a.y < b.y

def init():
    for i in range(n + 1):
        par[i] = i

def findpar(x):
    if par[x] == x:
        return x
    return findpar(par[x])

def unite(x, y):
    x = findpar(x)
    y = findpar(y)
    if x == y:
        return
    par[x] = y

n = int(input())

node = [Node(0, 0, 0)] * (n + 1)
par = [0] * (n + 1)

init()

for i in range(1, n + 1):
    x, y = map(int, input().split())
    node[i] = Node(x, y, i)

node.sort(key = cmp1)

cnt = 0
for i in range(2, n + 1):
    e[cnt] = Edge(node[i - 1].id, node[i].id, node[i].x - node[i - 1].x)
    cnt += 1

node.sort(key = cmp2)
for i in range(2, n + 1):
    e[cnt] = Edge(node[i - 1].id, node[i].id, node[i].y - node[i - 1].y)
    cnt += 1

e.sort()

ans = 0
for i in range(cnt):
    u, v, val = e[i].u, e[i].v, e[i].val
    if findpar(u) == findpar(v):
        continue
    unite(u, v)
    ans += val

print(ans)"
StarCoder,codenet,C++,Python,s575944217.py,"n = int(input())
ans = [0]*n
for i in range(n-1):
    a = int(input())
    a -= 1
    ans[a] += 1
for i in ans:
    print(i)","n = int(input())
ans = [0]*n
inputs = list(input().split())
for i in range(n-1):
    a = int(inputs[i])
    a -= 1
    ans[a] += 1
for i in ans:
    print(i)"
StarCoder,codenet,C++,Python,s028542090.py,"import sys

def main():
    k = int(sys.stdin.readline())
    a = [0] * k
    for i in range(k):
        a[i] = int(sys.stdin.readline())

    max = 3
    min = 2

    if a[k - 1]!= 2:
        print(-1)
        return

    for i in range(k - 2, -1, -1):
        if a[i] > max:
            print(-1)
            return
        else:
            max = ((max / a[i]) + 1) * a[i] - 1
            if min % a[i]!= 0:
                min = ((min / a[i]) + 1) * a[i]

        if max <= min:
            print(-1)
            return

    print(min, max)

if __name__ == ""__main__"":
    main()","import sys

def main():
    k = int(sys.stdin.readline())
    a = list(map(int, input().split()))

    max = 3
    min = 2

    if a[k - 1]!= 2:
        print(-1)
        return

    for i in range(k - 2, -1, -1):
        if a[i] > max:
            print(-1)
            return
        else:
            max = ((max // a[i]) + 1) * a[i] - 1
            if min % a[i]!= 0:
                min = ((min // a[i]) + 1) * a[i]

        if max <= min:
            print(-1)
            return

    print(min, max)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,C++,Python,s990022717.py,"n,k,x,y=map(int,input().split())
sum=0
for i in range(1,n+1):
    if i>k:
        sum+=y
    else:
        sum+=x
print(sum)","n,k,x,y = int(input()),int(input()),int(input()),int(input())
sum=0
for i in range(1,n+1):
    if i>k:
        sum+=y
    else:
        sum+=x
print(sum)"
StarCoder,codenet,C++,Python,s930643405.py,"n,k=map(int,input().split())
d=[0]*10
for i in range(k):
    d[int(input())]=1
while True:
    x=n
    hantei=True
    while x:
        if d[x%10]:
            hantei=False
            break
        x//=10
    if hantei:
        print(n)
        break
    n+=1","n,k=map(int,input().split())
d=[0]*10
inputs = list(input().split())
for i in range(k):
    d[int(inputs[i])]=1
while True:
    x=n
    hantei=True
    while x:
        if d[x%10]:
            hantei=False
            break
        x//=10
    if hantei:
        print(n)
        break
    n+=1"
StarCoder,codenet,C++,Python,s812763520.py,"n = int(input())
a, b, c = input().split()
ans = 0
for i in range(n):
    if a[i] == b[i] == c[i]:
        pass
    elif a[i] == b[i] or b[i] == c[i] or a[i] == c[i]:
        ans += 1
    else:
        ans += 2
print(ans)","n = int(input())
a = input()
b = input()
c = input()
ans = 0
for i in range(n):
    if a[i] == b[i] == c[i]:
        pass
    elif a[i] == b[i] or b[i] == c[i] or a[i] == c[i]:
        ans += 1
    else:
        ans += 2
print(ans)"
StarCoder,codenet,C++,Python,s150958471.py,"train = [int(x) for x in input().split()]
bus = [int(x) for x in input().split()]

print(min(train[0], train[1]) + min(bus[0], bus[1]))","train = [0, 0]
bus = [0, 0]

train[0], train[1] = int(input()), int(input())
bus[0], bus[1] = int(input()), int(input())

print(min(train[0], train[1]) + min(bus[0], bus[1]))"
StarCoder,codenet,C++,Python,s611392782.py,"if __name__ == '__main__':
    s = input()
    d = int(input())

    idx = 0
    a = add(s, idx)
    idx = 0
    b = bob(s, idx)

    if a == d:
        print('U' if b == d else 'M')
    else:
        print('L' if b == d else 'I')

def mul(s, idx):
    res = s[idx] - '0'
    while idx + 1 < len(s) and s[idx + 1] == '*':
        idx += 2
        res *= s[idx] - '0'
    return res

def add(s, idx):
    res = mul(s, idx)
    while idx + 1 < len(s) and s[idx + 1] == '+':
        idx += 2
        res += mul(s, idx)
    return res

def bob(s, idx):
    res = s[idx] - '0'
    while idx + 1 < len(s):
        if s[idx + 1] == '+':
            res += s[idx + 2] - '0'
        else:
            res *= s[idx + 2] - '0'
        idx += 2
    return res","def mul(s, idx):
    res = int(s[idx])
    while idx + 1 < len(s) and s[idx + 1] == '*':
        idx += 2
        res *= int(s[idx])
    return res

def add(s, idx):
    res = mul(s, idx)
    while idx + 1 < len(s) and s[idx + 1] == '+':
        idx += 2
        res += mul(s, idx)
    return res

def bob(s, idx):
    res = int(s[idx])
    while idx + 1 < len(s):
        if s[idx + 1] == '+':
            res += int(s[idx + 2])
        else:
            res *= int(s[idx + 2])
        idx += 2
    return res

if __name__ == '__main__':
    s = input()
    d = int(input())

    idx = 0
    a = add(s, idx)
    idx = 0
    b = bob(s, idx)

    if a == d:
        print('U' if b == d else 'M')
    else:
        print('L' if b == d else 'I')"
StarCoder,codenet,C++,Python,s659042676.py,"a, b = map(int, input().split())
print(6 - a - b)","a, b = int(input()), int(input())
print(6 - a - b)"
StarCoder,codenet,C++,Python,s539273394.py,"import sys

def sosuubunnpu():
    for i in range(1,1001):
        prime_or_not[i] = 0
    for i in range(2,1001):
        for j in range(2,1001/i):
            if(prime_or_not[i]==0):
                prime_or_not[i*j] = 1
    for i in range(2,1001):
        if(prime_or_not[i]==0):
            prime_list[prime_counter] = i
            prime_counter+=1

def innsuubunnkai(N,n):
    time = 0
    while(1):
        if(N%n == 0):
            N = N/n
            time+=1
        else:
            break
    kekka[0] = time
    kekka[1] = N

def main():
    sosuubunnpu()
    N = int(input())
    prime_num = [0 for i in range(1001)]
    for current_num in range(2,N+1):
        kekka[1] = current_num
        for i in range(prime_counter):
            innsuubunnkai(kekka[1],prime_list[i])
            prime_num[i]+=kekka[0]
    result = 1
    for i in range(prime_counter):
        result = (result*(prime_num[i]+1))%1000000007
    print(result)

if __name__ == '__main__':
    main()","import sys

kekka = [0, 0]
def sosuubunnpu():
    global prime_or_not, prime_list, prime_num, prime_counter
    prime_or_not = [0] * 1001
    prime_list = [0] * 1001
    prime_num = [0] * 1001
    prime_counter = 0
    for i in range(1,1001):
        prime_or_not[i] = 0
    for i in range(2,1001):
        for j in range(2,1001//i):
            if(prime_or_not[i]==0):
                prime_or_not[i*j] = 1
    for i in range(2,1001):
        if(prime_or_not[i]==0):
            prime_list[prime_counter] = i
            prime_counter+=1

def innsuubunnkai(N,n):
    global kekka
    time = 0
    while(1):
        if(N%n == 0):
            N = N//n
            time+=1
        else:
            break
    kekka[0] = time
    kekka[1] = N

def main():
    sosuubunnpu()
    N = int(input())
    prime_num = [0 for i in range(1001)]
    for current_num in range(2,N+1):
        kekka[1] = current_num
        for i in range(prime_counter):
            innsuubunnkai(kekka[1],prime_list[i])
            prime_num[i]+=kekka[0]
    result = 1
    for i in range(prime_counter):
        result = (result*(prime_num[i]+1))%1000000007
    print(result)

if __name__ == '__main__':
    main()"
StarCoder,codenet,C++,Python,s013321508.py,"import sys

N, M = map(int, sys.stdin.readline().split())

L = []
for i in range(N):
    L.append(int(sys.stdin.readline()))

L.sort()

for i in range(M):
    max_L = L[-1]
    if max_L == 0:
        break
    max_L /= 2
    itr = bisect.bisect_left(L, max_L)
    L.insert(itr, max_L)
    L.pop()

print(sum(L))","import sys
import bisect

N, M = map(int, sys.stdin.readline().split())

L = []
inputs = list(sys.stdin.readline().split())
for i in range(N):
    L.append(int(inputs[i]))

L.sort()

for i in range(M):
    max_L = L[-1]
    if max_L == 0:
        break
    max_L //= 2
    itr = bisect.bisect_left(L, max_L)
    L.insert(itr, max_L)
    L.pop()

print(sum(L))"
StarCoder,codenet,C++,Python,s956589471.py,"a, b, c, d, e, k = map(int, input().split())
print(""Yay!"" if e - a <= k else "":("")","a, b, c, d, e, k = int(input()), int(input()), int(input()), int(input()), int(input()), int(input())
print(""Yay!"" if e - a <= k else "":("")"
StarCoder,codenet,C++,Python,s466967233.py,"import sys
input = sys.stdin.readline

N, K = map(int, input().split())
A = [0] * (N + 1)
B = [-1] * (N + 1)

for i in range(N):
    A[i + 1] = int(input())

now = 1
cnt = 0

for j in range(1, K + 1):
    now = A[now]
    if B[now] == -1:
        B[now] = j
    else:
        cnt = j
        break

if j < K:
    tmp = (K - B[now]) % (cnt - B[now])
    for j in range(tmp):
        now = A[now]

print(now)","import sys
input = sys.stdin.readline

N, K = map(int, input().split())
A = [0] * (N + 1)
B = [-1] * (N + 1)

inputs = list(input().split())
for i in range(N):
    A[i + 1] = int(inputs[i])

now = 1
cnt = 0

for j in range(1, K + 1):
    now = A[now]
    if B[now] == -1:
        B[now] = j
    else:
        cnt = j
        break

if j < K:
    tmp = (K - B[now]) % (cnt - B[now])
    for j in range(tmp):
        now = A[now]

print(now)"
StarCoder,codenet,C++,Python,s783753345.py,"while True:
    a, S, b = map(int, input().split())
    if S == '+':
        print(a + b)
    elif S == '-':
        print(a - b)
    elif S == '*':
        print(a * b)
    elif S == '/':
        print(a / b)
    elif S == '?':
        break","while True:
    a, S, b = input().split()
    a = int(a)
    b = int(b)
    if S == '+':
        print(a + b)
    elif S == '-':
        print(a - b)
    elif S == '*':
        print(a * b)
    elif S == '/':
        print(a // b)
    elif S == '?':
        break"
StarCoder,codenet,C++,Python,s299205600.py,"a = int(input())
b = int(input())
if a > b:
    result = 2 * a - 1
elif a == b:
    result = 2 * a
else:
    result = 2 * b - 1
print(result)","a, b = map(int, input().split())
if a > b:
    result = 2 * a - 1
elif a == b:
    result = 2 * a
else:
    result = 2 * b - 1
print(result)"
StarCoder,codenet,C++,Python,s509329039.py,"n,m=map(int,input().split())
s=list(map(int,input().split()))
c=list(map(int,input().split()))
for i in range(1000):
    st=str(i)
    if len(st)!=n:
        continue
    f=1
    for j in range(m):
        if st[s[j]]!=c[j]+'0':
            f=0
    if f:
        print(i)
        break
else:
    print(-1)","n,m=map(int,input().split())
s = []
c = []
for i in range(m):
    s_i, c_i = map(int, input().split())
    s.append(s_i - 1)
    c.append(c_i)
for i in range(1000):
    st=str(i)
    if len(st)!=n:
        continue
    f=1
    for j in range(m):
        if int(st[s[j]])!=int(c[j]):
            f=0
    if f:
        print(i)
        break
else:
    print(-1)"
StarCoder,codenet,C++,Python,s208096306.py,"import sys

def gcd(a, b):
    if a < b:
        a, b = b, a
    r = a % b
    while r > 0:
        a = b
        b = r
        r = a % b
    return b

n = int(input().strip())

ans = int(input().strip())

for i in range(1, n):
    a = int(input().strip())
    ans = gcd(ans, a)

print(ans)","import sys

def gcd(a, b):
    if a < b:
        a, b = b, a
    r = a % b
    while r > 0:
        a = b
        b = r
        r = a % b
    return b

n = int(input().strip())
inputs = list(input().split())
ans = int(inputs[0].strip())

for i in range(n-1):
    a = int(inputs[i + 1].strip())
    ans = gcd(ans, a)

print(ans)"
StarCoder,codenet,C++,Python,s683946919.py,"import sys

def time2min(month,day,hour,min):
    total_day_of_month = [31,28,31,30,31,30,31,31,30,31,30,31]
    total = 0
    for i in range(1,month):
        total += total_day_of_month[i]*24*60
    for i in range(1,day):
        total += 24*60
    total += hour * 60 + min
    return total

while True:
    N = int(input())
    if N == 0:
        break
    log = {}
    for i in range(N):
        month,day,hour,min,action,id = map(int,input().split())
        t = time2min(month,day,hour,min)
        if id not in log:
            log[id] = []
        log[id].append(t)
    total = [0 for i in range(1000)]
    for i in range(len(log[0])-1):
        god_start = log[0][i]
        god_end = log[0][i+1]
        for id in log:
            if id == 0:
                continue
            schedule = log[id]
            for j in range(len(schedule)-1):
                ppl_start = schedule[j]
                ppl_end = schedule[j+1]
                start = max(god_start,ppl_start)
                end = min(god_end,ppl_end)
                total[id] += max(0,end-start)
    print(max(total))","import sys

def time2min(month,day,hour,minute):
    total_day_of_month = [31,28,31,30,31,30,31,31,30,31,30,31]
    total = 0
    for i in range(1,month):
        total += total_day_of_month[i]*24*60
    for i in range(1,day):
        total += 24*60
    total += hour * 60 + minute
    return total

while True:
    N = int(input())
    if N == 0:
        break
    log = {}
    for i in range(N):
        month_day, hour_minute, action, id = input().split()
        month = int(month_day.split(""/"")[0])
        day = int(month_day.split(""/"")[1])
        hour = int(hour_minute.split("":"")[0])
        minute = int(hour_minute.split("":"")[1])
        id = int(id)
        t = time2min(month,day,hour,minute)
        if id not in log:
            log[id] = []
        log[id].append(t)
    total = [0 for i in range(1000)]
    for i in range(len(log[0])-1):
        god_start = log[0][i]
        god_end = log[0][i+1]
        for id in log:
            if id == 0:
                continue
            schedule = log[id]
            for j in range(len(schedule)-1):
                ppl_start = schedule[j]
                ppl_end = schedule[j+1]
                start = max(god_start,ppl_start)
                end = min(god_end,ppl_end)
                total[id] += max(0,end-start)
    print(max(total))"
StarCoder,codenet,C++,Python,s663381244.py,"from sys import stdin, stdout

def main():
	m = [10, 50, 100, 500]
	first = True
	for line in stdin:
		if not first:
			stdout.write('\n')
		first = False

		money = int(line)
		sum = 0
		num = [0, 0, 0, 0]
		for i in range(4):
			num[i] = int(stdin.readline())
			sum += num[i] * m[i]

		change = sum - money
		for i in range(3, -1, -1):
			if change / m[i]:
				num[i] -= change / m[i]
				change %= m[i]

		for i in range(4):
			if num[i] > 0:
				stdout.write(str(m[i]) +'' + str(num[i]) + '\n')

if __name__ == '__main__':
	main()","from sys import stdin, stdout

def main():
	m = [10, 50, 100, 500]
	first = True
	for line in stdin:
		if not first:
			stdout.write('\n')
		first = False

		money = int(line)
		sum = 0
		num = [0, 0, 0, 0]
		inputs = list(stdin.readline().split())
		for i in range(4):
			num[i] = int(inputs[i])
			sum += num[i] * m[i]

		change = sum - money
		for i in range(3, -1, -1):
			if change / m[i]:
				num[i] -= change / m[i]
				change %= m[i]

		for i in range(4):
			if num[i] > 0:
				stdout.write(str(m[i]) +'' + str(num[i]) + '\n')

if __name__ == '__main__':
	main()"
StarCoder,codenet,C++,Python,s447383972.py,"n=int(input())
a=list(map(int,input().split()))
a.sort()
tot=0
for i in range(1,n):
	if a[i]==a[i-1]:
		q[tot]=a[i]
		tot+=1
print(q[tot]*q[tot-1])","n=int(input())
a=list(map(int,input().split()))
a.sort()
tot=0
q=[0]*(n)
for i in range(1,n):
	if a[i]==a[i-1]:
		q[tot]=a[i]
		tot+=1
q.sort()
print(q[-1]*q[-2])"
StarCoder,codenet,C++,Python,s134430594.py,"import sys

class SegmentTree:
    def __init__(self, n, arr):
        self.n = n
        self.arr = arr
        self.tree = [0] * (4 * n)
        self.build(1, 0, n - 1)

    def build(self, node, start, end):
        if start == end:
            self.tree[node] = self.arr[start]
            return self.tree[node]
        mid = (start + end) // 2
        self.tree[node] = max(self.build(node * 2, start, mid), self.build(node * 2 + 1, mid + 1, end))
        return self.tree[node]

    def query(self, node, start, end, l, r):
        if l > end or r < start:
            return -sys.maxsize
        if l <= start and end <= r:
            return self.tree[node]
        mid = (start + end) // 2
        return max(self.query(node * 2, start, mid, l, r), self.query(node * 2 + 1, mid + 1, end, l, r))

def main():
    n = int(input())
    arr = list(map(int, input().split()))
    st = SegmentTree(n, arr)
    ans = 0
    for i in range(n):
        r = i
        while r + 1 < n and arr[r] + 1 == arr[r + 1]:
            r += 1
        ans += arr[r]
        i = r
        if st.query(1, 0, n - 1, i - arr[i], i) > i - arr[i]:
            print(-1)
            return
        if i + 1 < n:
            st.tree[1] = max(st.tree[1], i + 1 - arr[i + 1])
    print(ans)

main()","import sys

class SegmentTree:
    def __init__(self, n, arr):
        self.n = n
        self.arr = arr
        self.tree = [0] * (4 * n)
        self.build(1, 0, n - 1)

    def build(self, node, start, end):
        if start == end:
            self.tree[node] = self.arr[start]
            return self.tree[node]
        mid = (start + end) // 2
        self.tree[node] = max(self.build(node * 2, start, mid), self.build(node * 2 + 1, mid + 1, end))
        return self.tree[node]

    def query(self, node, start, end, l, r):
        if l > end or r < start:
            return -sys.maxsize
        if l <= start and end <= r:
            return self.tree[node]
        mid = (start + end) // 2
        return max(self.query(node * 2, start, mid, l, r), self.query(node * 2 + 1, mid + 1, end, l, r))

def main():
    n = int(input())
    arr = list(map(int, input().split()))
    st = SegmentTree(n, arr)
    ans = 0
    for i in range(n):
        r = i
        while r + 1 < n and arr[r] + 1 == arr[r + 1]:
            r += 1
        ans += arr[r]
        i = r
        if st.query(1, 0, n - 1, i - arr[i], i) > i - arr[i]:
            print(-1)
            return
        if i + 1 < n:
            st.tree[1] = max(st.tree[1], i + 1 - arr[i + 1])
    print(ans)

main()"
StarCoder,codenet,C++,Python,s480704678.py,"n = int(input())
a = [int(x) for x in input().split()]
acc = [0] * (n + 1)
for i in range(n):
    acc[i + 1] = acc[i] + a[i]
ans = 0
for i in range(n):
    ans += a[i] * (MOD + acc[n] - acc[i + 1]) % MOD
print(ans % MOD)","MOD = 1000000007
n = int(input())
a = [int(x) for x in input().split()]
acc = [0] * (n + 1)
for i in range(n):
    acc[i + 1] = acc[i] + a[i]
ans = 0
for i in range(n):
    ans += a[i] * (MOD + acc[n] - acc[i + 1]) % MOD
print(ans % MOD)"
StarCoder,codenet,C++,Python,s571373151.py,"n, m = map(int, input().split())

foods = [0] * m

for i in range(n):
    k = int(input())
    for j in range(k):
        temp = int(input())
        foods[temp - 1] += 1

ans = 0
for elem in foods:
    if elem == n:
        ans += 1

print(ans)","n, m = map(int, input().split())

foods = [0] * m

for i in range(n):
    inputs = list(input().split())
    k = int(inputs[0])
    for j in range(k):
        temp = int(inputs[j + 1]) - 1
        foods[temp - 1] += 1

ans = 0
for elem in foods:
    if elem == n:
        ans += 1

print(ans)"
StarCoder,codenet,C++,Python,s780006912.py,"n=int(input())
array=[]
for i in range(n):
    array.append(int(input()))
sum=0
for i in range(n-1):
    for j in range(i+1,n):
        sum+=array[i]*array[j]
print(sum)","n=int(input())
array=list(map(int, input().split()))
sum=0
for i in range(n-1):
    for j in range(i+1,n):
        sum+=array[i]*array[j]
print(sum)"
StarCoder,codenet,C++,Python,s669128523.py,"#depth first search
not lie in stack

import sys

N=100
WHITE=0
GRAY=1
BLACK=2

M=[[0 for i in range(N)] for j in range(N)]
n=0
color=[0 for i in range(N)]
d=[0 for i in range(N)]
f=[0 for i in range(N)]
tt=0

def dfs_visit(u):
	global tt
	global n
	color[u]=GRAY
	d[u]=tt
	tt+=1
	for v in range(n):
		if M[u][v]==0:
			continue
		if color[v]==WHITE:
			dfs_visit(v)
	color[u]=BLACK
	f[u]=tt
	tt+=1

def dfs():
	global n
	for i in range(n):
		color[i]=WHITE
	tt=0
	
	for u in range(n):
		if color[u]==WHITE:
			dfs_visit(u)
	
	for i in range(n):
		print(i+1,d[i],f[i])

if __name__ == '__main__':
	n=int(sys.stdin.readline())
	for i in range(n):
		for j in range(n):
			M[i][j]=0
	for i in range(n):
		u,k=map(int,sys.stdin.readline().split())
		u-=1
		for j in range(k):
			v=int(sys.stdin.readline())
			v-=1
			M[u][v]=1
	dfs()","#depth first search
not lie in stack

import sys

N=100
WHITE=0
GRAY=1
BLACK=2

M=[[0 for i in range(N)] for j in range(N)]
n=0
color=[0 for i in range(N)]
d=[0 for i in range(N)]
f=[0 for i in range(N)]
tt=0

def dfs_visit(u):
	global tt
	global n
	color[u]=GRAY
	d[u]=tt
	tt+=1
	for v in range(n):
		if M[u][v]==0:
			continue
		if color[v]==WHITE:
			dfs_visit(v)
	color[u]=BLACK
	f[u]=tt
	tt+=1

def dfs():
	global n
	for i in range(n):
		color[i]=WHITE
	tt=0
	
	for u in range(n):
		if color[u]==WHITE:
			dfs_visit(u)
	
	for i in range(n):
		print(i+1,d[i],f[i])

if __name__ == '__main__':
	n=int(sys.stdin.readline())
	for i in range(n):
		for j in range(n):
			M[i][j]=0
	for i in range(n):
		u,k=map(int,sys.stdin.readline().split())
		u-=1
		for j in range(k):
			v=int(sys.stdin.readline())
			v-=1
			M[u][v]=1
	dfs()"
StarCoder,codenet,C++,Python,s189738089.py,"import sys

def main():
    # input
    N, K = map(int, sys.stdin.readline().split())
    h = list(map(int, sys.stdin.readline().split()))

    # dp
    dp = [float('inf') for _ in range(101000)]
    dp[0] = 0
    for i in range(N):
        for j in range(1, K + 1):
            dp[i + j] = min(dp[i + j], dp[i] + abs(h[i] - h[i + j]))

    # output
    print(dp[N - 1])

if __name__ == '__main__':
    main()","import sys

def main():
    # input
    N, K = map(int, sys.stdin.readline().split())
    h = list(map(int, sys.stdin.readline().split()))

    # dp
    dp = [float('inf') for _ in range(101000)]
    dp[0] = 0
    for i in range(N):
        for j in range(1, K + 1):
            if i + j >= N: continue
            dp[i + j] = min(dp[i + j], dp[i] + abs(h[i] - h[i + j]))

    # output
    print(dp[N - 1])

if __name__ == '__main__':
    main()"
StarCoder,codenet,C++,Python,s391054810.py,"h, w, hh, ww = map(int, input().split())
print((h-hh) * (w-ww))","h, w = map(int, input().split())
hh, ww = map(int, input().split())
print((h-hh) * (w-ww))"
StarCoder,codenet,C++,Python,s605014348.py,"def div(n):
	if n%2 == 0:
		return 2
	s = int(math.sqrt(n))
	for i in range(3,s+1,2):
		if n%i == 0:
			return i
	return n

num = int(input())
print(num,end=':')
while num!=1:
	print(' ',div(num),end='')
	num = num / div(num)
print()","import math

def div(n):
	if n%2 == 0:
		return 2
	s = int(math.sqrt(n))
	for i in range(3,s+1,2):
		if n%i == 0:
			return i
	return n

num = int(input())
print(num,end=': ')
while num!=1:
	print(div(num),end=' ')
	num = num // div(num)
print()"
StarCoder,codenet,C++,Python,s853750785.py,# Token size exceeded.,# Token size exceeded.
StarCoder,codenet,C++,Python,s144923291.py,"import sys

h, w = map(int, sys.stdin.readline().split())
s = ""snuke""

for i in range(h):
    for j in range(w):
        t = sys.stdin.readline().rstrip()
        if s == t:
            print(chr(ord('A') + j) + str(i + 1))
            exit(0)

print(""No"")","import sys

h, w = map(int, sys.stdin.readline().split())
s = ""snuke""

for i in range(h):
    inputs = sys.stdin.readline().split()
    for j in range(w):
        t = inputs[j]
        if s == t:
            print(chr(ord('A') + j) + str(i + 1))
            exit(0)

print(""No"")"
StarCoder,codenet,C++,Python,s634121896.py,# Token size exceeded.,# Token size exceeded.
StarCoder,codenet,C++,Python,s247537353.py,"A,B,C,K=map(int,input().split())
print(min(A,K))
if A+B>=K:
  print(min(A,K))
else:
  print(A-(K-(A+B)))","A,B,C,K=map(int,input().split())
if A+B>=K:
  print(min(A,K))
else:
  print(A-(K-(A+B)))"
StarCoder,codenet,C++,Python,s814769071.py,"#pragma region
n, k = map(int, input().split())
MOD = 1000000007
mx = n * (n + 1) // 2 - (n - k) * (n - k + 1) // 2
mn = k * (k - 1) // 2
res = 0
for i in range(k, n + 1):
    res += mx - mn + 1
    mx += n - i
    mn += i
    res %= MOD
print(res)
#pragma endregion","#pragma region
n, k = map(int, input().split())
MOD = 1000000007
mx = n * (n + 1) // 2 - (n - k) * (n - k + 1) // 2
mn = k * (k - 1) // 2
res = 0
for i in range(k, n + 2):
    res += mx - mn + 1
    mx += n - i
    mn += i
    res %= MOD
print(res)
#pragma endregion"
StarCoder,codenet,C++,Python,s615507008.py,"from sys import stdin

def solve(N, T, M, P, X):
    for i in range(M):
        ans = 0
        for j in range(N):
            if j == P[i] - 1:
                ans += X[i]
            else:
                ans += T[j]
        print(ans)

if __name__ == '__main__':
    N = int(stdin.readline())
    T = list(map(int, stdin.readline().split()))
    M = int(stdin.readline())
    P = list(map(int, stdin.readline().split()))
    X = list(map(int, stdin.readline().split()))
    solve(N, T, M, P, X)","from sys import stdin

def solve(N, T, M, P, X):
    for i in range(M):
        ans = 0
        for j in range(N):
            if j == P[i] - 1:
                ans += X[i]
            else:
                ans += T[j]
        print(ans)

if __name__ == '__main__':
    N = int(stdin.readline())
    T = list(map(int, stdin.readline().split()))
    M = int(stdin.readline())
    P = []
    X = []
    for _ in range(M):
        p, x = map(int, input().split())
        P.append(p)
        X.append(x)
    solve(N, T, M, P, X)"
StarCoder,codenet,C++,Python,s559238064.py,"a = input()
if a[0] == a[-1]:
    print(""Bad"")
else:
    print(""Good"")","a, b, c, d, e, f, g, T = 0, 0, 0, 0, 0, 0, 0, 0
z = input()
a = len(z)
for i in range(a - 1):
    if z[i] == z[i + 1]:
        print(""Bad"")
        exit(-1)
print(""Good"")"
StarCoder,codenet,C++,Python,s085554271.py,"# -*- coding: utf-8 -*-

#COMinit()

import sys
import math
from decimal import *
from fractions import *
from collections import *
from itertools import *
from heapq import *
from bisect import *
from functools import *
from operator import *
from random import *
from string import *
from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from collections import *
#from itertools import *
#from heapq import *
#from bisect import *
#from functools import *
#from operator import *
#from random import *
#from string import *
#from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from collections import *
#from itertools import *
#from heapq import *
#from bisect import *
#from functools import *
#from operator import *
#from random import *
#from string import *
#from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from collections import *
#from itertools import *
#from heapq import *
#from bisect import *
#from functools import *
#from operator import *
#from random import *
#from string import *
#from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from collections import *
#from itertools import *
#from heapq import *
#from bisect import *
#from functools import *
#from operator import *
#from random import *
#from string import *
#from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from collections import *
#from itertools import *
#from heapq import *
#from bisect import *
#from functools import *
#from operator import *
#from random import *
#from string import *
#from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from","# -*- coding: utf-8 -*-

#COMinit()

import sys
import math
from decimal import *
from fractions import *
from collections import *
from itertools import *
from heapq import *
from bisect import *
from functools import *
from operator import *
from random import *
from string import *
from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from collections import *
#from itertools import *
#from heapq import *
#from bisect import *
#from functools import *
#from operator import *
#from random import *
#from string import *
#from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from collections import *
#from itertools import *
#from heapq import *
#from bisect import *
#from functools import *
#from operator import *
#from random import *
#from string import *
#from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from collections import *
#from itertools import *
#from heapq import *
#from bisect import *
#from functools import *
#from operator import *
#from random import *
#from string import *
#from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from collections import *
#from itertools import *
#from heapq import *
#from bisect import *
#from functools import *
#from operator import *
#from random import *
#from string import *
#from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from collections import *
#from itertools import *
#from heapq import *
#from bisect import *
#from functools import *
#from operator import *
#from random import *
#from string import *
#from array import *

#from sys import stdin, stdout
#from math import *
#from decimal import *
#from fractions import *
#from"
StarCoder,codenet,C++,Python,s684825280.py,"n, k = map(int, input().split())
a = list(map(int, input().split()))

a.sort()

ans = 0
for i in range(n):
    ans += a[i]

print(ans - sum(a[-k:]))","n, k = map(int, input().split())
a = list(map(int, input().split()))

a.sort()

ans = 0
for i in range(n):
    ans += a[i]

print(ans - sum(a[-k:]))"
StarCoder,codenet,C++,Python,s954770518.py,"s = [0]*11
for i in range(10):
    s[i] = int(input())
s.sort()
for i in range(9,6,-1):
    print(s[i])","s = [0]*10
for i in range(10):
    s[i] = int(input())
s.sort()
for i in range(9,6,-1):
    print(s[i])"
StarCoder,codenet,C++,Python,s976558978.py,# Token size exceeded.,# Token size exceeded.
StarCoder,codenet,C++,Python,s329154546.py,"import sys

L,N = map(int,sys.stdin.readline().split())
S = []
for i in range(N):
    S.append(sys.stdin.readline().rstrip())
S.sort()
for i in range(N):
    print(S[i])","import sys

L,N = map(int,sys.stdin.readline().split())
S = []
for i in range(N):
    S.append(sys.stdin.readline().rstrip())
S.sort()
for i in range(N):
    print(S[i], end='')
print()"
StarCoder,codenet,C++,Python,s384319383.py,"from sys import stdin
from collections import Counter

def main():
	n = int(stdin.readline())
	s = stdin.readline().strip()
	cnt = Counter(s)
	ans = 1
	for i in range(26):
		ans *= cnt[chr(i + ord('a'))]
		ans %= 1000000007
	print(ans - 1)

if __name__ == ""__main__"":
	main()","from sys import stdin
from collections import Counter

def main():
	n = int(stdin.readline())
	s = stdin.readline().strip()
	cnt = Counter(s)
	ans = 1
	for i in range(26):
		ans *= cnt[chr(i + ord('a'))]
		ans %= 1000000007
	print(ans - 1)

if __name__ == ""__main__"":
	main()"
StarCoder,codenet,C++,Python,s531812249.py,"n,m=map(int,input().split())
ans=0
ans+=n*(n-1)/2
ans+=m*(m-1)/2
print(ans)","n,m=map(int,input().split())
ans=0
ans+=n*(n-1)//2
ans+=m*(m-1)//2
print(ans)"
StarCoder,codenet,C++,Python,s014089689.py,"n=int(input())
s=input()
cnt=0
for i in range(n):
	cnt+=1
	j=i+1
	for j in range(j,n):
		if s[i]!=s[j]:
			break
	i=j-1
print(cnt)","n=int(input())
s=input()
cnt=0
i=0
while i<n:
	cnt+=1
	j=i+1
	for j in range(j,n):
		if s[i]!=s[j]:
			break
	i=j-1
	i+=1
print(cnt)"
StarCoder,codenet,C++,Python,s323743606.py,"from collections import defaultdict

m = defaultdict(int)
for i in range(5001):
    for j in range(5001):
        for k in range(5001):
            w = i*200+j*300+k*500
            p = i/5*5*380*0.8+i%5*380+j/4*4*550*0.85+j%4*550+k/3*3*850*0.88+k%3*850
            m[w] = min(m[w], p)

while True:
    try:
        n = int(input())
        print(m[n])
    except:
        break","from collections import defaultdict

m = {}
for i in range(26):
    for j in range(17):
        for k in range(11):
            w = i*200+j*300+k*500
            p = i//5*5*380*0.8+i%5*380+j//4*4*550*0.85+j%4*550+k//3*3*850*0.88+k%3*850
            if w in m:
                m[w] = min(m[w], p)
            else:
                m[w] = p

while True:
    n = int(input())
    if n == 0:
        break
    print(int(m[n]))"
StarCoder,codenet,C++,Java,s023282516.java,"import java.util.*;

public class s023282516 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();

        // 後ろから解くかわりにすべての文字列を「左右反転」する
        reverse(S.begin(), S.end());
        String[] divide = {""dream"", ""dreamer"", ""erase"", ""eraser""};
        for (int i = 0; i < 4; ++i) reverse(divide[i].begin(), divide[i].end());

        // 端から切っていく
        boolean can = true;
        for (int i = 0; i < S.size();) {
            boolean can2 = false; // 4 個の文字列たちどれかで divide できるか
            for (int j = 0; j < 4; ++j) {
                String d = divide[j];
                if (S.substring(i, i + d.length()).equals(d)) { // d で divide できるか
                    can2 = true;
                    i += d.length(); // divide できたら i を進める
                }
            }
            if (!can2) { // divide できなかったら
                can = false;
                break;
            }
        }

        if (can) System.out.println(""YES"");
        else System.out.println(""NO"");
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();

        // 後ろから解くかわりにすべての文字列を「左右反転」する
        StringBuilder sb = new StringBuilder(S); 
        sb.reverse();
        S = sb.toString();
        String[] divide = {""dream"", ""dreamer"", ""erase"", ""eraser""};
        for (int i = 0; i < 4; ++i) {
            sb = new StringBuilder(divide[i]);
            sb.reverse();
            divide[i] = sb.toString();
        }

        // 端から切っていく
        boolean can = true;
        for (int i = 0; i < S.length();) {
            boolean can2 = false; // 4 個の文字列たちどれかで divide できるか
            for (int j = 0; j < 4; ++j) {
                String d = divide[j];
                int end = i + d.length();
                if (end > S.length()) {
                    end = S.length();
                }
                if (S.substring(i, end).equals(d)) { // d で divide できるか
                    can2 = true;
                    i += d.length(); // divide できたら i を進める
                }
            }
            if (!can2) { // divide できなかったら
                can = false;
                break;
            }
        }

        if (can) System.out.println(""YES"");
        else System.out.println(""NO"");
    }
}"
StarCoder,codenet,C++,Java,s550008428.java,"import java.util.*;
public class s550008428 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int s = sc.nextInt();
        Set<Integer> a = new HashSet<Integer>();
        a.add(s);
        int d = 2;
        while(true) {
            if(s%2==0) {
                int x = s/2;
                if(a.contains(x)) {
                    System.out.println(d);
                    return;
                }
                a.add(x);
            } else {
                int x = 3*s + 1;
                if(a.contains(x)) {
                    System.out.println(d);
                    return;
                }
                a.add(x);
            }
            s = x;
            d++;
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int s = sc.nextInt();
        Set<Integer> a = new HashSet<Integer>();
        a.add(s);
        int d = 2;
        while(true) {
            int x = 0;
            if(s%2==0) {
                x = s/2;
                if(a.contains(x)) {
                    System.out.println(d);
                    return;
                }
                a.add(x);
            } else {
                x = 3*s + 1;
                if(a.contains(x)) {
                    System.out.println(d);
                    return;
                }
                a.add(x);
            }
            s = x;
            d++;
        }
    }
}"
StarCoder,codenet,C++,Java,s876796799.java,"import java.util.*;
import java.io.*;

public class s876796799 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        long[] a = new long[N];
        for(int i = 0; i < N; i++){
            a[i] = in.nextLong();
        }
        long ans = 0;
        int[] ind_a = new int[N];
        for(int i = 0; i < N; i++){
            ind_a[a[i] - 1] = i;
        }
        TreeSet<Integer> used_inds = new TreeSet<Integer>();
        for(int i = 0; i < N; i++){
            long left_border;
            long right_border;
            long cur_ind = ind_a[i];
            Iterator<Integer> left_it = used_inds.lower(cur_ind);
            Iterator<Integer> right_it = used_inds.lower(cur_ind + 1);

            if(!left_it.hasNext()){
                left_border = -1;
            } else {
                if(!right_it.hasNext() || right_it.next() > cur_ind){
                    left_it.previous();
                }
                left_border = left_it.next();
            }
            if(!right_it.hasNext()){
                right_border = N;
            } else {
                right_border = right_it.next();
            }
            ans += (cur_ind - left_border) * (right_border - cur_ind) * ((long)i + 1);

            used_inds.add(cur_ind);
        }

        System.out.println(ans);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        long[] a = new long[N];
        for(int i = 0; i < N; i++){
            a[i] = in.nextLong();
        }
        long ans = 0;
        int[] ind_a = new int[N];
        for(int i = 0; i < N; i++){
            ind_a[a[i] - 1] = i;
        }
        TreeSet<Integer> used_inds = new TreeSet<Integer>();
        for(int i = 0; i < N; i++){
            long left_border;
            long right_border;
            long cur_ind = ind_a[i];
            Iterator<Integer> left_it = used_inds.lower(cur_ind);
            Iterator<Integer> right_it = used_inds.lower(cur_ind + 1);

            if(!left_it.hasNext()){
                left_border = -1;
            } else {
                if(!right_it.hasNext() || right_it.next() > cur_ind){
                    left_it.previous();
                }
                left_border = left_it.next();
            }
            if(!right_it.hasNext()){
                right_border = N;
            } else {
                right_border = right_it.next();
            }
            ans += (cur_ind - left_border) * (right_border - cur_ind) * ((long)i + 1);

            used_inds.add(cur_ind);
        }

        System.out.println(ans);
    }
}"
StarCoder,codenet,C++,Java,s465977291.java,"import java.util.*;
import java.lang.*;
import java.io.*;

public class s465977291 {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int d = scan.nextInt();
        double a = d*2+1;
        System.out.println(Math.ceil(n/a));
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int d = scan.nextInt();
        double a = d*2+1;
        System.out.println((int) Math.ceil(n/a));
    }
}"
StarCoder,codenet,C++,Java,s853750785.java,# Token size exceeded.,"# Token size exceeded.
"
StarCoder,codenet,C++,Java,s661446851.java,"/*------------------------------------
........Bismillahir Rahmanir Rahim....
..........created by <NAME>.......
------------------------------------*/
import java.util.*;
import java.lang.*;
import java.io.*;

public class s661446851 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        System.out.println(!n);
    }
}","/*------------------------------------
........Bismillahir Rahmanir Rahim....
..........created by <NAME>.......
------------------------------------*/
import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        System.out.println(n == 0 ? 1 : 0);
    }
}"
StarCoder,codenet,C++,Java,s323743606.java,"import java.util.*;
public class s323743606 {
    public static void main(String[] args) {
        Scanner cin=new Scanner(System.in);
        Map<Integer,Integer>m=new HashMap<Integer,Integer>();
        for(int i=0;i*200<5001;i++){
            for(int j=0;j*300<5001;j++){
                for(int k=0;k*500<5001;k++){
                    int w=i*200+j*300+k*500;
                    int p=i/5*5*380*0.8+i%5*380
                         +j/4*4*550*0.85+j%4*550
                         +k/3*3*850*0.88+k%3*850;
                    if(m.containsKey(w))m.put(w,Math.min(m.get(w),p));
                    else m.put(w,p);
                }
            }
        }
        int n;
        while(cin.hasNextInt()){
            n=cin.nextInt();
            System.out.println(m.get(n));
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner cin=new Scanner(System.in);
        Map<Integer,Integer>m=new HashMap<Integer,Integer>();
        for(int i=0;i*200<5001;i++){
            for(int j=0;j*300<5001;j++){
                for(int k=0;k*500<5001;k++){
                    int w=i*200+j*300+k*500;
                    int p=i/5*5*380*80/100+i%5*380
                         +j/4*4*550*85/100+j%4*550
                         +k/3*3*850*88/100+k%3*850;
                    if(m.containsKey(w))m.put(w,Math.min(m.get(w),p));
                    else m.put(w,p);
                }
            }
        }
        int n;
        while(cin.hasNextInt()){
            n=cin.nextInt();
            if(n!=0)System.out.println(m.get(n));
        }
    }
}"
StarCoder,codenet,C++,Java,s568362035.java,"import java.util.*;
import java.io.*;

public class s568362035 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int m = sc.nextInt();
		int Q = sc.nextInt();
		int[] a = new int[Q + 1];
		int[] b = new int[m + 1];
		boolean[] vis = new boolean[m + 1];
		int[] cnt = new int[m + 1];
		for (int i = 1; i <= Q; ++i)
			a[i] = sc.nextInt();
		int k = 0, j = Q;
		for (int i = 1; j > 0; --j)
			if (!vis[a[j]])
				b[++k] = a[j], vis[a[j]] = true;
		for (int i = m, j = m; i > 0; --i)
			if (!vis[i])
				b[j--] = i;
		int[] id = new int[m + 1];
		for (int i = 1; i <= m; ++i)
			id[b[i]] = i;

		boolean flag = true;
		cnt[0] = n;
		for (int i = Q; i > 0; --i){
			int t = id[a[i]];
			if (cnt[t - 1] > 0){
				--cnt[t - 1];
				++cnt[t];
				vis[t] = true;
			}
			else if (!vis[t]){
				flag = false;
				break;
			}
		}

		int l;
		for (l = 0; cnt[l] == 0; ++l);
		for (int i = l + 1; i < m; ++i)
			flag &= b[i] < b[i + 1];
		System.out.println(flag? ""Yes"" : ""No"");
	}

}","import java.util.*;
import java.io.*;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int m = sc.nextInt();
		int Q = sc.nextInt();
		int[] a = new int[Q + 1];
		int[] b = new int[m + 1];
		boolean[] vis = new boolean[m + 1];
		int[] cnt = new int[m + 1];
		for (int i = 1; i <= Q; ++i)
			a[i] = sc.nextInt();
		int k = 0, j = Q;
		for (int i = 1; j > 0; --j)
			if (!vis[a[j]]) {
				b[++k] = a[j];
				vis[a[j]] = true;
			}
		j = m;
		for (int i = m; i > 0; --i)
			if (!vis[i])
				b[j--] = i;
		int[] id = new int[m + 1];
		for (int i = 1; i <= m; ++i)
			id[b[i]] = i;

		boolean flag = true;
		cnt[0] = n;
		for (int i = Q; i > 0; --i){
			int t = id[a[i]];
			if (cnt[t - 1] > 0){
				--cnt[t - 1];
				++cnt[t];
				vis[t] = true;
			}
			else if (!vis[t]){
				flag = false;
				break;
			}
		}

		int l;
		for (l = 0; cnt[l] == 0; ++l);
		for (int i = l + 1; i < m; ++i)
			flag &= b[i] < b[i + 1];
		System.out.println(flag? ""Yes"" : ""No"");
	}

}"
StarCoder,codenet,C++,Java,s338629964.java,"import java.util.*;
import java.math.*;
import java.io.*;

public class s338629964 {
    static int MOD = 998244353;
    static int MOD2 = 1000000007;
    static int N = 1100000;
    static int[][][] dp = new int[N][N][2][2];
    static int[][] comb = new int[N][N];
    static int[] fact = new int[N];
    static int[] revfact = new int[N];
    static int[] rev = new int[N];

    static void init() {
        fact[0] = 1;
        revfact[0] = 1;
        rev[0] = 0;
        rev[1] = 1;
        for (int i = 1; i < N; i++) {
            fact[i] = (int) ((long) fact[i - 1] * i % MOD);
            if (i > 1)
                rev[i] = (int) ((long) MOD / i * (MOD - rev[MOD % i]) % MOD);
            revfact[i] = (int) ((long) revfact[i - 1] * rev[i] % MOD);
        }
    }

    static int nCk(int n, int k) {
        if (n < k)
            return 0;
        if (comb[n][k]!= 0)
            return comb[n][k];
        int res = (int) ((long) fact[n] * revfact[n - k] % MOD * revfact[k] % MOD);
        return comb[n][k] = res;
    }

    static int mod_pow(int x, int a, int m) {
        if (a == 0)
            return 1;
        int res = mod_pow(x, a / 2, m);
        res = (int) ((long) res * res % m);
        if (a % 2)
            res = (int) ((long) res * x % m);
        return res;
    }

    static int inv(int x, int m) {
        return mod_pow(x, m - 2, m);
    }

    public static void main(String[] args) {
        init();
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int aall = 0, ball = 0;
        for (int i = 0; i < n; i++) {
            int a = cin.nextInt();
            int b = cin.nextInt();
            aall += a;
            ball += b;
        }
        dp[0][0][0][0] = 1;
        for (int i = 1; i <= n; i++) {
            int id = i % 2;
            for (int asum = aall; asum >= 0; asum--) {
                for (int cnt = 0; cnt <= ball; cnt++) {
                    for (int p = 0; p < 2; p++) {
                        if (asum - a[i - 1] < 0)
                            continue;
                        int pw = 1;
                        for (int use = 0; use < b[i - 1]; use++) {
                            if (cnt - use >= 0) {
                                int tmp = nCk(cnt, use) % MOD * pw % MOD;
                                dp[asum][cnt][p][0] += dp[asum - a[i - 1]][cnt - use][p ^ 1][0] * tmp % MOD;
                                dp[asum][cnt][","import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    static int MOD = 998244353;
    static int MOD2 = 1000000007;
    static int N = 1100000;
    static int[][][] dp = new int[N][N][2][2];
    static int[][] comb = new int[N][N];
    static int[] fact = new int[N];
    static int[] revfact = new int[N];
    static int[] rev = new int[N];

    static void init() {
        fact[0] = 1;
        revfact[0] = 1;
        rev[0] = 0;
        rev[1] = 1;
        for (int i = 1; i < N; i++) {
            fact[i] = (int) ((long) fact[i - 1] * i % MOD);
            if (i > 1)
                rev[i] = (int) ((long) MOD / i * (MOD - rev[MOD % i]) % MOD);
            revfact[i] = (int) ((long) revfact[i - 1] * rev[i] % MOD);
        }
    }

    static int nCk(int n, int k) {
        if (n < k)
            return 0;
        if (comb[n][k]!= 0)
            return comb[n][k];
        int res = (int) ((long) fact[n] * revfact[n - k] % MOD * revfact[k] % MOD);
        return comb[n][k] = res;
    }

    static int mod_pow(int x, int a, int m) {
        if (a == 0)
            return 1;
        int res = mod_pow(x, a / 2, m);
        res = (int) ((long) res * res % m);
        if (a % 2)
            res = (int) ((long) res * x % m);
        return res;
    }

    static int inv(int x, int m) {
        return mod_pow(x, m - 2, m);
    }

    public static void main(String[] args) {
        init();
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int aall = 0, ball = 0;
        for (int i = 0; i < n; i++) {
            int a = cin.nextInt();
            int b = cin.nextInt();
            aall += a;
            ball += b;
        }
        dp[0][0][0][0] = 1;
        for (int i = 1; i <= n; i++) {
            int id = i % 2;
            for (int asum = aall; asum >= 0; asum--) {
                for (int cnt = 0; cnt <= ball; cnt++) {
                    for (int p = 0; p < 2; p++) {
                        if (asum - a[i - 1] < 0)
                            continue;
                        int pw = 1;
                        for (int use = 0; use < b[i - 1]; use++) {
                            if (cnt - use >= 0) {
                                int tmp = nCk(cnt, use) % MOD * pw % MOD;
                                dp[asum][cnt][p][0] += dp[asum - a[i - 1]][cnt - use][p ^ 1][0] * tmp % MOD;
                                dp[asum][cnt]["
StarCoder,codenet,C++,Java,s976558978.java,# Token size exceeded.,# Token size exceeded.
StarCoder,codenet,C++,Java,s285212630.java,"import java.util.*;
import java.io.*;
import java.math.*;

public class s285212630 {
    static int N;
    static int[][] G;
    static int[][] U;
    static int[] R;
    static long[] L;
    static int MAX_L = 22;
    public static void main(String[] args) {
        Scanner cin = new Scanner(System.in);
        N = cin.nextInt();
        G = new int[N][N];
        U = new int[MAX_L][N];
        R = new int[N];
        L = new long[N];
        for (int i=0; i<N; i++) {
            for (int j=0; j<N; j++) {
                G[i][j] = INF;
            }
        }
        for (int i=0; i<N-1; i++) {
            int a = cin.nextInt()-1, b = cin.nextInt()-1, c = cin.nextInt();
            G[a][b] = c;
            G[b][a] = c;
        }
        for (int i=0; i<MAX_L; i++) {
            for (int j=0; j<N; j++) {
                U[i][j] = -1;
            }
        }
        dfs(0, -1, 0, 0);
        for (int i=0; i<MAX_L-1; i++) {
            for (int v=0; v<N; v++) {
                if (U[i][v] == -1) U[i+1][v] = -1;
                U[i+1][v] = U[i][U[i][v]];
            }
        }
        int Q = cin.nextInt(), K = cin.nextInt()-1;
        for (int i=0; i<Q; i++) {
            int x = cin.nextInt()-1, y = cin.nextInt()-1;
            System.out.println(dist(x, K) + dist(K, y));
        }
    }
    static void dfs(int x, int p, int r, long l) {
        U[0][x] = p;
        R[x] = r;
        L[x] = l;
        for (int t=0; t<N; t++) {
            if (G[x][t] == INF) continue;
            if (t == p) continue;
            dfs(t, x, r+1, l+G[x][t]);
        }
    }
    static int lca(int a, int b) {
        if (R[a] > R[b]) swap(a, b);
        for (int k=0; k<MAX_L; k++) {
            if ((R[a] - R[b]) >> k & 1) b = U[k][b];
        }
        if (a == b) return a;
        for (int k=MAX_L-1; k>=0; k--) {
            if (U[k][a]!= U[k][b]) {
                a = U[k][a];
                b = U[k][b];
            }
        }
        return U[0][a];
    }
    static long dist(int x, int y) {
        int g = lca(x, y);
        return L[x] + L[y] - 2LL*L[g];
    }
}","import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static int N;
    static int[][] G;
    static int[][] U;
    static int[] R;
    static long[] L;
    static int MAX_L = 22;
    static int INF = 1145141919;
    public static void main(String[] args) {
        Scanner cin = new Scanner(System.in);
        N = cin.nextInt();
        G = new int[N][N];
        U = new int[MAX_L][N];
        R = new int[N];
        L = new long[N];
        for (int i=0; i<N; i++) {
            for (int j=0; j<N; j++) {
                G[i][j] = INF;
            }
        }
        for (int i=0; i<N-1; i++) {
            int a = cin.nextInt()-1, b = cin.nextInt()-1, c = cin.nextInt();
            G[a][b] = c;
            G[b][a] = c;
        }
        for (int i=0; i<MAX_L; i++) {
            for (int j=0; j<N; j++) {
                U[i][j] = -1;
            }
        }
        dfs(0, -1, 0, 0);
        for (int i=0; i<MAX_L-1; i++) {
            for (int v=0; v<N; v++) {
                if (U[i][v] == -1) U[i+1][v] = -1;
                U[i+1][v] = U[i][U[i][v]];
            }
        }
        int Q = cin.nextInt(), K = cin.nextInt()-1;
        for (int i=0; i<Q; i++) {
            int x = cin.nextInt()-1, y = cin.nextInt()-1;
            System.out.println(dist(x, K) + dist(K, y));
        }
    }
    static void dfs(int x, int p, int r, long l) {
        U[0][x] = p;
        R[x] = r;
        L[x] = l;
        for (int t=0; t<N; t++) {
            if (G[x][t] == INF) continue;
            if (t == p) continue;
            dfs(t, x, r+1, l+G[x][t]);
        }
    }
    static int lca(int a, int b) {
        if (R[a] > R[b]) {
            int temp = a;
            a = b;
            b = temp;
        }
        for (int k=0; k<MAX_L; k++) {
            if ((R[a] - R[b]) >> k != 0) b = U[k][b];
        }
        if (a == b) return a;
        for (int k=MAX_L-1; k>=0; k--) {
            if (U[k][a]!= U[k][b]) {
                a = U[k][a];
                b = U[k][b];
            }
        }
        return U[0][a];
    }
    static long dist(int x, int y) {
        int g = lca(x, y);
        return L[x] + L[y] - 2L*L[g];
    }
}"
StarCoder,codenet,C++,Java,s085712108.java,"/*Lucky_Glass*/
import java.util.*;
public class s085712108 {
	public static void main(String[] args)
	{
		Scanner cin=new Scanner(System.in);
		int a=cin.nextInt(),b=cin.nextInt(),c=cin.nextInt();
		int tot=0;
		Queue<Integer> que=new LinkedList<Integer>();
		que.add(a*10000+b*100+c);
		while(!que.isEmpty())
		{
			int fro=que.poll();
			if(fro/10000==fro/100%10==fro%10)
			{
				System.out.println(tot);
				return;
			}
			for(int i=0;i<6;i++)
			{
				int n=fro/10000+fro/100%10+fro%10;
				if(n%7007==0) continue;
				n=n*10000+F[i][0]*100+F[i][1]*10+F[i][2];
				if(n%7007==0) continue;
				n=n*10000+F[i][0]*100+F[i][2]*10+F[i][1];
				if(n%7007==0) continue;
				n=n*10000+F[i][1]*100+F[i][0]*10+F[i][2];
				if(n%7007==0) continue;
				n=n*10000+F[i][1]*100+F[i][2]*10+F[i][0];
				if(n%7007==0) continue;
				n=n*10000+F[i][2]*100+F[i][0]*10+F[i][1];
				if(n%7007==0) continue;
				n=n*10000+F[i][2]*100+F[i][1]*10+F[i][0];
				if(n%7007==0) continue;
				if(n%7007==0) continue;
				que.add(n);
			}
			tot++;
		}
	}
	static int[] F={111,110,101,100,011,010,001,000};
}","/*Lucky_Glass*/
import java.util.*;
public class Main {
	static int[][] F = {{1, 1, 0}, {1, 0, 1}, {0, 1, 1}, {2, 0, 0}, {0, 2, 0}, {0, 0, 2}};
	public static void main(String[] args)
	{
		Scanner cin=new Scanner(System.in);
		int a=cin.nextInt(),b=cin.nextInt(),c=cin.nextInt();
		int tot=0;
		Queue<Integer> que=new LinkedList<Integer>();
		que.add(a*10000+b*100+c);
		while(!que.isEmpty())
		{
			int fro=que.poll();
			if(fro/10000==fro/100%10 && fro/100%10==fro%10)
			{
				System.out.println(tot);
				return;
			}
			for(int i=0;i<6;i++)
			{
				int n=fro/10000+fro/100%10+fro%10;
				if(n%7007==0) continue;
				n=n*10000+F[i][0]*100+F[i][1]*10+F[i][2];
				if(n%7007==0) continue;
				n=n*10000+F[i][0]*100+F[i][2]*10+F[i][1];
				if(n%7007==0) continue;
				n=n*10000+F[i][1]*100+F[i][0]*10+F[i][2];
				if(n%7007==0) continue;
				n=n*10000+F[i][1]*100+F[i][2]*10+F[i][0];
				if(n%7007==0) continue;
				n=n*10000+F[i][2]*100+F[i][0]*10+F[i][1];
				if(n%7007==0) continue;
				n=n*10000+F[i][2]*100+F[i][1]*10+F[i][0];
				if(n%7007==0) continue;
				if(n%7007==0) continue;
				que.add(n);
			}
			tot++;
		}
	}
}"
StarCoder,codenet,C++,Java,s146561572.java,"import java.util.*;
import java.lang.*;
import java.io.*;

public class s146561572 {
    public static void main (String[] args) {
        Scanner scan = new Scanner(System.in);
        int t = scan.nextInt();
        while (t-- > 0) {
            int n = scan.nextInt();
            int ans = 0;
            for (int i = 1; i <= n; i++) {
                ans += i * (n - i + 1);
            }
            for (int i = 1; i < n; i++) {
                int u = scan.nextInt();
                int v = scan.nextInt();
                int a = Math.max(u, v);
                int b = Math.min(u, v);
                ans -= b * (n - a + 1);
            }
            System.out.println(ans);
        }
    }
}","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    public static void main (String[] args) {
        Scanner scan = new Scanner(System.in);
        int t = 1;
        while (t-- > 0) {
            int n = scan.nextInt();
            int ans = 0;
            for (int i = 1; i <= n; i++) {
                ans += i * (n - i + 1);
            }
            for (int i = 1; i < n; i++) {
                int u = scan.nextInt();
                int v = scan.nextInt();
                int a = Math.max(u, v);
                int b = Math.min(u, v);
                ans -= b * (n - a + 1);
            }
            System.out.println(ans);
        }
    }
}"
StarCoder,codenet,C++,Java,s669128523.java,"/*depth first search
not lie in stack
*/
import java.util.*;
public class s669128523 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[][] M = new int[n][n];
		int[] color = new int[n];
		int[] d = new int[n];
		int[] f = new int[n];
		int tt = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				M[i][j] = 0;
			}
		}
		for (int i = 0; i < n; i++) {
			int u = sc.nextInt();
			int k = sc.nextInt();
			u--;
			for (int j = 0; j < k; j++) {
				int v = sc.nextInt();
				v--;
				M[u][v] = 1;
			}
		}
		for (int i = 0; i < n; i++) {
			color[i] = 0;
		}
		for (int u = 0; u < n; u++) {
			if (color[u] == 0) {
				dfs_visit(u);
			}
		}
		for (int i = 0; i < n; i++) {
			System.out.println(i + 1 + "" "" + d[i] + "" "" + f[i]);
		}
	}

	public static void dfs_visit(int u) {
		int v;
		color[u] = 1;
		d[u] = ++tt;
		for (v = 0; v < n; v++) {
			if (M[u][v] == 0)
				continue;
			if (color[v] == 0) {
				dfs_visit(v);
			}
		}
		color[u] = 2;
		f[u] = ++tt;
	}
}","/*depth first search
not lie in stack
*/
import java.util.*;
public class Main {
	static int n;
	static int[][] M;
	static int[] color;
	static int[] d;
	static int[] f;
	static int tt;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		M = new int[n][n];
		color = new int[n];
		d = new int[n];
		f = new int[n];
		tt = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				M[i][j] = 0;
			}
		}
		for (int i = 0; i < n; i++) {
			int u = sc.nextInt();
			int k = sc.nextInt();
			u--;
			for (int j = 0; j < k; j++) {
				int v = sc.nextInt();
				v--;
				M[u][v] = 1;
			}
		}
		for (int i = 0; i < n; i++) {
			color[i] = 0;
		}
		for (int u = 0; u < n; u++) {
			if (color[u] == 0) {
				dfs_visit(u);
			}
		}
		for (int i = 0; i < n; i++) {
			System.out.println(i + 1 + "" "" + d[i] + "" "" + f[i]);
		}
	}

	public static void dfs_visit(int u) {
		int v;
		color[u] = 1;
		d[u] = ++tt;
		for (v = 0; v < n; v++) {
			if (M[u][v] == 0)
				continue;
			if (color[v] == 0) {
				dfs_visit(v);
			}
		}
		color[u] = 2;
		f[u] = ++tt;
	}
}"
StarCoder,codenet,C++,Java,s539273394.java,"import java.util.*;
public class s539273394 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] prime_list = new int[1001];
        int[] prime_num = new int[1001];
        int[] prime_or_not = new int[1001];
        int prime_counter = 0;
        for (int i = 2; i <= 1000; ++i)
        {
            prime_or_not[i] = 0;
        }
        for (int i = 2; i <= 1000; ++i)
        {
            for (int j = 2; j <= 1000/i; ++j)
            {
                if(prime_or_not[i]==0){
                    prime_or_not[i*j] = 1;
                }
            }
        }
        for (int i = 2; i <= 1000; ++i)
        {
            if(prime_or_not[i]==0){
                prime_list[prime_counter] = i;
                prime_counter+=1;
            }
        }
        for (int i = 0; i <= 1000; ++i)
        {
            prime_num[i] = 0;
        }
        for (int current_num = 2; current_num <= N; ++current_num)
        {
            int[] kekka = new int[2];
            kekka[1] = current_num;
            for (int i = 0; i < prime_counter; ++i)
            {
                int time = 0;
                while(1){
                    if(kekka[1]%prime_list[i] == 0){
                        kekka[1] = kekka[1]/prime_list[i];
                        time++;
                    }else{
                        break;
                    }
                }
                prime_num[i]+=time;
            }
        }
        long result = 1;
        for (int i = 0; i < prime_counter; ++i){
            result = (result*(prime_num[i]+1))%1000000007;
        }
        System.out.println(result);
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] prime_list = new int[1001];
        int[] prime_num = new int[1001];
        int[] prime_or_not = new int[1001];
        int prime_counter = 0;
        for (int i = 2; i <= 1000; ++i)
        {
            prime_or_not[i] = 0;
        }
        for (int i = 2; i <= 1000; ++i)
        {
            for (int j = 2; j <= 1000/i; ++j)
            {
                if(prime_or_not[i]==0){
                    prime_or_not[i*j] = 1;
                }
            }
        }
        for (int i = 2; i <= 1000; ++i)
        {
            if(prime_or_not[i]==0){
                prime_list[prime_counter] = i;
                prime_counter+=1;
            }
        }
        for (int i = 0; i <= 1000; ++i)
        {
            prime_num[i] = 0;
        }
        for (int current_num = 2; current_num <= N; ++current_num)
        {
            int[] kekka = new int[2];
            kekka[1] = current_num;
            for (int i = 0; i < prime_counter; ++i)
            {
                int time = 0;
                while(true){
                    if(kekka[1]%prime_list[i] == 0){
                        kekka[1] = kekka[1]/prime_list[i];
                        time++;
                    }else{
                        break;
                    }
                }
                prime_num[i]+=time;
            }
        }
        long result = 1;
        for (int i = 0; i < prime_counter; ++i){
            result = (result*(prime_num[i]+1))%1000000007;
        }
        System.out.println(result);
    }
}"
StarCoder,codenet,C++,Java,s345215315.java,"import java.util.*;
import java.io.*;

public class s345215315 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int h = 19,w = 15;
        int dx[] = {0,1,0,-1,1,1,-1,-1};
        int dy[] = {1,0,-1,0,1,-1,1,-1};
        String s[] = new String[19];
        int ans = Integer.MAX_VALUE;
        for(int i = 0;i < h;i++)s[i] = sc.next();
        int sx,sy;
        for(int i = 0;i < h;i++){
            for(int j = 0;j < w;j++){
                if(s[i].charAt(j) == 'O'){
                    sx = i;
                    sy = j;
                    s[i] = s[i].substring(0,j) + ""."" + s[i].substring(j+1);
                    break;
                }
            }
        }
        dfs(s,sx,sy,0,ans);
        if(ans == Integer.MAX_VALUE)System.out.println(-1);
        else System.out.println(ans);
    }
    public static void dfs(String s[][],int x,int y,int cnt,int ans){
        if(cnt > 20)return;
        if(x == 18){
            ans = Math.min(ans,cnt);
            return;
        }
        for(int i = 0;i < 8;i++){
            int nx = x + dx[i];
            int ny = y + dy[i];
            if(nx < 0 || nx >= 19 || ny < 0 || ny >= 15)continue;
            if(s[nx][ny]!= 'X')continue;
            boolean c = true;
            while(c && s[nx][ny] == 'X'){
                s[nx][ny] = '.';
                nx += dx[i];
                ny += dy[i];
                if(nx < 0 || nx >= 19 || ny < 0 || ny >= 15){
                    if(nx >= 19)ans = Math.min(ans, cnt+1);
                    c = false;
                }
            }
            if(c)dfs(s,nx,ny,cnt+1,ans);
            while(nx!= x || ny!= y){
                nx -= dx[i];
                ny -= dy[i];
                s[nx][ny] = 'X';
            }
            s[x][y] = '.';
        }
    }
}","import java.util.*;
import java.io.*;

public class Main {
    static int[] dx;
    static int[] dy;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int h = 19,w = 15;
        dx = new int[]{0,1,0,-1,1,1,-1,-1};
        dy = new int[]{1,0,-1,0,1,-1,1,-1};
        String s[] = new String[19];
        int ans = Integer.MAX_VALUE;
        for(int i = 0;i < h;i++)s[i] = sc.next();
        int sx = 0,sy = 0;
        for(int i = 0;i < h;i++){
            for(int j = 0;j < w;j++){
                if(s[i].charAt(j) == 'O'){
                    sx = i;
                    sy = j;
                    s[i] = s[i].substring(0,j) + ""."" + s[i].substring(j+1);
                    break;
                }
            }
        }
        dfs(s,sx,sy,0,ans);
        if(ans == Integer.MAX_VALUE)System.out.println(-1);
        else System.out.println(ans);
    }
    public static void dfs(String s[],int x,int y,int cnt,int ans){
        if(cnt > 20)return;
        if(x == 18){
            ans = Math.min(ans,cnt);
            return;
        }
        for(int i = 0;i < 8;i++){
            int nx = x + dx[i];
            int ny = y + dy[i];
            if(nx < 0 || nx >= 19 || ny < 0 || ny >= 15)continue;
            if(s[nx].charAt(ny)!= 'X')continue;
            boolean c = true;
            while(c && s[nx].charAt(ny) == 'X'){
                s[nx] = s[nx].substring(0, ny) + '.' + s[nx].substring(ny+1);
                nx += dx[i];
                ny += dy[i];
                if(nx < 0 || nx >= 19 || ny < 0 || ny >= 15){
                    if(nx >= 19)ans = Math.min(ans, cnt+1);
                    c = false;
                }
            }
            if(c)dfs(s,nx,ny,cnt+1,ans);
            while(nx!= x || ny!= y){
                nx -= dx[i];
                ny -= dy[i];
                s[nx] = s[nx].substring(0, ny) + 'X' + s[nx].substring(ny+1);
            }
            s[x] = s[x].substring(0, y) + '.' + s[x].substring(y+1);
        }
    }
}"
StarCoder,codenet,C++,Java,s194793609.java,"import java.util.Scanner;
import java.util.Vector;

public class s194793609 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Vector<Long> a = new Vector<Long>(n);
        for (int i = 0; i < n; i++) {
            a.add(sc.nextLong());
        }

        Vector<Long> abs_a = new Vector<Long>(n);
        for (int i = 0; i < n; i++) {
            abs_a.add(Math.abs(a.get(i)));
        }

        long ans = 0;
        long min = abs_a.get(0);
        for (long e : abs_a) {
            ans += e;
            if (min > e) {
                min = e;
            }
        }
        int num_negative = 0;
        for (long e : a) {
            if (e < 0) {
                num_negative++;
            }
        }

        if (num_negative % 2) {
            ans -= min * 2;
        }

        System.out.println(ans);
    }
}","import java.util.Scanner;
import java.util.Vector;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Vector<Long> a = new Vector<Long>(n);
        for (int i = 0; i < n; i++) {
            a.add(sc.nextLong());
        }

        Vector<Long> abs_a = new Vector<Long>(n);
        for (int i = 0; i < n; i++) {
            abs_a.add(Math.abs(a.get(i)));
        }

        long ans = 0;
        long min = abs_a.get(0);
        for (long e : abs_a) {
            ans += e;
            if (min > e) {
                min = e;
            }
        }
        int num_negative = 0;
        for (long e : a) {
            if (e < 0) {
                num_negative++;
            }
        }

        if (num_negative % 2 != 0) {
            ans -= min * 2;
        }

        System.out.println(ans);
    }
}"
StarCoder,codenet,C++,Java,s343804973.java,"import java.util.*;
public class s343804973 {
	public static void main(String[] args){
		Scanner sc=new Scanner(System.in);
		long n=sc.nextLong(),m=sc.nextLong(),mod=sc.nextLong();
		long[][] C=new long[310][310];
		long[][] pre=new long[310][310];
		long[][] f=new long[310][310];
		C[0][0]=1;
		for(int i=1;i<=n;i++){
			C[i][0]=C[i][i]=1;
			for(int j=1;j<i;j++)
				C[i][j]=(C[i-1][j-1]+C[i-1][j])%mod;
		}
		for(int i=0;i<=m;i++)
			f[1][i]=1,pre[1][i]=m-i+1;
		for(int i=2;i<=n+1;i++){
			for(int j=0;j<=m;j++)
				for(int k=1;k<i;k++)
					(f[i][j]+=f[i-k][j]*pre[k][j+1]%mod*C[i-2][k-1])%=mod;
			for(int j=m;j>=0;j--)
				pre[i][j]=(pre[i][j+1]+f[i][j])%mod;
		}
		System.out.println(f[n+1][0]);
	}
}","import java.util.*;
public class Main {
	public static void main(String[] args){
		Scanner sc=new Scanner(System.in);
		long n=sc.nextLong(),m=sc.nextLong(),mod=sc.nextLong();
		long[][] C=new long[310][310];
		long[][] pre=new long[310][310];
		long[][] f=new long[310][310];
		C[0][0]=1;
		for(int i=1;i<=n;i++){
			C[i][0]=C[i][i]=1;
			for(int j=1;j<i;j++)
				C[i][j]=(C[i-1][j-1]+C[i-1][j])%mod;
		}
		for(int i=0;i<=m;i++) {
			f[1][i]=1;
			pre[1][i]=m-i+1;
		}
		for(int i=2;i<=n+1;i++){
			for(int j=0;j<=m;j++)
				for(int k=1;k<i;k++) {
					f[i][j]+=f[i-k][j]*pre[k][j+1]%mod*C[i-2][k-1];
					f[i][j]%=mod;
				}
			for(int j=(int) m;j>=0;j--)
				pre[i][j]=(pre[i][j+1]+f[i][j])%mod;
		}
		System.out.println(f[(int) n+1][0]);
	}
}"
StarCoder,codenet,C++,Java,s151802561.java,"import java.util.*;
public class s151802561 {
  public static void main(String[] args){
    int n, i, j, t, sw = 0, mini;
    Scanner sc = new Scanner(System.in);
    n = sc.nextInt();
    int[] A = new int[n];
    for ( i = 0; i < n; i++ ) A[i] = sc.nextInt();

    for ( i = 0; i < n; i++ ){
      mini = i;
      for ( j = i; j < n; j++ ){
        if ( A[j] < A[mini] ) mini = j;
      }
      t = A[i]; A[i] = A[mini]; A[mini] = t;
      if ( i!= mini ) sw++;
    }

    for ( i = 0; i < n; i++ ){
      if (i) System.out.print("" "");
      System.out.print(A[i]);
    }
    System.out.println();
    System.out.println(sw);
  }
}","import java.util.*;
public class Main {
  public static void main(String[] args){
    int n, i, j, t, sw = 0, mini;
    Scanner sc = new Scanner(System.in);
    n = sc.nextInt();
    int[] A = new int[n];
    for ( i = 0; i < n; i++ ) A[i] = sc.nextInt();

    for ( i = 0; i < n; i++ ){
      mini = i;
      for ( j = i; j < n; j++ ){
        if ( A[j] < A[mini] ) mini = j;
      }
      t = A[i]; A[i] = A[mini]; A[mini] = t;
      if ( i!= mini ) sw++;
    }

    for ( i = 0; i < n; i++ ){
      if (i != 0) System.out.print("" "");
      System.out.print(A[i]);
    }
    System.out.println();
    System.out.println(sw);
  }
}"
StarCoder,codenet,C++,Java,s134430594.java,"import java.util.*;
import java.io.*;

public class s134430594 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] dl = new int[n];
        for (int i = 0; i < n; i++) {
            if (a[i] > i) {
                System.out.println(-1);
                return;
            }
            dl[i] = i - a[i];
        }
        int ans = 0;
        List<Ban> bans = new ArrayList<Ban>();
        for (int i = 0; i < n; i++) {
            int r = i;
            while (r + 1 < n && a[r] + 1 == a[r + 1]) {
                r++;
            }
            ans += a[r];
            i = r;
            bans.add(new Ban(r - a[r], r, r - a[r]));
        }
        Sp sp = new Sp();
        sp.init(dl);
        for (Ban t : bans) {
            if (sp.get(t.l, t.r) > t.val) {
                System.out.println(-1);
                return;
            }
        }
        System.out.println(ans);
    }
}

class Sp {
    public static final int LIM = 20;
    public static final int N = 2000007;

    int[] mn = new int[LIM][N];
    int[] pw = new int[N];

    void init(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            mn[0][i] = a[i];
        }
        for (int i = 0; i + 1 < LIM; i++) {
            for (int j = 0; j + (1 << (i + 1)) <= n; j++) {
                mn[i + 1][j] = Math.max(mn[i][j], mn[i][j + (1 << i)]);
            }
        }
        pw[1] = 0;
        for (int i = 2; i < N; i++) {
            pw[i] = pw[i / 2] + 1;
        }
    }

    int get(int l, int r) {
        r++;
        int p = pw[r - l];
        return Math.min(mn[p][l], mn[p][r - (1 << p)]);
    }
}

class Ban {
    int l;
    int r;
    int val;

    Ban() {}

    Ban(int l_, int r_, int val_) {
        l = l_;
        r = r_;
        val = val_;
    }
}","import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        int[] dl = new int[n];
        for (int i = 0; i < n; i++) {
            if (a[i] > i) {
                System.out.println(-1);
                return;
            }
            dl[i] = i - a[i];
        }
        int ans = 0;
        List<Ban> bans = new ArrayList<Ban>();
        for (int i = 0; i < n; i++) {
            int r = i;
            while (r + 1 < n && a[r] + 1 == a[r + 1]) {
                r++;
            }
            ans += a[r];
            i = r;
            bans.add(new Ban(r - a[r], r, r - a[r]));
        }
        Sp sp = new Sp();
        sp.init(dl);
        for (Ban t : bans) {
            if (sp.get(t.l, t.r) > t.val) {
                System.out.println(-1);
                return;
            }
        }
        System.out.println(ans);
    }
}

class Sp {
    public static final int LIM = 20;
    public static final int N = 2000007;

    int[][] mn = new int[LIM][N];
    int[] pw = new int[N];

    void init(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            mn[0][i] = a[i];
        }
        for (int i = 0; i + 1 < LIM; i++) {
            for (int j = 0; j + (1 << (i + 1)) <= n; j++) {
                mn[i + 1][j] = Math.max(mn[i][j], mn[i][j + (1 << i)]);
            }
        }
        pw[1] = 0;
        for (int i = 2; i < N; i++) {
            pw[i] = pw[i / 2] + 1;
        }
    }

    int get(int l, int r) {
        r++;
        int p = pw[r - l];
        return Math.min(mn[p][l], mn[p][r - (1 << p)]);
    }
}

class Ban {
    int l;
    int r;
    int val;

    Ban() {}

    Ban(int l_, int r_, int val_) {
        l = l_;
        r = r_;
        val = val_;
    }
}"
StarCoder,codenet,C++,Java,s350755479.java,"import java.util.*;
import java.io.*;

public class s350755479 {

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        Node[] node = new Node[n + 1];

        for (int i = 1; i <= n; i ++) {
            node[i] = new Node();
            node[i].x = sc.nextInt();
            node[i].y = sc.nextInt();
            node[i].id = i;
        }

        Arrays.sort(node, 1, n + 1, new Comparator<Node>() {
            public int compare(Node a, Node b) {
                return a.x - b.x;
            }
        });

        int cnt = 0;
        for (int i = 2; i <= n; i ++)
            e[cnt ++] = new Edge(node[i - 1].id, node[i].id, node[i].x - node[i - 1].x);
        
        Arrays.sort(node, 1, n + 1, new Comparator<Node>() {
            public int compare(Node a, Node b) {
                return a.y - b.y;
            }
        });
        for (int i = 2; i <= n; i ++)
            e[cnt ++] = new Edge(node[i - 1].id, node[i].id, node[i].y - node[i - 1].y);

        Arrays.sort(e, 0, cnt);

        long ans = 0;
        for (int i = 0; i < cnt; i ++) {
            int u = e[i].u, v = e[i].v, val = e[i].val;
            if (findpar(u) == findpar(v)) continue;
            unite(u, v);
            ans += val;
        }

        System.out.println(ans);
    }

    static class Node {
        int x, y, id;
    }

    static class Edge {
        int u, v, val;
        public Edge(int u, int v, int val) {
            this.u = u;
            this.v = v;
            this.val = val;
        }
        public int compareTo(Edge e) {
            return this.val - e.val;
        }
    }

    static int[] par;
    static Edge[] e;

    static void init() {
        for (int i = 0; i <= n; i ++)
            par[i] = i;
    }

    static int findpar(int x) {
        return par[x] = (par[x] == x? x : findpar(par[x]));
    }

    static void unite(int x, int y) {
        x = findpar(x), y = findpar(y);
        if (x == y) return;
        par[x] = y;
    }
}","import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        Node[] node = new Node[n + 1];

        for (int i = 1; i <= n; i ++) {
            node[i] = new Node();
            node[i].x = sc.nextInt();
            node[i].y = sc.nextInt();
            node[i].id = i;
        }

        Arrays.sort(node, 1, n + 1, new Comparator<Node>() {
            public int compare(Node a, Node b) {
                return a.x - b.x;
            }
        });

        int cnt = 0;
        Edge[] e = new Edge[n << 1];
        for (int i = 2; i <= n; i ++)
            e[cnt ++] = new Edge(node[i - 1].id, node[i].id, node[i].x - node[i - 1].x);
        
        Arrays.sort(node, 1, n + 1, new Comparator<Node>() {
            public int compare(Node a, Node b) {
                return a.y - b.y;
            }
        });
        for (int i = 2; i <= n; i ++)
            e[cnt ++] = new Edge(node[i - 1].id, node[i].id, node[i].y - node[i - 1].y);

        Arrays.sort(e, 0, cnt);

        long ans = 0;
        for (int i = 0; i < cnt; i ++) {
            int u = e[i].u, v = e[i].v, val = e[i].val;
            if (findpar(u) == findpar(v)) continue;
            unite(u, v);
            ans += val;
        }

        System.out.println(ans);
    }

    static class Node {
        int x, y, id;
    }

    static class Edge {
        int u, v, val;
        public Edge(int u, int v, int val) {
            this.u = u;
            this.v = v;
            this.val = val;
        }
        public int compareTo(Edge e) {
            return this.val - e.val;
        }
    }

    static int[] par;
    static Edge[] e;

    static void init(int n) {
        for (int i = 0; i <= n; i ++)
            par[i] = i;
    }

    static int findpar(int x) {
        return par[x] = (par[x] == x? x : findpar(par[x]));
    }

    static void unite(int x, int y) {
        x = findpar(x);
        y = findpar(y);
        if (x == y) return;
        par[x] = y;
    }
}"
StarCoder,codenet,C++,Java,s447383972.java,"import java.util.*;
public class s447383972 {
	public static void main(String[] args){
		Scanner cin=new Scanner(System.in);
		int n=cin.nextInt();
		int[] a=new int[n+1];
		for(int i=1;i<=n;i++)	a[i]=cin.nextInt();
		Arrays.sort(a);
		int tot=0;
		for(int i=1;i<=n;i++)
			if(a[i]==a[i+1])	q[++tot]=a[i],i++;
		System.out.println(q[tot]*q[tot-1]);
	}
}","import java.util.*;
public class Main {
	public static void main(String[] args){
		Scanner cin=new Scanner(System.in);
		int n=cin.nextInt();
		int[] a=new int[n+1];
		for(int i=1;i<=n;i++)	a[i]=cin.nextInt();
		Arrays.sort(a);
		int[] q = new int[n];
		int tot=0;
		for(int i=1;i<n;i++)
			if(a[i]==a[i+1]) {
				q[++tot]=a[i];
				i++;
			}
		System.out.println(q[tot]*q[tot-1]);
	}
}"
StarCoder,codenet,C++,Java,s634121896.java,# Token size exceeded.,# Token size exceeded.
StarCoder,codenet,C++,Java,s472290172.java,"import java.util.*;

public class s472290172 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String str = sc.next();

        int max = 0, cnt = 0;
        for (char sc : str.toCharArray()) {
            if (sc == 'A' || sc == 'C' || sc == 'G' || sc == 'T') {
                cnt++;
            } else {
                cnt = 0;
            }
            max = max < cnt? cnt : max;
        }

        System.out.println(max);
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String str = scanner.next();

        int max = 0, cnt = 0;
        for (char sc : str.toCharArray()) {
            if (sc == 'A' || sc == 'C' || sc == 'G' || sc == 'T') {
                cnt++;
            } else {
                cnt = 0;
            }
            max = max < cnt? cnt : max;
        }

        System.out.println(max);
    }
}"
StarCoder,codenet,C++,Java,s772335512.java,"import java.util.*;

public class s772335512 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] grundy = new int[N];
        boolean[] used = new boolean[N];
        for (int i = 0; i < N; i++) {
            G[i] = new ArrayList<Integer>();
            grundy[i] = 0;
            used[i] = false;
        }
        for (int i = 0; i < N - 1; i++) {
            int x = sc.nextInt() - 1;
            int y = sc.nextInt() - 1;
            G[x].add(y);
            G[y].add(x);
        }
        dfs(0);
        if (grundy[0]!= 0) {
            System.out.println(""Alice"");
        } else {
            System.out.println(""Bob"");
        }
    }

    public static void dfs(int v) {
        used[v] = true;
        grundy[v] = 0;
        for (int i = 0; i < G[v].size(); i++) {
            if (!used[G[v].get(i)]) {
                dfs(G[v].get(i));
                grundy[v] ^= (grundy[G[v].get(i)] + 1);
            }
        }
    }

    static ArrayList<Integer>[] G = new ArrayList[100000];
}","import java.util.*;

public class Main {
    static boolean[] used;
    static int[] grundy;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        grundy = new int[N];
        used = new boolean[N];
        for (int i = 0; i < N; i++) {
            G[i] = new ArrayList<Integer>();
            grundy[i] = 0;
            used[i] = false;
        }
        for (int i = 0; i < N - 1; i++) {
            int x = sc.nextInt() - 1;
            int y = sc.nextInt() - 1;
            G[x].add(y);
            G[y].add(x);
        }
        dfs(0);
        if (grundy[0]!= 0) {
            System.out.println(""Alice"");
        } else {
            System.out.println(""Bob"");
        }
    }

    public static void dfs(int v) {
        used[v] = true;
        grundy[v] = 0;
        for (int i = 0; i < G[v].size(); i++) {
            if (!used[G[v].get(i)]) {
                dfs(G[v].get(i));
                grundy[v] ^= (grundy[G[v].get(i)] + 1);
            }
        }
    }

    static ArrayList<Integer>[] G = new ArrayList[100000];
}"
StarCoder,codenet,C++,Java,s480704678.java,"import java.util.*;
import java.io.*;

public class s480704678 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] a = new long[n];
        long[] acc = new long[n + 1];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
            acc[i + 1] = (acc[i] + a[i]) % MOD;
        }

        long ans = 0;
        for (int i = 0; i < n; i++) {
            ans += a[i] * (MOD + acc[n] - acc[i + 1]) % MOD;
            ans %= MOD;
        }
        System.out.println(ans);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    static long MOD = 1000000007L;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] a = new long[n];
        long[] acc = new long[n + 1];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
            acc[i + 1] = (acc[i] + a[i]) % MOD;
        }

        long ans = 0;
        for (int i = 0; i < n; i++) {
            ans += a[i] * (MOD + acc[n] - acc[i + 1]) % MOD;
            ans %= MOD;
        }
        System.out.println(ans);
    }
}"
StarCoder,codenet,C++,Java,s789380051.java,"import java.util.*;
import java.math.*;

public class s789380051 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        long n = in.nextLong();
        long a = in.nextLong();
        long b = in.nextLong();
        long ans = 1;
        ans = (long) Math.pow(2, n);
        ans--;
        long tmp_nd;
        tmp_nd = comb_s(n, a);
        ans = (ans - tmp_nd) % MOD;
        while (ans < 0) {
            ans += MOD;
        }
        tmp_nd = comb_s(n, b);
        ans = (ans - tmp_nd) % MOD;
        while (ans < 0) {
            ans += MOD;
        }
        System.out.println(ans);
    }

    public static long comb_s(long n, long r) {
        long tmp_n = 1;
        long tmp_d = 1;
        long ans;
        for (int i = 1; i <= r; i++) {
            tmp_n = (tmp_n * (n + 1 - i)) % MOD;
            tmp_d = (tmp_d * i) % MOD;
            ans = tmp_n * mod_pow(tmp_d, MOD - 2);
        }
        return ans;
    }

    public static long mod_pow(long x, long n) {
        long ans = 1;
        while (n > 0) {
            if ((n & 1) == 1) {
                ans = ans * x % MOD;
            }
            x = x * x % MOD;
            n >>= 1;
        }
        return ans;
    }
}","import java.util.*;
import java.math.*;

public class Main {
    static final int MOD = 1000000007;
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        long n = in.nextLong();
        long a = in.nextLong();
        long b = in.nextLong();
        long ans = 1;
        ans = (long) Math.pow(2, n);
        ans--;
        long tmp_nd;
        tmp_nd = comb_s(n, a);
        ans = (ans - tmp_nd) % MOD;
        while (ans < 0) {
            ans += MOD;
        }
        tmp_nd = comb_s(n, b);
        ans = (ans - tmp_nd) % MOD;
        while (ans < 0) {
            ans += MOD;
        }
        System.out.println(ans);
    }

    public static long comb_s(long n, long r) {
        long tmp_n = 1;
        long tmp_d = 1;
        long ans = 0;
        for (int i = 1; i <= r; i++) {
            tmp_n = (tmp_n * (n + 1 - i)) % MOD;
            tmp_d = (tmp_d * i) % MOD;
            ans = tmp_n * mod_pow(tmp_d, MOD - 2);
        }
        return ans;
    }

    public static long mod_pow(long x, long n) {
        long ans = 1;
        while (n > 0) {
            if ((n & 1) == 1) {
                ans = ans * x % MOD;
            }
            x = x * x % MOD;
            n >>= 1;
        }
        return ans;
    }
}"
StarCoder,codenet,C++,Java,s954770518.java,"import java.util.*;
public class s954770518 {

    public static void main(String[] args) {
        int s[]=new int[11];
        for(int i=0;i<10;i++){
            s[i]=Integer.parseInt(args[i]);
        }
        Arrays.sort(s);
        for(int i=9;i>6;i--){
            System.out.println(s[i]);
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        int s[]=new int[10];
        Scanner scanner=new Scanner(System.in);
        for(int i=0;i<10;i++){
            s[i]=scanner.nextInt();
        }
        Arrays.sort(s);
        for(int i=9;i>6;i--){
            System.out.println(s[i]);
        }
    }
}"
StarCoder,codenet,C++,Java,s146177123.java,"import java.util.*;
import java.io.*;

public class s146177123 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		while(true){
			int n=sc.nextInt();
			if(n==-1)break;
			boolean[] st=new boolean[7];
			for(int i=0;i<n;i++){
				int t=sc.nextInt();
				char[] ans=new char[8];
				for(int j=0;j<7;j++){
					ans[j]=st[j]^seg[t][j]?'1':'0';
					st[j]=seg[t][j];
				}
				System.out.println(new String(ans));
			}
		}
	}
	static boolean[][] seg=new boolean[][]{
		{0,1,1,1,1,1,1},
		{0,0,0,0,1,1,0},
		{1,0,1,1,0,1,1},
		{1,0,0,1,1,1,1},
		{1,1,0,0,1,1,0},
		
		{1,1,0,1,1,0,1},
		{1,1,1,1,1,0,1},
		{0,1,0,0,1,1,1},
		{1,1,1,1,1,1,1},
		{1,1,0,1,1,1,1}
	};
}","import java.util.*;
import java.io.*;

public class Main {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		while(true){
			int n=sc.nextInt();
			if(n==-1)break;
			boolean[] st=new boolean[7];
			for(int i=0;i<n;i++){
				int t=sc.nextInt();
				char[] ans=new char[7];
				for(int j=0;j<7;j++){
					ans[j]=st[j]^seg[t][j]?'1':'0';
					st[j]=seg[t][j];
				}
				System.out.println(new String(ans));
			}
		}
	}
	static boolean[][] seg = {
		{false, true, true, true, true, true, true},
		{false, false, false, false, true, true, false},
		{true, false, true, true, false, true, true},
		{true, false, false, true, true, true, true},
		{true, true, false, false, true, true, false},
		{true, true, false, true, true, false, true},
		{true, true, true, true, true, false, true},
		{false, true, false, false, true, true, true},
		{true, true, true, true, true, true, true},
		{true, true, false, true, true, true, true}
	};
}"
StarCoder,codenet,C++,Java,s102850254.java,"import java.util.*;
public class s102850254 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();
        for(int l=0;l<d;l++) {
            int n = sc.nextInt();
            if(n == 1) {
                System.out.println(""#"");
                if(l!= d-1) System.out.println();
                continue;
            }
            char[][] map = new char[n+2][n+2];
            for(int i=0;i<=n+1;i++) {
                for(int j=0;j<=n+1;j++) {
                    map[i][j] = '#';
                    if(i == 0 || j == 0 || i == n+1 || j == n+1) map[i][j] = '.';
                }
            }
            visit(map,n);
            for(int i=1;i<=n;i++) {
                for(int j=1;j<map[i].length-1;j++) {
                    System.out.print(map[i][j]);
                }
                System.out.println();
            }
            if(l!= d-1) System.out.println();
        }
    }
    public static void visit(char[][] map,int n) {
        int[] dx = new int[]{0,1,0,-1};
        int[] dy = new int[]{-1,0,1,0};
        int sum,flg = 0;
        int x = 2,y = n;
        map[y][x] ='';
        int[] ab = new int[4];
        ab[0] = ab[1] = ab[2] = ab[3] = 2;
        while(true) {
            sum = 0;
            while(true) {
                if(map[y+dy[flg]*2][x+dx[flg]*2]!= '#' && map[y+dy[flg]][x+dx[flg]]!='' ) {
                    flg++;
                    break;
                }
                map[y+dy[flg]][x+dx[flg]] ='';
                y = y + dy[flg];
                x = x + dx[flg];
                sum++;
            }
            if(flg == 4) flg = 0;
            if(sum == 0) break;
            ab[0] = ab[1];
            ab[1] = ab[2];
            ab[2]  = sum;
            if(ab[0] == 1 && ab[2] == 1 && ab[1] == 1) break;
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();
        for(int l=0;l<d;l++) {
            int n = sc.nextInt();
            if(n == 1) {
                System.out.println(""#"");
                if(l!= d-1) System.out.println();
                continue;
            }
            char[][] map = new char[n+2][n+2];
            for(int i=0;i<=n+1;i++) {
                for(int j=0;j<=n+1;j++) {
                    map[i][j] = '#';
                    if(i == 0 || j == 0 || i == n+1 || j == n+1) map[i][j] = '.';
                }
            }
            visit(map,n);
            for(int i=1;i<=n;i++) {
                for(int j=1;j<map[i].length-1;j++) {
                    System.out.print(map[i][j]);
                }
                System.out.println();
            }
            if(l!= d-1) System.out.println();
        }
    }
    public static void visit(char[][] map,int n) {
        int[] dx = new int[]{0,1,0,-1};
        int[] dy = new int[]{-1,0,1,0};
        int sum,flg = 0;
        int x = 2,y = n;
        map[y][x] =' ';
        int[] ab = new int[4];
        ab[0] = ab[1] = ab[2] = ab[3] = 2;
        while(true) {
            sum = 0;
            while(true) {
                if(map[y+dy[flg]*2][x+dx[flg]*2]!= '#' && map[y+dy[flg]][x+dx[flg]]!=' ' ) {
                    flg++;
                    break;
                }
                map[y+dy[flg]][x+dx[flg]] =' ';
                y = y + dy[flg];
                x = x + dx[flg];
                sum++;
            }
            if(flg == 4) flg = 0;
            if(sum == 0) break;
            ab[0] = ab[1];
            ab[1] = ab[2];
            ab[2]  = sum;
            if(ab[0] == 1 && ab[2] == 1 && ab[1] == 1) break;
        }
    }
}"
StarCoder,codenet,C++,Java,s143031369.java,"import java.util.*;
import java.io.*;
import java.math.*;
public class s143031369 {
    public static void main(String[] args) {
        Scanner cin=new Scanner(System.in);
        int n=cin.nextInt();
        double ang[]=new double[110];
        double ans[]=new double[110];
        Point P[]=new Point[110];
        for(int i=0;i<n;i++){
            int x=cin.nextInt();
            int y=cin.nextInt();
            P[i]=new Point(x,y);
        }
        if(n==2){
            System.out.println(""0.5"");
            System.out.println(""0.5"");
        }else{
            int ch[]=new int[110];
            int m=jarvis(P,n,ch);
            double sum=0;
            if(m==2){
                ans[ch[0]]=0.5;
                ans[ch[1]]=0.5;
            }else{
                for(int i=0;i<m;i++){
                    ang[ch[i]]=PI-acos(cos(P[ch[i]],P[ch[(i-1+m)%m]],P[ch[(i+1)%m]]));
                }
                for(int i=0;i<n;i++){
                    ans[i]=ang[i]/2./PI;
                }
            }
            for(int i=0;i<n;i++){
                System.out.println(ans[i]);
            }
        }
    }
    public static int sig(double d){
        if(Math.abs(d)<1e-8)return 0;
        if(d<0)return -1;
        return 1;
    }
    public static double dot(Point o,Point a,Point b){
        return (a.x-o.x)*(b.x-o.x)+(a.y-o.y)*(b.y-o.y);
    }
    public static double dot(Point a,Point b){
        return a.x*b.x+a.y*b.y;
    }
    public static double cross(Point o,Point a,Point b){
        return (a.x-o.x)*(b.y-o.y)-(b.x-o.x)*(a.y-o.y);
    }
    public static int btw(Point x,Point a,Point b){
        return sig(dot(x,a,b));
    }
    public static double dis(Point a,Point b){
        return Math.sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));
    }
    public static double cos(Point o,Point a,Point b){
        return dot(o,a,b)/dis(o,a)/dis(o,b);
    }
    public static int jarvis(Point P[],int n,int ch[]){
        int d,i,o,s,l,t;
        for(d=i=0;i<n;i++)
            if(P[i]<P[d])d=i;
        l=s=ch[0]=d;
        d=1;
        do{
            o=l;
            for(i=0;i<n;i++){
                if((t=sig(cross(P[o],P[l],P[i])))>0 || (t==0 && btw(P[l],P[o],P[i])<=0))l=i;
            }
            ch[d++]=l;
        }while(l!=s);
        return d-1;
    }
}
class Point implements Comparable<Point>{
    double x,y;
    public Point(){}
    public Point(","import java.util.*;
import java.io.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        Scanner cin=new Scanner(System.in);
        int n=cin.nextInt();
        double ang[]=new double[110];
        double ans[]=new double[110];
        Point P[]=new Point[110];
        for(int i=0;i<n;i++){
            int x=cin.nextInt();
            int y=cin.nextInt();
            P[i]=new Point(x,y);
        }
        if(n==2){
            System.out.println(""0.5"");
            System.out.println(""0.5"");
        }else{
            int ch[]=new int[110];
            int m=jarvis(P,n,ch);
            double sum=0;
            if(m==2){
                ans[ch[0]]=0.5;
                ans[ch[1]]=0.5;
            }else{
                for(int i=0;i<m;i++){
                    ang[ch[i]]=PI-acos(cos(P[ch[i]],P[ch[(i-1+m)%m]],P[ch[(i+1)%m]]));
                }
                for(int i=0;i<n;i++){
                    ans[i]=ang[i]/2./PI;
                }
            }
            for(int i=0;i<n;i++){
                System.out.println(ans[i]);
            }
        }
    }
    public static int sig(double d){
        if(Math.abs(d)<1e-8)return 0;
        if(d<0)return -1;
        return 1;
    }
    public static double dot(Point o,Point a,Point b){
        return (a.x-o.x)*(b.x-o.x)+(a.y-o.y)*(b.y-o.y);
    }
    public static double dot(Point a,Point b){
        return a.x*b.x+a.y*b.y;
    }
    public static double cross(Point o,Point a,Point b){
        return (a.x-o.x)*(b.y-o.y)-(b.x-o.x)*(a.y-o.y);
    }
    public static int btw(Point x,Point a,Point b){
        return sig(dot(x,a,b));
    }
    public static double dis(Point a,Point b){
        return Math.sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));
    }
    public static double cos(Point o,Point a,Point b){
        return dot(o,a,b)/dis(o,a)/dis(o,b);
    }
    public static int jarvis(Point P[],int n,int ch[]){
        int d,i,o,s,l,t;
        for(d=i=0;i<n;i++)
            if(P[i]<P[d])d=i;
        l=s=ch[0]=d;
        d=1;
        do{
            o=l;
            for(i=0;i<n;i++){
                if((t=sig(cross(P[o],P[l],P[i])))>0 || (t==0 && btw(P[l],P[o],P[i])<=0))l=i;
            }
            ch[d++]=l;
        }while(l!=s);
        return d-1;
    }
}
class Point implements Comparable<Point>{
    double x,y;
    public Point(){}
    public Point("
StarCoder,codenet,C++,Java,s110965154.java,"/*
 * InsertionSort.java
 *
 *  Created on: 2014/07/25
 *      Author: WanWan1985
 */
import java.util.Scanner;
 
public class s110965154 {
 
    public static void main(String[] args) {
 
        Scanner sc = new Scanner(System.in);
 
        int num = sc.nextInt();
 
        int[] array = new int[num];
 
        for (int i = 0; i < num; i++) {
            array[i] = sc.nextInt();
        }
 
        sort(array);
 
        for (int i = 0; i < num; i++) {
            System.out.print(array[i]);
            if (i!= num - 1) {
                System.out.print("" "");
            }
        }
        System.out.println();
    }
 
    public static void sort(int[] array) {
 
        for (int i = 0; i < array.length; i++) {
 
            if (i!= 0) {
 
                int temp = array[i];
                int j = i - 1;
                while ((j >= 0) && (array[j] > temp)) {
                    array[j + 1] = array[j];
                    j--;
                }
                array[j + 1] = temp;
            }
 
            for (int k = 0; k < array.length; k++) {
                System.out.print(array[k]);
                if (k!= array.length - 1) {
                    System.out.print("" "");
                }
            }
            System.out.println();
        }
    }
}","/*
 * InsertionSort.java
 *
 *  Created on: 2014/07/25
 *      Author: WanWan1985
 */
import java.util.Scanner;
 
public class Main {
 
    public static void main(String[] args) {
 
        Scanner sc = new Scanner(System.in);
 
        int num = sc.nextInt();
 
        int[] array = new int[num];
 
        for (int i = 0; i < num; i++) {
            array[i] = sc.nextInt();
        }
 
        sort(array);
 
        for (int i = 0; i < num; i++) {
            System.out.print(array[i]);
            if (i!= num - 1) {
                System.out.print("" "");
            }
        }
        System.out.println();
    }
 
    public static void sort(int[] array) {
 
        for (int i = 0; i < array.length; i++) {
 
            if (i!= 0) {
 
                int temp = array[i];
                int j = i - 1;
                while ((j >= 0) && (array[j] > temp)) {
                    array[j + 1] = array[j];
                    j--;
                }
                array[j + 1] = temp;
            }
 
            for (int k = 0; k < array.length; k++) {
                System.out.print(array[k]);
                if (k!= array.length - 1) {
                    System.out.print("" "");
                }
            }
            System.out.println();
        }
    }
}"
StarCoder,codenet,C++,Java,s620821061.java,"import java.util.ArrayList;
import java.util.List;

public class s620821061 {
    public static void main(String[] args) {
        while (true) {
            int n, m;
            try {
                n = Integer.parseInt(System.console().readLine());
                m = Integer.parseInt(System.console().readLine());
            } catch (Exception e) {
                break;
            }
            if (n == 0) break;
            List<Integer>[] G = new List[2*n];
            for (int i = 0; i < 2*n; i++) {
                G[i] = new ArrayList<>();
            }
            int[] match = new int[2*n];
            for (int i = 0; i < 2*n; i++) {
                match[i] = -1;
            }
            int[] used = new int[2*n];
            for (int i = 0; i < n; i++) {
                int a;
                try {
                    a = Integer.parseInt(System.console().readLine());
                } catch (Exception e) {
                    break;
                }
                for (int j = 0; j < m; j++) {
                    if (gcd(a, b[j])!= 1) {
                        G[i].add(j+n);
                        G[j+n].add(i);
                    }
                }
            }
            int res = 0;
            for (int v = 0; v < n; v++) {
                if (match[v] < 0) {
                    for (int i = 0; i < 2*n; i++) {
                        used[i] = 0;
                    }
                    if (dfs(G, match, used, v)) {
                        res++;
                    }
                }
            }
            System.out.println(res);
        }
    }

    private static boolean dfs(List<Integer>[] G, int[] match, int[] used, int v) {
        used[v] = 1;
        for (int i = 0; i < G[v].size(); i++) {
            int u = G[v].get(i), w = match[u];
            if (w < 0 || (!used[w] && dfs(G, match, used, w))) {
                match[v] = u;
                match[u] = v;
                return true;
            }
        }
        return false;
    }

    private static int gcd(int a, int b) {
        if (b == 0) return a;
        return gcd(b, a%b);
    }
}","import java.util.ArrayList;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        while (true) {
            int n, m;
            try {
                n = Integer.parseInt(System.console().readLine());
                m = Integer.parseInt(System.console().readLine());
            } catch (Exception e) {
                break;
            }
            if (n == 0) break;
            List<Integer>[] G = new List[2*n];
            for (int i = 0; i < 2*n; i++) {
                G[i] = new ArrayList<>();
            }
            int[] match = new int[2*n];
            for (int i = 0; i < 2*n; i++) {
                match[i] = -1;
            }
            int[] used = new int[2*n];
            for (int i = 0; i < n; i++) {
                int a;
                try {
                    a = Integer.parseInt(System.console().readLine());
                } catch (Exception e) {
                    break;
                }
                for (int j = 0; j < m; j++) {
                    if (gcd(a, b[j])!= 1) {
                        G[i].add(j+n);
                        G[j+n].add(i);
                    }
                }
            }
            int res = 0;
            for (int v = 0; v < n; v++) {
                if (match[v] < 0) {
                    for (int i = 0; i < 2*n; i++) {
                        used[i] = 0;
                    }
                    if (dfs(G, match, used, v)) {
                        res++;
                    }
                }
            }
            System.out.println(res);
        }
    }

    private static boolean dfs(List<Integer>[] G, int[] match, int[] used, int v) {
        used[v] = 1;
        for (int i = 0; i < G[v].size(); i++) {
            int u = G[v].get(i), w = match[u];
            if (w < 0 || (!used[w] && dfs(G, match, used, w))) {
                match[v] = u;
                match[u] = v;
                return true;
            }
        }
        return false;
    }

    private static int gcd(int a, int b) {
        if (b == 0) return a;
        return gcd(b, a%b);
    }
}"
StarCoder,codenet,C++,Java,s522742913.java,"import java.util.*;

public class s522742913 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String source = in.next();

        if(source.length() > 10 || source.length() < 1)
        {
            return -1;
        }

        int max_i = (int) Math.pow(2, source.length() - 1);

        double sum = 0;

        for (int i = 0; i < max_i; ++i)
        {
            BitSet plus = BitSet.valueOf(new long[]{i});

            double number = 0;

            String working = source;
            while(plus.anySet())
            {
                int i = plus.nextSetBit(0);
                sum += Double.valueOf(working.substring(0, i + 1));
                plus.clear(i);
                working = working.substring(i + 1);
            }
            sum += Double.valueOf(working);
        }

        System.out.printf(""%.0f"", sum);
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String source = in.next();

        if(source.length() > 10 || source.length() < 1)
        {
            return;
        }

        int max_i = (int) Math.pow(2, source.length() - 1);

        double sum = 0;

        for (int i = 0; i < max_i; ++i)
        {
            String plus = Integer.toBinaryString(i);

            double number = 0;

            String working = source;
            while (plus.contains(""1"")) {
                int index = plus.indexOf('1');
                sum += Double.parseDouble(working.substring(0, index + 1));
                plus = plus.substring(index + 1);
                working = working.substring(index + 1);
            }
            sum += Double.valueOf(working);
        }

        System.out.printf(""%.0f"", sum);
    }
}"
StarCoder,codenet,C++,Java,s615050061.java,"import java.util.*;
import java.io.*;

public class s615050061 {

	public static void main(String[] args) throws Exception {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		char[] s = new char[n + 1];
		s[0] = '0';
		for (int i = 1; i <= n; i++)
			s[i] = sc.next().charAt(0);
		long[] f = new long[n + 1];
		int[] g = new int[n + 1];
		f[0] = 0;
		g[0] = 0;
		for (int i = 1; i <= n; i++) {
			if (s[i] == '+' || s[i] == '-') {
				f[i] = f[i - 1] + (s[i] == '+'? 1 : -1) * Math.pow(13131, g[i] = g[i - 1]);
			} else {
				f[i] = f[i - 1];
				g[i] = g[i - 1] + (s[i] == '<'? -1 : 1);
			}
		}
		Map<Long, Long> map = new HashMap<Long, Long>();
		long cnt = 0;
		for (int i = n; i > 0; i--) {
			if (map.containsKey(f[i]))
				cnt += map.get(f[i]);
			map.put(f[i] * Math.pow(13131, g[i - 1]) + f[i - 1], map.getOrDefault(f[i] * Math.pow(13131, g[i - 1]) + f[i - 1], 0) + 1);
		}
		System.out.println(cnt);
	}

}","import java.util.*;
import java.io.*;

public class Main {

	public static void main(String[] args) throws Exception {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		char[] s = new char[n + 1];
		s[0] = '0';
		for (int i = 1; i <= n; i++)
			s[i] = sc.next().charAt(0);
		long[] f = new long[n + 1];
		int[] g = new int[n + 1];
		f[0] = 0;
		g[0] = 0;
		for (int i = 1; i <= n; i++) {
			if (s[i] == '+' || s[i] == '-') {
				f[i] = f[i - 1] + (s[i] == '+'? 1 : -1) * Math.pow(13131, g[i] = g[i - 1]);
			} else {
				f[i] = f[i - 1];
				g[i] = g[i - 1] + (s[i] == '<'? -1 : 1);
			}
		}
		Map<Long, Long> map = new HashMap<Long, Long>();
		long cnt = 0;
		for (int i = n; i > 0; i--) {
			if (map.containsKey(f[i]))
				cnt += map.get(f[i]);
			map.put(f[i] * Math.pow(13131, g[i - 1]) + f[i - 1], map.getOrDefault(f[i] * Math.pow(13131, g[i - 1]) + f[i - 1], 0) + 1);
		}
		System.out.println(cnt);
	}

}"
StarCoder,codenet,C++,Java,s814403222.java,"import java.util.*;
public class s814403222 {
  public static void main(String[] args){
    Scanner cin = new Scanner(System.in);
    while(cin.hasNext()){
      int n = cin.nextInt();
      if(n == 0) break;
      int m;
      for(int i = 0; i < 33; i++) d[i].clear();
      for(int i = 0; i < n; i++){
	v[i].first = 0;
	cin.next();
	m = cin.nextInt();
	for(int j = 0; j < m; j++){
	  int a = cin.nextInt();
	  v[i].first += n - d[a].size();
	  for(int k = 0; k < d[a].size(); k++){
	    v[d[a][k]].first--;
	  }
	  d[a].add(i);
	}
      }
      Arrays.sort(v,new Comparator<P>(){
	public int compare(P a, P b){
	  return a.first - b.first;
	}
      });
      System.out.println(v[0].first + "" "" + v[0].second);
    }
  }
}","import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner cin = new Scanner(System.in);
    while(cin.hasNext()){
      int n = cin.nextInt();
      if(n == 0) break;
      int m;
      for(int i = 0; i < 33; i++) d[i].clear();
      for(int i = 0; i < n; i++){
	v[i].first = 0;
	cin.next();
	m = cin.nextInt();
	for(int j = 0; j < m; j++){
	  int a = cin.nextInt();
	  v[i].first += n - d[a].size();
	  for(int k = 0; k < d[a].size(); k++){
	    v[d[a][k]].first--;
	  }
	  d[a].add(i);
	}
      }
      Arrays.sort(v,new Comparator<P>(){
	public int compare(P a, P b){
	  return a.first - b.first;
	}
      });
      System.out.println(v[0].first + "" "" + v[0].second);
    }
  }
}"
StarCoder,codenet,C++,Java,s097779718.java,"import java.util.Scanner;

public class s097779718 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		long A = sc.nextLong();
		long B = sc.nextLong();

		System.out.println(A * B / Euclid(A, B));
	}

	public static long Euclid(long x, long y) {
		long tmp;

		if (x < y) {
			tmp = x;
			x = y;
			y = tmp;
		}

		if (!(x%y)) return y;
		return Euclid(y, x%y);
	}
}","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		long A = sc.nextLong();
		long B = sc.nextLong();

		System.out.println(A * B / Euclid(A, B));
	}

	public static long Euclid(long x, long y) {
		long tmp;

		if (x < y) {
			tmp = x;
			x = y;
			y = tmp;
		}

		if (!(x%y!=0)) return y;
		return Euclid(y, x%y);
	}
}"
StarCoder,codenet,C++,Java,s807902500.java,"import java.util.*;
public class s807902500 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        String t = in.next();
        s = s + s;
        System.out.println(s.indexOf(t) + 1);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        String t = in.next();
        s = s + s;
        System.out.println(s.indexOf(t) != -1 ? ""Yes"" : ""No"");
    }
}"
StarCoder,codenet,C++,Java,s970719454.java,"import java.util.*;

public class s970719454 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		while(true){
			int n = sc.nextInt();
			int m = sc.nextInt();
			if(n==0)break;
			
			boolean dpflg = false;
			
			int[] here = new int[100001];
			int[] dp1 = new int[100001];
			int[] dp2 = new int[100001];
			
			rep(i,100001)here[i]=dp1[i]=dp2[i]=0;
			
			rep(i,m){
				int a = sc.nextInt();
				if(a==0) dpflg=true;
				
				here[a]=1;
			}
			
			int maxi1 = 0;
			int maxi2 = 0;
			
			rep(i,1,n+1){
				if(here[i]==1)dp1[i] = dp1[i-1]+1;
				maxi1 = max(dp1[i], maxi1);
			}
			
			rep(i,1,n+1){
				if(here[i]==1)dp2[i] = dp2[i-1]+1;
				else dp2[i] = dp1[i-1]+1;
				maxi2 = max(dp2[i], maxi2);
			}
			
			if(!dpflg){
				System.out.println(maxi1);
			}else{
				System.out.println(maxi2);
			}
		}
	}

}","import java.util.*;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		while(true){
			int n = sc.nextInt();
			int m = sc.nextInt();
			if(n==0)break;
			
			boolean dpflg = false;
			
			int[] here = new int[100001];
			int[] dp1 = new int[100001];
			int[] dp2 = new int[100001];
			
			for (int i = 0; i < 100001; i++) {
                here[i]=0;
				dp1[i]=0;
				dp2[i]=0;
            }

			for (int i = 0; i < m; i++) {
                int a = sc.nextInt();
                if (a==0) dpflg = true;

                here[a] = 1;
            }
			
			int maxi1 = 0;
			int maxi2 = 0;
			
			for (int i = 1; i <= n; i++) {
                if(here[i]==1) dp1[i] = dp1[i-1]+1;
                maxi1 = Math.max(dp1[i], maxi1);
            }
			
			for (int i = 1; i <= n; i++) {
                if (here[i]==1)dp2[i] = dp2[i-1]+1;
                else dp2[i]=dp1[i-1]+1;
                maxi2 = Math.max(dp2[i], maxi2);
            }
			
			if(!dpflg){
				System.out.println(maxi1);
			}else{
				System.out.println(maxi2);
			}
		}
	}

}"
StarCoder,codenet,C++,Java,s794872785.java,"import java.util.*;

public class s794872785 {

	public static void main(String[] args){
		Scanner cin = new Scanner(System.in);
		int maxsize=0;
		int maxcnt=0;
		int ans_num;
		int ans_num2;
		Vector<String> str_v = new Vector<String>();
		
		String in;
		while(cin.hasNext()){
			in = cin.next();
			str_v.add(in);
			if(maxsize < in.length()){
				maxsize = in.length();
				ans_num = str_v.size()-1;
			}
		}
		for(int i=0;i<str_v.size();i++){
			int cnt=0;
			for(int j=0;j<str_v.size();j++){
				if(str_v.get(i).equals(str_v.get(j))) cnt++;
			}
			if(maxcnt < cnt){
				maxcnt = cnt;
				ans_num2 = i;
			}
		}
		
		System.out.println(str_v.get(ans_num2) + "" "" + str_v.get(ans_num));
	}
}","import java.util.*;

public class Main {

	public static void main(String[] args){
		Scanner cin = new Scanner(System.in);
		int maxsize=0;
		int maxcnt=0;
		int ans_num=0;
		int ans_num2=0;
		Vector<String> str_v = new Vector<String>();
		
		String in;
		while(cin.hasNext()){
			in = cin.next();
			str_v.add(in);
			if(maxsize < in.length()){
				maxsize = in.length();
				ans_num = str_v.size()-1;
			}
		}
		for(int i=0;i<str_v.size();i++){
			int cnt=0;
			for(int j=0;j<str_v.size();j++){
				if(str_v.get(i).equals(str_v.get(j))) cnt++;
			}
			if(maxcnt < cnt){
				maxcnt = cnt;
				ans_num2 = i;
			}
		}
		
		System.out.println(str_v.get(ans_num2) + "" "" + str_v.get(ans_num));
	}
}"
StarCoder,codenet,C++,Java,s792884768.java,"import java.util.ArrayList;
import java.util.List;

class TSize
{
    int r;
    int c;
    TSize()
    {
        r = 0;
        c = 0;
    }
    TSize(int Ar, int Ac)
    {
        r = Ar;
        c = Ac;
    }
}

class TMcmSolver
{
    List<TSize> FChain;
    int[][] FMemo;

    static int Count(TSize Left, TSize Right)
    {
        return Left.r * Right.c * Left.c;
    }
    int Solve(int s, int l)
    {
        assert(s <= l);
        if(s == l) return 0;
        if(FMemo[s][l]!= 0) return FMemo[s][l];
        if(s + 1 == l){
            FMemo[s][l] = Count(FChain.get(s), FChain.get(l));
        }else{
            int min = Integer.MAX_VALUE;
            for(int i = s; i < l; ++i){
                int c = Solve(s, i) + Count(new TSize(FChain.get(s).r, FChain.get(i).c), new TSize(FChain.get(i+1).r, FChain.get(l).c)) + Solve(i+1, l);
                min = Math.min(min, c);
            }
            FMemo[s][l] = min;
        }
        return FMemo[s][l];
    }
public:
    TMcmSolver(List<TSize> Chain)
    {
        FChain = Chain;
        FMemo = new int[Chain.size()][Chain.size()];
        for(int i = 0; i < FMemo.length; ++i){
            for(int j = 0; j < FMemo[0].length; ++j){
                FMemo[i][j] = 0;
            }
        }
    }
    int Answer()
    {
        return Solve(0, FMemo.length-1);
    }
    void Print()
    {
        for(int s = 0; s < FMemo.length; ++s){
            for(int l = 0; l < FMemo[0].length; ++l){
                System.out.print(FMemo[s][l] + '\t');
            }
            System.out.println();
        }
    }
}

public class s792884768 {
    public static void main(String[] args)
    {
        int n;
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        if(n == 1){
            System.out.println(0);
            return;
        }
        List<TSize> Chain = new ArrayList<TSize>();
        for(int i = 0; i < n; ++i){
            TSize Size = new TSize();
            Size.r = scanner.nextInt();
            Size.c = scanner.nextInt();
            Chain.add(Size);
        }
        TMcmSolver Solver = new TMcmSolver(Chain);
        System.out.println(Solver.Answer());
    }
}","import java.util.ArrayList;
import java.util.List;

class TSize
{
    int r;
    int c;
    TSize()
    {
        r = 0;
        c = 0;
    }
    TSize(int Ar, int Ac)
    {
        r = Ar;
        c = Ac;
    }
}

class TMcmSolver
{
    List<TSize> FChain;
    int[][] FMemo;

    static int Count(TSize Left, TSize Right)
    {
        return Left.r * Right.c * Left.c;
    }
    int Solve(int s, int l)
    {
        assert(s <= l);
        if(s == l) return 0;
        if(FMemo[s][l]!= 0) return FMemo[s][l];
        if(s + 1 == l){
            FMemo[s][l] = Count(FChain.get(s), FChain.get(l));
        }else{
            int min = Integer.MAX_VALUE;
            for(int i = s; i < l; ++i){
                int c = Solve(s, i) + Count(new TSize(FChain.get(s).r, FChain.get(i).c), new TSize(FChain.get(i+1).r, FChain.get(l).c)) + Solve(i+1, l);
                min = Math.min(min, c);
            }
            FMemo[s][l] = min;
        }
        return FMemo[s][l];
    }
public:
    TMcmSolver(List<TSize> Chain)
    {
        FChain = Chain;
        FMemo = new int[Chain.size()][Chain.size()];
        for(int i = 0; i < FMemo.length; ++i){
            for(int j = 0; j < FMemo[0].length; ++j){
                FMemo[i][j] = 0;
            }
        }
    }
    int Answer()
    {
        return Solve(0, FMemo.length-1);
    }
    void Print()
    {
        for(int s = 0; s < FMemo.length; ++s){
            for(int l = 0; l < FMemo[0].length; ++l){
                System.out.print(FMemo[s][l] + '\t');
            }
            System.out.println();
        }
    }
}

public class Main {
    public static void main(String[] args)
    {
        int n;
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        if(n == 1){
            System.out.println(0);
            return;
        }
        List<TSize> Chain = new ArrayList<TSize>();
        for(int i = 0; i < n; ++i){
            TSize Size = new TSize();
            Size.r = scanner.nextInt();
            Size.c = scanner.nextInt();
            Chain.add(Size);
        }
        TMcmSolver Solver = new TMcmSolver(Chain);
        System.out.println(Solver.Answer());
    }
}"
StarCoder,codenet,C++,Java,s466967233.java,"import java.util.*;
import java.io.*;

public class s466967233 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] A = new int[200100];
        int[] B = new int[200100];
        int now = 1;
        int cnt = 0;
        for (int i = 0; i < N; i++) {
            A[i+1] = sc.nextInt();
        }
        for (int i = 0; i < 200100; i++) {
            B[i] = -1;
        }
        //途中でどっかに合流したら抜ける
        int j;
        B[1] = 0;
        for(j = 1; j <= K; j++){
            //System.out.println(now + "" -> "" + A[now]);
            now = A[now];
            if(B[now] == -1){
                //System.out.println(""未到達だった"");
                B[now] = j;
            }else{
                //System.out.println(""到達済みだった"");
                //System.out.println(""B[now] = "" + B[now]);
                cnt = j;
                //System.out.println(""cnt = "" + cnt);
                break;
            }
        }
        if(j < K){
            int tmp;
            tmp = (K - B[now]) % (cnt -B[now]);
            //System.out.println(""あと "" + tmp + ""回移動すればいい"");
            //B[now]からtmp回ワープしたところが終着点
            for (int j = 0; j < tmp; j++)
            {
                now = A[now];
            }
        }
        System.out.println(now);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] A = new int[200100];
        int[] B = new int[200100];
        int now = 1;
        int cnt = 0;
        for (int i = 0; i < N; i++) {
            A[i+1] = sc.nextInt();
        }
        for (int i = 0; i < 200100; i++) {
            B[i] = -1;
        }
        //途中でどっかに合流したら抜ける
        int j;
        B[1] = 0;
        for(j = 1; j <= K; j++){
            //System.out.println(now + "" -> "" + A[now]);
            now = A[now];
            if(B[now] == -1){
                //System.out.println(""未到達だった"");
                B[now] = j;
            }else{
                //System.out.println(""到達済みだった"");
                //System.out.println(""B[now] = "" + B[now]);
                cnt = j;
                //System.out.println(""cnt = "" + cnt);
                break;
            }
        }
        if(j < K){
            int tmp;
            tmp = (K - B[now]) % (cnt -B[now]);
            //System.out.println(""あと "" + tmp + ""回移動すればいい"");
            //B[now]からtmp回ワープしたところが終着点
            for (int i = 0; i < tmp; i++)
            {
                now = A[now];
            }
        }
        System.out.println(now);
    }
}"
StarCoder,codenet,C++,Java,s049366196.java,"#define _GLIBCXX_DEBUG
#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <utility>
#include <string>
#include <map>
using namespace std;
typedef long long ll;
#define ALL(v) (v).begin(), (v).end()
const int inf = 1e9;
const int mod = 1e9+7;

boolean is_prime(ll x) {
	for (ll i = 2; i*i <= x; i++)
		if (x % i == 0) return false;
	return true;
}

int main() {
	int N;
	cin >> N;

	ll ans = 1;
	for (int i = 2; i <= N; i++) {
		if (is_prime((ll)i)) {
			int NN = N;
			int cnt = 0;
			while (NN) {
				cnt += NN/i;
				NN /= i;
			}
			ans *= cnt+1;
			ans %= mod;
		}
	}

	cout << ans << endl;
    return 0;
}","#define _GLIBCXX_DEBUG
#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <utility>
#include <string>
#include <map>
using namespace std;
typedef long long ll;
#define ALL(v) (v).begin(), (v).end()
const int inf = 1e9;
const int mod = 1e9+7;

boolean is_prime(ll x) {
	for (ll i = 2; i*i <= x; i++)
		if (x % i == 0) return false;
	return true;
}

int main() {
	int N;
	cin >> N;

	ll ans = 1;
	for (int i = 2; i <= N; i++) {
		if (is_prime((ll)i)) {
			int NN = N;
			int cnt = 0;
			while (NN) {
				cnt += NN/i;
				NN /= i;
			}
			ans *= cnt+1;
			ans %= mod;
		}
	}

	cout << ans << endl;
    return 0;
}"
StarCoder,codenet,C++,Java,s098326932.java,"#include<iostream>
#include<iomanip>
#include<cstdio>

#include<vector>
#include<queue>
#include<set>
#include<map>
#include<string>

#include<algorithm>
#include<cmath>
#include<numeric>

using namespace std;
typedef long long ll;
template <class T> inline bool chmax(T& a, T b) {if (a < b) {a = b; return 1;} return 0;}
template <class T> inline bool chmin(T& a, T b) {if (a > b) {a = b; return 1;} return 0;}
const ll INF = 1e18+1;


/*
1 <= S(n) <= 9 * (floor(log10 n) + 1)

したがって n / (9 * (floor(log10 n) + 1)) <= n/S(n) <= n

この達成される下界の内、floorの性質からその候補はちょうど10, 100, 1000...に限られる
10 ^ kのとき下界は
10^k/(9*(k+1))

11/2


その桁で一番小さいのは 19...9/S(19...9)
各桁について 99...9/S()以下なら出力?

各桁において
最もn/S(n)が小さいnは何か

n自体の差は最大10倍

1...19...9の形が可能性


editorial
つまり...
一つ目のポイント
「N以上の整数nでn/S(n)を最小にするもの」を求める
関数を作ってN <- f(N+1)を繰り返せばよい

二つ目
Nに対して、それ以上で最小にしえる候補は、
Nの下位数桁を9に置き換えたものとする
そのうち最小にするものを実際に比較する

*/

ll f(ll N) {
    vector<ll> a(20,0);
    ll d = 0;
    while (N > 0) {
        a[d] = N % 10;
        N /= 10;
        d++;
    }
    double m = 1e18;
    ll res = N;
    for (int i = 0; i <= d; i++) {
        ll bunsi = 0;
        ll bunbo = 9 * i;
        for (int j = d-1; j >= 0; j--) {
            bunsi *= 10;
            if (j < i) bunsi += 9;
            else bunsi += a[j];
            
            if (j >= i) bunbo += a[j];
            
        }
        //cout << ""bb"" << bunsi <<  "" "" << bunbo << ""  "" << endl;
        double frac = (double) bunsi / (double) bunbo;
        if (frac < m) {
            m = frac;
            res = bunsi;
        }
    }
    return res;
}

int main() {
    ll K;
    cin >> K;
    ll N = f(1);
    for (ll i = 0; i < K; i++) {
        cout << N << endl;
        N = f(N+1);
    }
    

}","#include<iostream>
#include<iomanip>
#include<cstdio>

#include<vector>
#include<queue>
#include<set>
#include<map>
#include<string>

#include<algorithm>
#include<cmath>
#include<numeric>

using namespace std;
typedef long long ll;
template <class T> inline bool chmax(T& a, T b) {if (a < b) {a = b; return 1;} return 0;}
template <class T> inline bool chmin(T& a, T b) {if (a > b) {a = b; return 1;} return 0;}
const ll INF = 1e18+1;


/*
1 <= S(n) <= 9 * (floor(log10 n) + 1)

したがって n / (9 * (floor(log10 n) + 1)) <= n/S(n) <= n

この達成される下界の内、floorの性質からその候補はちょうど10, 100, 1000...に限られる
10 ^ kのとき下界は
10^k/(9*(k+1))

11/2


その桁で一番小さいのは 19...9/S(19...9)
各桁について 99...9/S()以下なら出力?

各桁において
最もn/S(n)が小さいnは何か

n自体の差は最大10倍

1...19...9の形が可能性


editorial
つまり...
一つ目のポイント
「N以上の整数nでn/S(n)を最小にするもの」を求める
関数を作ってN <- f(N+1)を繰り返せばよい

二つ目
Nに対して、それ以上で最小にしえる候補は、
Nの下位数桁を9に置き換えたものとする
そのうち最小にするものを実際に比較する

*/

ll f(ll N) {
    vector<ll> a(20,0);
    ll d = 0;
    while (N > 0) {
        a[d] = N % 10;
        N /= 10;
        d++;
    }
    double m = 1e18;
    ll res = N;
    for (int i = 0; i <= d; i++) {
        ll bunsi = 0;
        ll bunbo = 9 * i;
        for (int j = d-1; j >= 0; j--) {
            bunsi *= 10;
            if (j < i) bunsi += 9;
            else bunsi += a[j];
            
            if (j >= i) bunbo += a[j];
            
        }
        //cout << ""bb"" << bunsi <<  "" "" << bunbo << ""  "" << endl;
        double frac = (double) bunsi / (double) bunbo;
        if (frac < m) {
            m = frac;
            res = bunsi;
        }
    }
    return res;
}

int main() {
    ll K;
    cin >> K;
    ll N = f(1);
    for (ll i = 0; i < K; i++) {
        cout << N << endl;
        N = f(N+1);
    }
    

}"
StarCoder,codenet,C++,Java,s113620820.java,"import java.util.*;
import java.io.*;

public class s113620820 {
  public static void main(String[] args) {
    Scanner cin = new Scanner(System.in);
    int n = cin.nextInt();

    long[] wis = new long[n];
    long[] wsums = new long[n + 1];
    long[][] dp = new long[n][n + 1];
    int[][] ks = new int[n][n + 1];

    for (int i = 0; i < n; i++) {
      wis[i] = cin.nextLong();
      wsums[i + 1] = wsums[i] + wis[i];
    }

    for (int i = 0; i < n; i++) {
      for (int j = 0; j <= n; j++) dp[i][j] = Long.MAX_VALUE, ks[i][j] = -1;
      dp[i][i + 1] = 0;
      ks[i][i + 1] = i;
    }

    for (int l = 2; l <= n; l++)
      for (int i = 0, j = l; j <= n; i++, j++) {
        long mind = Long.MAX_VALUE;
        long wsum = wsums[j] - wsums[i];
        int mink = -1;
        for (int k = ks[i][j - 1]; k <= ks[i + 1][j]; k++) {
          long d = dp[i][k] + dp[k][j] + wsum;
          if (mind > d) mind = d, mink = k;
        }
        dp[i][j] = mind;
        ks[i][j] = mink;
      }

    System.out.println(dp[0][n]);
  }
}","import java.util.*;
import java.io.*;

public class Main {
  public static void main(String[] args) {
    Scanner cin = new Scanner(System.in);
    int n = cin.nextInt();

    long[] wis = new long[n];
    long[] wsums = new long[n + 1];
    long[][] dp = new long[n][n + 1];
    int[][] ks = new int[n][n + 1];
    
    for (int i = 0; i < n; i++) {
      wis[i] = cin.nextLong();
      wsums[i + 1] = wsums[i] + wis[i];
    }

    for (int i = 0; i < n; i++) {
      for (int j = 0; j <= n; j++) {
        dp[i][j] = 1L << 60;
        ks[i][j] = -1;
      }
      dp[i][i + 1] = 0;
      ks[i][i + 1] = i;
    }

    for (int l = 2; l <= n; l++)
      for (int i = 0, j = l; j <= n; i++, j++) {
        long mind = 1L << 60;
        long wsum = wsums[j] - wsums[i];
        int mink = -1;
        for (int k = ks[i][j - 1]; k <= ks[i + 1][j]; k++) {
          long d = dp[i][k] + dp[k][j] + wsum;
          if (mind > d) {
            mind = d;
            mink = k;
          }
        }
        dp[i][j] = mind;
        ks[i][j] = mink;
      }

    System.out.println(dp[0][n]);
  }
}"
StarCoder,codenet,C++,Java,s384319383.java,"import java.util.*;
import java.io.*;

public class s384319383 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] cnt = new int[26];
        char[] s = new char[n];
        for (int i = 0; i < n; i++) {
            s[i] = in.next().charAt(0);
            cnt[s[i] - 'a']++;
        }
        long ans = cnt[0];
        for (int i = 1; i < 26; i++) {
            ans *= cnt[i];
            ans %= 1000000007;
        }
        System.out.println(ans - 1);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] cnt = new int[26];
        for (int i = 0; i < 26; i++) {
            cnt[i] = 1;
        }
        char[] s = new char[n];
        String input = in.next();
        for (int i = 0; i < n; i++) {
            s[i] = input.charAt(i);
            cnt[s[i] - 'a']++;
        }
        long ans = cnt[0];
        for (int i = 1; i < 26; i++) {
            ans *= cnt[i];
            ans %= 1000000007;
        }
        System.out.println(ans - 1);
    }
}"
StarCoder,codenet,C++,Java,s469969316.java,"import java.util.*;
public class s469969316 {
    public static void main(String[] args) {
        Scanner cin = new Scanner(System.in);
        while (true) {
            String input = cin.next();
            if (input.equals(""."")) break;
            int[] a = new int[3];
            int cnt = 0;
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    for (int k = 0; k < 3; k++) {
                        a[0] = i; a[1] = j; a[2] = k;
                        String ss = input;
                        for (int p = 0; p < ss.length(); p++) {
                            char c = ss.charAt(p);
                            if (c == 'P') c = (char)('0' + a[0]);
                            if (c == 'Q') c = (char)('0' + a[1]);
                            if (c == 'R') c = (char)('0' + a[2]);
                            ss = ss.substring(0, p) + c + ss.substring(p+1);
                        }
                        if (parse(ss) == 2) cnt++;
                    }
                }
            }
            System.out.println(cnt);
        }
    }
    static int parse(String ss) {
        int it = 0;
        char c = ss.charAt(it++);
        if (c >= '0' && c <= '2') return c-'0';
        if (c == '-') return Not(parse(ss));
        int x = parse(ss);
        c = ss.charAt(it++);
        int y = parse(ss);
        ++it;
        return c == '*'? And(x, y) : Or(x, y);
    }
    static int Not(int x) {
        return 2-x;
    }
    static int And(int x, int y) {
        if (x*y == 0) return 0;
        if (x == 2 && y == 2) return 2;
        return 1;
    }
    static int Or(int x, int y) {
        if (x == 2 || y == 2) return 2;
        if (x == 1 || y == 1) return 1;
        return 0;
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner cin = new Scanner(System.in);
        while (true) {
            String input = cin.next();
            if (input.equals(""."")) break;
            int[] a = new int[3];
            int cnt = 0;
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    for (int k = 0; k < 3; k++) {
                        a[0] = i; a[1] = j; a[2] = k;
                        String ss = input;
                        for (int p = 0; p < ss.length(); p++) {
                            char c = ss.charAt(p);
                            if (c == 'P') c = (char)('0' + a[0]);
                            if (c == 'Q') c = (char)('0' + a[1]);
                            if (c == 'R') c = (char)('0' + a[2]);
                            ss = ss.substring(0, p) + c + ss.substring(p+1);
                        }
                        if (parse(ss) == 2) cnt++;
                    }
                }
            }
            System.out.println(cnt);
        }
    }
    static int parse(String ss) {
        int it = 0;
        char c = ss.charAt(it++);
        if (c >= '0' && c <= '2') return c-'0';
        if (c == '-') return Not(parse(ss));
        int x = parse(ss);
        c = ss.charAt(it++);
        int y = parse(ss);
        ++it;
        return c == '*'? And(x, y) : Or(x, y);
    }
    static int Not(int x) {
        return 2-x;
    }
    static int And(int x, int y) {
        if (x*y == 0) return 0;
        if (x == 2 && y == 2) return 2;
        return 1;
    }
    static int Or(int x, int y) {
        if (x == 2 || y == 2) return 2;
        if (x == 1 || y == 1) return 1;
        return 0;
    }
}"
StarCoder,codenet,C++,Java,s571001771.java,"import java.util.*;
import java.io.*;
public class s571001771 {
    public static void main(String[] args) throws Exception{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int m = Integer.parseInt(br.readLine());
        int[] key = new int[m+1];
        int[] cost = new int[m+1];
        int[][] dp = new int[1<<n][m+1];
        for(int i=0;i<1<<n;i++){
            for(int j=0;j<m+1;j++){
                dp[i][j] = Integer.MAX_VALUE;
            }
        }
        dp[0][0] = 0;
        for(int i=1;i<=m;i++){
            int b = Integer.parseInt(br.readLine());
            cost[i] = Integer.parseInt(br.readLine());
            for(int j=0;j<b;j++){
                int c = Integer.parseInt(br.readLine());
                key[i] += (1<<(c-1));
            }
        }
        for(int i=0;i<(1<<n);i++){
            for(int j=0;j<m;j++){
                dp[i][j+1] = Math.min(dp[i][j], dp[i][j+1]);
                dp[i|key[j+1]][j+1] = Math.min(dp[i|key[j+1]][j+1], dp[i][j]+cost[j+1]);
            }
        }
        if(dp[(1<<n)-1][m] == Integer.MAX_VALUE) System.out.println(-1);
        else System.out.println(dp[(1<<n)-1][m]);
    }
}","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) throws Exception{
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        long[] key = new long[m+1];
        long[] cost = new long[m+1];
        long[][] dp = new long[1<<n][m+1];
        for(int i=0;i<1<<n;i++){
            for(int j=0;j<m+1;j++){
                dp[i][j] = Integer.MAX_VALUE;
            }
        }
        dp[0][0] = 0;
        for(int i=1;i<=m;i++){
            cost[i] = scanner.nextLong();
            int b = scanner.nextInt();
            for(int j=0;j<b;j++){
                int c = scanner.nextInt();
                key[i] += (1<<(c-1));
            }
        }
        for(int i=0;i<(1<<n);i++){
            for(int j=0;j<m;j++){
                dp[i][j+1] = Math.min(dp[i][j], dp[i][j+1]);
                dp[(int) (i|key[j+1])][j+1] = Math.min(dp[(int) (i|key[j+1])][j+1], dp[i][j]+cost[j+1]);
            }
        }
        if(dp[(1<<n)-1][m] == Integer.MAX_VALUE) System.out.println(-1);
        else System.out.println(dp[(1<<n)-1][m]);
    }
}"
StarCoder,codenet,C++,Java,s663381244.java,"import java.util.Scanner;

public class s663381244 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int[] m = new int[4];
		m[0] = 10;
		m[1] = 50;
		m[2] = 100;
		m[3] = 500;

		boolean first = true;
		while(sc.hasNext()) {
			if(!first)
				System.out.println();

			first = false;
			int sum = 0;
			int[] num = new int[4];
			for(int i = 0; i < 4; ++i) {
				num[i] = sc.nextInt();
				sum += num[i] * m[i];
			}

			int change = sum - sc.nextInt();
			for(int i = 3; i >= 0; --i) {
				if(change / m[i] > 0) {
					num[i] -= change / m[i];
					change %= m[i];
				}
			}

			for(int i = 0; i < 4; ++i)
				if(num[i] > 0)
					System.out.println(m[i] + "" "" + num[i]);
		}

		sc.close();
	}
}","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int[] m = new int[4];
		m[0] = 10;
		m[1] = 50;
		m[2] = 100;
		m[3] = 500;

		boolean first = true;
		while(sc.hasNext()) {
			if(!first)
				System.out.println();

			first = false;
			int money = sc.nextInt();
            if (money == 0) {
                break;
            }
			int sum = 0;
			int[] num = new int[4];
			for(int i = 0; i < 4; ++i) {
				num[i] = sc.nextInt();
				sum += num[i] * m[i];
			}

			int change = sum - money;
			for(int i = 3; i >= 0; --i) {
				if(change / m[i] > 0) {
					num[i] -= change / m[i];
					change %= m[i];
				}
			}

			for(int i = 0; i < 4; ++i)
				if(num[i] > 0)
					System.out.println(m[i] + "" "" + num[i]);
		}

		sc.close();
	}
}"
StarCoder,codenet,C++,Java,s683946919.java,"import java.util.*;
import java.io.*;

public class s683946919 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        while (in.hasNext()) {
            int N = in.nextInt();
            if (N == 0)
                break;
            Map<Integer, List<Integer>> log = new HashMap<Integer, List<Integer>>();
            for (int i = 0; i < N; i++) {
                int month = in.nextInt();
                int day = in.nextInt();
                int hour = in.nextInt();
                int min = in.nextInt();
                String action = in.next();
                int id = in.nextInt();
                int t = month * 30 * 24 * 60 + day * 24 * 60 + hour * 60 + min;
                if (!log.containsKey(id))
                    log.put(id, new ArrayList<Integer>());
                log.get(id).add(t);
                if (action.equals(""leave""))
                    log.get(id).add(t);
            }
            int[] total = new int[1000];
            Arrays.fill(total, 0);
            for (int i = 0; i + 1 < log.get(0).size(); i += 2) {
                int god_start = log.get(0).get(i);
                int god_end = log.get(0).get(i + 1);
                for (Map.Entry<Integer, List<Integer>> entry : log.entrySet()) {
                    int id = entry.getKey();
                    if (id == 0)
                        continue;
                    List<Integer> schedule = entry.getValue();
                    for (int j = 0; j + 1 < schedule.size(); j += 2) {
                        int ppl_start = schedule.get(j);
                        int ppl_end = schedule.get(j + 1);
                        int start = Math.max(god_start, ppl_start);
                        int end = Math.min(god_end, ppl_end);
                        total[id] += Math.max(0, end - start);
                    }
                }
            }
            int max_v = 0;
            for (int id = 0; id < 1000; id++) {
                max_v = Math.max(total[id], max_v);
            }
            System.out.println(max_v);
        }
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        while (in.hasNext()) {
            int N = in.nextInt();
            if (N == 0)
                break;
            in.nextLine();
            Map<Integer, List<Integer>> log = new HashMap<Integer, List<Integer>>();
            for (int i = 0; i < N; i++) {
                String[] input = in.nextLine().split("" "");
                int month = Integer.parseInt(input[0].split(""/"")[0]);
                int day = Integer.parseInt(input[0].split(""/"")[1]);
                int hour = Integer.parseInt(input[1].split("":"")[0]);
                int min = Integer.parseInt(input[1].split("":"")[1]);
                String action = input[2];
                int id = Integer.parseInt(input[3]);
                int t = month * 30 * 24 * 60 + day * 24 * 60 + hour * 60 + min;
                if (!log.containsKey(id))
                    log.put(id, new ArrayList<Integer>());
                log.get(id).add(t);
                if (action.equals(""leave""))
                    log.get(id).add(t);
            }
            int[] total = new int[1000];
            Arrays.fill(total, 0);
            for (int i = 0; i + 1 < log.get(0).size(); i += 2) {
                int god_start = log.get(0).get(i);
                int god_end = log.get(0).get(i + 1);
                for (Map.Entry<Integer, List<Integer>> entry : log.entrySet()) {
                    int id = entry.getKey();
                    if (id == 0)
                        continue;
                    List<Integer> schedule = entry.getValue();
                    for (int j = 0; j + 1 < schedule.size(); j += 2) {
                        int ppl_start = schedule.get(j);
                        int ppl_end = schedule.get(j + 1);
                        int start = Math.max(god_start, ppl_start);
                        int end = Math.min(god_end, ppl_end);
                        total[id] += Math.max(0, end - start);
                    }
                }
            }
            int max_v = 0;
            for (int id = 0; id < 1000; id++) {
                max_v = Math.max(total[id], max_v);
            }
            System.out.println(max_v);
        }
    }
}"
StarCoder,codenet,C++,Java,s422352362.java,"import java.util.*;
public class s422352362 {
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		long[] a = new long[n + 1];
		long[] pre = new long[n + 1];
		long[] last = new long[n + 1];
		for(int i = 1;i <= n;i++){
			a[i] = sc.nextLong();
		}
		long sumpre = 0,sumlast = 0;
		for(int i = 1;i <= n;i++){
			sumpre += a[i];
			pre[i] = sumpre;
		}
		for(int i = n;i >= 1;i--){
			sumlast += a[i];
			last[i] = sumlast;
		}
		long d = (long)(1e6);
		for(int i = 1;i <= n;i++){
			d = Math.min(d,Math.abs(pre[i] - last[i + 1]));
		}
		System.out.println(d);
	}
}","import java.util.*;
public class Main {
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		long[] a = new long[n + 1];
		long[] pre = new long[n + 1];
		long[] last = new long[n + 1];
		for(int i = 1;i <= n;i++){
			a[i] = sc.nextLong();
		}
		long sumpre = 0,sumlast = 0;
		for(int i = 1;i <= n;i++){
			sumpre += a[i];
			pre[i] = sumpre;
		}
		for(int i = n;i >= 1;i--){
			sumlast += a[i];
			last[i] = sumlast;
		}
		long d = (long)(1e6);
		for(int i = 1;i < n;i++){
			d = Math.min(d,Math.abs(pre[i] - last[i + 1]));
		}
		System.out.println(d);
	}
}"
StarCoder,codenet,C++,Java,s612033342.java,"import java.util.*;
import java.io.*;

public class s612033342 {
  public static void main(String[] args) {
    Scanner cin = new Scanner(System.in);
    int h = cin.nextInt();
    int w = cin.nextInt();
    int k = cin.nextInt();
    int[][] hw = new int[h][w];
    for (int i = 0; i < h; i++) {
      for (int j = 0; j < w; j++) {
        char c = cin.next().charAt(0);
        if (c == '#') hw[i][j] = 1;
      }
    }
    int sum = 0;
    for (int i = 0; i < (1 << h); i++) {
      for (int j = 0; j < (1 << w); j++) {
        if (count(hw, i, j) == k) sum++;
      }
    }
    System.out.println(sum);
  }

  public static int count(int[][] hw, int a, int b) {
    int sum = 0;
    for (int i = 0; i < hw.length; i++) {
      for (int j = 0; j < hw[0].length; j++) {
        if (((a >> i) & 1) == 1 && ((b >> j) & 1) == 1 && hw[i][j] == 1) sum++;
      }
    }
    return sum;
  }
}","import java.util.*;
import java.io.*;

public class Main {
  public static void main(String[] args) {
    Scanner cin = new Scanner(System.in);
    int h = cin.nextInt();
    int w = cin.nextInt();
    int k = cin.nextInt();
    int[][] hw = new int[h][w];
    for (int i = 0; i < h; i++) {
      String input = cin.next();
      for (int j = 0; j < w; j++) {
        char c = input.charAt(j);
        if (c == '#') hw[i][j] = 1;
      }
    }
    int sum = 0;
    for (int i = 0; i < (1 << h); i++) {
      for (int j = 0; j < (1 << w); j++) {
        if (count(hw, i, j) == k) sum++;
      }
    }
    System.out.println(sum);
  }

  public static int count(int[][] hw, int a, int b) {
    int sum = 0;
    for (int i = 0; i < hw.length; i++) {
      for (int j = 0; j < hw[0].length; j++) {
        if (((a >> i) & 1) == 1 && ((b >> j) & 1) == 1 && hw[i][j] == 1) sum++;
      }
    }
    return sum;
  }
}"
StarCoder,codenet,C++,Java,s123678341.java,"import java.util.*;
import java.io.*;

public class s123678341 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();
        int K = sc.nextInt();
        int[] A = new int[X];
        int[] B = new int[Y];
        int[] C = new int[Z];
        for (int i = 0; i < X; i++) {
            A[i] = sc.nextInt();
        }
        for (int i = 0; i < Y; i++) {
            B[i] = sc.nextInt();
        }
        for (int i = 0; i < Z; i++) {
            C[i] = sc.nextInt();
        }
        Arrays.sort(A);
        Arrays.sort(B);
        Arrays.sort(C);
        int[] AB = new int[X * Y];
        for (int i = 0; i < X; i++) {
            for (int j = 0; j < Y; j++) {
                AB[i * Y + j] = A[i] + B[j];
            }
        }
        Arrays.sort(AB);
        int[] ABC = new int[K];
        for (int i = 0; i < K; i++) {
            for (int j = 0; j < Z; j++) {
                ABC[i] = AB[i] + C[j];
            }
        }
        Arrays.sort(ABC);
        for (int i = 0; i < K; i++) {
            System.out.println(ABC[i]);
        }
    }
}","import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();
        int K = sc.nextInt();
        Long[] A = new Long[X];
        Long[] B = new Long[Y];
        Long[] C = new Long[Z];
        for (int i = 0; i < X; i++) {
            A[i] = sc.nextLong();
        }
        for (int i = 0; i < Y; i++) {
            B[i] = sc.nextLong();
        }
        for (int i = 0; i < Z; i++) {
            C[i] = sc.nextLong();
        }
        Arrays.sort(A, Collections.reverseOrder());
        Arrays.sort(B, Collections.reverseOrder());
        Arrays.sort(C, Collections.reverseOrder());
        Long[] AB = new Long[X * Y];
        for (int i = 0; i < X; i++) {
            for (int j = 0; j < Y; j++) {
                AB[i * Y + j] = A[i] + B[j];
            }
        }
        Arrays.sort(AB, Collections.reverseOrder());
        Long[] ABC = new Long[K];
        for (int i = 0; i < Math.min(K, AB.length); i++) {
            for (int j = 0; j < Z; j++) {
                ABC[i * Z + j] = AB[i] + C[j];
            }
        }
        Arrays.sort(ABC, Collections.reverseOrder());
        for (int i = 0; i < K; i++) {
            System.out.println(ABC[i]);
        }
    }
}"
StarCoder,codenet,C++,Java,s509329039.java,"import java.util.*;
import java.io.*;

public class s509329039 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] s = new int[m];
        int[] c = new int[m];
        for(int i=0;i<m;i++){
            s[i] = in.nextInt();
            c[i] = in.nextInt();
        }
        for(int i=0;i<1000;i++){
            String st = Integer.toString(i);
            if(st.length()!=n){
                continue;
            }
            boolean f = true;
            for(int j=0;j<m;j++){
                if(st.charAt(s[j])!=c[j]+'0'){
                    f = false;
                }
            }
            if(f){
                System.out.println(i);
                return;
            }
        }
        System.out.println(-1);
    }
}","import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] s = new int[m];
        int[] c = new int[m];
        for(int i=0;i<m;i++){
            s[i] = in.nextInt();
            c[i] = in.nextInt();
            s[i]--;
        }
        for(int i=0;i<1000;i++){
            String st = Integer.toString(i);
            if(st.length()!=n){
                continue;
            }
            boolean f = true;
            for(int j=0;j<m;j++){
                if(st.charAt(s[j])!=c[j]+'0'){
                    f = false;
                }
            }
            if(f){
                System.out.println(i);
                return;
            }
        }
        System.out.println(-1);
    }
}"
StarCoder,codenet,C++,Java,s189738089.java,"import java.util.*;

public class s189738089 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] h = new int[N];
        for (int i = 0; i < N; i++) {
            h[i] = sc.nextInt();
        }
        int[] dp = new int[101000];
        Arrays.fill(dp, Integer.MAX_VALUE);
        dp[0] = 0;
        for (int i = 0; i < N; i++) {
            for (int j = 1; j <= K; j++) {
                dp[i + j] = Math.min(dp[i + j], dp[i] + Math.abs(h[i] - h[i + j]));
            }
        }
        System.out.println(dp[N - 1]);
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] h = new int[N];
        for (int i = 0; i < N; i++) {
            h[i] = sc.nextInt();
        }
        int[] dp = new int[101000];
        Arrays.fill(dp, Integer.MAX_VALUE);
        dp[0] = 0;
        for (int i = 0; i < N; i++) {
            for (int j = 1; j <= K; j++) {
                if (i + j < N) {
                    dp[i + j] = Math.min(dp[i + j], dp[i] + Math.abs(h[i] - h[i + j]));
                }
            }
        }
        System.out.println(dp[N - 1]);
    }
}"
StarCoder,codenet,C++,Java,s129088151.java,"import java.util.*;
public class s129088151 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		Map<String, Boolean> T = new HashMap<String, Boolean>();
		for (int i = 0; i < n; i++) {
			String com = sc.next();
			String str = sc.next();
			if (com.charAt(0) == 'i') T.put(str, true);
			else {
				if (T.get(str)) System.out.println(""yes"");
				else System.out.println(""no"");
			}
		}
	}
}","import java.util.*;
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		sc.nextLine();
		Map<String, Boolean> T = new HashMap<String, Boolean>();
		for (int i = 0; i < n; i++) {
			String[] input = sc.nextLine().split("" "");
			String com = input[0];
			String str = input[1];
			if (com.charAt(0) == 'i') T.put(str, true);
			else {
				if (T.get(str) != null) System.out.println(""yes"");
				else System.out.println(""no"");
			}
		}
	}
}"
StarCoder,codenet,C++,Java,s144923291.java,"import java.util.*;
public class s144923291 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int h = sc.nextInt();
        int w = sc.nextInt();
        String s = ""snuke"";
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                char t = sc.next().charAt(0);
                if (s.charAt(j) == t) {
                    char c = (char) ('A' + j);
                    System.out.println(c + (i + 1));
                    return;
                }
            }
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int h = sc.nextInt();
        int w = sc.nextInt();
        String s = ""snuke"";
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                String t = sc.next();
                if (s.equals(t)) {
                    char c = (char) ('A' + j);
                    System.out.println(c + """" + (i + 1));
                    return;
                }
            }
        }
    }
}"
StarCoder,codenet,C++,Java,s395011148.java,"import java.util.*;
import java.io.*;

public class s395011148 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int[] A = new int[N + 1];
		for (int i = 1; i <= N; i++) A[i] = sc.nextInt();
		int[][] dp = new int[N + 1][20];
		for (int i = 0; i <= N; i++) {
			for (int j = 0; j < 20; j++) {
				dp[i][j] = -(1 << 30);
			}
		}
		dp[0][10] = 0;
		for (int i = 1; i <= N; i++) {
			for (int j = 6; j <= 14; j++) {
				if (dp[i - 1][j]!= (1 << 30)) {
					dp[i][j + 1] = Math.max(dp[i][j + 1], dp[i - 1][j] + A[i]);
					dp[i][j - 1] = Math.max(dp[i][j - 1], dp[i - 1][j]);
				}
			}
		}

		int V = 10 + (N / 2) - (N - (N / 2));
		int T1 = dp[N][V];
		int T2 = dp[N][V];
		System.out.println(Math.max(T1, T2));
	}
}","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        long[] A = new long[1 << 18];
        for (int i = 1; i <= N; i++) {
            A[i] = scanner.nextLong();
        }
        long[][][] dp = new long[1 << 18][2][20];
        for (int i = 0; i <= N; i++) {
            for (int j = 0; j < 20; j++) {
                dp[i][0][j] = -(1L << 60);
                dp[i][1][j] = -(1L << 60);
            }
        }
        dp[0][0][10] = 0;
        for (int i = 1; i <= N; i++) {
            for (int j = 6; j <= 14; j++) {
                if (dp[i - 1][0][j] != (1L << 60)) {
                    dp[i][1][j + 1] = Math.max(dp[i][1][j + 1], dp[i - 1][0][j] + A[i]);
                    dp[i][0][j - 1] = Math.max(dp[i][0][j - 1], dp[i - 1][0][j]);
                }
                if (dp[i - 1][1][j] != (1L << 60)) {
                    dp[i][0][j - 1] = Math.max(dp[i][0][j - 1], dp[i - 1][1][j]);
                }
            }
        }

        int V = 10 + (N / 2) - (N - (N / 2));
        long T1 = dp[N][0][V];
        long T2 = dp[N][1][V];
        System.out.println(Math.max(T1, T2));
    }
}"
StarCoder,codenet,C++,Java,s525470559.java,"import java.util.*;

public class s525470559 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int q = sc.nextInt();
        int elaps = 0;
        PriorityQueue<Task> Q = new PriorityQueue<Task>(n, new Comparator<Task>() {
            @Override
            public int compare(Task a, Task b) {
                return a.time - b.time;
            }
        });

        for(int i = 0; i < n; i++) {
            Task tmp = new Task();
            tmp.name = sc.next();
            tmp.time = sc.nextInt();
            Q.add(tmp);
        }

        while(!Q.isEmpty()) {
            Task p = Q.poll();
            if(p.time <= q) {
                elaps += p.time;
                System.out.println(p.name + "" "" + elaps);
            }
            else {
                p.time -= q;
                elaps += q;
                Q.add(p);
            }
        }
    }
}

class Task {
    String name;
    int time;
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int q = sc.nextInt();
        int elaps = 0;
        Queue<Task> Q = new LinkedList<>();

        for(int i = 0; i < n; i++) {
            Task tmp = new Task();
            tmp.name = sc.next();
            tmp.time = sc.nextInt();
            Q.add(tmp);
        }

        while(!Q.isEmpty()) {
            Task p = Q.poll();
            if(p.time <= q) {
                elaps += p.time;
                System.out.println(p.name + "" "" + elaps);
            }
            else {
                p.time -= q;
                elaps += q;
                Q.add(p);
            }
        }
    }
}

class Task {
    String name;
    int time;
}"
StarCoder,codenet,C++,Java,s013321508.java,"import java.util.*;
import java.io.*;

public class s013321508 {

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        int[] L = new int[100000];
        for (int i = 0; i < N; i++) {
            L[i] = sc.nextInt();
        }

        Arrays.sort(L);

        for (int i = 0; i < M; i++) {
            int max_L = L[L.length - 1];
            if (max_L == 0) {
                break;
            }

            max_L /= 2;
            int index = Arrays.binarySearch(L, max_L);
            if (index < 0) {
                index = -index - 1;
            }
            L = Arrays.copyOf(L, L.length + 1);
            System.arraycopy(L, index, L, index + 1, L.length - index - 1);
            L[index] = max_L;
            L[L.length - 1] = 0;
        }

        long ans = 0;
        for (int i = 0; i < L.length; i++) {
            ans += L[i];
        }

        System.out.println(ans);

    }

}","import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        int[] L = new int[100000];
        for (int i = 0; i < N; i++) {
            L[i] = sc.nextInt();
        }

        Arrays.sort(L);

        for (int i = 0; i < M; i++) {
            int max_L = L[L.length - 1];
            if (max_L == 0) {
                break;
            }

            max_L /= 2;
            int index = Arrays.binarySearch(L, max_L);
            if (index < 0) {
                index = -index - 1;
            }
            L = Arrays.copyOf(L, L.length + 1);
            System.arraycopy(L, index, L, index + 1, L.length - index - 1);
            L[index] = max_L;
            L[L.length - 1] = 0;
        }

        long ans = 0;
        for (int i = 0; i < L.length; i++) {
            ans += L[i];
        }

        System.out.println(ans);

    }

}"
StarCoder,codenet,C++,Java,s575600334.java,"import java.util.*;

public class s575600334 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        System.out.println(Integer.toBinaryString(a&b));
        System.out.println(Integer.toBinaryString(a|b));
        System.out.println(Integer.toBinaryString(a^b));
    }
}","import java.util.Scanner;

public class Main {
    public static void binPrint(int x, int bits) {
        for (int i = bits - 1; i >= 0; i--) {
            System.out.print((x & (1 << i)) != 0 ? 1 : 0);
        }
        System.out.println();
    }
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        binPrint(a & b, 32);
        binPrint(a | b, 32);
        binPrint(a ^ b, 32);
    }
}"
StarCoder,codenet,C++,Java,s107598592.java,"import java.util.*;
public class s107598592 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] x = new int[n];
        int[] y = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
            y[i] = x[i];
        }
        Arrays.sort(y);
        int y1 = y[n / 2];
        for (int i = 0; i < n; i++) {
            if (x[i] < y1) {
                System.out.println(y1);
            } else {
                System.out.println(y1 - 1);
            }
            System.out.println();
        }
    }
}","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] x = new int[n];
        int[] y = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
            y[i] = x[i];
        }
        Arrays.sort(y);
        int y1 = y[n / 2];
        for (int i = 0; i < n; i++) {
            if (x[i] < y1) {
                System.out.println(y1);
            } else {
                System.out.println(y1 - 1);
            }
        }
    }
}"
StarCoder,codenet,C++,Java,s240627521.java,"import java.util.*;
import java.io.*;

public class s240627521 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        for(int i=0;i<N;++i) A[i] = sc.nextInt();
        Arrays.sort(A);
        int index = 0;
        int max = Integer.MAX_VALUE;
        for(int i=1;i<N;++i) {
            if(max>Math.abs(A[0]-2*A[i])) {
                max = Math.abs(A[0]-2*A[i]);
                index = i;
            }
        }
        System.out.println(A[0]+"" ""+A[index]);
    }
}","import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        Long[] A = new Long[N];
        for(int i=0;i<N;++i) A[i] = sc.nextLong();
        Collections.sort(A, Collections.reverseOrder());
        int index = 0;
        int max = Integer.MAX_VALUE;
        for(int i=1;i<N;++i) {
            if(max>Math.abs(A[0]-2*A[i])) {
                max = Math.abs(A[0]-2*A[i]);
                index = i;
            }
        }
        System.out.println(A[0]+"" ""+A[index]);
    }
}"
StarCoder,codenet,C++,Java,s611392782.java,"import java.util.*;

public class s611392782 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		while(sc.hasNext()){
			String s = sc.next();
			int d = sc.nextInt();
			int idx = 0;
			int a = add(s, idx);
			idx = 0;
			int b = bob(s, idx);
			if(a == d){
				System.out.println((b == d? ""U"" : ""M""));
			} else {
				System.out.println((b == d? ""L"" : ""I""));
			}
		}
	}

	public static int mul(String str, int idx){
		int res = str.charAt(idx) - '0';
		while(idx+1 < str.length() && str.charAt(idx+1) == '*'){
			idx += 2;
			res *= str.charAt(idx) - '0';
		}
		return res;
	}

	public static int add(String str, int idx){
		int res = mul(str, idx);
		while(idx+1 < str.length() && str.charAt(idx+1) == '+'){
			idx += 2;
			res += mul(str, idx);
		}
		return res;
	}

	public static int bob(String str, int idx){
		int res = str.charAt(idx) - '0';
		while(idx+1 < str.length()){
			if(str.charAt(idx+1) == '+') res += str.charAt(idx+2) - '0';
			else                  res *= str.charAt(idx+2) - '0';
			idx += 2;
		}
		return res;
	}
}","import java.util.*;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		while(sc.hasNext()){
			String s = sc.next();
			int d = sc.nextInt();
			int[] idx = {0};
			int a = add(s, idx);
			idx[0] = 0;
			int b = bob(s, idx);
			if(a == d){
				System.out.println((b == d? ""U"" : ""M""));
			} else {
				System.out.println((b == d? ""L"" : ""I""));
			}
		}
	}

	public static int mul(String str, int[] idx){
		int res = str.charAt(idx[0]) - '0';
		while(idx[0]+1 < str.length() && str.charAt(idx[0]+1) == '*'){
			idx[0] += 2;
			res *= str.charAt(idx[0]) - '0';
		}
		return res;
	}

	public static int add(String str, int[] idx){
		int res = mul(str, idx);
		while(idx[0]+1 < str.length() && str.charAt(idx[0]+1) == '+'){
			idx[0] += 2;
			res += mul(str, idx);
		}
		return res;
	}

	public static int bob(String str, int[] idx){
		int res = str.charAt(idx[0]) - '0';
		while(idx[0]+1 < str.length()){
			if(str.charAt(idx[0]+1) == '+') res += str.charAt(idx[0]+2) - '0';
			else                  res *= str.charAt(idx[0]+2) - '0';
			idx[0] += 2;
		}
		return res;
	}
}"
StarCoder,codenet,C++,Java,s698205968.java,"import java.util.*;
public class s698205968 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()) {
            int m = sc.nextInt();
            int f = sc.nextInt();
            int r = sc.nextInt();
            if (m == -1 || f == -1)
                System.out.println(""F"");
            else if (m + f >= 80)
                System.out.println(""A"");
            else if (m + f >= 65)
                System.out.println(""B"");
            else if (m + f >= 50 || r >= 50)
                System.out.println(""C"");
            else if (m + f >= 30)
                System.out.println(""D"");
            else
                System.out.println(""F"");
            System.out.println();
        }
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()) {
            int m = sc.nextInt();
            int f = sc.nextInt();
            int r = sc.nextInt();
            if (m == -1 || f == -1)
                System.out.println(""F"");
            else if (m + f >= 80)
                System.out.println(""A"");
            else if (m + f >= 65)
                System.out.println(""B"");
            else if (m + f >= 50 || r >= 50)
                System.out.println(""C"");
            else if (m + f >= 30)
                System.out.println(""D"");
        }
    }
}"
StarCoder,codenet,C++,Java,s360529905.java,"import java.util.*;
public class s360529905 {
	public static void main(String[] args){
		Scanner sc=new Scanner(System.in);
		int N=sc.nextInt();
		int[] a=new int[N];
		int[] b=new int[N];
		for(int i=0;i<N;i++)
			a[i]=sc.nextInt();
		for(int i=0;i<N;i++)
			b[i]=a[i];
		Arrays.sort(b);
		int frontHalf=b[N/2-1];
		int backHalf=b[N/2];
		for(int i=0;i<N;i++)
			System.out.println(Math.min(backHalf,frontHalf));
	}
}","import java.util.*;
public class Main {
	public static void main(String[] args){
		Scanner sc=new Scanner(System.in);
		int N=sc.nextInt();
		int[] a=new int[N];
		int[] b=new int[N];
		for(int i=0;i<N;i++)
			a[i]=sc.nextInt();
		for(int i=0;i<N;i++)
			b[i]=a[i];
		Arrays.sort(b);
		int frontHalf=b[N/2-1];
		int backHalf=b[N/2];
		for(int i=0;i<N;i++)
			System.out.println(Math.min(backHalf,frontHalf));
	}
}"
StarCoder,codenet,C++,Java,s793402552.java,"import java.util.*;
import java.io.*;

public class s793402552 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        int num = a * (int) Math.pow(10, b) + b;
        int i;
        for (i = 1; i <= 100100; i++) {
            if (i * i == num) break;
        }
        if (i > 100100) System.out.println(""No"");
        else System.out.println(""Yes"");
    }
}","import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        int b = in.nextInt();
        String bstr = Integer.toString(b);
        int num = a * (int) Math.pow(10, bstr.length()) + b;
        int i;
        for (i = 1; i <= 100100; i++) {
            if (i * i == num) break;
        }
        if (i > 100100) System.out.println(""No"");
        else System.out.println(""Yes"");
    }
}"
StarCoder,codenet,C++,Java,s353737529.java,"/*
This is an example of Java code.
 */

import java.util.*;
import java.io.*;

public class s353737529 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        String s = """";

        if(n == 0){
            System.out.println('0');
            return;
        }

        int i = 1;
        while(n!= 0){
            if(n % 2 == 0){
                s += '0';
            } else {
                s += '1';
            }

            n -= Math.abs(n % 2);

            n /= -2;
        }

        System.out.println(s);
    }
}","/*
This is an example of Java code.
 */

import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        String s = """";

        if(n == 0){
            System.out.println('0');
            return;
        }

        int i = 1;
        while(n!= 0){
            if(n % 2 == 0){
                s += '0';
            } else {
                s += '1';
            }

            n -= Math.abs(n % 2);

            n /= -2;
        }

        System.out.println(new StringBuilder(s).reverse().toString());
    }
}"
StarCoder,codenet,C++,Java,s877835664.java,"import java.util.*;
import java.io.*;
import java.lang.*;

public class s877835664 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int K = sc.nextInt();
		int[] A = new int[N + 1];
		for (int i = 1; i <= N; i++) {
			A[i] = sc.nextInt();
		}
		int cur = 1;
		int[] dic = new int[N + 1];
		for (int i = 1; i <= K; i++) {
			if (dic[cur] < 0) {
				dic[cur] = i;
				cur = A[cur];
			} else {
				int tmp = K - (dic[cur] - 1);
				tmp %= i - dic[cur];
				i = K - tmp;
			}
		}
		System.out.println(cur);
	}

}","import java.util.*;
import java.io.*;
import java.lang.*;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int K = sc.nextInt();
		int[] A = new int[N + 1];
		for (int i = 1; i <= N; i++) {
			A[i] = sc.nextInt();
		}
		int cur = 1;
		int[] dic = new int[N + 1];
		for (int i = 1; i <= K; i++) {
			if (dic[cur] < 0) {
				dic[cur] = i;
				cur = A[cur];
			} else {
				int tmp = K - (dic[cur] - 1);
				tmp %= i - dic[cur];
				i = K - tmp;
			}
		}
		System.out.println(cur);
	}

}"
StarCoder,codenet,C++,Java,s166776347.java,"import java.util.*;
import java.io.*;

public class s166776347 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }

        int[] count = new int[2005];
        for (int i = 0; i < N; i++) {
            count[A[i] - 1]++;
        }

        int ans = 0;
        int remain = N;
        for (int i = 0; i < 2005; i++) {
            remain -= count[i];
            ans += count[i] * remain;
        }

        ans += (K * (K - 1)) / 2 * ans;
        ans %= 1000000007;
        System.out.println(ans);
    }
}","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }

        int[] count = new int[2005];
        for (int i = 0; i < N; i++) {
            count[A[i] - 1]++;
        }

        int ans = 0;
        int remain = N;
        for (int i = 0; i < 2005; i++) {
            remain -= count[i];
            ans += count[i] * remain;
        }

        ans += (K * (K - 1)) / 2 * ans;
        ans %= 1000000007;
        System.out.println(ans);
    }
}"
StarCoder,codenet,C++,Java,s240156356.java,"import java.util.*;

public class s240156356 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String str1 = sc.next();
        String str2 = sc.next();

        char[] ch1 = str1.toCharArray();
        char[] ch2 = str2.toCharArray();

        Arrays.sort(ch1);
        Arrays.sort(ch2);

        int loop = ch1.length > ch2.length? ch2.length : ch1.length;
        boolean flag = false;

        for (int i = 0; loop > i; i++) {
            char c1 = ch1[i];
            char c2 = ch2[i];

            if (c1 == c2) {
                if (loop == i + 1 && ch1.length < ch2.length) {
                    flag = true;
                    break;
                } else {
                    continue;
                }
            } else {
                if (c2 > c1) {
                    flag = true;
                    break;
                } else {
                    break;
                }
            }
        }

        if (flag) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String str1 = sc.next();
        String str2 = sc.next();

        char[] ch1 = str1.toCharArray();
        char[] ch2 = str2.toCharArray();

        Arrays.sort(ch1);
        Arrays.sort(ch2);
        StringBuilder sb2 = new StringBuilder(String.valueOf(ch2));
        String sortedStr2 = sb2.reverse().toString();
        ch2 = sortedStr2.toCharArray();

        int loop = ch1.length > ch2.length? ch2.length : ch1.length;
        boolean flag = false;

        for (int i = 0; loop > i; i++) {
            char c1 = ch1[i];
            char c2 = ch2[i];

            if (c1 == c2) {
                if (loop == i + 1 && ch1.length < ch2.length) {
                    flag = true;
                    break;
                } else {
                    continue;
                }
            } else {
                if (c2 > c1) {
                    flag = true;
                    break;
                } else {
                    break;
                }
            }
        }

        if (flag) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}"
StarCoder,codenet,C++,Java,s410514868.java,"import java.util.*;
public class s410514868 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        String s = sc.next();
        int L = s.charAt(0);
        int cnt = 0;
        for (int i = 1; i < n; i++) {
            if (L == s.charAt(i))
                cnt++;
            else {
                L = s.charAt(i);
                cnt = 0;
            }
        }
        System.out.println(cnt + Math.min(2 * k, n - cnt));
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        String s = sc.next();
        int L = s.charAt(0);
        int ans = 0;
        int ans2 = 0;
        int cnt = 0;
        for (int i = 1; i < n; i++) {
            if (L == s.charAt(i))
                cnt++;
            else {
                L = s.charAt(i);
                ans += cnt;
                ans2++;
                cnt = 0;
            }
        }
        ans += cnt;
        ans2++;
        System.out.println(ans + Math.min(2 * k, ans2 - 1));
    }
}"
StarCoder,codenet,C++,Java,s934757053.java,"import java.util.*;
public class s934757053 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int out = 1;
        int ans = 0;
        while (out < B) {
            out -= A;
            out += A;
            ans++;
        }
        System.out.println(ans);
    }
}","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int out = 1;
        int ans = 0;
        while (out < B) {
            out--;
            out += A;
            ans++;
        }
        System.out.println(ans);
    }
}"
StarCoder,codenet,Java,Python,s656827329.py,"import sys

n = int(raw_input().strip())
a = map(int, raw_input().strip().split(' '))

count = 1
now = 0
bef = 0
for i in range(1, n):
    if a[i-1] < a[i]:
        now = 1
    elif a[i-1] > a[i]:
        now = -1
    else:
        continue
    if bef == 0:
        bef = now
    if bef!= now:
        count += 1
        bef = 0
print count","import sys

n = int(input().strip())
a =  list(map(int, input().strip().split()))

count = 1
now = 0
bef = 0
for i in range(1, n):
    if a[i-1] < a[i]:
        now = 1
    elif a[i-1] > a[i]:
        now = -1
    else:
        continue
    if bef == 0:
        bef = now
    if bef!= now:
        count += 1
        bef = 0
print(count)"
StarCoder,codenet,Java,Python,s910447421.py,"import sys
import math
import copy
import itertools
import collections
import operator
import functools
import bisect
import heapq
import time
import random
import re
import string
import array
import os
import sys
import math
import copy
import itertools
import collections
import operator
import functools
import bisect
import heapq
import time
import random
import re
import string
import array

ans = 100

def solve():
	global ans
	for add in range(1,N):
		taken = [False]*N
		p = balls[add][0]-balls[0][0]
		q = balls[add][1]-balls[0][1]
		ans = min(ans,check(p,q))

def check(p,q):
	ret = 0
	while True:
		added = False
		start = 0
		x = -1
		y = -1
		for i in range(N):
			if not taken[i]:
				added = True
				ret += 1
				start = i
				taken[i] = True
				x = balls[i][0]+p
				y = balls[i][1]+q
				break
		if not added: break
		for i in range(start+1,N):
			if balls[i][0]==x and balls[i][1]==y:
				taken[i] = True
				x += p
				y += q
	return ret

def main():
	global N
	global balls
	I = FastScanner()
	O = OutPut()
	N = I.nextInt()
	ans = N
	balls = [[0]*2 for i in range(N)]
	for i in range(N):
		balls[i][0] = I.nextInt()
		balls[i][1] =","import sys
import math
import copy
import itertools
import collections
import operator
import functools
import bisect
import heapq
import time
import random
import re
import string
import array
import os
import sys
import math
import copy
import itertools
import collections
import operator
import functools
import bisect
import heapq
import time
import random
import re
import string
import array

ans = 100

def solve():
	global ans
	for add in range(1,N):
		taken = [False]*N
		p = balls[add][0]-balls[0][0]
		q = balls[add][1]-balls[0][1]
		ans = min(ans,check(p,q))

def check(p,q):
	ret = 0
	while True:
		added = False
		start = 0
		x = -1
		y = -1
		for i in range(N):
			if not taken[i]:
				added = True
				ret += 1
				start = i
				taken[i] = True
				x = balls[i][0]+p
				y = balls[i][1]+q
				break
		if not added: break
		for i in range(start+1,N):
			if balls[i][0]==x and balls[i][1]==y:
				taken[i] = True
				x += p
				y += q
	return ret

def main():
	global N
	global balls
	I = FastScanner()
	O = OutPut()
	N = I.nextInt()
	ans = N
	balls = [[0]*2 for i in range(N)]
	for i in range(N):
		balls[i][0] = I.nextInt()
		balls[i][1] ="
StarCoder,codenet,Java,Python,s036404962.py,"import sys

X = int(raw_input())
t = int(raw_input())

if X>=t:
	print X-t
elif X<t:
	print 0","import sys

X, t = map(int, input().split())

if X>=t:
	print(X-t)
elif X<t:
	print(0)"
StarCoder,codenet,Java,Python,s442273167.py,"import sys

n = int(raw_input().strip())
l = map(int, raw_input().strip().split(' '))
r = map(int, raw_input().strip().split(' '))

sum = 0
for i in range(n):
    sum += r[i] - l[i] + 1

print sum","import sys

n = int(input().strip())
l = []
r = []

for _ in range(n):
    inputs = list(map(int, input().strip().split()))
    l.append(inputs[0])
    r.append(inputs[1])

sum = 0
for i in range(n):
    sum += r[i] - l[i] + 1

print(sum)"
StarCoder,codenet,Java,Python,s380356166.py,"import sys

class Solver:
    def solve(self, testNumber, in, out):
        K = in.nextInt()
        S = in.nextInt()
        ans = 0
        for x in range(K+1):
            for y in range(K+1):
                wk = S - x - y
                if wk >= 0 and wk <= K:
                    ans += 1
        out.println(ans)

class MyInput:
    def __init__(self, stream):
        self.stream = stream
        self.buffer = """"
        self.pos = 0
        self.readLen = 0
        self.isDigit = [False] * 256
        self.isSpace = [False] * 256
        self.isLineSep = [False] * 256
        for i in range(10):
            self.isDigit[i + ord('0')] = True
        self.isDigit[ord('-')] = True
        self.isSpace[ord(' ')] = self.isSpace[ord('\r')] = self.isSpace[ord('\n')] = self.isSpace[ord('\t')] = True
        self.isLineSep[ord('\r')] = self.isLineSep[ord('\n')] = True

    def read(self):
        if self.pos >= self.readLen:
            self.pos = 0
            self.readLen = self.stream.read(self.buffer)
            if self.readLen <= 0:
                raise Exception(""EOF"")
        ret = self.buffer[self.pos]
        self.pos += 1
        return ret

    def nextInt(self):
        ret = 0
        sign = 1
        while True:
            c = self.read()
            if c =='':
                continue
            if c == '\r' or c == '\n':
                continue
            if c == '-':
                sign = -1
                continue
            if not self.isDigit[ord(c)]:
                raise Exception(""not digit"")
            ret = ret * 10 + ord(c) - ord('0')
            break
        return sign * ret

    def nextLong(self):
        ret = 0
        sign = 1
        while True:
            c = self.read()
            if c =='':
                continue
            if c == '\r' or c == '\n':
                continue
            if c == '-':
                sign = -1
                continue
            if not self.isDigit[ord(c)]:
                raise","import sys

class Solver:
    def solve(self, testNumber, in, out):
        K = in.nextInt()
        S = in.nextInt()
        ans = 0
        for x in range(K+1):
            for y in range(K+1):
                wk = S - x - y
                if wk >= 0 and wk <= K:
                    ans += 1
        out.println(ans)

class MyInput:
    def __init__(self, stream):
        self.stream = stream
        self.buffer = """"
        self.pos = 0
        self.readLen = 0
        self.isDigit = [False] * 256
        self.isSpace = [False] * 256
        self.isLineSep = [False] * 256
        for i in range(10):
            self.isDigit[i + ord('0')] = True
        self.isDigit[ord('-')] = True
        self.isSpace[ord(' ')] = self.isSpace[ord('\r')] = self.isSpace[ord('\n')] = self.isSpace[ord('\t')] = True
        self.isLineSep[ord('\r')] = self.isLineSep[ord('\n')] = True

    def read(self):
        if self.pos >= self.readLen:
            self.pos = 0
            self.readLen = self.stream.read(self.buffer)
            if self.readLen <= 0:
                raise Exception(""EOF"")
        ret = self.buffer[self.pos]
        self.pos += 1
        return ret

    def nextInt(self):
        ret = 0
        sign = 1
        while True:
            c = self.read()
            if c =='':
                continue
            if c == '\r' or c == '\n':
                continue
            if c == '-':
                sign = -1
                continue
            if not self.isDigit[ord(c)]:
                raise Exception(""not digit"")
            ret = ret * 10 + ord(c) - ord('0')
            break
        return sign * ret

    def nextLong(self):
        ret = 0
        sign = 1
        while True:
            c = self.read()
            if c =='':
                continue
            if c == '\r' or c == '\n':
                continue
            if c == '-':
                sign = -1
                continue
            if not self.isDigit[ord(c)]:
                raise"
StarCoder,codenet,Java,Python,s283652523.py,"import sys

class Main:
    def __init__(self):
        self.in = self.new_in()
        self.out = self.new_out()

    def new_in(self):
        return sys.stdin.buffer

    def new_out(self):
        return sys.stdout.buffer

    def close(self):
        self.in.close()
        self.out.close()

    def solve(self):
        N = self.in.readline().rstrip()
        A = self.in.readline().rstrip().split()
        ans = 0
        sum = int(A[N-1])
        for i in range(N-2, -1, -1):
            ans += (sum * int(A[i])) % 1000000007
            ans %= 1000000007
            sum += int(A[i])
            sum %= 1000000007
        self.out.write(str(ans) + '\n')

    def __call__(self):
        self.solve()

if __name__ == '__main__':
    main = Main()
    main()
    main.close()","import sys

class Main:
    def solve(self):
        N = int(input().rstrip())
        A = list(input().split())
        ans = 0
        sum = int(A[N-1])
        for i in range(N-2, -1, -1):
            ans += (sum * int(A[i])) % 1000000007
            ans %= 1000000007
            sum += int(A[i])
            sum %= 1000000007
        print(str(ans) + '\n')

    def __call__(self):
        self.solve()

if __name__ == '__main__':
    main = Main()
    main()"
StarCoder,codenet,Java,Python,s709681166.py,"import java.util.Scanner;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        
        for(int i = 0;i<s.length();i++){
            char c = s.charAt(i);
            if(Character.isUpperCase(c)){
            c += 32;
            System.out.print(c);
        }else if(Character.isLowerCase(c)){
            c -= 32;
                System.out.print(c);
            }
            else
                System.out.print(c);
               }
        System.out.println();
        sc.close();
    }
}","import java.util.Scanner;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        
        for(int i = 0;i<s.length();i++){
            char c = s.charAt(i);
            if(Character.isUpperCase(c)){
            c += 32;
            System.out.print(c);
        }else if(Character.isLowerCase(c)){
            c -= 32;
                System.out.print(c);
            }
            else
                System.out.print(c);
               }
        System.out.println();
        sc.close();
    }
}"
StarCoder,codenet,Java,Python,s452855095.py,"n = int(raw_input())
arr = map(int, raw_input().split())
cnt = 0
flag = True
while True:
    for i in range(n):
        if arr[i] % 2!= 0:
            flag = False
            break
        else:
            arr[i] = arr[i] / 2
    if flag == True:
        cnt += 1
    else:
        break
print cnt","n = int(input())
arr = list(map(int, input().split()))
cnt = 0
flag = True
while True:
    for i in range(n):
        if arr[i] % 2!= 0:
            flag = False
            break
        else:
            arr[i] = arr[i] / 2
    if flag == True:
        cnt += 1
    else:
        break
print(cnt)"
StarCoder,codenet,Java,Python,s443066739.py,"import sys
import io
import atexit
import io
import sys
import math
import itertools
import collections
import random

class Main
{
    static FastScanner in=new FastScanner(sys.stdin);
    static PrintWriter out=new PrintWriter(sys.stdout);

    public static void main(String args[])
    {
        int n=in.nextInt();
        long[] pre=new long[n+1];
        
        for(int i=1;i<=n;i++)
        {
            pre[i]=pre[i-1]+in.nextLong();
        }
        
        long min=9223372036854775807;
        
        for(int i=1;i<n;i++)
        {
            long val1=pre[i],val2=pre[n]-pre[i];
            
            min=min(min,abs(val1-val2));
        }
        
        out.println(min);
        out.close();
    }
}
class FastScanner:
    def __init__(self,stream):
        self.buffer=io.TextIOWrapper(stream).readline
        self.tokenizer=iter(self.buffer,'\n')

    def __iter__(self):
        return self

    def __next__(self):
        val=next(self.tokenizer)
        return val[:-1]

    def nextInt(self):
        return int(self.nextToken())

    def nextLong(self):
        return long(self.nextToken())

    def nextDouble(self):
        return float(self.nextToken())

    def nextToken(self):
        val=next(self.tokenizer)
        return val

atexit.register(Main.main,sys.argv)","import sys
import io
import atexit
import io
import sys
import math
import itertools
import collections
import random

class Main
{
    static FastScanner in=new FastScanner(sys.stdin);
    static PrintWriter out=new PrintWriter(sys.stdout);

    public static void main(String args[])
    {
        int n=in.nextInt();
        long[] pre=new long[n+1];
        
        for(int i=1;i<=n;i++)
        {
            pre[i]=pre[i-1]+in.nextLong();
        }
        
        long min=9223372036854775807;
        
        for(int i=1;i<n;i++)
        {
            long val1=pre[i],val2=pre[n]-pre[i];
            
            min=min(min,abs(val1-val2));
        }
        
        out.println(min);
        out.close();
    }
}
class FastScanner:
    def __init__(self,stream):
        self.buffer=io.TextIOWrapper(stream).readline
        self.tokenizer=iter(self.buffer,'\n')

    def __iter__(self):
        return self

    def __next__(self):
        val=next(self.tokenizer)
        return val[:-1]

    def nextInt(self):
        return int(self.nextToken())

    def nextLong(self):
        return long(self.nextToken())

    def nextDouble(self):
        return float(self.nextToken())

    def nextToken(self):
        val=next(self.tokenizer)
        return val

atexit.register(Main.main,sys.argv)"
StarCoder,codenet,Java,Python,s629237879.py,"import sys

n = int(raw_input().strip())
str = []
for i in xrange(n):
    str.append(raw_input().strip())

mark = [""S"",""H"",""C"",""D""]
for ma in mark:
    for i in xrange(1,14):
        s = str(i)
        st = ma + "" "" + s
        if st in str:
            continue
        else:
            print st","import sys

n = int(input().strip())
strs = []
for i in range(n):
    strs.append(input().strip())

mark = [""S"",""H"",""C"",""D""]
for ma in mark:
    for i in range(1,14):
        s = str(i)
        st = ma + "" "" + s
        if st in strs:
            continue
        else:
            print(st)"
StarCoder,codenet,Java,Python,s962361667.py,"import sys

w = int(raw_input().strip())
n = int(raw_input().strip())
values = range(w)
for i in range(w):
    values[i] = i + 1
for i in range(n):
    x=0
    ab = raw_input().strip().split(',')
    a = int(ab[0]) - 1
    b = int(ab[1]) - 1
    x=values[a]
    values[a]=values[b]
    values[b]=x
for i in range(w):
    print values[i]","import sys

w = int(input().strip())
n = int(input().strip())
values = list(range(w))
for i in range(w):
    values[i] = i + 1
for i in range(n):
    x=0
    ab = input().strip().split(',')
    a = int(ab[0]) - 1
    b = int(ab[1]) - 1
    x=values[a]
    values[a]=values[b]
    values[b]=x
for i in range(w):
    print(values[i])"
StarCoder,codenet,Java,Python,s561914763.py,"import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

def isMatch(set, c):
    return set.contains(String.valueOf(c))

def main():
    ODD = set([""R"", ""U"", ""D""])
    EVE = set([""L"", ""U"", ""D""])
    sc = Scanner(System.in)
    N = sc.nextLine()
    tap = N.toCharArray()

    isGood = True
    for i in range(len(N)):
        if (i + 1) % 2 == 0:
            if not isMatch(EVE, tap[i]):
                isGood = False
                break
        else:
            if not isMatch(ODD, tap[i]):
                isGood = False
                break

    print(""Yes"" if isGood else ""No"")

if __name__ == ""__main__"":
    main()","def isMatch(set, c):
    return c in set

def main():
    ODD = set([""R"", ""U"", ""D""])
    EVE = set([""L"", ""U"", ""D""])
    N = input()
    tap = N

    isGood = True
    for i in range(len(N)):
        if (i + 1) % 2 == 0:
            if not isMatch(EVE, tap[i]):
                isGood = False
                break
        else:
            if not isMatch(ODD, tap[i]):
                isGood = False
                break

    print(""Yes"" if isGood else ""No"")

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s481865042.py,"import sys
s = raw_input()
k = long(raw_input())
sb = ''
for i in range(len(s)):
	if (26-(ord(s[i])-97))<=k and s[i]!='a':
		k-=26-(ord(s[i])-97)
		sb+='a'
	else:
		sb+=s[i]
if k>0:
	t=sb[len(s)-1]
	sb=sb[:len(s)-1]+chr((ord(t)-97+k)%26+97)
print sb","import sys
s = input()
k = int(input())
sb = ''
for i in range(len(s)):
	if (26-(ord(s[i])-97))<=k and s[i]!='a':
		k-=26-(ord(s[i])-97)
		sb+='a'
	else:
		sb+=s[i]
if k>0:
	t=sb[len(s)-1]
	sb=sb[:len(s)-1]+chr((ord(t)-97+k)%26+97)
print(sb)"
StarCoder,codenet,Java,Python,s494783955.py,"C = raw_input()

print chr(ord(C[0])+1)","C = input()

print(chr(ord(C[0])+1))"
StarCoder,codenet,Java,Python,s818271374.py,"import sys

N = int(raw_input().strip())

count1 = 0
count2 = 0

for i in range(N):
    a = int(raw_input().strip())
    if a % 4 == 0:
        count1 += 1
    elif a % 2 == 0 and (a / 2) % 2 == 1:
        count2 += 1

if count1 >= N / 2:
    print ""Yes""
elif ((N / 2 - count1) * 2 + N % 2) == count2:
    print ""Yes""
else:
    print ""No""","import sys

N = int(input().strip())

count1 = 0
count2 = 0

inputs = list(input().strip().split())
for i in range(N):
    a = int(inputs[i])
    if a % 4 == 0:
        count1 += 1
    elif a % 2 == 0 and (a // 2) % 2 == 1:
        count2 += 1

if count1 >= N // 2:
    print(""Yes"")
elif ((N // 2 - count1) * 2 + N % 2) == count2:
    print(""Yes"")
else:
    print(""No"")"
StarCoder,codenet,Java,Python,s196249385.py,"import sys
import math

def solve():
	n = int(raw_input())
	k = int(raw_input())

	a = []
	for i in range(n):
		a.append(int(raw_input()))

	cumsum = [0] * (n + 1)
	for i in range(n):
		cumsum[i + 1] = cumsum[i] + a[i]

	b = []
	max = 0
	for i in range(n):
		for j in range(i, n):
			b.append(cumsum[j + 1] - cumsum[i])
			max = max(max, cumsum[j + 1] - cumsum[i])

	mask = 1
	while mask <= max:
		tmp = []
		for e in b:
			if (e & mask)!= 0:
				tmp.append(e)

		if len(tmp) >= k:
			b = tmp

		mask <<= 1

	if len(b) < k:
		print 0
	else:
		ans = -1
		for e in b:
			ans &= e

		print ans

# ---------------------------------------------------

solve()","import sys
import math

def solve():
	n, k = map(int, input().split())

	a = list(map(int, input().split()))

	cumsum = [0] * (n + 1)
	for i in range(n):
		cumsum[i + 1] = cumsum[i] + a[i]

	b = []
	max_val = 0
	for i in range(n):
		for j in range(i, n):
			b.append(cumsum[j + 1] - cumsum[i])
			max_val = max(max_val, cumsum[j + 1] - cumsum[i])

	mask = 1 << (max_val.bit_length() - 1)
	while mask > 0:
		tmp = []
		for e in b:
			if (e & mask)!= 0:
				tmp.append(e)

		if len(tmp) >= k:
			b = tmp

		mask >>= 1

	if len(b) < k:
		print(0)
	else:
		ans = -1
		for e in b:
			ans &= e

		print(ans)

# ---------------------------------------------------

solve()"
StarCoder,codenet,Java,Python,s749703010.py,"import sys
import math
class Main:
    def __init__(self):
        self.n=0
        self.a=[]
        self.memo=[[[0 for i in range(1<<10)] for j in range(1000)] for k in range(2)]
    def dp(self,fliped,idx,msk):
        if msk==(1<<self.n)-1:return 0
        if self.memo[fliped][idx][msk]!=-1:return self.memo[fliped][idx][msk]
        x=0
        ff=0
        ans=1e9
        for i in range(self.n):
            if (msk&(1<<i))==0:
                nf= x%2
                if idx==self.n or self.a[fliped][idx]<=self.a[(nf+(ff%2))%2][i]:
                    ans=min(ans,ff+self.dp((nf+(ff%2))%2,i,msk|1<<i))
                ff+=1
            else x-=1
        return self.memo[fliped][idx][msk]=ans
    def main(self):
        self.n=int(sys.stdin.readline())
        self.a=[[0 for i in range(self.n)] for j in range(2)]
        for i in range(self.n):self.a[0][i]=int(sys.stdin.readline())
        for i in range(self.n):self.a[1][i]=int(sys.stdin.readline())
        self.memo=[[[0 for i in range(1<<10)] for j in range(1000)] for k in range(2)]
        ans=self.dp(0,self.n,0)
        print(-1 if ans>=1e8 else ans)
if __name__ == '__main__':
    obj=Main()
    obj.main()","import sys
import math
class Main:
    def __init__(self):
        self.n=0
        self.a=[]
        self.memo=[[[0 for i in range(1<<10)] for j in range(1000)] for k in range(2)]
    def dp(self,fliped,idx,msk):
        if msk==(1<<self.n)-1:return 0
        if self.memo[fliped][idx][msk]!=-1:return self.memo[fliped][idx][msk]
        x=0
        ff=0
        ans=1e9
        for i in range(self.n):
            if (msk&(1<<i))==0:
                nf= x%2
                if idx==self.n or self.a[fliped][idx]<=self.a[(nf+(ff%2))%2][i]:
                    ans=min(ans,ff+self.dp((nf+(ff%2))%2,i,msk|1<<i))
                ff+=1
            else: x-=1
        self.memo[fliped][idx][msk]=ans
        return ans
    def main(self):
        self.n=int(sys.stdin.readline())
        self.a=[[0 for i in range(self.n)] for j in range(2)]
        inputs = list(sys.stdin.readline().split())
        for i in range(self.n):self.a[0][i]=int(inputs[i])
        inputs = list(sys.stdin.readline().split())
        for i in range(self.n):self.a[1][i]=int(inputs[i])
        self.memo=[[[-1 for i in range(1<<10)] for j in range(1000)] for k in range(2)]
        ans=self.dp(0,self.n,0)
        print(-1 if ans>=1e8 else ans)
if __name__ == '__main__':
    obj=Main()
    obj.main()"
StarCoder,codenet,Java,Python,s291405468.py,"import sys

def main():
    a = int(raw_input())
    b = int(raw_input())
    print ""Yes"" if a % 500 <= b else ""No""

if __name__ == ""__main__"":
    main()","import sys

def main():
    a = int(input())
    b = int(input())
    print(""Yes"" if a % 500 <= b else ""No"")

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s612878490.py,"import sys

def main():
    N, M = map(int, raw_input().split())
    shortage = map(int, raw_input().split())
    shortage.sort()
    ans = 0
    for i in range(M - 1):
        ans += shortage[i]
    print ans

if __name__ == '__main__':
    main()","import sys

def main():
    N, M = map(int, input().split())
    shortage = list(map(int, input().split()))
    shortage.sort()
    ans = 0
    for i in range(M - 1):
        ans += shortage[i]
    print(ans)

if __name__ == '__main__':
    main()"
StarCoder,codenet,Java,Python,s192812966.py,"import sys

w,h,n = map(int,raw_input().split())
x = map(int,raw_input().split())
y = map(int,raw_input().split())
a = map(int,raw_input().split())

xmax = max(x)
xmin = min(x)
ymax = max(y)
ymin = min(y)

w = max(xmax-xmin,0)
h = max(ymax-ymin,0)

print w*h","import sys

w,h,n = map(int,input().split())
x = map(int,input().split())
y = map(int,input().split())
a = map(int,input().split())

xmax = max(x)
xmin = min(x)
ymax = max(y)
ymin = min(y)

w = max(xmax-xmin,0)
h = max(ymax-ymin,0)

print(w*h)"
StarCoder,codenet,Java,Python,s393629232.py,"import sys

def main():
    n = int(raw_input().strip())
    maxv = -sys.maxint
    minv = int(raw_input().strip())
    for i in range(1, n):
        ri = int(raw_input().strip())
        maxv = max(maxv, ri - minv)
        minv = min(minv, ri)
    print maxv

if __name__ == ""__main__"":
    main()","import sys

def main():
    n = int(input().strip())
    maxv = -sys.maxsize
    minv = int(input().strip())
    for i in range(1, n):
        ri = int(input().strip())
        maxv = max(maxv, ri - minv)
        minv = min(minv, ri)
    print(maxv)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s356471394.py,"import sys

def main():
    N, M, D = map(int, raw_input().split())
    room = []
    for i in range(N):
        room.append(raw_input().strip())

    if M >= D:
        setWE(room, N, M, D)

    if N >= D:
        setNS(room, N, M, D)

    print num

def setWE(room, N, M, D):
    for i in range(N):
        for j in range(M - D + 1):
            canPut = True
            for k in range(D):
                if room[i][j + k] == '#':
                    canPut = False
                    break
            if canPut:
                global num
                num += 1

def setNS(room, N, M, D):
    for i in range(M):
        for j in range(N - D + 1):
            canPut = True
            for k in range(D):
                if room[j + k][i] == '#':
                    canPut = False
                    break
            if canPut:
                global num
                num += 1

if __name__ == '__main__':
    num = 0
    main()","import sys

def main():
    N, M, D = map(int, input().split())
    room = []
    for i in range(N):
        room.append(input().strip())

    if M >= D:
        setWE(room, N, M, D)

    if N >= D:
        setNS(room, N, M, D)

    print(num)

def setWE(room, N, M, D):
    for i in range(N):
        for j in range(M - D + 1):
            canPut = True
            for k in range(D):
                if room[i][j + k] == '#':
                    canPut = False
                    break
            if canPut:
                global num
                num += 1

def setNS(room, N, M, D):
    for i in range(M):
        for j in range(N - D + 1):
            canPut = True
            for k in range(D):
                if room[j + k][i] == '#':
                    canPut = False
                    break
            if canPut:
                global num
                num += 1

if __name__ == '__main__':
    num = 0
    main()"
StarCoder,codenet,Java,Python,s440824480.py,"import sys

n = int(raw_input().strip())
c = 0
flg = 0
while n > 0:
    x, y = map(int, raw_input().strip().split(' '))
    if x == y:
        c += 1
        if c >= 3:
            flg = 1
    else:
        c = 0
    n -= 1
if flg == 0:
    print ""No""
else:
    print ""Yes""","import sys

n = int(input().strip())
c = 0
flg = 0
while n > 0:
    x, y = map(int, input().strip().split())
    if x == y:
        c += 1
        if c >= 3:
            flg = 1
    else:
        c = 0
    n -= 1
if flg == 0:
    print(""No"")
else:
    print(""Yes"")"
StarCoder,codenet,Java,Python,s847387793.py,"import sys

class Main:

    class Solver:
        def __init__(self, sc, writer):
            self.sc = sc
            self.writer = writer

        def run(self):
            n = self.sc.nextInt()
            m = self.sc.nextInt()
            q = self.sc.nextInt()
            a = []
            b = []
            c = []
            d = []
            for i in range(q):
                a.append(self.sc.nextInt())
                b.append(self.sc.nextInt())
                c.append(self.sc.nextInt())
                d.append(self.sc.nextInt())
            self.dfs([1])
            self.writer.println(max)

        def dfs(self, array):
            if len(array) > n:
                score = 0
                for i in range(q):
                    if array[b[i]] - array[a[i]] == c[i]:
                        score += d[i]
                max = max(max, score)
                return
            newArray = []
            for i in range(len(array)):
                newArray.append(array[i])
            newArray.append(array[len(array) - 1])
            while newArray[len(newArray) - 1] <= m:
                self.dfs(newArray)
                newArray[len(newArray) - 1] += 1

    def main(self):
        sc = self.FastScanner()
        writer = self.PrintWriter(sys.stdout)
        try:
            self.Solver(sc, writer).run()
        finally:
            writer.flush()

    # FastScanner
    class FastScanner:
        def __init__(self):
            self.in = sys.stdin
            self.buffer = bytearray()
            self.ptr = 0
            self.buflen = 0

        def hasNextByte(self):
            if self.ptr < self.buflen:
                return True
            else:
                self.ptr = 0
                try:
                    self.buflen = self.in.readinto(self.buffer)
                except:
                    pass
                if self.buflen <= 0:
                    return False
            return True

        def readByte(self):
            if self.hasNextByte():
                return self.buffer[self.ptr]
            else:
                return -1

        def isPrintableChar(self, c):
            return 33 <= c and c <= 126

        def hasNext(self):
            while self.hasNextByte() and not self.isPrintableChar(self.buffer[self.ptr]):
                self.ptr += 1
            return self.hasNextByte()

        def next(self):
            if not self.hasNext():
                raise NoSuchElementException()
            sb = []
            b = self.readByte()
            while self.isPrintableChar(b):
                sb.append(chr(b))
                b = self.readByte()
            return ''.join(sb)

        def nextLong(self):
            if not self.hasNext():
                raise NoSuchElementException()
            n = 0
            minus = False
            b = self.readByte()
            if b == '-':
                minus = True
                b = self.readByte()
            if b < '0' or '9' < b:
                raise NumberFormatException()
            while True:
                if '0' <= b and b <= '9':
                    n *= 10
                    n += b - '0'
                elif b == -1 or not self.isPrintableChar(b):
                    return minus? -n : n
                else:
                    raise NumberFormatException()
                b = self.readByte()

        def nextInt(self):
            nl = self.nextLong()
            if nl < Integer.MIN_VALUE or nl > Integer.MAX_VALUE:
                raise NumberFormatException()
            return int(nl)

        def nextDouble(self):
            return float(self.next())

        def nextIntArray(self, n):
            a = []
            for","import sys

class Main:

    class Solver:
        def __init__(self, sc, writer):
            self.sc = sc
            self.writer = writer

        def run(self):
            n = self.sc.nextInt()
            m = self.sc.nextInt()
            q = self.sc.nextInt()
            a = []
            b = []
            c = []
            d = []
            for i in range(q):
                a.append(self.sc.nextInt())
                b.append(self.sc.nextInt())
                c.append(self.sc.nextInt())
                d.append(self.sc.nextInt())
            self.dfs([1])
            self.writer.println(max)

        def dfs(self, array):
            if len(array) > n:
                score = 0
                for i in range(q):
                    if array[b[i]] - array[a[i]] == c[i]:
                        score += d[i]
                max = max(max, score)
                return
            newArray = []
            for i in range(len(array)):
                newArray.append(array[i])
            newArray.append(array[len(array) - 1])
            while newArray[len(newArray) - 1] <= m:
                self.dfs(newArray)
                newArray[len(newArray) - 1] += 1

    def main(self):
        sc = self.FastScanner()
        writer = self.PrintWriter(sys.stdout)
        try:
            self.Solver(sc, writer).run()
        finally:
            writer.flush()

    # FastScanner
    class FastScanner:
        def __init__(self):
            self.in = sys.stdin
            self.buffer = bytearray()
            self.ptr = 0
            self.buflen = 0

        def hasNextByte(self):
            if self.ptr < self.buflen:
                return True
            else:
                self.ptr = 0
                try:
                    self.buflen = self.in.readinto(self.buffer)
                except:
                    pass
                if self.buflen <= 0:
                    return False
            return True

        def readByte(self):
            if self.hasNextByte():
                return self.buffer[self.ptr]
            else:
                return -1

        def isPrintableChar(self, c):
            return 33 <= c and c <= 126

        def hasNext(self):
            while self.hasNextByte() and not self.isPrintableChar(self.buffer[self.ptr]):
                self.ptr += 1
            return self.hasNextByte()

        def next(self):
            if not self.hasNext():
                raise NoSuchElementException()
            sb = []
            b = self.readByte()
            while self.isPrintableChar(b):
                sb.append(chr(b))
                b = self.readByte()
            return ''.join(sb)

        def nextLong(self):
            if not self.hasNext():
                raise NoSuchElementException()
            n = 0
            minus = False
            b = self.readByte()
            if b == '-':
                minus = True
                b = self.readByte()
            if b < '0' or '9' < b:
                raise NumberFormatException()
            while True:
                if '0' <= b and b <= '9':
                    n *= 10
                    n += b - '0'
                elif b == -1 or not self.isPrintableChar(b):
                    return minus? -n : n
                else:
                    raise NumberFormatException()
                b = self.readByte()

        def nextInt(self):
            nl = self.nextLong()
            if nl < Integer.MIN_VALUE or nl > Integer.MAX_VALUE:
                raise NumberFormatException()
            return int(nl)

        def nextDouble(self):
            return float(self.next())

        def nextIntArray(self, n):
            a = []
            for"
StarCoder,codenet,Java,Python,s575985145.py,"import sys

size = int(raw_input())
graph = [[0 for x in range(size)] for y in range(size)]

for i in range(size):
    id = int(raw_input())
    cols = int(raw_input())
    row = [0 for x in range(size)]
    for j in range(cols):
        row[int(raw_input()) - 1] = 1
    graph[id - 1] = row

for i in range(size):
    for j in range(size):
        print graph[i][j],
    print","import sys

size = int(input())
graph = [[0 for x in range(size)] for y in range(size)]

for i in range(size):
    inputs = list(input().split())
    id, cols = int(inputs[0]), int(inputs[1])
    row = [0 for x in range(size)]
    for j in range(cols):
        row[int(inputs[j + 2]) - 1] = 1
    graph[id - 1] = row

for row in graph:
    print(' '.join(map(str, row)))"
StarCoder,codenet,Java,Python,s670290220.py,"import sys

N = int(raw_input().strip())
c = raw_input().strip()
for i in range(len(c)):
    c = chr((ord(c[i])-ord('A')+N)%26 + ord('A'))
print c","import sys

N = int(input().strip())
c = list(input().strip())
for i in range(len(c)):
    c[i] = chr((ord(c[i])-ord('A')+N)%26 + ord('A'))
print(''.join(c))"
StarCoder,codenet,Java,Python,s573993837.py,"import java.io.*;
import java.util.*;
import java.lang.*;
import java.math.BigInteger; 
public class Main{
    public static void main(String[] args) {","import java.io.*;
import java.util.*;
import java.lang.*;
import java.math.BigInteger; 
public class Main{
    public static void main(String[] args) {"
StarCoder,codenet,Java,Python,s867221485.py,"import java.lang.reflect.Array;
import java.util.*;","import java.lang.reflect.Array;
import java.util.*;"
StarCoder,codenet,Java,Python,s125837071.py,"import sys

def findS(k, i):
	s = 0
	while k % i == 0:
		s += 1
		k /= i
	return s

n = int(raw_input().strip())
ans = 1
mod = 1000000007
for i in range(2, n + 1):
	for j in range(2, i):
		if i % j!= 0 and j < i:
			if j == i:
				s = 0
				for k in range(1, n + 1):
					s += findS(k, i)
				ans = (ans * (s + 1)) % mod

print ans","import sys

def findS(k, i):
	s = 0
	while k % i == 0:
		s += 1
		k /= i
	return s

n = int(input().strip())
ans = 1
mod = 1000000007
for i in range(2, n + 1):
	for j in range(2, i + 1):
		if not ((i % j != 0 and j < i) or j == i): break 
		if j == i:
			s = 0
			for k in range(1, n + 1):
				s += findS(k, i)
			ans = (ans * (s + 1)) % mod

print(ans)"
StarCoder,codenet,Java,Python,s773621585.py,"import java.util.HashMap;
import java.util.Scanner;

public class Main
{
	public static void main(String[] args)
	{
		HashMap<String, String> map = new HashMap<String, String>();
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		String str= sc.nextLine();
		for (int i=0; i<n; i++) {
			map.put(sc.nextLine(),"""");
		}
		sc.close();

		System.out.println(map.size());
	}
}","import java.util.HashMap;
import java.util.Scanner;

public class Main
{
	public static void main(String[] args)
	{
		HashMap<String, String> map = new HashMap<String, String>();
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		String str= sc.nextLine();
		for (int i=0; i<n; i++) {
			map.put(sc.nextLine(),"""");
		}
		sc.close();

		System.out.println(map.size());
	}
}"
StarCoder,codenet,Java,Python,s902370101.py,"import sys

n = int(raw_input().strip())
arr = map(int, raw_input().strip().split(' '))

max = 0
min = 10000
for i in arr:
    if max < i:
        max = i
    if min > i:
        min = i

print max - min","import sys

n = int(input().strip())
arr = map(int, input().strip().split())

max = 0
min = 10000
for i in arr:
    if max < i:
        max = i
    if min > i:
        min = i

print(max - min)"
StarCoder,codenet,Java,Python,s684030429.py,"# Python program For handling Input/Output 
import java.io.*; 
import java.util.*;
import java.math.*;
//import java.awt.*;

class Main 
{ 
    Scanner sc;
    int max = 0,cur = 0;
#actual logic
    def solve():
        a = ni()
        b = ni()

        print(max(0, a-2*b))

#constructor
    def __init__(self):
        try:  
            sc = Scanner(System.in);
        except(Exception e):","# Python program For handling Input/Output 
import java.io.*; 
import java.util.*;
import java.math.*;
//import java.awt.*;

class Main 
{ 
    Scanner sc;
    int max = 0,cur = 0;
#actual logic
    def solve():
        a = ni()
        b = ni()

        print(max(0, a-2*b))

#constructor
    def __init__(self):
        try:  
            sc = Scanner(System.in);
        except(Exception e):"
StarCoder,codenet,Java,Python,s378126458.py,"import sys

def main():
    N, Q = map(int, raw_input().split())
    s = raw_input()
    pre = [0]*(N+1)
    for i in range(1, N):
        if s[i-1] == 'A' and s[i] == 'C':
            pre[i] = 1
    for i in range(1, N):
        pre[i] += pre[i-1]
    while Q > 0:
        l, r = map(int, raw_input().split())
        r -= 1
        print pre[r] - pre[l-1]
        Q -= 1

if __name__ == ""__main__"":
    main()","import sys

def main():
    N, Q = map(int, input().split())
    s = input()
    pre = [0]*(N+1)
    for i in range(1, N):
        if s[i-1] == 'A' and s[i] == 'C':
            pre[i] = 1
    for i in range(1, N):
        pre[i] += pre[i-1]
    while Q > 0:
        l, r = map(int, input().split())
        r -= 1
        print(pre[r] - pre[l-1])
        Q -= 1

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s853705214.py,"import sys

def main():
    n = int(raw_input().strip())
    nums = map(int, raw_input().strip().split(' '))

    min = sys.maxint
    countNegatives = 0
    sum = 0
    for num in nums:
        abs = abs(num)
        sum += abs
        min = min if min < abs else abs
        if num < 0:
            countNegatives += 1

    print sum if countNegatives % 2 == 0 else sum - (min*2)

if __name__ == ""__main__"":
    main()","import sys

def main():
    n = int(input().strip())
    nums = map(int, input().strip().split())

    min_val = sys.maxsize
    countNegatives = 0
    sum = 0
    for num in nums:
        abs_val = abs(num)
        sum += abs_val
        min_val = min_val if min_val < abs_val else abs_val
        if num < 0:
            countNegatives += 1

    print(sum if countNegatives % 2 == 0 else sum - (min_val*2))

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s325080396.py,"import sys

def main():
    n = int(raw_input())
    R = [int(i) for i in raw_input().split()]
    maxv = R[1]-R[0]
    minv = R[0]
    for i in range(1,n):
        maxv = max(maxv, R[i]-minv)
        minv = min(minv, R[i])
    print maxv

if __name__ == ""__main__"":
    main()","import sys

def main():
    n = int(input())
    R = []
    for i in range(n):
        R.append(int(input()))
    maxv = R[1]-R[0]
    minv = R[0]
    for i in range(1,n):
        maxv = max(maxv, R[i]-minv)
        minv = min(minv, R[i])
    print(maxv)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s428436430.py,"import java.util.*;

class calArea:
    def Area(self,w,h):
        area = w * h
        return area

def main():
    sc = Scanner(System.in)
    arr = []
    for i in range(4):
        arr.append(int(sc.next()))
    ab = calArea()
    area1 = ab.Area(arr[0],arr[1])
    area2 = ab.Area(arr[2],arr[3])
    if area1 > area2:
        print(area1)
    elif area1 < area2:
        print(area2)
    elif area1 == area2:
        print(area1)

if __name__ == '__main__':
    main()","class calArea:
    def Area(self,w,h):
        area = w * h
        return area

def main():
    arr = list(map(int, input().split()))
    ab = calArea()
    area1 = ab.Area(arr[0],arr[1])
    area2 = ab.Area(arr[2],arr[3])
    if area1 > area2:
        print(area1)
    elif area1 < area2:
        print(area2)
    elif area1 == area2:
        print(area1)

if __name__ == '__main__':
    main()"
StarCoder,codenet,Java,Python,s391272180.py,"import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		StringBuilder s,t;
		s= new StringBuilder(sc.next());
		t=new StringBuilder(sc.next());
		boolean flag=false;
		for(int i=0;i<s.length();i++) {
			s=new StringBuilder(Rotate(s));
			if(t.toString().equals(s.toString())) {
				flag=true;
				break;
			}
		}
		if(flag==true)
			System.out.println(""Yes"");
		else
			System.out.println(""No"");
	}
	
	public static StringBuilder Rotate(StringBuilder str) {
		int len=str.length();
		char t=str.charAt(0);
		for(int i=0;i<len-1;i++) {
			str.setCharAt(i,str.charAt(i+1));			
		}
		str.setCharAt(len-1,t);
		return str;
	}
}","import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		StringBuilder s,t;
		s= new StringBuilder(sc.next());
		t=new StringBuilder(sc.next());
		boolean flag=false;
		for(int i=0;i<s.length();i++) {
			s=new StringBuilder(Rotate(s));
			if(t.toString().equals(s.toString())) {
				flag=true;
				break;
			}
		}
		if(flag==true)
			System.out.println(""Yes"");
		else
			System.out.println(""No"");
	}
	
	public static StringBuilder Rotate(StringBuilder str) {
		int len=str.length();
		char t=str.charAt(0);
		for(int i=0;i<len-1;i++) {
			str.setCharAt(i,str.charAt(i+1));			
		}
		str.setCharAt(len-1,t);
		return str;
	}
}"
StarCoder,codenet,Java,Python,s126744620.py,"import sys

def main():
    n = int(raw_input().strip())
    k = int(raw_input().strip())
    a = map(int, raw_input().strip().split(' '))
    x = [0] * 200010
    for i in range(n):
        x[a[i] - 1] += 1
    x.sort()
    ans = 0
    for i in range(200010 - k - 1):
        ans += x[i]
    print ans

if __name__ == ""__main__"":
    main()","import sys

def main():
    n, k = map(int, input().split())
    a = list(map(int, input().strip().split()))
    x = [0] * 200010
    for i in range(n):
        x[a[i] - 1] += 1
    x.sort()
    ans = 0
    for i in range(200010 - k):
        ans += x[i]
    print(ans)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s000087391.py,"import sys

def main():
    while True:
        n = int(raw_input())
        if n == 0:
            break
        result = []
        for i in range(n):
            line = raw_input()
            array = line.split()
            input = [int(x) for x in array]
            sum = 0
            for x in input:
                sum += x
            avg = sum/n
            num = 0
            for x in input:
                if x <= avg:
                    num += 1
            result.append(num)
        for x in result:
            print x

if __name__ == ""__main__"":
    main()","import sys

def main():
    while True:
        n = int(input())
        if n == 0:
            break
        result = []
        line = input()
        array = line.split()
        inputs = [int(x) for x in array]
        sum = 0
        for x in inputs:
            sum += x
        avg = sum/n
        num = 0
        for x in inputs:
            if x <= avg:
                num += 1
        result.append(num)
        for x in result:
            print(x)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s077706488.py,"import sys

N = int(raw_input().strip())
X = int(raw_input().strip())
m = [int(raw_input().strip()) for _ in range(N)]
X -= m[0]
min = m[0]
for i in range(1, N):
	X -= m[i]
	if m[i] < min:
		min = m[i]
print N+X/min","import sys

N, X = map(int, input().split())
m = [int(input().strip()) for _ in range(N)]
X -= m[0]
min = m[0]
for i in range(1, N):
	X -= m[i]
	if m[i] < min:
		min = m[i]
print(N+X//min)"
StarCoder,codenet,Java,Python,s537034016.py,"import sys

mod = 1000000007

dp = [-1 for _ in range(100001)]

def dfs(s):
    if dp[s]!= -1:
        return dp[s]

    ret = 0
    for i in range(s - 3, -1, -1):
        ret += dfs(i)
        ret %= mod
    return dp[s] = ret

s = int(sys.stdin.readline())
print(dfs(s))","import sys

mod = 1000000007

dp = [-1 for _ in range(100001)]
dp[0] = 1

def dfs(s):
    if dp[s]!= -1:
        return dp[s]

    ret = 0
    for i in range(s - 3, -1, -1):
        ret += dfs(i)
        ret %= mod
    dp[s] = ret
    return ret

s = int(sys.stdin.readline())
print(dfs(s))"
StarCoder,codenet,Java,Python,s393796709.py,"import sys
MOD = 1000000007
def f(n):
    res = 1
    for i in xrange(2, n+1):
        res = (res*i)%MOD
    return res
def solve(in_):
    xx = map(int, in_.readline().split())
    min_ = min(xx[0], xx[1])
    max_ = max(xx[0], xx[1])
    if min_ == max_:
        f_ = f(min_)
        res = (2*f_*f_)%MOD
    elif min_ + 1 == max_:
        f_ = f(min_)
        res = (f_*(f_*max_)%MOD)%MOD
    else:
        res = 0
    print res
if __name__ == '__main__':
    solve(sys.stdin)","import sys
MOD = 1000000007
def f(n):
    res = 1
    for i in range(2, n+1):
        res = (res*i)%MOD
    return res
def solve(in_):
    xx = list(map(int, in_.readline().split()))
    min_ = min(xx[0], xx[1])
    max_ = max(xx[0], xx[1])
    if min_ == max_:
        f_ = f(min_)
        res = (2*f_*f_)%MOD
    elif min_ + 1 == max_:
        f_ = f(min_)
        res = (f_*(f_*max_)%MOD)%MOD
    else:
        res = 0
    print(res)
if __name__ == '__main__':
    solve(sys.stdin)"
StarCoder,codenet,Java,Python,s857785109.py,"import java.util.*;
public class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int  n = sc.nextInt();
    if((n/10)%111==0):
      print(""Yes"")
    elif((n%1000)%111==0):
      print(""Yes"")
    else:
      print(""No"")
      
  }
  

  
}","import java.util.*;
public class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int  n = sc.nextInt();
    if((n/10)%111==0):
      print(""Yes"")
    elif((n%1000)%111==0):
      print(""Yes"")
    else:
      print(""No"")
      
  }
  

  
}"
StarCoder,codenet,Java,Python,s287007304.py,"import sys

a, b = map(int, raw_input().split())
if b%a == 0:
    print a+b
else:
    print b-a","import sys

a, b = map(int, input().split())
if b%a == 0:
    print(a+b)
else:
    print(b-a)"
StarCoder,codenet,Java,Python,s685734377.py,"import java.io.OutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.InputStream;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
    public static void main(String[] args) {","import java.io.OutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.InputStream;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
    public static void main(String[] args) {"
StarCoder,codenet,Java,Python,s100570405.py,"import sys
import math
import io

class MyInput:
    def __init__(self):
        self.instream = io.open(sys.argv[1], 'r')
        self.curline = self.instream.readline()
        self.nextline = self.instream.readline()
        self.curidx = 0
        self.nextidx = 0

    def hasNext(self):
        if self.nextidx < len(self.nextline):
            return True
        else:
            self.curline = self.nextline
            self.curidx = self.nextidx
            self.nextline = self.instream.readline()
            self.nextidx = 0
            if self.nextline == '':
                return False
            else:
                return True

    def next(self):
        if not self.hasNext():
            raise Exception('No more input')
        self.nextidx += 1
        return self.curline[self.curidx:self.nextidx]

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return long(self.next())

    def nextDouble(self):
        return float(self.next())

class Main:
    def __init__(self):
        self.instream = MyInput()
        self.run()

    def run(self):
        Sd = self.instream.next()
        T = self.instream.next()
        count = 0
        c = ''
        ok = False
        first = -1
        end = -1
        for j in range(len(Sd)):
            count = 0
            for i in range(j, len(Sd)):
                c = Sd[i]
                if c == '?' or c == T[count]:
                    count += 1
                    if count == len(T):
                        first = i - len(T) + 1
                        end = i
                        ok = True
                        break
                else:
                    count = 0
            if ok:
                break
        if ok:
            for i in range(len(Sd)):
                if first <= i and i <= end:
                    print T[i - first]
                else:
                    if Sd[i] == '?':
                        print 'a'
                    else:
                        print Sd[i]
        else:
            print 'UNRESTORABLE'

if __name__ == '__main__':
    Main()","import sys
import math
import io

class MyInput:
    def __init__(self):
        self.instream = io.open(sys.argv[1], 'r')
        self.curline = self.instream.readline()
        self.nextline = self.instream.readline()
        self.curidx = 0
        self.nextidx = 0

    def hasNext(self):
        if self.nextidx < len(self.nextline):
            return True
        else:
            self.curline = self.nextline
            self.curidx = self.nextidx
            self.nextline = self.instream.readline()
            self.nextidx = 0
            if self.nextline == '':
                return False
            else:
                return True

    def next(self):
        if not self.hasNext():
            raise Exception('No more input')
        self.nextidx += 1
        return self.curline[self.curidx:self.nextidx]

    def nextInt(self):
        return int(self.next())

    def nextLong(self):
        return long(self.next())

    def nextDouble(self):
        return float(self.next())

class Main:
    def __init__(self):
        self.instream = MyInput()
        self.run()

    def run(self):
        Sd = self.instream.next()
        T = self.instream.next()
        count = 0
        c = ''
        ok = False
        first = -1
        end = -1
        for j in range(len(Sd)):
            count = 0
            for i in range(j, len(Sd)):
                c = Sd[i]
                if c == '?' or c == T[count]:
                    count += 1
                    if count == len(T):
                        first = i - len(T) + 1
                        end = i
                        ok = True
                        break
                else:
                    count = 0
            if ok:
                break
        if ok:
            for i in range(len(Sd)):
                if first <= i and i <= end:
                    print(T[i - first])
                else:
                    if Sd[i] == '?':
                        print('a')
                    else:
                        print(Sd[i])
        else:
            print('UNRESTORABLE')

if __name__ == '__main__':
    Main()"
StarCoder,codenet,Java,Python,s789781857.py,"import sys

n = int(raw_input().strip())
c = map(int, raw_input().strip().split(' '))
s = map(int, raw_input().strip().split(' '))
f = map(int, raw_input().strip().split(' '))

for i in range(n-1):
    time = s[i] + c[i]
    for j in range(i+1, n-1):
        if time % f[j]!= 0:
            time += f[j] - (time % f[j])
        if time < s[j]:
            time = s[j]
        time += c[j]
    print time
print 0","import sys

n = int(raw_input().strip())
c = map(int, raw_input().strip().split(' '))
s = map(int, raw_input().strip().split(' '))
f = map(int, raw_input().strip().split(' '))

for i in range(n-1):
    time = s[i] + c[i]
    for j in range(i+1, n-1):
        if time % f[j]!= 0:
            time += f[j] - (time % f[j])
        if time < s[j]:
            time = s[j]
        time += c[j]
    print time
print 0"
StarCoder,codenet,Java,Python,s832608243.py,"import java.util.Scanner;

public class Main {
    public static void main(final String[] args) {
    	Scanner scanner = new Scanner(System.in);
    	int a = scanner.nextInt(), b = scanner.nextInt();
    	boolean flag = False;
    	for(int i=1;i<=100000;i++) {
    		if (int(1.* i *.08) == a && b == int(.1 * i)) {
    			System.out.println(i);
    			flag = True;
    			break;
    		}
    	}
    	if (!flag) {
    		System.out.println(-1);
    	}
    	}
    }","import java.util.Scanner;

public class Main {
    public static void main(final String[] args) {
    	Scanner scanner = new Scanner(System.in);
    	int a = scanner.nextInt(), b = scanner.nextInt();
    	boolean flag = False;
    	for(int i=1;i<=100000;i++) {
    		if (int(1.* i *.08) == a && b == int(.1 * i)) {
    			System.out.println(i);
    			flag = True;
    			break;
    		}
    	}
    	if (!flag) {
    		System.out.println(-1);
    	}
    	}
    }"
StarCoder,codenet,Java,Python,s936984238.py,"import sys

while True:
    try:
        number = int(raw_input())
        if number == 0:
            break
        score = [int(raw_input()) for i in range(number)]
        score.sort()
        sum = 0
        for i in range(1, number-1):
            sum += score[i]
        print sum/(number-2)
    except EOFError:
        break","import sys

while True:
    try:
        number = int(input())
        if number == 0:
            break
        score = [int(input()) for i in range(number)]
        score.sort()
        sum = 0
        for i in range(1, number-1):
            sum += score[i]
        print(sum//(number-2))
    except EOFError:
        break"
StarCoder,codenet,Java,Python,s657273562.py,"import java.io.*;
import java.util.*;

public class Main {
    static PrintWriter pw;
    static Scanner sc;
    static ArrayList<Integer>[] adj;
    static boolean[] visit;
    static HashMap<Pair, Integer> dp;
    static long ceildiv(long x, long y) { return (x+y-1)/y; }
    static int mod(long x, int m) { return (int)((x%m+m)%m); }
    static HashMap<Integer, Integer> map;
    static long gcd(long x, long y) {return y==0?x:gcd(y, x%y);}
    static int Int(boolean x){ return x?1:0; }
    static void put(TreeMap<Pair, Integer> map, Pair p){
        if(map.containsKey(p))
            map.replace(p, map.get(p)+1);
        else
            map.put(p, 1);
    }
    static void rem(TreeMap<Pair, Integer> map, Pair p){
        if(map.get(p)==1)
            map.remove","import java.io.*;
import java.util.*;

public class Main {
    static PrintWriter pw;
    static Scanner sc;
    static ArrayList<Integer>[] adj;
    static boolean[] visit;
    static HashMap<Pair, Integer> dp;
    static long ceildiv(long x, long y) { return (x+y-1)/y; }
    static int mod(long x, int m) { return (int)((x%m+m)%m); }
    static HashMap<Integer, Integer> map;
    static long gcd(long x, long y) {return y==0?x:gcd(y, x%y);}
    static int Int(boolean x){ return x?1:0; }
    static void put(TreeMap<Pair, Integer> map, Pair p){
        if(map.containsKey(p))
            map.replace(p, map.get(p)+1);
        else
            map.put(p, 1);
    }
    static void rem(TreeMap<Pair, Integer> map, Pair p){
        if(map.get(p)==1)
            map.remove"
StarCoder,codenet,Java,Python,s185737640.py,"import sys

def isEvenString(s):
    a = s[:len(s)/2]
    b = s[len(s)/2:]
    if a == b:
        return True
    else:
        return False

S = sys.stdin.readline().rstrip()

if len(S) % 2 == 1:
    S = S[:-1]
else:
    S = S[:-2]

while len(S) > 0:
    if isEvenString(S):
        break
    S = S[:-2]

print len(S)","import sys

def isEvenString(s):
    a = s[:len(s)//2]
    b = s[len(s)//2:]
    if a == b:
        return True
    else:
        return False

S = sys.stdin.readline().rstrip()

if len(S) % 2 == 1:
    S = S[:-1]
else:
    S = S[:-2]

while len(S) > 0:
    if isEvenString(S):
        break
    S = S[:-2]

print(len(S))"
StarCoder,codenet,Java,Python,s221078931.py,"import sys

class IntegralRect:
	def __init__(self, h, w):
		self.height = h
		self.width = w

	def diagonal(self):
		if self.height >= self.width:
			return sys.maxint
		return self.height*self.height + self.width*self.width

	def __cmp__(self, other):
		d1 = self.diagonal()
		d2 = other.diagonal()
		if d1 == d2:
			return self.height - other.height
		return d1 - d2

rects = []
for i in range(200):
	for j in range(200):
		rects.append(IntegralRect(i + 1, j + 1))

rects.sort()

while True:
	h, w = map(int, raw_input().split())
	if h == 0 and w == 0:
		break
	tmpRect = IntegralRect(h, w)
	diag = tmpRect.diagonal()
	for rect in rects:
		if rect > tmpRect:
			print rect.height, rect.width
			break","import sys

class IntegralRect:
	def __init__(self, h, w):
		self.height = h
		self.width = w

	def diagonal(self):
		if self.height >= self.width:
			return sys.maxint
		return self.height*self.height + self.width*self.width

	def __cmp__(self, other):
		d1 = self.diagonal()
		d2 = other.diagonal()
		if d1 == d2:
			return self.height - other.height
		return d1 - d2

rects = []
for i in range(200):
	for j in range(200):
		rects.append(IntegralRect(i + 1, j + 1))

rects.sort()

while True:
	h, w = map(int, raw_input().split())
	if h == 0 and w == 0:
		break
	tmpRect = IntegralRect(h, w)
	diag = tmpRect.diagonal()
	for rect in rects:
		if rect > tmpRect:
			print rect.height, rect.width
			break"
StarCoder,codenet,Java,Python,s780604068.py,"import sys

N = int(raw_input().strip())

map = [int(raw_input().strip()) for _ in range(N * 2)]

map.sort()

max = 0
for i in range(0, N * 2, 2):
    max += min(map[i], map[i + 1])

print max","import sys

N = int(input().strip())

maps = list(map(int, input().split()))

maps.sort()

max_val = 0
for i in range(0, N * 2, 2):
    max_val += min(maps[i], maps[i + 1])

print(max_val)"
StarCoder,codenet,Java,Python,s314813282.py,"import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner scan = new Scanner(System.in);
        int m = scan.nextInt();
        int n = scan.nextInt();
        int x = scan.nextInt();
        int y = scan.nextInt();
        int[] a = new int[m];
        for(int i=0;i<a.length;i++)
        {
            a[i] = scan.nextInt();
        }
        int[] b = new int[n];
        for(int i=0;i<b.length;i++)
        {
            b[i] = scan.nextInt();
        }
        int x_max = MaxInt(x,a);
        int y_min = MinInt(y,b);
        CheckWar(x_max,y_min);
    }
    
    static int MaxInt(int x,int[] a){
        int bignum=x;
        for(int i=0;i<a.length;i++)
        {
            bignum=max(bignum,a[i]);
        }
        return bignum;
    }
    
    static int MinInt(int y,int[] b){
        int smallnum=y;
        for(int i=0;i<b.length;i++)
        {
            smallnum=min(smallnum,b[i]);
        }
        return smallnum;
    }
    
    static void CheckWar(int a,int b){
        if(a>=b)
        {
            System.out.println(""War"");
        }
        else
        {
            System.out.println(""No War"");
        }
    }
}","import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner scan = new Scanner(System.in);
        int m = scan.nextInt();
        int n = scan.nextInt();
        int x = scan.nextInt();
        int y = scan.nextInt();
        int[] a = new int[m];
        for(int i=0;i<a.length;i++)
        {
            a[i] = scan.nextInt();
        }
        int[] b = new int[n];
        for(int i=0;i<b.length;i++)
        {
            b[i] = scan.nextInt();
        }
        int x_max = MaxInt(x,a);
        int y_min = MinInt(y,b);
        CheckWar(x_max,y_min);
    }
    
    static int MaxInt(int x,int[] a){
        int bignum=x;
        for(int i=0;i<a.length;i++)
        {
            bignum=max(bignum,a[i]);
        }
        return bignum;
    }
    
    static int MinInt(int y,int[] b){
        int smallnum=y;
        for(int i=0;i<b.length;i++)
        {
            smallnum=min(smallnum,b[i]);
        }
        return smallnum;
    }
    
    static void CheckWar(int a,int b){
        if(a>=b)
        {
            System.out.println(""War"");
        }
        else
        {
            System.out.println(""No War"");
        }
    }
}"
StarCoder,codenet,Java,Python,s321216487.py,"import sys

S = raw_input()

for i in range(len(S)):
    for j in range(len(S)):
        if S[:i]+S[j:] == ""keyence"":
            print ""YES""
            sys.exit()
print ""NO""","import sys

S = input()

for i in range(len(S)):
    for j in range(len(S)):
        if S[:i]+S[j:] == ""keyence"":
            print(""YES"")
            sys.exit()
print(""NO"")"
StarCoder,codenet,Java,Python,s416486483.py,"import sys

def split(n, k):
    sum = 0
    while n > 0:
        sum += n % k
        n /= k
    return sum

def solve(n, s):
    k = 2
    while k*k <= n or k < 100:
        if split(n, k) == s:
            return k
        k += 1
    while k <= n:
        a = n / k
        b = n % k
        if (a + b - s) % a == 0:
            dk = (a + b - s) / a
            if dk >= 0 and b - dk*a >= 0:
                return k + dk
        k = n / a + 1
    if n == s:
        return n+1
    return -1

if __name__ == '__main__':
    nl = long(sys.stdin.readline())
    sl = long(sys.stdin.readline())
    print solve(nl, sl)","import sys

def split(n, k):
    sum = 0
    while n > 0:
        sum += n % k
        n //= k
    return sum

def solve(n, s):
    k = 2
    while k*k <= n or k < 100:
        if split(n, k) == s:
            return k
        k += 1
    while k <= n:
        a = n // k
        b = n % k
        if (a + b - s) % a == 0:
            dk = (a + b - s) // a
            if dk >= 0 and b - dk*a >= 0:
                return k + dk
        k = n // a + 1
    if n == s:
        return n+1
    return -1

if __name__ == '__main__':
    nl = int(sys.stdin.readline())
    sl = int(sys.stdin.readline())
    print(solve(nl, sl))"
StarCoder,codenet,Java,Python,s059841225.py,"import sys
while True:
    try:
        str = raw_input()
        strArr = str.split("","")
        l = [int(x) for x in strArr]
        d = sum(l)
        v = [int(x) for x in strArr[10:12]]
        t = float(d)/(v[0] + v[1])
        d = 0
        for i in range(11):
            if v[0]*t <= d:
                print i
                break
            else:
                d += l[i]
    except EOFError:
        break","import sys
while True:
    try:
        str = input()
        strArr = str.split("","")
        l = [int(x) for x in strArr[:10]]
        d = sum(l)
        v = [int(x) for x in strArr[10:12]]
        t = float(d)/(v[0] + v[1])
        d = 0
        for i in range(11):
            if v[0]*t <= d:
                print(i)
                break
            else:
                d += l[i]
    except EOFError:
        break"
StarCoder,codenet,Java,Python,s584572995.py,"import sys
from math import *
mod = 1000000007

def modpow(x, y):
    if y==0: return 1
    if y%2!=0: return x * modpow(x, y-1) % mod
    tmp = modpow(x, y/2)
    return tmp * tmp % mod

def main():
    N = int(sys.stdin.readline())
    to = [[] for i in range(N)]
    dp = [0 for i in range(N)]
    edges = []
    for i in range(N-1):
        A, B = map(int, sys.stdin.readline().split())
        to[A-1].append(B-1)
        to[B-1].append(A-1)
        edges.append([B-1, A-1])
    rec(0, -1)
    mulsum = 0
    for e in edges:
        candidate1 = e[0]
        candidate2 = e[1]
        child = candidate1
        if(dp[candidate1]>dp[candidate2]):child = candidate2
        a = dp[child]
        b = N - a
        mul = (modpow(2, a) - 1)*(modpow(2, b) - 1)%mod
        mulsum += mul
        mulsum %= mod
    cases = modpow(2, N)
    PN = (mulsum + (cases - 1 + mod)%mod)%mod
    BN = N * modpow(2, N-1) %mod
    WN = (PN - BN + mod)%mod
    ans = WN * modpow(cases, mod-2)
    ans %= mod
    print(ans)

def rec(v, parent):
    res = 1
    for next in to[v]:
        if(next == parent): continue
        res += rec(next, v)
    return dp[v] = res

main()","import sys
from math import *
mod = 1000000007
to = []

def modpow(x, y):
    if y==0: return 1
    if y%2!=0: return x * modpow(x, y-1) % mod
    tmp = modpow(x, y/2)
    return tmp * tmp % mod

def main():
    N = int(sys.stdin.readline())
    to = [[] for i in range(N)]
    dp = [0 for i in range(N)]
    edges = []
    for i in range(N-1):
        A, B = map(int, sys.stdin.readline().split())
        to[A-1].append(B-1)
        to[B-1].append(A-1)
        edges.append([B-1, A-1])
    rec(0, -1)
    mulsum = 0
    for e in edges:
        candidate1 = e[0]
        candidate2 = e[1]
        child = candidate1
        if(dp[candidate1]>dp[candidate2]):child = candidate2
        a = dp[child]
        b = N - a
        mul = (modpow(2, a) - 1)*(modpow(2, b) - 1)%mod
        mulsum += mul
        mulsum %= mod
    cases = modpow(2, N)
    PN = (mulsum + (cases - 1 + mod)%mod)%mod
    BN = N * modpow(2, N-1) %mod
    WN = (PN - BN + mod)%mod
    ans = WN * modpow(cases, mod-2)
    ans %= mod
    print(ans)

def rec(v, parent):
    res = 1
    for next in to[v]:
        if(next == parent): continue
        res += rec(next, v)
    dp[v] = res
    return res

main()"
StarCoder,codenet,Java,Python,s525447134.py,"s = raw_input()
if s == 'Sunny':
    print 'Cloudy'
elif s == 'Cloudy':
    print 'Rainy'
else:
    print 'Sunny'","s = input()
if s == 'Sunny':
    print('Cloudy')
elif s == 'Cloudy':
    print('Rainy')
else:
    print('Sunny')"
StarCoder,codenet,Java,Python,s918182055.py,"import sys
import heapq

class Main:

    def main(self):
        out = MyWriter(sys.stdout)
        sc = MyScanner(sys.stdin)
        N = sc.nextInt()
        M = sc.nextInt()
        list = [None] * 100001
        for i in range(N):
            a = sc.nextInt()
            b = sc.nextInt()
            if list[a] == None:
                list[a] = []
            list[a].append(b)
        res = 0
        pqueue = []
        for i in range(1, M + 1):
            if list[i]!= None:
                heapq.heapify(list[i])
            if len(pqueue) > 0:
                res += heapq.heappop(pqueue)
            if len(list[i]) > 0:
                heapq.heappush(pqueue, list[i].pop())
        out.","import sys
import heapq

class Main:

    def main(self):
        out = MyWriter(sys.stdout)
        sc = MyScanner(sys.stdin)
        N = sc.nextInt()
        M = sc.nextInt()
        list = [None] * 100001
        for i in range(N):
            a = sc.nextInt()
            b = sc.nextInt()
            if list[a] == None:
                list[a] = []
            list[a].append(b)
        res = 0
        pqueue = []
        for i in range(1, M + 1):
            if list[i]!= None:
                heapq.heapify(list[i])
            if len(pqueue) > 0:
                res += heapq.heappop(pqueue)
            if len(list[i]) > 0:
                heapq.heappush(pqueue, list[i].pop())
        out."
StarCoder,codenet,Java,Python,s383412435.py,"import sys

def main():
    N = int(raw_input().strip())
    a = [int(a_temp) for a_temp in raw_input().strip().split(' ')]
    a.sort()
    if N == 1 and a[0] > 1:
        ans = 1
    else:
        ans = 0
        for j in range(N):
            if j == 0 or a[j]!= a[j-1]:
                tmp = 1
                for i in range(j+1, N):
                    if a[j] == a[i]:
                        tmp += 1
                    else:
                        break
                if tmp > a[j]:
                    ans += tmp - a[j]
                elif tmp < a[j]:
                    ans += tmp
    print ans

if __name__ == ""__main__"":
    main()","import sys

def main():
    N = int(input().strip())
    a = [int(a_temp) for a_temp in input().strip().split()]
    a.sort()
    if N == 1 and a[0] > 1:
        ans = 1
    else:
        ans = 0
        for j in range(N):
            if j == 0 or a[j]!= a[j-1]:
                tmp = 1
                for i in range(j+1, N):
                    if a[j] == a[i]:
                        tmp += 1
                    else:
                        break
                if tmp > a[j]:
                    ans += tmp - a[j]
                elif tmp < a[j]:
                    ans += tmp
    print(ans)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s696692583.py,"import java.util.*;

public class Main {
	public static void main(String[] args) {
		new Main().run();
	}

	Scanner sc = new Scanner(System.in);
	public void run() {
		for (;sc.hasNext();) {
			int my1 = sc.nextInt();
			int my2 = sc.nextInt();
			int enemy1 = sc.nextInt();
			boolean[] used = new boolean[11];
			used[my1] = true;
			used[my2] = true;
			used[enemy1] = true;
			int all = 0;
			int safe = 0;
			for (int i = 1; i <= 10; i++) if (!used[i]) {
				all++;
				if (my1 + my2 + i <= 20) safe++;
			}
			if (safe * 2 >= all) {
				System.out.println(""YES"");
			} else {
				System.out.println(""NO"");
			}
		}
	}
	char solve(int[][] a) {
		char[] s = {'d', 'o', 'x'};
		for (int side = 1; side <= 2; side++) {
			for (int i = 0; i < 3; i++) {
				if (a[i][0] == side && a[i][1] == side && a[i][2] == side) return s[side];
				if (a[0][i] == side && a[1][i] == side && a[2][i] == side) return s[side];
			}
			if (a[0][0] == side && a[1][1] == side && a[2][2] == side) return s[side];
			if (a[0][2] == side && a[1][1] == side && a[2][0] == side) return s[side];
		}
		return 'd';
	}
}","import java.util.*;

public class Main {
	public static void main(String[] args) {
		new Main().run();
	}

	Scanner sc = new Scanner(System.in);
	public void run() {
		for (;sc.hasNext();) {
			int my1 = sc.nextInt();
			int my2 = sc.nextInt();
			int enemy1 = sc.nextInt();
			boolean[] used = new boolean[11];
			used[my1] = true;
			used[my2] = true;
			used[enemy1] = true;
			int all = 0;
			int safe = 0;
			for (int i = 1; i <= 10; i++) if (!used[i]) {
				all++;
				if (my1 + my2 + i <= 20) safe++;
			}
			if (safe * 2 >= all) {
				System.out.println(""YES"");
			} else {
				System.out.println(""NO"");
			}
		}
	}
	char solve(int[][] a) {
		char[] s = {'d', 'o', 'x'};
		for (int side = 1; side <= 2; side++) {
			for (int i = 0; i < 3; i++) {
				if (a[i][0] == side && a[i][1] == side && a[i][2] == side) return s[side];
				if (a[0][i] == side && a[1][i] == side && a[2][i] == side) return s[side];
			}
			if (a[0][0] == side && a[1][1] == side && a[2][2] == side) return s[side];
			if (a[0][2] == side && a[1][1] == side && a[2][0] == side) return s[side];
		}
		return 'd';
	}
}"
StarCoder,codenet,Java,Python,s449886393.py,"import java.util.*;
import static java.lang.System.*;
import java.math.*;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String[] youbi = {""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT""};
		String s = sc.next();
		int ans = 0;
		for(int i = 0; i < youbi.length; i++) {
			if (youbi[i].equals(s)) {
				ans = 7 - i;
			}
		}
		out.println(ans);
		
	}
}

Translate the above Python code to C.","import java.util.*;
import static java.lang.System.*;
import java.math.*;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String[] youbi = {""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT""};
		String s = sc.next();
		int ans = 0;
		for(int i = 0; i < youbi.length; i++) {
			if (youbi[i].equals(s)) {
				ans = 7 - i;
			}
		}
		out.println(ans);
		
	}
}

Translate the above Python code to C."
StarCoder,codenet,Java,Python,s916993080.py,"import sys

n = int(raw_input().strip())
arr = []
for a0 in xrange(n):
    arr.append(map(int,raw_input().strip().split(' ')))
dp = [[0 for x in range(3)] for y in range(n)]
dp[0][0] = arr[0][0]
dp[0][1] = arr[0][1]
dp[0][2] = arr[0][2]
for i in range(1,n):
    for j in range(3):
        if j == 0:
            dp[i][j] = max(arr[i][0] + dp[i-1][1], arr[i][0] + dp[i-1][2])
        elif j == 1:
            dp[i][j] = max(arr[i][1] + dp[i-1][0], arr[i][1] + dp[i-1][2])
        elif j == 2:
            dp[i][j] = max(arr[i][2] + dp[i-1][1], arr[i][2] + dp[i-1][0])
print max(dp[n-1])","import sys

n = int(input().strip())
arr = []
for a0 in range(n):
    arr.append(list(map(int,input().strip().split())))
dp = [[0 for x in range(3)] for y in range(n)]
dp[0][0] = arr[0][0]
dp[0][1] = arr[0][1]
dp[0][2] = arr[0][2]
for i in range(1,n):
    for j in range(3):
        if j == 0:
            dp[i][j] = max(arr[i][0] + dp[i-1][1], arr[i][0] + dp[i-1][2])
        elif j == 1:
            dp[i][j] = max(arr[i][1] + dp[i-1][0], arr[i][1] + dp[i-1][2])
        elif j == 2:
            dp[i][j] = max(arr[i][2] + dp[i-1][1], arr[i][2] + dp[i-1][0])
print(max(dp[n-1]))"
StarCoder,codenet,Java,Python,s466963472.py,"import sys

def read():
	if not sys.stdin.readline():
		return False
	return True

def solve():
	ans = 0
	for i in range(1, 600 / d + 1):
		x = i * d
		y = x * x
		ans += y * d
	return ans

while read():
	print solve()","def read():
    global d
    d = input()
    if not d:
        return False
    d = int(d)
    return True

def solve():
	ans = 0
	for i in range(1, 600 // d):
		x = i * d
		y = x * x
		ans += y * d
	return ans

while read():
	print(solve())"
StarCoder,codenet,Java,Python,s596918302.py,"import sys

def min(arr, n):
    if n == 1:
        return 0
    if n == 2:
        return abs(arr[n-1] - arr[n-2])
    op1 = abs(arr[n-1] - arr[n-2]) + min(arr, n-1)
    op2 = abs(arr[n-1] - arr[n-3]) + min(arr, n-2)
    res = min(op1, op2)
    return res

def dpc(arr, i, n, row):
    if row == n:
        return 0
    j = 0
    k = 0
    if i == 1:
        j = 0
        k = 2
    elif i == 0:
        j = 1
        k = 2
    else:
        j = 0
        k = 1
    return arr[row][i] + max(dpc(arr, j, n, row+1), dpc(arr, k, n, row+1))

def dpx(arr, n):
    dp = [[0 for i in range(3)] for j in range(n)]
    dp[0][0] = arr[0][0]
    dp[0][1] = arr[0][1]
    dp[0][2] = arr[0][2]
    for i in range(1, n):
        for in in range(3):
            j = 0
            k = 0
            if in == 1:
                j = 0
                k = 2
            elif in == 0:
                j = 1
                k = 2
            else:
                j = 0
                k = 1
            dp[i][in] = max(dp[i-1][k], dp[i-1][j]) + arr[i][in]
    return max(dp[n-1][0], max(dp[n-1][1], dp[n-1][2]))

n = int(sys.stdin.readline())
arr = []
for i in range(n):
    arr.append(list(map(int, sys.stdin.readline().split())))

print(dpx(arr, n))","import sys

def min(arr, n):
    if n == 1:
        return 0
    if n == 2:
        return abs(arr[n-1] - arr[n-2])
    op1 = abs(arr[n-1] - arr[n-2]) + min(arr, n-1)
    op2 = abs(arr[n-1] - arr[n-3]) + min(arr, n-2)
    res = min(op1, op2)
    return res

def dpc(arr, i, n, row):
    if row == n:
        return 0
    j = 0
    k = 0
    if i == 1:
        j = 0
        k = 2
    elif i == 0:
        j = 1
        k = 2
    else:
        j = 0
        k = 1
    return arr[row][i] + max(dpc(arr, j, n, row+1), dpc(arr, k, n, row+1))

def dpx(arr, n):
    dp = [[0 for i in range(3)] for j in range(n)]
    dp[0][0] = arr[0][0]
    dp[0][1] = arr[0][1]
    dp[0][2] = arr[0][2]
    for i in range(1, n):
        for in_ in range(3):
            j = 0
            k = 0
            if in_ == 1:
                j = 0
                k = 2
            elif in_ == 0:
                j = 1
                k = 2
            else:
                j = 0
                k = 1
            dp[i][in_] = max(dp[i-1][k], dp[i-1][j]) + arr[i][in_]
    return max(dp[n-1][0], max(dp[n-1][1], dp[n-1][2]))

n = int(sys.stdin.readline())
arr = []
for i in range(n):
    arr.append(list(map(int, sys.stdin.readline().split())))

print(dpx(arr, n))"
StarCoder,codenet,Java,Python,s498914558.py,"import sys
n,m=map(int,raw_input().split())
po=map(int,raw_input().split())
po.sort()
print n+m/po[0]","import sys
n,m=map(int,input().split())
po = []
for _ in range(n):
    po.append(int(input()))
m -= sum(po)
po.sort()
print(n+m//po[0])"
StarCoder,codenet,Java,Python,s880132387.py,"import java.math.BigInteger;
import java.util.*;
import static java.lang.System.*;

class Main {
	public static Scanner sc = new Scanner(in);
	public static Random rand=new Random();

	public void run() {
		TCase:while(true){
			int W=sc.nextInt(),H=sc.nextInt();
			if(W==0 && H==0)return;
			char[][] map=new char[H][W];

			for(int h=0;h<H;h++){
				map[h]=sc.next().toCharArray();
			}

			BigInteger[][] dp=new BigInteger[H][W];

			for(int h=0;h<H;h++)for(int w=0;w<W;w++){
				BigInteger hprev=BigInteger.ZERO;
				if(h>=1){
					hprev=dp[h-1][w];
				}
				BigInteger wprev=BigInteger.ZERO;
				if(w>=1){
					wprev=dp[h][w-1];
				}
				if(Character.isDigit(map[h][w])){
					BigInteger max;
					if(hprev.compareTo(wprev)>0){
						max=hprev;
					}else{
						max=wprev;
					}
					dp[h][w]=max.multiply(BigInteger.TEN).add(new BigInteger(map[h][w]+""""));
				}else{
					dp[h][w]=BigInteger.ZERO;
				}
			}
			BigInteger max=BigInteger.ZERO;
			for(int h=0;h<H;h++)for(int w=0;w<W;w++){
				if(dp[h][w].compareTo(max)>0)max=dp[h][w];
			}
			ln(max);
		}
	}
	public static void main(String[] args) {
		new Main().run();
	}

	public int[] nextIntArray(int n){
		int[] res=new int[n];
		for(int i=0;i<n;i++){
			res[i]=sc.nextInt();
		}
		return res;
	}
	public static void pr(Object o) {
		out.print(o);
	}
	public static void ln(Object o) {
		out.println(o);
	}
	public static void ln() {
		out.println();
	}
}","import java.math.BigInteger;
import java.util.*;
import static java.lang.System.*;

class Main {
	public static Scanner sc = new Scanner(in);
	public static Random rand=new Random();

	public void run() {
		TCase:while(true){
			int W=sc.nextInt(),H=sc.nextInt();
			if(W==0 && H==0)return;
			char[][] map=new char[H][W];

			for(int h=0;h<H;h++){
				map[h]=sc.next().toCharArray();
			}

			BigInteger[][] dp=new BigInteger[H][W];

			for(int h=0;h<H;h++)for(int w=0;w<W;w++){
				BigInteger hprev=BigInteger.ZERO;
				if(h>=1){
					hprev=dp[h-1][w];
				}
				BigInteger wprev=BigInteger.ZERO;
				if(w>=1){
					wprev=dp[h][w-1];
				}
				if(Character.isDigit(map[h][w])){
					BigInteger max;
					if(hprev.compareTo(wprev)>0){
						max=hprev;
					}else{
						max=wprev;
					}
					dp[h][w]=max.multiply(BigInteger.TEN).add(new BigInteger(map[h][w]+""""));
				}else{
					dp[h][w]=BigInteger.ZERO;
				}
			}
			BigInteger max=BigInteger.ZERO;
			for(int h=0;h<H;h++)for(int w=0;w<W;w++){
				if(dp[h][w].compareTo(max)>0)max=dp[h][w];
			}
			ln(max);
		}
	}
	public static void main(String[] args) {
		new Main().run();
	}

	public int[] nextIntArray(int n){
		int[] res=new int[n];
		for(int i=0;i<n;i++){
			res[i]=sc.nextInt();
		}
		return res;
	}
	public static void pr(Object o) {
		out.print(o);
	}
	public static void ln(Object o) {
		out.println(o);
	}
	public static void ln() {
		out.println();
	}
}"
StarCoder,codenet,Java,Python,s518927375.py,"import sys

def main():
    k = int(raw_input().strip())
    a = int(raw_input().strip())
    b = int(raw_input().strip())

    if b <= a + 2:
        print 1 + k
        return

    x = k - (a - 1)
    ans = a + (x / 2) * (b - a) + (x % 2)

    print ans

if __name__ == ""__main__"":
    main()","import sys

def main():
    k, a, b = map(int, input().split())

    if b <= a + 2:
        print(1 + k)
        return

    x = k - (a - 1)
    ans = a + (x // 2) * (b - a) + (x % 2)

    print(ans)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s701317277.py,"import sys

def main():
    N = int(raw_input())
    A = [int(x) for x in raw_input().split()]
    count = 0
    sum = 0
    min = A[0]
    for i in A:
        if i < 0:
            count += 1
        min = min if min < abs(i) else abs(i)
        sum += abs(i)
    if count % 2 == 0:
        print sum
    else:
        print sum - min * 2

if __name__ == ""__main__"":
    main()","import sys

def main():
    N = int(input())
    A = [int(x) for x in input().split()]
    count = 0
    sum = 0
    min = A[0]
    for i in A:
        if i < 0:
            count += 1
        min = min if min < abs(i) else abs(i)
        sum += abs(i)
    if count % 2 == 0:
        print(sum)
    else:
        print(sum - min * 2)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s302365683.py,"import java.util.*;
import java.io.*;




public class Main 
{
	
	public static void main(String[] args) throws IOException 
	{ 
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		StringTokenizer s = new StringTokenizer(br.readLine());
		
		int n=Integer.parseInt(s.nextToken());
		HashMap<Integer,Integer>hm=new HashMap<>();
		s = new StringTokenizer(br.readLine());
		for(int i=0;i<n;i++) {
			int val=Integer.parseInt(s.nextToken());
			hm.put(val, hm.getOrDefault(val, 0)+1);
		}
		int ans=0;
		for(int val:hm.keySet()) {
			int num=hm.get(val);
			if(num>val)
				ans+=num-val;
			else if(num<val)
				ans+=num;
		}
		pw.println(ans);
		pw.close();
		

	}
}","import java.util.*;
import java.io.*;




public class Main 
{
	
	public static void main(String[] args) throws IOException 
	{ 
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		StringTokenizer s = new StringTokenizer(br.readLine());
		
		int n=Integer.parseInt(s.nextToken());
		HashMap<Integer,Integer>hm=new HashMap<>();
		s = new StringTokenizer(br.readLine());
		for(int i=0;i<n;i++) {
			int val=Integer.parseInt(s.nextToken());
			hm.put(val, hm.getOrDefault(val, 0)+1);
		}
		int ans=0;
		for(int val:hm.keySet()) {
			int num=hm.get(val);
			if(num>val)
				ans+=num-val;
			else if(num<val)
				ans+=num;
		}
		pw.println(ans);
		pw.close();
		

	}
}"
StarCoder,codenet,Java,Python,s500433274.py,"import sys
import math

def main():
    while True:
        a, b = raw_input().split()
        a = int(a)
        b = int(b)
        if a == 0 and b == 0:
            break
        if a > b:
            print ""GREATER""
        elif a < b:
            print ""LESS""
        else:
            print ""EQUAL""

if __name__ == ""__main__"":
    main()","import sys
import math

def main():
    while True:
        a, b = input(), input()
        a = int(a)
        b = int(b)
        if a == 0 and b == 0:
            break
        if a > b:
            print(""GREATER"")
        elif a < b:
            print(""LESS"")
        else:
            print(""EQUAL"")

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s163827828.py,"import sys

def main():
    N = int(raw_input().strip())
    s = []
    a_num = 0
    b_num = 0
    flag = True
    ans = 0
    for i in xrange(N):
        s.append(raw_input().strip())
        if s[i][0] == 'B':
            b_num += 1
        if s[i][-1] == 'A':
            a_num += 1
        if s[i][0] == 'B' or s[i][-1] == 'A':
            if not (s[i][0] == 'B' and s[i][-1] == 'A'):
                flag = False
        for j in xrange(len(s[i]) - 1):
            if s[i][j:j+2] == 'AB':
                ans += 1
    ans += min(a_num, b_num)
    if min(a_num, b_num)!= 0 and flag:
        ans -= 1
    print ans

if __name__ == ""__main__"":
    main()","import sys

def main():
    N = int(input().strip())
    s = []
    a_num = 0
    b_num = 0
    flag = True
    ans = 0
    for i in range(N):
        s.append(input().strip())
        if s[i][0] == 'B':
            b_num += 1
        if s[i][-1] == 'A':
            a_num += 1
        if s[i][0] == 'B' or s[i][-1] == 'A':
            if not (s[i][0] == 'B' and s[i][-1] == 'A'):
                flag = False
        for j in range(len(s[i]) - 1):
            if s[i][j:j+2] == 'AB':
                ans += 1
    ans += min(a_num, b_num)
    if min(a_num, b_num)!= 0 and flag:
        ans -= 1
    print(ans)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s745776078.py,"import sys

n,m=map(int,raw_input().split())
A=[]
b=map(int,raw_input().split())
for i in range(n):
	A.append(map(int,raw_input().split()))

for i in range(n):
	c=0
	for j in range(m):
		c+=A[i][j]*b[j]
	print c","import sys

n,m=map(int,input().split())
A=[]
for i in range(n):
	A.append(list(map(int,input().split())))
b=[]
for i in range(m):
    b.append(int(input()))
for i in range(n):
	c=0
	for j in range(m):
		c+=A[i][j]*b[j]
	print(c)"
StarCoder,codenet,Java,Python,s022285498.py,"import java.io.*;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

    static class Task {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] countArr = new int[n + 1];
            for (int x = 1; x <= 100; x++) {
                for (int y = 1; y <= 100; y++) {
                    for (int z = 1; z <= 100; z++) {
                        int value = x * x + y * y + z * z + x * y + x * z + y * z;
                        if (value > n) {
                            break;
                        }
                        countArr[value]++;
                    }
                }
            }

            for (int i = 1; i <= n; i++) {
                out.println(countArr[i]);
            }
        }
    }

    private static void sort(double[] arr) {
        Double[] objArr = Arrays.stream(arr).boxed().toArray(Double[]::new);
        Arrays.sort(objArr);
        for (int i = 0; i < arr.length; i++) {
            arr[i] = objArr[i];
        }
    }

    private static void sort(int[] arr) {
        Integer[] objArr = Arrays.stream(arr).boxed().toArray(Integer[]::new);
        Arrays.sort(objArr);
        for (int i = 0; i < arr.length; i++) {
            arr[i] = objArr[i];
        }
    }

    private static void sort(long[] arr) {
        Long[] objArr = Arrays.stream(arr).boxed().toArray(Long[]::new);
        Arrays.sort(objArr);
        for (int i = 0; i < arr.length; i++) {
            arr[i] = objArr[i];
        }
    }

    private static void solve() {","import java.io.*;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

    static class Task {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] countArr = new int[n + 1];
            for (int x = 1; x <= 100; x++) {
                for (int y = 1; y <= 100; y++) {
                    for (int z = 1; z <= 100; z++) {
                        int value = x * x + y * y + z * z + x * y + x * z + y * z;
                        if (value > n) {
                            break;
                        }
                        countArr[value]++;
                    }
                }
            }

            for (int i = 1; i <= n; i++) {
                out.println(countArr[i]);
            }
        }
    }

    private static void sort(double[] arr) {
        Double[] objArr = Arrays.stream(arr).boxed().toArray(Double[]::new);
        Arrays.sort(objArr);
        for (int i = 0; i < arr.length; i++) {
            arr[i] = objArr[i];
        }
    }

    private static void sort(int[] arr) {
        Integer[] objArr = Arrays.stream(arr).boxed().toArray(Integer[]::new);
        Arrays.sort(objArr);
        for (int i = 0; i < arr.length; i++) {
            arr[i] = objArr[i];
        }
    }

    private static void sort(long[] arr) {
        Long[] objArr = Arrays.stream(arr).boxed().toArray(Long[]::new);
        Arrays.sort(objArr);
        for (int i = 0; i < arr.length; i++) {
            arr[i] = objArr[i];
        }
    }

    private static void solve() {"
StarCoder,codenet,Java,Python,s022525398.py,"a=input()
b=input()
print(b+a)","a, b = input().split()
print(b+a)"
StarCoder,codenet,Java,Python,s682242794.py,"import sys

for i in range(7):
    high = int(sys.stdin.readline())
    low = int(sys.stdin.readline())
    sa = high - low
    print(sa)","import sys

for i in range(7):
    high, low = map(int, sys.stdin.readline().split())
    sa = high - low
    print(sa)"
StarCoder,codenet,Java,Python,s458826999.py,"import sys
MOD = 1000000007
dp = [[0 for i in range(13)] for j in range(10001)]
dp[0][0] = 1
for i in range(len(sys.stdin.readline().strip())):
    if sys.stdin.readline().strip()[i] == '?':
        for j in range(10):
            for k in range(13):
                dp[i + 1][(k * 10 + j) % 13] += dp[i][k]
                dp[i + 1][(k * 10 + j) % 13] %= MOD
    else:
        for k in range(13):
            x = int(sys.stdin.readline().strip()[i])
            dp[i + 1][(k * 10 + x) % 13] += dp[i][k]
            dp[i + 1][(k * 10 + x) % 13] %= MOD
print(dp[len(sys.stdin.readline().strip())][5])","import sys
MOD = 1000000007
S = sys.stdin.readline().strip()
dp = [[0 for i in range(13)] for j in range(len(S) + 1)]
dp[0][0] = 1
for i in range(len(S)):
    if S[i] == '?':
        for j in range(10):
            for k in range(13):
                dp[i + 1][(k * 10 + j) % 13] += dp[i][k]
                dp[i + 1][(k * 10 + j) % 13] %= MOD
    else:
        for k in range(13):
            x = int(S[i])
            dp[i + 1][(k * 10 + x) % 13] += dp[i][k]
            dp[i + 1][(k * 10 + x) % 13] %= MOD
print(dp[len(S)][5])"
StarCoder,codenet,Java,Python,s826491904.py,"import sys

class Main:
    #-------------------------------------------------------------#
    def __init__(self):
        self.sc = sys.stdin
    #-------------------------------------------------------------#
    def solve(self):
        N = int(self.sc.readline())
        max, min = int(self.sc.readline()), int(self.sc.readline())
        for i in range(1, N):
            in_ = int(self.sc.readline())
            max = max if max > in_ else in_
            min = min if min < in_ else in_
        print(max - min)

if __name__ == ""__main__"":
    Main().solve()","import sys

class Main:
    #-------------------------------------------------------------#
    def __init__(self):
        self.sc = sys.stdin
    #-------------------------------------------------------------#
    def solve(self):
        N = int(self.sc.readline())
        inputs = list(self.sc.readline().split())
        max, min = int(inputs[0]), int(inputs[0])
        for i in range(1, N):
            in_ = int(inputs[i])
            max = max if max > in_ else in_
            min = min if min < in_ else in_
        print(max - min)

if __name__ == ""__main__"":
    Main().solve()"
StarCoder,codenet,Java,Python,s332475184.py,"import sys

class Main:
    def __init__(self):
        self.graph = []
        self.counter = []

    def dfs(self,v,par,val):
        for i in self.graph[v]:
            if i!=par:
                self.dfs(i,v,val+self.counter[v])
        self.counter[v]+=val

    def main(self):
        n = int(sys.stdin.readline())
        q = int(sys.stdin.readline())
        for i in range(n):
            self.graph.append([])
            self.counter.append(0)
        for i in range(n-1):
            a,b = map(int,sys.stdin.readline().split())
            self.graph[a-1].append(b-1)
            self.graph[b-1].append(a-1)
        for i in range(q):
            a,b = map(int,sys.stdin.readline().split())
            self.counter[a-1]+=b
        self.dfs(0,-1,0)
        print("" "".join(map(str,self.counter)))

if __name__ == ""__main__"":
    obj = Main()
    obj.main()","import sys

class Main:
    def __init__(self):
        self.graph = []
        self.counter = []

    def dfs(self,v,par,val):
        for i in self.graph[v]:
            if i!=par:
                self.dfs(i,v,val+self.counter[v])
        self.counter[v]+=val

    def main(self):
        n, q = map(int, sys.stdin.readline().split())
        for i in range(n):
            self.graph.append([])
            self.counter.append(0)
        for i in range(n-1):
            a,b = map(int,sys.stdin.readline().split())
            self.graph[a-1].append(b-1)
            self.graph[b-1].append(a-1)
        for i in range(q):
            a,b = map(int,sys.stdin.readline().split())
            self.counter[a-1]+=b
        self.dfs(0,-1,0)
        print("" "".join(map(str,self.counter)))

if __name__ == ""__main__"":
    obj = Main()
    obj.main()"
StarCoder,codenet,Java,Python,s798589501.py,"import sys

E = int(input())
Y = int(input())

if E == 0:
    if Y <= 1911:
        print(""M"", Y - 1867)
    elif Y <= 1925:
        print(""T"", Y - 1911)
    elif Y <= 1988:
        print(""S"", Y - 1925)
    else:
        print(""H"", Y - 1988)
elif E == 1:
    print(1867 + Y)
elif E == 2:
    print(1911 + Y)
elif E == 3:
    print(1925 + Y)
else:
    print(1988 + Y)","import sys

E, Y = map(int, input().split())

if E == 0:
    if Y <= 1911:
        print(f""M{Y - 1867}"")
    elif Y <= 1925:
        print(f""T{Y - 1911}"")
    elif Y <= 1988:
        print(f""S{Y - 1925}"")
    else:
        print(f""H{Y - 1988}"")
elif E == 1:
    print(1867 + Y)
elif E == 2:
    print(1911 + Y)
elif E == 3:
    print(1925 + Y)
else:
    print(1988 + Y)"
StarCoder,codenet,Java,Python,s699933302.py,"a = int(input())
b = int(input())
c = int(input())
count = 0
for i in range(a,b+1):
	if c%i == 0:
		count += 1
print(count)","a, b, c = map(int, input().split())
count = 0
for i in range(a,b+1):
	if c%i == 0:
		count += 1
print(count)"
StarCoder,codenet,Java,Python,s012761786.py,"import sys

#update 2019/12/13

def main():
    n = int(input())
    a = int(input())
    b = int(input())

    sa = abs(a-b)

    ans = 0

    if sa%2==0:
        ans = sa/2
    else:
        AAA = min((n-a),(a-1))
        BBB = min((n-b),(b-1))

        ans = min(AAA,BBB) #片方が端っこに来るまで。

        #差を1減らす⇒差が偶数になる
        sa -= 1
        ans += 1

        #差は偶数
        ans += sa/2

    print(ans)

if __name__ == '__main__':
    main()","import sys

#update 2019/12/13

def main():
    n, a, b = map(int, input().split())

    sa = abs(a-b)

    ans = 0

    if sa%2==0:
        ans = sa//2
    else:
        AAA = min((n-a),(a-1))
        BBB = min((n-b),(b-1))

        ans = min(AAA,BBB) #片方が端っこに来るまで。

        #差を1減らす⇒差が偶数になる
        sa -= 1
        ans += 1

        #差は偶数
        ans += sa//2

    print(ans)

if __name__ == '__main__':
    main()"
StarCoder,codenet,Java,Python,s799557290.py,"import sys

def main():
    a = int(sys.stdin.readline())
    b = int(sys.stdin.readline())
    ju = [False for i in range(100001)]
    pe = [0 for i in range(100001)]
    wa = 0
    ac = 0

    for i in range(b):
        n = int(sys.stdin.readline())
        res = sys.stdin.readline().strip()

        if res == ""WA"" and ju[n-1]!= True:
            pe[n-1] += 1

        if res == ""AC"":
            ju[n-1] = True

    for i in range(a):
        if ju[i]:
            ac += 1
            wa += pe[i]

    print(ac, wa)

if __name__ == ""__main__"":
    main()","import sys

def main():
    a, b = map(int, sys.stdin.readline().split())
    ju = [False for i in range(100001)]
    pe = [0 for i in range(100001)]
    wa = 0
    ac = 0

    for i in range(b):
        n, res = sys.stdin.readline().split()
        n = int(n)

        if res == ""WA"" and ju[n-1]!= True:
            pe[n-1] += 1

        if res == ""AC"":
            ju[n-1] = True

    for i in range(a):
        if ju[i]:
            ac += 1
            wa += pe[i]

    print(ac, wa)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s295587559.py,"import re

def main():
    num = [i for i in range(1, int(input()) + 1)]
    count = int(input())
    for i in range(count):
        line = re.findall(r'\d+', input())
        num[line[0] - 1], num[line[1] - 1] = num[line[1] - 1], num[line[0] - 1]
    for i in num:
        print(i)

if __name__ == '__main__':
    main()","import re

def main():
    num = [i for i in range(1, int(input()) + 1)]
    count = int(input())
    for i in range(count):
        line = re.findall(r'\d+', input())
        num[int(line[0]) - 1], num[int(line[1]) - 1] = num[int(line[1]) - 1], num[int(line[0]) - 1]
    for i in num:
        print(i)

if __name__ == '__main__':
    main()"
StarCoder,codenet,Java,Python,s580342216.py,"#--- pB ---#
import sys

class Solution:
    def __init__(self):
        self.scanner = sys.stdin
        self.caseNum = 0

    def run_case(self):
        # self.scanner.readline()
        line = self.scanner.readline()
        N = int(line.split("" "")[0])
        K = int(line.split("" "")[1])

        len = 0
        while N > 0:
            N /= K
            len += 1

        print(len)
        return

    def __init__(self):
        self.scanner = sys.stdin
        self.caseNum = 0

    def run_case(self):
        # self.scanner.readline()
        line = self.scanner.readline()
        N = int(line.split("" "")[0])
        K = int(line.split("" "")[1])

        len = 0
        while N > 0:
            N /= K
            len += 1

        print(len)
        return

if __name__ == ""__main__"":
    solution = Solution()
    solution.run_case()

class LCS:
    def __init__(self):
        self.dp = None

    def lcs(self, A, B):
        sz_a = len(A)
        sz_b = len(B)
        self.dp = [[0 for j in range(sz_b+1)] for i in range(sz_a+1)]

        for i in range(sz_a+1): self.dp[i][0] = 0
        for j in range(sz_b+1): self.dp[0][j] = 0

        for i in range(1, sz_a+1):
            for j in range(1, sz_b+1):
                if A[i-1] == B[j-1]:
                    self.dp[i][j] = self.dp[i-1][j-1] + 1
                else:
                    self.dp[i][j] = max(self.dp[i-1][j], self.dp[i][j-1])

        return self.dp[sz_a][sz_b]

    def getLCS(self, X, Y):
        m = len(X)
        n = len(Y)
        # Following code is used to print LCS
        index = self.dp[m][n]
        temp = index

        # Create a character array to store the lcs string
        lcs = ['\0'] * (index+1)

        # Start from the right-most-bottom-most corner and
        # one by one store characters in lcs[]
        i = m
        j = n
        while i > 0 and j > 0:
            # If current character in X[] and Y are same, then
            # current character is part of LCS
            if X[i-1] == Y[j-1]:
                # Put current character in result
                lcs[index-1] = X[i-1]

                # reduce values of i, j and index
                i -= 1
                j -= 1
                index -= 1
            # If not same, then find the larger of two and
            # go in the direction of larger value
            else:
                if self.dp[i-1][j] > self.dp[i][j-1]:
                    i -= 1
                else:
                    j -= 1

        # Print the lcs
        # print(""LCS of ""+X+"" and ""+Y+"" is "")
        # for k in range(temp):
        #     print(lcs[k], end="""")
        # print()

        return ''.join(lcs).strip('\0')

if __name__ == ""__main__"":
    solution = Solution()
    solution.run_case()","#--- pB ---#
import sys

class Solution:
    def __init__(self):
        self.scanner = sys.stdin
        self.caseNum = 0

    def run_case(self):
        # self.scanner.readline()
        line = self.scanner.readline()
        N = int(line.split()[0])
        K = int(line.split()[1])

        len = 0
        while N > 0:
            N /= K
            len += 1

        print(len)
        return

class LCS:
    def __init__(self):
        self.dp = None

    def lcs(self, A, B):
        sz_a = len(A)
        sz_b = len(B)
        self.dp = [[0 for j in range(sz_b+1)] for i in range(sz_a+1)]

        for i in range(sz_a+1): self.dp[i][0] = 0
        for j in range(sz_b+1): self.dp[0][j] = 0

        for i in range(1, sz_a+1):
            for j in range(1, sz_b+1):
                if A[i-1] == B[j-1]:
                    self.dp[i][j] = self.dp[i-1][j-1] + 1
                else:
                    self.dp[i][j] = max(self.dp[i-1][j], self.dp[i][j-1])

        return self.dp[sz_a][sz_b]

    def getLCS(self, X, Y):
        m = len(X)
        n = len(Y)
        # Following code is used to print LCS
        index = self.dp[m][n]
        temp = index

        # Create a character array to store the lcs string
        lcs = ['\0'] * (index+1)

        # Start from the right-most-bottom-most corner and
        # one by one store characters in lcs[]
        i = m
        j = n
        while i > 0 and j > 0:
            # If current character in X[] and Y are same, then
            # current character is part of LCS
            if X[i-1] == Y[j-1]:
                # Put current character in result
                lcs[index-1] = X[i-1]

                # reduce values of i, j and index
                i -= 1
                j -= 1
                index -= 1
            # If not same, then find the larger of two and
            # go in the direction of larger value
            else:
                if self.dp[i-1][j] > self.dp[i][j-1]:
                    i -= 1
                else:
                    j -= 1

        # Print the lcs
        # print(""LCS of ""+X+"" and ""+Y+"" is "")
        # for k in range(temp):
        #     print(lcs[k], end="""")
        # print()

        return ''.join(lcs).strip('\0')

if __name__ == ""__main__"":
    solution = Solution()
    solution.run_case()"
StarCoder,codenet,Java,Python,s047401835.py,"import sys

N = int(input())
numbers = []

for i in range(N):
    numbers.append(int(input()))

count = 0

while True:
    numbers = list(filter(lambda x: x % 2 == 0, numbers))
    numbers = list(map(lambda x: x / 2, numbers))
    if len(numbers) == N:
        count += 1
    else:
        break

print(count)","import sys

N = int(input())
numbers = list(map(int, input().split()))

count = 0

while True:
    numbers = list(filter(lambda x: x % 2 == 0, numbers))
    numbers = list(map(lambda x: x / 2, numbers))
    if len(numbers) == N:
        count += 1
    else:
        break

print(count)"
StarCoder,codenet,Java,Python,s910008321.py,"import sys

h = int(sys.stdin.readline())
a = int(sys.stdin.readline())

print(h // a if h % a == 0 else h // a + 1)","import sys

h, a = map(int, sys.stdin.readline().split())

print(h // a if h % a == 0 else h // a + 1)"
StarCoder,codenet,Java,Python,s566905615.py,"a = int(input())
b = int(input())
c = int(input())
answer = ""No""
if a + b >= c:
    answer = ""Yes""
print(answer)","a, b, c = map(int, input().split())
answer = ""No""
if a + b >= c:
    answer = ""Yes""
print(answer)"
StarCoder,codenet,Java,Python,s821112618.py,"import sys

def main():
    for line in sys.stdin:
        n = int(line.strip())
        if n == 0:
            break
        s = "".,!? :abc:def:ghi:jkl:mno:pqrs:tuv:wxyz"".split("":"")
        k = [s[i].strip().split("""") for i in range(9)]
        for line in sys.stdin:
            c = line.strip().split("""")
            l = -1
            a = 0
            for i in range(len(c)):
                if c[i]!= '0':
                    a = int(c[i]) - 1
                    l = (l + 1) % len(k[a])
                elif l >= 0:
                    print(k[a][l], end="""")
                    l = -1
            print()

if __name__ == ""__main__"":
    main()","import sys

def main():
    line = sys.stdin.readline()
    n = int(line.strip())
    s = "".,!? :abc:def:ghi:jkl:mno:pqrs:tuv:wxyz"".split("":"")
    k = [list(s[i]) for i in range(9)]
    if n == 0:
        return
    for line in sys.stdin:
        c = list(line.strip())
        l = -1
        a = 0
        for i in range(len(c)):
            if c[i]!= '0':
                a = int(c[i]) - 1
                l = (l + 1) % len(k[a])
            elif l >= 0:
                print(k[a][l], end="""")
                l = -1
        print()

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s063482767.py,"import heapq

n = int(input())

queue = []
for i in range(n):
    heapq.heappush(queue, int(input()))

sum = 0
for i in range(n - 1):
    sum += heapq.heappop(queue)

print(""Yes"" if heapq.heappop(queue) < sum else ""No"")","import heapq

n = int(input())

queue = []
inputs = list(input().split())
for i in range(n):
    heapq.heappush(queue, int(inputs[i]))

sum = 0
for i in range(n - 1):
    sum += heapq.heappop(queue)

print(""Yes"" if heapq.heappop(queue) < sum else ""No"")"
StarCoder,codenet,Java,Python,s461257670.py,"import sys

def Answer(y, m, d):
    result = 1

    if y % 3 == 0:
        result += 20 - d
    elif m % 2 == 0:
        result += 19 - d
    else:
        result += 20 - d

    for m in range(m+1, 11):
        if y % 3 == 0:
            result += 20
        else:
            if m % 2 == 0:
                result += 19
            else:
                result += 20

    for y in range(y+1, 1000):
        if y % 3 == 0:
            result += 200
        else:
            result += 195

    return result

if __name__ == ""__main__"":
    for line in sys.stdin:
        y, m, d = map(int, line.split())
        print(Answer(y, m, d))","import sys

def Answer(y, m, d):
    result = 1

    if y % 3 == 0:
        result += 20 - d
    elif m % 2 == 0:
        result += 19 - d
    else:
        result += 20 - d

    for m in range(m+1, 11):
        if y % 3 == 0:
            result += 20
        else:
            if m % 2 == 0:
                result += 19
            else:
                result += 20

    for y in range(y+1, 1000):
        if y % 3 == 0:
            result += 200
        else:
            result += 195

    return result

if __name__ == ""__main__"":
    count = int(sys.stdin.readline())
    for line in sys.stdin:
        y, m, d = map(int, line.split())
        print(Answer(y, m, d))"
StarCoder,codenet,Java,Python,s336166208.py,"import sys

info = [[[0 for x in range(10)] for y in range(3)] for z in range(4)]

n = int(sys.stdin.readline())
for i in range(n):
    built = int(sys.stdin.readline())
    floor = int(sys.stdin.readline())
    room = int(sys.stdin.readline())
    num = int(sys.stdin.readline())
    info[built - 1][floor - 1][room - 1] += num

for i in range(4):
    for j in range(3):
        for k in range(10):
            print("" "" + str(info[i][j][k]), end="""")
        print("""")
    if i!= 4 - 1:
        print(""####################"")","import sys

info = [[[0 for x in range(10)] for y in range(3)] for z in range(4)]

n = int(sys.stdin.readline())
for i in range(n):
    built, floor, room, num = map(int, sys.stdin.readline().split())
    info[built - 1][floor - 1][room - 1] += num

for i in range(4):
    for j in range(3):
        for k in range(10):
            print("" "" + str(info[i][j][k]), end="""")
        print("""")
    if i!= 4 - 1:
        print(""####################"")"
StarCoder,codenet,Java,Python,s041542819.py,"import sys
import math
from collections import defaultdict
from itertools import accumulate
from bisect import bisect_left
from functools import reduce
from operator import mul
from fractions import gcd
from math import ceil, floor, sqrt, factorial, log, pi, e, inf
from random import random, randint, choice, shuffle
from string import ascii_lowercase, ascii_uppercase, digits
from heapq import heappush, heappop, heapify
from time import time
from pprint import pprint
from sys import setrecursionlimit as setreclim
from sys import maxsize

# from numba import njit, i8, b1, f8, u8, u4, u2, jitclass, float32, int32, int64, boolean
# from numba.experimental import jitclass
# from numba.types import int32, int64, float64, boolean, void
# from numba.typed import List

# from numba.pycc import CC
# cc = CC('my_module')
# cc.export('solve', solve.__doc__.strip().split()[0])(solve)
# cc.compile()
# exit()

# @jitclass([('a', int32)])
# class DLazyFaith:
#     def __init__(self, a):
#         self.a = a

#     def solve(self, testNumber, in, out):
#         a, b, q = in.ints()
#         s = in.longs()
#         t = in.longs()
#         s = [0] + s + [20000000000]
#         t = [0] + t + [20000000000]
#         for i in range(q):
#             x = in.longs()
#             sl = x - s[max(0, bisect_left(s, x + 1) - 1)]
#             tl = x - t[max(0, bisect_left(t, x + 1) - 1)]
#             sr = s[bisect_left(s, x)] - x
#             tr = t[bisect_left(t, x)] - x
#             out.ansln(min(
#                 max(sl, tl),
#                 max(sr, tr),
#                 2 * sl + tr,
#                 2 * tl + sr,
#                 sl + 2 * tr,
#                 tl + 2 * sr
#             ))

# @njit(int32(int32, int32[:], int32[:], int32[:]), cache=True)
# def solve(testNumber, a, b, q):
#     s = [0] + a + [20000000000]
#","import sys
import math
from collections import defaultdict
from itertools import accumulate
from bisect import bisect_left
from functools import reduce
from operator import mul
from fractions import gcd
from math import ceil, floor, sqrt, factorial, log, pi, e, inf
from random import random, randint, choice, shuffle
from string import ascii_lowercase, ascii_uppercase, digits
from heapq import heappush, heappop, heapify
from time import time
from pprint import pprint
from sys import setrecursionlimit as setreclim
from sys import maxsize

# from numba import njit, i8, b1, f8, u8, u4, u2, jitclass, float32, int32, int64, boolean
# from numba.experimental import jitclass
# from numba.types import int32, int64, float64, boolean, void
# from numba.typed import List

# from numba.pycc import CC
# cc = CC('my_module')
# cc.export('solve', solve.__doc__.strip().split()[0])(solve)
# cc.compile()
# exit()

# @jitclass([('a', int32)])
# class DLazyFaith:
#     def __init__(self, a):
#         self.a = a

#     def solve(self, testNumber, in, out):
#         a, b, q = in.ints()
#         s = in.longs()
#         t = in.longs()
#         s = [0] + s + [20000000000]
#         t = [0] + t + [20000000000]
#         for i in range(q):
#             x = in.longs()
#             sl = x - s[max(0, bisect_left(s, x + 1) - 1)]
#             tl = x - t[max(0, bisect_left(t, x + 1) - 1)]
#             sr = s[bisect_left(s, x)] - x
#             tr = t[bisect_left(t, x)] - x
#             out.ansln(min(
#                 max(sl, tl),
#                 max(sr, tr),
#                 2 * sl + tr,
#                 2 * tl + sr,
#                 sl + 2 * tr,
#                 tl + 2 * sr
#             ))

# @njit(int32(int32, int32[:], int32[:], int32[:]), cache=True)
# def solve(testNumber, a, b, q):
#     s = [0] + a + [20000000000]
#"
StarCoder,codenet,Java,Python,s858314534.py,"import sys

A = int(sys.stdin.readline())
B = int(sys.stdin.readline())
T = int(sys.stdin.readline())

print((T / A) * B)","import sys

A, B, T = map(int, sys.stdin.readline().split())

print((T // A) * B)"
StarCoder,codenet,Java,Python,s233008404.py,"import sys

class Main:
    def __init__(self):
        self.reader = sys.stdin
        self.h = 0
        self.w = 0
        self.k = 0
        self.colorMtr = []

    def solve(self):
        self.h = int(self.reader.readline())
        self.w = int(self.reader.readline())
        self.k = int(self.reader.readline())

        for i in range(self.h):
            self.colorMtr.append(self.reader.readline().strip().split(""""))

        hPattern = self.pow(2, self.h)
        wPattern = self.pow(2, self.w)

        ans = 0

        for i in range(hPattern):
            for j in range(wPattern):
                if self.judge(i, j):
                    ans += 1

        print(ans)

    def judge(self, hPattern, wPattern):
        hBitArr = [0] * self.h
        wBitArr = [0] * self.w

        for i in range(self.h):
            if ((hPattern >> i) & 1) == 1:
                hBitArr[i] = 1

        for i in range(self.w):
            if ((wPattern >> i) & 1) == 1:
                wBitArr[i] = 1

        black = 0

        for i in range(self.h):
            for j in range(self.w):
                if hBitArr[i] == 1 or wBitArr[j] == 1:
                    continue

                if self.colorMtr[i][j] == ""#"":
                    black += 1

        if black == self.k:
            return True
        else:
            return False

    def pow(self, base, n):
        retVal = 1
        while n > 0:
            if (n & 1) == 1:
                retVal *= base
            n >>= 1
            base *= base
        return retVal


if __name__ == ""__main__"":
    obj = Main()
    obj.solve()","import sys

class Main:
    def __init__(self):
        self.reader = sys.stdin
        self.h = 0
        self.w = 0
        self.k = 0
        self.colorMtr = []

    def solve(self):
        self.h, self.w, self.k = map(int, self.reader.readline().split())

        for i in range(self.h):
            self.colorMtr.append(list(self.reader.readline().strip()))

        hPattern = self.pow(2, self.h)
        wPattern = self.pow(2, self.w)

        ans = 0

        for i in range(hPattern):
            for j in range(wPattern):
                if self.judge(i, j):
                    ans += 1

        print(ans)

    def judge(self, hPattern, wPattern):
        hBitArr = [0] * self.h
        wBitArr = [0] * self.w

        for i in range(self.h):
            if ((hPattern >> i) & 1) == 1:
                hBitArr[i] = 1

        for i in range(self.w):
            if ((wPattern >> i) & 1) == 1:
                wBitArr[i] = 1

        black = 0

        for i in range(self.h):
            for j in range(self.w):
                if hBitArr[i] == 1 or wBitArr[j] == 1:
                    continue

                if self.colorMtr[i][j] == ""#"":
                    black += 1

        if black == self.k:
            return True
        else:
            return False

    def pow(self, base, n):
        retVal = 1
        while n > 0:
            if (n & 1) == 1:
                retVal *= base
            n >>= 1
            base *= base
        return retVal


if __name__ == ""__main__"":
    obj = Main()
    obj.solve()"
StarCoder,codenet,Java,Python,s943650310.py,"import sys

X = int(sys.stdin.readline())
t = int(sys.stdin.readline())

if X - t >= 0:
    print(X - t)
else:
    print(0)","import sys

X, t = map(int, sys.stdin.readline().split())

if X - t >= 0:
    print(X - t)
else:
    print(0)"
StarCoder,codenet,Java,Python,s318252319.py,"import sys

s = sys.stdin.readline()
n = int(s[-1])
if n == 3:
    print(""bon"")
elif n == 0 or n == 1 or n == 6 or n == 8:
    print(""pon"")
else:
    print(""hon"")","import sys

s = sys.stdin.readline().strip()
n = int(s[-1])
if n == 3:
    print(""bon"")
elif n == 0 or n == 1 or n == 6 or n == 8:
    print(""pon"")
else:
    print(""hon"")"
StarCoder,codenet,Java,Python,s399184958.py,"import sys

A = int(sys.stdin.readline())
B = int(sys.stdin.readline())
C = int(sys.stdin.readline())

if A == B and B == C and C == A:
    print(""Yes"")
else:
    print(""No"")","import sys

A, B, C = map(int, sys.stdin.readline().split())

if A == B and B == C and C == A:
    print(""Yes"")
else:
    print(""No"")"
StarCoder,codenet,Java,Python,s059916837.py,"import sys

S = sys.stdin.readline().strip()
T = sys.stdin.readline().strip()

min = 1000000000
for i in range(len(S)-len(T)+1):
    min = min if min < find(S[i:i+len(T)], T) else find(S[i:i+len(T)], T)

if min!= 1000000000:
    print(min)
else:
    print(len(T))

def find(a, b):
    calc = 0
    for x in range(len(a)):
        if a[x]!= b[x]:
            calc += 1
    return calc","import sys

def find(a, b):
    calc = 0
    for x in range(len(a)):
        if a[x]!= b[x]:
            calc += 1
    return calc

S = sys.stdin.readline().strip()
T = sys.stdin.readline().strip()

min = 1000000000
for i in range(len(S)-len(T)+1):
    min = min if min < find(S[i:i+len(T)], T) else find(S[i:i+len(T)], T)

if min!= 1000000000:
    print(min)
else:
    print(len(T))"
StarCoder,codenet,Java,Python,s685537842.py,"import sys

a = int(sys.stdin.readline())
b = int(sys.stdin.readline())
t = int(sys.stdin.readline())

time = 0
count = 0

while time < t + 0.5:
	count += b
	time += a
	if time > t + 0.5:
		count -= b
		break

print(count)","import sys

a, b, t = map(int, sys.stdin.readline().split())

time = 0
count = 0

while time < t + 0.5:
	count += b
	time += a
	if time > t + 0.5:
		count -= b
		break

print(count)"
StarCoder,codenet,Java,Python,s824230885.py,"import sys

class Main:
    #Don't have to see. start------------------------------------------
    def __init__(self):
        self.inputIterator = self.InputIterator()
        self.out = sys.stdout
        self.err = sys.stderr
        self.CONVSTR = {8:"" "", 9:""\n"", 0:""""}
    def InputIterator(self):
        self.inputLine = []
        self.index = 0
        self.max = 0
        self.read = """"
        for read in sys.stdin:
            self.inputLine.append(read)
            self.max += 1
        return self
    def hasNext(self):
        return self.index < self.max
    def next(self):
        if(self.hasNext()):
            self.index += 1
            return self.inputLine[self.index-1]
        else:
            raise Exception(""There is no more input"")
    def flush(self):
        self.out.flush()
    def myout(self, t):
        self.out.write(str(t)+""\n"")
    def myerr(self, t):
        self.err.write(""debug:""+str(t)+""\n"")
    def myconv(self, list, no):#only join
        joinString = self.CONVSTR[no]
        if(isinstance(list, list)):
            return joinString.join(list)
        else:
            raise Exception(""Don't join"")
    def nextStrArray(self):
        return self.myconv(self.next(), 8).split()
    def nextCharArray(self):
        return self.myconv(self.next(), 0)
    def nextIntArray(self):
        return [int(x) for x in self.nextStrArray()]
    def nextLongArray(self):
        return [long(x) for x in self.nextStrArray()]
    #Don't have to see. end------------------------------------------
    def solve(self):#Here is the main function
        N = self.nextInt()
        list = self.nextIntArray()
        max = 0
        output = 0
        for i in range(N):
            if(max <= list[i]):
                max = list[i]
                output += 1
        self.myout(output)
    #Method addition frame start
    #Method addition frame end

if __name__ == ""__main__"":
    main = Main()
    main.solve()
    main.flush()","import sys

class Main:
    #Don't have to see. start------------------------------------------
    def __init__(self):
        self.inputIterator = self.InputIterator()
        self.out = sys.stdout
        self.err = sys.stderr
        self.CONVSTR = {8:"" "", 9:""\n"", 0:""""}
    def InputIterator(self):
        self.inputLine = []
        self.index = 0
        self.max = 0
        self.read = """"
        for read in sys.stdin:
            self.inputLine.append(read)
            self.max += 1
        return self
    def hasNext(self):
        return self.index < self.max
    def next(self):
        if(self.hasNext()):
            self.index += 1
            return self.inputLine[self.index-1]
        else:
            raise Exception(""There is no more input"")
    def flush(self):
        self.out.flush()
    def myout(self, t):
        self.out.write(str(t)+""\n"")
    def myerr(self, t):
        self.err.write(""debug:""+str(t)+""\n"")
    def myconv(self, list, no):#only join
        joinString = self.CONVSTR[no]
        if(isinstance(list, list)):
            return joinString.join(list)
        else:
            raise Exception(""Don't join"")
    def nextStrArray(self):
        return self.myconv(self.next(), 8).split()
    def nextCharArray(self):
        return self.myconv(self.next(), 0)
    def nextIntArray(self):
        return [int(x) for x in self.nextStrArray()]
    def nextLongArray(self):
        return [long(x) for x in self.nextStrArray()]
    #Don't have to see. end------------------------------------------
    def solve(self):#Here is the main function
        N = self.nextInt()
        list = self.nextIntArray()
        max = 0
        output = 0
        for i in range(N):
            if(max <= list[i]):
                max = list[i]
                output += 1
        self.myout(output)
    #Method addition frame start
    #Method addition frame end

if __name__ == ""__main__"":
    main = Main()
    main.solve()
    main.flush()"
StarCoder,codenet,Java,Python,s125881159.py,"n = int(input())
d = 0
for i in range(n):
    d += int(input()) % 2
print(""YES"" if d % 2 == 0 else ""NO"")","n = int(input())
d = 0
inputs = list(input().split())
for i in range(n):
    d += int(inputs[i]) % 2
print(""YES"" if d % 2 == 0 else ""NO"")"
StarCoder,codenet,Java,Python,s720527488.py,"import sys
import heapq

class Solution:
    def solve(self, m, n, manju, boxlen, boxcost):
        dp = [[0 for i in range(n+1)] for j in range(m+1)]
        for i in range(m-1, -1, -1):
            for j in range(n-1, -1, -1):
                if i+boxlen[j] >= m:
                    dp[i][j] = dp[i][j+1]
                else:
                    cnt = 0
                    for k in range(i, i+boxlen[j]):
                        cnt += manju[m-1-k]
                    dp[i][j] = max(dp[i][j], dp[i+boxlen[j]][j+1]+cnt-boxcost[j])
                    dp[i][j] = max(dp[i][j], dp[i][j+1])
        return dp[0][0]

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    m = int(input())

    n = int(input())

    manju = []

    for _ in range(m):
        manju_item = int(input())
        manju.append(manju_item)

    boxlen = []

    for _ in range(n):
        boxlen_item = int(input())
        boxlen.append(boxlen_item)

    boxcost = []

    for _ in range(n):
        boxcost_item = int(input())
        boxcost.append(boxcost_item)

    result = Solution().solve(m, n, manju, boxlen, boxcost)

    fptr.write(str(result) + '\n')

    fptr.close()","import sys
import heapq

class Solution:
    def solve(self, m, n, manju, boxlen, boxcost):
        dp = [[0 for i in range(n+1)] for j in range(m+1)]
        for i in range(m-1, -1, -1):
            for j in range(n-1, -1, -1):
                length = i+boxlen[j] if i+boxlen[j] < m else m
                cnt = sum(manju[m-1-k] for k in range(i, length))
                dp[i][j] = max(dp[i][j], dp[length][j+1]+cnt-boxcost[j])
                dp[i][j] = max(dp[i][j], dp[i][j+1])
        return dp[0][0]

if __name__ == '__main__':
    m, n = map(int, input().split())

    manju = []

    for _ in range(m):
        manju_item = int(input())
        manju.append(manju_item)

    boxlen = []
    boxcost = []
    for _ in range(n):
        l, c = map(int, input().split())
        boxlen.append(l)
        boxcost.append(c)

    manju.sort()
    result = Solution().solve(m, n, manju, boxlen, boxcost)

    print(str(result) + '\n')"
StarCoder,codenet,Java,Python,s890213274.py,"import sys

A1 = int(sys.stdin.readline())
A2 = int(sys.stdin.readline())
A3 = int(sys.stdin.readline())

if ((A1+A2+A3) >= 22):
    print(""bust"")
else:
    print(""win"")","import sys

A1, A2, A3 = map(int, sys.stdin.readline().split())

if ((A1+A2+A3) >= 22):
    print(""bust"")
else:
    print(""win"")"
StarCoder,codenet,Java,Python,s739337307.py,"import sys

if __name__ == ""__main__"":
    n = int(sys.stdin.readline())
    m = int(sys.stdin.readline())

    map = {}
    countAc = 0
    countWaAll = 0

    for i in range(m):
        question = int(sys.stdin.readline())
        waOrAc = sys.stdin.readline()

        if question not in map:
            if waOrAc == ""WA"":
                map[question] = 1
            else:
                map[question] = -1
                countAc += 1
        else:
            countWa = map[question]
            if countWa < 0:
                continue
            else:
                if waOrAc == ""WA"":
                    map[question] = countWa + 1
                else:
                    map[question] = -countWa
                    countAc += 1
                    countWaAll += countWa

    print(countAc, countWaAll)","import sys

if __name__ == ""__main__"":
    n, m = map(int, sys.stdin.readline().split())

    map = {}
    countAc = 0
    countWaAll = 0

    for i in range(m):
        question, waOrAc = sys.stdin.readline().split()
        question = int(question)

        if question not in map:
            if waOrAc == ""WA"":
                map[question] = 1
            else:
                map[question] = -1
                countAc += 1
        else:
            countWa = map[question]
            if countWa < 0:
                continue
            else:
                if waOrAc == ""WA"":
                    map[question] = countWa + 1
                else:
                    map[question] = -countWa
                    countAc += 1
                    countWaAll += countWa

    print(countAc, countWaAll)"
StarCoder,codenet,Java,Python,s927992720.py,"import sys

while True:
    a = int(input())
    op = input()
    b = int(input())

    if op == '?':
        break
    if op == '+':
        print(a+b)
    if op == '-':
        print(a-b)
    if op == '*':
        print(a*b)
    if op == '/':
        print(a/b)","import sys

while True:
    a, op, b = input().split()
    a = int(a)
    b = int(b)

    if op == '?':
        break
    if op == '+':
        print(a+b)
    if op == '-':
        print(a-b)
    if op == '*':
        print(a*b)
    if op == '/':
        print(a//b)"
StarCoder,codenet,Java,Python,s016010007.py,"import math

class Main:
    def __init__(self):
        self.EPS = 1e-10

    def run(self):
        p0, p1, p2 = self.input()
        q = self.input()
        buf = []
        for i in range(q):
            p3 = self.input()
            buf.append(self.judgeClockwise(p0, p1, p2, p3))
        print('\n'.join(buf))

    def input(self):
        return map(float, input().split())

    def judgeClockwise(self, p0, p1, p2, p3):
        v = Vector()
        a = v.diff(p1, p0)
        b = v.diff(p2, p0)

        if v.cross(a, b) >  v.EPS : return ""COUNTER_CLOCKWISE""
        if v.cross(a, b) < -v.EPS : return ""CLOCKWISE""
        if v.dot(a, b) < -v.EPS : return ""ONLINE_BACK""
        if v.norm(a) < v.norm(b) : return ""ONLINE_FRONT""

        return ""ON_SEGMENT""

class Point2D:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def diff(self, p):
        return Point2D(self.x - p.x, self.y - p.y)

    def sum(self, p):
        return Point2D(self.x + p.x, self.y + p.y)

    def multiple(self, k):
        return Point2D(self.x * k, self.y * k)

    def norm(self):
        return self.x * self.x + self.y * self.y

    def abs(self, p):
        return math.sqrt(p.norm())

class Vector(Point2D):
    def dot(self, a, b):
        return a.x * b.x + a.y * b.y

    def cross(self, a, b):
        return a.x * b.y - a.y * b.x

    def isOrthogonal(self, a, b):
        return self.dot(a, b) == 0.0

    def isParallel(self, a, b):
        return self.cross(a, b) == 0.0

    def project(self, sp1, sp2, p):
        base = Vector(sp2.diff(sp1))
        r = self.dot(p.diff(sp1), base) / base.norm()

        return sp1.sum(base.multiple(r))

    def reflect(self, sp1, sp2, p):
        return p.sum(self.project(sp1, sp2, p).diff(p).multiple(2.0))

if __name__ == '__main__':
    main = Main()
    main.run()","import math

class Main:
    def __init__(self):
        self.EPS = 1e-10

    def run(self):
        p0, p1, p2 = self.input()
        q = self.input()
        buf = []
        for i in range(q):
            p3 = self.input()
            buf.append(self.judgeClockwise(p0, p1, p2, p3))
        print('\n'.join(buf))

    def input(self):
        return map(float, input().split())

    def judgeClockwise(self, p0, p1, p2, p3):
        v = Vector()
        a = v.diff(p1, p0)
        b = v.diff(p2, p0)

        if v.cross(a, b) >  v.EPS : return ""COUNTER_CLOCKWISE""
        if v.cross(a, b) < -v.EPS : return ""CLOCKWISE""
        if v.dot(a, b) < -v.EPS : return ""ONLINE_BACK""
        if v.norm(a) < v.norm(b) : return ""ONLINE_FRONT""

        return ""ON_SEGMENT""

class Point2D:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def diff(self, p):
        return Point2D(self.x - p.x, self.y - p.y)

    def sum(self, p):
        return Point2D(self.x + p.x, self.y + p.y)

    def multiple(self, k):
        return Point2D(self.x * k, self.y * k)

    def norm(self):
        return self.x * self.x + self.y * self.y

    def abs(self, p):
        return math.sqrt(p.norm())

class Vector(Point2D):
    def dot(self, a, b):
        return a.x * b.x + a.y * b.y

    def cross(self, a, b):
        return a.x * b.y - a.y * b.x

    def isOrthogonal(self, a, b):
        return self.dot(a, b) == 0.0

    def isParallel(self, a, b):
        return self.cross(a, b) == 0.0

    def project(self, sp1, sp2, p):
        base = Vector(sp2.diff(sp1))
        r = self.dot(p.diff(sp1), base) / base.norm()

        return sp1.sum(base.multiple(r))

    def reflect(self, sp1, sp2, p):
        return p.sum(self.project(sp1, sp2, p).diff(p).multiple(2.0))

if __name__ == '__main__':
    main = Main()
    main.run()"
StarCoder,codenet,Java,Python,s307170605.py,"import sys

for i in range(5):
    if int(sys.stdin.readline()) == 0:
        print(i+1)
        break","import sys

inputs = list(sys.stdin.readline().split())
for i in range(5):
    if int(inputs[i]) == 0:
        print(i+1)
        break"
StarCoder,codenet,Java,Python,s010698290.py,"# ========================================### FAST IO ###=========================================//
class FastReader:
    def __init__(self):
        self.s = input()
        self.pos = 0

    def next(self):
        self.pos += 1
        return self.s[self.pos - 1]

    def nextInt(self):
        self.pos += 1
        return int(self.s[self.pos - 1])

    def nextLong(self):
        self.pos += 1
        return int(self.s[self.pos - 1])

    def nextDouble(self):
        self.pos += 1
        return float(self.s[self.pos - 1])

    def nextLine(self):
        self.pos += 1
        return self.s[self.pos - 1]
# ====================================================================================================//

# ========================================### MAIN CODE ###=========================================//
if __name__ == ""__main__"":
    s = FastReader()
    w = open('output.txt', 'w')
    n = s.nextInt()
    m = s.nextInt()

    penal = [0] * (n + 1)
    solved = [False] * (n + 1)

    for i in range(m):
        num = s.nextInt()
        str = s.next()
        if str[0] == 'A':
            solved[num] = True
        else:
            if solved[num] == False:
                penal[num] += 1

    correct_ans = 0
    num_penal = 0
    for i in range(1, n + 1):
        if solved[i] == True:
            correct_ans += 1
            num_penal += penal[i]

    w.write(str(correct_ans) + "" "" + str(num_penal) + ""\n"")
    w.close()
# ====================================================================================================//","# ========================================### FAST IO ###=========================================//
class FastReader:
    def __init__(self):
        self.s = input()
        self.pos = 0

    def next(self):
        self.pos += 1
        return self.s[self.pos - 1]

    def nextInt(self):
        self.pos += 1
        return int(self.s[self.pos - 1])

    def nextLong(self):
        self.pos += 1
        return int(self.s[self.pos - 1])

    def nextDouble(self):
        self.pos += 1
        return float(self.s[self.pos - 1])

    def nextLine(self):
        self.pos += 1
        return self.s[self.pos - 1]
# ====================================================================================================//

# ========================================### MAIN CODE ###=========================================//
if __name__ == ""__main__"":
    s = FastReader()
    w = open('output.txt', 'w')
    n = s.nextInt()
    m = s.nextInt()

    penal = [0] * (n + 1)
    solved = [False] * (n + 1)

    for i in range(m):
        num = s.nextInt()
        str = s.next()
        if str[0] == 'A':
            solved[num] = True
        else:
            if solved[num] == False:
                penal[num] += 1

    correct_ans = 0
    num_penal = 0
    for i in range(1, n + 1):
        if solved[i] == True:
            correct_ans += 1
            num_penal += penal[i]

    w.write(str(correct_ans) + "" "" + str(num_penal) + ""\n"")
    w.close()
# ====================================================================================================//"
StarCoder,codenet,Java,Python,s173032907.py,"import sys

def main():
    n = int(input())
    a = [int(x) for x in input().split()]
    dp1 = [0] * n
    dp2 = [0] * n
    current1 = 0
    current2 = 0
    for i in range(n):
        dp1[i] = dp1[i - 1] + abs(a[i] - current1)
        current1 = a[i]
    for i in range(n - 1, -1, -1):
        dp2[i] = dp2[i + 1] + abs(a[i] - current2)
        current2 = a[i]
    for i in range(n):
        if i == 0:
            print(dp2[i + 1] + abs(a[1]))
        elif i == n - 1:
            print(dp1[i - 1] + abs(a[i - 1]))
        else:
            print(dp1[i - 1] + dp2[i + 1] + abs(a[i - 1] - a[i + 1]))

if __name__ == '__main__':
    main()","import sys

def main():
    n = int(input())
    a = [int(x) for x in input().split()]
    dp1 = [0] * n
    dp2 = [0] * n
    current1 = 0
    current2 = 0
    for i in range(n):
        dp1[i] = dp1[i - 1] + abs(a[i] - current1)
        current1 = a[i]
    for i in range(n - 1, -1, -1):
        if i + 1 == n:
            dp2[i] = abs(a[i] - current2)
        else:
            dp2[i] = dp2[i + 1] + abs(a[i] - current2)
        current2 = a[i]
    for i in range(n):
        if i == 0:
            print(dp2[i + 1] + abs(a[1]))
        elif i == n - 1:
            print(dp1[i - 1] + abs(a[i - 1]))
        else:
            print(dp1[i - 1] + dp2[i + 1] + abs(a[i - 1] - a[i + 1]))

if __name__ == '__main__':
    main()"
StarCoder,codenet,Java,Python,s490798303.py,"import sys

n, k = map(int, input().split())

map = {}

for i in range(k):
    d = int(input())
    for j in range(d):
        person = int(input())

        if person not in map:
            map[person] = []
        map[person].append(d)

count = 0
for i in range(1, n + 1):
    if i not in map:
        count += 1

print(count)","import sys

n, k = map(int, input().split())

map = {}

for i in range(k):
    d = int(input())
    inputs = list(input().split())
    for j in range(d):
        person = int(inputs[j])

        if person not in map:
            map[person] = []
        map[person].append(d)

count = 0
for i in range(1, n + 1):
    if i not in map:
        count += 1

print(count)"
StarCoder,codenet,Java,Python,s196451707.py,"import sys

def bfs(graph, start):
    visited = [False] * (len(graph))
    queue = [start]
    visited[start] = True

    while queue:
        s = queue.pop(0)
        print(s, end=' ')

        for i in range(len(graph)):
            if graph[s][i] == 1 and not visited[i]:
                queue.append(i)
                visited[i] = True

def main():
    n = int(input())
    graph = [[0 for x in range(n)] for y in range(n)]
    for i in range(n):
        u, k = map(int, input().split())
        for j in range(k):
            v = int(input())
            graph[u][v] = 1

    bfs(graph, 1)

if __name__ == '__main__':
    main()","import sys

def bfs(graph, start):
    visited = [False] * (len(graph))
    queue = [start]
    visited[start] = True

    while queue:
        s = queue.pop(0)
        print(s, end=' ')

        for i in range(len(graph)):
            if graph[s][i] == 1 and not visited[i]:
                queue.append(i)
                visited[i] = True

def main():
    n = int(input())
    graph = [[0 for x in range(n + 1)] for y in range(n + 1)]
    for i in range(n):
        inputs = list(input().split())
        u, k = int(inputs[0]), int(inputs[1])
        for j in range(k):
            v = int(inputs[j + 2])
            graph[u][v] = 1

    bfs(graph, 1)

if __name__ == '__main__':
    main()"
StarCoder,codenet,Java,Python,s004995062.py,"import sys
a, b = sys.stdin.readline().split()
print(int(a) * int(b))","import sys
a, b = sys.stdin.readline().split()
print(int(float(a) * float(b)))"
StarCoder,codenet,Java,Python,s888667117.py,"import sys

def main():
    S = input()
    dp = [1] * 13

    for i, d in enumerate(S[::-1]):
        nd = [0] * 13

        if d.isdigit():
            x = int(d) * d

            for j in range(13):
                nd[(j + x) % 13] = dp[j]
        else:
            for xi in range(10):
                x = xi * d

                for j in range(13):
                    ni = (j + x) % 13
                    nd[ni] = (nd[ni] + dp[j]) % 1000000007

        dp = nd

    print(dp[5])

if __name__ == '__main__':
    main()","import sys

def main():
    S = input()
    dp = [1] * 13

    for i, d in enumerate(S[::-1]):
        nd = [0] * 13

        if d.isdigit():
            x = int(d) * d

            for j in range(13):
                nd[(j + int(x)) % 13] = dp[j]
        else:
            for xi in range(10):
                x = xi * d

                for j in range(13):
                    ni = (j + int(x)) % 13
                    nd[ni] = (nd[ni] + dp[j]) % 1000000007

        dp = nd

    print(dp[5])

if __name__ == '__main__':
    main()"
StarCoder,codenet,Java,Python,s835214694.py,"a = int(input())
b = int(input())

if b%a == 0:
    print(a+b)
else:
    print(b-a)","a, b = map(int, input().split())

if b%a == 0:
    print(a+b)
else:
    print(b-a)"
StarCoder,codenet,Java,Python,s312529015.py,"import sys

A = int(sys.stdin.readline())
B = int(sys.stdin.readline())
if A%3==0 or B%3==0 or (A+B)%3==0:
    print(""Possible"")
else:
    print(""Impossible"")","import sys

A, B = map(int, sys.stdin.readline().split())
if A%3==0 or B%3==0 or (A+B)%3==0:
    print(""Possible"")
else:
    print(""Impossible"")"
StarCoder,codenet,Java,Python,s321983475.py,"import sys

w = int(sys.stdin.readline())
a = int(sys.stdin.readline())
b = int(sys.stdin.readline())

answer = max(a,b)-min(a,b) -w
if(answer <0):
    print(0)
else:
    print(answer)","import sys

w, a, b = map(int, sys.stdin.readline().split())

answer = max(a,b)-min(a,b) -w
if(answer <0):
    print(0)
else:
    print(answer)"
StarCoder,codenet,Java,Python,s125278297.py,"import sys

h = int(sys.stdin.readline())
w = int(sys.stdin.readline())

for i in range(h):
    print('#' + sys.stdin.readline().strip() + '#')

for i in range(w + 2):
    print('#', end='')
print()

for i in range(h):
    print('#' + sys.stdin.readline().strip() + '#')

for i in range(w + 2):
    print('#', end='')
print()","import sys

h, w = map(int, sys.stdin.readline().split())

for i in range(w + 2):
    print('#', end='')
    
print()

for i in range(h):
    print('#' + sys.stdin.readline().strip() + '#')

for i in range(w + 2):
    print('#', end='')
print()"
StarCoder,codenet,Java,Python,s511234019.py,"a=int(input())
b=int(input())
if a%2==0 or b%2==0:
	print(""No"")
else:
	print(""Yes"")","a, b = map(int, input().split())
if a%2==0 or b%2==0:
	print(""No"")
else:
	print(""Yes"")"
StarCoder,codenet,Java,Python,s193347311.py,"import sys

def main():
    intLoop = int(sys.stdin.readline())
    strTaro = """"
    strHana = """"
    intTaro = 0
    intHana = 0

    for i in range(intLoop):
        strTaro = sys.stdin.readline().strip()
        strHana = sys.stdin.readline().strip()
        intJudge = cmp(strTaro, strHana)
        if intJudge < 0:
            intHana += 3
        elif intJudge == 0:
            intTaro += 1
            intHana += 1
        elif intJudge > 0:
            intTaro += 3

    print(intTaro, intHana)

if __name__ == ""__main__"":
    main()","import sys

def main():
    intLoop = int(sys.stdin.readline())
    strTaro = """"
    strHana = """"
    intTaro = 0
    intHana = 0

    for i in range(intLoop):
        strTaro, strHana = sys.stdin.readline().strip().split()
        intJudge = compareTo(strTaro, strHana)
        if intJudge < 0:
            intHana += 3
        elif intJudge == 0:
            intTaro += 1
            intHana += 1
        elif intJudge > 0:
            intTaro += 3

    print(intTaro, intHana)
    
def compareTo(str1, str2):
  if str1 < str2:
    return -1
  elif str1 > str2:
    return 1
  else:
    return 0

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s987117545.py,"import sys

class Main:
    def __init__(self):
        self.sc = sys.stdin
        self.DEVISOR = 1000000000+7

    def run(self):
        n = int(self.sc.readline())
        k = int(self.sc.readline())

        ans = 0
        for i in range(k, n+1):
            max = i*(2*n-i+1)/2
            min = i*(i-1)/2
            ans += (max - min + 1) % self.DEVISOR

        print(ans % self.DEVISOR)

if __name__ == '__main__':
    obj = Main()
    obj.run()","import sys

class Main:
    def __init__(self):
        self.sc = sys.stdin
        self.DEVISOR = 1000000000+7

    def run(self):
        n, k = map(int, self.sc.readline().split())

        ans = 0
        for i in range(k, n+2):
            max = i*(2*n-i+1)//2
            min = i*(i-1)//2
            ans += (max - min + 1) % self.DEVISOR

        print(ans % self.DEVISOR)

if __name__ == '__main__':
    obj = Main()
    obj.run()"
StarCoder,codenet,Java,Python,s175590171.py,"import sys

def main():
    n = int(sys.stdin.readline())
    a = [int(sys.stdin.readline()) for i in range(n)]
    a.sort()
    sum = 0
    count = 0
    for i in range(n-1):
        sum += a[i]
        if a[i+1] <= 2*sum:
            count += 1
        else:
            count = 0
    print(count+1)

if __name__ == ""__main__"":
    main()","import sys

def main():
    n = int(sys.stdin.readline())
    a = list(map(int, sys.stdin.readline().split()))
    a.sort()
    sum = 0
    count = 0
    for i in range(n-1):
        sum += a[i]
        if a[i+1] <= 2*sum:
            count += 1
        else:
            count = 0
    print(count+1)

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s968213233.py,"import sys
import heapq

class Main:

    def __init__(self, in_, out_, test):
        self.in_ = in_
        self.out_ = out_
        self.test = test
        self.run()

    def run(self):
        N = self.in_.next_int()
        A = [0] * N
        for i in range(N):
            A[i] = self.in_.next_int()
        A.sort()

        res = 0

        q = []
        heapq.heappush(q, [A[N - 1], A[N - 1]])

        for i in range(N - 2, -1, -1):
            a = A[i]
            place = heapq.heappop(q)
            res += min(place[0], place[1])
            heapq.heappush(q, [place[0], a])
            heapq.heappush(q, [a, place[1]])
        self.out_.print(res)


if __name__ == ""__main__"":
    in_ = FastScanner(sys.stdin)
    out_ = PrintWriter(sys.stdout)
    test = 1
    solution = Main(in_, out_, test)","import sys
import heapq

class Main:

    def __init__(self, in_, test):
        self.in_ = in_
        self.test = test
        self.run()

    def run(self):
        N = int(self.in_.readline())
        A = [0] * N
        inputs = list(self.in_.readline().split())
        for i in range(N):
            A[i] = int(inputs[i])
        A.sort()

        res = 0

        q = []
        heapq.heappush(q, [A[N - 1], A[N - 1]])

        for i in range(N - 2, -1, -1):
            a = A[i]
            place = heapq.heappop(q)
            res += min(place[0], place[1])
            heapq.heappush(q, [place[0], a])
            heapq.heappush(q, [a, place[1]])
        print(res)


if __name__ == ""__main__"":
    in_ = sys.stdin
    test = 1
    solution = Main(in_, test)"
StarCoder,codenet,Java,Python,s973587235.py,"import sys

def main():
    n = int(input())
    minN = int(input())-1
    for i in range(n-1):
        h = int(input())
        if minN == h:
            minN = h
        elif minN == h-1:
            minN = h-1
        elif minN < h-1:
            minN = h-1
        elif minN > h:
            print(""No"")
            return
    print(""Yes"")

if __name__ == ""__main__"":
    main()","import sys

def main():
    n = int(input())
    inputs = list(input().split())
    minN = int(inputs[0])-1
    for i in range(n-1):
        h = int(inputs[i + 1])
        if minN == h:
            minN = h
        elif minN == h-1:
            minN = h-1
        elif minN < h-1:
            minN = h-1
        elif minN > h:
            print(""No"")
            return
    print(""Yes"")

if __name__ == ""__main__"":
    main()"
StarCoder,codenet,Java,Python,s493101281.py,"import sys

MOD = 1000000007

def lcm(m, n):
    return m * n / gcd(m, n)

def gcd(m, n):
    if(m < n): return gcd(n, m)
    if(n == 0): return m
    return gcd(n, m % n)

class FastScanner:
    def __init__(self):
        self.tokens = sys.stdin.readline().strip().split()
        self.ptr = 0
    def hasNext(self):
        return self.ptr < len(self.tokens)
    def nextInt(self):
        self.ptr += 1
        return int(self.tokens[self.ptr - 1])

def main():
    sc = FastScanner()
    n = sc.nextInt()
    l = []
    for i in range(n):
        l.append(sc.nextInt())
    l.sort()
    print(l[n//2]-l[n//2-1])

if __name__ == '__main__':
    main()","import sys

MOD = 1000000007

def lcm(m, n):
    return m * n / gcd(m, n)

def gcd(m, n):
    if(m < n): return gcd(n, m)
    if(n == 0): return m
    return gcd(n, m % n)

def main():
    n = int(input())
    l = list(map(int, input().split()))
    l.sort()
    print(l[n//2]-l[n//2-1])

if __name__ == '__main__':
    main()"
StarCoder,codenet,Java,Python,s584135649.py,"n = int(input())
i = 0
while i < 5:
    if n == 0:
        break
    i += 1
print(i)","inputs = list(input().split())
i = 0
while i < 5:
    if int(inputs[i]) == 0:
        break
    i += 1
print(i + 1)"
StarCoder,codenet,Java,Python,s523386612.py,"import sys
t=int(sys.stdin.readline())
count=[0]*(t+1)
for i in range(t):
	count[int(sys.stdin.readline())]+=1
for i in range(1,t+1):
	print(count[i])","import sys
t=int(sys.stdin.readline())
count=[0]*(t+1)
inputs = list(sys.stdin.readline().split())
for i in range(t-1):
	count[int(inputs[i])]+=1
for i in range(1,t+1):
	print(count[i])"
StarCoder,codenet,Java,Python,s933313035.py,"import sys

class Node:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None

    def insert(self, value):
        if value < self.value:
            if self.left == None:
                self.left = Node(value)
            else:
                self.left.insert(value)
        else:
            if self.right == None:
                self.right = Node(value)
            else:
                self.right.insert(value)

    def printInOrder(self):
        if self.left!= None:
            self.left.printInOrder()
        print(self.value, end=' ')
        if self.right!= None:
            self.right.printInOrder()

    def printPreOrder(self):
        print(self.value, end=' ')
        if self.left!= None:
            self.left.printPreOrder()
        if self.right!= None:
            self.right.printPreOrder()

def main():
    m = int(sys.stdin.readline())
    tree = None
    for i in range(m):
        command = sys.stdin.readline().strip()
        if command == 'insert':
            value = int(sys.stdin.readline())
            if tree == None:
                tree = Node(value)
            else:
                tree.insert(value)
        else:
            if tree!= None:
                tree.printInOrder()
                print()
                tree.printPreOrder()
                print()

if __name__ == '__main__':
    main()","import sys

class Node:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None

    def insert(self, value):
        if value < self.value:
            if self.left == None:
                self.left = Node(value)
            else:
                self.left.insert(value)
        else:
            if self.right == None:
                self.right = Node(value)
            else:
                self.right.insert(value)

    def printInOrder(self):
        if self.left!= None:
            self.left.printInOrder()
        print(self.value, end=' ')
        if self.right!= None:
            self.right.printInOrder()

    def printPreOrder(self):
        print(self.value, end=' ')
        if self.left!= None:
            self.left.printPreOrder()
        if self.right!= None:
            self.right.printPreOrder()

def main():
    m = int(sys.stdin.readline())
    tree = None
    for i in range(m):
        command = sys.stdin.readline().strip()
        if command == 'insert':
            value = int(sys.stdin.readline())
            if tree == None:
                tree = Node(value)
            else:
                tree.insert(value)
        else:
            if tree!= None:
                tree.printInOrder()
                print()
                tree.printPreOrder()
                print()

if __name__ == '__main__':
    main()"
StarCoder,codenet,Java,Python,s162740530.py,"import sys

n, m = map(int, sys.stdin.readline().split())
a = list(map(int, sys.stdin.readline().split()))

dp = [0] * (n + 1)
dp[0] = 1
dp[1] = 1 if m > 0 and a[0] == 1 else 0

for i in range(2, n + 1):
    dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007
    if m > 0 and i == a[m - 1]:
        dp[i] = 0

print(dp[n])","import sys

n, m = map(int, sys.stdin.readline().split())
a = list(map(int, sys.stdin.readline().split()))

dp = [0] * (n + 1)
dp[0] = 1
dp[1] = 1 if m > 0 and a[0] == 1 else 0

for i in range(2, n + 1):
    dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007
    if m > 0 and i == a[m - 1]:
        dp[i] = 0

print(dp[n])"
StarCoder,codenet,Java,Python,s320655609.py,"import sys

class Main:
	def __init__(self):
		self.constraints = []
		self.N = 0
		self.result = 0
		self.readInput()
		self.calc()
		self.writeOutput()

	def readInput(self):
		self.N = int(sys.stdin.readline())
		for i in range(5):
			self.constraints.append(int(sys.stdin.readline()))

	def calc(self):
		minimport sys

class Main:
	def __init__(self):
		self.constraints = []
		self.N = 0
		self.result = 0
		self.readInput()
		self.calc()
		self.writeOutput()

	def readInput(self):
		self.N = int(sys.stdin.readline())
		for i in range(5):
			self.constraints.append(int(sys.stdin.readline()))

	def calc(self):
		min
StarCoder,codenet,Java,Python,s733150445.py,"import sys

a, b = map(float, sys.stdin.readline().split())
print(a * b)","import sys

a, b = map(float, sys.stdin.readline().split())
print(str(a * b).split('.')[0])"
StarCoder,codenet,Java,Python,s967858671.py,"import sys

def main():
	Num = [0] * 11
	for i in range(10):
		Num[i] = int(sys.stdin.readline())
	for a in range(9, -1, -1):
		for b in range(a):
			if Num[b] > Num[b+1]:
				Num[10] = Num[b]
				Num[b] = Num[b+1]
				Num[b+1] = Num[10]
	print(Num[0])
	print(Num[1])
	print(Num[2])

if __name__ == ""__main__"":
	main()","import sys

def main():
	Num = [0] * 11
	for i in range(10):
		Num[i] = int(sys.stdin.readline())
	for a in range(9, 0, -1):
		for b in range(a):
			if Num[b] < Num[b+1]:
				Num[10] = Num[b]
				Num[b] = Num[b+1]
				Num[b+1] = Num[10]
	print(Num[0])
	print(Num[1])
	print(Num[2])

if __name__ == ""__main__"":
	main()"
StarCoder,codenet,Java,Python,s387083574.py,"import sys

N = int(input())

arr = list(map(int, input().split()))

print(*sorted(arr, key=arr.index))","import sys

N = int(input())

arr = list(map(int, input().split()))

print(*sorted(arr, key=arr.index))"
StarCoder,codenet,Java,Python,s379215956.py,"import sys

s = sys.stdin.readline().strip()

if s[0] == s[1] and s[1] == s[2] and s[2] == s[3]:
    print(""Bad"")
else:
    print(""Good"")","import sys

s = sys.stdin.readline().strip()

if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:
    print(""Bad"")
else:
    print(""Good"")"
StarCoder,codenet,Java,Python,s275359315.py,"import math

r = int(input())
res = math.pow(r,2)
print(res)","import math

r = int(input())
res = int(math.pow(r,2))
print(res)"
StarCoder,codenet,Java,Python,s302760734.py,"import sys

s = sys.stdin.readline().strip()
t = sys.stdin.readline().strip()

for i in range(len(s)-len(t)+1):
    check = True
    for j in range(len(t)):
        if s[i+j]!= '?' and s[i+j]!= t[j]:
            check = False
    if check:
        for j in range(len(t)):
            s = s[:i+j] + t[j] + s[i+j+1:]
        break

if check:
    print(s)
else:
    print('UNRESTORABLE')","import sys

s = sys.stdin.readline().strip()
t = sys.stdin.readline().strip()

for i in range(len(s)-len(t)+1):
    check = True
    for j in range(len(t)):
        if s[i+j]!= '?' and s[i+j]!= t[j]:
            check = False
    if check:
        for j in range(len(t)):
            s = s[:i+j] + t[j:j + 1] + s[i+j+1:]
        break

if check:
    for i in range(len(s)):
        if s[i] == '?':
            print(""a"", end="""")
        else:
            print(s[i], end="""")
    print()
else:
    print('UNRESTORABLE')"
StarCoder,codenet,Java,Python,s201062219.py,"import sys
for line in sys.stdin:
    line = line.strip()
    if line == '0 0':
        break
    c, op, b = line.split()
    if op == '?':
        print(2000001)
        break
    if op == '+':
        print(int(c) + int(b))
    elif op == '-':
        print(int(c) - int(b))
    elif op == '*':
        print(int(c) * int(b))
    elif op == '/':
        print(int(c) / int(b))","import sys
for line in sys.stdin:
    line = line.strip()
    if line == '0 0':
        break
    c, op, b = line.split()
    if op == '?':
        break
    if op == '+':
        print(int(c) + int(b))
    elif op == '-':
        print(int(c) - int(b))
    elif op == '*':
        print(int(c) * int(b))
    elif op == '/':
        print(int(c) // int(b))"
StarCoder,codenet,Java,Python,s476581255.py,"import sys

def bubbleSort(a):
    count = 0
    for i in range(len(a)-1):
        for j in range(len(a)-1):
            if a[j] > a[j+1]:
                a[j], a[j+1] = a[j+1], a[j]
                count += 1
    return count

n = int(input())
a = list(map(int, input().split()))
print(bubbleSort(a))
for i in range(n):
    if i < n-1:
        print(a[i], end=' ')
    else:
        print(a[i])","import sys

def bubbleSort(a):
    count = 0
    for i in range(len(a)-1):
        for j in range(len(a)-1):
            if a[j] > a[j+1]:
                a[j], a[j+1] = a[j+1], a[j]
                count += 1
    return count

n = int(input())
a = list(map(int, input().split()))
count = bubbleSort(a)
for i in range(n):
    if i < n-1:
        print(a[i], end=' ')
    else:
        print(a[i])
print(count)"
StarCoder,codenet,Java,Python,s369598583.py,"import sys

N = int(sys.stdin.readline())
count = 0
next = 10
for i in range(1, N+1):
    count += 1
    if i == next - 1:
        i = next * 10 - 1
        next *= 100
print(count)","import sys

N = int(sys.stdin.readline())
count = 0
next = 10
for i in range(1, N+1):
    count += 1
    if i == next - 1:
        i = next * 10 - 1
        next *= 100
    if i > N: break
print(count)"
